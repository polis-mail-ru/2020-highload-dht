<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (13,162 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (7,751 samples, 58.89%)</title><rect x="10.0" y="531.0" width="694.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,751 samples, 58.89%)</title><rect x="10.0" y="515.0" width="694.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,751 samples, 58.89%)</title><rect x="10.0" y="499.0" width="694.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (337 samples, 2.56%)</title><rect x="10.0" y="483.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (337 samples, 2.56%)</title><rect x="10.0" y="467.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (332 samples, 2.52%)</title><rect x="10.0" y="451.0" width="29.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (332 samples, 2.52%)</title><rect x="10.0" y="435.0" width="29.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="446.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (332 samples, 2.52%)</title><rect x="10.0" y="419.0" width="29.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.0" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.04%)</title><rect x="39.8" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.04%)</title><rect x="39.8" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.04%)</title><rect x="39.8" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (5 samples, 0.04%)</title><rect x="39.8" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (5 samples, 0.04%)</title><rect x="39.8" y="387.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="42.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService$$Lambda$67/906100538.run (7,414 samples, 56.33%)</title><rect x="40.2" y="483.0" width="664.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.2" y="494.0">ru/mail/polis/service/re1nex/AsyncTopologyReplicaService$$Lambda$67/906100538.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.lambda$handleRequest$0 (7,414 samples, 56.33%)</title><rect x="40.2" y="467.0" width="664.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.2" y="478.0">ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.lambda$handleRequest$0</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (384 samples, 2.92%)</title><rect x="40.2" y="451.0" width="34.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.2" y="462.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (384 samples, 2.92%)</title><rect x="40.2" y="435.0" width="34.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.2" y="446.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (384 samples, 2.92%)</title><rect x="40.2" y="419.0" width="34.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.2" y="430.0">ja..</text>
</g>
<g>
<title>java.lang.String (256 samples, 1.94%)</title><rect x="40.2" y="403.0" width="23.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="43.2" y="414.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (128 samples, 0.97%)</title><rect x="63.2" y="403.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.2" y="414.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.97%)</title><rect x="63.2" y="387.0" width="11.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="66.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendProxy (3,855 samples, 29.29%)</title><rect x="74.6" y="451.0" width="345.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.6" y="462.0">ru/mail/polis/service/re1nex/ApiController.send..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.put (2,796 samples, 21.24%)</title><rect x="74.6" y="435.0" width="250.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.6" y="446.0">ru/mail/polis/service/re1nex/ApiC..</text>
</g>
<g>
<title>one.nio.http.Response (174 samples, 1.32%)</title><rect x="74.6" y="419.0" width="15.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="77.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (831 samples, 6.31%)</title><rect x="90.2" y="419.0" width="74.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.2" y="430.0">one/nio/..</text>
</g>
<g>
<title>byte[] (362 samples, 2.75%)</title><rect x="90.2" y="403.0" width="32.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="93.2" y="414.0">by..</text>
</g>
<g>
<title>java.lang.String[] (292 samples, 2.22%)</title><rect x="122.7" y="403.0" width="26.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="125.7" y="414.0">j..</text>
</g>
<g>
<title>java.lang.String (177 samples, 1.34%)</title><rect x="148.9" y="403.0" width="15.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="151.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (1,203 samples, 9.14%)</title><rect x="164.7" y="419.0" width="107.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.7" y="430.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (16 samples, 0.12%)</title><rect x="164.7" y="403.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (16 samples, 0.12%)</title><rect x="164.7" y="387.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (16 samples, 0.12%)</title><rect x="164.7" y="371.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.7" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (15 samples, 0.11%)</title><rect x="164.7" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.7" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (15 samples, 0.11%)</title><rect x="164.7" y="339.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (11 samples, 0.08%)</title><rect x="164.7" y="323.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.7" y="334.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (11 samples, 0.08%)</title><rect x="164.7" y="307.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="167.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (4 samples, 0.03%)</title><rect x="165.7" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (4 samples, 0.03%)</title><rect x="165.7" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (4 samples, 0.03%)</title><rect x="165.7" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="168.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (1,187 samples, 9.02%)</title><rect x="166.2" y="403.0" width="106.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.2" y="414.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (777 samples, 5.90%)</title><rect x="166.2" y="387.0" width="69.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.2" y="398.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (777 samples, 5.90%)</title><rect x="166.2" y="371.0" width="69.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="169.2" y="382.0">java.ni..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (176 samples, 1.34%)</title><rect x="235.8" y="387.0" width="15.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (176 samples, 1.34%)</title><rect x="235.8" y="371.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (64 samples, 0.49%)</title><rect x="235.8" y="355.0" width="5.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="238.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (112 samples, 0.85%)</title><rect x="241.6" y="355.0" width="10.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="244.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (234 samples, 1.78%)</title><rect x="251.6" y="387.0" width="21.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="254.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (588 samples, 4.47%)</title><rect x="272.6" y="419.0" width="52.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.6" y="430.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (197 samples, 1.50%)</title><rect x="272.6" y="403.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (197 samples, 1.50%)</title><rect x="272.6" y="387.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (197 samples, 1.50%)</title><rect x="272.6" y="371.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (197 samples, 1.50%)</title><rect x="272.6" y="355.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.6" y="366.0"></text>
</g>
<g>
<title>byte[] (197 samples, 1.50%)</title><rect x="272.6" y="339.0" width="17.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="275.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (391 samples, 2.97%)</title><rect x="290.3" y="403.0" width="35.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.3" y="414.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (391 samples, 2.97%)</title><rect x="290.3" y="387.0" width="35.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.3" y="398.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (391 samples, 2.97%)</title><rect x="290.3" y="371.0" width="35.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="293.3" y="382.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendResponse (1,059 samples, 8.05%)</title><rect x="325.3" y="435.0" width="94.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.3" y="446.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,059 samples, 8.05%)</title><rect x="325.3" y="419.0" width="94.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.3" y="430.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,059 samples, 8.05%)</title><rect x="325.3" y="403.0" width="94.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.3" y="414.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (739 samples, 5.61%)</title><rect x="325.3" y="387.0" width="66.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.3" y="398.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (739 samples, 5.61%)</title><rect x="325.3" y="371.0" width="66.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.3" y="382.0">one/nio..</text>
</g>
<g>
<title>byte[] (739 samples, 5.61%)</title><rect x="325.3" y="355.0" width="66.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="328.3" y="366.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (320 samples, 2.43%)</title><rect x="391.6" y="387.0" width="28.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.6" y="398.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (320 samples, 2.43%)</title><rect x="391.6" y="371.0" width="28.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="394.6" y="382.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (3,175 samples, 24.12%)</title><rect x="420.2" y="451.0" width="284.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="423.2" y="462.0">ru/mail/polis/service/re1nex/ApiContro..</text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.05%)</title><rect x="420.2" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="423.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (149 samples, 1.13%)</title><rect x="420.8" y="435.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.8" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.05%)</title><rect x="420.8" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="423.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (9 samples, 0.07%)</title><rect x="421.6" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (9 samples, 0.07%)</title><rect x="421.6" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.6" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (9 samples, 0.07%)</title><rect x="421.6" y="387.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.6" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (9 samples, 0.07%)</title><rect x="422.4" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.07%)</title><rect x="422.4" y="403.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="425.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (50 samples, 0.38%)</title><rect x="423.2" y="419.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.2" y="430.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (7 samples, 0.05%)</title><rect x="423.2" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.2" y="414.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (7 samples, 0.05%)</title><rect x="423.2" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.2" y="398.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (7 samples, 0.05%)</title><rect x="423.2" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.2" y="382.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.05%)</title><rect x="423.2" y="355.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="426.2" y="366.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (43 samples, 0.33%)</title><rect x="423.8" y="403.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.8" y="414.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (43 samples, 0.33%)</title><rect x="423.8" y="387.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.8" y="398.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (43 samples, 0.33%)</title><rect x="423.8" y="371.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.8" y="382.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (39 samples, 0.30%)</title><rect x="423.8" y="355.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.8" y="366.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (35 samples, 0.27%)</title><rect x="423.8" y="339.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.8" y="350.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (35 samples, 0.27%)</title><rect x="423.8" y="323.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="426.8" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (35 samples, 0.27%)</title><rect x="423.8" y="307.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (35 samples, 0.27%)</title><rect x="423.8" y="291.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (35 samples, 0.27%)</title><rect x="423.8" y="275.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.8" y="286.0"></text>
</g>
<g>
<title>sun.security.provider.MD5 (9 samples, 0.07%)</title><rect x="423.8" y="259.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="426.8" y="270.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (26 samples, 0.20%)</title><rect x="424.6" y="259.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.6" y="270.0"></text>
</g>
<g>
<title>int[] (18 samples, 0.14%)</title><rect x="424.6" y="243.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="427.6" y="254.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (8 samples, 0.06%)</title><rect x="426.3" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.3" y="254.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.06%)</title><rect x="426.3" y="227.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="429.3" y="238.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (4 samples, 0.03%)</title><rect x="427.0" y="339.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="430.0" y="350.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (4 samples, 0.03%)</title><rect x="427.3" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.3" y="366.0"></text>
</g>
<g>
<title>java/security/Provider.getService (4 samples, 0.03%)</title><rect x="427.3" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.03%)</title><rect x="427.3" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.3" y="334.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (4 samples, 0.03%)</title><rect x="427.3" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="427.3" y="291.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="430.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (72 samples, 0.55%)</title><rect x="427.7" y="419.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.7" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (20 samples, 0.15%)</title><rect x="427.7" y="403.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.7" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (3 samples, 0.02%)</title><rect x="427.7" y="387.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="430.7" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (17 samples, 0.13%)</title><rect x="428.0" y="387.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (9 samples, 0.07%)</title><rect x="428.0" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="431.0" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (9 samples, 0.07%)</title><rect x="428.0" y="355.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="431.0" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (8 samples, 0.06%)</title><rect x="428.8" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.8" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (8 samples, 0.06%)</title><rect x="428.8" y="355.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="431.8" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (4 samples, 0.03%)</title><rect x="429.5" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.5" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (4 samples, 0.03%)</title><rect x="429.5" y="387.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="432.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (14 samples, 0.11%)</title><rect x="429.8" y="403.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.8" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (14 samples, 0.11%)</title><rect x="429.8" y="387.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="432.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (34 samples, 0.26%)</title><rect x="431.1" y="403.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (34 samples, 0.26%)</title><rect x="431.1" y="387.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (34 samples, 0.26%)</title><rect x="431.1" y="371.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="434.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponses (2,837 samples, 21.55%)</title><rect x="434.1" y="435.0" width="254.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="437.1" y="446.0">ru/mail/polis/service/re1nex/ApiCo..</text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.19%)</title><rect x="434.1" y="419.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.19%)</title><rect x="434.1" y="403.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (25 samples, 0.19%)</title><rect x="434.1" y="387.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="437.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (25 samples, 0.19%)</title><rect x="434.1" y="371.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.19%)</title><rect x="434.1" y="355.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.19%)</title><rect x="434.1" y="339.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="437.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (9 samples, 0.07%)</title><rect x="436.4" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="439.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (9 samples, 0.07%)</title><rect x="436.4" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.4" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (9 samples, 0.07%)</title><rect x="436.4" y="387.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="439.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.proxy (2,803 samples, 21.30%)</title><rect x="437.2" y="419.0" width="251.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.2" y="430.0">ru/mail/polis/service/re1nex/ApiC..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,803 samples, 21.30%)</title><rect x="437.2" y="403.0" width="251.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.2" y="414.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,803 samples, 21.30%)</title><rect x="437.2" y="387.0" width="251.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.2" y="398.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (8 samples, 0.06%)</title><rect x="437.2" y="371.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="440.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,536 samples, 19.27%)</title><rect x="437.9" y="371.0" width="227.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.9" y="382.0">one/nio/http/HttpClient$Respon..</text>
</g>
<g>
<title>byte[] (1,502 samples, 11.41%)</title><rect x="437.9" y="355.0" width="134.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="440.9" y="366.0">byte[]</text>
</g>
<g>
<title>byte[] (1,034 samples, 7.86%)</title><rect x="572.6" y="355.0" width="92.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="575.6" y="366.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (160 samples, 1.22%)</title><rect x="665.3" y="371.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.3" y="382.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="665.3" y="355.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="668.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.05%)</title><rect x="665.5" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.05%)</title><rect x="665.5" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="665.5" y="323.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="668.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="665.8" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.8" y="334.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="665.8" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="668.8" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.05%)</title><rect x="666.2" y="355.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="669.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (129 samples, 0.98%)</title><rect x="666.8" y="355.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (129 samples, 0.98%)</title><rect x="666.8" y="339.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.8" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (129 samples, 0.98%)</title><rect x="666.8" y="323.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.8" y="334.0"></text>
</g>
<g>
<title>char[] (100 samples, 0.76%)</title><rect x="666.8" y="307.0" width="9.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="669.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.14%)</title><rect x="675.8" y="307.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="678.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.08%)</title><rect x="677.4" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.08%)</title><rect x="677.4" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (11 samples, 0.08%)</title><rect x="677.4" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.4" y="286.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.08%)</title><rect x="677.4" y="259.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="680.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.06%)</title><rect x="678.4" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.06%)</title><rect x="678.4" y="339.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="681.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.05%)</title><rect x="679.1" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.05%)</title><rect x="679.1" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.05%)</title><rect x="679.1" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.03%)</title><rect x="679.1" y="307.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="682.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (86 samples, 0.65%)</title><rect x="679.6" y="371.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (86 samples, 0.65%)</title><rect x="679.6" y="355.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.6" y="366.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.65%)</title><rect x="679.6" y="339.0" width="7.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="682.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (11 samples, 0.08%)</title><rect x="687.3" y="371.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.08%)</title><rect x="687.3" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.08%)</title><rect x="687.3" y="339.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.3" y="350.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.03%)</title><rect x="687.3" y="323.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="690.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.05%)</title><rect x="687.7" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.7" y="334.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.05%)</title><rect x="687.7" y="307.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="690.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.put (114 samples, 0.87%)</title><rect x="688.5" y="435.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.5" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.07%)</title><rect x="688.5" y="419.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="691.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (42 samples, 0.32%)</title><rect x="689.3" y="419.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.3" y="430.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.14%)</title><rect x="689.3" y="403.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="692.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.09%)</title><rect x="690.9" y="403.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="693.9" y="414.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.09%)</title><rect x="692.0" y="403.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="695.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (46 samples, 0.35%)</title><rect x="693.1" y="419.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (45 samples, 0.34%)</title><rect x="693.1" y="403.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.19%)</title><rect x="693.1" y="387.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.19%)</title><rect x="693.1" y="371.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="696.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (11 samples, 0.08%)</title><rect x="695.4" y="387.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (11 samples, 0.08%)</title><rect x="695.4" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (4 samples, 0.03%)</title><rect x="695.4" y="355.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="698.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (7 samples, 0.05%)</title><rect x="695.7" y="355.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="698.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (9 samples, 0.07%)</title><rect x="696.4" y="387.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="699.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (17 samples, 0.13%)</title><rect x="697.2" y="419.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.04%)</title><rect x="697.2" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.04%)</title><rect x="697.2" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.04%)</title><rect x="697.2" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.04%)</title><rect x="697.2" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.2" y="366.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="697.2" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="700.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.09%)</title><rect x="697.6" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.09%)</title><rect x="697.6" y="387.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.09%)</title><rect x="697.6" y="371.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="700.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendResponse (20 samples, 0.15%)</title><rect x="698.7" y="435.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 0.15%)</title><rect x="698.7" y="419.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 0.15%)</title><rect x="698.7" y="403.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.11%)</title><rect x="698.7" y="387.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.11%)</title><rect x="698.7" y="371.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.7" y="382.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.11%)</title><rect x="698.7" y="355.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="701.7" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 0.04%)</title><rect x="700.1" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.1" y="398.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 0.04%)</title><rect x="700.1" y="371.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="703.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (35 samples, 0.27%)</title><rect x="700.5" y="435.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (35 samples, 0.27%)</title><rect x="700.5" y="419.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (35 samples, 0.27%)</title><rect x="700.5" y="403.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (35 samples, 0.27%)</title><rect x="700.5" y="387.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.5" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.27%)</title><rect x="700.5" y="371.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.5" y="382.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.27%)</title><rect x="700.5" y="355.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="703.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergePutDeleteResponses (14 samples, 0.11%)</title><rect x="703.6" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.10%)</title><rect x="703.7" y="419.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.7" y="430.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.05%)</title><rect x="703.7" y="403.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="706.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.02%)</title><rect x="704.4" y="403.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="707.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="704.6" y="403.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="707.6" y="414.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,411 samples, 41.11%)</title><rect x="704.9" y="531.0" width="485.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.9" y="542.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (257 samples, 1.95%)</title><rect x="704.9" y="515.0" width="23.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.9" y="526.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (257 samples, 1.95%)</title><rect x="704.9" y="499.0" width="23.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="707.9" y="510.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (5,154 samples, 39.16%)</title><rect x="727.9" y="515.0" width="462.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.9" y="526.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,154 samples, 39.16%)</title><rect x="727.9" y="499.0" width="462.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.9" y="510.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,154 samples, 39.16%)</title><rect x="727.9" y="483.0" width="462.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.9" y="494.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (947 samples, 7.19%)</title><rect x="727.9" y="467.0" width="84.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.9" y="478.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (947 samples, 7.19%)</title><rect x="727.9" y="451.0" width="84.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.9" y="462.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_handleRequest.handleRequest (571 samples, 4.34%)</title><rect x="727.9" y="435.0" width="51.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.9" y="446.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (315 samples, 2.39%)</title><rect x="727.9" y="419.0" width="28.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.9" y="430.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (315 samples, 2.39%)</title><rect x="727.9" y="403.0" width="28.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.9" y="414.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (315 samples, 2.39%)</title><rect x="727.9" y="387.0" width="28.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.9" y="398.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (315 samples, 2.39%)</title><rect x="727.9" y="371.0" width="28.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.9" y="382.0">ja..</text>
</g>
<g>
<title>java.lang.String (161 samples, 1.22%)</title><rect x="727.9" y="355.0" width="14.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="730.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (154 samples, 1.17%)</title><rect x="742.4" y="355.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.4" y="366.0"></text>
</g>
<g>
<title>byte[] (154 samples, 1.17%)</title><rect x="742.4" y="339.0" width="13.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="745.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.handleRequest (256 samples, 1.94%)</title><rect x="756.2" y="419.0" width="22.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.2" y="430.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/842951970.linkToTargetMethod (234 samples, 1.78%)</title><rect x="756.2" y="403.0" width="21.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (234 samples, 1.78%)</title><rect x="756.2" y="387.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService$$Lambda$67/906100538.get$Lambda (234 samples, 1.78%)</title><rect x="756.2" y="371.0" width="21.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.2" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncTopologyReplicaService$$Lambda$67 (234 samples, 1.78%)</title><rect x="756.2" y="355.0" width="21.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="759.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseAsyncService.executeTask (22 samples, 0.17%)</title><rect x="777.2" y="403.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (16 samples, 0.12%)</title><rect x="777.2" y="387.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.2" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (16 samples, 0.12%)</title><rect x="777.2" y="371.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.2" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (16 samples, 0.12%)</title><rect x="777.2" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.2" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (16 samples, 0.12%)</title><rect x="777.2" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.2" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (16 samples, 0.12%)</title><rect x="777.2" y="323.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.2" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (16 samples, 0.12%)</title><rect x="777.2" y="307.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.2" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (16 samples, 0.12%)</title><rect x="777.2" y="291.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.2" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (16 samples, 0.12%)</title><rect x="777.2" y="275.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.2" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (16 samples, 0.12%)</title><rect x="777.2" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.2" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (16 samples, 0.12%)</title><rect x="777.2" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.2" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (14 samples, 0.11%)</title><rect x="777.2" y="227.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.2" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (14 samples, 0.11%)</title><rect x="777.2" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.2" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (13 samples, 0.10%)</title><rect x="777.2" y="195.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.2" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (13 samples, 0.10%)</title><rect x="777.2" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.2" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (9 samples, 0.07%)</title><rect x="777.2" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.2" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (9 samples, 0.07%)</title><rect x="777.2" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.2" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (9 samples, 0.07%)</title><rect x="777.2" y="131.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.2" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (9 samples, 0.07%)</title><rect x="777.2" y="115.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (9 samples, 0.07%)</title><rect x="777.2" y="99.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.2" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.05%)</title><rect x="777.4" y="83.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.05%)</title><rect x="777.4" y="67.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="777.6" y="51.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.6" y="62.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="777.6" y="35.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="780.6" y="46.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.03%)</title><rect x="778.0" y="163.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.0" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.03%)</title><rect x="778.0" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.0" y="158.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="778.0" y="131.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="781.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.05%)</title><rect x="778.6" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.05%)</title><rect x="778.6" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.05%)</title><rect x="778.6" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.05%)</title><rect x="778.6" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.05%)</title><rect x="778.6" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.05%)</title><rect x="778.6" y="307.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="781.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (376 samples, 2.86%)</title><rect x="779.1" y="435.0" width="33.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.1" y="446.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (376 samples, 2.86%)</title><rect x="779.1" y="419.0" width="33.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.1" y="430.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (376 samples, 2.86%)</title><rect x="779.1" y="403.0" width="33.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.1" y="414.0">ja..</text>
</g>
<g>
<title>java.lang.String (189 samples, 1.44%)</title><rect x="779.1" y="387.0" width="17.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="782.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (187 samples, 1.42%)</title><rect x="796.1" y="387.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.1" y="398.0"></text>
</g>
<g>
<title>byte[] (187 samples, 1.42%)</title><rect x="796.1" y="371.0" width="16.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="799.1" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,809 samples, 13.74%)</title><rect x="812.8" y="467.0" width="162.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.8" y="478.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one.nio.http.Request (295 samples, 2.24%)</title><rect x="812.8" y="451.0" width="26.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="815.8" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (622 samples, 4.73%)</title><rect x="839.3" y="451.0" width="55.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.3" y="462.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (622 samples, 4.73%)</title><rect x="839.3" y="435.0" width="55.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="842.3" y="446.0">java...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (892 samples, 6.78%)</title><rect x="895.0" y="451.0" width="80.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.0" y="462.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (892 samples, 6.78%)</title><rect x="895.0" y="435.0" width="80.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.0" y="446.0">one/nio/u..</text>
</g>
<g>
<title>char[] (489 samples, 3.72%)</title><rect x="895.0" y="419.0" width="43.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="898.0" y="430.0">char[]</text>
</g>
<g>
<title>java.lang.String (174 samples, 1.32%)</title><rect x="938.9" y="419.0" width="15.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="941.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (229 samples, 1.74%)</title><rect x="954.5" y="419.0" width="20.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (229 samples, 1.74%)</title><rect x="954.5" y="403.0" width="20.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="957.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (229 samples, 1.74%)</title><rect x="954.5" y="387.0" width="20.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.5" y="398.0"></text>
</g>
<g>
<title>byte[] (229 samples, 1.74%)</title><rect x="954.5" y="371.0" width="20.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="957.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (161 samples, 1.22%)</title><rect x="975.0" y="467.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="978.0" y="478.0"></text>
</g>
<g>
<title>byte[] (161 samples, 1.22%)</title><rect x="975.0" y="451.0" width="14.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="978.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (333 samples, 2.53%)</title><rect x="989.4" y="467.0" width="29.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.4" y="478.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (333 samples, 2.53%)</title><rect x="989.4" y="451.0" width="29.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="992.4" y="462.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (333 samples, 2.53%)</title><rect x="989.4" y="435.0" width="29.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.4" y="446.0">ja..</text>
</g>
<g>
<title>java.lang.String (158 samples, 1.20%)</title><rect x="989.4" y="419.0" width="14.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="992.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (175 samples, 1.33%)</title><rect x="1003.6" y="419.0" width="15.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.6" y="430.0"></text>
</g>
<g>
<title>byte[] (175 samples, 1.33%)</title><rect x="1003.6" y="403.0" width="15.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1006.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,904 samples, 14.47%)</title><rect x="1019.3" y="467.0" width="170.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.3" y="478.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,904 samples, 14.47%)</title><rect x="1019.3" y="451.0" width="170.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.3" y="462.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (902 samples, 6.85%)</title><rect x="1019.3" y="435.0" width="80.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1022.3" y="446.0">char[]</text>
</g>
<g>
<title>java.lang.String (414 samples, 3.15%)</title><rect x="1100.2" y="435.0" width="37.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1103.2" y="446.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (588 samples, 4.47%)</title><rect x="1137.3" y="435.0" width="52.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.3" y="446.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (588 samples, 4.47%)</title><rect x="1137.3" y="419.0" width="52.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.3" y="430.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (588 samples, 4.47%)</title><rect x="1137.3" y="403.0" width="52.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.3" y="414.0">java/..</text>
</g>
<g>
<title>byte[] (588 samples, 4.47%)</title><rect x="1137.3" y="387.0" width="52.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1140.3" y="398.0">byte[]</text>
</g>
</g>
</svg>
