<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="453"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="453"> </text>
<g id="frames">
<g>
<title>all (20,399 samples, 100.00%)</title><rect x="10.0" y="419.0" width="1180.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="430.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (13,202 samples, 64.72%)</title><rect x="10.0" y="403.0" width="763.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="414.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13,202 samples, 64.72%)</title><rect x="10.0" y="387.0" width="763.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="398.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13,202 samples, 64.72%)</title><rect x="10.0" y="371.0" width="763.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (191 samples, 0.94%)</title><rect x="10.0" y="355.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (191 samples, 0.94%)</title><rect x="10.0" y="339.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (191 samples, 0.94%)</title><rect x="10.0" y="323.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (191 samples, 0.94%)</title><rect x="10.0" y="307.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (191 samples, 0.94%)</title><rect x="10.0" y="291.0" width="11.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService$$Lambda$67/906100538.run (13,011 samples, 63.78%)</title><rect x="21.0" y="355.0" width="752.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.0" y="366.0">ru/mail/polis/service/re1nex/AsyncTopologyReplicaService$$Lambda$67/906100538.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.lambda$handleRequest$0 (13,011 samples, 63.78%)</title><rect x="21.0" y="339.0" width="752.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.0" y="350.0">ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.lambda$handleRequest$0</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (278 samples, 1.36%)</title><rect x="21.0" y="323.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (278 samples, 1.36%)</title><rect x="21.0" y="307.0" width="16.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (278 samples, 1.36%)</title><rect x="21.0" y="291.0" width="16.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (203 samples, 1.00%)</title><rect x="21.0" y="275.0" width="11.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="24.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.37%)</title><rect x="32.8" y="275.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.8" y="286.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.37%)</title><rect x="32.8" y="259.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="35.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendProxy (6,678 samples, 32.74%)</title><rect x="37.1" y="323.0" width="386.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.1" y="334.0">ru/mail/polis/service/re1nex/ApiController.sendProxy</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.get (5,764 samples, 28.26%)</title><rect x="37.1" y="307.0" width="333.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.1" y="318.0">ru/mail/polis/service/re1nex/ApiController.get</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2109302251.linkToTargetMethod (393 samples, 1.93%)</title><rect x="37.1" y="291.0" width="22.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.1" y="302.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1117852348.invoke (393 samples, 1.93%)</title><rect x="37.1" y="275.0" width="22.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.1" y="286.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (393 samples, 1.93%)</title><rect x="37.1" y="259.0" width="22.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.1" y="270.0">j..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (149 samples, 0.73%)</title><rect x="37.1" y="243.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (149 samples, 0.73%)</title><rect x="37.1" y="227.0" width="8.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="40.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (244 samples, 1.20%)</title><rect x="45.7" y="243.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (244 samples, 1.20%)</title><rect x="45.7" y="227.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.7" y="238.0"></text>
</g>
<g>
<title>byte[] (244 samples, 1.20%)</title><rect x="45.7" y="211.0" width="14.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="48.7" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (125 samples, 0.61%)</title><rect x="59.9" y="291.0" width="7.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="62.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (499 samples, 2.45%)</title><rect x="67.1" y="291.0" width="28.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.1" y="302.0">on..</text>
</g>
<g>
<title>byte[] (213 samples, 1.04%)</title><rect x="67.1" y="275.0" width="12.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="70.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (172 samples, 0.84%)</title><rect x="79.4" y="275.0" width="10.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="82.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.56%)</title><rect x="89.4" y="275.0" width="6.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="92.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (4,207 samples, 20.62%)</title><rect x="96.0" y="291.0" width="243.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.0" y="302.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (592 samples, 2.90%)</title><rect x="96.0" y="275.0" width="34.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.0" y="286.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (105 samples, 0.51%)</title><rect x="96.0" y="259.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (105 samples, 0.51%)</title><rect x="96.0" y="243.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.0" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (105 samples, 0.51%)</title><rect x="96.0" y="227.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (105 samples, 0.51%)</title><rect x="96.0" y="211.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (105 samples, 0.51%)</title><rect x="96.0" y="195.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (105 samples, 0.51%)</title><rect x="96.0" y="179.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$113/1252728514.getAsBoolean (105 samples, 0.51%)</title><rect x="96.0" y="163.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (105 samples, 0.51%)</title><rect x="96.0" y="147.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (105 samples, 0.51%)</title><rect x="96.0" y="131.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (105 samples, 0.51%)</title><rect x="96.0" y="115.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$74/92664633.apply (105 samples, 0.51%)</title><rect x="96.0" y="99.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (105 samples, 0.51%)</title><rect x="96.0" y="83.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.0" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (105 samples, 0.51%)</title><rect x="96.0" y="67.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="99.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$128/1449907143.apply (487 samples, 2.39%)</title><rect x="102.0" y="259.0" width="28.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.0" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (487 samples, 2.39%)</title><rect x="102.0" y="243.0" width="28.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.0" y="254.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (487 samples, 2.39%)</title><rect x="102.0" y="227.0" width="28.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.0" y="238.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (487 samples, 2.39%)</title><rect x="102.0" y="211.0" width="28.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="105.0" y="222.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (3,615 samples, 17.72%)</title><rect x="130.2" y="275.0" width="209.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.2" y="286.0">ru/mail/polis/dao/re1nex/Ne..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,534 samples, 7.52%)</title><rect x="130.2" y="259.0" width="88.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.2" y="270.0">com/google..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (84 samples, 0.41%)</title><rect x="130.2" y="243.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="133.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,450 samples, 7.11%)</title><rect x="135.1" y="243.0" width="83.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.1" y="254.0">com/googl..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (122 samples, 0.60%)</title><rect x="135.1" y="227.0" width="7.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="138.1" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (114 samples, 0.56%)</title><rect x="142.1" y="227.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.1" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (114 samples, 0.56%)</title><rect x="142.1" y="211.0" width="6.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="145.1" y="222.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (139 samples, 0.68%)</title><rect x="148.7" y="227.0" width="8.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="151.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (109 samples, 0.53%)</title><rect x="156.8" y="227.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (109 samples, 0.53%)</title><rect x="156.8" y="211.0" width="6.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="159.8" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (966 samples, 4.74%)</title><rect x="163.1" y="227.0" width="55.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.1" y="238.0">java/..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (966 samples, 4.74%)</title><rect x="163.1" y="211.0" width="55.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.1" y="222.0">java/..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (966 samples, 4.74%)</title><rect x="163.1" y="195.0" width="55.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.1" y="206.0">java/..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (108 samples, 0.53%)</title><rect x="163.1" y="179.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$113/1252728514.getAsBoolean (108 samples, 0.53%)</title><rect x="163.1" y="163.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (108 samples, 0.53%)</title><rect x="163.1" y="147.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (108 samples, 0.53%)</title><rect x="163.1" y="131.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (108 samples, 0.53%)</title><rect x="163.1" y="115.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$74/92664633.apply (108 samples, 0.53%)</title><rect x="163.1" y="99.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (108 samples, 0.53%)</title><rect x="163.1" y="83.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (108 samples, 0.53%)</title><rect x="163.1" y="67.0" width="6.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="166.1" y="78.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (858 samples, 4.21%)</title><rect x="169.3" y="179.0" width="49.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.3" y="190.0">java/..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (196 samples, 0.96%)</title><rect x="169.3" y="163.0" width="11.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="172.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (140 samples, 0.69%)</title><rect x="180.6" y="163.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (140 samples, 0.69%)</title><rect x="180.6" y="147.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$105/2098105718.get$Lambda (73 samples, 0.36%)</title><rect x="180.6" y="131.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.6" y="142.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$105 (73 samples, 0.36%)</title><rect x="180.6" y="115.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="183.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$113/1252728514.get$Lambda (67 samples, 0.33%)</title><rect x="184.9" y="131.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.9" y="142.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$113 (67 samples, 0.33%)</title><rect x="184.9" y="115.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="187.9" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (107 samples, 0.52%)</title><rect x="188.7" y="163.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (107 samples, 0.52%)</title><rect x="188.7" y="147.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.7" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (107 samples, 0.52%)</title><rect x="188.7" y="131.0" width="6.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="191.7" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (415 samples, 2.03%)</title><rect x="194.9" y="163.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.9" y="174.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (415 samples, 2.03%)</title><rect x="194.9" y="147.0" width="24.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="197.9" y="158.0">j..</text>
</g>
<g>
<title>java.util.ArrayList (101 samples, 0.50%)</title><rect x="218.9" y="259.0" width="5.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="221.9" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (142 samples, 0.70%)</title><rect x="224.8" y="259.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (142 samples, 0.70%)</title><rect x="224.8" y="243.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.8" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (142 samples, 0.70%)</title><rect x="224.8" y="227.0" width="8.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="227.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (110 samples, 0.54%)</title><rect x="233.0" y="259.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (110 samples, 0.54%)</title><rect x="233.0" y="243.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="236.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (16 samples, 0.08%)</title><rect x="239.4" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (16 samples, 0.08%)</title><rect x="239.4" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (16 samples, 0.08%)</title><rect x="239.4" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.4" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (15 samples, 0.07%)</title><rect x="239.4" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.4" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (15 samples, 0.07%)</title><rect x="239.4" y="195.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.4" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (11 samples, 0.05%)</title><rect x="239.4" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.4" y="190.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (11 samples, 0.05%)</title><rect x="239.4" y="163.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="242.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (228 samples, 1.12%)</title><rect x="240.3" y="259.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.3" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (107 samples, 0.52%)</title><rect x="240.3" y="243.0" width="6.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="243.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (121 samples, 0.59%)</title><rect x="246.5" y="243.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (121 samples, 0.59%)</title><rect x="246.5" y="227.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (121 samples, 0.59%)</title><rect x="246.5" y="211.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.5" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (121 samples, 0.59%)</title><rect x="246.5" y="195.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (121 samples, 0.59%)</title><rect x="246.5" y="179.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (121 samples, 0.59%)</title><rect x="246.5" y="163.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (121 samples, 0.59%)</title><rect x="246.5" y="147.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$113/1252728514.getAsBoolean (121 samples, 0.59%)</title><rect x="246.5" y="131.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (121 samples, 0.59%)</title><rect x="246.5" y="115.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (121 samples, 0.59%)</title><rect x="246.5" y="99.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.5" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (121 samples, 0.59%)</title><rect x="246.5" y="83.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$74/92664633.apply (121 samples, 0.59%)</title><rect x="246.5" y="67.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (121 samples, 0.59%)</title><rect x="246.5" y="51.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.5" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (121 samples, 0.59%)</title><rect x="246.5" y="35.0" width="7.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="249.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (1,484 samples, 7.27%)</title><rect x="253.5" y="259.0" width="85.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.5" y="270.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/Collection.stream (428 samples, 2.10%)</title><rect x="253.5" y="243.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.5" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (166 samples, 0.81%)</title><rect x="253.5" y="227.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (166 samples, 0.81%)</title><rect x="253.5" y="211.0" width="9.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="256.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (262 samples, 1.28%)</title><rect x="263.1" y="227.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="266.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (262 samples, 1.28%)</title><rect x="263.1" y="211.0" width="15.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="266.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (79 samples, 0.39%)</title><rect x="278.2" y="243.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (79 samples, 0.39%)</title><rect x="278.2" y="227.0" width="4.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="281.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (237 samples, 1.16%)</title><rect x="282.8" y="243.0" width="13.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (237 samples, 1.16%)</title><rect x="282.8" y="227.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (237 samples, 1.16%)</title><rect x="282.8" y="211.0" width="13.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (237 samples, 1.16%)</title><rect x="282.8" y="195.0" width="13.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="285.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (431 samples, 2.11%)</title><rect x="296.5" y="243.0" width="24.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.5" y="254.0">j..</text>
</g>
<g>
<title>java/util/Spliterators.iterator (117 samples, 0.57%)</title><rect x="296.5" y="227.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.5" y="238.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (117 samples, 0.57%)</title><rect x="296.5" y="211.0" width="6.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="299.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (314 samples, 1.54%)</title><rect x="303.3" y="227.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.33%)</title><rect x="303.3" y="211.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.33%)</title><rect x="303.3" y="195.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$89/1934011524.get$Lambda (67 samples, 0.33%)</title><rect x="303.3" y="179.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.3" y="190.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$89 (67 samples, 0.33%)</title><rect x="303.3" y="163.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="306.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (247 samples, 1.21%)</title><rect x="307.2" y="211.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.2" y="222.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (247 samples, 1.21%)</title><rect x="307.2" y="195.0" width="14.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="310.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (309 samples, 1.51%)</title><rect x="321.4" y="243.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (309 samples, 1.51%)</title><rect x="321.4" y="227.0" width="17.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="324.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (165 samples, 0.81%)</title><rect x="339.3" y="291.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.3" y="302.0"></text>
</g>
<g>
<title>byte[] (165 samples, 0.81%)</title><rect x="339.3" y="275.0" width="9.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="342.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (375 samples, 1.84%)</title><rect x="348.9" y="291.0" width="21.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.9" y="302.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (116 samples, 0.57%)</title><rect x="348.9" y="275.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (116 samples, 0.57%)</title><rect x="348.9" y="259.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (116 samples, 0.57%)</title><rect x="348.9" y="243.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (116 samples, 0.57%)</title><rect x="348.9" y="227.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.9" y="238.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.57%)</title><rect x="348.9" y="211.0" width="6.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="351.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (259 samples, 1.27%)</title><rect x="355.6" y="275.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (259 samples, 1.27%)</title><rect x="355.6" y="259.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (259 samples, 1.27%)</title><rect x="355.6" y="243.0" width="15.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="358.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendResponse (914 samples, 4.48%)</title><rect x="370.6" y="307.0" width="52.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.6" y="318.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (914 samples, 4.48%)</title><rect x="370.6" y="291.0" width="52.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.6" y="302.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (914 samples, 4.48%)</title><rect x="370.6" y="275.0" width="52.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.6" y="286.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (700 samples, 3.43%)</title><rect x="370.6" y="259.0" width="40.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.6" y="270.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (700 samples, 3.43%)</title><rect x="370.6" y="243.0" width="40.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.6" y="254.0">one..</text>
</g>
<g>
<title>byte[] (700 samples, 3.43%)</title><rect x="370.6" y="227.0" width="40.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="373.6" y="238.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (214 samples, 1.05%)</title><rect x="411.0" y="259.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.0" y="270.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (214 samples, 1.05%)</title><rect x="411.0" y="243.0" width="12.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="414.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (6,055 samples, 29.68%)</title><rect x="423.4" y="323.0" width="350.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.4" y="334.0">ru/mail/polis/service/re1nex/ApiController.sendR..</text>
</g>
<g>
<title>java.util.ArrayList (30 samples, 0.15%)</title><rect x="423.4" y="307.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="426.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (130 samples, 0.64%)</title><rect x="425.2" y="307.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (10 samples, 0.05%)</title><rect x="425.4" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.4" y="302.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (10 samples, 0.05%)</title><rect x="425.4" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.4" y="286.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (10 samples, 0.05%)</title><rect x="425.4" y="259.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.4" y="270.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (10 samples, 0.05%)</title><rect x="425.4" y="243.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.4" y="254.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (9 samples, 0.04%)</title><rect x="425.4" y="227.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.4" y="238.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (7 samples, 0.03%)</title><rect x="425.4" y="211.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.4" y="222.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (7 samples, 0.03%)</title><rect x="425.4" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.4" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (7 samples, 0.03%)</title><rect x="425.4" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (7 samples, 0.03%)</title><rect x="425.4" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (7 samples, 0.03%)</title><rect x="425.4" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.4" y="158.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (5 samples, 0.02%)</title><rect x="425.5" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (116 samples, 0.57%)</title><rect x="426.0" y="291.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.0" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (15 samples, 0.07%)</title><rect x="426.0" y="275.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.0" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (15 samples, 0.07%)</title><rect x="426.0" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (12 samples, 0.06%)</title><rect x="426.0" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.0" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (12 samples, 0.06%)</title><rect x="426.0" y="227.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="429.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (31 samples, 0.15%)</title><rect x="426.9" y="275.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.9" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (31 samples, 0.15%)</title><rect x="426.9" y="259.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="429.9" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (69 samples, 0.34%)</title><rect x="428.7" y="275.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (69 samples, 0.34%)</title><rect x="428.7" y="259.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.7" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (69 samples, 0.34%)</title><rect x="428.7" y="243.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="431.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.get (1,134 samples, 5.56%)</title><rect x="432.7" y="307.0" width="65.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.7" y="318.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2109302251.linkToTargetMethod (26 samples, 0.13%)</title><rect x="432.7" y="291.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1117852348.invoke (26 samples, 0.13%)</title><rect x="432.7" y="275.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.13%)</title><rect x="432.7" y="259.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.05%)</title><rect x="432.7" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.05%)</title><rect x="432.7" y="227.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="435.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.07%)</title><rect x="433.3" y="243.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.07%)</title><rect x="433.3" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.3" y="238.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.07%)</title><rect x="433.3" y="211.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="436.3" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (29 samples, 0.14%)</title><rect x="434.2" y="291.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="437.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (59 samples, 0.29%)</title><rect x="435.9" y="291.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.9" y="302.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.14%)</title><rect x="435.9" y="275.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="438.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 0.09%)</title><rect x="437.5" y="275.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="440.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.05%)</title><rect x="438.6" y="275.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="441.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (902 samples, 4.42%)</title><rect x="439.3" y="291.0" width="52.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.3" y="302.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (157 samples, 0.77%)</title><rect x="439.3" y="275.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (35 samples, 0.17%)</title><rect x="439.3" y="259.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (35 samples, 0.17%)</title><rect x="439.3" y="243.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (35 samples, 0.17%)</title><rect x="439.3" y="227.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (35 samples, 0.17%)</title><rect x="439.3" y="211.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (35 samples, 0.17%)</title><rect x="439.3" y="195.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (35 samples, 0.17%)</title><rect x="439.3" y="179.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$113/1252728514.getAsBoolean (35 samples, 0.17%)</title><rect x="439.3" y="163.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (35 samples, 0.17%)</title><rect x="439.3" y="147.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (35 samples, 0.17%)</title><rect x="439.3" y="131.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.3" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (35 samples, 0.17%)</title><rect x="439.3" y="115.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$74/92664633.apply (35 samples, 0.17%)</title><rect x="439.3" y="99.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (35 samples, 0.17%)</title><rect x="439.3" y="83.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (35 samples, 0.17%)</title><rect x="439.3" y="67.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="442.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$128/1449907143.apply (122 samples, 0.60%)</title><rect x="441.3" y="259.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (122 samples, 0.60%)</title><rect x="441.3" y="243.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.3" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (122 samples, 0.60%)</title><rect x="441.3" y="227.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (122 samples, 0.60%)</title><rect x="441.3" y="211.0" width="7.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="444.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (745 samples, 3.65%)</title><rect x="448.4" y="275.0" width="43.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.4" y="286.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (325 samples, 1.59%)</title><rect x="448.4" y="259.0" width="18.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.4" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (27 samples, 0.13%)</title><rect x="448.4" y="243.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="451.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (298 samples, 1.46%)</title><rect x="449.9" y="243.0" width="17.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.9" y="254.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (34 samples, 0.17%)</title><rect x="449.9" y="227.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="452.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (16 samples, 0.08%)</title><rect x="451.9" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.9" y="238.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (16 samples, 0.08%)</title><rect x="451.9" y="211.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="454.9" y="222.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (31 samples, 0.15%)</title><rect x="452.8" y="227.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="455.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (27 samples, 0.13%)</title><rect x="454.6" y="227.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.6" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.13%)</title><rect x="454.6" y="211.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="457.6" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (190 samples, 0.93%)</title><rect x="456.2" y="227.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (190 samples, 0.93%)</title><rect x="456.2" y="211.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (190 samples, 0.93%)</title><rect x="456.2" y="195.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (21 samples, 0.10%)</title><rect x="456.2" y="179.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$113/1252728514.getAsBoolean (21 samples, 0.10%)</title><rect x="456.2" y="163.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.2" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (21 samples, 0.10%)</title><rect x="456.2" y="147.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (21 samples, 0.10%)</title><rect x="456.2" y="131.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (21 samples, 0.10%)</title><rect x="456.2" y="115.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$74/92664633.apply (21 samples, 0.10%)</title><rect x="456.2" y="99.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="459.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (21 samples, 0.10%)</title><rect x="456.2" y="83.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.2" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (21 samples, 0.10%)</title><rect x="456.2" y="67.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="459.2" y="78.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (169 samples, 0.83%)</title><rect x="457.4" y="179.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.4" y="190.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (41 samples, 0.20%)</title><rect x="457.4" y="163.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="460.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.18%)</title><rect x="459.8" y="163.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.18%)</title><rect x="459.8" y="147.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$105/2098105718.get$Lambda (18 samples, 0.09%)</title><rect x="459.8" y="131.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.8" y="142.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$105 (18 samples, 0.09%)</title><rect x="459.8" y="115.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="462.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$113/1252728514.get$Lambda (19 samples, 0.09%)</title><rect x="460.8" y="131.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.8" y="142.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$113 (19 samples, 0.09%)</title><rect x="460.8" y="115.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="463.8" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (11 samples, 0.05%)</title><rect x="461.9" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (11 samples, 0.05%)</title><rect x="461.9" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.9" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (11 samples, 0.05%)</title><rect x="461.9" y="131.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="464.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (80 samples, 0.39%)</title><rect x="462.5" y="163.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (80 samples, 0.39%)</title><rect x="462.5" y="147.0" width="4.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="465.5" y="158.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.10%)</title><rect x="467.2" y="259.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="470.2" y="270.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (40 samples, 0.20%)</title><rect x="468.3" y="259.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (40 samples, 0.20%)</title><rect x="468.3" y="243.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (40 samples, 0.20%)</title><rect x="468.3" y="227.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="471.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (22 samples, 0.11%)</title><rect x="470.6" y="259.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.11%)</title><rect x="470.6" y="243.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="473.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (51 samples, 0.25%)</title><rect x="472.0" y="259.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.0" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (26 samples, 0.13%)</title><rect x="472.0" y="243.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="475.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (25 samples, 0.12%)</title><rect x="473.5" y="243.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.12%)</title><rect x="473.5" y="227.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (25 samples, 0.12%)</title><rect x="473.5" y="211.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.5" y="222.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (25 samples, 0.12%)</title><rect x="473.5" y="195.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (25 samples, 0.12%)</title><rect x="473.5" y="179.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (25 samples, 0.12%)</title><rect x="473.5" y="163.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (25 samples, 0.12%)</title><rect x="473.5" y="147.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$113/1252728514.getAsBoolean (25 samples, 0.12%)</title><rect x="473.5" y="131.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (25 samples, 0.12%)</title><rect x="473.5" y="115.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (25 samples, 0.12%)</title><rect x="473.5" y="99.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.5" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (25 samples, 0.12%)</title><rect x="473.5" y="83.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$74/92664633.apply (25 samples, 0.12%)</title><rect x="473.5" y="67.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (25 samples, 0.12%)</title><rect x="473.5" y="51.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.5" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (25 samples, 0.12%)</title><rect x="473.5" y="35.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="476.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (285 samples, 1.40%)</title><rect x="475.0" y="259.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.0" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (77 samples, 0.38%)</title><rect x="475.0" y="243.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (18 samples, 0.09%)</title><rect x="475.0" y="227.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (18 samples, 0.09%)</title><rect x="475.0" y="211.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="478.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (59 samples, 0.29%)</title><rect x="476.0" y="227.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (59 samples, 0.29%)</title><rect x="476.0" y="211.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="479.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (26 samples, 0.13%)</title><rect x="479.4" y="243.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (26 samples, 0.13%)</title><rect x="479.4" y="227.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="482.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (41 samples, 0.20%)</title><rect x="480.9" y="243.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (41 samples, 0.20%)</title><rect x="480.9" y="227.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (41 samples, 0.20%)</title><rect x="480.9" y="211.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.9" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (41 samples, 0.20%)</title><rect x="480.9" y="195.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="483.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (81 samples, 0.40%)</title><rect x="483.3" y="243.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="486.3" y="254.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (28 samples, 0.14%)</title><rect x="483.3" y="227.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.3" y="238.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (28 samples, 0.14%)</title><rect x="483.3" y="211.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="486.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (53 samples, 0.26%)</title><rect x="484.9" y="227.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="484.9" y="211.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="484.9" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$89/1934011524.get$Lambda (6 samples, 0.03%)</title><rect x="484.9" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.9" y="190.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$89 (6 samples, 0.03%)</title><rect x="484.9" y="163.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="487.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (47 samples, 0.23%)</title><rect x="485.3" y="211.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.3" y="222.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (47 samples, 0.23%)</title><rect x="485.3" y="195.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="488.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (60 samples, 0.29%)</title><rect x="488.0" y="243.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (60 samples, 0.29%)</title><rect x="488.0" y="227.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="491.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (24 samples, 0.12%)</title><rect x="491.5" y="291.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.5" y="302.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.12%)</title><rect x="491.5" y="275.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="494.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (94 samples, 0.46%)</title><rect x="492.8" y="291.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (38 samples, 0.19%)</title><rect x="492.8" y="275.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (38 samples, 0.19%)</title><rect x="492.8" y="259.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="495.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (38 samples, 0.19%)</title><rect x="492.8" y="243.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.19%)</title><rect x="492.8" y="227.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="495.8" y="238.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.19%)</title><rect x="492.8" y="211.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="495.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (56 samples, 0.27%)</title><rect x="495.0" y="275.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (56 samples, 0.27%)</title><rect x="495.0" y="259.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.0" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.27%)</title><rect x="495.0" y="243.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="498.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponses (4,714 samples, 23.11%)</title><rect x="498.3" y="307.0" width="272.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.3" y="318.0">ru/mail/polis/service/re1nex/ApiCont..</text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.17%)</title><rect x="498.3" y="291.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.17%)</title><rect x="498.3" y="275.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.17%)</title><rect x="498.3" y="259.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.17%)</title><rect x="498.3" y="243.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.17%)</title><rect x="498.3" y="227.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.3" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.17%)</title><rect x="498.3" y="211.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="501.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (6 samples, 0.03%)</title><rect x="500.2" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (6 samples, 0.03%)</title><rect x="500.2" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.2" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (6 samples, 0.03%)</title><rect x="500.2" y="259.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="503.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.proxy (4,674 samples, 22.91%)</title><rect x="500.6" y="291.0" width="270.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.6" y="302.0">ru/mail/polis/service/re1nex/ApiCont..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4,674 samples, 22.91%)</title><rect x="500.6" y="275.0" width="270.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.6" y="286.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4,674 samples, 22.91%)</title><rect x="500.6" y="259.0" width="270.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.6" y="270.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (38 samples, 0.19%)</title><rect x="500.6" y="243.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="503.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (4,500 samples, 22.06%)</title><rect x="502.8" y="243.0" width="260.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.8" y="254.0">one/nio/http/HttpClient$ResponseRea..</text>
</g>
<g>
<title>byte[] (1,650 samples, 8.09%)</title><rect x="502.8" y="227.0" width="95.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="505.8" y="238.0">byte[]</text>
</g>
<g>
<title>byte[] (2,850 samples, 13.97%)</title><rect x="598.2" y="227.0" width="164.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="601.2" y="238.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (75 samples, 0.37%)</title><rect x="763.1" y="243.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (68 samples, 0.33%)</title><rect x="763.3" y="227.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.3" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (68 samples, 0.33%)</title><rect x="763.3" y="211.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.3" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (68 samples, 0.33%)</title><rect x="763.3" y="195.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.3" y="206.0"></text>
</g>
<g>
<title>char[] (62 samples, 0.30%)</title><rect x="763.3" y="179.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="766.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (59 samples, 0.29%)</title><rect x="767.4" y="243.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (59 samples, 0.29%)</title><rect x="767.4" y="227.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.4" y="238.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.29%)</title><rect x="767.4" y="211.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="770.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (43 samples, 0.21%)</title><rect x="771.0" y="307.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (43 samples, 0.21%)</title><rect x="771.0" y="291.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (43 samples, 0.21%)</title><rect x="771.0" y="275.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (43 samples, 0.21%)</title><rect x="771.0" y="259.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 0.21%)</title><rect x="771.0" y="243.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.0" y="254.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.21%)</title><rect x="771.0" y="227.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="774.0" y="238.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7,197 samples, 35.28%)</title><rect x="773.7" y="403.0" width="416.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.7" y="414.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (343 samples, 1.68%)</title><rect x="773.7" y="387.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.7" y="398.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (343 samples, 1.68%)</title><rect x="773.7" y="371.0" width="19.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="776.7" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6,854 samples, 33.60%)</title><rect x="793.5" y="387.0" width="396.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.5" y="398.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,854 samples, 33.60%)</title><rect x="793.5" y="371.0" width="396.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.5" y="382.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,854 samples, 33.60%)</title><rect x="793.5" y="355.0" width="396.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.5" y="366.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,442 samples, 7.07%)</title><rect x="793.5" y="339.0" width="83.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.5" y="350.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,442 samples, 7.07%)</title><rect x="793.5" y="323.0" width="83.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.5" y="334.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler1_handleRequest.handleRequest (803 samples, 3.94%)</title><rect x="793.5" y="307.0" width="46.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.5" y="318.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (400 samples, 1.96%)</title><rect x="793.5" y="291.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="796.5" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (400 samples, 1.96%)</title><rect x="793.5" y="275.0" width="23.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.5" y="286.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (400 samples, 1.96%)</title><rect x="793.5" y="259.0" width="23.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.5" y="270.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (400 samples, 1.96%)</title><rect x="793.5" y="243.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.5" y="254.0">j..</text>
</g>
<g>
<title>java.lang.String (211 samples, 1.03%)</title><rect x="793.5" y="227.0" width="12.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="796.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (189 samples, 0.93%)</title><rect x="805.7" y="227.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.7" y="238.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.93%)</title><rect x="805.7" y="211.0" width="11.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="808.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.handleRequest (403 samples, 1.98%)</title><rect x="816.7" y="291.0" width="23.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.7" y="302.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/842951970.linkToTargetMethod (397 samples, 1.95%)</title><rect x="816.7" y="275.0" width="22.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.7" y="286.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (397 samples, 1.95%)</title><rect x="816.7" y="259.0" width="22.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.7" y="270.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService$$Lambda$67/906100538.get$Lambda (397 samples, 1.95%)</title><rect x="816.7" y="243.0" width="22.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.7" y="254.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncTopologyReplicaService$$Lambda$67 (397 samples, 1.95%)</title><rect x="816.7" y="227.0" width="22.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="819.7" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseAsyncService.executeTask (6 samples, 0.03%)</title><rect x="839.6" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.03%)</title><rect x="839.6" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.03%)</title><rect x="839.6" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.03%)</title><rect x="839.6" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.03%)</title><rect x="839.6" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.03%)</title><rect x="839.6" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.03%)</title><rect x="839.6" y="179.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="842.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (639 samples, 3.13%)</title><rect x="840.0" y="307.0" width="36.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.0" y="318.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (639 samples, 3.13%)</title><rect x="840.0" y="291.0" width="36.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.0" y="302.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (639 samples, 3.13%)</title><rect x="840.0" y="275.0" width="36.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.0" y="286.0">jav..</text>
</g>
<g>
<title>java.lang.String (281 samples, 1.38%)</title><rect x="840.0" y="259.0" width="16.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="843.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (358 samples, 1.75%)</title><rect x="856.2" y="259.0" width="20.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.2" y="270.0"></text>
</g>
<g>
<title>byte[] (358 samples, 1.75%)</title><rect x="856.2" y="243.0" width="20.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="859.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,051 samples, 14.96%)</title><rect x="876.9" y="339.0" width="176.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="879.9" y="350.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one.nio.http.Request (414 samples, 2.03%)</title><rect x="876.9" y="323.0" width="24.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="879.9" y="334.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,095 samples, 5.37%)</title><rect x="900.9" y="323.0" width="63.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.9" y="334.0">one/nio..</text>
</g>
<g>
<title>java.lang.String[] (920 samples, 4.51%)</title><rect x="900.9" y="307.0" width="53.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="903.9" y="318.0">java...</text>
</g>
<g>
<title>java.lang.String[] (175 samples, 0.86%)</title><rect x="954.1" y="307.0" width="10.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="957.1" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,542 samples, 7.56%)</title><rect x="964.2" y="323.0" width="89.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.2" y="334.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,542 samples, 7.56%)</title><rect x="964.2" y="307.0" width="89.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.2" y="318.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (910 samples, 4.46%)</title><rect x="964.2" y="291.0" width="52.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="967.2" y="302.0">char[]</text>
</g>
<g>
<title>char[] (20 samples, 0.10%)</title><rect x="1016.9" y="291.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1019.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (132 samples, 0.65%)</title><rect x="1018.0" y="291.0" width="7.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1021.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (480 samples, 2.35%)</title><rect x="1025.7" y="291.0" width="27.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.7" y="302.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (480 samples, 2.35%)</title><rect x="1025.7" y="275.0" width="27.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.7" y="286.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (480 samples, 2.35%)</title><rect x="1025.7" y="259.0" width="27.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1028.7" y="270.0">j..</text>
</g>
<g>
<title>byte[] (480 samples, 2.35%)</title><rect x="1025.7" y="243.0" width="27.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1028.7" y="254.0">b..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,361 samples, 11.57%)</title><rect x="1053.4" y="339.0" width="136.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.4" y="350.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,361 samples, 11.57%)</title><rect x="1053.4" y="323.0" width="136.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.4" y="334.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (1,221 samples, 5.99%)</title><rect x="1053.4" y="307.0" width="70.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1056.4" y="318.0">char[]</text>
</g>
<g>
<title>char[] (19 samples, 0.09%)</title><rect x="1124.1" y="307.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1127.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (516 samples, 2.53%)</title><rect x="1125.2" y="307.0" width="29.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1128.2" y="318.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (605 samples, 2.97%)</title><rect x="1155.0" y="307.0" width="35.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.0" y="318.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (605 samples, 2.97%)</title><rect x="1155.0" y="291.0" width="35.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1158.0" y="302.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (605 samples, 2.97%)</title><rect x="1155.0" y="275.0" width="35.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1158.0" y="286.0">ja..</text>
</g>
<g>
<title>byte[] (605 samples, 2.97%)</title><rect x="1155.0" y="259.0" width="35.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1158.0" y="270.0">by..</text>
</g>
</g>
</svg>
