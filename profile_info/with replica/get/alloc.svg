<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (46,460 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (30,881 samples, 66.47%)</title><rect x="10.0" y="739.0" width="784.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (11 samples, 0.02%)</title><rect x="10.0" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (11 samples, 0.02%)</title><rect x="10.0" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1188288412.linkToTargetMethod (11 samples, 0.02%)</title><rect x="10.0" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/201655909.invoke (11 samples, 0.02%)</title><rect x="10.0" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.02%)</title><rect x="10.0" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.02%)</title><rect x="10.0" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.02%)</title><rect x="10.0" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.02%)</title><rect x="10.0" y="611.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (30,870 samples, 66.44%)</title><rect x="10.3" y="723.0" width="784.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.3" y="734.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (30,870 samples, 66.44%)</title><rect x="10.3" y="707.0" width="784.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.3" y="718.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (358 samples, 0.77%)</title><rect x="10.3" y="691.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (358 samples, 0.77%)</title><rect x="10.3" y="675.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (346 samples, 0.74%)</title><rect x="10.3" y="659.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (346 samples, 0.74%)</title><rect x="10.3" y="643.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (346 samples, 0.74%)</title><rect x="10.3" y="627.0" width="8.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (12 samples, 0.03%)</title><rect x="19.1" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (12 samples, 0.03%)</title><rect x="19.1" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (12 samples, 0.03%)</title><rect x="19.1" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (12 samples, 0.03%)</title><rect x="19.1" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.03%)</title><rect x="19.1" y="595.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="22.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService$$Lambda$65/1563214758.run (29,872 samples, 64.30%)</title><rect x="19.4" y="691.0" width="758.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.4" y="702.0">ru/mail/polis/service/re1nex/AsyncTopologyReplicaService$$Lambda$65/1563214758.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.lambda$handleRequest$0 (29,872 samples, 64.30%)</title><rect x="19.4" y="675.0" width="758.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.4" y="686.0">ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.lambda$handleRequest$0</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (571 samples, 1.23%)</title><rect x="19.4" y="659.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (571 samples, 1.23%)</title><rect x="19.4" y="643.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (571 samples, 1.23%)</title><rect x="19.4" y="627.0" width="14.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (431 samples, 0.93%)</title><rect x="19.4" y="611.0" width="10.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="22.4" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (140 samples, 0.30%)</title><rect x="30.3" y="611.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.3" y="622.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.30%)</title><rect x="30.3" y="595.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="33.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendProxy (13,502 samples, 29.06%)</title><rect x="33.9" y="659.0" width="342.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.9" y="670.0">ru/mail/polis/service/re1nex/ApiController.sen..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.get (11,956 samples, 25.73%)</title><rect x="33.9" y="643.0" width="303.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.9" y="654.0">ru/mail/polis/service/re1nex/ApiControlle..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1109081256.linkToTargetMethod (582 samples, 1.25%)</title><rect x="33.9" y="627.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/382621994.invoke (582 samples, 1.25%)</title><rect x="33.9" y="611.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (582 samples, 1.25%)</title><rect x="33.9" y="595.0" width="14.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (203 samples, 0.44%)</title><rect x="33.9" y="579.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.9" y="590.0"></text>
</g>
<g>
<title>java.lang.String (203 samples, 0.44%)</title><rect x="33.9" y="563.0" width="5.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="36.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (379 samples, 0.82%)</title><rect x="39.0" y="579.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (379 samples, 0.82%)</title><rect x="39.0" y="563.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.0" y="574.0"></text>
</g>
<g>
<title>byte[] (379 samples, 0.82%)</title><rect x="39.0" y="547.0" width="9.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="42.0" y="558.0"></text>
</g>
<g>
<title>one.nio.http.Response (180 samples, 0.39%)</title><rect x="48.7" y="627.0" width="4.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="51.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (871 samples, 1.87%)</title><rect x="53.2" y="627.0" width="22.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.2" y="638.0">o..</text>
</g>
<g>
<title>byte[] (346 samples, 0.74%)</title><rect x="53.2" y="611.0" width="8.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="56.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (299 samples, 0.64%)</title><rect x="62.0" y="611.0" width="7.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="65.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String (226 samples, 0.49%)</title><rect x="69.6" y="611.0" width="5.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="72.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (9,341 samples, 20.11%)</title><rect x="75.3" y="627.0" width="237.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.3" y="638.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,252 samples, 4.85%)</title><rect x="75.3" y="611.0" width="57.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.3" y="622.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (457 samples, 0.98%)</title><rect x="75.3" y="595.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.3" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (457 samples, 0.98%)</title><rect x="75.3" y="579.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.3" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (457 samples, 0.98%)</title><rect x="75.3" y="563.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (457 samples, 0.98%)</title><rect x="75.3" y="547.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (457 samples, 0.98%)</title><rect x="75.3" y="531.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (457 samples, 0.98%)</title><rect x="75.3" y="515.0" width="11.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$78/2054116303.getAsBoolean (457 samples, 0.98%)</title><rect x="75.3" y="499.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (457 samples, 0.98%)</title><rect x="75.3" y="483.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (457 samples, 0.98%)</title><rect x="75.3" y="467.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (457 samples, 0.98%)</title><rect x="75.3" y="451.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$68/746671527.apply (457 samples, 0.98%)</title><rect x="75.3" y="435.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (457 samples, 0.98%)</title><rect x="75.3" y="419.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.3" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (457 samples, 0.98%)</title><rect x="75.3" y="403.0" width="11.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="78.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$83/362807673.apply (1,795 samples, 3.86%)</title><rect x="87.0" y="595.0" width="45.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.0" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (1,795 samples, 3.86%)</title><rect x="87.0" y="579.0" width="45.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.0" y="590.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,795 samples, 3.86%)</title><rect x="87.0" y="563.0" width="45.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.0" y="574.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,795 samples, 3.86%)</title><rect x="87.0" y="547.0" width="45.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="90.0" y="558.0">java..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (459 samples, 0.99%)</title><rect x="132.5" y="611.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (459 samples, 0.99%)</title><rect x="132.5" y="595.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.5" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (459 samples, 0.99%)</title><rect x="132.5" y="579.0" width="11.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="135.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (6,630 samples, 14.27%)</title><rect x="144.2" y="611.0" width="168.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.2" y="622.0">ru/mail/polis/dao/re1n..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,962 samples, 6.38%)</title><rect x="144.2" y="595.0" width="75.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.2" y="606.0">com/goog..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (153 samples, 0.33%)</title><rect x="144.2" y="579.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="147.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,809 samples, 6.05%)</title><rect x="148.1" y="579.0" width="71.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.1" y="590.0">com/goog..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (220 samples, 0.47%)</title><rect x="148.1" y="563.0" width="5.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="151.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (241 samples, 0.52%)</title><rect x="153.7" y="563.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.7" y="574.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (241 samples, 0.52%)</title><rect x="153.7" y="547.0" width="6.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="156.7" y="558.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (268 samples, 0.58%)</title><rect x="159.8" y="563.0" width="6.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="162.8" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (191 samples, 0.41%)</title><rect x="166.6" y="563.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.6" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (191 samples, 0.41%)</title><rect x="166.6" y="547.0" width="4.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="169.6" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,889 samples, 4.07%)</title><rect x="171.5" y="563.0" width="47.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.5" y="574.0">java..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,889 samples, 4.07%)</title><rect x="171.5" y="547.0" width="47.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.5" y="558.0">java..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,889 samples, 4.07%)</title><rect x="171.5" y="531.0" width="47.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.5" y="542.0">java..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (217 samples, 0.47%)</title><rect x="171.5" y="515.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$78/2054116303.getAsBoolean (217 samples, 0.47%)</title><rect x="171.5" y="499.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (217 samples, 0.47%)</title><rect x="171.5" y="483.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (217 samples, 0.47%)</title><rect x="171.5" y="467.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (217 samples, 0.47%)</title><rect x="171.5" y="451.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$68/746671527.apply (217 samples, 0.47%)</title><rect x="171.5" y="435.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (217 samples, 0.47%)</title><rect x="171.5" y="419.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.5" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (217 samples, 0.47%)</title><rect x="171.5" y="403.0" width="5.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="174.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1,672 samples, 3.60%)</title><rect x="177.0" y="515.0" width="42.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.0" y="526.0">java..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (339 samples, 0.73%)</title><rect x="177.0" y="499.0" width="8.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="180.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (346 samples, 0.74%)</title><rect x="185.6" y="499.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (346 samples, 0.74%)</title><rect x="185.6" y="483.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="188.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$73/1412070072.get$Lambda (164 samples, 0.35%)</title><rect x="185.6" y="467.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.6" y="478.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$73 (164 samples, 0.35%)</title><rect x="185.6" y="451.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="188.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$78/2054116303.get$Lambda (182 samples, 0.39%)</title><rect x="189.7" y="467.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.7" y="478.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$78 (182 samples, 0.39%)</title><rect x="189.7" y="451.0" width="4.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="192.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (216 samples, 0.46%)</title><rect x="194.4" y="499.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (216 samples, 0.46%)</title><rect x="194.4" y="483.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (216 samples, 0.46%)</title><rect x="194.4" y="467.0" width="5.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="197.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (771 samples, 1.66%)</title><rect x="199.9" y="499.0" width="19.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (771 samples, 1.66%)</title><rect x="199.9" y="483.0" width="19.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="202.9" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (209 samples, 0.45%)</title><rect x="219.4" y="595.0" width="5.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="222.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (214 samples, 0.46%)</title><rect x="224.7" y="595.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (214 samples, 0.46%)</title><rect x="224.7" y="579.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$71/2109714343.get$Lambda (214 samples, 0.46%)</title><rect x="224.7" y="563.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$71 (214 samples, 0.46%)</title><rect x="224.7" y="547.0" width="5.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="227.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (214 samples, 0.46%)</title><rect x="230.2" y="595.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.2" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (214 samples, 0.46%)</title><rect x="230.2" y="579.0" width="5.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="233.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (22 samples, 0.05%)</title><rect x="235.6" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (22 samples, 0.05%)</title><rect x="235.6" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (22 samples, 0.05%)</title><rect x="235.6" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.6" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (22 samples, 0.05%)</title><rect x="235.6" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.6" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (22 samples, 0.05%)</title><rect x="235.6" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (13 samples, 0.03%)</title><rect x="235.6" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.6" y="526.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (13 samples, 0.03%)</title><rect x="235.6" y="499.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="238.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (237 samples, 0.51%)</title><rect x="236.2" y="595.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (237 samples, 0.51%)</title><rect x="236.2" y="579.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (237 samples, 0.51%)</title><rect x="236.2" y="563.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (237 samples, 0.51%)</title><rect x="236.2" y="547.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.2" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (237 samples, 0.51%)</title><rect x="236.2" y="531.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (237 samples, 0.51%)</title><rect x="236.2" y="515.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (237 samples, 0.51%)</title><rect x="236.2" y="499.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (237 samples, 0.51%)</title><rect x="236.2" y="483.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$78/2054116303.getAsBoolean (237 samples, 0.51%)</title><rect x="236.2" y="467.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (237 samples, 0.51%)</title><rect x="236.2" y="451.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (237 samples, 0.51%)</title><rect x="236.2" y="435.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (237 samples, 0.51%)</title><rect x="236.2" y="419.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$68/746671527.apply (237 samples, 0.51%)</title><rect x="236.2" y="403.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (237 samples, 0.51%)</title><rect x="236.2" y="387.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (237 samples, 0.51%)</title><rect x="236.2" y="371.0" width="6.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="239.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (2,772 samples, 5.97%)</title><rect x="242.2" y="595.0" width="70.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.2" y="606.0">ru/mail/..</text>
</g>
<g>
<title>java/util/Collection.stream (793 samples, 1.71%)</title><rect x="242.2" y="579.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (298 samples, 0.64%)</title><rect x="242.2" y="563.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (298 samples, 0.64%)</title><rect x="242.2" y="547.0" width="7.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="245.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (495 samples, 1.07%)</title><rect x="249.8" y="563.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.8" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (495 samples, 1.07%)</title><rect x="249.8" y="547.0" width="12.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="252.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (121 samples, 0.26%)</title><rect x="262.3" y="579.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (121 samples, 0.26%)</title><rect x="262.3" y="563.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="265.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (428 samples, 0.92%)</title><rect x="265.4" y="579.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (428 samples, 0.92%)</title><rect x="265.4" y="563.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (428 samples, 0.92%)</title><rect x="265.4" y="547.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (428 samples, 0.92%)</title><rect x="265.4" y="531.0" width="10.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="268.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (865 samples, 1.86%)</title><rect x="276.3" y="579.0" width="21.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.3" y="590.0">j..</text>
</g>
<g>
<title>java/util/Spliterators.iterator (216 samples, 0.46%)</title><rect x="276.3" y="563.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.3" y="574.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (216 samples, 0.46%)</title><rect x="276.3" y="547.0" width="5.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="279.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (649 samples, 1.40%)</title><rect x="281.8" y="563.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (141 samples, 0.30%)</title><rect x="281.8" y="547.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (141 samples, 0.30%)</title><rect x="281.8" y="531.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$69/885077858.get$Lambda (141 samples, 0.30%)</title><rect x="281.8" y="515.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.8" y="526.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$69 (141 samples, 0.30%)</title><rect x="281.8" y="499.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="284.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (508 samples, 1.09%)</title><rect x="285.3" y="547.0" width="12.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.3" y="558.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (508 samples, 1.09%)</title><rect x="285.3" y="531.0" width="12.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="288.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (565 samples, 1.22%)</title><rect x="298.2" y="579.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.2" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (565 samples, 1.22%)</title><rect x="298.2" y="563.0" width="14.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="301.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (278 samples, 0.60%)</title><rect x="312.6" y="627.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.6" y="638.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.60%)</title><rect x="312.6" y="611.0" width="7.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="315.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (704 samples, 1.52%)</title><rect x="319.7" y="627.0" width="17.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (282 samples, 0.61%)</title><rect x="319.7" y="611.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (282 samples, 0.61%)</title><rect x="319.7" y="595.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (282 samples, 0.61%)</title><rect x="319.7" y="579.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (282 samples, 0.61%)</title><rect x="319.7" y="563.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.7" y="574.0"></text>
</g>
<g>
<title>byte[] (282 samples, 0.61%)</title><rect x="319.7" y="547.0" width="7.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="322.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (422 samples, 0.91%)</title><rect x="326.8" y="611.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (422 samples, 0.91%)</title><rect x="326.8" y="595.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.8" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (422 samples, 0.91%)</title><rect x="326.8" y="579.0" width="10.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="329.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendResponse (1,546 samples, 3.33%)</title><rect x="337.5" y="643.0" width="39.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.5" y="654.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,546 samples, 3.33%)</title><rect x="337.5" y="627.0" width="39.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.5" y="638.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,546 samples, 3.33%)</title><rect x="337.5" y="611.0" width="39.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.5" y="622.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,198 samples, 2.58%)</title><rect x="337.5" y="595.0" width="30.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.5" y="606.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,198 samples, 2.58%)</title><rect x="337.5" y="579.0" width="30.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.5" y="590.0">on..</text>
</g>
<g>
<title>byte[] (1,198 samples, 2.58%)</title><rect x="337.5" y="563.0" width="30.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="340.5" y="574.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (348 samples, 0.75%)</title><rect x="368.0" y="595.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.0" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (348 samples, 0.75%)</title><rect x="368.0" y="579.0" width="8.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="371.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (15,799 samples, 34.01%)</title><rect x="376.8" y="659.0" width="401.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.8" y="670.0">ru/mail/polis/service/re1nex/ApiController.sendReplica</text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.03%)</title><rect x="376.8" y="643.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="379.8" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Request (117 samples, 0.25%)</title><rect x="377.2" y="643.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="380.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (28 samples, 0.06%)</title><rect x="380.2" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (28 samples, 0.06%)</title><rect x="380.2" y="627.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="383.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (508 samples, 1.09%)</title><rect x="380.9" y="643.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.9" y="654.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.06%)</title><rect x="380.9" y="627.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="383.9" y="638.0"></text>
</g>
<g>
<title>java.util.TreeSet (11 samples, 0.02%)</title><rect x="381.5" y="627.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="384.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (32 samples, 0.07%)</title><rect x="382.0" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.0" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (32 samples, 0.07%)</title><rect x="382.0" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.0" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (32 samples, 0.07%)</title><rect x="382.0" y="595.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="385.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (33 samples, 0.07%)</title><rect x="382.8" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (33 samples, 0.07%)</title><rect x="382.8" y="611.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="385.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (165 samples, 0.36%)</title><rect x="383.6" y="627.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.6" y="638.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (22 samples, 0.05%)</title><rect x="383.6" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.6" y="622.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (22 samples, 0.05%)</title><rect x="383.6" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.6" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (22 samples, 0.05%)</title><rect x="383.6" y="579.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.6" y="590.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.05%)</title><rect x="383.6" y="563.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="386.6" y="574.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (143 samples, 0.31%)</title><rect x="384.2" y="611.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.2" y="622.0"></text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (14 samples, 0.03%)</title><rect x="384.2" y="595.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="387.2" y="606.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (129 samples, 0.28%)</title><rect x="384.5" y="595.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.5" y="606.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (129 samples, 0.28%)</title><rect x="384.5" y="579.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.5" y="590.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (125 samples, 0.27%)</title><rect x="384.5" y="563.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.5" y="574.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (114 samples, 0.25%)</title><rect x="384.5" y="547.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.5" y="558.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (114 samples, 0.25%)</title><rect x="384.5" y="531.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (30 samples, 0.06%)</title><rect x="384.8" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (30 samples, 0.06%)</title><rect x="384.8" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.8" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (30 samples, 0.06%)</title><rect x="384.8" y="483.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.8" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (30 samples, 0.06%)</title><rect x="384.8" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.8" y="478.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (30 samples, 0.06%)</title><rect x="384.8" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="387.8" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (75 samples, 0.16%)</title><rect x="385.5" y="515.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (75 samples, 0.16%)</title><rect x="385.5" y="499.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (75 samples, 0.16%)</title><rect x="385.5" y="483.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.5" y="494.0"></text>
</g>
<g>
<title>sun.security.provider.MD5 (18 samples, 0.04%)</title><rect x="385.5" y="467.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="388.5" y="478.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (57 samples, 0.12%)</title><rect x="386.0" y="467.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.0" y="478.0"></text>
</g>
<g>
<title>int[] (26 samples, 0.06%)</title><rect x="386.0" y="451.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="389.0" y="462.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (31 samples, 0.07%)</title><rect x="386.6" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.6" y="462.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.07%)</title><rect x="386.6" y="435.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="389.6" y="446.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (11 samples, 0.02%)</title><rect x="387.4" y="547.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="390.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (235 samples, 0.51%)</title><rect x="387.8" y="627.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.8" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (93 samples, 0.20%)</title><rect x="387.8" y="611.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.8" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (25 samples, 0.05%)</title><rect x="387.8" y="595.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="390.8" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (68 samples, 0.15%)</title><rect x="388.4" y="595.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (37 samples, 0.08%)</title><rect x="388.4" y="579.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.4" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (37 samples, 0.08%)</title><rect x="388.4" y="563.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="391.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (31 samples, 0.07%)</title><rect x="389.4" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.4" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (31 samples, 0.07%)</title><rect x="389.4" y="563.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="392.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (15 samples, 0.03%)</title><rect x="390.2" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.2" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (15 samples, 0.03%)</title><rect x="390.2" y="595.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="393.2" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (23 samples, 0.05%)</title><rect x="390.5" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.5" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (23 samples, 0.05%)</title><rect x="390.5" y="595.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="393.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (104 samples, 0.22%)</title><rect x="391.1" y="611.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (104 samples, 0.22%)</title><rect x="391.1" y="595.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.1" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (104 samples, 0.22%)</title><rect x="391.1" y="579.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="394.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.get (758 samples, 1.63%)</title><rect x="393.8" y="643.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1109081256.linkToTargetMethod (34 samples, 0.07%)</title><rect x="393.8" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="396.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/382621994.invoke (34 samples, 0.07%)</title><rect x="393.8" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.07%)</title><rect x="393.8" y="595.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.02%)</title><rect x="393.8" y="579.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.02%)</title><rect x="393.8" y="563.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="396.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (23 samples, 0.05%)</title><rect x="394.0" y="579.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (23 samples, 0.05%)</title><rect x="394.0" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.0" y="574.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.05%)</title><rect x="394.0" y="547.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="397.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (46 samples, 0.10%)</title><rect x="394.9" y="627.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.9" y="638.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.05%)</title><rect x="394.9" y="611.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="397.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.03%)</title><rect x="395.4" y="611.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="398.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.03%)</title><rect x="395.7" y="611.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="398.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (608 samples, 1.31%)</title><rect x="396.0" y="627.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (62 samples, 0.13%)</title><rect x="396.0" y="611.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.02%)</title><rect x="396.0" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (10 samples, 0.02%)</title><rect x="396.0" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.0" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.02%)</title><rect x="396.0" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (10 samples, 0.02%)</title><rect x="396.0" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (10 samples, 0.02%)</title><rect x="396.0" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.02%)</title><rect x="396.0" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$78/2054116303.getAsBoolean (10 samples, 0.02%)</title><rect x="396.0" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (10 samples, 0.02%)</title><rect x="396.0" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (10 samples, 0.02%)</title><rect x="396.0" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.02%)</title><rect x="396.0" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$68/746671527.apply (10 samples, 0.02%)</title><rect x="396.0" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (10 samples, 0.02%)</title><rect x="396.0" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.0" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (10 samples, 0.02%)</title><rect x="396.0" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="399.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$83/362807673.apply (52 samples, 0.11%)</title><rect x="396.3" y="595.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (52 samples, 0.11%)</title><rect x="396.3" y="579.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (52 samples, 0.11%)</title><rect x="396.3" y="563.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.3" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (52 samples, 0.11%)</title><rect x="396.3" y="547.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="399.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (538 samples, 1.16%)</title><rect x="397.8" y="611.0" width="13.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (215 samples, 0.46%)</title><rect x="397.8" y="595.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.8" y="606.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (15 samples, 0.03%)</title><rect x="397.8" y="579.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="400.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (200 samples, 0.43%)</title><rect x="398.2" y="579.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.2" y="590.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (24 samples, 0.05%)</title><rect x="398.2" y="563.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="401.2" y="574.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (18 samples, 0.04%)</title><rect x="398.9" y="563.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="401.9" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (143 samples, 0.31%)</title><rect x="399.6" y="563.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (143 samples, 0.31%)</title><rect x="399.6" y="547.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (143 samples, 0.31%)</title><rect x="399.6" y="531.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12 samples, 0.03%)</title><rect x="399.6" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$78/2054116303.getAsBoolean (12 samples, 0.03%)</title><rect x="399.6" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (12 samples, 0.03%)</title><rect x="399.6" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (12 samples, 0.03%)</title><rect x="399.6" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="402.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.03%)</title><rect x="399.6" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$68/746671527.apply (12 samples, 0.03%)</title><rect x="399.6" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (12 samples, 0.03%)</title><rect x="399.6" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.6" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (12 samples, 0.03%)</title><rect x="399.6" y="403.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="402.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (131 samples, 0.28%)</title><rect x="399.9" y="515.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.9" y="526.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (41 samples, 0.09%)</title><rect x="399.9" y="499.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="402.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.05%)</title><rect x="401.0" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.05%)</title><rect x="401.0" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$73/1412070072.get$Lambda (15 samples, 0.03%)</title><rect x="401.0" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.0" y="478.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$73 (15 samples, 0.03%)</title><rect x="401.0" y="451.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="404.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$78/2054116303.get$Lambda (10 samples, 0.02%)</title><rect x="401.4" y="467.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.4" y="478.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$78 (10 samples, 0.02%)</title><rect x="401.4" y="451.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="404.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (20 samples, 0.04%)</title><rect x="401.6" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (20 samples, 0.04%)</title><rect x="401.6" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.6" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (20 samples, 0.04%)</title><rect x="401.6" y="467.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="404.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (45 samples, 0.10%)</title><rect x="402.1" y="499.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (45 samples, 0.10%)</title><rect x="402.1" y="483.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="405.1" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.05%)</title><rect x="403.3" y="595.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="406.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.04%)</title><rect x="403.8" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.04%)</title><rect x="403.8" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$71/2109714343.get$Lambda (20 samples, 0.04%)</title><rect x="403.8" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.8" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$71 (20 samples, 0.04%)</title><rect x="403.8" y="547.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="406.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (11 samples, 0.02%)</title><rect x="404.3" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.3" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.02%)</title><rect x="404.3" y="579.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="407.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (267 samples, 0.57%)</title><rect x="404.7" y="595.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.7" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (77 samples, 0.17%)</title><rect x="404.7" y="579.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (29 samples, 0.06%)</title><rect x="404.7" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (29 samples, 0.06%)</title><rect x="404.7" y="547.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="407.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (48 samples, 0.10%)</title><rect x="405.4" y="563.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.4" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (48 samples, 0.10%)</title><rect x="405.4" y="547.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="408.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (18 samples, 0.04%)</title><rect x="406.6" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (18 samples, 0.04%)</title><rect x="406.6" y="563.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="409.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.06%)</title><rect x="407.1" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.06%)</title><rect x="407.1" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (26 samples, 0.06%)</title><rect x="407.1" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (26 samples, 0.06%)</title><rect x="407.1" y="531.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="410.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (85 samples, 0.18%)</title><rect x="407.8" y="579.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.8" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (19 samples, 0.04%)</title><rect x="407.8" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.8" y="574.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (19 samples, 0.04%)</title><rect x="407.8" y="547.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="410.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (66 samples, 0.14%)</title><rect x="408.2" y="563.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.03%)</title><rect x="408.2" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.03%)</title><rect x="408.2" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$69/885077858.get$Lambda (12 samples, 0.03%)</title><rect x="408.2" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="411.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$69 (12 samples, 0.03%)</title><rect x="408.2" y="499.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="411.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (54 samples, 0.12%)</title><rect x="408.5" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.5" y="558.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (54 samples, 0.12%)</title><rect x="408.5" y="531.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="411.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (61 samples, 0.13%)</title><rect x="409.9" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (61 samples, 0.13%)</title><rect x="409.9" y="563.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="412.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (56 samples, 0.12%)</title><rect x="411.6" y="627.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (24 samples, 0.05%)</title><rect x="411.6" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (24 samples, 0.05%)</title><rect x="411.6" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (24 samples, 0.05%)</title><rect x="411.6" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.05%)</title><rect x="411.6" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.6" y="574.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.05%)</title><rect x="411.6" y="547.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="414.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.07%)</title><rect x="412.2" y="611.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.07%)</title><rect x="412.2" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.2" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.07%)</title><rect x="412.2" y="579.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="415.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponses (14,139 samples, 30.43%)</title><rect x="413.0" y="643.0" width="359.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.0" y="654.0">ru/mail/polis/service/re1nex/ApiController.handle..</text>
</g>
<g>
<title>java/util/ArrayList.add (35 samples, 0.08%)</title><rect x="413.0" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (35 samples, 0.08%)</title><rect x="413.0" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (35 samples, 0.08%)</title><rect x="413.0" y="595.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (35 samples, 0.08%)</title><rect x="413.0" y="579.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.08%)</title><rect x="413.0" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.0" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.08%)</title><rect x="413.0" y="547.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="416.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (26 samples, 0.06%)</title><rect x="413.9" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.9" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (26 samples, 0.06%)</title><rect x="413.9" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.9" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (26 samples, 0.06%)</title><rect x="413.9" y="595.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="416.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.proxy (14,078 samples, 30.30%)</title><rect x="414.6" y="627.0" width="357.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.6" y="638.0">ru/mail/polis/service/re1nex/ApiController.proxy</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (14,078 samples, 30.30%)</title><rect x="414.6" y="611.0" width="357.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.6" y="622.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (14,078 samples, 30.30%)</title><rect x="414.6" y="595.0" width="357.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.6" y="606.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (27 samples, 0.06%)</title><rect x="414.6" y="579.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="417.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (13,317 samples, 28.66%)</title><rect x="415.3" y="579.0" width="338.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.3" y="590.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (3,698 samples, 7.96%)</title><rect x="415.3" y="563.0" width="93.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="418.3" y="574.0">byte[]</text>
</g>
<g>
<title>byte[] (9,619 samples, 20.70%)</title><rect x="509.2" y="563.0" width="244.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="512.2" y="574.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (567 samples, 1.22%)</title><rect x="753.5" y="579.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.5" y="590.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.08%)</title><rect x="753.5" y="563.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="756.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 0.10%)</title><rect x="754.4" y="563.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.10%)</title><rect x="754.4" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.05%)</title><rect x="754.4" y="531.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="757.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.05%)</title><rect x="755.0" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.0" y="542.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.05%)</title><rect x="755.0" y="515.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="758.0" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.03%)</title><rect x="755.6" y="563.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="758.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (414 samples, 0.89%)</title><rect x="755.9" y="563.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (414 samples, 0.89%)</title><rect x="755.9" y="547.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.9" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (414 samples, 0.89%)</title><rect x="755.9" y="531.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="758.9" y="542.0"></text>
</g>
<g>
<title>char[] (237 samples, 0.51%)</title><rect x="755.9" y="515.0" width="6.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="758.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.18%)</title><rect x="761.9" y="515.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="764.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (92 samples, 0.20%)</title><rect x="764.1" y="515.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (92 samples, 0.20%)</title><rect x="764.1" y="499.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (92 samples, 0.20%)</title><rect x="764.1" y="483.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.1" y="494.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.20%)</title><rect x="764.1" y="467.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="767.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (24 samples, 0.05%)</title><rect x="766.4" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (24 samples, 0.05%)</title><rect x="766.4" y="547.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="769.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (34 samples, 0.07%)</title><rect x="767.0" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.07%)</title><rect x="767.0" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.07%)</title><rect x="767.0" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.04%)</title><rect x="767.0" y="515.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="770.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.04%)</title><rect x="767.5" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.5" y="526.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.04%)</title><rect x="767.5" y="499.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="770.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (104 samples, 0.22%)</title><rect x="767.9" y="579.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (104 samples, 0.22%)</title><rect x="767.9" y="563.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.9" y="574.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.22%)</title><rect x="767.9" y="547.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="770.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (45 samples, 0.10%)</title><rect x="770.5" y="579.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 0.10%)</title><rect x="770.5" y="563.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.10%)</title><rect x="770.5" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.05%)</title><rect x="770.5" y="531.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="773.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.05%)</title><rect x="771.1" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.1" y="542.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.05%)</title><rect x="771.1" y="515.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="774.1" y="526.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (18 samples, 0.04%)</title><rect x="771.7" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.7" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (18 samples, 0.04%)</title><rect x="771.7" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.7" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (18 samples, 0.04%)</title><rect x="771.7" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.7" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (18 samples, 0.04%)</title><rect x="771.7" y="531.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="774.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendResponse (55 samples, 0.12%)</title><rect x="772.1" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (55 samples, 0.12%)</title><rect x="772.1" y="627.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (55 samples, 0.12%)</title><rect x="772.1" y="611.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (39 samples, 0.08%)</title><rect x="772.1" y="595.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (39 samples, 0.08%)</title><rect x="772.1" y="579.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.1" y="590.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.08%)</title><rect x="772.1" y="563.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="775.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 0.03%)</title><rect x="773.1" y="595.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.1" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (16 samples, 0.03%)</title><rect x="773.1" y="579.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="776.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergeGetResponses (175 samples, 0.38%)</title><rect x="773.6" y="643.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (43 samples, 0.09%)</title><rect x="773.9" y="627.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.9" y="638.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.03%)</title><rect x="773.9" y="611.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="776.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.03%)</title><rect x="774.3" y="611.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="777.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.02%)</title><rect x="774.7" y="611.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="777.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (74 samples, 0.16%)</title><rect x="774.9" y="627.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (74 samples, 0.16%)</title><rect x="774.9" y="611.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (74 samples, 0.16%)</title><rect x="774.9" y="595.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.06%)</title><rect x="774.9" y="579.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="777.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.10%)</title><rect x="775.6" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.6" y="590.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.10%)</title><rect x="775.6" y="563.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="778.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (49 samples, 0.11%)</title><rect x="776.8" y="627.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (46 samples, 0.10%)</title><rect x="776.9" y="611.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.9" y="622.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.04%)</title><rect x="776.9" y="595.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="779.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.03%)</title><rect x="777.4" y="595.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="780.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.03%)</title><rect x="777.7" y="595.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="780.7" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (640 samples, 1.38%)</title><rect x="778.1" y="691.0" width="16.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.1" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (640 samples, 1.38%)</title><rect x="778.1" y="675.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.1" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$118/275578367.run (640 samples, 1.38%)</title><rect x="778.1" y="659.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.1" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (640 samples, 1.38%)</title><rect x="778.1" y="643.0" width="16.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.1" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (640 samples, 1.38%)</title><rect x="778.1" y="627.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.1" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (640 samples, 1.38%)</title><rect x="778.1" y="611.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.1" y="622.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (10 samples, 0.02%)</title><rect x="778.1" y="595.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="781.1" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (626 samples, 1.35%)</title><rect x="778.4" y="595.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.4" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (597 samples, 1.28%)</title><rect x="778.4" y="579.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.4" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (597 samples, 1.28%)</title><rect x="778.4" y="563.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.4" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (597 samples, 1.28%)</title><rect x="778.4" y="547.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.4" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (597 samples, 1.28%)</title><rect x="778.4" y="531.0" width="15.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.4" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (384 samples, 0.83%)</title><rect x="778.4" y="515.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (384 samples, 0.83%)</title><rect x="778.4" y="499.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor42.invoke (378 samples, 0.81%)</title><rect x="778.5" y="483.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.5" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (378 samples, 0.81%)</title><rect x="778.5" y="467.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.5" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (364 samples, 0.78%)</title><rect x="778.5" y="451.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.5" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (364 samples, 0.78%)</title><rect x="778.5" y="435.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.5" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (364 samples, 0.78%)</title><rect x="778.5" y="419.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.5" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (364 samples, 0.78%)</title><rect x="778.5" y="403.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.5" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (364 samples, 0.78%)</title><rect x="778.5" y="387.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.5" y="398.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (364 samples, 0.78%)</title><rect x="778.5" y="371.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.5" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (364 samples, 0.78%)</title><rect x="778.5" y="355.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.5" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (364 samples, 0.78%)</title><rect x="778.5" y="339.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.5" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (364 samples, 0.78%)</title><rect x="778.5" y="323.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.5" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (364 samples, 0.78%)</title><rect x="778.5" y="307.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.5" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (364 samples, 0.78%)</title><rect x="778.5" y="291.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.5" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (364 samples, 0.78%)</title><rect x="778.5" y="275.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.5" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (364 samples, 0.78%)</title><rect x="778.5" y="259.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.5" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (330 samples, 0.71%)</title><rect x="778.5" y="243.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.5" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (330 samples, 0.71%)</title><rect x="778.5" y="227.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.5" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (330 samples, 0.71%)</title><rect x="778.5" y="211.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.5" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (330 samples, 0.71%)</title><rect x="778.5" y="195.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.5" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (127 samples, 0.27%)</title><rect x="778.5" y="179.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.5" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (106 samples, 0.23%)</title><rect x="778.5" y="163.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.5" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (97 samples, 0.21%)</title><rect x="778.5" y="147.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.5" y="158.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (97 samples, 0.21%)</title><rect x="778.5" y="131.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.5" y="142.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (61 samples, 0.13%)</title><rect x="778.7" y="115.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.7" y="126.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (57 samples, 0.12%)</title><rect x="778.8" y="99.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.8" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (51 samples, 0.11%)</title><rect x="779.0" y="83.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.0" y="94.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (51 samples, 0.11%)</title><rect x="779.0" y="67.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="782.0" y="78.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (28 samples, 0.06%)</title><rect x="780.3" y="115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.3" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.06%)</title><rect x="780.3" y="99.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="783.3" y="110.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (21 samples, 0.05%)</title><rect x="781.2" y="163.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.2" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (11 samples, 0.02%)</title><rect x="781.3" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.03%)</title><rect x="781.7" y="179.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="784.7" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (99 samples, 0.21%)</title><rect x="782.1" y="179.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.1" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (95 samples, 0.20%)</title><rect x="782.2" y="163.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.2" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (92 samples, 0.20%)</title><rect x="782.3" y="147.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="785.3" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (92 samples, 0.20%)</title><rect x="782.3" y="131.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="785.3" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (90 samples, 0.19%)</title><rect x="784.6" y="179.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="787.6" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (75 samples, 0.16%)</title><rect x="784.6" y="163.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="787.6" y="174.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.03%)</title><rect x="786.5" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.03%)</title><rect x="786.5" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (15 samples, 0.03%)</title><rect x="786.5" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.5" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (15 samples, 0.03%)</title><rect x="786.5" y="115.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.5" y="126.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.03%)</title><rect x="786.5" y="99.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.03%)</title><rect x="786.5" y="83.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.5" y="94.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (34 samples, 0.07%)</title><rect x="786.9" y="243.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.9" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (34 samples, 0.07%)</title><rect x="786.9" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (34 samples, 0.07%)</title><rect x="786.9" y="211.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (34 samples, 0.07%)</title><rect x="786.9" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.9" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (34 samples, 0.07%)</title><rect x="786.9" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.9" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (34 samples, 0.07%)</title><rect x="786.9" y="163.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (34 samples, 0.07%)</title><rect x="786.9" y="147.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor50.invoke (33 samples, 0.07%)</title><rect x="786.9" y="131.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.9" y="142.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (33 samples, 0.07%)</title><rect x="786.9" y="115.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.9" y="126.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (33 samples, 0.07%)</title><rect x="786.9" y="99.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="789.9" y="110.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (16 samples, 0.03%)</title><rect x="787.0" y="83.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="790.0" y="94.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (11 samples, 0.02%)</title><rect x="787.4" y="83.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.4" y="94.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (11 samples, 0.02%)</title><rect x="787.4" y="67.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.4" y="78.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (14 samples, 0.03%)</title><rect x="787.7" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.7" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (158 samples, 0.34%)</title><rect x="788.2" y="515.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (158 samples, 0.34%)</title><rect x="788.2" y="499.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (158 samples, 0.34%)</title><rect x="788.2" y="483.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (155 samples, 0.33%)</title><rect x="788.2" y="467.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (155 samples, 0.33%)</title><rect x="788.2" y="451.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (153 samples, 0.33%)</title><rect x="788.2" y="435.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (152 samples, 0.33%)</title><rect x="788.2" y="419.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (152 samples, 0.33%)</title><rect x="788.2" y="403.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (151 samples, 0.33%)</title><rect x="788.3" y="387.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.3" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (144 samples, 0.31%)</title><rect x="788.3" y="371.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.3" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (144 samples, 0.31%)</title><rect x="788.3" y="355.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.3" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (11 samples, 0.02%)</title><rect x="788.3" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.3" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 0.02%)</title><rect x="788.3" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.3" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (11 samples, 0.02%)</title><rect x="788.3" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (11 samples, 0.02%)</title><rect x="788.3" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.3" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (11 samples, 0.02%)</title><rect x="788.3" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.3" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.02%)</title><rect x="788.3" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.02%)</title><rect x="788.3" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (11 samples, 0.02%)</title><rect x="788.3" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (11 samples, 0.02%)</title><rect x="788.3" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.3" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (11 samples, 0.02%)</title><rect x="788.3" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.3" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 0.02%)</title><rect x="788.3" y="179.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.3" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.02%)</title><rect x="788.3" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.3" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 0.02%)</title><rect x="788.3" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.3" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (10 samples, 0.02%)</title><rect x="788.3" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.3" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.02%)</title><rect x="788.3" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.3" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (131 samples, 0.28%)</title><rect x="788.6" y="339.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.6" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (130 samples, 0.28%)</title><rect x="788.6" y="323.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (130 samples, 0.28%)</title><rect x="788.6" y="307.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (130 samples, 0.28%)</title><rect x="788.6" y="291.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.6" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (130 samples, 0.28%)</title><rect x="788.6" y="275.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (124 samples, 0.27%)</title><rect x="788.7" y="259.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="791.7" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (124 samples, 0.27%)</title><rect x="788.7" y="243.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.7" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (31 samples, 0.07%)</title><rect x="788.7" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="791.7" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (27 samples, 0.06%)</title><rect x="788.8" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (21 samples, 0.05%)</title><rect x="788.8" y="195.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.8" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (21 samples, 0.05%)</title><rect x="788.8" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.8" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (21 samples, 0.05%)</title><rect x="788.8" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.8" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 0.04%)</title><rect x="788.9" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.9" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (12 samples, 0.03%)</title><rect x="788.9" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.9" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (12 samples, 0.03%)</title><rect x="788.9" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.9" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (11 samples, 0.02%)</title><rect x="788.9" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.9" y="110.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 0.02%)</title><rect x="788.9" y="83.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 0.02%)</title><rect x="788.9" y="67.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (10 samples, 0.02%)</title><rect x="788.9" y="51.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.9" y="62.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (10 samples, 0.02%)</title><rect x="788.9" y="35.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.9" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (37 samples, 0.08%)</title><rect x="789.5" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.5" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (15 samples, 0.03%)</title><rect x="789.5" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.5" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (15 samples, 0.03%)</title><rect x="789.5" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.5" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.03%)</title><rect x="789.5" y="179.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="792.5" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (22 samples, 0.05%)</title><rect x="789.9" y="211.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.9" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (22 samples, 0.05%)</title><rect x="789.9" y="195.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.9" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (20 samples, 0.04%)</title><rect x="789.9" y="179.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.9" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (16 samples, 0.03%)</title><rect x="789.9" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.9" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (15 samples, 0.03%)</title><rect x="789.9" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.9" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (13 samples, 0.03%)</title><rect x="790.0" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.0" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (11 samples, 0.02%)</title><rect x="790.4" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.4" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (11 samples, 0.02%)</title><rect x="790.4" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.4" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (45 samples, 0.10%)</title><rect x="790.7" y="227.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.7" y="238.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (45 samples, 0.10%)</title><rect x="790.7" y="211.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="793.7" y="222.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (19 samples, 0.04%)</title><rect x="792.2" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (19 samples, 0.04%)</title><rect x="792.2" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (19 samples, 0.04%)</title><rect x="792.2" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (19 samples, 0.04%)</title><rect x="792.2" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (15 samples, 0.03%)</title><rect x="792.3" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (14 samples, 0.03%)</title><rect x="792.3" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (12 samples, 0.03%)</title><rect x="792.4" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.4" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (12 samples, 0.03%)</title><rect x="792.4" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (12 samples, 0.03%)</title><rect x="792.4" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.4" y="398.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (35 samples, 0.08%)</title><rect x="792.7" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.7" y="526.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (35 samples, 0.08%)</title><rect x="792.7" y="499.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.7" y="510.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (34 samples, 0.07%)</title><rect x="792.7" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.7" y="494.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (34 samples, 0.07%)</title><rect x="792.7" y="467.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.7" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (34 samples, 0.07%)</title><rect x="792.7" y="451.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (33 samples, 0.07%)</title><rect x="792.7" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (18 samples, 0.04%)</title><rect x="792.8" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.8" y="430.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (29 samples, 0.06%)</title><rect x="793.6" y="579.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.6" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (27 samples, 0.06%)</title><rect x="793.6" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.6" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (27 samples, 0.06%)</title><rect x="793.6" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (27 samples, 0.06%)</title><rect x="793.6" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (20 samples, 0.04%)</title><rect x="793.6" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.6" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15,579 samples, 33.53%)</title><rect x="794.3" y="739.0" width="395.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.3" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (945 samples, 2.03%)</title><rect x="794.3" y="723.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.3" y="734.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (945 samples, 2.03%)</title><rect x="794.3" y="707.0" width="24.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="797.3" y="718.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (14,634 samples, 31.50%)</title><rect x="818.3" y="723.0" width="371.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.3" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (14,634 samples, 31.50%)</title><rect x="818.3" y="707.0" width="371.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.3" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14,634 samples, 31.50%)</title><rect x="818.3" y="691.0" width="371.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.3" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,918 samples, 8.43%)</title><rect x="818.3" y="675.0" width="99.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.3" y="686.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,918 samples, 8.43%)</title><rect x="818.3" y="659.0" width="99.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.3" y="670.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler2_handleRequest.handleRequest (2,583 samples, 5.56%)</title><rect x="818.3" y="643.0" width="65.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.3" y="654.0">Request..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,832 samples, 3.94%)</title><rect x="818.3" y="627.0" width="46.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.3" y="638.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,832 samples, 3.94%)</title><rect x="818.3" y="611.0" width="46.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.3" y="622.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (1,832 samples, 3.94%)</title><rect x="818.3" y="595.0" width="46.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.3" y="606.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,832 samples, 3.94%)</title><rect x="818.3" y="579.0" width="46.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.3" y="590.0">java..</text>
</g>
<g>
<title>java.lang.String (922 samples, 1.98%)</title><rect x="818.3" y="563.0" width="23.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="821.3" y="574.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (910 samples, 1.96%)</title><rect x="841.7" y="563.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.7" y="574.0">j..</text>
</g>
<g>
<title>byte[] (910 samples, 1.96%)</title><rect x="841.7" y="547.0" width="23.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="844.7" y="558.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.handleRequest (751 samples, 1.62%)</title><rect x="864.9" y="627.0" width="19.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1282443776.linkToTargetMethod (741 samples, 1.59%)</title><rect x="864.9" y="611.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (741 samples, 1.59%)</title><rect x="864.9" y="595.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService$$Lambda$65/1563214758.get$Lambda (741 samples, 1.59%)</title><rect x="864.9" y="579.0" width="18.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.9" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncTopologyReplicaService$$Lambda$65 (741 samples, 1.59%)</title><rect x="864.9" y="563.0" width="18.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="867.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseAsyncService.executeTask (10 samples, 0.02%)</title><rect x="883.7" y="611.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.02%)</title><rect x="883.7" y="595.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.02%)</title><rect x="883.7" y="579.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.02%)</title><rect x="883.7" y="563.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.02%)</title><rect x="883.7" y="547.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (10 samples, 0.02%)</title><rect x="883.7" y="531.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="886.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (10 samples, 0.02%)</title><rect x="883.7" y="515.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="886.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,335 samples, 2.87%)</title><rect x="883.9" y="643.0" width="33.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.9" y="654.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (1,335 samples, 2.87%)</title><rect x="883.9" y="627.0" width="33.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.9" y="638.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,335 samples, 2.87%)</title><rect x="883.9" y="611.0" width="33.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="886.9" y="622.0">ja..</text>
</g>
<g>
<title>java.lang.String (633 samples, 1.36%)</title><rect x="883.9" y="595.0" width="16.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="886.9" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (702 samples, 1.51%)</title><rect x="900.0" y="595.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.0" y="606.0"></text>
</g>
<g>
<title>byte[] (702 samples, 1.51%)</title><rect x="900.0" y="579.0" width="17.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="903.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6,445 samples, 13.87%)</title><rect x="917.8" y="675.0" width="163.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.8" y="686.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one.nio.http.Request (1,041 samples, 2.24%)</title><rect x="917.8" y="659.0" width="26.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="920.8" y="670.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,025 samples, 4.36%)</title><rect x="944.3" y="659.0" width="51.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.3" y="670.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (1,603 samples, 3.45%)</title><rect x="944.3" y="643.0" width="40.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="947.3" y="654.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (422 samples, 0.91%)</title><rect x="985.0" y="643.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="988.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,379 samples, 7.27%)</title><rect x="995.7" y="659.0" width="85.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.7" y="670.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,379 samples, 7.27%)</title><rect x="995.7" y="643.0" width="85.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="998.7" y="654.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (1,425 samples, 3.07%)</title><rect x="995.7" y="627.0" width="36.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="998.7" y="638.0">cha..</text>
</g>
<g>
<title>char[] (65 samples, 0.14%)</title><rect x="1031.9" y="627.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1034.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String (531 samples, 1.14%)</title><rect x="1033.5" y="627.0" width="13.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1036.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,358 samples, 2.92%)</title><rect x="1047.0" y="627.0" width="34.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1050.0" y="638.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,358 samples, 2.92%)</title><rect x="1047.0" y="611.0" width="34.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.0" y="622.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,358 samples, 2.92%)</title><rect x="1047.0" y="595.0" width="34.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.0" y="606.0">ja..</text>
</g>
<g>
<title>byte[] (1,358 samples, 2.92%)</title><rect x="1047.0" y="579.0" width="34.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1050.0" y="590.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,271 samples, 9.19%)</title><rect x="1081.5" y="675.0" width="108.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.5" y="686.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,271 samples, 9.19%)</title><rect x="1081.5" y="659.0" width="108.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1084.5" y="670.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (1,928 samples, 4.15%)</title><rect x="1081.5" y="643.0" width="49.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1084.5" y="654.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,180 samples, 2.54%)</title><rect x="1130.6" y="643.0" width="30.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1133.6" y="654.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,157 samples, 2.49%)</title><rect x="1160.6" y="643.0" width="29.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1163.6" y="654.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,157 samples, 2.49%)</title><rect x="1160.6" y="627.0" width="29.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1163.6" y="638.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,157 samples, 2.49%)</title><rect x="1160.6" y="611.0" width="29.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.6" y="622.0">ja..</text>
</g>
<g>
<title>byte[] (1,157 samples, 2.49%)</title><rect x="1160.6" y="595.0" width="29.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1163.6" y="606.0">by..</text>
</g>
</g>
</svg>
