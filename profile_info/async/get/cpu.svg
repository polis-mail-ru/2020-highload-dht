<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="693"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="693"> </text>
<g id="frames">
<g>
<title>all (5,181 samples, 100.00%)</title><rect x="10.0" y="659.0" width="1180.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="670.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (49 samples, 0.95%)</title><rect x="10.2" y="643.0" width="11.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.2" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (48 samples, 0.93%)</title><rect x="10.5" y="627.0" width="10.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (46 samples, 0.89%)</title><rect x="10.7" y="611.0" width="10.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.7" y="622.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.06%)</title><rect x="11.8" y="595.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.8" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (38 samples, 0.73%)</title><rect x="12.5" y="595.0" width="8.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.5" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.14%)</title><rect x="13.4" y="579.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.4" y="590.0"></text>
</g>
<g>
<title>SpinPause (13 samples, 0.25%)</title><rect x="15.0" y="579.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="18.0" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (8 samples, 0.15%)</title><rect x="18.2" y="579.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="21.2" y="590.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 0.08%)</title><rect x="20.2" y="579.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.2" y="590.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="20.2" y="563.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="23.2" y="574.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.04%)</title><rect x="20.7" y="563.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="23.7" y="574.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.12%)</title><rect x="21.4" y="643.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="24.4" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.08%)</title><rect x="21.6" y="627.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="24.6" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.06%)</title><rect x="21.8" y="611.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="24.8" y="622.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.06%)</title><rect x="21.8" y="595.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="24.8" y="606.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.04%)</title><rect x="22.1" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="22.8" y="643.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="25.8" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="23.0" y="627.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="26.0" y="638.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (7 samples, 0.14%)</title><rect x="24.1" y="627.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="27.1" y="638.0"></text>
</g>
<g>
<title>[unknown_Java] (30 samples, 0.58%)</title><rect x="25.7" y="643.0" width="6.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="28.7" y="654.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (3 samples, 0.06%)</title><rect x="26.2" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.2" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.04%)</title><rect x="26.9" y="627.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="29.9" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="27.3" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.3" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.14%)</title><rect x="27.8" y="627.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.8" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (7 samples, 0.14%)</title><rect x="27.8" y="611.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="30.8" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.12%)</title><rect x="29.6" y="627.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="32.6" y="638.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="31.0" y="627.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="34.0" y="638.0"></text>
</g>
<g>
<title>sha256_implCompress (5 samples, 0.10%)</title><rect x="31.4" y="627.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="34.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,801 samples, 73.36%)</title><rect x="32.5" y="643.0" width="865.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.5" y="654.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,801 samples, 73.36%)</title><rect x="32.5" y="627.0" width="865.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.5" y="638.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,801 samples, 73.36%)</title><rect x="32.5" y="611.0" width="865.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.5" y="622.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,942 samples, 37.48%)</title><rect x="33.9" y="595.0" width="442.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.9" y="606.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (461 samples, 8.90%)</title><rect x="33.9" y="579.0" width="105.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.9" y="590.0">java/util/co..</text>
</g>
<g>
<title>itable stub (4 samples, 0.08%)</title><rect x="34.4" y="563.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="37.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (375 samples, 7.24%)</title><rect x="35.3" y="563.0" width="85.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.3" y="574.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.04%)</title><rect x="35.7" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (2 samples, 0.04%)</title><rect x="35.7" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="35.7" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="35.7" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1084020713.apply (371 samples, 7.16%)</title><rect x="36.2" y="547.0" width="84.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.2" y="558.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (370 samples, 7.14%)</title><rect x="36.4" y="531.0" width="84.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.4" y="542.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (370 samples, 7.14%)</title><rect x="36.4" y="515.0" width="84.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.4" y="526.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="36.9" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="36.9" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.04%)</title><rect x="36.9" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (314 samples, 6.06%)</title><rect x="37.3" y="499.0" width="71.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.3" y="510.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (314 samples, 6.06%)</title><rect x="37.3" y="483.0" width="71.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.3" y="494.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (314 samples, 6.06%)</title><rect x="37.3" y="467.0" width="71.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.3" y="478.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (194 samples, 3.74%)</title><rect x="37.6" y="451.0" width="44.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.6" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (194 samples, 3.74%)</title><rect x="37.6" y="435.0" width="44.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.6" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (189 samples, 3.65%)</title><rect x="37.6" y="419.0" width="43.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.6" y="430.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1315053200.apply (189 samples, 3.65%)</title><rect x="37.6" y="403.0" width="43.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.6" y="414.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (189 samples, 3.65%)</title><rect x="37.6" y="387.0" width="43.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.6" y="398.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (189 samples, 3.65%)</title><rect x="37.6" y="371.0" width="43.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.6" y="382.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/925206735.apply (8 samples, 0.15%)</title><rect x="37.6" y="355.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (8 samples, 0.15%)</title><rect x="37.6" y="339.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (8 samples, 0.15%)</title><rect x="37.6" y="323.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (2 samples, 0.04%)</title><rect x="37.6" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="37.6" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.04%)</title><rect x="37.6" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="38.0" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="38.0" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (3 samples, 0.06%)</title><rect x="38.7" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (3 samples, 0.06%)</title><rect x="38.7" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (3 samples, 0.06%)</title><rect x="38.7" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="38.7" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/868767352.apply (181 samples, 3.49%)</title><rect x="39.4" y="355.0" width="41.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.4" y="366.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (181 samples, 3.49%)</title><rect x="39.4" y="339.0" width="41.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.4" y="350.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.04%)</title><rect x="39.4" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.04%)</title><rect x="39.4" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (179 samples, 3.45%)</title><rect x="39.8" y="323.0" width="40.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.8" y="334.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (164 samples, 3.17%)</title><rect x="39.8" y="307.0" width="37.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.8" y="318.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (164 samples, 3.17%)</title><rect x="39.8" y="291.0" width="37.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.8" y="302.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (7 samples, 0.14%)</title><rect x="40.5" y="275.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$424/1323568008.apply (154 samples, 2.97%)</title><rect x="42.1" y="275.0" width="35.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.1" y="286.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (154 samples, 2.97%)</title><rect x="42.1" y="259.0" width="35.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.1" y="270.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="42.8" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="42.8" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="43.3" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="43.3" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="43.5" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="43.5" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.04%)</title><rect x="43.5" y="179.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="43.5" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="43.5" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (46 samples, 0.89%)</title><rect x="43.9" y="243.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (46 samples, 0.89%)</title><rect x="43.9" y="227.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (7 samples, 0.14%)</title><rect x="44.6" y="211.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (7 samples, 0.14%)</title><rect x="44.6" y="195.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.14%)</title><rect x="44.6" y="179.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6 samples, 0.12%)</title><rect x="44.6" y="163.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6 samples, 0.12%)</title><rect x="44.6" y="147.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.6" y="158.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="44.6" y="131.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="47.6" y="142.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="44.6" y="115.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="47.6" y="126.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="44.6" y="99.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="47.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.08%)</title><rect x="45.1" y="131.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.1" y="142.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="45.3" y="115.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="48.3" y="126.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="45.3" y="99.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="48.3" y="110.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="45.3" y="83.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="48.3" y="94.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="45.3" y="67.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="48.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (36 samples, 0.69%)</title><rect x="46.2" y="211.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (36 samples, 0.69%)</title><rect x="46.2" y="195.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (31 samples, 0.60%)</title><rect x="46.2" y="179.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (26 samples, 0.50%)</title><rect x="46.2" y="163.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (26 samples, 0.50%)</title><rect x="46.2" y="147.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.2" y="158.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="47.6" y="131.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="50.6" y="142.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.06%)</title><rect x="47.8" y="115.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="50.8" y="126.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="47.8" y="99.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="50.8" y="110.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="47.8" y="83.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="50.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.31%)</title><rect x="48.5" y="131.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.5" y="142.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="50.5" y="115.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="53.5" y="126.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.06%)</title><rect x="50.5" y="99.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="53.5" y="110.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.06%)</title><rect x="50.5" y="83.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="53.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.08%)</title><rect x="51.2" y="115.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.2" y="126.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.04%)</title><rect x="51.5" y="99.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="54.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (5 samples, 0.10%)</title><rect x="52.1" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.1" y="174.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="52.4" y="147.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="55.4" y="158.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.06%)</title><rect x="52.6" y="131.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="55.6" y="142.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (3 samples, 0.06%)</title><rect x="52.6" y="115.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="55.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (5 samples, 0.10%)</title><rect x="53.3" y="179.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (5 samples, 0.10%)</title><rect x="53.3" y="163.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.10%)</title><rect x="53.3" y="147.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.10%)</title><rect x="53.3" y="131.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (99 samples, 1.91%)</title><rect x="54.4" y="243.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.4" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (67 samples, 1.29%)</title><rect x="55.1" y="227.0" width="15.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (9 samples, 0.17%)</title><rect x="55.1" y="211.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (9 samples, 0.17%)</title><rect x="55.1" y="195.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.1" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (9 samples, 0.17%)</title><rect x="55.1" y="179.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.1" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (9 samples, 0.17%)</title><rect x="55.1" y="163.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.1" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (9 samples, 0.17%)</title><rect x="55.1" y="147.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (9 samples, 0.17%)</title><rect x="55.1" y="131.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="56.7" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="56.7" y="99.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="56.7" y="83.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.7" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (29 samples, 0.56%)</title><rect x="57.1" y="211.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.06%)</title><rect x="59.2" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.2" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.06%)</title><rect x="59.2" y="179.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.2" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.06%)</title><rect x="59.2" y="163.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.2" y="174.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.06%)</title><rect x="59.9" y="195.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.06%)</title><rect x="59.9" y="179.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.9" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.06%)</title><rect x="59.9" y="163.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.9" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.06%)</title><rect x="59.9" y="147.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.9" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.06%)</title><rect x="59.9" y="131.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.9" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.06%)</title><rect x="59.9" y="115.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.9" y="126.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (3 samples, 0.06%)</title><rect x="60.6" y="195.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.6" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (3 samples, 0.06%)</title><rect x="60.6" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (3 samples, 0.06%)</title><rect x="60.6" y="163.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.6" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.06%)</title><rect x="60.6" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.6" y="158.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$466/1134579550.test (7 samples, 0.14%)</title><rect x="61.2" y="195.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.2" y="206.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (4 samples, 0.08%)</title><rect x="61.9" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1442191055.test (3 samples, 0.06%)</title><rect x="62.2" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.06%)</title><rect x="62.2" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.2" y="158.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1019298652.test (3 samples, 0.06%)</title><rect x="62.2" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.2" y="142.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.06%)</title><rect x="62.2" y="115.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/119290689.test (3 samples, 0.06%)</title><rect x="62.2" y="99.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.06%)</title><rect x="62.2" y="83.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.2" y="94.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="62.2" y="67.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.2" y="78.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="62.2" y="51.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.2" y="62.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="62.2" y="35.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.2" y="46.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="63.1" y="195.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="66.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (29 samples, 0.56%)</title><rect x="63.8" y="211.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (29 samples, 0.56%)</title><rect x="63.8" y="195.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.8" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (29 samples, 0.56%)</title><rect x="63.8" y="179.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.8" y="190.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="64.9" y="163.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="67.9" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (21 samples, 0.41%)</title><rect x="65.6" y="163.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.6" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (18 samples, 0.35%)</title><rect x="66.0" y="147.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (17 samples, 0.33%)</title><rect x="66.3" y="131.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.10%)</title><rect x="66.7" y="115.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.08%)</title><rect x="67.8" y="115.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.8" y="126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (2 samples, 0.04%)</title><rect x="68.3" y="99.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.3" y="110.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.04%)</title><rect x="68.3" y="83.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.3" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="68.8" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.8" y="126.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="69.4" y="115.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="72.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (2 samples, 0.04%)</title><rect x="70.4" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="70.4" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.04%)</title><rect x="70.4" y="195.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (2 samples, 0.04%)</title><rect x="70.4" y="179.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (10 samples, 0.19%)</title><rect x="70.8" y="227.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.06%)</title><rect x="70.8" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (7 samples, 0.14%)</title><rect x="71.5" y="211.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="71.9" y="195.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.06%)</title><rect x="71.9" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (3 samples, 0.06%)</title><rect x="71.9" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="71.9" y="147.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (2 samples, 0.04%)</title><rect x="72.2" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.2" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="72.6" y="195.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="75.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (17 samples, 0.33%)</title><rect x="73.1" y="227.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="73.3" y="211.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.15%)</title><rect x="73.8" y="211.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.15%)</title><rect x="73.8" y="195.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.15%)</title><rect x="73.8" y="179.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.8" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.15%)</title><rect x="73.8" y="163.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.08%)</title><rect x="74.2" y="147.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2 samples, 0.04%)</title><rect x="74.7" y="131.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.7" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="75.1" y="147.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="78.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.12%)</title><rect x="75.6" y="211.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.6" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.06%)</title><rect x="76.3" y="195.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (15 samples, 0.29%)</title><rect x="77.2" y="307.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (10 samples, 0.19%)</title><rect x="77.6" y="291.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.19%)</title><rect x="77.6" y="275.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.19%)</title><rect x="77.6" y="259.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.19%)</title><rect x="77.6" y="243.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.19%)</title><rect x="77.6" y="227.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.17%)</title><rect x="77.6" y="211.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (7 samples, 0.14%)</title><rect x="78.1" y="195.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7 samples, 0.14%)</title><rect x="78.1" y="179.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (2 samples, 0.04%)</title><rect x="78.1" y="163.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (2 samples, 0.04%)</title><rect x="78.1" y="147.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="78.1" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.10%)</title><rect x="78.6" y="163.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="78.6" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="78.6" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$393/1560942433.get$Lambda (2 samples, 0.04%)</title><rect x="78.6" y="115.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.04%)</title><rect x="79.0" y="147.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (3 samples, 0.06%)</title><rect x="79.9" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.10%)</title><rect x="80.6" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1315053200.apply (3 samples, 0.06%)</title><rect x="81.1" y="403.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.06%)</title><rect x="81.7" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.06%)</title><rect x="81.7" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.06%)</title><rect x="81.7" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (116 samples, 2.24%)</title><rect x="82.4" y="451.0" width="26.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.4" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.10%)</title><rect x="83.8" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.10%)</title><rect x="83.8" y="419.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.06%)</title><rect x="84.0" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="84.9" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.06%)</title><rect x="84.9" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.04%)</title><rect x="84.9" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="84.9" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (102 samples, 1.97%)</title><rect x="85.6" y="435.0" width="23.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.6" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (102 samples, 1.97%)</title><rect x="85.6" y="419.0" width="23.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.6" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (99 samples, 1.91%)</title><rect x="85.8" y="403.0" width="22.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.8" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.06%)</title><rect x="86.1" y="387.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (5 samples, 0.10%)</title><rect x="86.8" y="387.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.10%)</title><rect x="86.8" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.10%)</title><rect x="86.8" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.10%)</title><rect x="86.8" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.10%)</title><rect x="86.8" y="323.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (5 samples, 0.10%)</title><rect x="86.8" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.8" y="318.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (5 samples, 0.10%)</title><rect x="86.8" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (17 samples, 0.33%)</title><rect x="87.9" y="387.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (14 samples, 0.27%)</title><rect x="88.1" y="371.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.1" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.04%)</title><rect x="88.8" y="355.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (9 samples, 0.17%)</title><rect x="89.3" y="355.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="89.5" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.08%)</title><rect x="89.5" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.04%)</title><rect x="89.9" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.9" y="318.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.04%)</title><rect x="89.9" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.9" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (2 samples, 0.04%)</title><rect x="89.9" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.9" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (2 samples, 0.04%)</title><rect x="89.9" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (4 samples, 0.08%)</title><rect x="90.4" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.04%)</title><rect x="90.4" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.4" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.04%)</title><rect x="90.4" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.4" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="90.4" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.4" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.04%)</title><rect x="90.4" y="275.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.04%)</title><rect x="91.3" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (73 samples, 1.41%)</title><rect x="91.8" y="387.0" width="16.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.8" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (61 samples, 1.18%)</title><rect x="94.3" y="371.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.3" y="382.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (41 samples, 0.79%)</title><rect x="94.7" y="355.0" width="9.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="97.7" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.06%)</title><rect x="95.9" y="339.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="98.9" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (3 samples, 0.06%)</title><rect x="95.9" y="323.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="98.9" y="334.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.10%)</title><rect x="96.5" y="339.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="99.5" y="350.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="98.4" y="339.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="101.4" y="350.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (2 samples, 0.04%)</title><rect x="98.8" y="339.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="101.8" y="350.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (13 samples, 0.25%)</title><rect x="99.5" y="339.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="102.5" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="99.5" y="323.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="102.5" y="334.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (9 samples, 0.17%)</title><rect x="100.2" y="323.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="103.2" y="334.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.12%)</title><rect x="100.2" y="307.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="103.2" y="318.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (3 samples, 0.06%)</title><rect x="101.6" y="307.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="104.6" y="318.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.14%)</title><rect x="102.5" y="339.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="105.5" y="350.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.04%)</title><rect x="102.7" y="323.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="105.7" y="334.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.08%)</title><rect x="103.2" y="323.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="106.2" y="334.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (3 samples, 0.06%)</title><rect x="103.2" y="307.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="106.2" y="318.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (2 samples, 0.04%)</title><rect x="104.1" y="355.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="107.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$244/1029230441.run (13 samples, 0.25%)</title><rect x="105.0" y="355.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (11 samples, 0.21%)</title><rect x="105.4" y="339.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.4" y="350.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (11 samples, 0.21%)</title><rect x="105.4" y="323.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.4" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (11 samples, 0.21%)</title><rect x="105.4" y="307.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.4" y="318.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (11 samples, 0.21%)</title><rect x="105.4" y="291.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.4" y="302.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.19%)</title><rect x="105.7" y="275.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.7" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (8 samples, 0.15%)</title><rect x="106.1" y="259.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (5 samples, 0.10%)</title><rect x="106.8" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.8" y="254.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.04%)</title><rect x="107.5" y="227.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="110.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (28 samples, 0.54%)</title><rect x="108.8" y="499.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.8" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="109.8" y="483.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="112.8" y="494.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="109.8" y="467.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="112.8" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="109.8" y="451.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="112.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (11 samples, 0.21%)</title><rect x="110.2" y="483.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.17%)</title><rect x="110.7" y="467.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.04%)</title><rect x="112.3" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (11 samples, 0.21%)</title><rect x="112.7" y="483.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.21%)</title><rect x="112.7" y="467.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.7" y="478.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="113.4" y="451.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="116.4" y="462.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="113.4" y="435.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="116.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.12%)</title><rect x="113.9" y="451.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.9" y="462.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 0.10%)</title><rect x="113.9" y="435.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="116.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (4 samples, 0.08%)</title><rect x="115.2" y="499.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.2" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="115.5" y="483.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="118.5" y="494.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.04%)</title><rect x="115.5" y="467.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="118.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (18 samples, 0.35%)</title><rect x="116.1" y="499.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (16 samples, 0.31%)</title><rect x="116.1" y="483.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (5 samples, 0.10%)</title><rect x="117.3" y="467.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.12%)</title><rect x="118.4" y="467.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.4" y="478.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.04%)</title><rect x="119.3" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.3" y="462.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.04%)</title><rect x="119.3" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.3" y="446.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.04%)</title><rect x="119.3" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (2 samples, 0.04%)</title><rect x="119.8" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2 samples, 0.04%)</title><rect x="120.2" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (2 samples, 0.04%)</title><rect x="120.2" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.04%)</title><rect x="120.2" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.04%)</title><rect x="120.2" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.2" y="462.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.04%)</title><rect x="120.2" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (75 samples, 1.45%)</title><rect x="120.7" y="563.0" width="17.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (74 samples, 1.43%)</title><rect x="120.9" y="547.0" width="16.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.06%)</title><rect x="120.9" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="120.9" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.accept (2 samples, 0.04%)</title><rect x="121.1" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.accept (68 samples, 1.31%)</title><rect x="121.6" y="531.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (68 samples, 1.31%)</title><rect x="121.6" y="515.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (63 samples, 1.22%)</title><rect x="121.6" y="499.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (63 samples, 1.22%)</title><rect x="121.6" y="483.0" width="14.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.10%)</title><rect x="122.3" y="467.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.10%)</title><rect x="122.3" y="451.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.10%)</title><rect x="122.3" y="435.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.3" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="122.3" y="419.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="125.3" y="430.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="122.3" y="403.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="125.3" y="414.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="122.7" y="419.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="125.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (51 samples, 0.98%)</title><rect x="123.4" y="467.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.17%)</title><rect x="123.4" y="451.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.4" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 0.81%)</title><rect x="125.5" y="451.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 0.81%)</title><rect x="125.5" y="435.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="125.9" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.9" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (38 samples, 0.73%)</title><rect x="126.4" y="419.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (37 samples, 0.71%)</title><rect x="126.6" y="403.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.6" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 0.23%)</title><rect x="126.8" y="387.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="129.8" y="398.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.08%)</title><rect x="128.4" y="371.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="131.4" y="382.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.06%)</title><rect x="128.7" y="355.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="131.7" y="366.0"></text>
</g>
<g>
<title>__send (22 samples, 0.42%)</title><rect x="129.6" y="387.0" width="5.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="132.6" y="398.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.04%)</title><rect x="134.6" y="387.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="137.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.08%)</title><rect x="135.0" y="467.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="135.5" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="135.5" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (5 samples, 0.10%)</title><rect x="135.9" y="499.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.06%)</title><rect x="136.4" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.accept (3 samples, 0.06%)</title><rect x="137.1" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (3 samples, 0.06%)</title><rect x="137.1" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="137.3" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="137.3" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$654/1765400375.get (4 samples, 0.08%)</title><rect x="138.0" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$654/1765400375.get (1,481 samples, 28.59%)</title><rect x="138.9" y="579.0" width="337.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.9" y="590.0">ru/mail/polis/service/re1nex/AsyncApiControlle..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$get$13 (1,481 samples, 28.59%)</title><rect x="138.9" y="563.0" width="337.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.9" y="574.0">ru/mail/polis/service/re1nex/AsyncApiControlle..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (1,474 samples, 28.45%)</title><rect x="138.9" y="547.0" width="335.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.9" y="558.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (135 samples, 2.61%)</title><rect x="139.1" y="531.0" width="30.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.1" y="542.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (131 samples, 2.53%)</title><rect x="139.1" y="515.0" width="29.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.1" y="526.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (129 samples, 2.49%)</title><rect x="139.4" y="499.0" width="29.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.4" y="510.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (129 samples, 2.49%)</title><rect x="139.4" y="483.0" width="29.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.4" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (128 samples, 2.47%)</title><rect x="139.6" y="467.0" width="29.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.6" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (128 samples, 2.47%)</title><rect x="139.6" y="451.0" width="29.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.6" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (19 samples, 0.37%)</title><rect x="139.8" y="435.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="139.8" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="139.8" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="139.8" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="139.8" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="139.8" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="139.8" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.29%)</title><rect x="140.7" y="419.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.29%)</title><rect x="140.7" y="403.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.04%)</title><rect x="140.7" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.7" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.04%)</title><rect x="140.7" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.7" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="140.7" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.7" y="366.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="140.7" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="140.7" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.21%)</title><rect x="141.2" y="387.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.17%)</title><rect x="141.2" y="371.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.17%)</title><rect x="141.2" y="355.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.17%)</title><rect x="141.2" y="339.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.2" y="350.0"></text>
</g>
<g>
<title>__libc_pread64 (7 samples, 0.14%)</title><rect x="141.4" y="323.0" width="1.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="144.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="143.2" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.04%)</title><rect x="143.7" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (46 samples, 0.89%)</title><rect x="144.1" y="435.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (12 samples, 0.23%)</title><rect x="144.6" y="419.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.23%)</title><rect x="144.6" y="403.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.23%)</title><rect x="144.6" y="387.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (10 samples, 0.19%)</title><rect x="144.8" y="371.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 0.17%)</title><rect x="145.1" y="355.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 0.17%)</title><rect x="145.1" y="339.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.17%)</title><rect x="145.1" y="323.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.1" y="334.0"></text>
</g>
<g>
<title>__libc_pread64 (7 samples, 0.14%)</title><rect x="145.3" y="307.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="148.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (32 samples, 0.62%)</title><rect x="147.3" y="419.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (32 samples, 0.62%)</title><rect x="147.3" y="403.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (27 samples, 0.52%)</title><rect x="148.2" y="387.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (21 samples, 0.41%)</title><rect x="148.5" y="371.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (21 samples, 0.41%)</title><rect x="148.5" y="355.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (21 samples, 0.41%)</title><rect x="148.5" y="339.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.5" y="350.0"></text>
</g>
<g>
<title>__libc_pread64 (19 samples, 0.37%)</title><rect x="148.5" y="323.0" width="4.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="151.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.10%)</title><rect x="153.3" y="371.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.3" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.08%)</title><rect x="153.3" y="355.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.3" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.06%)</title><rect x="153.5" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.5" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.04%)</title><rect x="153.7" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (62 samples, 1.20%)</title><rect x="154.6" y="435.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (62 samples, 1.20%)</title><rect x="154.6" y="419.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="155.1" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.1" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="155.1" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.08%)</title><rect x="155.5" y="403.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.5" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.06%)</title><rect x="155.8" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.8" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="156.0" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.0" y="382.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="156.0" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="156.0" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (50 samples, 0.97%)</title><rect x="156.4" y="403.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (40 samples, 0.77%)</title><rect x="156.9" y="387.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (40 samples, 0.77%)</title><rect x="156.9" y="371.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (40 samples, 0.77%)</title><rect x="156.9" y="355.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.9" y="366.0"></text>
</g>
<g>
<title>__libc_pread64 (36 samples, 0.69%)</title><rect x="157.4" y="339.0" width="8.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="160.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.15%)</title><rect x="166.0" y="387.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (7 samples, 0.14%)</title><rect x="166.2" y="371.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.08%)</title><rect x="167.8" y="403.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.04%)</title><rect x="168.3" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$671/1425168384.apply (3 samples, 0.06%)</title><rect x="169.2" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (3 samples, 0.06%)</title><rect x="169.2" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="169.2" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (1,338 samples, 25.83%)</title><rect x="169.9" y="531.0" width="304.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.9" y="542.0">ru/mail/polis/dao/re1nex/NewDAO.cellItera..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (30 samples, 0.58%)</title><rect x="172.6" y="515.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (29 samples, 0.56%)</title><rect x="172.6" y="499.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.6" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.04%)</title><rect x="173.3" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.3" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.08%)</title><rect x="173.8" y="483.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.06%)</title><rect x="174.0" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.06%)</title><rect x="174.0" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.06%)</title><rect x="174.0" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="174.0" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.06%)</title><rect x="174.0" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.04%)</title><rect x="174.0" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (2 samples, 0.04%)</title><rect x="174.0" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (2 samples, 0.04%)</title><rect x="174.0" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (2 samples, 0.04%)</title><rect x="174.0" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (2 samples, 0.04%)</title><rect x="174.0" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.0" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.39%)</title><rect x="174.7" y="483.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.39%)</title><rect x="174.7" y="467.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.7" y="478.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.accept (3 samples, 0.06%)</title><rect x="174.9" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (15 samples, 0.29%)</title><rect x="175.8" y="451.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.10%)</title><rect x="176.7" y="435.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (2 samples, 0.04%)</title><rect x="177.2" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (6 samples, 0.12%)</title><rect x="177.9" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="178.5" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,092 samples, 21.08%)</title><rect x="179.4" y="515.0" width="248.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.4" y="526.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.06%)</title><rect x="179.9" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.9" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.06%)</title><rect x="179.9" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (3 samples, 0.06%)</title><rect x="179.9" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.9" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="179.9" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$661/742609776.accept (1,087 samples, 20.98%)</title><rect x="180.6" y="499.0" width="247.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.6" y="510.0">ru/mail/polis/dao/re1nex/NewDAO$$..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$cellIterator$5 (1,087 samples, 20.98%)</title><rect x="180.6" y="483.0" width="247.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.6" y="494.0">ru/mail/polis/dao/re1nex/NewDAO.l..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.iterator (1,087 samples, 20.98%)</title><rect x="180.6" y="467.0" width="247.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.6" y="478.0">ru/mail/polis/dao/re1nex/SSTable...</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt; (1,087 samples, 20.98%)</title><rect x="180.6" y="451.0" width="247.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="183.6" y="462.0">ru/mail/polis/dao/re1nex/SSTable$..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.binarySearch (1,087 samples, 20.98%)</title><rect x="180.6" y="435.0" width="247.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.6" y="446.0">ru/mail/polis/dao/re1nex/SSTable...</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.15%)</title><rect x="180.8" y="419.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.8" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.14%)</title><rect x="181.0" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (1,078 samples, 20.81%)</title><rect x="182.6" y="419.0" width="245.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.6" y="430.0">ru/mail/polis/dao/re1nex/SSTable...</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.17%)</title><rect x="182.6" y="403.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="182.9" y="387.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.9" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.06%)</title><rect x="182.9" y="371.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="185.9" y="382.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="183.1" y="355.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="186.1" y="366.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="183.1" y="339.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="186.1" y="350.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="183.1" y="323.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="186.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.10%)</title><rect x="183.5" y="371.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="183.8" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (406 samples, 7.84%)</title><rect x="184.7" y="403.0" width="92.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.7" y="414.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.44%)</title><rect x="185.1" y="387.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.1" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.39%)</title><rect x="185.8" y="371.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (19 samples, 0.37%)</title><rect x="186.1" y="355.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.1" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (18 samples, 0.35%)</title><rect x="186.3" y="339.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.08%)</title><rect x="187.9" y="323.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="190.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="188.1" y="307.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="188.8" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.10%)</title><rect x="189.2" y="323.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (381 samples, 7.35%)</title><rect x="190.4" y="387.0" width="86.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.4" y="398.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (378 samples, 7.30%)</title><rect x="191.1" y="371.0" width="86.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.1" y="382.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (29 samples, 0.56%)</title><rect x="192.7" y="355.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.7" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (29 samples, 0.56%)</title><rect x="192.7" y="339.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.7" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.17%)</title><rect x="197.2" y="323.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.2" y="334.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (9 samples, 0.17%)</title><rect x="197.2" y="307.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.2" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (9 samples, 0.17%)</title><rect x="197.2" y="291.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (24 samples, 0.46%)</title><rect x="199.3" y="355.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.3" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (23 samples, 0.44%)</title><rect x="199.5" y="339.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.5" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (20 samples, 0.39%)</title><rect x="200.2" y="323.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.2" y="334.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (20 samples, 0.39%)</title><rect x="200.2" y="307.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.2" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (20 samples, 0.39%)</title><rect x="200.2" y="291.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (282 samples, 5.44%)</title><rect x="204.7" y="355.0" width="64.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.7" y="366.0">sun/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.15%)</title><rect x="205.0" y="339.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.06%)</title><rect x="206.1" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.1" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (2 samples, 0.04%)</title><rect x="206.3" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (228 samples, 4.40%)</title><rect x="207.0" y="339.0" width="51.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.0" y="350.0">sun/n..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.08%)</title><rect x="207.2" y="323.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.2" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.08%)</title><rect x="207.2" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.08%)</title><rect x="207.2" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (223 samples, 4.30%)</title><rect x="208.1" y="323.0" width="50.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.1" y="334.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (223 samples, 4.30%)</title><rect x="208.1" y="307.0" width="50.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.1" y="318.0">sun/n..</text>
</g>
<g>
<title>__libc_pread64 (200 samples, 3.86%)</title><rect x="210.2" y="291.0" width="45.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="213.2" y="302.0">__li..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.12%)</title><rect x="255.7" y="291.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="258.7" y="302.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.10%)</title><rect x="257.1" y="291.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="260.1" y="302.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.06%)</title><rect x="258.3" y="291.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="261.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (44 samples, 0.85%)</title><rect x="258.9" y="339.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (17 samples, 0.33%)</title><rect x="259.6" y="323.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.6" y="334.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (2 samples, 0.04%)</title><rect x="260.3" y="307.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="263.3" y="318.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (2 samples, 0.04%)</title><rect x="260.3" y="291.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="263.3" y="302.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (2 samples, 0.04%)</title><rect x="260.3" y="275.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="263.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.10%)</title><rect x="260.8" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.8" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (7 samples, 0.14%)</title><rect x="261.9" y="307.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="264.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (24 samples, 0.46%)</title><rect x="263.5" y="323.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (17 samples, 0.33%)</title><rect x="269.0" y="355.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (11 samples, 0.21%)</title><rect x="270.3" y="339.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.3" y="350.0"></text>
</g>
<g>
<title>pthread_self@plt (2 samples, 0.04%)</title><rect x="272.4" y="323.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="275.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (19 samples, 0.37%)</title><rect x="272.8" y="355.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.8" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="276.5" y="339.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="279.5" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.06%)</title><rect x="276.5" y="323.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="279.5" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="276.7" y="307.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="279.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (663 samples, 12.80%)</title><rect x="277.2" y="403.0" width="151.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="280.2" y="414.0">sun/nio/ch/FileChan..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (2 samples, 0.04%)</title><rect x="278.1" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.1" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.04%)</title><rect x="278.1" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (657 samples, 12.68%)</title><rect x="278.5" y="387.0" width="149.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.5" y="398.0">sun/nio/ch/FileChan..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (50 samples, 0.97%)</title><rect x="281.7" y="371.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.7" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (49 samples, 0.95%)</title><rect x="281.9" y="355.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.9" y="366.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (2 samples, 0.04%)</title><rect x="289.7" y="339.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="292.7" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (13 samples, 0.25%)</title><rect x="290.1" y="339.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.1" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (13 samples, 0.25%)</title><rect x="290.1" y="323.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (13 samples, 0.25%)</title><rect x="290.1" y="307.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (28 samples, 0.54%)</title><rect x="293.1" y="371.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.1" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (28 samples, 0.54%)</title><rect x="293.1" y="355.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.1" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (23 samples, 0.44%)</title><rect x="294.2" y="339.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.2" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (23 samples, 0.44%)</title><rect x="294.2" y="323.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.2" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (23 samples, 0.44%)</title><rect x="294.2" y="307.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (516 samples, 9.96%)</title><rect x="299.5" y="371.0" width="117.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.5" y="382.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.19%)</title><rect x="300.4" y="355.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.4" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.12%)</title><rect x="301.3" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.3" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (6 samples, 0.12%)</title><rect x="301.3" y="323.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (420 samples, 8.11%)</title><rect x="302.9" y="355.0" width="95.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.9" y="366.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.06%)</title><rect x="303.1" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.1" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.06%)</title><rect x="303.1" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="303.1" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.1" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.06%)</title><rect x="303.1" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (416 samples, 8.03%)</title><rect x="303.8" y="339.0" width="94.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.8" y="350.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (415 samples, 8.01%)</title><rect x="304.0" y="323.0" width="94.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.0" y="334.0">sun/nio/ch/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.06%)</title><rect x="309.3" y="307.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="312.3" y="318.0"></text>
</g>
<g>
<title>__libc_pread64 (376 samples, 7.26%)</title><rect x="310.0" y="307.0" width="85.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="313.0" y="318.0">__libc_pre..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.15%)</title><rect x="395.6" y="307.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="398.6" y="318.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.10%)</title><rect x="397.4" y="307.0" width="1.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="400.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (81 samples, 1.56%)</title><rect x="398.6" y="355.0" width="18.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.6" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (21 samples, 0.41%)</title><rect x="399.5" y="339.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.5" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (11 samples, 0.21%)</title><rect x="399.7" y="323.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.10%)</title><rect x="402.4" y="323.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.06%)</title><rect x="403.6" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (56 samples, 1.08%)</title><rect x="404.2" y="339.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.2" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="414.9" y="323.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="417.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (6 samples, 0.12%)</title><rect x="415.4" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (32 samples, 0.62%)</title><rect x="417.0" y="371.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.0" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.12%)</title><rect x="420.2" y="355.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="423.2" y="366.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.08%)</title><rect x="420.6" y="339.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="423.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (12 samples, 0.23%)</title><rect x="421.6" y="355.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (17 samples, 0.33%)</title><rect x="424.3" y="371.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (8 samples, 0.15%)</title><rect x="428.8" y="515.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="431.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (8 samples, 0.15%)</title><rect x="428.8" y="499.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.12%)</title><rect x="429.3" y="483.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.3" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (6 samples, 0.12%)</title><rect x="429.3" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.3" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (6 samples, 0.12%)</title><rect x="429.3" y="451.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (137 samples, 2.64%)</title><rect x="430.7" y="515.0" width="31.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.7" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (137 samples, 2.64%)</title><rect x="430.7" y="499.0" width="31.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.7" y="510.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (137 samples, 2.64%)</title><rect x="430.7" y="483.0" width="31.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.7" y="494.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (136 samples, 2.62%)</title><rect x="430.7" y="467.0" width="30.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.7" y="478.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (136 samples, 2.62%)</title><rect x="430.7" y="451.0" width="30.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.7" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (136 samples, 2.62%)</title><rect x="430.7" y="435.0" width="30.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.7" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (136 samples, 2.62%)</title><rect x="430.7" y="419.0" width="30.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.7" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (28 samples, 0.54%)</title><rect x="430.9" y="403.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="433.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.10%)</title><rect x="430.9" y="387.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.9" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.10%)</title><rect x="430.9" y="371.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="431.1" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.1" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="431.1" y="339.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="431.3" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="431.3" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.3" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="431.6" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 0.42%)</title><rect x="432.3" y="387.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.3" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (22 samples, 0.42%)</title><rect x="432.3" y="371.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="432.5" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.5" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="432.5" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.25%)</title><rect x="433.2" y="355.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (11 samples, 0.21%)</title><rect x="433.2" y="339.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (11 samples, 0.21%)</title><rect x="433.2" y="323.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (11 samples, 0.21%)</title><rect x="433.2" y="307.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.2" y="318.0"></text>
</g>
<g>
<title>__libc_pread64 (10 samples, 0.19%)</title><rect x="433.4" y="291.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="436.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="435.7" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.04%)</title><rect x="435.7" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.04%)</title><rect x="436.1" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.04%)</title><rect x="436.1" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.06%)</title><rect x="436.6" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (51 samples, 0.98%)</title><rect x="437.3" y="403.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (19 samples, 0.37%)</title><rect x="437.5" y="387.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (18 samples, 0.35%)</title><rect x="437.7" y="371.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (18 samples, 0.35%)</title><rect x="437.7" y="355.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="437.7" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.7" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="437.7" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 0.23%)</title><rect x="438.2" y="339.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.19%)</title><rect x="438.2" y="323.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (10 samples, 0.19%)</title><rect x="438.2" y="307.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="441.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.17%)</title><rect x="438.4" y="291.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.4" y="302.0"></text>
</g>
<g>
<title>__libc_pread64 (8 samples, 0.15%)</title><rect x="438.6" y="275.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="441.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="440.5" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.04%)</title><rect x="440.5" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.06%)</title><rect x="440.9" y="339.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (31 samples, 0.60%)</title><rect x="441.8" y="387.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (31 samples, 0.60%)</title><rect x="441.8" y="371.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.06%)</title><rect x="441.8" y="355.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.8" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.06%)</title><rect x="441.8" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.8" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="442.1" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.1" y="334.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="442.1" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="442.1" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.10%)</title><rect x="442.5" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.5" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.10%)</title><rect x="442.5" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.5" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.10%)</title><rect x="442.5" y="323.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.5" y="334.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.10%)</title><rect x="442.5" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.5" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.10%)</title><rect x="442.5" y="291.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (18 samples, 0.35%)</title><rect x="443.6" y="355.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (16 samples, 0.31%)</title><rect x="443.9" y="339.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="446.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.29%)</title><rect x="444.1" y="323.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.29%)</title><rect x="444.1" y="307.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="447.1" y="318.0"></text>
</g>
<g>
<title>__libc_pread64 (14 samples, 0.27%)</title><rect x="444.1" y="291.0" width="3.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="447.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.08%)</title><rect x="448.0" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (56 samples, 1.08%)</title><rect x="448.9" y="403.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (56 samples, 1.08%)</title><rect x="448.9" y="387.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.04%)</title><rect x="449.1" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.1" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.04%)</title><rect x="449.1" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.08%)</title><rect x="449.6" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.6" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.08%)</title><rect x="449.6" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.6" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.08%)</title><rect x="449.6" y="339.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.6" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.08%)</title><rect x="449.6" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.6" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.08%)</title><rect x="449.6" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (42 samples, 0.81%)</title><rect x="450.5" y="371.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (33 samples, 0.64%)</title><rect x="450.9" y="355.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (33 samples, 0.64%)</title><rect x="450.9" y="339.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (33 samples, 0.64%)</title><rect x="450.9" y="323.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.9" y="334.0"></text>
</g>
<g>
<title>__libc_pread64 (30 samples, 0.58%)</title><rect x="451.4" y="307.0" width="6.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="454.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.14%)</title><rect x="458.5" y="355.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.5" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="458.5" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.10%)</title><rect x="458.9" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.9" y="350.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="459.6" y="323.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="462.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.06%)</title><rect x="460.0" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.0" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="460.3" y="355.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="463.3" y="366.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="460.3" y="339.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="463.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.08%)</title><rect x="460.7" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (56 samples, 1.08%)</title><rect x="461.9" y="515.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.9" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (37 samples, 0.71%)</title><rect x="463.2" y="499.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (36 samples, 0.69%)</title><rect x="463.2" y="483.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (34 samples, 0.66%)</title><rect x="463.2" y="467.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (32 samples, 0.62%)</title><rect x="463.7" y="451.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (3 samples, 0.06%)</title><rect x="464.1" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (2 samples, 0.04%)</title><rect x="464.4" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.04%)</title><rect x="464.4" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="464.4" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="464.4" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (27 samples, 0.52%)</title><rect x="464.8" y="435.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (27 samples, 0.52%)</title><rect x="464.8" y="419.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.04%)</title><rect x="466.4" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="466.4" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="466.4" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (18 samples, 0.35%)</title><rect x="466.9" y="403.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.27%)</title><rect x="467.8" y="387.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.27%)</title><rect x="467.8" y="371.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.27%)</title><rect x="467.8" y="355.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.8" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.04%)</title><rect x="468.0" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.prevEntry (2 samples, 0.04%)</title><rect x="468.0" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.0" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.17%)</title><rect x="468.5" y="339.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.5" y="350.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.04%)</title><rect x="470.1" y="323.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="473.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.23%)</title><rect x="471.7" y="499.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.23%)</title><rect x="471.7" y="483.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (12 samples, 0.23%)</title><rect x="471.7" y="467.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (11 samples, 0.21%)</title><rect x="471.9" y="451.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.9" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="473.9" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.9" y="446.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="473.9" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (2 samples, 0.04%)</title><rect x="473.9" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (4 samples, 0.08%)</title><rect x="474.8" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.06%)</title><rect x="475.1" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.06%)</title><rect x="475.1" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.1" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="475.1" y="499.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="478.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (56 samples, 1.08%)</title><rect x="476.2" y="595.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (53 samples, 1.02%)</title><rect x="476.9" y="579.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (4 samples, 0.08%)</title><rect x="477.6" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.08%)</title><rect x="477.6" y="547.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.08%)</title><rect x="477.6" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$197/1087660786.apply (2 samples, 0.04%)</title><rect x="478.0" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (46 samples, 0.89%)</title><rect x="478.5" y="563.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (46 samples, 0.89%)</title><rect x="478.5" y="547.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (45 samples, 0.87%)</title><rect x="478.7" y="531.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (43 samples, 0.83%)</title><rect x="479.2" y="515.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.08%)</title><rect x="479.2" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.08%)</title><rect x="479.2" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.accept (39 samples, 0.75%)</title><rect x="480.1" y="499.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (39 samples, 0.75%)</title><rect x="480.1" y="483.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (39 samples, 0.75%)</title><rect x="480.1" y="467.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (39 samples, 0.75%)</title><rect x="480.1" y="451.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (36 samples, 0.69%)</title><rect x="480.8" y="435.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (36 samples, 0.69%)</title><rect x="480.8" y="419.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="481.0" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="481.0" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$203/366038914.accept (2 samples, 0.04%)</title><rect x="481.0" y="371.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$203/366038914.accept (33 samples, 0.64%)</title><rect x="481.5" y="403.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$15 (33 samples, 0.64%)</title><rect x="481.5" y="387.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (26 samples, 0.50%)</title><rect x="481.5" y="371.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26 samples, 0.50%)</title><rect x="481.5" y="355.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="481.9" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="481.9" y="323.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="481.9" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 0.41%)</title><rect x="482.6" y="339.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.14%)</title><rect x="482.6" y="323.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.27%)</title><rect x="484.2" y="323.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.27%)</title><rect x="484.2" y="307.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="484.4" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.19%)</title><rect x="485.1" y="291.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.1" y="302.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 0.19%)</title><rect x="485.1" y="275.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.1" y="286.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.15%)</title><rect x="485.1" y="259.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="488.1" y="270.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.10%)</title><rect x="485.8" y="243.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="488.8" y="254.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="486.2" y="227.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="489.2" y="238.0"></text>
</g>
<g>
<title>__send (2 samples, 0.04%)</title><rect x="486.9" y="259.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="489.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$658/677759461.mergeResponse (7 samples, 0.14%)</title><rect x="487.4" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$3 (7 samples, 0.14%)</title><rect x="487.4" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergeGetResponseBuilders (7 samples, 0.14%)</title><rect x="487.4" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (4 samples, 0.08%)</title><rect x="487.8" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.linkToTargetMethod (3 samples, 0.06%)</title><rect x="487.8" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1841757097.invoke (3 samples, 0.06%)</title><rect x="487.8" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.06%)</title><rect x="489.0" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="489.0" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.06%)</title><rect x="489.0" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.06%)</title><rect x="489.0" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.06%)</title><rect x="489.0" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.06%)</title><rect x="489.0" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (29 samples, 0.56%)</title><rect x="489.7" y="595.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.56%)</title><rect x="489.7" y="579.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 0.56%)</title><rect x="489.7" y="563.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.56%)</title><rect x="489.7" y="547.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.7" y="558.0"></text>
</g>
<g>
<title>itable stub (12 samples, 0.23%)</title><rect x="491.7" y="531.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="494.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4 samples, 0.08%)</title><rect x="494.4" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$470/1679529773.run (2 samples, 0.04%)</title><rect x="495.3" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.run (2 samples, 0.04%)</title><rect x="495.8" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="498.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (855 samples, 16.50%)</title><rect x="496.3" y="595.0" width="194.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.3" y="606.0">java/util/concurrent/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (368 samples, 7.10%)</title><rect x="498.8" y="579.0" width="83.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.8" y="590.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (287 samples, 5.54%)</title><rect x="507.6" y="563.0" width="65.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.6" y="574.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (45 samples, 0.87%)</title><rect x="510.2" y="547.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (45 samples, 0.87%)</title><rect x="510.2" y="531.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (30 samples, 0.58%)</title><rect x="512.9" y="515.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 0.58%)</title><rect x="512.9" y="499.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.56%)</title><rect x="513.1" y="483.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.1" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark (19 samples, 0.37%)</title><rect x="513.3" y="467.0" width="4.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="516.3" y="478.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="513.3" y="451.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="516.3" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="513.8" y="451.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="516.8" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.15%)</title><rect x="514.3" y="451.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="517.3" y="462.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.06%)</title><rect x="516.1" y="451.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="519.1" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.08%)</title><rect x="516.8" y="451.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="519.8" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.17%)</title><rect x="517.7" y="467.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="520.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.06%)</title><rect x="519.7" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (229 samples, 4.42%)</title><rect x="520.4" y="547.0" width="52.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.4" y="558.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (229 samples, 4.42%)</title><rect x="520.4" y="531.0" width="52.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.4" y="542.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="523.4" y="515.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="526.4" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="523.8" y="515.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="526.8" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (129 samples, 2.49%)</title><rect x="524.5" y="515.0" width="29.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="527.5" y="526.0">Un..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.04%)</title><rect x="525.0" y="499.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="528.0" y="510.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.06%)</title><rect x="525.4" y="499.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="528.4" y="510.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="526.1" y="499.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="529.1" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (34 samples, 0.66%)</title><rect x="526.5" y="499.0" width="7.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="529.5" y="510.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.10%)</title><rect x="530.6" y="483.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="533.6" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.04%)</title><rect x="531.3" y="467.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="534.3" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.15%)</title><rect x="532.0" y="483.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="535.0" y="494.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.04%)</title><rect x="533.8" y="483.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="536.8" y="494.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (4 samples, 0.08%)</title><rect x="534.3" y="499.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="537.3" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.08%)</title><rect x="535.2" y="499.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="538.2" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (4 samples, 0.08%)</title><rect x="536.1" y="499.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="539.1" y="510.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="537.0" y="499.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="540.0" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="537.5" y="499.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="540.5" y="510.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (54 samples, 1.04%)</title><rect x="537.9" y="499.0" width="12.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="540.9" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.04%)</title><rect x="550.2" y="499.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="553.2" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (10 samples, 0.19%)</title><rect x="550.9" y="499.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="553.9" y="510.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.04%)</title><rect x="553.2" y="499.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="556.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 1.47%)</title><rect x="553.9" y="515.0" width="17.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="556.9" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.04%)</title><rect x="553.9" y="499.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="556.9" y="510.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="554.3" y="499.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="557.3" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (61 samples, 1.18%)</title><rect x="555.0" y="499.0" width="13.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="558.0" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.12%)</title><rect x="568.9" y="499.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="571.9" y="510.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.04%)</title><rect x="570.5" y="499.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="573.5" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (6 samples, 0.12%)</title><rect x="571.2" y="515.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="574.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="572.6" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="573.0" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="573.0" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.04%)</title><rect x="573.0" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (40 samples, 0.77%)</title><rect x="573.5" y="563.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (40 samples, 0.77%)</title><rect x="573.5" y="547.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (40 samples, 0.77%)</title><rect x="573.5" y="531.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 0.73%)</title><rect x="573.5" y="515.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.60%)</title><rect x="575.1" y="499.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.1" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.35%)</title><rect x="575.5" y="483.0" width="4.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="578.5" y="494.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="575.7" y="467.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="578.7" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.08%)</title><rect x="576.4" y="467.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="579.4" y="478.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.06%)</title><rect x="577.8" y="467.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="580.8" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.08%)</title><rect x="578.7" y="467.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="581.7" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.21%)</title><rect x="579.6" y="483.0" width="2.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="582.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="582.1" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (476 samples, 9.19%)</title><rect x="582.6" y="579.0" width="108.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.6" y="590.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (349 samples, 6.74%)</title><rect x="589.6" y="563.0" width="79.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.6" y="574.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.10%)</title><rect x="591.9" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.10%)</title><rect x="591.9" y="531.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.10%)</title><rect x="591.9" y="515.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="592.4" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="592.4" y="483.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="595.4" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.06%)</title><rect x="592.4" y="467.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="595.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (84 samples, 1.62%)</title><rect x="593.1" y="547.0" width="19.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (84 samples, 1.62%)</title><rect x="593.1" y="531.0" width="19.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (60 samples, 1.16%)</title><rect x="598.3" y="515.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (60 samples, 1.16%)</title><rect x="598.3" y="499.0" width="13.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (4 samples, 0.08%)</title><rect x="598.5" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (55 samples, 1.06%)</title><rect x="599.4" y="483.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.4" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="599.4" y="467.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="602.4" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (33 samples, 0.64%)</title><rect x="599.9" y="467.0" width="7.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="602.9" y="478.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="600.6" y="451.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="603.6" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.10%)</title><rect x="601.0" y="451.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="604.0" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.12%)</title><rect x="602.2" y="451.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="605.2" y="462.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="603.5" y="451.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="606.5" y="462.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.04%)</title><rect x="604.0" y="451.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="607.0" y="462.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (5 samples, 0.10%)</title><rect x="604.4" y="451.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="607.4" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_lock (8 samples, 0.15%)</title><rect x="605.6" y="451.0" width="1.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="608.6" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.35%)</title><rect x="607.6" y="467.0" width="4.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="610.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (247 samples, 4.77%)</title><rect x="612.2" y="547.0" width="56.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.2" y="558.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (246 samples, 4.75%)</title><rect x="612.4" y="531.0" width="56.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.4" y="542.0">jdk/in..</text>
</g>
<g>
<title>Unsafe_Park (128 samples, 2.47%)</title><rect x="614.7" y="515.0" width="29.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="617.7" y="526.0">Un..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.04%)</title><rect x="615.8" y="499.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="618.8" y="510.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.06%)</title><rect x="616.3" y="499.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="619.3" y="510.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="617.0" y="499.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="620.0" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (41 samples, 0.79%)</title><rect x="617.7" y="499.0" width="9.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="620.7" y="510.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.14%)</title><rect x="622.4" y="483.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="625.4" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.04%)</title><rect x="623.6" y="467.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="626.6" y="478.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.06%)</title><rect x="624.0" y="483.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="627.0" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (10 samples, 0.19%)</title><rect x="624.7" y="483.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="627.7" y="494.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.04%)</title><rect x="627.0" y="499.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="630.0" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="627.4" y="499.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="630.4" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="628.4" y="499.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="631.4" y="510.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (55 samples, 1.06%)</title><rect x="628.8" y="499.0" width="12.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="631.8" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (8 samples, 0.15%)</title><rect x="641.8" y="499.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="644.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 2.03%)</title><rect x="643.8" y="515.0" width="24.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="646.8" y="526.0">[..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (13 samples, 0.25%)</title><rect x="643.8" y="499.0" width="3.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="646.8" y="510.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.08%)</title><rect x="646.8" y="499.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="649.8" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (77 samples, 1.49%)</title><rect x="647.7" y="499.0" width="17.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="650.7" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.12%)</title><rect x="665.3" y="499.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="668.3" y="510.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.08%)</title><rect x="666.6" y="499.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="669.6" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.06%)</title><rect x="667.8" y="515.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="670.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="668.4" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (25 samples, 0.48%)</title><rect x="669.1" y="563.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (25 samples, 0.48%)</title><rect x="669.1" y="547.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (25 samples, 0.48%)</title><rect x="669.1" y="531.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.06%)</title><rect x="674.1" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (14 samples, 0.27%)</title><rect x="674.8" y="563.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (14 samples, 0.27%)</title><rect x="674.8" y="547.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (14 samples, 0.27%)</title><rect x="674.8" y="531.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.19%)</title><rect x="675.7" y="515.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.19%)</title><rect x="675.7" y="499.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.19%)</title><rect x="675.7" y="483.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.7" y="494.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.08%)</title><rect x="675.7" y="467.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="678.7" y="478.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="676.0" y="451.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="679.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="676.6" y="467.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="679.6" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.06%)</title><rect x="676.9" y="451.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="679.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (57 samples, 1.10%)</title><rect x="678.0" y="563.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (57 samples, 1.10%)</title><rect x="678.0" y="547.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (57 samples, 1.10%)</title><rect x="678.0" y="531.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (56 samples, 1.08%)</title><rect x="678.0" y="515.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="681.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (52 samples, 1.00%)</title><rect x="678.9" y="499.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.9" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="679.4" y="483.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="682.4" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="679.8" y="483.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="682.8" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark (24 samples, 0.46%)</title><rect x="680.5" y="483.0" width="5.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="683.5" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (5 samples, 0.10%)</title><rect x="681.2" y="467.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="684.2" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.10%)</title><rect x="682.6" y="467.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="685.6" y="478.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.08%)</title><rect x="683.9" y="467.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="686.9" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.10%)</title><rect x="684.8" y="467.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="687.8" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.39%)</title><rect x="686.2" y="483.0" width="4.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="689.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$470/1679529773.run (114 samples, 2.20%)</title><rect x="691.0" y="595.0" width="26.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.0" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (114 samples, 2.20%)</title><rect x="691.0" y="579.0" width="26.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.0" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (114 samples, 2.20%)</title><rect x="691.0" y="563.0" width="26.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.0" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (108 samples, 2.08%)</title><rect x="692.1" y="547.0" width="24.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.1" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (108 samples, 2.08%)</title><rect x="692.1" y="531.0" width="24.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.1" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (108 samples, 2.08%)</title><rect x="692.1" y="515.0" width="24.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.1" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (107 samples, 2.07%)</title><rect x="692.1" y="499.0" width="24.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="692.1" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (2 samples, 0.04%)</title><rect x="692.1" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.04%)</title><rect x="692.1" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (105 samples, 2.03%)</title><rect x="692.6" y="483.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.6" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (105 samples, 2.03%)</title><rect x="692.6" y="467.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.6" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (105 samples, 2.03%)</title><rect x="692.6" y="451.0" width="23.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.6" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (105 samples, 2.03%)</title><rect x="692.6" y="435.0" width="23.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.6" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (54 samples, 1.04%)</title><rect x="693.5" y="419.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (46 samples, 0.89%)</title><rect x="694.6" y="403.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (38 samples, 0.73%)</title><rect x="696.5" y="387.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (36 samples, 0.69%)</title><rect x="696.5" y="371.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36 samples, 0.69%)</title><rect x="696.5" y="355.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13 samples, 0.25%)</title><rect x="697.6" y="339.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.6" y="350.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.08%)</title><rect x="698.0" y="323.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="701.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="699.0" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$503/474007538.apply (5 samples, 0.10%)</title><rect x="699.4" y="323.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.08%)</title><rect x="699.6" y="307.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.08%)</title><rect x="699.6" y="291.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.06%)</title><rect x="699.6" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.06%)</title><rect x="699.6" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.06%)</title><rect x="699.6" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (14 samples, 0.27%)</title><rect x="700.6" y="339.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="703.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12 samples, 0.23%)</title><rect x="701.0" y="323.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.06%)</title><rect x="701.0" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="701.0" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.0" y="302.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="701.0" y="275.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="704.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$435/1932218312.apply (9 samples, 0.17%)</title><rect x="701.7" y="307.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (9 samples, 0.17%)</title><rect x="701.7" y="291.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 0.17%)</title><rect x="701.7" y="275.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/925206735.apply (3 samples, 0.06%)</title><rect x="701.7" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.06%)</title><rect x="701.7" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="701.9" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="701.9" y="211.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/868767352.apply (6 samples, 0.12%)</title><rect x="702.4" y="259.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (6 samples, 0.12%)</title><rect x="702.4" y="243.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (6 samples, 0.12%)</title><rect x="702.4" y="227.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6 samples, 0.12%)</title><rect x="702.4" y="211.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (5 samples, 0.10%)</title><rect x="702.4" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$518/2112924215.get (2 samples, 0.04%)</title><rect x="704.2" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="704.7" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (2 samples, 0.04%)</title><rect x="704.7" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.04%)</title><rect x="704.7" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.04%)</title><rect x="704.7" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.06%)</title><rect x="705.1" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (46 samples, 0.89%)</title><rect x="706.0" y="419.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (46 samples, 0.89%)</title><rect x="706.0" y="403.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (46 samples, 0.89%)</title><rect x="706.0" y="387.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (44 samples, 0.85%)</title><rect x="706.5" y="371.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$510/1796891645.run (2 samples, 0.04%)</title><rect x="707.2" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.04%)</title><rect x="707.2" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.04%)</title><rect x="707.2" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (39 samples, 0.75%)</title><rect x="707.6" y="355.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.6" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (36 samples, 0.69%)</title><rect x="707.6" y="339.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (36 samples, 0.69%)</title><rect x="707.6" y="323.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (35 samples, 0.68%)</title><rect x="707.8" y="307.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (35 samples, 0.68%)</title><rect x="707.8" y="291.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (9 samples, 0.17%)</title><rect x="707.8" y="275.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.8" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.17%)</title><rect x="707.8" y="259.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.8" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (9 samples, 0.17%)</title><rect x="707.8" y="243.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (26 samples, 0.50%)</title><rect x="709.9" y="275.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (20 samples, 0.39%)</title><rect x="711.0" y="259.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.0" y="270.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.04%)</title><rect x="711.7" y="243.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="714.7" y="254.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (3 samples, 0.06%)</title><rect x="712.2" y="243.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="715.2" y="254.0"></text>
</g>
<g>
<title>writev (11 samples, 0.21%)</title><rect x="713.1" y="243.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="716.1" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.06%)</title><rect x="715.8" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (519 samples, 10.02%)</title><rect x="717.0" y="595.0" width="118.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.0" y="606.0">jdk/internal/n..</text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="717.2" y="579.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="720.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (516 samples, 9.96%)</title><rect x="717.6" y="579.0" width="117.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.6" y="590.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.04%)</title><rect x="717.6" y="563.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.04%)</title><rect x="718.1" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.04%)</title><rect x="718.1" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.04%)</title><rect x="718.1" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="718.1" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="718.1" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="718.1" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.04%)</title><rect x="718.1" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (319 samples, 6.16%)</title><rect x="718.5" y="563.0" width="72.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.5" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (319 samples, 6.16%)</title><rect x="718.5" y="547.0" width="72.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.5" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (317 samples, 6.12%)</title><rect x="719.0" y="531.0" width="72.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.0" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (14 samples, 0.27%)</title><rect x="719.2" y="515.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (5 samples, 0.10%)</title><rect x="719.5" y="499.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.08%)</title><rect x="719.7" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.08%)</title><rect x="719.7" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="720.1" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (8 samples, 0.15%)</title><rect x="720.6" y="499.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.10%)</title><rect x="721.3" y="483.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (24 samples, 0.46%)</title><rect x="722.4" y="515.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (24 samples, 0.46%)</title><rect x="722.4" y="499.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (24 samples, 0.46%)</title><rect x="722.4" y="483.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (24 samples, 0.46%)</title><rect x="722.4" y="467.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (24 samples, 0.46%)</title><rect x="722.4" y="451.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (24 samples, 0.46%)</title><rect x="722.4" y="435.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (23 samples, 0.44%)</title><rect x="722.6" y="419.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (22 samples, 0.42%)</title><rect x="722.9" y="403.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (21 samples, 0.41%)</title><rect x="723.1" y="387.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.1" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="723.6" y="371.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="726.6" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.08%)</title><rect x="723.6" y="355.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="726.6" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="723.6" y="339.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="726.6" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (2 samples, 0.04%)</title><rect x="724.0" y="339.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="727.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="724.5" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.25%)</title><rect x="724.9" y="371.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (9 samples, 0.17%)</title><rect x="725.8" y="355.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.8" y="366.0"></text>
</g>
<g>
<title>__libc_write (7 samples, 0.14%)</title><rect x="726.1" y="339.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="729.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.06%)</title><rect x="727.9" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.04%)</title><rect x="728.1" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.04%)</title><rect x="728.1" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="728.1" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="728.1" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="731.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.04%)</title><rect x="728.1" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (5 samples, 0.10%)</title><rect x="728.8" y="515.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5 samples, 0.10%)</title><rect x="728.8" y="499.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (5 samples, 0.10%)</title><rect x="728.8" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (5 samples, 0.10%)</title><rect x="728.8" y="467.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.8" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="729.5" y="451.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="732.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (269 samples, 5.19%)</title><rect x="729.9" y="515.0" width="61.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.9" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (266 samples, 5.13%)</title><rect x="729.9" y="499.0" width="60.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.9" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (266 samples, 5.13%)</title><rect x="729.9" y="483.0" width="60.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.9" y="494.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (266 samples, 5.13%)</title><rect x="729.9" y="467.0" width="60.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.9" y="478.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (164 samples, 3.17%)</title><rect x="729.9" y="451.0" width="37.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.9" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (164 samples, 3.17%)</title><rect x="729.9" y="435.0" width="37.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.9" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (162 samples, 3.13%)</title><rect x="730.4" y="419.0" width="36.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.4" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (156 samples, 3.01%)</title><rect x="730.6" y="403.0" width="35.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.6" y="414.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (155 samples, 2.99%)</title><rect x="730.8" y="387.0" width="35.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.8" y="398.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (155 samples, 2.99%)</title><rect x="730.8" y="371.0" width="35.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.8" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (155 samples, 2.99%)</title><rect x="730.8" y="355.0" width="35.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.8" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (6 samples, 0.12%)</title><rect x="730.8" y="339.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.12%)</title><rect x="730.8" y="323.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.12%)</title><rect x="730.8" y="307.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.8" y="318.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="731.5" y="291.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="734.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (141 samples, 2.72%)</title><rect x="732.2" y="339.0" width="32.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.2" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (141 samples, 2.72%)</title><rect x="732.2" y="323.0" width="32.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.2" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (115 samples, 2.22%)</title><rect x="732.2" y="307.0" width="26.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.2" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="733.4" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.4" y="302.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$31/1197365356.apply (3 samples, 0.06%)</title><rect x="734.3" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1615536830.apply (79 samples, 1.52%)</title><rect x="734.9" y="291.0" width="18.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (77 samples, 1.49%)</title><rect x="735.4" y="275.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (76 samples, 1.47%)</title><rect x="735.6" y="259.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (75 samples, 1.45%)</title><rect x="735.9" y="243.0" width="17.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (51 samples, 0.98%)</title><rect x="735.9" y="227.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.9" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (17 samples, 0.33%)</title><rect x="736.3" y="211.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.12%)</title><rect x="736.5" y="195.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="739.5" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.12%)</title><rect x="736.5" y="179.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.5" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.12%)</title><rect x="736.5" y="163.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.5" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.12%)</title><rect x="736.5" y="147.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.10%)</title><rect x="736.8" y="131.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.08%)</title><rect x="737.0" y="115.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.08%)</title><rect x="737.0" y="99.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.08%)</title><rect x="737.0" y="83.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.0" y="94.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="737.9" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.04%)</title><rect x="737.9" y="179.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (8 samples, 0.15%)</title><rect x="738.4" y="195.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.15%)</title><rect x="738.4" y="179.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (8 samples, 0.15%)</title><rect x="738.4" y="163.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.14%)</title><rect x="738.4" y="147.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.12%)</title><rect x="738.4" y="131.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.4" y="142.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (3 samples, 0.06%)</title><rect x="738.4" y="115.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.4" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.06%)</title><rect x="738.4" y="99.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.4" y="110.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (3 samples, 0.06%)</title><rect x="738.4" y="83.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.4" y="94.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.06%)</title><rect x="739.0" y="115.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.06%)</title><rect x="739.0" y="99.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (2 samples, 0.04%)</title><rect x="740.4" y="211.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="740.4" y="195.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (29 samples, 0.56%)</title><rect x="740.9" y="211.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$559/1235714752.run (29 samples, 0.56%)</title><rect x="740.9" y="195.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (29 samples, 0.56%)</title><rect x="740.9" y="179.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="741.5" y="163.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="741.8" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.14%)</title><rect x="742.5" y="163.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.04%)</title><rect x="742.7" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.04%)</title><rect x="742.7" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="743.1" y="147.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="743.1" y="131.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (13 samples, 0.25%)</title><rect x="744.1" y="163.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (12 samples, 0.23%)</title><rect x="744.3" y="147.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.3" y="158.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (7 samples, 0.14%)</title><rect x="744.7" y="131.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.7" y="142.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (6 samples, 0.12%)</title><rect x="745.0" y="115.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.0" y="126.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (6 samples, 0.12%)</title><rect x="745.0" y="99.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.0" y="110.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.10%)</title><rect x="745.0" y="83.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="748.0" y="94.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.04%)</title><rect x="745.2" y="67.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="748.2" y="78.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="745.6" y="67.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="748.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="746.3" y="131.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="746.3" y="115.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.06%)</title><rect x="746.3" y="99.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.04%)</title><rect x="747.0" y="163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (2 samples, 0.04%)</title><rect x="747.5" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler.apply (21 samples, 0.41%)</title><rect x="747.9" y="227.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.9" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (20 samples, 0.39%)</title><rect x="747.9" y="211.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.9" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (13 samples, 0.25%)</title><rect x="747.9" y="195.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (13 samples, 0.25%)</title><rect x="747.9" y="179.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.9" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (13 samples, 0.25%)</title><rect x="747.9" y="163.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.9" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (13 samples, 0.25%)</title><rect x="747.9" y="147.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.9" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (10 samples, 0.19%)</title><rect x="748.6" y="131.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.15%)</title><rect x="749.1" y="115.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.14%)</title><rect x="749.3" y="99.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.06%)</title><rect x="749.7" y="83.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.7" y="94.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="749.7" y="67.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.7" y="78.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (2 samples, 0.04%)</title><rect x="750.4" y="83.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.4" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.14%)</title><rect x="750.9" y="195.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.14%)</title><rect x="750.9" y="179.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.14%)</title><rect x="750.9" y="163.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.14%)</title><rect x="750.9" y="147.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.06%)</title><rect x="751.8" y="131.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.04%)</title><rect x="752.0" y="115.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.04%)</title><rect x="752.0" y="99.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/491272286.apply (24 samples, 0.46%)</title><rect x="752.9" y="291.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (22 samples, 0.42%)</title><rect x="753.4" y="275.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (19 samples, 0.37%)</title><rect x="753.6" y="259.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (15 samples, 0.29%)</title><rect x="754.3" y="243.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (15 samples, 0.29%)</title><rect x="754.3" y="227.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.3" y="238.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (7 samples, 0.14%)</title><rect x="756.1" y="211.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.1" y="222.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (7 samples, 0.14%)</title><rect x="756.1" y="195.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.1" y="206.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (7 samples, 0.14%)</title><rect x="756.1" y="179.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.1" y="190.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.08%)</title><rect x="756.8" y="163.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="759.8" y="174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="756.8" y="147.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="759.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="757.9" y="259.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (19 samples, 0.37%)</title><rect x="758.4" y="307.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (19 samples, 0.37%)</title><rect x="758.4" y="291.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="761.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.10%)</title><rect x="758.4" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.10%)</title><rect x="758.4" y="259.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.4" y="270.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="758.9" y="243.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="761.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/80373017.apply (14 samples, 0.27%)</title><rect x="759.5" y="275.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (14 samples, 0.27%)</title><rect x="759.5" y="259.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (14 samples, 0.27%)</title><rect x="759.5" y="243.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (14 samples, 0.27%)</title><rect x="759.5" y="227.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (11 samples, 0.21%)</title><rect x="760.2" y="211.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.2" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (11 samples, 0.21%)</title><rect x="760.2" y="195.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.2" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (8 samples, 0.15%)</title><rect x="760.5" y="179.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.5" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (5 samples, 0.10%)</title><rect x="761.1" y="163.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.1" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="762.3" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (7 samples, 0.14%)</title><rect x="762.7" y="307.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (3 samples, 0.06%)</title><rect x="763.6" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (3 samples, 0.06%)</title><rect x="763.6" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (3 samples, 0.06%)</title><rect x="763.6" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$522/1200579297.apply (8 samples, 0.15%)</title><rect x="764.3" y="339.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (8 samples, 0.15%)</title><rect x="764.3" y="323.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (7 samples, 0.14%)</title><rect x="764.6" y="307.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.14%)</title><rect x="764.6" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="767.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.14%)</title><rect x="764.6" y="275.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.14%)</title><rect x="764.6" y="259.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (5 samples, 0.10%)</title><rect x="766.1" y="403.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.10%)</title><rect x="766.1" y="387.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.10%)</title><rect x="766.1" y="371.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="766.8" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (99 samples, 1.91%)</title><rect x="767.3" y="451.0" width="22.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.3" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (10 samples, 0.19%)</title><rect x="768.2" y="435.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.14%)</title><rect x="768.9" y="419.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.9" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.14%)</title><rect x="768.9" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.9" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.10%)</title><rect x="769.3" y="387.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.3" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="770.0" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (17 samples, 0.33%)</title><rect x="770.5" y="435.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13 samples, 0.25%)</title><rect x="771.4" y="419.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.4" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (13 samples, 0.25%)</title><rect x="771.4" y="403.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (10 samples, 0.19%)</title><rect x="774.3" y="435.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.06%)</title><rect x="774.8" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.8" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.06%)</title><rect x="774.8" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.8" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="775.0" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.10%)</title><rect x="775.5" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (4 samples, 0.08%)</title><rect x="776.6" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="776.6" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (20 samples, 0.39%)</title><rect x="777.5" y="435.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (18 samples, 0.35%)</title><rect x="778.0" y="419.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.35%)</title><rect x="778.0" y="403.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.0" y="414.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="778.7" y="387.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="781.7" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (13 samples, 0.25%)</title><rect x="779.1" y="387.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (10 samples, 0.19%)</title><rect x="779.8" y="371.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.19%)</title><rect x="779.8" y="355.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (4 samples, 0.08%)</title><rect x="780.0" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.06%)</title><rect x="781.0" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="781.6" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (2 samples, 0.04%)</title><rect x="782.1" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (32 samples, 0.62%)</title><rect x="782.5" y="435.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (30 samples, 0.58%)</title><rect x="783.0" y="419.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (15 samples, 0.29%)</title><rect x="783.2" y="403.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.10%)</title><rect x="784.6" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.6" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="786.0" y="387.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="789.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.14%)</title><rect x="786.6" y="403.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.14%)</title><rect x="786.6" y="387.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.6" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="787.8" y="371.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="790.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (5 samples, 0.10%)</title><rect x="788.7" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$378/7833235.accept (3 samples, 0.06%)</title><rect x="789.8" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (3 samples, 0.06%)</title><rect x="789.8" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.04%)</title><rect x="790.1" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (3 samples, 0.06%)</title><rect x="790.5" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (3 samples, 0.06%)</title><rect x="790.5" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (193 samples, 3.73%)</title><rect x="791.2" y="563.0" width="44.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.2" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (190 samples, 3.67%)</title><rect x="791.9" y="547.0" width="43.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.9" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (188 samples, 3.63%)</title><rect x="792.1" y="531.0" width="42.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.1" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (188 samples, 3.63%)</title><rect x="792.1" y="515.0" width="42.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.1" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (187 samples, 3.61%)</title><rect x="792.3" y="499.0" width="42.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.3" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (2 samples, 0.04%)</title><rect x="793.3" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (2 samples, 0.04%)</title><rect x="793.3" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.06%)</title><rect x="793.7" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (176 samples, 3.40%)</title><rect x="794.4" y="483.0" width="40.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.4" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (176 samples, 3.40%)</title><rect x="794.4" y="467.0" width="40.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.4" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (176 samples, 3.40%)</title><rect x="794.4" y="451.0" width="40.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.4" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (176 samples, 3.40%)</title><rect x="794.4" y="435.0" width="40.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.4" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (176 samples, 3.40%)</title><rect x="794.4" y="419.0" width="40.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.4" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (176 samples, 3.40%)</title><rect x="794.4" y="403.0" width="40.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.4" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/706069328.run (99 samples, 1.91%)</title><rect x="794.6" y="387.0" width="22.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.6" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (99 samples, 1.91%)</title><rect x="794.6" y="371.0" width="22.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.6" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (96 samples, 1.85%)</title><rect x="795.3" y="355.0" width="21.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.3" y="366.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (9 samples, 0.17%)</title><rect x="795.3" y="339.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.12%)</title><rect x="795.3" y="323.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.3" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.12%)</title><rect x="795.3" y="307.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.12%)</title><rect x="795.3" y="291.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.12%)</title><rect x="795.3" y="275.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.10%)</title><rect x="795.5" y="259.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.08%)</title><rect x="795.8" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.08%)</title><rect x="795.8" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.06%)</title><rect x="796.0" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.04%)</title><rect x="796.9" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.04%)</title><rect x="796.9" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.04%)</title><rect x="796.9" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.04%)</title><rect x="796.9" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.9" y="286.0"></text>
</g>
<g>
<title>java/util/Optional.map (7 samples, 0.14%)</title><rect x="797.3" y="339.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.3" y="350.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (3 samples, 0.06%)</title><rect x="797.3" y="323.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.3" y="334.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.06%)</title><rect x="797.3" y="307.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.3" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (3 samples, 0.06%)</title><rect x="797.3" y="291.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$614/1682304774.apply (4 samples, 0.08%)</title><rect x="798.0" y="323.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (4 samples, 0.08%)</title><rect x="798.0" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.08%)</title><rect x="798.0" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="801.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="798.0" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.0" y="286.0"></text>
</g>
<g>
<title>java/util/Optional.orElse (2 samples, 0.04%)</title><rect x="798.9" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (78 samples, 1.51%)</title><rect x="799.4" y="339.0" width="17.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.4" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.06%)</title><rect x="799.4" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.4" y="334.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.06%)</title><rect x="799.4" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.06%)</title><rect x="799.4" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.4" y="302.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.06%)</title><rect x="799.4" y="275.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="802.4" y="286.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.04%)</title><rect x="799.6" y="259.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="802.6" y="270.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="799.6" y="243.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="802.6" y="254.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="799.6" y="227.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="802.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (75 samples, 1.45%)</title><rect x="800.1" y="323.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="803.1" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="800.5" y="307.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="803.5" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.06%)</title><rect x="800.5" y="291.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="803.5" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.06%)</title><rect x="800.5" y="275.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="803.5" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.06%)</title><rect x="800.5" y="259.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="803.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (31 samples, 0.60%)</title><rect x="801.2" y="307.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.2" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.21%)</title><rect x="802.6" y="291.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.6" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (11 samples, 0.21%)</title><rect x="802.6" y="275.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.6" y="286.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.21%)</title><rect x="802.6" y="259.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.6" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (4 samples, 0.08%)</title><rect x="805.1" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.1" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (4 samples, 0.08%)</title><rect x="805.1" y="275.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.1" y="286.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.08%)</title><rect x="805.1" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.1" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.04%)</title><rect x="805.5" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.5" y="254.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (6 samples, 0.12%)</title><rect x="806.5" y="291.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryEntry.&lt;init&gt; (2 samples, 0.04%)</title><rect x="807.8" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="810.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (4 samples, 0.08%)</title><rect x="808.3" y="307.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.3" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="808.3" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.3" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="808.3" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="808.7" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.04%)</title><rect x="808.7" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (35 samples, 0.68%)</title><rect x="809.2" y="307.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (35 samples, 0.68%)</title><rect x="809.2" y="291.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (12 samples, 0.23%)</title><rect x="809.2" y="275.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (12 samples, 0.23%)</title><rect x="809.2" y="259.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (12 samples, 0.23%)</title><rect x="809.2" y="243.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (10 samples, 0.19%)</title><rect x="809.4" y="227.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (10 samples, 0.19%)</title><rect x="809.4" y="211.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (9 samples, 0.17%)</title><rect x="809.6" y="195.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.04%)</title><rect x="811.9" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (21 samples, 0.41%)</title><rect x="812.4" y="275.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (21 samples, 0.41%)</title><rect x="812.4" y="259.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (18 samples, 0.35%)</title><rect x="812.6" y="243.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (15 samples, 0.29%)</title><rect x="812.6" y="227.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (15 samples, 0.29%)</title><rect x="812.6" y="211.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.6" y="222.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="813.1" y="195.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="816.1" y="206.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="813.1" y="179.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="816.1" y="190.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="813.1" y="163.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="816.1" y="174.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="813.1" y="147.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="816.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.21%)</title><rect x="813.5" y="195.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.10%)</title><rect x="814.9" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.9" y="190.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.08%)</title><rect x="815.1" y="163.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="818.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (3 samples, 0.06%)</title><rect x="816.0" y="227.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.0" y="238.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="816.0" y="211.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="819.0" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.04%)</title><rect x="816.3" y="195.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="819.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$576/272680000.accept (14 samples, 0.27%)</title><rect x="817.2" y="387.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (14 samples, 0.27%)</title><rect x="817.2" y="371.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (14 samples, 0.27%)</title><rect x="817.2" y="355.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.15%)</title><rect x="817.2" y="339.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.15%)</title><rect x="817.2" y="323.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.10%)</title><rect x="817.8" y="307.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.10%)</title><rect x="817.8" y="291.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="817.8" y="275.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="817.8" y="259.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$594/353462104.accept (2 samples, 0.04%)</title><rect x="817.8" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$586/805615386.accept (2 samples, 0.04%)</title><rect x="818.3" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (2 samples, 0.04%)</title><rect x="818.3" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (2 samples, 0.04%)</title><rect x="818.3" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.04%)</title><rect x="818.3" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.04%)</title><rect x="818.3" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$385/209516650.accept (6 samples, 0.12%)</title><rect x="819.0" y="339.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (6 samples, 0.12%)</title><rect x="819.0" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (3 samples, 0.06%)</title><rect x="819.7" y="307.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (58 samples, 1.12%)</title><rect x="820.4" y="387.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (58 samples, 1.12%)</title><rect x="820.4" y="371.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.4" y="382.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="820.6" y="355.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="823.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (53 samples, 1.02%)</title><rect x="821.3" y="355.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="824.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (53 samples, 1.02%)</title><rect x="821.3" y="339.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (50 samples, 0.97%)</title><rect x="821.5" y="323.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (50 samples, 0.97%)</title><rect x="821.5" y="307.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.12%)</title><rect x="821.9" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.04%)</title><rect x="821.9" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="821.9" y="259.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="821.9" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler$$Lambda$681/930209208.apply (4 samples, 0.08%)</title><rect x="822.4" y="275.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler.lambda$apply$0 (4 samples, 0.08%)</title><rect x="822.4" y="259.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.04%)</title><rect x="822.9" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.9" y="254.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.04%)</title><rect x="822.9" y="227.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (42 samples, 0.81%)</title><rect x="823.3" y="291.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (42 samples, 0.81%)</title><rect x="823.3" y="275.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$599/1916045487.accept (41 samples, 0.79%)</title><rect x="823.5" y="259.0" width="9.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (38 samples, 0.73%)</title><rect x="824.2" y="243.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (38 samples, 0.73%)</title><rect x="824.2" y="227.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (38 samples, 0.73%)</title><rect x="824.2" y="211.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.10%)</title><rect x="824.2" y="195.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.04%)</title><rect x="824.2" y="179.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="824.2" y="163.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="824.2" y="147.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="827.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$611/845309973.apply (2 samples, 0.04%)</title><rect x="824.2" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$611/845309973.apply (3 samples, 0.06%)</title><rect x="824.7" y="179.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.06%)</title><rect x="824.7" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (3 samples, 0.06%)</title><rect x="824.7" y="147.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.7" y="158.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (3 samples, 0.06%)</title><rect x="824.7" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.7" y="142.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.06%)</title><rect x="824.7" y="115.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (32 samples, 0.62%)</title><rect x="825.6" y="195.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.04%)</title><rect x="825.8" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (29 samples, 0.56%)</title><rect x="826.3" y="179.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (24 samples, 0.46%)</title><rect x="826.3" y="163.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (21 samples, 0.41%)</title><rect x="826.3" y="147.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (21 samples, 0.41%)</title><rect x="826.3" y="131.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (20 samples, 0.39%)</title><rect x="826.3" y="115.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (18 samples, 0.35%)</title><rect x="826.7" y="99.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.33%)</title><rect x="827.0" y="83.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.33%)</title><rect x="827.0" y="67.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.0" y="78.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.21%)</title><rect x="827.4" y="51.0" width="2.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="830.4" y="62.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.06%)</title><rect x="827.9" y="35.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="830.9" y="46.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="828.6" y="35.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="831.6" y="46.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="829.2" y="35.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="832.2" y="46.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.08%)</title><rect x="829.9" y="51.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="832.9" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="831.1" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$610/945156481.accept (3 samples, 0.06%)</title><rect x="831.7" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (2 samples, 0.04%)</title><rect x="832.0" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$193/281304560.accept (2 samples, 0.04%)</title><rect x="832.4" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (2 samples, 0.04%)</title><rect x="832.4" y="147.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.04%)</title><rect x="832.4" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.04%)</title><rect x="832.4" y="115.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (2 samples, 0.04%)</title><rect x="832.9" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (2 samples, 0.04%)</title><rect x="834.0" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2 samples, 0.04%)</title><rect x="834.5" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.run (277 samples, 5.35%)</title><rect x="835.2" y="595.0" width="63.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.2" y="606.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (275 samples, 5.31%)</title><rect x="835.6" y="579.0" width="62.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.6" y="590.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.08%)</title><rect x="835.8" y="563.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="838.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="836.1" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="839.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="836.1" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (34 samples, 0.66%)</title><rect x="836.8" y="563.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (34 samples, 0.66%)</title><rect x="836.8" y="547.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (3 samples, 0.06%)</title><rect x="836.8" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="836.8" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.06%)</title><rect x="836.8" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (31 samples, 0.60%)</title><rect x="837.4" y="531.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (31 samples, 0.60%)</title><rect x="837.4" y="515.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (31 samples, 0.60%)</title><rect x="837.4" y="499.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (2 samples, 0.04%)</title><rect x="837.9" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (27 samples, 0.52%)</title><rect x="838.3" y="483.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (23 samples, 0.44%)</title><rect x="838.3" y="467.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.42%)</title><rect x="838.6" y="451.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.42%)</title><rect x="838.6" y="435.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.42%)</title><rect x="838.6" y="419.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.41%)</title><rect x="838.6" y="403.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.41%)</title><rect x="838.6" y="387.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.6" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.21%)</title><rect x="839.0" y="371.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="842.0" y="382.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.06%)</title><rect x="839.7" y="355.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="842.7" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.12%)</title><rect x="841.8" y="371.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="844.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (4 samples, 0.08%)</title><rect x="843.6" y="467.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.&lt;init&gt; (4 samples, 0.08%)</title><rect x="843.6" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (236 samples, 4.56%)</title><rect x="844.5" y="563.0" width="53.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.5" y="574.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (34 samples, 0.66%)</title><rect x="844.7" y="547.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (21 samples, 0.41%)</title><rect x="845.2" y="531.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.2" y="542.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (2 samples, 0.04%)</title><rect x="845.2" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.2" y="526.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (2 samples, 0.04%)</title><rect x="845.2" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.2" y="510.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (2 samples, 0.04%)</title><rect x="845.2" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.2" y="494.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (2 samples, 0.04%)</title><rect x="845.2" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.2" y="478.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (2 samples, 0.04%)</title><rect x="845.2" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.2" y="462.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (19 samples, 0.37%)</title><rect x="845.6" y="515.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="848.6" y="526.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (19 samples, 0.37%)</title><rect x="845.6" y="499.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.6" y="510.0"></text>
</g>
<g>
<title>java/security/Security.getSpiClass (4 samples, 0.08%)</title><rect x="845.6" y="483.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.08%)</title><rect x="845.6" y="467.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="845.9" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.06%)</title><rect x="845.9" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.9" y="446.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (15 samples, 0.29%)</title><rect x="846.5" y="483.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.5" y="494.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (10 samples, 0.19%)</title><rect x="846.5" y="467.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.5" y="478.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (10 samples, 0.19%)</title><rect x="846.5" y="451.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.5" y="462.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (9 samples, 0.17%)</title><rect x="846.8" y="435.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.8" y="446.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="846.8" y="419.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="849.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.04%)</title><rect x="847.2" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.04%)</title><rect x="847.2" y="403.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.2" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (5 samples, 0.10%)</title><rect x="847.7" y="419.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.7" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (3 samples, 0.06%)</title><rect x="847.7" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.7" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.04%)</title><rect x="847.9" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.04%)</title><rect x="847.9" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.04%)</title><rect x="847.9" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.04%)</title><rect x="848.4" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.4" y="414.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (5 samples, 0.10%)</title><rect x="848.8" y="467.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.8" y="478.0"></text>
</g>
<g>
<title>java/security/Provider.getService (4 samples, 0.08%)</title><rect x="848.8" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.08%)</title><rect x="848.8" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (11 samples, 0.21%)</title><rect x="850.0" y="531.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (3 samples, 0.06%)</title><rect x="850.2" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.2" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="850.2" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.2" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (6 samples, 0.12%)</title><rect x="851.1" y="515.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.12%)</title><rect x="851.1" y="499.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="851.3" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="851.3" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="854.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="851.3" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (194 samples, 3.74%)</title><rect x="852.5" y="547.0" width="44.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.5" y="558.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="852.5" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="852.5" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (190 samples, 3.67%)</title><rect x="852.9" y="531.0" width="43.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.9" y="542.0">ru/m..</text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="852.9" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="853.1" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="853.1" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="853.1" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.1" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (3 samples, 0.06%)</title><rect x="853.8" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.8" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="853.8" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.04%)</title><rect x="853.8" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="853.8" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.8" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="853.8" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (112 samples, 2.16%)</title><rect x="854.5" y="515.0" width="25.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.5" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (112 samples, 2.16%)</title><rect x="854.5" y="499.0" width="25.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.5" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (112 samples, 2.16%)</title><rect x="854.5" y="483.0" width="25.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="857.5" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (112 samples, 2.16%)</title><rect x="854.5" y="467.0" width="25.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.5" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (86 samples, 1.66%)</title><rect x="854.7" y="451.0" width="19.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (15 samples, 0.29%)</title><rect x="854.7" y="435.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (10 samples, 0.19%)</title><rect x="855.0" y="419.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.0" y="430.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (10 samples, 0.19%)</title><rect x="855.0" y="403.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.0" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (10 samples, 0.19%)</title><rect x="855.0" y="387.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (10 samples, 0.19%)</title><rect x="855.0" y="371.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (4 samples, 0.08%)</title><rect x="855.4" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (4 samples, 0.08%)</title><rect x="855.4" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.4" y="350.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.06%)</title><rect x="855.7" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="858.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.08%)</title><rect x="856.3" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.08%)</title><rect x="856.3" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.06%)</title><rect x="856.6" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.06%)</title><rect x="857.5" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.06%)</title><rect x="857.5" y="403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.06%)</title><rect x="857.5" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="860.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.06%)</title><rect x="857.5" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="860.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.14%)</title><rect x="858.2" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.14%)</title><rect x="858.2" y="419.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.2" y="430.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="858.2" y="403.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="861.2" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (5 samples, 0.10%)</title><rect x="858.6" y="403.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.6" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.10%)</title><rect x="858.6" y="387.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (5 samples, 0.10%)</title><rect x="858.6" y="371.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="861.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.10%)</title><rect x="858.6" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.6" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.08%)</title><rect x="858.6" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (4 samples, 0.08%)</title><rect x="858.6" y="323.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.08%)</title><rect x="858.6" y="307.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/875917495.test (3 samples, 0.06%)</title><rect x="858.8" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="861.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (3 samples, 0.06%)</title><rect x="858.8" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (3 samples, 0.06%)</title><rect x="858.8" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (61 samples, 1.18%)</title><rect x="860.0" y="435.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.0" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (61 samples, 1.18%)</title><rect x="860.0" y="419.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.08%)</title><rect x="860.0" y="403.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.06%)</title><rect x="860.0" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="860.2" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.2" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (57 samples, 1.10%)</title><rect x="860.9" y="403.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.9" y="414.0"></text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.04%)</title><rect x="860.9" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.9" y="398.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (37 samples, 0.71%)</title><rect x="861.8" y="387.0" width="8.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="864.8" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (4 samples, 0.08%)</title><rect x="862.3" y="371.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="865.3" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (3 samples, 0.06%)</title><rect x="862.5" y="355.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="865.5" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.12%)</title><rect x="863.2" y="371.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="866.2" y="382.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (8 samples, 0.15%)</title><rect x="865.9" y="371.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="868.9" y="382.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.08%)</title><rect x="866.8" y="355.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="869.8" y="366.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="866.8" y="339.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.8" y="350.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="867.0" y="323.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="870.0" y="334.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.21%)</title><rect x="867.7" y="371.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="870.7" y="382.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.04%)</title><rect x="868.6" y="355.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="871.6" y="366.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.10%)</title><rect x="869.1" y="355.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="872.1" y="366.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.06%)</title><rect x="869.5" y="339.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="872.5" y="350.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="869.5" y="323.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="872.5" y="334.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="869.5" y="307.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="872.5" y="318.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (11 samples, 0.21%)</title><rect x="871.1" y="387.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="874.1" y="398.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 0.19%)</title><rect x="871.4" y="371.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="874.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.08%)</title><rect x="872.1" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.1" y="366.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="872.1" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="872.1" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.1" y="334.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (3 samples, 0.06%)</title><rect x="873.0" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.0" y="366.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.04%)</title><rect x="873.2" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.04%)</title><rect x="873.2" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="873.2" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="873.2" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (8 samples, 0.15%)</title><rect x="874.3" y="451.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (8 samples, 0.15%)</title><rect x="874.3" y="435.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (8 samples, 0.15%)</title><rect x="874.3" y="419.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.04%)</title><rect x="874.8" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.8" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.04%)</title><rect x="875.2" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (17 samples, 0.33%)</title><rect x="876.2" y="451.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (12 samples, 0.23%)</title><rect x="876.2" y="435.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="879.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.21%)</title><rect x="876.4" y="419.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="879.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.17%)</title><rect x="876.6" y="403.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.14%)</title><rect x="876.8" y="387.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="879.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.04%)</title><rect x="876.8" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="879.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.10%)</title><rect x="877.3" y="371.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="877.3" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="880.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="877.3" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.10%)</title><rect x="877.3" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.10%)</title><rect x="877.3" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.3" y="318.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="877.3" y="291.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="880.3" y="302.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.06%)</title><rect x="877.7" y="291.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="880.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (5 samples, 0.10%)</title><rect x="878.9" y="435.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.08%)</title><rect x="879.1" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.08%)</title><rect x="879.1" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.06%)</title><rect x="879.3" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$649/1942734930.handleLocalResponse (11 samples, 0.21%)</title><rect x="880.3" y="515.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$1 (11 samples, 0.21%)</title><rect x="880.3" y="499.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (11 samples, 0.21%)</title><rect x="880.3" y="483.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (11 samples, 0.21%)</title><rect x="880.3" y="467.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (10 samples, 0.19%)</title><rect x="880.3" y="451.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="883.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.15%)</title><rect x="880.7" y="435.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="883.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (8 samples, 0.15%)</title><rect x="880.7" y="419.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="881.2" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="881.2" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.08%)</title><rect x="881.6" y="403.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="881.6" y="387.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="881.6" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="881.8" y="355.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="881.8" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.8" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="882.1" y="323.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="885.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$652/191716500.requestBuild (59 samples, 1.14%)</title><rect x="882.8" y="515.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="885.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$2 (59 samples, 1.14%)</title><rect x="882.8" y="499.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (11 samples, 0.21%)</title><rect x="882.8" y="483.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (11 samples, 0.21%)</title><rect x="882.8" y="467.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.17%)</title><rect x="883.2" y="451.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.17%)</title><rect x="883.2" y="435.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.2" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.14%)</title><rect x="883.7" y="419.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="886.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (7 samples, 0.14%)</title><rect x="883.7" y="403.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.14%)</title><rect x="883.7" y="387.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (4 samples, 0.08%)</title><rect x="883.7" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.7" y="382.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="883.9" y="355.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="886.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.06%)</title><rect x="884.6" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (3 samples, 0.06%)</title><rect x="884.6" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.06%)</title><rect x="884.6" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (48 samples, 0.93%)</title><rect x="885.3" y="483.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.3" y="494.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (33 samples, 0.64%)</title><rect x="885.3" y="467.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="888.3" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (33 samples, 0.64%)</title><rect x="885.3" y="451.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="888.3" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (32 samples, 0.62%)</title><rect x="885.5" y="435.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.5" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (11 samples, 0.21%)</title><rect x="885.5" y="419.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.5" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (11 samples, 0.21%)</title><rect x="885.5" y="403.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.5" y="414.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="887.5" y="387.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="890.5" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (21 samples, 0.41%)</title><rect x="888.0" y="419.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.0" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (11 samples, 0.21%)</title><rect x="888.7" y="403.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.7" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (7 samples, 0.14%)</title><rect x="888.7" y="387.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.7" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.14%)</title><rect x="888.7" y="371.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.7" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.06%)</title><rect x="890.3" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.3" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.04%)</title><rect x="890.5" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="893.5" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.14%)</title><rect x="891.2" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (13 samples, 0.25%)</title><rect x="892.8" y="467.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (13 samples, 0.25%)</title><rect x="892.8" y="451.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (3 samples, 0.06%)</title><rect x="892.8" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/960733886.test (3 samples, 0.06%)</title><rect x="892.8" y="419.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.06%)</title><rect x="892.8" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.8" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.06%)</title><rect x="892.8" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.06%)</title><rect x="892.8" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.06%)</title><rect x="892.8" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.06%)</title><rect x="892.8" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.06%)</title><rect x="892.8" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="893.0" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="893.0" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="893.0" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (10 samples, 0.19%)</title><rect x="893.5" y="435.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="893.5" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="893.5" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.06%)</title><rect x="893.5" y="387.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.06%)</title><rect x="893.5" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.5" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.06%)</title><rect x="893.5" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.5" y="366.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (7 samples, 0.14%)</title><rect x="894.1" y="419.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.1" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.14%)</title><rect x="894.1" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.14%)</title><rect x="894.1" y="387.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.1" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.14%)</title><rect x="894.1" y="371.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.04%)</title><rect x="895.7" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.04%)</title><rect x="895.7" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.04%)</title><rect x="895.7" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="895.7" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="895.7" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (2 samples, 0.04%)</title><rect x="896.2" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (7 samples, 0.14%)</title><rect x="896.7" y="547.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.10%)</title><rect x="897.1" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.08%)</title><rect x="897.1" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="897.1" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="897.1" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="897.1" y="467.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="897.3" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (112 samples, 2.16%)</title><rect x="898.2" y="643.0" width="25.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.2" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (112 samples, 2.16%)</title><rect x="898.2" y="627.0" width="25.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.2" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (49 samples, 0.95%)</title><rect x="898.5" y="611.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (42 samples, 0.81%)</title><rect x="900.1" y="595.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (2 samples, 0.04%)</title><rect x="901.9" y="579.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (32 samples, 0.62%)</title><rect x="902.3" y="579.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (2 samples, 0.04%)</title><rect x="902.3" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.04%)</title><rect x="902.3" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (30 samples, 0.58%)</title><rect x="902.8" y="563.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (30 samples, 0.58%)</title><rect x="902.8" y="547.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (25 samples, 0.48%)</title><rect x="902.8" y="531.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (25 samples, 0.48%)</title><rect x="902.8" y="515.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (25 samples, 0.48%)</title><rect x="902.8" y="499.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.29%)</title><rect x="903.7" y="483.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.29%)</title><rect x="903.7" y="467.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 0.27%)</title><rect x="903.7" y="451.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="903.9" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="903.9" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.21%)</title><rect x="904.4" y="435.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.21%)</title><rect x="904.4" y="419.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.21%)</title><rect x="904.4" y="403.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.19%)</title><rect x="904.6" y="387.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.19%)</title><rect x="904.6" y="371.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.6" y="382.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.08%)</title><rect x="904.9" y="355.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="907.9" y="366.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="904.9" y="339.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="907.9" y="350.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.10%)</title><rect x="905.8" y="355.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="908.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (6 samples, 0.12%)</title><rect x="907.1" y="483.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="910.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.12%)</title><rect x="907.1" y="467.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.12%)</title><rect x="907.1" y="451.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.1" y="462.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="907.1" y="435.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="910.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.08%)</title><rect x="907.6" y="435.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="910.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.10%)</title><rect x="908.5" y="531.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.17%)</title><rect x="909.6" y="611.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="912.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.12%)</title><rect x="910.3" y="595.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.3" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.08%)</title><rect x="910.3" y="579.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="913.3" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="910.3" y="563.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="913.3" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="910.8" y="563.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="913.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="911.2" y="579.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="914.2" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="911.2" y="563.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="914.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (53 samples, 1.02%)</title><rect x="911.7" y="611.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (47 samples, 0.91%)</title><rect x="912.8" y="595.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.8" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (28 samples, 0.54%)</title><rect x="913.0" y="579.0" width="6.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="916.0" y="590.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="913.3" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="916.3" y="574.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.21%)</title><rect x="914.0" y="563.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="917.0" y="574.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.06%)</title><rect x="914.4" y="547.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="917.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="915.3" y="547.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="918.3" y="558.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.04%)</title><rect x="916.0" y="547.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="919.0" y="558.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (12 samples, 0.23%)</title><rect x="916.5" y="563.0" width="2.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="919.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.35%)</title><rect x="919.4" y="579.0" width="4.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="922.4" y="590.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (15 samples, 0.29%)</title><rect x="920.1" y="563.0" width="3.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="923.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (393 samples, 7.59%)</title><rect x="923.8" y="643.0" width="89.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="926.8" y="654.0">jdk/intern..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.23%)</title><rect x="926.9" y="627.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="929.9" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (12 samples, 0.23%)</title><rect x="926.9" y="611.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="929.9" y="622.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (2 samples, 0.04%)</title><rect x="927.2" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="930.2" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.14%)</title><rect x="927.6" y="595.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="930.6" y="606.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.12%)</title><rect x="927.9" y="579.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="930.9" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (2 samples, 0.04%)</title><rect x="929.2" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="932.2" y="606.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (2 samples, 0.04%)</title><rect x="929.2" y="579.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="932.2" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.21%)</title><rect x="930.4" y="627.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.21%)</title><rect x="930.4" y="611.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.19%)</title><rect x="930.6" y="595.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.19%)</title><rect x="930.6" y="579.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (3 samples, 0.06%)</title><rect x="932.9" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (65 samples, 1.25%)</title><rect x="933.5" y="627.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$453/1260814613.accept (58 samples, 1.12%)</title><rect x="934.0" y="611.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (58 samples, 1.12%)</title><rect x="934.0" y="595.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (58 samples, 1.12%)</title><rect x="934.0" y="579.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (58 samples, 1.12%)</title><rect x="934.0" y="563.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (58 samples, 1.12%)</title><rect x="934.0" y="547.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (57 samples, 1.10%)</title><rect x="934.2" y="531.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (57 samples, 1.10%)</title><rect x="934.2" y="515.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (57 samples, 1.10%)</title><rect x="934.2" y="499.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (57 samples, 1.10%)</title><rect x="934.2" y="483.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (57 samples, 1.10%)</title><rect x="934.2" y="467.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (57 samples, 1.10%)</title><rect x="934.2" y="451.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (57 samples, 1.10%)</title><rect x="934.2" y="435.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="937.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (17 samples, 0.33%)</title><rect x="934.2" y="419.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (17 samples, 0.33%)</title><rect x="934.2" y="403.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (17 samples, 0.33%)</title><rect x="934.2" y="387.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.31%)</title><rect x="934.5" y="371.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.31%)</title><rect x="934.5" y="355.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.31%)</title><rect x="934.5" y="339.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.31%)</title><rect x="934.5" y="323.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.31%)</title><rect x="934.5" y="307.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.27%)</title><rect x="934.7" y="291.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.12%)</title><rect x="934.7" y="275.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.12%)</title><rect x="934.7" y="259.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.12%)</title><rect x="934.7" y="243.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="937.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="936.1" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="939.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="936.1" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="939.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.12%)</title><rect x="936.5" y="275.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="939.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.12%)</title><rect x="936.5" y="259.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.12%)</title><rect x="936.5" y="243.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="939.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.12%)</title><rect x="936.5" y="227.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="939.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.12%)</title><rect x="936.5" y="211.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.5" y="222.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.08%)</title><rect x="936.7" y="195.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="939.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.10%)</title><rect x="938.3" y="419.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.10%)</title><rect x="938.3" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.10%)</title><rect x="938.3" y="387.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.10%)</title><rect x="938.3" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.04%)</title><rect x="939.0" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="942.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="939.0" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="942.0" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="939.0" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="939.0" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (34 samples, 0.66%)</title><rect x="939.5" y="419.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (2 samples, 0.04%)</title><rect x="939.7" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$266/696326643.get (2 samples, 0.04%)</title><rect x="939.7" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (2 samples, 0.04%)</title><rect x="939.7" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (31 samples, 0.60%)</title><rect x="940.2" y="403.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="943.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (29 samples, 0.56%)</title><rect x="940.6" y="387.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="943.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (27 samples, 0.52%)</title><rect x="941.1" y="371.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="944.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.37%)</title><rect x="941.5" y="355.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (19 samples, 0.37%)</title><rect x="941.5" y="339.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (19 samples, 0.37%)</title><rect x="941.5" y="323.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.5" y="334.0"></text>
</g>
<g>
<title>__read (14 samples, 0.27%)</title><rect x="942.7" y="307.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="945.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.12%)</title><rect x="945.8" y="355.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.8" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.10%)</title><rect x="945.8" y="339.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="948.8" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.10%)</title><rect x="945.8" y="323.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="948.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$456/1562675777.accept (5 samples, 0.10%)</title><rect x="947.2" y="611.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="950.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (5 samples, 0.10%)</title><rect x="947.2" y="595.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$452/1862861862.run (5 samples, 0.10%)</title><rect x="947.2" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (5 samples, 0.10%)</title><rect x="947.2" y="563.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (5 samples, 0.10%)</title><rect x="947.2" y="547.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (10 samples, 0.19%)</title><rect x="949.0" y="627.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.19%)</title><rect x="949.0" y="611.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.19%)</title><rect x="949.0" y="595.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.19%)</title><rect x="949.0" y="579.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.19%)</title><rect x="949.0" y="563.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="952.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.15%)</title><rect x="949.5" y="547.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.5" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (4 samples, 0.08%)</title><rect x="949.5" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.5" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (3 samples, 0.06%)</title><rect x="950.4" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.06%)</title><rect x="950.4" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (2 samples, 0.04%)</title><rect x="950.4" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (67 samples, 1.29%)</title><rect x="951.3" y="627.0" width="15.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$286/1250923022.run (42 samples, 0.81%)</title><rect x="951.3" y="611.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (42 samples, 0.81%)</title><rect x="951.3" y="595.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (2 samples, 0.04%)</title><rect x="951.5" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.75%)</title><rect x="952.0" y="579.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.75%)</title><rect x="952.0" y="563.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (39 samples, 0.75%)</title><rect x="952.0" y="547.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (39 samples, 0.75%)</title><rect x="952.0" y="531.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (33 samples, 0.64%)</title><rect x="952.2" y="515.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="955.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (33 samples, 0.64%)</title><rect x="952.2" y="499.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (30 samples, 0.58%)</title><rect x="952.2" y="483.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="955.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (26 samples, 0.50%)</title><rect x="953.1" y="467.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (7 samples, 0.14%)</title><rect x="953.1" y="451.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (7 samples, 0.14%)</title><rect x="953.1" y="435.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (7 samples, 0.14%)</title><rect x="953.1" y="419.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.14%)</title><rect x="953.1" y="403.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7 samples, 0.14%)</title><rect x="953.1" y="387.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7 samples, 0.14%)</title><rect x="953.1" y="371.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="956.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.14%)</title><rect x="953.1" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.12%)</title><rect x="953.4" y="339.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.4" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (4 samples, 0.08%)</title><rect x="953.8" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="956.8" y="334.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="954.3" y="307.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="957.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (19 samples, 0.37%)</title><rect x="954.7" y="451.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="957.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.37%)</title><rect x="954.7" y="435.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.17%)</title><rect x="957.0" y="419.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.15%)</title><rect x="957.2" y="403.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.15%)</title><rect x="957.2" y="387.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.14%)</title><rect x="957.2" y="371.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.12%)</title><rect x="957.5" y="355.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.10%)</title><rect x="957.7" y="339.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="957.7" y="323.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="957.7" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="958.1" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="958.1" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.1" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="958.1" y="259.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="961.1" y="270.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="958.1" y="243.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="961.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (3 samples, 0.06%)</title><rect x="959.1" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (2 samples, 0.04%)</title><rect x="959.3" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5 samples, 0.10%)</title><rect x="959.7" y="515.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$301/890062922.run (25 samples, 0.48%)</title><rect x="960.9" y="611.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (25 samples, 0.48%)</title><rect x="960.9" y="595.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="962.0" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="962.2" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.33%)</title><rect x="962.7" y="579.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.33%)</title><rect x="962.7" y="563.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="962.7" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.29%)</title><rect x="963.2" y="547.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.15%)</title><rect x="963.6" y="531.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="963.8" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="963.8" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.08%)</title><rect x="964.5" y="515.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="964.5" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="964.5" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="964.5" y="467.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="967.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.08%)</title><rect x="964.5" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.08%)</title><rect x="965.4" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.08%)</title><rect x="965.4" y="515.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (14 samples, 0.27%)</title><rect x="966.6" y="627.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.04%)</title><rect x="966.6" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.6" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.04%)</title><rect x="966.6" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="966.6" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="969.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (12 samples, 0.23%)</title><rect x="967.0" y="611.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.0" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="968.2" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="971.2" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="968.2" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="971.2" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="968.2" y="563.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="971.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (5 samples, 0.10%)</title><rect x="968.6" y="595.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (7 samples, 0.14%)</title><rect x="969.8" y="627.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (5 samples, 0.10%)</title><rect x="970.0" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="970.7" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.7" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="970.7" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="973.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (3 samples, 0.06%)</title><rect x="971.4" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.4" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.06%)</title><rect x="971.4" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (3 samples, 0.06%)</title><rect x="971.4" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (2 samples, 0.04%)</title><rect x="972.3" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.04%)</title><rect x="972.3" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (28 samples, 0.54%)</title><rect x="972.7" y="627.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="975.7" y="638.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="972.9" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="975.9" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="973.4" y="611.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="976.4" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.06%)</title><rect x="973.6" y="595.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="976.6" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="973.9" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="976.9" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.now (12 samples, 0.23%)</title><rect x="974.3" y="611.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.3" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (12 samples, 0.23%)</title><rect x="974.3" y="595.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.3" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.08%)</title><rect x="974.5" y="579.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="977.5" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.04%)</title><rect x="975.0" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.0" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (2 samples, 0.04%)</title><rect x="975.0" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="978.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="975.0" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="978.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="975.0" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="978.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (7 samples, 0.14%)</title><rect x="975.5" y="579.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.5" y="590.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.08%)</title><rect x="975.9" y="563.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="978.9" y="574.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="976.1" y="547.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="979.1" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.until (6 samples, 0.12%)</title><rect x="977.0" y="611.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="980.0" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.toEpochMilli (5 samples, 0.10%)</title><rect x="977.3" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.3" y="606.0"></text>
</g>
<g>
<title>java/lang/Math.multiplyExact (4 samples, 0.08%)</title><rect x="977.5" y="579.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.04%)</title><rect x="978.6" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (124 samples, 2.39%)</title><rect x="979.1" y="627.0" width="28.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.1" y="638.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (124 samples, 2.39%)</title><rect x="979.1" y="611.0" width="28.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.1" y="622.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (119 samples, 2.30%)</title><rect x="980.2" y="595.0" width="27.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="983.2" y="606.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (51 samples, 0.98%)</title><rect x="981.1" y="579.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.1" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.15%)</title><rect x="982.7" y="563.0" width="1.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="985.7" y="574.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.04%)</title><rect x="984.6" y="563.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="987.6" y="574.0"></text>
</g>
<g>
<title>epoll_wait (34 samples, 0.66%)</title><rect x="985.0" y="563.0" width="7.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="988.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (44 samples, 0.85%)</title><rect x="992.8" y="579.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.12%)</title><rect x="992.8" y="563.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="995.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.12%)</title><rect x="992.8" y="547.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (32 samples, 0.62%)</title><rect x="994.1" y="563.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.06%)</title><rect x="994.8" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (26 samples, 0.50%)</title><rect x="995.5" y="547.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.5" y="558.0"></text>
</g>
<g>
<title>__read (24 samples, 0.46%)</title><rect x="996.0" y="531.0" width="5.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="999.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (6 samples, 0.12%)</title><rect x="1001.4" y="563.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1004.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.08%)</title><rect x="1001.6" y="547.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1004.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.08%)</title><rect x="1001.6" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.08%)</title><rect x="1001.6" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.04%)</title><rect x="1002.1" y="499.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.08%)</title><rect x="1002.8" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1005.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (4 samples, 0.08%)</title><rect x="1003.9" y="579.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.9" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.08%)</title><rect x="1003.9" y="563.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.9" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.08%)</title><rect x="1003.9" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.9" y="558.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.08%)</title><rect x="1003.9" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.08%)</title><rect x="1003.9" y="515.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (11 samples, 0.21%)</title><rect x="1004.8" y="579.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (11 samples, 0.21%)</title><rect x="1007.3" y="627.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11 samples, 0.21%)</title><rect x="1007.3" y="611.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1010.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11 samples, 0.21%)</title><rect x="1007.3" y="595.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (7 samples, 0.14%)</title><rect x="1007.6" y="579.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.6" y="590.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.14%)</title><rect x="1007.6" y="563.0" width="1.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1010.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.06%)</title><rect x="1009.2" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.04%)</title><rect x="1009.4" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (7 samples, 0.14%)</title><rect x="1009.8" y="627.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1012.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (7 samples, 0.14%)</title><rect x="1009.8" y="611.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1012.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (6 samples, 0.12%)</title><rect x="1010.1" y="595.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1013.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (8 samples, 0.15%)</title><rect x="1011.4" y="627.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1014.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.15%)</title><rect x="1011.4" y="611.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.08%)</title><rect x="1011.7" y="595.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1011.7" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1011.7" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (3 samples, 0.06%)</title><rect x="1012.6" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.6" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (256 samples, 4.94%)</title><rect x="1013.3" y="643.0" width="58.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1016.3" y="654.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (59 samples, 1.14%)</title><rect x="1013.7" y="627.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1016.7" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1014.9" y="611.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.08%)</title><rect x="1014.9" y="595.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1017.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (50 samples, 0.97%)</title><rect x="1015.8" y="611.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.8" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.10%)</title><rect x="1016.2" y="595.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1019.2" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.04%)</title><rect x="1017.4" y="595.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1020.4" y="606.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.15%)</title><rect x="1017.8" y="595.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1020.8" y="606.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="1019.2" y="579.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1022.2" y="590.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="1019.2" y="563.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1022.2" y="574.0"></text>
</g>
<g>
<title>clock_gettime@plt (2 samples, 0.04%)</title><rect x="1019.6" y="595.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1022.6" y="606.0"></text>
</g>
<g>
<title>epoll_wait (29 samples, 0.56%)</title><rect x="1020.1" y="595.0" width="6.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1023.1" y="606.0"></text>
</g>
<g>
<title>epoll_wait@plt (2 samples, 0.04%)</title><rect x="1026.7" y="595.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1029.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (195 samples, 3.76%)</title><rect x="1027.2" y="627.0" width="44.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1030.2" y="638.0">one/..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="1027.4" y="611.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1030.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (191 samples, 3.69%)</title><rect x="1027.8" y="611.0" width="43.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1030.8" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (136 samples, 2.62%)</title><rect x="1028.3" y="595.0" width="31.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.3" y="606.0">on..</text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="1029.0" y="579.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1032.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (101 samples, 1.95%)</title><rect x="1029.7" y="579.0" width="23.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1032.7" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (101 samples, 1.95%)</title><rect x="1029.7" y="563.0" width="23.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1032.7" y="574.0">o..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (55 samples, 1.06%)</title><rect x="1030.1" y="547.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1033.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.08%)</title><rect x="1030.1" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1030.3" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1030.3" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.06%)</title><rect x="1031.0" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1034.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="1031.0" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1031.0" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1031.0" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (48 samples, 0.93%)</title><rect x="1031.7" y="531.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1034.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (48 samples, 0.93%)</title><rect x="1031.7" y="515.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (44 samples, 0.85%)</title><rect x="1032.6" y="499.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (44 samples, 0.85%)</title><rect x="1032.6" y="483.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (42 samples, 0.81%)</title><rect x="1032.6" y="467.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="1032.8" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1035.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="1032.8" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (39 samples, 0.75%)</title><rect x="1033.3" y="451.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (39 samples, 0.75%)</title><rect x="1033.3" y="435.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (39 samples, 0.75%)</title><rect x="1033.3" y="419.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.69%)</title><rect x="1034.0" y="403.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.69%)</title><rect x="1034.0" y="387.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.0" y="398.0"></text>
</g>
<g>
<title>Unsafe_Unpark (24 samples, 0.46%)</title><rect x="1034.2" y="371.0" width="5.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1037.2" y="382.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.15%)</title><rect x="1034.9" y="355.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1037.9" y="366.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="1036.9" y="355.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1039.9" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.19%)</title><rect x="1037.4" y="355.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1040.4" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.21%)</title><rect x="1039.7" y="371.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1042.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (2 samples, 0.04%)</title><rect x="1042.2" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (20 samples, 0.39%)</title><rect x="1042.6" y="547.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.get (17 samples, 0.33%)</title><rect x="1043.3" y="531.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.25%)</title><rect x="1043.8" y="515.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equals (10 samples, 0.19%)</title><rect x="1044.5" y="499.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="1045.6" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.06%)</title><rect x="1046.1" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1049.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="1046.7" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="1046.7" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.42%)</title><rect x="1047.2" y="547.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.37%)</title><rect x="1047.9" y="531.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.33%)</title><rect x="1048.3" y="515.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1048.3" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.25%)</title><rect x="1049.2" y="499.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (2 samples, 0.04%)</title><rect x="1052.2" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.25%)</title><rect x="1052.7" y="579.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1055.7" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.06%)</title><rect x="1052.9" y="563.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1055.9" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.06%)</title><rect x="1052.9" y="547.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1055.9" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.06%)</title><rect x="1052.9" y="531.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1055.9" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.06%)</title><rect x="1052.9" y="515.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1055.9" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.06%)</title><rect x="1052.9" y="499.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1055.9" y="510.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (2 samples, 0.04%)</title><rect x="1052.9" y="483.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1055.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1053.6" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.10%)</title><rect x="1054.5" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.10%)</title><rect x="1054.5" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1055.2" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1055.2" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.10%)</title><rect x="1055.6" y="579.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.10%)</title><rect x="1055.6" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.10%)</title><rect x="1055.6" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.04%)</title><rect x="1055.6" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1058.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.04%)</title><rect x="1055.6" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.6" y="526.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.04%)</title><rect x="1055.6" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1058.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.06%)</title><rect x="1056.1" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.04%)</title><rect x="1056.3" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1059.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.08%)</title><rect x="1057.0" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="1057.0" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="1057.0" y="547.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1060.0" y="558.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="1057.4" y="531.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1060.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.12%)</title><rect x="1057.9" y="579.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.12%)</title><rect x="1057.9" y="563.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1060.9" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="1058.4" y="547.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1061.4" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="1058.4" y="531.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1061.4" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="1058.4" y="515.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.4" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="1058.4" y="499.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1061.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1058.8" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1058.8" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1061.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.04%)</title><rect x="1058.8" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.8" y="526.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="1058.8" y="499.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1061.8" y="510.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="1058.8" y="483.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1061.8" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="1058.8" y="467.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1061.8" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="1058.8" y="451.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1061.8" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (53 samples, 1.02%)</title><rect x="1059.3" y="595.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (49 samples, 0.95%)</title><rect x="1060.0" y="579.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.0" y="590.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (21 samples, 0.41%)</title><rect x="1061.8" y="563.0" width="4.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1064.8" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="1062.5" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1065.5" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.23%)</title><rect x="1063.1" y="547.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1066.1" y="558.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.06%)</title><rect x="1063.4" y="531.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1066.4" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="1064.3" y="531.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1067.3" y="542.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.10%)</title><rect x="1064.7" y="531.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1067.7" y="542.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.06%)</title><rect x="1065.2" y="515.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1068.2" y="526.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.04%)</title><rect x="1066.1" y="547.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1069.1" y="558.0"></text>
</g>
<g>
<title>recv (18 samples, 0.35%)</title><rect x="1067.0" y="563.0" width="4.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1070.0" y="574.0"></text>
</g>
<g>
<title>start_thread (520 samples, 10.04%)</title><rect x="1071.6" y="643.0" width="118.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1074.6" y="654.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (520 samples, 10.04%)</title><rect x="1071.6" y="627.0" width="118.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1074.6" y="638.0">thread_native_..</text>
</g>
<g>
<title>Thread::call_run() (520 samples, 10.04%)</title><rect x="1071.6" y="611.0" width="118.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1074.6" y="622.0">Thread::call_r..</text>
</g>
<g>
<title>GangWorker::loop() (501 samples, 9.67%)</title><rect x="1071.6" y="595.0" width="114.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1074.6" y="606.0">GangWorker::lo..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (373 samples, 7.20%)</title><rect x="1071.6" y="579.0" width="84.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1074.6" y="590.0">G1CMConcur..</text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (367 samples, 7.08%)</title><rect x="1071.8" y="563.0" width="83.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1074.8" y="574.0">G1CMTask:..</text>
</g>
<g>
<title>BitMap::get_next_one_offset(unsigned long, unsigned long) const [clone .part.98] (6 samples, 0.12%)</title><rect x="1072.0" y="547.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1075.0" y="558.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (211 samples, 4.07%)</title><rect x="1073.4" y="547.0" width="48.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1076.4" y="558.0">G1CM..</text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.395] (5 samples, 0.10%)</title><rect x="1074.3" y="531.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1077.3" y="542.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (120 samples, 2.32%)</title><rect x="1075.4" y="531.0" width="27.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1078.4" y="542.0">G..</text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (88 samples, 1.70%)</title><rect x="1082.0" y="515.0" width="20.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1085.0" y="526.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (77 samples, 1.49%)</title><rect x="1084.3" y="499.0" width="17.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1087.3" y="510.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (57 samples, 1.10%)</title><rect x="1087.5" y="483.0" width="13.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.5" y="494.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.06%)</title><rect x="1099.8" y="467.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1102.8" y="478.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.06%)</title><rect x="1100.5" y="483.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1103.5" y="494.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.06%)</title><rect x="1101.2" y="483.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1104.2" y="494.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (3 samples, 0.06%)</title><rect x="1102.1" y="515.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1105.1" y="526.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (82 samples, 1.58%)</title><rect x="1102.8" y="531.0" width="18.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1105.8" y="542.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (57 samples, 1.10%)</title><rect x="1106.2" y="515.0" width="13.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1109.2" y="526.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (35 samples, 0.68%)</title><rect x="1109.4" y="499.0" width="7.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.4" y="510.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.06%)</title><rect x="1117.3" y="499.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1120.3" y="510.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (5 samples, 0.10%)</title><rect x="1118.0" y="499.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.0" y="510.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="1119.2" y="515.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1122.2" y="526.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (7 samples, 0.14%)</title><rect x="1119.9" y="515.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1122.9" y="526.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (7 samples, 0.14%)</title><rect x="1119.9" y="499.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1122.9" y="510.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.06%)</title><rect x="1120.8" y="483.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1123.8" y="494.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (144 samples, 2.78%)</title><rect x="1121.7" y="547.0" width="32.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1124.7" y="558.0">G1..</text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (3 samples, 0.06%)</title><rect x="1126.9" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.9" y="542.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (117 samples, 2.26%)</title><rect x="1127.6" y="531.0" width="26.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.6" y="542.0">v..</text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (2 samples, 0.04%)</title><rect x="1131.2" y="515.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.2" y="526.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (99 samples, 1.91%)</title><rect x="1131.7" y="515.0" width="22.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.7" y="526.0">v..</text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (79 samples, 1.52%)</title><rect x="1135.1" y="499.0" width="18.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1138.1" y="510.0"></text>
</g>
<g>
<title>oopDesc::size() (10 samples, 0.19%)</title><rect x="1150.8" y="483.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.8" y="494.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (2 samples, 0.04%)</title><rect x="1153.1" y="499.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.1" y="510.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.04%)</title><rect x="1153.8" y="499.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.8" y="510.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (4 samples, 0.08%)</title><rect x="1155.6" y="563.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.6" y="574.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (32 samples, 0.62%)</title><rect x="1157.0" y="579.0" width="7.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.0" y="590.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (20 samples, 0.39%)</title><rect x="1157.0" y="563.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.0" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (10 samples, 0.19%)</title><rect x="1157.4" y="547.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.4" y="558.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.10%)</title><rect x="1158.6" y="531.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.6" y="542.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.08%)</title><rect x="1158.8" y="515.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.8" y="526.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.15%)</title><rect x="1159.7" y="547.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1162.7" y="558.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="1161.5" y="563.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.5" y="574.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="1161.5" y="547.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.5" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="1161.5" y="531.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.5" y="542.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="1161.5" y="515.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.5" y="526.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.04%)</title><rect x="1161.5" y="499.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.5" y="510.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (2 samples, 0.04%)</title><rect x="1161.5" y="483.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.5" y="494.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.04%)</title><rect x="1161.5" y="467.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.5" y="478.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="1162.2" y="563.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.2" y="574.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.06%)</title><rect x="1162.2" y="547.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.2" y="558.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.06%)</title><rect x="1162.2" y="531.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.2" y="542.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.04%)</title><rect x="1162.4" y="515.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.4" y="526.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.12%)</title><rect x="1162.9" y="563.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.9" y="574.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (5 samples, 0.10%)</title><rect x="1162.9" y="547.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.9" y="558.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (5 samples, 0.10%)</title><rect x="1162.9" y="531.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.9" y="542.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (5 samples, 0.10%)</title><rect x="1162.9" y="515.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.9" y="526.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.04%)</title><rect x="1163.4" y="499.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.4" y="510.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (2 samples, 0.04%)</title><rect x="1163.4" y="483.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.4" y="494.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (90 samples, 1.74%)</title><rect x="1164.5" y="579.0" width="20.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.5" y="590.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (90 samples, 1.74%)</title><rect x="1164.5" y="563.0" width="20.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.5" y="574.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (88 samples, 1.70%)</title><rect x="1164.5" y="547.0" width="20.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.5" y="558.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (2 samples, 0.04%)</title><rect x="1176.6" y="531.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.6" y="542.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (2 samples, 0.04%)</title><rect x="1177.0" y="531.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.0" y="542.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.234] (8 samples, 0.15%)</title><rect x="1177.5" y="531.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.5" y="542.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (19 samples, 0.37%)</title><rect x="1179.3" y="531.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.3" y="542.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (2 samples, 0.04%)</title><rect x="1181.8" y="515.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.8" y="526.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.234] (6 samples, 0.12%)</title><rect x="1182.3" y="515.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.3" y="526.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (3 samples, 0.06%)</title><rect x="1183.9" y="531.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.9" y="542.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (2 samples, 0.04%)</title><rect x="1184.1" y="515.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.1" y="526.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="1184.5" y="547.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.5" y="558.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.06%)</title><rect x="1185.0" y="579.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.0" y="590.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.06%)</title><rect x="1185.0" y="563.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="574.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (3 samples, 0.06%)</title><rect x="1185.0" y="547.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.0" y="558.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.06%)</title><rect x="1185.0" y="531.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.0" y="542.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (3 samples, 0.06%)</title><rect x="1185.0" y="515.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.0" y="526.0"></text>
</g>
<g>
<title>JavaThread::run() (17 samples, 0.33%)</title><rect x="1185.7" y="595.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="606.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (17 samples, 0.33%)</title><rect x="1185.7" y="579.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.7" y="590.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (17 samples, 0.33%)</title><rect x="1185.7" y="563.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="574.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (16 samples, 0.31%)</title><rect x="1185.7" y="547.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="558.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (16 samples, 0.31%)</title><rect x="1185.7" y="531.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="542.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (9 samples, 0.17%)</title><rect x="1185.7" y="515.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="526.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (7 samples, 0.14%)</title><rect x="1186.1" y="499.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.1" y="510.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.04%)</title><rect x="1186.1" y="483.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.1" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.04%)</title><rect x="1186.8" y="483.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.8" y="494.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.10%)</title><rect x="1187.7" y="515.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="526.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.06%)</title><rect x="1188.0" y="499.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.0" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1188.9" y="515.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1188.9" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1188.9" y="483.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1188.9" y="467.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1188.9" y="451.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1188.9" y="435.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.9" y="446.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.04%)</title><rect x="1189.5" y="595.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.5" y="606.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.04%)</title><rect x="1189.5" y="579.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="590.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.04%)</title><rect x="1189.5" y="563.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.5" y="574.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1189.5" y="547.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="558.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1189.5" y="531.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.5" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.04%)</title><rect x="1189.5" y="515.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="526.0"></text>
</g>
</g>
</svg>
