<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="837"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="837"> </text>
<g id="frames">
<g>
<title>all (1,387 samples, 100.00%)</title><rect x="10.0" y="803.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="814.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 1.30%)</title><rect x="10.0" y="787.0" width="15.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (18 samples, 1.30%)</title><rect x="10.0" y="771.0" width="15.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (17 samples, 1.23%)</title><rect x="10.0" y="755.0" width="14.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="11.7" y="739.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.7" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (12 samples, 0.87%)</title><rect x="12.6" y="739.0" width="10.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.6" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.22%)</title><rect x="12.6" y="723.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="734.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.14%)</title><rect x="15.1" y="723.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="18.1" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.22%)</title><rect x="16.8" y="723.0" width="2.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="19.8" y="734.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.14%)</title><rect x="19.4" y="723.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.4" y="734.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.07%)</title><rect x="20.2" y="707.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="23.2" y="718.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@plt (1 samples, 0.07%)</title><rect x="21.1" y="723.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="24.1" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.07%)</title><rect x="21.9" y="723.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="24.9" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.14%)</title><rect x="22.8" y="739.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="25.8" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="24.5" y="755.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="27.5" y="766.0"></text>
</g>
<g>
<title>[deoptimization] (1 samples, 0.07%)</title><rect x="25.3" y="787.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="28.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="25.3" y="771.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="28.3" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.07%)</title><rect x="25.3" y="755.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="28.3" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.07%)</title><rect x="25.3" y="739.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="28.3" y="750.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.22%)</title><rect x="26.2" y="787.0" width="2.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="29.2" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.14%)</title><rect x="26.2" y="771.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="29.2" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="27.9" y="771.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.9" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.07%)</title><rect x="27.9" y="755.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="30.9" y="766.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.07%)</title><rect x="27.9" y="739.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.9" y="750.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.07%)</title><rect x="27.9" y="723.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="30.9" y="734.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.07%)</title><rect x="27.9" y="707.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="30.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.29%)</title><rect x="28.7" y="787.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="31.7" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.07%)</title><rect x="28.7" y="771.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="31.7" y="782.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (3 samples, 0.22%)</title><rect x="29.6" y="771.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="32.6" y="782.0"></text>
</g>
<g>
<title>[unknown_Java] (21 samples, 1.51%)</title><rect x="32.1" y="787.0" width="17.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="35.1" y="798.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.07%)</title><rect x="32.1" y="771.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="35.1" y="782.0"></text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.14%)</title><rect x="33.0" y="771.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.0" y="782.0"></text>
</g>
<g>
<title>Interpreter (2 samples, 0.14%)</title><rect x="34.7" y="771.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="37.7" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (1 samples, 0.07%)</title><rect x="36.4" y="771.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.4" y="782.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (1 samples, 0.07%)</title><rect x="36.4" y="755.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="39.4" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.22%)</title><rect x="37.2" y="771.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="40.2" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.22%)</title><rect x="39.8" y="771.0" width="2.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="42.8" y="782.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.14%)</title><rect x="42.3" y="771.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="45.3" y="782.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="43.2" y="755.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="46.2" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="43.2" y="739.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="46.2" y="750.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="44.0" y="771.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="47.0" y="782.0"></text>
</g>
<g>
<title>sha256_implCompress (6 samples, 0.43%)</title><rect x="44.9" y="771.0" width="5.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="47.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,060 samples, 76.42%)</title><rect x="50.0" y="787.0" width="901.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.0" y="798.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,060 samples, 76.42%)</title><rect x="50.0" y="771.0" width="901.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.0" y="782.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,060 samples, 76.42%)</title><rect x="50.0" y="755.0" width="901.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.0" y="766.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.14%)</title><rect x="54.2" y="739.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.2" y="750.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="55.9" y="739.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="58.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (272 samples, 19.61%)</title><rect x="56.8" y="739.0" width="231.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.8" y="750.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (204 samples, 14.71%)</title><rect x="56.8" y="723.0" width="173.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.8" y="734.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (171 samples, 12.33%)</title><rect x="58.5" y="707.0" width="145.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.5" y="718.0">java/util/concurre..</text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="59.3" y="691.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="62.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/1728467356.apply (169 samples, 12.18%)</title><rect x="60.2" y="691.0" width="143.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.2" y="702.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (167 samples, 12.04%)</title><rect x="61.9" y="675.0" width="142.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.9" y="686.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (167 samples, 12.04%)</title><rect x="61.9" y="659.0" width="142.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.9" y="670.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.07%)</title><rect x="61.9" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.07%)</title><rect x="61.9" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.07%)</title><rect x="61.9" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (131 samples, 9.44%)</title><rect x="62.7" y="643.0" width="111.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.7" y="654.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (131 samples, 9.44%)</title><rect x="62.7" y="627.0" width="111.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.7" y="638.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (131 samples, 9.44%)</title><rect x="62.7" y="611.0" width="111.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.7" y="622.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (76 samples, 5.48%)</title><rect x="63.6" y="595.0" width="64.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.6" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (76 samples, 5.48%)</title><rect x="63.6" y="579.0" width="64.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.6" y="590.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (74 samples, 5.34%)</title><rect x="63.6" y="563.0" width="63.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.6" y="574.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1197842853.apply (73 samples, 5.26%)</title><rect x="64.4" y="547.0" width="62.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.4" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (73 samples, 5.26%)</title><rect x="64.4" y="531.0" width="62.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.4" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (73 samples, 5.26%)</title><rect x="64.4" y="515.0" width="62.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.4" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.apply (73 samples, 5.26%)</title><rect x="64.4" y="499.0" width="62.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.4" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (73 samples, 5.26%)</title><rect x="64.4" y="483.0" width="62.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.4" y="494.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 0.22%)</title><rect x="64.4" y="467.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 0.22%)</title><rect x="64.4" y="451.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.22%)</title><rect x="64.4" y="435.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$383/847257842.apply (3 samples, 0.22%)</title><rect x="64.4" y="419.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3 samples, 0.22%)</title><rect x="64.4" y="403.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.22%)</title><rect x="64.4" y="387.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$229/148200039.apply (1 samples, 0.07%)</title><rect x="64.4" y="371.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.07%)</title><rect x="64.4" y="355.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.07%)</title><rect x="64.4" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.07%)</title><rect x="64.4" y="323.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.07%)</title><rect x="64.4" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.07%)</title><rect x="64.4" y="291.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.07%)</title><rect x="64.4" y="275.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.07%)</title><rect x="64.4" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.apply (2 samples, 0.14%)</title><rect x="65.3" y="371.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2 samples, 0.14%)</title><rect x="65.3" y="355.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.14%)</title><rect x="65.3" y="339.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.07%)</title><rect x="66.1" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (70 samples, 5.05%)</title><rect x="67.0" y="467.0" width="59.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.0" y="478.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (61 samples, 4.40%)</title><rect x="67.0" y="451.0" width="51.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.0" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (61 samples, 4.40%)</title><rect x="67.0" y="435.0" width="51.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.0" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.07%)</title><rect x="67.0" y="419.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$380/136395083.apply (60 samples, 4.33%)</title><rect x="67.9" y="419.0" width="51.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.9" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (60 samples, 4.33%)</title><rect x="67.9" y="403.0" width="51.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.9" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.07%)</title><rect x="68.7" y="387.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.07%)</title><rect x="68.7" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.07%)</title><rect x="69.6" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.07%)</title><rect x="69.6" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.07%)</title><rect x="69.6" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.22%)</title><rect x="70.4" y="387.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.22%)</title><rect x="70.4" y="371.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.07%)</title><rect x="70.4" y="355.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.07%)</title><rect x="70.4" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.07%)</title><rect x="70.4" y="323.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.07%)</title><rect x="70.4" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.4" y="318.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="70.4" y="291.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="73.4" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="70.4" y="275.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="73.4" y="286.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="70.4" y="259.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="73.4" y="270.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="70.4" y="243.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="73.4" y="254.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="70.4" y="227.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="73.4" y="238.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.07%)</title><rect x="70.4" y="211.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="73.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.14%)</title><rect x="71.3" y="355.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.14%)</title><rect x="71.3" y="339.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.14%)</title><rect x="71.3" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.14%)</title><rect x="71.3" y="307.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.14%)</title><rect x="71.3" y="291.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (1 samples, 0.07%)</title><rect x="71.3" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.07%)</title><rect x="72.1" y="275.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.07%)</title><rect x="72.1" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.07%)</title><rect x="72.1" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.07%)</title><rect x="72.1" y="227.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.07%)</title><rect x="72.1" y="211.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$437/1879671514.run (1 samples, 0.07%)</title><rect x="72.1" y="195.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1 samples, 0.07%)</title><rect x="72.1" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.07%)</title><rect x="72.1" y="163.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (21 samples, 1.51%)</title><rect x="73.0" y="387.0" width="17.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.0" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="73.0" y="371.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="76.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (20 samples, 1.44%)</title><rect x="73.8" y="371.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5 samples, 0.36%)</title><rect x="73.8" y="355.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.36%)</title><rect x="73.8" y="339.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.36%)</title><rect x="73.8" y="323.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.36%)</title><rect x="73.8" y="307.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.36%)</title><rect x="73.8" y="291.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.8" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.14%)</title><rect x="74.7" y="275.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="77.7" y="286.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.14%)</title><rect x="74.7" y="259.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="77.7" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.14%)</title><rect x="74.7" y="243.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="77.7" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.07%)</title><rect x="74.7" y="227.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="77.7" y="238.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="75.5" y="227.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="78.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.14%)</title><rect x="76.4" y="275.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (15 samples, 1.08%)</title><rect x="78.1" y="355.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (15 samples, 1.08%)</title><rect x="78.1" y="339.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (13 samples, 0.94%)</title><rect x="78.1" y="323.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (12 samples, 0.87%)</title><rect x="78.1" y="307.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (12 samples, 0.87%)</title><rect x="78.1" y="291.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.1" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.22%)</title><rect x="78.9" y="275.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="81.9" y="286.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.22%)</title><rect x="78.9" y="259.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="81.9" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.22%)</title><rect x="78.9" y="243.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="81.9" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.22%)</title><rect x="78.9" y="227.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="81.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (8 samples, 0.58%)</title><rect x="81.5" y="275.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.5" y="286.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="86.6" y="259.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="89.6" y="270.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.07%)</title><rect x="86.6" y="243.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="89.6" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="86.6" y="227.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="89.6" y="238.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="86.6" y="211.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="89.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.07%)</title><rect x="87.4" y="259.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.07%)</title><rect x="88.3" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.3" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="88.3" y="291.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="91.3" y="302.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.07%)</title><rect x="88.3" y="275.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="91.3" y="286.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.07%)</title><rect x="88.3" y="259.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="91.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="89.1" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (1 samples, 0.07%)</title><rect x="90.0" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.07%)</title><rect x="90.0" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (33 samples, 2.38%)</title><rect x="90.8" y="387.0" width="28.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.8" y="398.0">jd..</text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.07%)</title><rect x="90.8" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.8" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="90.8" y="355.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="93.8" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="90.8" y="339.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="93.8" y="350.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="90.8" y="323.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="93.8" y="334.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="90.8" y="307.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="93.8" y="318.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.07%)</title><rect x="90.8" y="291.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="93.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (20 samples, 1.44%)</title><rect x="91.7" y="371.0" width="17.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.7" y="382.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (1 samples, 0.07%)</title><rect x="92.5" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.07%)</title><rect x="92.5" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.07%)</title><rect x="92.5" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.5" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$403/621187221.get$Lambda (1 samples, 0.07%)</title><rect x="92.5" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.5" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$403/621187221.&lt;init&gt; (1 samples, 0.07%)</title><rect x="92.5" y="291.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.5" y="302.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.07%)</title><rect x="92.5" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (1 samples, 0.07%)</title><rect x="93.4" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.07%)</title><rect x="93.4" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.4" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.07%)</title><rect x="93.4" y="323.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.4" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.07%)</title><rect x="93.4" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.07%)</title><rect x="93.4" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (7 samples, 0.50%)</title><rect x="94.2" y="355.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="95.9" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="95.9" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.9" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="95.9" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.9" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$403/621187221.test (2 samples, 0.14%)</title><rect x="96.8" y="339.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.8" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2 samples, 0.14%)</title><rect x="96.8" y="323.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1687662712.test (1 samples, 0.07%)</title><rect x="97.6" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.07%)</title><rect x="97.6" y="291.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.6" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1778081847.test (1 samples, 0.07%)</title><rect x="97.6" y="275.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.6" y="286.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.07%)</title><rect x="97.6" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/231786897.test (1 samples, 0.07%)</title><rect x="97.6" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.07%)</title><rect x="97.6" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.07%)</title><rect x="97.6" y="211.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="97.6" y="195.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="97.6" y="179.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.6" y="190.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.07%)</title><rect x="98.5" y="339.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="101.5" y="350.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="99.3" y="339.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="102.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (5 samples, 0.36%)</title><rect x="100.2" y="355.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (4 samples, 0.29%)</title><rect x="101.0" y="339.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.29%)</title><rect x="101.0" y="323.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.29%)</title><rect x="101.0" y="307.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.22%)</title><rect x="101.9" y="291.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (5 samples, 0.36%)</title><rect x="104.4" y="355.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.36%)</title><rect x="104.4" y="339.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.4" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.36%)</title><rect x="104.4" y="323.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.4" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.36%)</title><rect x="104.4" y="307.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (4 samples, 0.29%)</title><rect x="104.4" y="291.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.4" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.29%)</title><rect x="104.4" y="275.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.4" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.07%)</title><rect x="104.4" y="259.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.14%)</title><rect x="105.3" y="259.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (1 samples, 0.07%)</title><rect x="106.1" y="243.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.1" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.07%)</title><rect x="106.1" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.07%)</title><rect x="107.0" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.07%)</title><rect x="107.8" y="291.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (3 samples, 0.22%)</title><rect x="108.7" y="371.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.22%)</title><rect x="108.7" y="355.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.58%)</title><rect x="111.2" y="371.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.07%)</title><rect x="112.1" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.1" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.07%)</title><rect x="112.1" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.07%)</title><rect x="112.1" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.22%)</title><rect x="112.9" y="355.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.22%)</title><rect x="112.9" y="339.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.14%)</title><rect x="112.9" y="323.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.14%)</title><rect x="112.9" y="307.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="113.8" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.8" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.07%)</title><rect x="114.6" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.22%)</title><rect x="115.5" y="355.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.5" y="366.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="116.3" y="339.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="116.3" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.07%)</title><rect x="116.3" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.07%)</title><rect x="117.2" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.requests (1 samples, 0.07%)</title><rect x="118.0" y="371.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (9 samples, 0.65%)</title><rect x="118.9" y="451.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.36%)</title><rect x="119.7" y="435.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.36%)</title><rect x="119.7" y="419.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.36%)</title><rect x="119.7" y="403.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.36%)</title><rect x="119.7" y="387.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.36%)</title><rect x="119.7" y="371.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.07%)</title><rect x="120.6" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.22%)</title><rect x="121.4" y="355.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (3 samples, 0.22%)</title><rect x="121.4" y="339.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.22%)</title><rect x="121.4" y="323.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.07%)</title><rect x="121.4" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.07%)</title><rect x="121.4" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.07%)</title><rect x="121.4" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.07%)</title><rect x="121.4" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.07%)</title><rect x="121.4" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.14%)</title><rect x="122.3" y="307.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.07%)</title><rect x="122.3" y="291.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.07%)</title><rect x="122.3" y="275.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.07%)</title><rect x="122.3" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.07%)</title><rect x="122.3" y="243.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.07%)</title><rect x="122.3" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.07%)</title><rect x="123.2" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.07%)</title><rect x="123.2" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.2" y="286.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.07%)</title><rect x="123.2" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.07%)</title><rect x="123.2" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1 samples, 0.07%)</title><rect x="124.0" y="435.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.0" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="124.0" y="419.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="124.9" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (1 samples, 0.07%)</title><rect x="125.7" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.14%)</title><rect x="126.6" y="563.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.6" y="574.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="127.4" y="547.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="130.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.07%)</title><rect x="128.3" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.07%)</title><rect x="128.3" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.07%)</title><rect x="128.3" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.3" y="574.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="128.3" y="547.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="131.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (53 samples, 3.82%)</title><rect x="129.1" y="595.0" width="45.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.1" y="606.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.22%)</title><rect x="130.8" y="579.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.22%)</title><rect x="130.8" y="563.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.14%)</title><rect x="131.7" y="547.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.7" y="558.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="131.7" y="531.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="134.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.07%)</title><rect x="133.4" y="579.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.07%)</title><rect x="133.4" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.07%)</title><rect x="133.4" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (46 samples, 3.32%)</title><rect x="134.2" y="579.0" width="39.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.2" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (46 samples, 3.32%)</title><rect x="134.2" y="563.0" width="39.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.2" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (45 samples, 3.24%)</title><rect x="135.1" y="547.0" width="38.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.1" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (10 samples, 0.72%)</title><rect x="135.1" y="531.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.&lt;init&gt; (1 samples, 0.07%)</title><rect x="135.9" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.07%)</title><rect x="136.8" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.50%)</title><rect x="137.6" y="515.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (4 samples, 0.29%)</title><rect x="143.6" y="531.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.29%)</title><rect x="143.6" y="515.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.29%)</title><rect x="143.6" y="499.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.29%)</title><rect x="143.6" y="483.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (4 samples, 0.29%)</title><rect x="143.6" y="467.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (4 samples, 0.29%)</title><rect x="143.6" y="451.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.6" y="462.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (4 samples, 0.29%)</title><rect x="143.6" y="435.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.6" y="446.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.07%)</title><rect x="146.1" y="419.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (7 samples, 0.50%)</title><rect x="147.0" y="531.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (7 samples, 0.50%)</title><rect x="147.0" y="515.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.0" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.36%)</title><rect x="147.0" y="499.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="150.0" y="510.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="147.0" y="483.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="150.0" y="494.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.29%)</title><rect x="147.8" y="483.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="150.8" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.22%)</title><rect x="148.7" y="467.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="151.7" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.22%)</title><rect x="148.7" y="451.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="151.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (2 samples, 0.14%)</title><rect x="151.2" y="499.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.14%)</title><rect x="151.2" y="483.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="151.2" y="467.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.07%)</title><rect x="151.2" y="451.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.2" y="462.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.07%)</title><rect x="151.2" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.2" y="446.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.07%)</title><rect x="151.2" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.2" y="430.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.07%)</title><rect x="151.2" y="403.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="152.1" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.07%)</title><rect x="152.1" y="451.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.1" y="462.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.07%)</title><rect x="152.1" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (24 samples, 1.73%)</title><rect x="152.9" y="531.0" width="20.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.9" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (23 samples, 1.66%)</title><rect x="153.8" y="515.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.8" y="526.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (18 samples, 1.30%)</title><rect x="153.8" y="499.0" width="15.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="156.8" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.14%)</title><rect x="154.6" y="483.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="157.6" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.07%)</title><rect x="155.5" y="467.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="158.5" y="478.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.07%)</title><rect x="156.3" y="483.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="159.3" y="494.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.29%)</title><rect x="157.2" y="483.0" width="3.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="160.2" y="494.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.14%)</title><rect x="158.0" y="467.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="161.0" y="478.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.14%)</title><rect x="158.0" y="451.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="161.0" y="462.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.07%)</title><rect x="159.7" y="467.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="162.7" y="478.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.14%)</title><rect x="160.6" y="483.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="163.6" y="494.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.07%)</title><rect x="162.3" y="483.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="165.3" y="494.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.14%)</title><rect x="163.1" y="483.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="166.1" y="494.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.22%)</title><rect x="164.8" y="483.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="167.8" y="494.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.07%)</title><rect x="164.8" y="467.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="167.8" y="478.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.14%)</title><rect x="165.7" y="467.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="168.7" y="478.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.14%)</title><rect x="165.7" y="451.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="168.7" y="462.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.07%)</title><rect x="166.5" y="435.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="169.5" y="446.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.14%)</title><rect x="167.4" y="483.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="170.4" y="494.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.07%)</title><rect x="167.4" y="467.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="170.4" y="478.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.07%)</title><rect x="167.4" y="451.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="170.4" y="462.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.07%)</title><rect x="168.2" y="467.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="171.2" y="478.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.07%)</title><rect x="168.2" y="451.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="171.2" y="462.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="168.2" y="435.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="171.2" y="446.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.07%)</title><rect x="168.2" y="419.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="171.2" y="430.0"></text>
</g>
<g>
<title>JVM_DoPrivileged@plt (1 samples, 0.07%)</title><rect x="169.1" y="499.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="172.1" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.07%)</title><rect x="169.9" y="499.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="172.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$248/502041341.run (3 samples, 0.22%)</title><rect x="170.8" y="499.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.22%)</title><rect x="170.8" y="483.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.8" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.22%)</title><rect x="170.8" y="467.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.8" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.22%)</title><rect x="170.8" y="451.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.8" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.22%)</title><rect x="170.8" y="435.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.8" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.22%)</title><rect x="170.8" y="419.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.8" y="430.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (3 samples, 0.22%)</title><rect x="170.8" y="403.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (2 samples, 0.14%)</title><rect x="170.8" y="387.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.8" y="398.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="170.8" y="371.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="173.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.07%)</title><rect x="171.6" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.6" y="382.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="172.5" y="387.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="175.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.07%)</title><rect x="173.3" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (14 samples, 1.01%)</title><rect x="174.2" y="643.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.14%)</title><rect x="174.2" y="627.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="177.2" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.14%)</title><rect x="174.2" y="611.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="177.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="175.0" y="595.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="178.0" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.07%)</title><rect x="175.0" y="579.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="178.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (8 samples, 0.58%)</title><rect x="175.9" y="627.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="178.9" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.43%)</title><rect x="177.6" y="611.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.14%)</title><rect x="177.6" y="595.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.14%)</title><rect x="177.6" y="579.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.14%)</title><rect x="177.6" y="563.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.14%)</title><rect x="179.3" y="595.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.14%)</title><rect x="181.0" y="595.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (4 samples, 0.29%)</title><rect x="182.7" y="627.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.29%)</title><rect x="182.7" y="611.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.22%)</title><rect x="183.6" y="595.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="186.6" y="606.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.14%)</title><rect x="183.6" y="579.0" width="1.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="186.6" y="590.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="185.3" y="579.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="188.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (4 samples, 0.29%)</title><rect x="186.1" y="643.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.1" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.14%)</title><rect x="187.8" y="627.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="190.8" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.14%)</title><rect x="187.8" y="611.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="190.8" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="187.8" y="595.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="190.8" y="606.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.07%)</title><rect x="188.7" y="595.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="191.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (13 samples, 0.94%)</title><rect x="189.5" y="643.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (11 samples, 0.79%)</title><rect x="191.2" y="627.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="194.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (9 samples, 0.65%)</title><rect x="192.9" y="611.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.9" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="192.9" y="595.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="195.9" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.07%)</title><rect x="192.9" y="579.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="195.9" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="192.9" y="563.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="195.9" y="574.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="192.9" y="547.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="195.9" y="558.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (8 samples, 0.58%)</title><rect x="193.8" y="595.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.8" y="606.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (3 samples, 0.22%)</title><rect x="193.8" y="579.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.8" y="590.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.07%)</title><rect x="195.5" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.5" y="574.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.07%)</title><rect x="195.5" y="547.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.5" y="558.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.07%)</title><rect x="195.5" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.5" y="542.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.36%)</title><rect x="196.3" y="579.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.36%)</title><rect x="196.3" y="563.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.3" y="574.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.36%)</title><rect x="196.3" y="547.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="199.3" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.14%)</title><rect x="198.9" y="531.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="201.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (4 samples, 0.29%)</title><rect x="200.6" y="643.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (4 samples, 0.29%)</title><rect x="200.6" y="627.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (4 samples, 0.29%)</title><rect x="200.6" y="611.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.6" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.29%)</title><rect x="200.6" y="595.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.6" y="606.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.29%)</title><rect x="200.6" y="579.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.14%)</title><rect x="202.3" y="563.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.3" y="574.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.14%)</title><rect x="202.3" y="547.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="205.3" y="558.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="202.3" y="531.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="205.3" y="542.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.07%)</title><rect x="203.1" y="531.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="206.1" y="542.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="203.1" y="515.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="206.1" y="526.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="203.1" y="499.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="206.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (28 samples, 2.02%)</title><rect x="204.0" y="707.0" width="23.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.0" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (27 samples, 1.95%)</title><rect x="204.8" y="691.0" width="23.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.8" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.36%)</title><rect x="204.8" y="675.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.36%)</title><rect x="204.8" y="659.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.8" y="670.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.22%)</title><rect x="205.7" y="643.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="208.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.accept (1 samples, 0.07%)</title><rect x="208.2" y="643.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.accept (22 samples, 1.59%)</title><rect x="209.1" y="675.0" width="18.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (22 samples, 1.59%)</title><rect x="209.1" y="659.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (22 samples, 1.59%)</title><rect x="209.1" y="643.0" width="18.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (21 samples, 1.51%)</title><rect x="209.1" y="627.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.22%)</title><rect x="209.1" y="611.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.22%)</title><rect x="209.1" y="595.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.22%)</title><rect x="209.1" y="579.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.1" y="590.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="209.9" y="563.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="212.9" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="210.8" y="563.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="213.8" y="574.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="210.8" y="547.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="213.8" y="558.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="210.8" y="531.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="213.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 1.23%)</title><rect x="211.6" y="611.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.22%)</title><rect x="211.6" y="595.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 1.01%)</title><rect x="214.2" y="595.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 1.01%)</title><rect x="214.2" y="579.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (13 samples, 0.94%)</title><rect x="215.0" y="563.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (13 samples, 0.94%)</title><rect x="215.0" y="547.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.0" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.50%)</title><rect x="215.9" y="531.0" width="5.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="218.9" y="542.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.07%)</title><rect x="216.7" y="515.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="219.7" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.29%)</title><rect x="217.6" y="515.0" width="3.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="220.6" y="526.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.07%)</title><rect x="218.4" y="499.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="221.4" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.07%)</title><rect x="219.3" y="499.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="222.3" y="510.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="220.1" y="499.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="223.1" y="510.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.07%)</title><rect x="221.0" y="515.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="224.0" y="526.0"></text>
</g>
<g>
<title>__send (5 samples, 0.36%)</title><rect x="221.8" y="531.0" width="4.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="224.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="226.1" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="226.1" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="226.1" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (1 samples, 0.07%)</title><rect x="226.9" y="627.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$213/2012649623.get (1 samples, 0.07%)</title><rect x="227.8" y="707.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$607/75241041.get (1 samples, 0.07%)</title><rect x="228.6" y="707.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.6" y="718.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="229.5" y="707.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="232.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$607/75241041.get (68 samples, 4.90%)</title><rect x="230.3" y="723.0" width="57.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.3" y="734.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$get$13 (68 samples, 4.90%)</title><rect x="230.3" y="707.0" width="57.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.3" y="718.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (64 samples, 4.61%)</title><rect x="231.2" y="691.0" width="54.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.2" y="702.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.43%)</title><rect x="231.2" y="675.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.43%)</title><rect x="231.2" y="659.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.14%)</title><rect x="232.0" y="643.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.0" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.14%)</title><rect x="232.0" y="627.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.14%)</title><rect x="232.0" y="611.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.get (1 samples, 0.07%)</title><rect x="232.0" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.07%)</title><rect x="232.9" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (1 samples, 0.07%)</title><rect x="232.9" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.22%)</title><rect x="233.7" y="643.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.7" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.next (2 samples, 0.14%)</title><rect x="234.6" y="627.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (58 samples, 4.18%)</title><rect x="236.3" y="675.0" width="49.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.3" y="686.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6 samples, 0.43%)</title><rect x="236.3" y="659.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.43%)</title><rect x="236.3" y="643.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.3" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.43%)</title><rect x="236.3" y="627.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.43%)</title><rect x="236.3" y="611.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="239.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.43%)</title><rect x="236.3" y="595.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.29%)</title><rect x="237.2" y="579.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1 samples, 0.07%)</title><rect x="237.2" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$654/245478249.getAsBoolean (3 samples, 0.22%)</title><rect x="238.0" y="563.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.22%)</title><rect x="238.0" y="547.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.14%)</title><rect x="238.9" y="531.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.14%)</title><rect x="238.9" y="515.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$623/1240334558.apply (1 samples, 0.07%)</title><rect x="238.9" y="499.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (1 samples, 0.07%)</title><rect x="238.9" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="241.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.&lt;init&gt; (1 samples, 0.07%)</title><rect x="238.9" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$526/561308271.apply (1 samples, 0.07%)</title><rect x="239.7" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$10 (1 samples, 0.07%)</title><rect x="239.7" y="483.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (1 samples, 0.07%)</title><rect x="239.7" y="467.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.07%)</title><rect x="239.7" y="451.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (1 samples, 0.07%)</title><rect x="240.6" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$626/216827783.get (1 samples, 0.07%)</title><rect x="240.6" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.lambda$spliterator$0 (1 samples, 0.07%)</title><rect x="240.6" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.07%)</title><rect x="240.6" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.isParallel (1 samples, 0.07%)</title><rect x="240.6" y="515.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.22%)</title><rect x="241.4" y="659.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.4" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (1 samples, 0.07%)</title><rect x="243.1" y="643.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="244.0" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="244.0" y="643.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="244.0" y="627.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="244.0" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="244.0" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.07%)</title><rect x="244.8" y="659.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.07%)</title><rect x="244.8" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.07%)</title><rect x="244.8" y="627.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.14%)</title><rect x="245.7" y="659.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.14%)</title><rect x="245.7" y="643.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.14%)</title><rect x="245.7" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.14%)</title><rect x="245.7" y="611.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.7" y="622.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.07%)</title><rect x="245.7" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1 samples, 0.07%)</title><rect x="245.7" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1 samples, 0.07%)</title><rect x="245.7" y="563.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.07%)</title><rect x="245.7" y="547.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$654/245478249.getAsBoolean (1 samples, 0.07%)</title><rect x="245.7" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.07%)</title><rect x="245.7" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.07%)</title><rect x="245.7" y="499.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.07%)</title><rect x="245.7" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$623/1240334558.apply (1 samples, 0.07%)</title><rect x="245.7" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (1 samples, 0.07%)</title><rect x="245.7" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.&lt;init&gt; (1 samples, 0.07%)</title><rect x="245.7" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.07%)</title><rect x="246.5" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (45 samples, 3.24%)</title><rect x="247.4" y="659.0" width="38.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.4" y="670.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.07%)</title><rect x="247.4" y="643.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.4" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (42 samples, 3.03%)</title><rect x="248.2" y="643.0" width="35.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.2" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (41 samples, 2.96%)</title><rect x="248.2" y="627.0" width="34.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.2" y="638.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.14%)</title><rect x="248.2" y="611.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (38 samples, 2.74%)</title><rect x="249.9" y="611.0" width="32.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.9" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (37 samples, 2.67%)</title><rect x="250.8" y="595.0" width="31.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.8" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.07%)</title><rect x="251.6" y="579.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.07%)</title><rect x="251.6" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="251.6" y="547.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="251.6" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="251.6" y="515.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.6" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.07%)</title><rect x="251.6" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (35 samples, 2.52%)</title><rect x="252.5" y="579.0" width="29.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.5" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (35 samples, 2.52%)</title><rect x="252.5" y="563.0" width="29.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.5" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.36%)</title><rect x="252.5" y="547.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.29%)</title><rect x="253.3" y="531.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.22%)</title><rect x="254.2" y="515.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.2" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.22%)</title><rect x="254.2" y="499.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (30 samples, 2.16%)</title><rect x="256.7" y="547.0" width="25.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.7" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (19 samples, 1.37%)</title><rect x="266.1" y="531.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 1.37%)</title><rect x="266.1" y="515.0" width="16.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.94%)</title><rect x="271.2" y="499.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.2" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.58%)</title><rect x="272.0" y="483.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.14%)</title><rect x="277.1" y="467.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.1" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.14%)</title><rect x="277.1" y="451.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.29%)</title><rect x="278.8" y="483.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.29%)</title><rect x="278.8" y="467.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.8" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.14%)</title><rect x="280.5" y="451.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Sink.cancellationRequested (1 samples, 0.07%)</title><rect x="282.2" y="611.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.07%)</title><rect x="283.1" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.07%)</title><rect x="283.1" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.07%)</title><rect x="283.1" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.07%)</title><rect x="283.1" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="283.9" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="283.9" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.07%)</title><rect x="283.9" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.9" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="283.9" y="595.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="286.9" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="283.9" y="579.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="286.9" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="283.9" y="563.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="286.9" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="283.9" y="547.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="286.9" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="283.9" y="531.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="286.9" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.07%)</title><rect x="283.9" y="515.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="286.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (1 samples, 0.07%)</title><rect x="284.8" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Value.getData (1 samples, 0.07%)</title><rect x="285.6" y="691.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.6" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.07%)</title><rect x="285.6" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.6" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.07%)</title><rect x="285.6" y="659.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (1 samples, 0.07%)</title><rect x="286.5" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.07%)</title><rect x="286.5" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.5" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.07%)</title><rect x="286.5" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.5" y="670.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.07%)</title><rect x="286.5" y="643.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="289.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="287.3" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (23 samples, 1.66%)</title><rect x="288.2" y="739.0" width="19.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.36%)</title><rect x="288.2" y="723.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.29%)</title><rect x="289.0" y="707.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="292.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.29%)</title><rect x="289.0" y="691.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.22%)</title><rect x="289.9" y="675.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.22%)</title><rect x="289.9" y="659.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.14%)</title><rect x="289.9" y="643.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.14%)</title><rect x="289.9" y="627.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.9" y="638.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="289.9" y="611.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="292.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.accept (1 samples, 0.07%)</title><rect x="290.7" y="611.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.accept (1 samples, 0.07%)</title><rect x="291.6" y="643.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (1 samples, 0.07%)</title><rect x="291.6" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.07%)</title><rect x="291.6" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.07%)</title><rect x="291.6" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.07%)</title><rect x="291.6" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.07%)</title><rect x="291.6" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.07%)</title><rect x="291.6" y="547.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.07%)</title><rect x="291.6" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.07%)</title><rect x="291.6" y="515.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="291.6" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (18 samples, 1.30%)</title><rect x="292.5" y="723.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.07%)</title><rect x="292.5" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.07%)</title><rect x="292.5" y="691.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (17 samples, 1.23%)</title><rect x="293.3" y="707.0" width="14.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$226/1373714853.accept (17 samples, 1.23%)</title><rect x="293.3" y="691.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$15 (17 samples, 1.23%)</title><rect x="293.3" y="675.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (11 samples, 0.79%)</title><rect x="293.3" y="659.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 0.79%)</title><rect x="293.3" y="643.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.72%)</title><rect x="294.2" y="627.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.14%)</title><rect x="295.0" y="611.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.14%)</title><rect x="295.0" y="595.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.14%)</title><rect x="295.0" y="579.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.14%)</title><rect x="295.0" y="563.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.50%)</title><rect x="296.7" y="611.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 0.50%)</title><rect x="296.7" y="595.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="299.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 0.50%)</title><rect x="296.7" y="579.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 0.50%)</title><rect x="296.7" y="563.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.7" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.22%)</title><rect x="297.6" y="547.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="300.6" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.14%)</title><rect x="298.4" y="531.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="301.4" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.07%)</title><rect x="299.3" y="515.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="302.3" y="526.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="300.1" y="547.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="303.1" y="558.0"></text>
</g>
<g>
<title>__send (2 samples, 0.14%)</title><rect x="301.0" y="547.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="304.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$218/1944842503.mergeResponse (4 samples, 0.29%)</title><rect x="302.7" y="659.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$11 (4 samples, 0.29%)</title><rect x="302.7" y="643.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.7" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.07%)</title><rect x="302.7" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (1 samples, 0.07%)</title><rect x="302.7" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.7" y="622.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (1 samples, 0.07%)</title><rect x="302.7" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.7" y="606.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="302.7" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.7" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="302.7" y="563.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="305.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (2 samples, 0.14%)</title><rect x="303.5" y="627.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (2 samples, 0.14%)</title><rect x="303.5" y="611.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (2 samples, 0.14%)</title><rect x="303.5" y="595.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.07%)</title><rect x="305.2" y="627.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$622/1830881346.mergeResponse (2 samples, 0.14%)</title><rect x="306.1" y="659.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="309.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$3 (2 samples, 0.14%)</title><rect x="306.1" y="643.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergeGetResponseBuilders (2 samples, 0.14%)</title><rect x="306.1" y="627.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.hasNext (1 samples, 0.07%)</title><rect x="306.1" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getStatus (1 samples, 0.07%)</title><rect x="306.9" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="306.9" y="595.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.07%)</title><rect x="307.8" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="307.8" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.07%)</title><rect x="307.8" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.07%)</title><rect x="307.8" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.07%)</title><rect x="307.8" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.07%)</title><rect x="307.8" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (7 samples, 0.50%)</title><rect x="308.6" y="739.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.50%)</title><rect x="308.6" y="723.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.50%)</title><rect x="308.6" y="707.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.50%)</title><rect x="308.6" y="691.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.6" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="310.3" y="675.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="313.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.07%)</title><rect x="311.2" y="675.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.07%)</title><rect x="312.0" y="675.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.run (2 samples, 0.14%)</title><rect x="312.9" y="675.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (341 samples, 24.59%)</title><rect x="314.6" y="739.0" width="290.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.6" y="750.0">java/util/concurrent/ThreadPoolExecutor..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.07%)</title><rect x="324.8" y="723.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.poll (10 samples, 0.72%)</title><rect x="325.6" y="723.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (10 samples, 0.72%)</title><rect x="325.6" y="707.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (10 samples, 0.72%)</title><rect x="325.6" y="691.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (10 samples, 0.72%)</title><rect x="325.6" y="675.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (10 samples, 0.72%)</title><rect x="325.6" y="659.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (10 samples, 0.72%)</title><rect x="325.6" y="643.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (10 samples, 0.72%)</title><rect x="325.6" y="627.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (10 samples, 0.72%)</title><rect x="325.6" y="611.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.6" y="622.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.22%)</title><rect x="326.5" y="595.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="329.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.43%)</title><rect x="329.0" y="595.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (196 samples, 14.13%)</title><rect x="334.1" y="723.0" width="166.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.1" y="734.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (162 samples, 11.68%)</title><rect x="335.8" y="707.0" width="137.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.8" y="718.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (16 samples, 1.15%)</title><rect x="338.4" y="691.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.4" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="340.9" y="675.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="343.9" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="340.9" y="659.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="343.9" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="340.9" y="643.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="343.9" y="654.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="340.9" y="627.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="343.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (12 samples, 0.87%)</title><rect x="341.8" y="675.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (6 samples, 0.43%)</title><rect x="345.2" y="659.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (3 samples, 0.22%)</title><rect x="346.9" y="643.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.07%)</title><rect x="349.5" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.14%)</title><rect x="350.3" y="659.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.07%)</title><rect x="350.3" y="643.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="351.2" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (30 samples, 2.16%)</title><rect x="352.0" y="691.0" width="25.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.0" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (5 samples, 0.36%)</title><rect x="352.0" y="675.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (25 samples, 1.80%)</title><rect x="356.3" y="675.0" width="21.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.3" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 1.59%)</title><rect x="358.8" y="659.0" width="18.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 1.37%)</title><rect x="361.4" y="643.0" width="16.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 1.37%)</title><rect x="361.4" y="627.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.4" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.14%)</title><rect x="362.2" y="611.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="365.2" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.07%)</title><rect x="363.9" y="611.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="366.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.36%)</title><rect x="364.8" y="611.0" width="4.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="367.8" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.07%)</title><rect x="364.8" y="595.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="367.8" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.14%)</title><rect x="365.6" y="595.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="368.6" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.14%)</title><rect x="367.3" y="595.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="370.3" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.65%)</title><rect x="369.0" y="611.0" width="7.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="372.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="376.7" y="611.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="379.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.14%)</title><rect x="377.5" y="691.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.07%)</title><rect x="378.4" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="381.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (111 samples, 8.00%)</title><rect x="379.2" y="691.0" width="94.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.2" y="702.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (110 samples, 7.93%)</title><rect x="380.1" y="675.0" width="93.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.1" y="686.0">jdk/interna..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="381.8" y="659.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="384.8" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="382.6" y="659.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="385.6" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="384.3" y="659.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="387.3" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (58 samples, 4.18%)</title><rect x="385.2" y="659.0" width="49.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="388.2" y="670.0">Unsaf..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.07%)</title><rect x="389.4" y="643.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="392.4" y="654.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="390.3" y="643.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="393.3" y="654.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.07%)</title><rect x="391.1" y="643.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="394.1" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (26 samples, 1.87%)</title><rect x="392.0" y="643.0" width="22.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="395.0" y="654.0">P..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.07%)</title><rect x="402.2" y="627.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="405.2" y="638.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.50%)</title><rect x="403.0" y="627.0" width="6.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="406.0" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.43%)</title><rect x="409.0" y="627.0" width="5.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="412.0" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.14%)</title><rect x="414.1" y="643.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="417.1" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.07%)</title><rect x="415.8" y="643.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="418.8" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (17 samples, 1.23%)</title><rect x="416.7" y="643.0" width="14.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="419.7" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.29%)</title><rect x="431.1" y="643.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="434.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 3.17%)</title><rect x="434.5" y="659.0" width="37.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="437.5" y="670.0">[un..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (4 samples, 0.29%)</title><rect x="434.5" y="643.0" width="3.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="437.5" y="654.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.22%)</title><rect x="437.9" y="643.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="440.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.07%)</title><rect x="440.5" y="643.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="443.5" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (31 samples, 2.24%)</title><rect x="441.3" y="643.0" width="26.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="444.3" y="654.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.29%)</title><rect x="467.7" y="643.0" width="3.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="470.7" y="654.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.07%)</title><rect x="471.1" y="643.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="474.1" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.14%)</title><rect x="472.0" y="659.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="475.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (14 samples, 1.01%)</title><rect x="473.7" y="707.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (11 samples, 0.79%)</title><rect x="476.2" y="691.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (11 samples, 0.79%)</title><rect x="476.2" y="675.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.43%)</title><rect x="477.1" y="659.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (3 samples, 0.22%)</title><rect x="479.6" y="643.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.22%)</title><rect x="479.6" y="627.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (3 samples, 0.22%)</title><rect x="479.6" y="611.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.6" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (3 samples, 0.22%)</title><rect x="479.6" y="595.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.07%)</title><rect x="481.3" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.29%)</title><rect x="482.2" y="659.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="485.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.29%)</title><rect x="482.2" y="643.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.07%)</title><rect x="482.2" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.22%)</title><rect x="483.0" y="627.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.14%)</title><rect x="483.0" y="611.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="486.0" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.07%)</title><rect x="483.0" y="595.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="486.0" y="606.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.07%)</title><rect x="483.9" y="595.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="486.9" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="484.7" y="611.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="487.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 1.30%)</title><rect x="485.6" y="707.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 1.30%)</title><rect x="485.6" y="691.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="488.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 1.30%)</title><rect x="485.6" y="675.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 1.30%)</title><rect x="485.6" y="659.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 1.30%)</title><rect x="485.6" y="643.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="488.6" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.14%)</title><rect x="485.6" y="627.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="488.6" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="487.3" y="627.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="490.3" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.79%)</title><rect x="488.1" y="627.0" width="9.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="491.1" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="489.8" y="611.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="492.8" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.14%)</title><rect x="490.7" y="611.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="493.7" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.14%)</title><rect x="492.4" y="611.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="495.4" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="494.1" y="611.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="497.1" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="494.9" y="611.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="497.9" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.14%)</title><rect x="495.8" y="611.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="498.8" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.29%)</title><rect x="497.5" y="627.0" width="3.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="500.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (122 samples, 8.80%)</title><rect x="500.9" y="723.0" width="103.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.9" y="734.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (79 samples, 5.70%)</title><rect x="500.9" y="707.0" width="67.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.9" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.58%)</title><rect x="501.7" y="691.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (7 samples, 0.50%)</title><rect x="502.6" y="675.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.07%)</title><rect x="505.1" y="659.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (1 samples, 0.07%)</title><rect x="505.1" y="643.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.22%)</title><rect x="506.0" y="659.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (3 samples, 0.22%)</title><rect x="506.0" y="643.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.14%)</title><rect x="508.5" y="691.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.14%)</title><rect x="508.5" y="675.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="508.5" y="659.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="508.5" y="643.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.14%)</title><rect x="508.5" y="627.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="511.5" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.07%)</title><rect x="508.5" y="611.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="511.5" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="509.4" y="611.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="512.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (19 samples, 1.37%)</title><rect x="510.2" y="691.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.07%)</title><rect x="510.2" y="675.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 1.30%)</title><rect x="511.1" y="675.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 1.23%)</title><rect x="511.9" y="659.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 1.08%)</title><rect x="513.6" y="643.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 1.08%)</title><rect x="513.6" y="627.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.6" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.65%)</title><rect x="513.6" y="611.0" width="7.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="516.6" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="513.6" y="595.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="516.6" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.07%)</title><rect x="514.5" y="595.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="517.5" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="515.3" y="595.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="518.3" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.43%)</title><rect x="516.2" y="595.0" width="5.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="519.2" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.36%)</title><rect x="521.3" y="611.0" width="4.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="524.3" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="525.6" y="611.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="528.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (6 samples, 0.43%)</title><rect x="526.4" y="691.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (6 samples, 0.43%)</title><rect x="526.4" y="675.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (43 samples, 3.10%)</title><rect x="531.5" y="691.0" width="36.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.5" y="702.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (43 samples, 3.10%)</title><rect x="531.5" y="675.0" width="36.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.5" y="686.0">jdk..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.07%)</title><rect x="532.4" y="659.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="535.4" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (24 samples, 1.73%)</title><rect x="533.2" y="659.0" width="20.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="536.2" y="670.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="534.9" y="643.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="537.9" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.79%)</title><rect x="535.8" y="643.0" width="9.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="538.8" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.14%)</title><rect x="540.9" y="627.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="543.9" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.07%)</title><rect x="541.7" y="611.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="544.7" y="622.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.07%)</title><rect x="542.6" y="627.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="545.6" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.14%)</title><rect x="543.4" y="627.0" width="1.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="546.4" y="638.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="545.1" y="643.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="548.1" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (8 samples, 0.58%)</title><rect x="546.0" y="643.0" width="6.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="549.0" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="552.8" y="643.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="555.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.23%)</title><rect x="553.6" y="659.0" width="14.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="556.6" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.14%)</title><rect x="553.6" y="643.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="556.6" y="654.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.22%)</title><rect x="555.3" y="643.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="558.3" y="654.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.07%)</title><rect x="557.9" y="643.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="560.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.50%)</title><rect x="558.7" y="643.0" width="6.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="561.7" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.22%)</title><rect x="564.7" y="643.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="567.7" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.07%)</title><rect x="567.2" y="643.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="570.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (23 samples, 1.66%)</title><rect x="568.1" y="707.0" width="19.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (23 samples, 1.66%)</title><rect x="568.1" y="691.0" width="19.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.1" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.29%)</title><rect x="568.1" y="675.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (17 samples, 1.23%)</title><rect x="571.5" y="675.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (9 samples, 0.65%)</title><rect x="572.4" y="659.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.07%)</title><rect x="575.8" y="643.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.07%)</title><rect x="575.8" y="627.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (3 samples, 0.22%)</title><rect x="576.6" y="643.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="579.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.22%)</title><rect x="576.6" y="627.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="579.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (3 samples, 0.22%)</title><rect x="576.6" y="611.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="579.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.07%)</title><rect x="579.2" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.07%)</title><rect x="579.2" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.29%)</title><rect x="580.0" y="659.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.29%)</title><rect x="580.0" y="643.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.29%)</title><rect x="580.0" y="627.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.0" y="638.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.14%)</title><rect x="580.0" y="611.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="583.0" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.14%)</title><rect x="580.0" y="595.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="583.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.14%)</title><rect x="581.7" y="611.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="584.7" y="622.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="581.7" y="595.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="584.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.07%)</title><rect x="582.6" y="595.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="585.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.07%)</title><rect x="583.4" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.14%)</title><rect x="584.3" y="659.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.14%)</title><rect x="584.3" y="643.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.14%)</title><rect x="586.0" y="675.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.14%)</title><rect x="586.0" y="659.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.07%)</title><rect x="586.8" y="643.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 1.44%)</title><rect x="587.7" y="707.0" width="17.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 1.44%)</title><rect x="587.7" y="691.0" width="17.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 1.44%)</title><rect x="587.7" y="675.0" width="17.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 1.44%)</title><rect x="587.7" y="659.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 1.44%)</title><rect x="587.7" y="643.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.7" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.65%)</title><rect x="587.7" y="627.0" width="7.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="590.7" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.14%)</title><rect x="587.7" y="611.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="590.7" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="589.4" y="611.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="592.4" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.14%)</title><rect x="590.2" y="611.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="593.2" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="591.9" y="611.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="594.9" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="592.8" y="611.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="595.8" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.14%)</title><rect x="593.6" y="611.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="596.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="595.3" y="627.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="598.3" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.07%)</title><rect x="595.3" y="611.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="598.3" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.65%)</title><rect x="596.2" y="627.0" width="7.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="599.2" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.07%)</title><rect x="603.8" y="627.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="606.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$407/438359882.run (55 samples, 3.97%)</title><rect x="604.7" y="739.0" width="46.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.7" y="750.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (55 samples, 3.97%)</title><rect x="604.7" y="723.0" width="46.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.7" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (55 samples, 3.97%)</title><rect x="604.7" y="707.0" width="46.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.7" y="718.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (51 samples, 3.68%)</title><rect x="608.1" y="691.0" width="43.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.1" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 3.68%)</title><rect x="608.1" y="675.0" width="43.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.1" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 3.68%)</title><rect x="608.1" y="659.0" width="43.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.1" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (50 samples, 3.60%)</title><rect x="608.9" y="643.0" width="42.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.9" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (49 samples, 3.53%)</title><rect x="609.8" y="627.0" width="41.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.8" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (48 samples, 3.46%)</title><rect x="610.6" y="611.0" width="40.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.6" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (48 samples, 3.46%)</title><rect x="610.6" y="595.0" width="40.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.6" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (48 samples, 3.46%)</title><rect x="610.6" y="579.0" width="40.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.6" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (21 samples, 1.51%)</title><rect x="614.9" y="563.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (14 samples, 1.01%)</title><rect x="618.3" y="547.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.94%)</title><rect x="619.1" y="531.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13 samples, 0.94%)</title><rect x="619.1" y="515.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.94%)</title><rect x="619.1" y="499.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.1" y="510.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="620.0" y="483.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="623.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4 samples, 0.29%)</title><rect x="620.8" y="483.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.07%)</title><rect x="621.7" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.07%)</title><rect x="621.7" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.07%)</title><rect x="621.7" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/725906402.apply (2 samples, 0.14%)</title><rect x="622.5" y="467.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.14%)</title><rect x="622.5" y="451.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.14%)</title><rect x="622.5" y="435.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.14%)</title><rect x="622.5" y="419.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.14%)</title><rect x="622.5" y="403.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.14%)</title><rect x="622.5" y="387.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5 samples, 0.36%)</title><rect x="624.2" y="483.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.07%)</title><rect x="624.2" y="467.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.29%)</title><rect x="625.1" y="467.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.07%)</title><rect x="625.1" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.07%)</title><rect x="625.1" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$383/847257842.apply (3 samples, 0.22%)</title><rect x="625.9" y="451.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3 samples, 0.22%)</title><rect x="625.9" y="435.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.22%)</title><rect x="625.9" y="419.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$229/148200039.apply (1 samples, 0.07%)</title><rect x="625.9" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.07%)</title><rect x="625.9" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.07%)</title><rect x="625.9" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.07%)</title><rect x="625.9" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.07%)</title><rect x="625.9" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.apply (2 samples, 0.14%)</title><rect x="626.8" y="403.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2 samples, 0.14%)</title><rect x="626.8" y="387.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.14%)</title><rect x="626.8" y="371.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.14%)</title><rect x="626.8" y="355.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.07%)</title><rect x="626.8" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.07%)</title><rect x="627.6" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$383/847257842.apply (1 samples, 0.07%)</title><rect x="627.6" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.07%)</title><rect x="627.6" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.07%)</title><rect x="627.6" y="291.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.apply (1 samples, 0.07%)</title><rect x="627.6" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.07%)</title><rect x="627.6" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.07%)</title><rect x="627.6" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.07%)</title><rect x="627.6" y="227.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.07%)</title><rect x="627.6" y="211.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.07%)</title><rect x="627.6" y="195.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$412/1107824211.get (1 samples, 0.07%)</title><rect x="628.5" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$442/1751367345.get (1 samples, 0.07%)</title><rect x="629.4" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.22%)</title><rect x="630.2" y="547.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (2 samples, 0.14%)</title><rect x="631.1" y="531.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (2 samples, 0.14%)</title><rect x="631.1" y="515.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.07%)</title><rect x="631.9" y="499.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (3 samples, 0.22%)</title><rect x="632.8" y="563.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.22%)</title><rect x="632.8" y="547.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.22%)</title><rect x="632.8" y="531.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.07%)</title><rect x="635.3" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (18 samples, 1.30%)</title><rect x="636.2" y="563.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (18 samples, 1.30%)</title><rect x="636.2" y="547.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (18 samples, 1.30%)</title><rect x="636.2" y="531.0" width="15.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (16 samples, 1.15%)</title><rect x="637.9" y="515.0" width="13.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$437/1879671514.run (1 samples, 0.07%)</title><rect x="637.9" y="499.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1 samples, 0.07%)</title><rect x="637.9" y="483.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.07%)</title><rect x="637.9" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (15 samples, 1.08%)</title><rect x="638.7" y="499.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="641.7" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (14 samples, 1.01%)</title><rect x="638.7" y="483.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (14 samples, 1.01%)</title><rect x="638.7" y="467.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="640.4" y="451.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="640.4" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (11 samples, 0.79%)</title><rect x="641.3" y="451.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (10 samples, 0.72%)</title><rect x="642.1" y="435.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.1" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.14%)</title><rect x="642.1" y="419.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.1" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.14%)</title><rect x="642.1" y="403.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (2 samples, 0.14%)</title><rect x="642.1" y="387.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (8 samples, 0.58%)</title><rect x="643.8" y="419.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.8" y="430.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.14%)</title><rect x="644.7" y="403.0" width="1.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="647.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (5 samples, 0.36%)</title><rect x="646.4" y="403.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.4" y="414.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.07%)</title><rect x="647.2" y="387.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="650.2" y="398.0"></text>
</g>
<g>
<title>writev (3 samples, 0.22%)</title><rect x="648.1" y="387.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="651.1" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.07%)</title><rect x="650.6" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (227 samples, 16.37%)</title><rect x="651.5" y="739.0" width="193.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.5" y="750.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (227 samples, 16.37%)</title><rect x="651.5" y="723.0" width="193.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.5" y="734.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (118 samples, 8.51%)</title><rect x="651.5" y="707.0" width="100.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.5" y="718.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (118 samples, 8.51%)</title><rect x="651.5" y="691.0" width="100.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.5" y="702.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (116 samples, 8.36%)</title><rect x="653.2" y="675.0" width="98.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.2" y="686.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (2 samples, 0.14%)</title><rect x="653.2" y="659.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.07%)</title><rect x="654.0" y="643.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.07%)</title><rect x="654.0" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (10 samples, 0.72%)</title><rect x="654.9" y="659.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (10 samples, 0.72%)</title><rect x="654.9" y="643.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (10 samples, 0.72%)</title><rect x="654.9" y="627.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (10 samples, 0.72%)</title><rect x="654.9" y="611.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (10 samples, 0.72%)</title><rect x="654.9" y="595.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.07%)</title><rect x="654.9" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.07%)</title><rect x="654.9" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$408/1005179682.get$Lambda (1 samples, 0.07%)</title><rect x="654.9" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.9" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="654.9" y="531.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="657.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (9 samples, 0.65%)</title><rect x="655.7" y="579.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8 samples, 0.58%)</title><rect x="656.6" y="563.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.50%)</title><rect x="657.4" y="547.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.4" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="658.3" y="531.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="661.3" y="542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.07%)</title><rect x="658.3" y="515.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="661.3" y="526.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.07%)</title><rect x="658.3" y="499.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="661.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.36%)</title><rect x="659.1" y="531.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.1" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.14%)</title><rect x="660.8" y="515.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="663.8" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.14%)</title><rect x="660.8" y="499.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="663.8" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.14%)</title><rect x="660.8" y="483.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="663.8" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.07%)</title><rect x="660.8" y="467.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="663.8" y="478.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="661.7" y="467.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="664.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="662.5" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="662.5" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.07%)</title><rect x="663.4" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (103 samples, 7.43%)</title><rect x="664.2" y="659.0" width="87.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.2" y="670.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (103 samples, 7.43%)</title><rect x="664.2" y="643.0" width="87.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.2" y="654.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (1 samples, 0.07%)</title><rect x="664.2" y="627.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (102 samples, 7.35%)</title><rect x="665.1" y="627.0" width="86.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.1" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (102 samples, 7.35%)</title><rect x="665.1" y="611.0" width="86.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="622.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (57 samples, 4.11%)</title><rect x="665.1" y="595.0" width="48.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.1" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.07%)</title><rect x="665.1" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.07%)</title><rect x="665.1" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.07%)</title><rect x="665.1" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (56 samples, 4.04%)</title><rect x="665.9" y="579.0" width="47.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.9" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (56 samples, 4.04%)</title><rect x="665.9" y="563.0" width="47.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.9" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (54 samples, 3.89%)</title><rect x="666.8" y="547.0" width="45.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.8" y="558.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (54 samples, 3.89%)</title><rect x="666.8" y="531.0" width="45.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.8" y="542.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (54 samples, 3.89%)</title><rect x="666.8" y="515.0" width="45.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.8" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (53 samples, 3.82%)</title><rect x="666.8" y="499.0" width="45.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.8" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (48 samples, 3.46%)</title><rect x="666.8" y="483.0" width="40.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.8" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 3.46%)</title><rect x="666.8" y="467.0" width="40.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.8" y="478.0">jav..</text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="666.8" y="451.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="669.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (39 samples, 2.81%)</title><rect x="667.6" y="451.0" width="33.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.6" y="462.0">ja..</text>
</g>
<g>
<title>itable stub (3 samples, 0.22%)</title><rect x="669.3" y="435.0" width="2.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="672.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.07%)</title><rect x="671.9" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.07%)</title><rect x="671.9" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="674.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.07%)</title><rect x="672.7" y="435.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.07%)</title><rect x="672.7" y="419.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.07%)</title><rect x="672.7" y="403.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="675.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$209/1479888648.apply (27 samples, 1.95%)</title><rect x="673.6" y="435.0" width="23.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.6" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (26 samples, 1.87%)</title><rect x="674.4" y="419.0" width="22.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.4" y="430.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.07%)</title><rect x="675.3" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.07%)</title><rect x="675.3" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$513/1932888160.get$Lambda (1 samples, 0.07%)</title><rect x="675.3" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (24 samples, 1.73%)</title><rect x="676.1" y="403.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.07%)</title><rect x="676.1" y="387.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.07%)</title><rect x="676.1" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.07%)</title><rect x="676.1" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (23 samples, 1.66%)</title><rect x="677.0" y="387.0" width="19.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (17 samples, 1.23%)</title><rect x="677.0" y="371.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2 samples, 0.14%)</title><rect x="677.0" y="355.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.14%)</title><rect x="677.0" y="339.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.14%)</title><rect x="677.0" y="323.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.14%)</title><rect x="677.0" y="307.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.07%)</title><rect x="677.0" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.07%)</title><rect x="677.0" y="275.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.0" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.07%)</title><rect x="677.0" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.0" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (1 samples, 0.07%)</title><rect x="677.0" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1820383114.get (1 samples, 0.07%)</title><rect x="677.8" y="291.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.&lt;init&gt; (1 samples, 0.07%)</title><rect x="677.8" y="275.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.94%)</title><rect x="678.7" y="355.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$465/1751998761.run (13 samples, 0.94%)</title><rect x="678.7" y="339.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (13 samples, 0.94%)</title><rect x="678.7" y="323.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.36%)</title><rect x="678.7" y="307.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.36%)</title><rect x="678.7" y="291.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.36%)</title><rect x="678.7" y="275.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (1 samples, 0.07%)</title><rect x="682.9" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (7 samples, 0.50%)</title><rect x="683.8" y="307.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (7 samples, 0.50%)</title><rect x="683.8" y="291.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.8" y="302.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (5 samples, 0.36%)</title><rect x="683.8" y="275.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.8" y="286.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (5 samples, 0.36%)</title><rect x="683.8" y="259.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.8" y="270.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (5 samples, 0.36%)</title><rect x="683.8" y="243.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.8" y="254.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.22%)</title><rect x="684.7" y="227.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="687.7" y="238.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.07%)</title><rect x="684.7" y="211.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="687.7" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.14%)</title><rect x="685.5" y="211.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="688.5" y="222.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="686.4" y="195.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="689.4" y="206.0"></text>
</g>
<g>
<title>JVM_IHashCode@plt (1 samples, 0.07%)</title><rect x="687.2" y="227.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="690.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.14%)</title><rect x="688.1" y="275.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.14%)</title><rect x="688.1" y="259.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (2 samples, 0.14%)</title><rect x="689.8" y="355.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.14%)</title><rect x="689.8" y="339.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.14%)</title><rect x="689.8" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.14%)</title><rect x="689.8" y="307.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (1 samples, 0.07%)</title><rect x="689.8" y="291.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.07%)</title><rect x="689.8" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.07%)</title><rect x="690.6" y="291.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.07%)</title><rect x="690.6" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler.apply (6 samples, 0.43%)</title><rect x="691.5" y="371.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.36%)</title><rect x="691.5" y="355.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.22%)</title><rect x="691.5" y="339.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.5" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.22%)</title><rect x="691.5" y="323.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.22%)</title><rect x="691.5" y="307.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.22%)</title><rect x="691.5" y="291.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.22%)</title><rect x="691.5" y="275.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.22%)</title><rect x="691.5" y="259.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.14%)</title><rect x="692.3" y="243.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.07%)</title><rect x="693.2" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.07%)</title><rect x="693.2" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.14%)</title><rect x="694.0" y="339.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.14%)</title><rect x="694.0" y="323.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.14%)</title><rect x="694.0" y="307.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.14%)</title><rect x="694.0" y="291.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.07%)</title><rect x="694.9" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.9" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.07%)</title><rect x="694.9" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.9" y="270.0"></text>
</g>
<g>
<title>java/util/Optional.isPresent (1 samples, 0.07%)</title><rect x="695.7" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.07%)</title><rect x="695.7" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$384/1609426679.apply (5 samples, 0.36%)</title><rect x="696.6" y="435.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (5 samples, 0.36%)</title><rect x="696.6" y="419.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (5 samples, 0.36%)</title><rect x="696.6" y="403.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (5 samples, 0.36%)</title><rect x="696.6" y="387.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (4 samples, 0.29%)</title><rect x="697.4" y="371.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.4" y="382.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.22%)</title><rect x="698.3" y="355.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.3" y="366.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.07%)</title><rect x="698.3" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.3" y="350.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.14%)</title><rect x="699.1" y="339.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="702.1" y="350.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.07%)</title><rect x="700.0" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.0" y="334.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.07%)</title><rect x="700.0" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.07%)</title><rect x="700.0" y="291.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.43%)</title><rect x="700.8" y="451.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.43%)</title><rect x="700.8" y="435.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$385/1826212424.apply (6 samples, 0.43%)</title><rect x="700.8" y="419.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="703.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (6 samples, 0.43%)</title><rect x="700.8" y="403.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (4 samples, 0.29%)</title><rect x="700.8" y="387.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (4 samples, 0.29%)</title><rect x="700.8" y="371.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.07%)</title><rect x="700.8" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (3 samples, 0.22%)</title><rect x="701.7" y="355.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (2 samples, 0.14%)</title><rect x="702.5" y="339.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (2 samples, 0.14%)</title><rect x="702.5" y="323.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (2 samples, 0.14%)</title><rect x="702.5" y="307.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.14%)</title><rect x="704.2" y="387.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.07%)</title><rect x="705.9" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.07%)</title><rect x="705.9" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.07%)</title><rect x="705.9" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.07%)</title><rect x="705.9" y="403.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$445/279938722.apply (1 samples, 0.07%)</title><rect x="706.8" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$445/279938722.apply (5 samples, 0.36%)</title><rect x="707.6" y="483.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (5 samples, 0.36%)</title><rect x="707.6" y="467.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (5 samples, 0.36%)</title><rect x="707.6" y="451.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.14%)</title><rect x="707.6" y="435.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.14%)</title><rect x="707.6" y="419.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.14%)</title><rect x="707.6" y="403.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.22%)</title><rect x="709.3" y="435.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (3 samples, 0.22%)</title><rect x="709.3" y="419.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureOpen (1 samples, 0.07%)</title><rect x="711.0" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.0" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.07%)</title><rect x="711.0" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.07%)</title><rect x="711.9" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.07%)</title><rect x="711.9" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.07%)</title><rect x="711.9" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.07%)</title><rect x="712.7" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (42 samples, 3.03%)</title><rect x="713.6" y="595.0" width="35.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.6" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (3 samples, 0.22%)</title><rect x="716.1" y="579.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="716.1" y="563.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="716.1" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.1" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="716.1" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.14%)</title><rect x="717.0" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.07%)</title><rect x="717.8" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (7 samples, 0.50%)</title><rect x="718.7" y="579.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.43%)</title><rect x="719.5" y="563.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.43%)</title><rect x="719.5" y="547.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.5" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.14%)</title><rect x="722.9" y="531.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.14%)</title><rect x="722.9" y="515.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.9" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.14%)</title><rect x="722.9" y="499.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="725.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (4 samples, 0.29%)</title><rect x="724.6" y="579.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.22%)</title><rect x="724.6" y="563.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.22%)</title><rect x="724.6" y="547.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.22%)</title><rect x="724.6" y="531.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.07%)</title><rect x="727.2" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.2" y="574.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="727.2" y="547.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="730.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (12 samples, 0.87%)</title><rect x="728.0" y="579.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.0" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.72%)</title><rect x="729.7" y="563.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.72%)</title><rect x="729.7" y="547.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.7" y="558.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="729.7" y="531.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="732.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (8 samples, 0.58%)</title><rect x="731.4" y="531.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (7 samples, 0.50%)</title><rect x="732.3" y="515.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.50%)</title><rect x="732.3" y="499.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.14%)</title><rect x="732.3" y="483.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.36%)</title><rect x="734.0" y="483.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="734.8" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="734.8" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.07%)</title><rect x="734.8" y="435.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.8" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.22%)</title><rect x="735.7" y="467.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (1 samples, 0.07%)</title><rect x="738.2" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (12 samples, 0.87%)</title><rect x="739.1" y="579.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (12 samples, 0.87%)</title><rect x="739.1" y="563.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.14%)</title><rect x="739.1" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.14%)</title><rect x="739.1" y="531.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="742.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.14%)</title><rect x="739.1" y="515.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (6 samples, 0.43%)</title><rect x="740.8" y="547.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.29%)</title><rect x="742.5" y="531.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.07%)</title><rect x="745.9" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="746.8" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="746.8" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="746.8" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="746.8" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="746.8" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.07%)</title><rect x="746.8" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.8" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.14%)</title><rect x="747.6" y="547.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="747.6" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.07%)</title><rect x="748.5" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$341/983326260.accept (3 samples, 0.22%)</title><rect x="749.3" y="595.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (3 samples, 0.22%)</title><rect x="749.3" y="579.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.07%)</title><rect x="751.0" y="563.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (109 samples, 7.86%)</title><rect x="751.9" y="707.0" width="92.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.9" y="718.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (108 samples, 7.79%)</title><rect x="752.7" y="691.0" width="91.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.7" y="702.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (107 samples, 7.71%)</title><rect x="753.6" y="675.0" width="91.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.6" y="686.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (107 samples, 7.71%)</title><rect x="753.6" y="659.0" width="91.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.6" y="670.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (104 samples, 7.50%)</title><rect x="755.3" y="643.0" width="88.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.3" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.36%)</title><rect x="755.3" y="627.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3 samples, 0.22%)</title><rect x="756.1" y="611.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="759.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3 samples, 0.22%)</title><rect x="756.1" y="595.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.14%)</title><rect x="756.1" y="579.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.14%)</title><rect x="756.1" y="563.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.1" y="574.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="756.1" y="547.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="759.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onSubscribe (1 samples, 0.07%)</title><rect x="757.0" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.07%)</title><rect x="757.8" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.07%)</title><rect x="758.7" y="611.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (94 samples, 6.78%)</title><rect x="759.5" y="627.0" width="80.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.5" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (94 samples, 6.78%)</title><rect x="759.5" y="611.0" width="80.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.5" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (94 samples, 6.78%)</title><rect x="759.5" y="595.0" width="80.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.5" y="606.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (94 samples, 6.78%)</title><rect x="759.5" y="579.0" width="80.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.5" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (93 samples, 6.71%)</title><rect x="760.4" y="563.0" width="79.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.4" y="574.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (90 samples, 6.49%)</title><rect x="762.9" y="547.0" width="76.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.9" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1005240389.run (52 samples, 3.75%)</title><rect x="762.9" y="531.0" width="44.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.9" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (52 samples, 3.75%)</title><rect x="762.9" y="515.0" width="44.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.9" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (52 samples, 3.75%)</title><rect x="762.9" y="499.0" width="44.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.9" y="510.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.29%)</title><rect x="762.9" y="483.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.22%)</title><rect x="762.9" y="467.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.9" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.22%)</title><rect x="762.9" y="451.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.22%)</title><rect x="762.9" y="435.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.9" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.22%)</title><rect x="762.9" y="419.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.9" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.22%)</title><rect x="762.9" y="403.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="764.6" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="764.6" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.07%)</title><rect x="764.6" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.07%)</title><rect x="765.5" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.07%)</title><rect x="765.5" y="451.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.07%)</title><rect x="765.5" y="435.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.5" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (1 samples, 0.07%)</title><rect x="765.5" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (47 samples, 3.39%)</title><rect x="766.3" y="483.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.3" y="494.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.07%)</title><rect x="766.3" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.3" y="478.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.07%)</title><rect x="766.3" y="451.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.07%)</title><rect x="766.3" y="435.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.3" y="446.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.07%)</title><rect x="766.3" y="419.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="769.3" y="430.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.07%)</title><rect x="766.3" y="403.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="769.3" y="414.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="766.3" y="387.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="769.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (46 samples, 3.32%)</title><rect x="767.2" y="467.0" width="39.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.2" y="478.0">jdk..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="770.6" y="451.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="773.6" y="462.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.07%)</title><rect x="770.6" y="435.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="773.6" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="770.6" y="419.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="773.6" y="430.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="770.6" y="403.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="773.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (12 samples, 0.87%)</title><rect x="771.4" y="451.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.4" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.36%)</title><rect x="773.1" y="435.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.1" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (5 samples, 0.36%)</title><rect x="773.1" y="419.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.1" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.36%)</title><rect x="773.1" y="403.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.1" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.07%)</title><rect x="776.5" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.5" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.07%)</title><rect x="776.5" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.5" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (1 samples, 0.07%)</title><rect x="777.4" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.4" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.07%)</title><rect x="777.4" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.4" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.07%)</title><rect x="777.4" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.4" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.07%)</title><rect x="777.4" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.07%)</title><rect x="777.4" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.4" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.07%)</title><rect x="778.2" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.2" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (1 samples, 0.07%)</title><rect x="778.2" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.2" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.14%)</title><rect x="779.1" y="435.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryEntry.&lt;init&gt; (1 samples, 0.07%)</title><rect x="780.8" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (4 samples, 0.29%)</title><rect x="781.6" y="451.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.6" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.29%)</title><rect x="781.6" y="435.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.6" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.29%)</title><rect x="781.6" y="419.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="784.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.07%)</title><rect x="784.2" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.2" y="414.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.07%)</title><rect x="784.2" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.2" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.07%)</title><rect x="784.2" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.07%)</title><rect x="784.2" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (24 samples, 1.73%)</title><rect x="785.0" y="451.0" width="20.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (24 samples, 1.73%)</title><rect x="785.0" y="435.0" width="20.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (7 samples, 0.50%)</title><rect x="785.0" y="419.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (7 samples, 0.50%)</title><rect x="785.0" y="403.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.50%)</title><rect x="785.0" y="387.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.50%)</title><rect x="785.0" y="371.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.50%)</title><rect x="785.0" y="355.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.0" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="785.0" y="339.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="788.0" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.07%)</title><rect x="785.0" y="323.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="788.0" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="785.0" y="307.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="788.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.43%)</title><rect x="785.9" y="339.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.14%)</title><rect x="791.0" y="419.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.14%)</title><rect x="791.0" y="403.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.14%)</title><rect x="791.0" y="387.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.14%)</title><rect x="791.0" y="371.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.reset (2 samples, 0.14%)</title><rect x="791.0" y="355.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.0" y="366.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.07%)</title><rect x="791.0" y="339.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="794.0" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="791.8" y="339.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="794.8" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="791.8" y="323.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="794.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (15 samples, 1.08%)</title><rect x="792.7" y="419.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (15 samples, 1.08%)</title><rect x="792.7" y="403.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (15 samples, 1.08%)</title><rect x="792.7" y="387.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (13 samples, 0.94%)</title><rect x="792.7" y="371.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13 samples, 0.94%)</title><rect x="792.7" y="355.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.7" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.50%)</title><rect x="792.7" y="339.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="795.7" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.50%)</title><rect x="792.7" y="323.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="795.7" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.50%)</title><rect x="792.7" y="307.0" width="6.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="795.7" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.14%)</title><rect x="792.7" y="291.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="795.7" y="302.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.36%)</title><rect x="794.4" y="291.0" width="4.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="797.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.43%)</title><rect x="798.7" y="339.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.7" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="802.1" y="323.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="805.1" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.07%)</title><rect x="802.1" y="307.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="805.1" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="802.1" y="291.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="805.1" y="302.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="802.1" y="275.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="805.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.07%)</title><rect x="802.9" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.9" y="334.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.07%)</title><rect x="802.9" y="307.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="805.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (2 samples, 0.14%)</title><rect x="803.8" y="371.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.8" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="804.6" y="355.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="807.6" y="366.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.07%)</title><rect x="804.6" y="339.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="807.6" y="350.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.07%)</title><rect x="804.6" y="323.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="807.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.07%)</title><rect x="805.5" y="451.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.07%)</title><rect x="806.3" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.07%)</title><rect x="806.3" y="467.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$481/548427899.accept (3 samples, 0.22%)</title><rect x="807.2" y="531.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (3 samples, 0.22%)</title><rect x="807.2" y="515.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (3 samples, 0.22%)</title><rect x="807.2" y="499.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.14%)</title><rect x="807.2" y="483.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.14%)</title><rect x="807.2" y="467.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.07%)</title><rect x="808.0" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.07%)</title><rect x="808.0" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$492/150982051.accept (1 samples, 0.07%)</title><rect x="808.0" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.07%)</title><rect x="808.0" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.07%)</title><rect x="808.0" y="387.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.07%)</title><rect x="808.0" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.07%)</title><rect x="808.0" y="355.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$343/1244648923.accept (1 samples, 0.07%)</title><rect x="808.9" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.07%)</title><rect x="808.9" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.07%)</title><rect x="808.9" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (29 samples, 2.09%)</title><rect x="809.7" y="531.0" width="24.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.7" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (29 samples, 2.09%)</title><rect x="809.7" y="515.0" width="24.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.7" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (28 samples, 2.02%)</title><rect x="810.6" y="499.0" width="23.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.6" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (28 samples, 2.02%)</title><rect x="810.6" y="483.0" width="23.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.6" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (26 samples, 1.87%)</title><rect x="810.6" y="467.0" width="22.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.6" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (26 samples, 1.87%)</title><rect x="810.6" y="451.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.22%)</title><rect x="810.6" y="435.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (3 samples, 0.22%)</title><rect x="810.6" y="419.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.22%)</title><rect x="810.6" y="403.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.22%)</title><rect x="810.6" y="387.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler$$Lambda$674/1044820419.apply (3 samples, 0.22%)</title><rect x="810.6" y="371.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (23 samples, 1.66%)</title><rect x="813.1" y="435.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 1.66%)</title><rect x="813.1" y="419.0" width="19.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.22%)</title><rect x="813.1" y="403.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.22%)</title><rect x="813.1" y="387.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$501/514946210.accept (3 samples, 0.22%)</title><rect x="813.1" y="371.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$501/514946210.accept (20 samples, 1.44%)</title><rect x="815.7" y="403.0" width="17.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (20 samples, 1.44%)</title><rect x="815.7" y="387.0" width="17.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (20 samples, 1.44%)</title><rect x="815.7" y="371.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (20 samples, 1.44%)</title><rect x="815.7" y="355.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (20 samples, 1.44%)</title><rect x="815.7" y="339.0" width="17.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (20 samples, 1.44%)</title><rect x="815.7" y="323.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (19 samples, 1.37%)</title><rect x="815.7" y="307.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (17 samples, 1.23%)</title><rect x="815.7" y="291.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (17 samples, 1.23%)</title><rect x="815.7" y="275.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (17 samples, 1.23%)</title><rect x="815.7" y="259.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (1 samples, 0.07%)</title><rect x="815.7" y="243.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (16 samples, 1.15%)</title><rect x="816.5" y="243.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 1.15%)</title><rect x="816.5" y="227.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 1.15%)</title><rect x="816.5" y="211.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.5" y="222.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.07%)</title><rect x="816.5" y="195.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="819.5" y="206.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.43%)</title><rect x="817.4" y="195.0" width="5.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="820.4" y="206.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.22%)</title><rect x="817.4" y="179.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="820.4" y="190.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="819.9" y="179.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="822.9" y="190.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.07%)</title><rect x="820.8" y="179.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="823.8" y="190.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="821.6" y="179.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="824.6" y="190.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.50%)</title><rect x="822.5" y="195.0" width="5.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="825.5" y="206.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.14%)</title><rect x="828.4" y="195.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="831.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.14%)</title><rect x="830.1" y="291.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$505/20416744.accept (2 samples, 0.14%)</title><rect x="830.1" y="275.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$509/775755575.accept (1 samples, 0.07%)</title><rect x="831.8" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="834.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (1 samples, 0.07%)</title><rect x="831.8" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (2 samples, 0.14%)</title><rect x="832.7" y="467.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (2 samples, 0.14%)</title><rect x="832.7" y="451.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.07%)</title><rect x="832.7" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.7" y="446.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="833.5" y="435.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="836.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (1 samples, 0.07%)</title><rect x="834.4" y="531.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (1 samples, 0.07%)</title><rect x="834.4" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (1 samples, 0.07%)</title><rect x="834.4" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (1 samples, 0.07%)</title><rect x="834.4" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.07%)</title><rect x="835.2" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.07%)</title><rect x="835.2" y="515.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.07%)</title><rect x="835.2" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.07%)</title><rect x="835.2" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (4 samples, 0.29%)</title><rect x="836.1" y="531.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (2 samples, 0.14%)</title><rect x="836.1" y="515.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.14%)</title><rect x="836.1" y="499.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="836.1" y="483.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="836.1" y="467.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.1" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="836.1" y="451.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="836.1" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="836.1" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.1" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.07%)</title><rect x="836.1" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1005240389.run (1 samples, 0.07%)</title><rect x="836.1" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="836.9" y="435.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="836.9" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.9" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="836.9" y="403.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (2 samples, 0.14%)</title><rect x="837.8" y="515.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5 samples, 0.36%)</title><rect x="839.5" y="627.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5 samples, 0.36%)</title><rect x="839.5" y="611.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5 samples, 0.36%)</title><rect x="839.5" y="595.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5 samples, 0.36%)</title><rect x="839.5" y="579.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.14%)</title><rect x="840.3" y="563.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.14%)</title><rect x="840.3" y="547.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.07%)</title><rect x="841.2" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.07%)</title><rect x="841.2" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.07%)</title><rect x="841.2" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="844.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.07%)</title><rect x="841.2" y="483.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.07%)</title><rect x="841.2" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$445/279938722.apply (1 samples, 0.07%)</title><rect x="841.2" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.07%)</title><rect x="841.2" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.07%)</title><rect x="841.2" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="844.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.07%)</title><rect x="842.0" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1 samples, 0.07%)</title><rect x="842.0" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.07%)</title><rect x="842.0" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.07%)</title><rect x="842.0" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1 samples, 0.07%)</title><rect x="842.0" y="499.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.07%)</title><rect x="842.9" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.07%)</title><rect x="843.7" y="643.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.run (122 samples, 8.80%)</title><rect x="844.6" y="739.0" width="103.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.6" y="750.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (122 samples, 8.80%)</title><rect x="844.6" y="723.0" width="103.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.6" y="734.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.14%)</title><rect x="844.6" y="707.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.14%)</title><rect x="844.6" y="691.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.14%)</title><rect x="844.6" y="675.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (14 samples, 1.01%)</title><rect x="846.3" y="707.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (14 samples, 1.01%)</title><rect x="846.3" y="691.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="849.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (2 samples, 0.14%)</title><rect x="846.3" y="675.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.14%)</title><rect x="846.3" y="659.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.14%)</title><rect x="846.3" y="643.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.14%)</title><rect x="846.3" y="627.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (12 samples, 0.87%)</title><rect x="848.0" y="675.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (12 samples, 0.87%)</title><rect x="848.0" y="659.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (12 samples, 0.87%)</title><rect x="848.0" y="643.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.87%)</title><rect x="848.0" y="627.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.0" y="638.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="848.0" y="611.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="851.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (11 samples, 0.79%)</title><rect x="848.8" y="611.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="848.8" y="595.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="848.8" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="848.8" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="848.8" y="547.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.14%)</title><rect x="849.7" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="852.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.14%)</title><rect x="849.7" y="579.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.14%)</title><rect x="849.7" y="563.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.14%)</title><rect x="849.7" y="547.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.14%)</title><rect x="849.7" y="531.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.14%)</title><rect x="849.7" y="515.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.7" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.07%)</title><rect x="849.7" y="499.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="852.7" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.07%)</title><rect x="849.7" y="483.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="852.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="850.5" y="499.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="853.5" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.07%)</title><rect x="850.5" y="483.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="853.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.58%)</title><rect x="851.4" y="595.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.58%)</title><rect x="851.4" y="579.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.58%)</title><rect x="851.4" y="563.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.58%)</title><rect x="851.4" y="547.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.58%)</title><rect x="851.4" y="531.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.4" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.29%)</title><rect x="851.4" y="515.0" width="3.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="854.4" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.07%)</title><rect x="851.4" y="499.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="854.4" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.14%)</title><rect x="852.2" y="499.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="855.2" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="854.0" y="499.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="857.0" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.29%)</title><rect x="854.8" y="515.0" width="3.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="857.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (106 samples, 7.64%)</title><rect x="858.2" y="707.0" width="90.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.2" y="718.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (18 samples, 1.30%)</title><rect x="858.2" y="691.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="861.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (9 samples, 0.65%)</title><rect x="858.2" y="675.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.2" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (1 samples, 0.07%)</title><rect x="858.2" y="659.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.2" y="670.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (1 samples, 0.07%)</title><rect x="858.2" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.2" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (1 samples, 0.07%)</title><rect x="858.2" y="627.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.2" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (1 samples, 0.07%)</title><rect x="858.2" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.2" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (1 samples, 0.07%)</title><rect x="858.2" y="595.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.2" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (1 samples, 0.07%)</title><rect x="858.2" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.2" y="590.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (1 samples, 0.07%)</title><rect x="858.2" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="861.2" y="574.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (1 samples, 0.07%)</title><rect x="858.2" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.2" y="558.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (8 samples, 0.58%)</title><rect x="859.1" y="659.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.1" y="670.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (8 samples, 0.58%)</title><rect x="859.1" y="643.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.1" y="654.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (8 samples, 0.58%)</title><rect x="859.1" y="627.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.1" y="638.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (5 samples, 0.36%)</title><rect x="859.1" y="611.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.1" y="622.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (4 samples, 0.29%)</title><rect x="859.9" y="595.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.9" y="606.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (4 samples, 0.29%)</title><rect x="859.9" y="579.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.14%)</title><rect x="859.9" y="563.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="862.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.14%)</title><rect x="859.9" y="547.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.9" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (2 samples, 0.14%)</title><rect x="859.9" y="531.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (1 samples, 0.07%)</title><rect x="859.9" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (1 samples, 0.07%)</title><rect x="859.9" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.07%)</title><rect x="860.8" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.8" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.14%)</title><rect x="861.6" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="864.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (1 samples, 0.07%)</title><rect x="861.6" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.6" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.07%)</title><rect x="862.5" y="547.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.07%)</title><rect x="862.5" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.5" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.07%)</title><rect x="862.5" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.07%)</title><rect x="862.5" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.5" y="510.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (3 samples, 0.22%)</title><rect x="863.3" y="611.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="866.3" y="622.0"></text>
</g>
<g>
<title>java/security/Provider.getService (2 samples, 0.14%)</title><rect x="863.3" y="595.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="866.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.14%)</title><rect x="863.3" y="579.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.3" y="590.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getProvider (1 samples, 0.07%)</title><rect x="865.0" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.0" y="606.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderConfig.getProvider (1 samples, 0.07%)</title><rect x="865.0" y="579.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (9 samples, 0.65%)</title><rect x="865.9" y="675.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.9" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.07%)</title><rect x="865.9" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.9" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.07%)</title><rect x="865.9" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1 samples, 0.07%)</title><rect x="865.9" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="868.9" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (1 samples, 0.07%)</title><rect x="865.9" y="611.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.07%)</title><rect x="865.9" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.07%)</title><rect x="865.9" y="579.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="865.9" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="868.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="865.9" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.07%)</title><rect x="865.9" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (8 samples, 0.58%)</title><rect x="866.7" y="659.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.58%)</title><rect x="866.7" y="643.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.7" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="866.7" y="627.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="869.7" y="638.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="867.6" y="627.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="870.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.14%)</title><rect x="869.3" y="627.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.14%)</title><rect x="869.3" y="611.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="872.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.14%)</title><rect x="869.3" y="595.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.3" y="606.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="869.3" y="579.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="872.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.07%)</title><rect x="870.1" y="579.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.07%)</title><rect x="871.0" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.07%)</title><rect x="871.0" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.07%)</title><rect x="871.8" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.07%)</title><rect x="871.8" y="611.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.07%)</title><rect x="871.8" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.07%)</title><rect x="872.7" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (88 samples, 6.34%)</title><rect x="873.5" y="691.0" width="74.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.5" y="702.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (84 samples, 6.06%)</title><rect x="876.1" y="675.0" width="71.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="879.1" y="686.0">ru/mail/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (55 samples, 3.97%)</title><rect x="876.1" y="659.0" width="46.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="879.1" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (55 samples, 3.97%)</title><rect x="876.1" y="643.0" width="46.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.1" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (55 samples, 3.97%)</title><rect x="876.1" y="627.0" width="46.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="879.1" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (55 samples, 3.97%)</title><rect x="876.1" y="611.0" width="46.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.1" y="622.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.07%)</title><rect x="876.9" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="879.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.07%)</title><rect x="876.9" y="579.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.07%)</title><rect x="876.9" y="563.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.07%)</title><rect x="877.8" y="595.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.07%)</title><rect x="877.8" y="579.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.07%)</title><rect x="877.8" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="880.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (35 samples, 2.52%)</title><rect x="878.6" y="595.0" width="29.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.6" y="606.0">jd..</text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.07%)</title><rect x="879.5" y="579.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.07%)</title><rect x="879.5" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="882.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.07%)</title><rect x="880.3" y="579.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="883.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.07%)</title><rect x="880.3" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.07%)</title><rect x="880.3" y="547.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.07%)</title><rect x="880.3" y="531.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.07%)</title><rect x="880.3" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.29%)</title><rect x="881.2" y="579.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.29%)</title><rect x="881.2" y="563.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.2" y="574.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="881.2" y="547.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="884.2" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3 samples, 0.22%)</title><rect x="882.0" y="547.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="885.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.22%)</title><rect x="882.0" y="531.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (3 samples, 0.22%)</title><rect x="882.0" y="515.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.22%)</title><rect x="882.0" y="499.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.14%)</title><rect x="882.0" y="483.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (1 samples, 0.07%)</title><rect x="882.0" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.0" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.07%)</title><rect x="882.9" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.07%)</title><rect x="883.7" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="886.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.14%)</title><rect x="884.6" y="579.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="884.6" y="563.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.07%)</title><rect x="885.4" y="563.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="888.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (24 samples, 1.73%)</title><rect x="886.3" y="579.0" width="20.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.3" y="590.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (24 samples, 1.73%)</title><rect x="886.3" y="563.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.07%)</title><rect x="887.1" y="547.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.07%)</title><rect x="887.1" y="531.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.07%)</title><rect x="887.1" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.1" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (22 samples, 1.59%)</title><rect x="888.0" y="547.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.0" y="558.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (12 samples, 0.87%)</title><rect x="888.0" y="531.0" width="10.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="891.0" y="542.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="888.0" y="515.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="891.0" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.07%)</title><rect x="888.8" y="515.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="891.8" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.07%)</title><rect x="888.8" y="499.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="891.8" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.22%)</title><rect x="889.7" y="515.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="892.7" y="526.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.07%)</title><rect x="891.4" y="499.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="894.4" y="510.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="892.2" y="515.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="895.2" y="526.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.07%)</title><rect x="893.1" y="515.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="896.1" y="526.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="893.9" y="515.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="896.9" y="526.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="893.9" y="499.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="896.9" y="510.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="893.9" y="483.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="896.9" y="494.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.29%)</title><rect x="894.8" y="515.0" width="3.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="897.8" y="526.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.07%)</title><rect x="895.6" y="499.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="898.6" y="510.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.14%)</title><rect x="896.5" y="499.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="899.5" y="510.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.14%)</title><rect x="896.5" y="483.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="899.5" y="494.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.14%)</title><rect x="896.5" y="467.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="899.5" y="478.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.14%)</title><rect x="896.5" y="451.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="899.5" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.07%)</title><rect x="898.2" y="531.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="901.2" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (8 samples, 0.58%)</title><rect x="899.0" y="531.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="902.0" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (7 samples, 0.50%)</title><rect x="899.9" y="515.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.29%)</title><rect x="900.7" y="499.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.29%)</title><rect x="900.7" y="483.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.29%)</title><rect x="900.7" y="467.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.7" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="903.3" y="451.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="906.3" y="462.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.14%)</title><rect x="904.1" y="499.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.1" y="510.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.07%)</title><rect x="904.1" y="483.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.1" y="494.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.07%)</title><rect x="904.1" y="467.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.1" y="478.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.07%)</title><rect x="904.1" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.07%)</title><rect x="904.1" y="435.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.1" y="446.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.07%)</title><rect x="905.0" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.07%)</title><rect x="905.0" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.0" y="478.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.07%)</title><rect x="905.8" y="531.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="908.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="906.7" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.07%)</title><rect x="907.5" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.5" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="907.5" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="907.5" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="907.5" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="907.5" y="515.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="907.5" y="499.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (7 samples, 0.50%)</title><rect x="908.4" y="595.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.07%)</title><rect x="909.3" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (5 samples, 0.36%)</title><rect x="910.1" y="579.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5 samples, 0.36%)</title><rect x="910.1" y="563.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.1" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.14%)</title><rect x="911.0" y="547.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="914.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.07%)</title><rect x="911.8" y="531.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.8" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.07%)</title><rect x="911.8" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (1 samples, 0.07%)</title><rect x="912.7" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.7" y="558.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="913.5" y="547.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="916.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (10 samples, 0.72%)</title><rect x="914.4" y="595.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (7 samples, 0.50%)</title><rect x="914.4" y="579.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.50%)</title><rect x="914.4" y="563.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.43%)</title><rect x="915.2" y="547.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.22%)</title><rect x="915.2" y="531.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="915.2" y="515.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="915.2" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.14%)</title><rect x="916.1" y="515.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.14%)</title><rect x="916.1" y="499.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.14%)</title><rect x="916.1" y="483.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.14%)</title><rect x="916.1" y="467.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.14%)</title><rect x="916.1" y="451.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.1" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="916.1" y="435.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="919.1" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="916.9" y="435.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="919.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="917.8" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="917.8" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="920.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="917.8" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.07%)</title><rect x="917.8" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="918.6" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="918.6" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="919.5" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="919.5" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.22%)</title><rect x="920.3" y="579.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.22%)</title><rect x="920.3" y="563.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.14%)</title><rect x="921.2" y="547.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.07%)</title><rect x="921.2" y="531.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.07%)</title><rect x="922.0" y="531.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.07%)</title><rect x="922.0" y="515.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.0" y="526.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="922.0" y="499.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="925.0" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="922.0" y="483.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="925.0" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="922.0" y="467.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="925.0" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="922.0" y="451.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="925.0" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="922.0" y="435.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="925.0" y="446.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.07%)</title><rect x="922.0" y="419.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="925.0" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="922.0" y="403.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="925.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.removeLocal (1 samples, 0.07%)</title><rect x="922.9" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (1 samples, 0.07%)</title><rect x="922.9" y="643.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="925.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.07%)</title><rect x="922.9" y="627.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="925.9" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.07%)</title><rect x="922.9" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.07%)</title><rect x="922.9" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$596/955395010.handleLocalResponse (3 samples, 0.22%)</title><rect x="923.7" y="659.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$1 (3 samples, 0.22%)</title><rect x="923.7" y="643.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (3 samples, 0.22%)</title><rect x="923.7" y="627.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.07%)</title><rect x="924.6" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.07%)</title><rect x="924.6" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$607/75241041.get$Lambda (1 samples, 0.07%)</title><rect x="924.6" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.07%)</title><rect x="925.4" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.07%)</title><rect x="925.4" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.07%)</title><rect x="925.4" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.07%)</title><rect x="925.4" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="925.4" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="925.4" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="928.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="925.4" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="925.4" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="928.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="925.4" y="483.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="928.4" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="925.4" y="467.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="928.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$601/996857683.requestBuild (25 samples, 1.80%)</title><rect x="926.3" y="659.0" width="21.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.3" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$2 (25 samples, 1.80%)</title><rect x="926.3" y="643.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="929.3" y="654.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (11 samples, 0.79%)</title><rect x="926.3" y="627.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="929.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (11 samples, 0.79%)</title><rect x="926.3" y="611.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="929.3" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.79%)</title><rect x="926.3" y="595.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.79%)</title><rect x="926.3" y="579.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="929.3" y="590.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="928.0" y="563.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="931.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.50%)</title><rect x="929.7" y="563.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="932.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (6 samples, 0.43%)</title><rect x="930.5" y="547.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.43%)</title><rect x="930.5" y="531.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.07%)</title><rect x="930.5" y="515.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/594427726.test (1 samples, 0.07%)</title><rect x="930.5" y="499.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.29%)</title><rect x="931.4" y="515.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="934.4" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (3 samples, 0.22%)</title><rect x="932.2" y="499.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.22%)</title><rect x="932.2" y="483.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/594427726.test (2 samples, 0.14%)</title><rect x="933.1" y="467.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.14%)</title><rect x="933.1" y="451.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.1" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.14%)</title><rect x="933.1" y="435.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="936.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.14%)</title><rect x="933.1" y="419.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="936.1" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.14%)</title><rect x="933.1" y="403.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="936.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.14%)</title><rect x="933.1" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.1" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.14%)</title><rect x="933.1" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="933.9" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="936.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="933.9" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.07%)</title><rect x="933.9" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.07%)</title><rect x="934.8" y="515.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="937.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="934.8" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.8" y="510.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.07%)</title><rect x="934.8" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="937.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.07%)</title><rect x="934.8" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (14 samples, 1.01%)</title><rect x="935.6" y="627.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.6" y="638.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (9 samples, 0.65%)</title><rect x="935.6" y="611.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="938.6" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (9 samples, 0.65%)</title><rect x="935.6" y="595.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="938.6" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (8 samples, 0.58%)</title><rect x="936.5" y="579.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="939.5" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.14%)</title><rect x="936.5" y="563.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.5" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.14%)</title><rect x="936.5" y="547.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.5" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (6 samples, 0.43%)</title><rect x="938.2" y="563.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="941.2" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (3 samples, 0.22%)</title><rect x="939.0" y="547.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="942.0" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.14%)</title><rect x="939.0" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="942.0" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.14%)</title><rect x="939.0" y="515.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.0" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="939.9" y="499.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="942.9" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.07%)</title><rect x="940.7" y="531.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="940.7" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.07%)</title><rect x="940.7" y="499.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.14%)</title><rect x="941.6" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (5 samples, 0.36%)</title><rect x="943.3" y="611.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (5 samples, 0.36%)</title><rect x="943.3" y="595.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="946.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (5 samples, 0.36%)</title><rect x="943.3" y="579.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="946.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/594427726.test (5 samples, 0.36%)</title><rect x="943.3" y="563.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.36%)</title><rect x="943.3" y="547.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.3" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.36%)</title><rect x="943.3" y="531.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (5 samples, 0.36%)</title><rect x="943.3" y="515.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="946.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (5 samples, 0.36%)</title><rect x="943.3" y="499.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.3" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.36%)</title><rect x="943.3" y="483.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.29%)</title><rect x="944.1" y="467.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.22%)</title><rect x="945.0" y="451.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.22%)</title><rect x="945.0" y="435.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.22%)</title><rect x="945.0" y="419.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.14%)</title><rect x="945.8" y="403.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.8" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.14%)</title><rect x="945.8" y="387.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.8" y="398.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.14%)</title><rect x="945.8" y="371.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.8" y="382.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.07%)</title><rect x="946.7" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="949.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (1 samples, 0.07%)</title><rect x="947.5" y="675.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (1 samples, 0.07%)</title><rect x="947.5" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.07%)</title><rect x="947.5" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$219/330067305.accept (1 samples, 0.07%)</title><rect x="947.5" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (1 samples, 0.07%)</title><rect x="947.5" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.07%)</title><rect x="947.5" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.07%)</title><rect x="947.5" y="579.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="950.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.07%)</title><rect x="947.5" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.5" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (4 samples, 0.29%)</title><rect x="948.4" y="739.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.4" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.29%)</title><rect x="948.4" y="723.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.4" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$580/1356497911.run (4 samples, 0.29%)</title><rect x="948.4" y="707.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.4" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (4 samples, 0.29%)</title><rect x="948.4" y="691.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.4" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (4 samples, 0.29%)</title><rect x="948.4" y="675.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.4" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (4 samples, 0.29%)</title><rect x="948.4" y="659.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.4" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (4 samples, 0.29%)</title><rect x="948.4" y="643.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.4" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.29%)</title><rect x="948.4" y="627.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.4" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (4 samples, 0.29%)</title><rect x="948.4" y="611.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.4" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (4 samples, 0.29%)</title><rect x="948.4" y="595.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="951.4" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (4 samples, 0.29%)</title><rect x="948.4" y="579.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.4" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.14%)</title><rect x="948.4" y="563.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.14%)</title><rect x="948.4" y="547.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (2 samples, 0.14%)</title><rect x="948.4" y="531.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.4" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (2 samples, 0.14%)</title><rect x="948.4" y="515.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.4" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.14%)</title><rect x="948.4" y="499.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.4" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (2 samples, 0.14%)</title><rect x="948.4" y="483.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.4" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (2 samples, 0.14%)</title><rect x="948.4" y="467.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.4" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (2 samples, 0.14%)</title><rect x="948.4" y="451.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.4" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (2 samples, 0.14%)</title><rect x="948.4" y="435.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.4" y="446.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (2 samples, 0.14%)</title><rect x="948.4" y="419.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.4" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (2 samples, 0.14%)</title><rect x="948.4" y="403.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.4" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (2 samples, 0.14%)</title><rect x="948.4" y="387.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.4" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 0.14%)</title><rect x="948.4" y="371.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="951.4" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.14%)</title><rect x="948.4" y="355.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.4" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.14%)</title><rect x="948.4" y="339.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.4" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.14%)</title><rect x="948.4" y="323.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.4" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.14%)</title><rect x="948.4" y="307.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.4" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.07%)</title><rect x="948.4" y="291.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.4" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.07%)</title><rect x="948.4" y="275.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.4" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.07%)</title><rect x="948.4" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="951.4" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.07%)</title><rect x="948.4" y="243.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.4" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.07%)</title><rect x="948.4" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.4" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.07%)</title><rect x="948.4" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.4" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.07%)</title><rect x="948.4" y="195.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="951.4" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.07%)</title><rect x="948.4" y="179.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="951.4" y="190.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.07%)</title><rect x="949.2" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.2" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.07%)</title><rect x="949.2" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="952.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.07%)</title><rect x="949.2" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (1 samples, 0.07%)</title><rect x="949.2" y="243.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="952.2" y="254.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.07%)</title><rect x="949.2" y="227.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.2" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.07%)</title><rect x="949.2" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="952.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.07%)</title><rect x="949.2" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor50.invoke (1 samples, 0.07%)</title><rect x="949.2" y="179.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.2" y="190.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (1 samples, 0.07%)</title><rect x="949.2" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="952.2" y="174.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (1 samples, 0.07%)</title><rect x="949.2" y="147.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.2" y="158.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (1 samples, 0.07%)</title><rect x="949.2" y="131.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="952.2" y="142.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (1 samples, 0.07%)</title><rect x="949.2" y="115.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="952.2" y="126.0"></text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.07%)</title><rect x="949.2" y="99.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="952.2" y="110.0"></text>
</g>
<g>
<title>JavaCalls::call_special(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.07%)</title><rect x="949.2" y="83.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="952.2" y="94.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, LinkInfo const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="949.2" y="67.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="952.2" y="78.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_special_method(CallInfo&amp;, LinkInfo const&amp;, methodHandle const&amp;, Handle, Thread*) (1 samples, 0.07%)</title><rect x="949.2" y="51.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="952.2" y="62.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.07%)</title><rect x="949.2" y="35.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="952.2" y="46.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (2 samples, 0.14%)</title><rect x="950.1" y="563.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.1" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.14%)</title><rect x="950.1" y="547.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.1" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.14%)</title><rect x="950.1" y="531.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.1" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.14%)</title><rect x="950.1" y="515.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.14%)</title><rect x="950.1" y="499.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.1" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readByte (1 samples, 0.07%)</title><rect x="950.1" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.1" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.read (1 samples, 0.07%)</title><rect x="950.1" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.1" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$PeekInputStream.read (1 samples, 0.07%)</title><rect x="950.1" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.1" y="462.0"></text>
</g>
<g>
<title>java/io/ByteArrayInputStream.read (1 samples, 0.07%)</title><rect x="950.1" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.1" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.07%)</title><rect x="950.1" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.07%)</title><rect x="950.9" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.07%)</title><rect x="950.9" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.07%)</title><rect x="950.9" y="451.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.classNamesEqual (1 samples, 0.07%)</title><rect x="950.9" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.07%)</title><rect x="950.9" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="950.9" y="403.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (43 samples, 3.10%)</title><rect x="951.8" y="787.0" width="36.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="954.8" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (43 samples, 3.10%)</title><rect x="951.8" y="771.0" width="36.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.8" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (20 samples, 1.44%)</title><rect x="951.8" y="755.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (19 samples, 1.37%)</title><rect x="952.6" y="739.0" width="16.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="955.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (1 samples, 0.07%)</title><rect x="957.7" y="723.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (12 samples, 0.87%)</title><rect x="958.6" y="723.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (12 samples, 0.87%)</title><rect x="958.6" y="707.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.87%)</title><rect x="958.6" y="691.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10 samples, 0.72%)</title><rect x="958.6" y="675.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.72%)</title><rect x="958.6" y="659.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9 samples, 0.65%)</title><rect x="959.4" y="643.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.4" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="960.3" y="627.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="963.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.43%)</title><rect x="961.1" y="627.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.43%)</title><rect x="961.1" y="611.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.43%)</title><rect x="961.1" y="595.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="964.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="961.1" y="579.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="961.1" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.36%)</title><rect x="962.0" y="579.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="965.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.36%)</title><rect x="962.0" y="563.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.29%)</title><rect x="962.8" y="547.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="965.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.29%)</title><rect x="962.8" y="531.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.29%)</title><rect x="962.8" y="515.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.8" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.07%)</title><rect x="962.8" y="499.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="965.8" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.14%)</title><rect x="963.7" y="499.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="966.7" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.07%)</title><rect x="963.7" y="483.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="966.7" y="494.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="964.5" y="483.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="967.5" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="965.4" y="499.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="968.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.07%)</title><rect x="966.3" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.07%)</title><rect x="966.3" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.07%)</title><rect x="966.3" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.14%)</title><rect x="967.1" y="675.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.65%)</title><rect x="968.8" y="755.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.58%)</title><rect x="969.7" y="739.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.7" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.36%)</title><rect x="969.7" y="723.0" width="4.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="972.7" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.29%)</title><rect x="969.7" y="707.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="972.7" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.14%)</title><rect x="971.4" y="691.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="974.4" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="972.2" y="675.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="975.2" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="973.1" y="707.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="976.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.22%)</title><rect x="973.9" y="723.0" width="2.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="976.9" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.22%)</title><rect x="973.9" y="707.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="976.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (14 samples, 1.01%)</title><rect x="976.5" y="755.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.5" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="979.9" y="739.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="982.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.65%)</title><rect x="980.7" y="739.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.7" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.50%)</title><rect x="980.7" y="723.0" width="6.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="983.7" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="980.7" y="707.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="983.7" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="980.7" y="691.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="983.7" y="702.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.07%)</title><rect x="981.6" y="691.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="984.6" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.07%)</title><rect x="982.4" y="707.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="985.4" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.29%)</title><rect x="983.3" y="707.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="986.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.14%)</title><rect x="986.7" y="723.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="989.7" y="734.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (2 samples, 0.14%)</title><rect x="986.7" y="707.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="989.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (122 samples, 8.80%)</title><rect x="988.4" y="787.0" width="103.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.4" y="798.0">jdk/internal..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.22%)</title><rect x="990.9" y="771.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="993.9" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.22%)</title><rect x="990.9" y="755.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="993.9" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.07%)</title><rect x="990.9" y="739.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="993.9" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="991.8" y="739.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.8" y="750.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="991.8" y="723.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="994.8" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.07%)</title><rect x="992.6" y="739.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.6" y="750.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.07%)</title><rect x="993.5" y="771.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="996.5" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (3 samples, 0.22%)</title><rect x="994.3" y="771.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.3" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (17 samples, 1.23%)</title><rect x="996.9" y="771.0" width="14.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$389/894063145.accept (13 samples, 0.94%)</title><rect x="996.9" y="755.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (13 samples, 0.94%)</title><rect x="996.9" y="739.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="999.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (13 samples, 0.94%)</title><rect x="996.9" y="723.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="999.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (13 samples, 0.94%)</title><rect x="996.9" y="707.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="999.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (13 samples, 0.94%)</title><rect x="996.9" y="691.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (13 samples, 0.94%)</title><rect x="996.9" y="675.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.94%)</title><rect x="996.9" y="659.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.94%)</title><rect x="996.9" y="643.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.94%)</title><rect x="996.9" y="627.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (13 samples, 0.94%)</title><rect x="996.9" y="611.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (13 samples, 0.94%)</title><rect x="996.9" y="595.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="999.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (13 samples, 0.94%)</title><rect x="996.9" y="579.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (6 samples, 0.43%)</title><rect x="996.9" y="563.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="999.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (6 samples, 0.43%)</title><rect x="996.9" y="547.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (6 samples, 0.43%)</title><rect x="996.9" y="531.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="999.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1 samples, 0.07%)</title><rect x="996.9" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="999.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.07%)</title><rect x="996.9" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.07%)</title><rect x="996.9" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.07%)</title><rect x="996.9" y="467.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="999.9" y="478.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="996.9" y="451.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="999.9" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="996.9" y="435.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="999.9" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="996.9" y="419.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="999.9" y="430.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="996.9" y="403.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="999.9" y="414.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="996.9" y="387.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="999.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.36%)</title><rect x="997.7" y="515.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.36%)</title><rect x="997.7" y="499.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.36%)</title><rect x="997.7" y="483.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.36%)</title><rect x="997.7" y="467.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.14%)</title><rect x="997.7" y="451.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.22%)</title><rect x="999.4" y="451.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.14%)</title><rect x="1000.3" y="435.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1003.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.14%)</title><rect x="1000.3" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (7 samples, 0.50%)</title><rect x="1002.0" y="563.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (2 samples, 0.14%)</title><rect x="1002.0" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1005.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.07%)</title><rect x="1002.0" y="531.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1002.0" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1002.0" y="499.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1002.0" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1002.0" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1005.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="1002.0" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1005.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="1002.0" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.0" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.07%)</title><rect x="1002.0" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (1 samples, 0.07%)</title><rect x="1002.8" y="531.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1002.8" y="515.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1002.8" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.8" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1002.8" y="483.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="1002.8" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.07%)</title><rect x="1003.7" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$269/1544669751.get (1 samples, 0.07%)</title><rect x="1003.7" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1006.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1 samples, 0.07%)</title><rect x="1003.7" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.07%)</title><rect x="1003.7" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1003.7" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1003.7" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.7" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1003.7" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (4 samples, 0.29%)</title><rect x="1004.5" y="547.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.29%)</title><rect x="1004.5" y="531.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1007.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.29%)</title><rect x="1004.5" y="515.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.14%)</title><rect x="1004.5" y="499.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (2 samples, 0.14%)</title><rect x="1004.5" y="483.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (2 samples, 0.14%)</title><rect x="1004.5" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.5" y="478.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.07%)</title><rect x="1004.5" y="451.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1007.5" y="462.0"></text>
</g>
<g>
<title>__read (1 samples, 0.07%)</title><rect x="1005.4" y="451.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1008.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.14%)</title><rect x="1006.2" y="499.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.2" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="1006.2" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.2" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.07%)</title><rect x="1006.2" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.2" y="478.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.07%)</title><rect x="1006.2" y="451.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1009.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.07%)</title><rect x="1007.1" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$392/1752394167.accept (4 samples, 0.29%)</title><rect x="1007.9" y="755.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.22%)</title><rect x="1008.8" y="739.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1011.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/975438429.run (3 samples, 0.22%)</title><rect x="1008.8" y="723.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1011.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.22%)</title><rect x="1008.8" y="707.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.22%)</title><rect x="1008.8" y="691.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.8" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.07%)</title><rect x="1009.6" y="675.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1012.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.07%)</title><rect x="1010.5" y="675.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.07%)</title><rect x="1010.5" y="659.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1010.5" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1010.5" y="627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1013.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (7 samples, 0.50%)</title><rect x="1011.3" y="771.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.50%)</title><rect x="1011.3" y="755.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (7 samples, 0.50%)</title><rect x="1011.3" y="739.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.50%)</title><rect x="1011.3" y="723.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.50%)</title><rect x="1011.3" y="707.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.36%)</title><rect x="1011.3" y="691.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (5 samples, 0.36%)</title><rect x="1011.3" y="675.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (5 samples, 0.36%)</title><rect x="1011.3" y="659.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.3" y="670.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="1011.3" y="643.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1014.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.07%)</title><rect x="1013.0" y="643.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1016.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$387/1360552641.accept (1 samples, 0.07%)</title><rect x="1013.0" y="627.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1016.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="1013.0" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="1013.0" y="595.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1016.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="1013.0" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1016.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="1013.0" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1016.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.07%)</title><rect x="1013.0" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.07%)</title><rect x="1013.9" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1016.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$386/601196166.test (1 samples, 0.07%)</title><rect x="1014.7" y="643.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1017.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.07%)</title><rect x="1015.6" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.07%)</title><rect x="1016.4" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1019.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (24 samples, 1.73%)</title><rect x="1017.3" y="771.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1020.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$292/1483596319.run (13 samples, 0.94%)</title><rect x="1017.3" y="755.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (13 samples, 0.94%)</title><rect x="1017.3" y="739.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.94%)</title><rect x="1017.3" y="723.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.94%)</title><rect x="1017.3" y="707.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (12 samples, 0.87%)</title><rect x="1018.1" y="691.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1021.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (12 samples, 0.87%)</title><rect x="1018.1" y="675.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (11 samples, 0.79%)</title><rect x="1019.0" y="659.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (11 samples, 0.79%)</title><rect x="1019.0" y="643.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1022.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (11 samples, 0.79%)</title><rect x="1019.0" y="627.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (2 samples, 0.14%)</title><rect x="1019.8" y="611.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (8 samples, 0.58%)</title><rect x="1021.6" y="611.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1024.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.14%)</title><rect x="1021.6" y="595.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.14%)</title><rect x="1021.6" y="579.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.14%)</title><rect x="1021.6" y="563.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.14%)</title><rect x="1021.6" y="547.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.14%)</title><rect x="1021.6" y="531.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.14%)</title><rect x="1021.6" y="515.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.14%)</title><rect x="1021.6" y="499.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1024.6" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.07%)</title><rect x="1021.6" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1024.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.07%)</title><rect x="1022.4" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1025.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="1022.4" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1025.4" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="1022.4" y="451.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.4" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="1022.4" y="435.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1025.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (6 samples, 0.43%)</title><rect x="1023.3" y="595.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.36%)</title><rect x="1024.1" y="579.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1027.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.36%)</title><rect x="1024.1" y="563.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.36%)</title><rect x="1024.1" y="547.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.36%)</title><rect x="1024.1" y="531.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.07%)</title><rect x="1024.1" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1027.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.29%)</title><rect x="1025.0" y="515.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1028.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.07%)</title><rect x="1025.8" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="1025.8" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1028.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="1025.8" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="1025.8" y="451.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="1025.8" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="1025.8" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.8" y="430.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="1025.8" y="403.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1028.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="1026.7" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="1026.7" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="1026.7" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.07%)</title><rect x="1026.7" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.07%)</title><rect x="1026.7" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1029.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.07%)</title><rect x="1026.7" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1029.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.07%)</title><rect x="1026.7" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1029.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.07%)</title><rect x="1027.5" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.07%)</title><rect x="1027.5" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$302/1986808666.run (11 samples, 0.79%)</title><rect x="1028.4" y="755.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (11 samples, 0.79%)</title><rect x="1028.4" y="739.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1031.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.43%)</title><rect x="1031.8" y="723.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.36%)</title><rect x="1032.6" y="707.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.29%)</title><rect x="1033.5" y="691.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1036.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.22%)</title><rect x="1034.3" y="675.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1037.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.22%)</title><rect x="1034.3" y="659.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.22%)</title><rect x="1034.3" y="643.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1037.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.22%)</title><rect x="1034.3" y="627.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.22%)</title><rect x="1034.3" y="611.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1037.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.22%)</title><rect x="1034.3" y="595.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1037.3" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.07%)</title><rect x="1034.3" y="579.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1037.3" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.14%)</title><rect x="1035.2" y="579.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1038.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.07%)</title><rect x="1036.9" y="723.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5 samples, 0.36%)</title><rect x="1037.7" y="771.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.7" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.14%)</title><rect x="1037.7" y="755.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.7" y="766.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.14%)</title><rect x="1037.7" y="739.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.07%)</title><rect x="1038.6" y="723.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.6" y="734.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.07%)</title><rect x="1038.6" y="707.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1041.6" y="718.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.07%)</title><rect x="1038.6" y="691.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1041.6" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="1038.6" y="675.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1041.6" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="1038.6" y="659.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1041.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3 samples, 0.22%)</title><rect x="1039.4" y="755.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.4" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.22%)</title><rect x="1039.4" y="739.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1042.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (8 samples, 0.58%)</title><rect x="1042.0" y="771.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.50%)</title><rect x="1042.8" y="755.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.50%)</title><rect x="1042.8" y="739.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1045.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (12 samples, 0.87%)</title><rect x="1048.8" y="771.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.8" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.36%)</title><rect x="1051.3" y="755.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1054.3" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.36%)</title><rect x="1051.3" y="739.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1054.3" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.29%)</title><rect x="1052.2" y="723.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1055.2" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.07%)</title><rect x="1052.2" y="707.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1055.2" y="718.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.22%)</title><rect x="1053.0" y="707.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1056.0" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.22%)</title><rect x="1055.6" y="755.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.6" y="766.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.22%)</title><rect x="1055.6" y="739.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.22%)</title><rect x="1055.6" y="723.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.6" y="734.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.14%)</title><rect x="1055.6" y="707.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1058.6" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="1055.6" y="691.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1058.6" y="702.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.07%)</title><rect x="1056.4" y="691.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1059.4" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="1056.4" y="675.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1059.4" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="1056.4" y="659.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1059.4" y="670.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.07%)</title><rect x="1057.3" y="707.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1060.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.07%)</title><rect x="1058.1" y="755.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.1" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.07%)</title><rect x="1058.1" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.1" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.07%)</title><rect x="1058.1" y="723.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.1" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1058.1" y="707.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1061.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (34 samples, 2.45%)</title><rect x="1059.0" y="771.0" width="28.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.0" y="782.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (34 samples, 2.45%)</title><rect x="1059.0" y="755.0" width="28.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.0" y="766.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (34 samples, 2.45%)</title><rect x="1059.0" y="739.0" width="28.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.0" y="750.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (20 samples, 1.44%)</title><rect x="1059.8" y="723.0" width="17.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.8" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.14%)</title><rect x="1060.7" y="707.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1063.7" y="718.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.07%)</title><rect x="1062.4" y="707.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1065.4" y="718.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 1.15%)</title><rect x="1063.2" y="707.0" width="13.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1066.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (11 samples, 0.79%)</title><rect x="1076.8" y="723.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.14%)</title><rect x="1076.8" y="707.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.14%)</title><rect x="1076.8" y="691.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.07%)</title><rect x="1077.7" y="675.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1080.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (9 samples, 0.65%)</title><rect x="1078.6" y="707.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.6" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.07%)</title><rect x="1079.4" y="691.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1082.4" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.07%)</title><rect x="1079.4" y="675.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1082.4" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.07%)</title><rect x="1079.4" y="659.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1082.4" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.07%)</title><rect x="1079.4" y="643.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1082.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (7 samples, 0.50%)</title><rect x="1080.3" y="691.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.3" y="702.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (3 samples, 0.22%)</title><rect x="1080.3" y="675.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1083.3" y="686.0"></text>
</g>
<g>
<title>__read (4 samples, 0.29%)</title><rect x="1082.8" y="675.0" width="3.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1085.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.14%)</title><rect x="1086.2" y="723.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (4 samples, 0.29%)</title><rect x="1087.9" y="771.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 0.22%)</title><rect x="1088.8" y="755.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1091.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (3 samples, 0.22%)</title><rect x="1088.8" y="739.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (2 samples, 0.14%)</title><rect x="1089.6" y="723.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.6" y="734.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.14%)</title><rect x="1089.6" y="707.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1092.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.07%)</title><rect x="1091.3" y="771.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.07%)</title><rect x="1091.3" y="755.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.07%)</title><rect x="1091.3" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.3" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (108 samples, 7.79%)</title><rect x="1092.2" y="787.0" width="91.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.2" y="798.0">one/nio/ser..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="1092.2" y="771.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1095.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.07%)</title><rect x="1093.0" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 2.60%)</title><rect x="1093.9" y="771.0" width="30.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.9" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (34 samples, 2.45%)</title><rect x="1095.6" y="755.0" width="28.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1098.6" y="766.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.07%)</title><rect x="1100.7" y="739.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1103.7" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.14%)</title><rect x="1101.5" y="739.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1104.5" y="750.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.50%)</title><rect x="1103.2" y="739.0" width="6.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1106.2" y="750.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.14%)</title><rect x="1107.5" y="723.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1110.5" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.14%)</title><rect x="1107.5" y="707.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1110.5" y="718.0"></text>
</g>
<g>
<title>epoll_wait (18 samples, 1.30%)</title><rect x="1109.2" y="739.0" width="15.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1112.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (70 samples, 5.05%)</title><rect x="1124.5" y="771.0" width="59.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.5" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (68 samples, 4.90%)</title><rect x="1126.2" y="755.0" width="57.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.2" y="766.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (51 samples, 3.68%)</title><rect x="1126.2" y="739.0" width="43.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.2" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 2.16%)</title><rect x="1126.2" y="723.0" width="25.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.2" y="734.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (27 samples, 1.95%)</title><rect x="1128.7" y="707.0" width="23.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1131.7" y="718.0">o..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (17 samples, 1.23%)</title><rect x="1128.7" y="691.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.07%)</title><rect x="1128.7" y="675.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="1128.7" y="659.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="1128.7" y="643.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.07%)</title><rect x="1128.7" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (16 samples, 1.15%)</title><rect x="1129.6" y="675.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1132.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (16 samples, 1.15%)</title><rect x="1129.6" y="659.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (16 samples, 1.15%)</title><rect x="1129.6" y="643.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 1.01%)</title><rect x="1131.3" y="627.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.3" y="638.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="1131.3" y="611.0" width="1.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1134.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (12 samples, 0.87%)</title><rect x="1133.0" y="611.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1136.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="1133.0" y="595.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="1133.0" y="579.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="1133.0" y="563.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="1133.0" y="547.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.36%)</title><rect x="1133.9" y="595.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1136.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.36%)</title><rect x="1133.9" y="579.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.22%)</title><rect x="1134.7" y="563.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.22%)</title><rect x="1134.7" y="547.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.22%)</title><rect x="1134.7" y="531.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.22%)</title><rect x="1134.7" y="515.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.7" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.22%)</title><rect x="1134.7" y="499.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1137.7" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="1134.7" y="483.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1137.7" y="494.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.14%)</title><rect x="1134.7" y="467.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1137.7" y="478.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.07%)</title><rect x="1136.4" y="483.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.07%)</title><rect x="1137.3" y="563.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.43%)</title><rect x="1138.1" y="595.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.43%)</title><rect x="1138.1" y="579.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.43%)</title><rect x="1138.1" y="563.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.43%)</title><rect x="1138.1" y="547.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.43%)</title><rect x="1138.1" y="531.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.1" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.22%)</title><rect x="1138.1" y="515.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1141.1" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.07%)</title><rect x="1138.1" y="499.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.1" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.14%)</title><rect x="1139.0" y="499.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1142.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="1140.7" y="515.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1143.7" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.07%)</title><rect x="1140.7" y="499.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1143.7" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.14%)</title><rect x="1141.5" y="515.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1144.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.29%)</title><rect x="1143.2" y="691.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.29%)</title><rect x="1143.2" y="675.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.22%)</title><rect x="1143.2" y="659.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="1145.8" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1148.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="1145.8" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="1145.8" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.43%)</title><rect x="1146.6" y="691.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.43%)</title><rect x="1146.6" y="675.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.43%)</title><rect x="1146.6" y="659.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.6" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="1146.6" y="643.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1149.6" y="654.0"></text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (4 samples, 0.29%)</title><rect x="1147.5" y="643.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.5" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="1150.9" y="643.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1153.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.79%)</title><rect x="1151.7" y="723.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1154.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.29%)</title><rect x="1152.6" y="707.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.29%)</title><rect x="1156.0" y="707.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.29%)</title><rect x="1156.0" y="691.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.22%)</title><rect x="1156.0" y="675.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.14%)</title><rect x="1156.0" y="659.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.07%)</title><rect x="1157.7" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="1158.5" y="675.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.14%)</title><rect x="1159.4" y="707.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.29%)</title><rect x="1161.1" y="723.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.29%)</title><rect x="1161.1" y="707.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.29%)</title><rect x="1161.1" y="691.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="1163.6" y="675.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1166.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.07%)</title><rect x="1163.6" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.22%)</title><rect x="1164.5" y="723.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.22%)</title><rect x="1164.5" y="707.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.22%)</title><rect x="1164.5" y="691.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1167.5" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="1166.2" y="675.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1169.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.22%)</title><rect x="1167.0" y="723.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1170.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.22%)</title><rect x="1167.0" y="707.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.0" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="1167.0" y="691.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.0" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="1167.0" y="675.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.0" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="1167.0" y="659.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.0" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="1167.0" y="643.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.0" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="1167.0" y="627.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.0" y="638.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.07%)</title><rect x="1167.0" y="611.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.0" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="1167.9" y="691.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.9" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="1167.9" y="675.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.9" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="1167.9" y="659.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.9" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="1167.9" y="643.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.9" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="1167.9" y="627.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.9" y="638.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.07%)</title><rect x="1167.9" y="611.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.9" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.07%)</title><rect x="1167.9" y="595.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.9" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.07%)</title><rect x="1167.9" y="579.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1168.7" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1168.7" y="675.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.07%)</title><rect x="1168.7" y="659.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1171.7" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="1168.7" y="643.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.7" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="1168.7" y="627.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.7" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="1168.7" y="611.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.7" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="1168.7" y="595.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.7" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="1168.7" y="579.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.7" y="590.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.07%)</title><rect x="1168.7" y="563.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 1.23%)</title><rect x="1169.6" y="739.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 1.01%)</title><rect x="1172.1" y="723.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.1" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.50%)</title><rect x="1172.1" y="707.0" width="6.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1175.1" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.07%)</title><rect x="1173.8" y="691.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.8" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.29%)</title><rect x="1174.7" y="691.0" width="3.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1177.7" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.07%)</title><rect x="1174.7" y="675.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.7" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.22%)</title><rect x="1175.5" y="675.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1178.5" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.14%)</title><rect x="1176.4" y="659.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.4" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="1178.1" y="707.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1181.1" y="718.0"></text>
</g>
<g>
<title>recv (6 samples, 0.43%)</title><rect x="1178.9" y="707.0" width="5.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1181.9" y="718.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.50%)</title><rect x="1184.0" y="787.0" width="6.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1187.0" y="798.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.50%)</title><rect x="1184.0" y="771.0" width="6.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1187.0" y="782.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.50%)</title><rect x="1184.0" y="755.0" width="6.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.0" y="766.0"></text>
</g>
<g>
<title>JavaThread::run() (5 samples, 0.36%)</title><rect x="1184.0" y="739.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.0" y="750.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5 samples, 0.36%)</title><rect x="1184.0" y="723.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.0" y="734.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 0.36%)</title><rect x="1184.0" y="707.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.0" y="718.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 0.36%)</title><rect x="1184.0" y="691.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.0" y="702.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples, 0.36%)</title><rect x="1184.0" y="675.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.0" y="686.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.22%)</title><rect x="1184.0" y="659.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.0" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.22%)</title><rect x="1184.0" y="643.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.0" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.07%)</title><rect x="1184.0" y="627.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.0" y="638.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.07%)</title><rect x="1184.0" y="611.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.0" y="622.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.07%)</title><rect x="1184.9" y="627.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.9" y="638.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.07%)</title><rect x="1185.7" y="627.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="638.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.07%)</title><rect x="1186.6" y="659.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.6" y="670.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.07%)</title><rect x="1186.6" y="643.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.6" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.07%)</title><rect x="1186.6" y="627.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.6" y="638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.07%)</title><rect x="1186.6" y="611.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.6" y="622.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.07%)</title><rect x="1186.6" y="595.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.6" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1187.4" y="659.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1187.4" y="643.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1187.4" y="627.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1187.4" y="611.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1187.4" y="595.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1187.4" y="579.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.4" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1187.4" y="563.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.4" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1187.4" y="547.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1187.4" y="531.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1187.4" y="515.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1187.4" y="499.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1187.4" y="483.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.4" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1187.4" y="467.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.4" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1187.4" y="451.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1187.4" y="435.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1187.4" y="419.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1187.4" y="403.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1187.4" y="387.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1187.4" y="371.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.4" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1187.4" y="355.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1187.4" y="339.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1187.4" y="323.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1187.4" y="307.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1187.4" y="291.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1187.4" y="275.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.4" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1187.4" y="259.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1187.4" y="243.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.4" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1187.4" y="227.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.4" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1187.4" y="211.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="222.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="1187.4" y="195.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="206.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.07%)</title><rect x="1187.4" y="179.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="190.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.07%)</title><rect x="1187.4" y="163.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.4" y="174.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="1187.4" y="147.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.4" y="158.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.07%)</title><rect x="1187.4" y="131.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="142.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.07%)</title><rect x="1187.4" y="115.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="126.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.07%)</title><rect x="1187.4" y="99.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="110.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.07%)</title><rect x="1187.4" y="83.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="94.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.07%)</title><rect x="1187.4" y="67.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="78.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.07%)</title><rect x="1187.4" y="51.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.4" y="62.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.07%)</title><rect x="1187.4" y="35.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="46.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.07%)</title><rect x="1188.3" y="739.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.07%)</title><rect x="1188.3" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.07%)</title><rect x="1188.3" y="707.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.3" y="718.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.07%)</title><rect x="1188.3" y="691.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.3" y="702.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.07%)</title><rect x="1188.3" y="675.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.3" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.07%)</title><rect x="1188.3" y="659.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="670.0"></text>
</g>
<g>
<title>G1Policy::record_collection_pause_end(double, unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="1188.3" y="643.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="654.0"></text>
</g>
<g>
<title>G1MMUTrackerQueue::add_pause(double, double) (1 samples, 0.07%)</title><rect x="1188.3" y="627.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.3" y="638.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.07%)</title><rect x="1189.1" y="739.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.07%)</title><rect x="1189.1" y="723.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.07%)</title><rect x="1189.1" y="707.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.07%)</title><rect x="1189.1" y="691.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="1189.1" y="675.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
</g>
</svg>
