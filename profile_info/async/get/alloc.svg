<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="757"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="757"> </text>
<g id="frames">
<g>
<title>all (19,818 samples, 100.00%)</title><rect x="10.0" y="723.0" width="1180.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="734.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (11,236 samples, 56.70%)</title><rect x="10.0" y="707.0" width="669.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (9 samples, 0.05%)</title><rect x="10.0" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (9 samples, 0.05%)</title><rect x="10.0" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1441707365.linkToTargetMethod (9 samples, 0.05%)</title><rect x="10.0" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1305497491.invoke (9 samples, 0.05%)</title><rect x="10.0" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.05%)</title><rect x="10.0" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.05%)</title><rect x="10.0" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.05%)</title><rect x="10.0" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.05%)</title><rect x="10.0" y="579.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,227 samples, 56.65%)</title><rect x="10.5" y="691.0" width="668.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.5" y="702.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,227 samples, 56.65%)</title><rect x="10.5" y="675.0" width="668.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.5" y="686.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6,181 samples, 31.19%)</title><rect x="10.5" y="659.0" width="368.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.5" y="670.0">java/util/concurrent/CompletableFuture$AsyncSupply..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,345 samples, 11.83%)</title><rect x="10.5" y="643.0" width="139.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.5" y="654.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,307 samples, 6.60%)</title><rect x="10.5" y="627.0" width="77.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.5" y="638.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (11 samples, 0.06%)</title><rect x="10.5" y="611.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/1728467356.apply (1,296 samples, 6.54%)</title><rect x="11.2" y="611.0" width="77.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.2" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,296 samples, 6.54%)</title><rect x="11.2" y="595.0" width="77.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.2" y="606.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,296 samples, 6.54%)</title><rect x="11.2" y="579.0" width="77.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.2" y="590.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="11.2" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.04%)</title><rect x="11.2" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (15 samples, 0.08%)</title><rect x="11.6" y="563.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (15 samples, 0.08%)</title><rect x="11.6" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (10 samples, 0.05%)</title><rect x="11.6" y="531.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="14.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="12.2" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="12.2" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.03%)</title><rect x="12.2" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="15.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (41 samples, 0.21%)</title><rect x="12.5" y="563.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (41 samples, 0.21%)</title><rect x="12.5" y="547.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (21 samples, 0.11%)</title><rect x="12.5" y="531.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="15.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.10%)</title><rect x="13.8" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.10%)</title><rect x="13.8" y="515.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.10%)</title><rect x="13.8" y="499.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="16.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (1,180 samples, 5.95%)</title><rect x="14.9" y="563.0" width="70.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.9" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (1,180 samples, 5.95%)</title><rect x="14.9" y="547.0" width="70.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.9" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (1,180 samples, 5.95%)</title><rect x="14.9" y="531.0" width="70.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.9" y="542.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.12%)</title><rect x="14.9" y="515.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.12%)</title><rect x="14.9" y="499.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.get$Lambda (13 samples, 0.07%)</title><rect x="15.2" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$230 (13 samples, 0.07%)</title><rect x="15.2" y="467.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="18.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1197842853.get$Lambda (6 samples, 0.03%)</title><rect x="16.0" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$334 (6 samples, 0.03%)</title><rect x="16.0" y="467.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="19.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (802 samples, 4.05%)</title><rect x="16.3" y="515.0" width="47.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.3" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (802 samples, 4.05%)</title><rect x="16.3" y="499.0" width="47.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.3" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (789 samples, 3.98%)</title><rect x="16.3" y="483.0" width="47.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.3" y="494.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1197842853.apply (789 samples, 3.98%)</title><rect x="16.3" y="467.0" width="47.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.3" y="478.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (789 samples, 3.98%)</title><rect x="16.3" y="451.0" width="47.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.3" y="462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (789 samples, 3.98%)</title><rect x="16.3" y="435.0" width="47.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.3" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.apply (789 samples, 3.98%)</title><rect x="16.3" y="419.0" width="47.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.3" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (789 samples, 3.98%)</title><rect x="16.3" y="403.0" width="47.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.3" y="414.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="16.3" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="16.3" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$383/847257842.get$Lambda (5 samples, 0.03%)</title><rect x="16.3" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$383 (5 samples, 0.03%)</title><rect x="16.3" y="339.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="19.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (16 samples, 0.08%)</title><rect x="16.6" y="387.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (16 samples, 0.08%)</title><rect x="16.6" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (5 samples, 0.03%)</title><rect x="16.6" y="355.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="19.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.06%)</title><rect x="16.9" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.06%)</title><rect x="16.9" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.06%)</title><rect x="16.9" y="323.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="19.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.06%)</title><rect x="17.6" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11 samples, 0.06%)</title><rect x="17.6" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.04%)</title><rect x="17.8" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.04%)</title><rect x="17.8" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.04%)</title><rect x="17.8" y="323.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="20.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (757 samples, 3.82%)</title><rect x="18.2" y="387.0" width="45.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.2" y="398.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="18.2" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.04%)</title><rect x="18.2" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (632 samples, 3.19%)</title><rect x="18.6" y="371.0" width="37.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.6" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (632 samples, 3.19%)</title><rect x="18.6" y="355.0" width="37.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.6" y="366.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (12 samples, 0.06%)</title><rect x="18.6" y="339.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="21.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$380/136395083.apply (607 samples, 3.06%)</title><rect x="19.3" y="339.0" width="36.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.3" y="350.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (607 samples, 3.06%)</title><rect x="19.3" y="323.0" width="36.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.3" y="334.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.09%)</title><rect x="19.5" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.09%)</title><rect x="19.5" y="291.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.04%)</title><rect x="19.5" y="275.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="22.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.06%)</title><rect x="19.9" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.06%)</title><rect x="19.9" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.06%)</title><rect x="19.9" y="243.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="22.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.04%)</title><rect x="20.6" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="23.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (18 samples, 0.09%)</title><rect x="21.0" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (10 samples, 0.05%)</title><rect x="21.0" y="291.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="24.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.04%)</title><rect x="21.6" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (8 samples, 0.04%)</title><rect x="21.6" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (8 samples, 0.04%)</title><rect x="21.6" y="259.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (8 samples, 0.04%)</title><rect x="21.6" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (8 samples, 0.04%)</title><rect x="21.6" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.04%)</title><rect x="21.6" y="211.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="24.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (20 samples, 0.10%)</title><rect x="22.1" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (20 samples, 0.10%)</title><rect x="22.1" y="291.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (16 samples, 0.08%)</title><rect x="22.3" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (16 samples, 0.08%)</title><rect x="22.3" y="259.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (12 samples, 0.06%)</title><rect x="22.3" y="243.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="25.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (541 samples, 2.73%)</title><rect x="23.3" y="307.0" width="32.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.3" y="318.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (10 samples, 0.05%)</title><rect x="23.3" y="291.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="26.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (32 samples, 0.16%)</title><rect x="23.9" y="291.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (32 samples, 0.16%)</title><rect x="23.9" y="275.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (32 samples, 0.16%)</title><rect x="23.9" y="259.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.9" y="270.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.16%)</title><rect x="23.9" y="243.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="26.9" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.11%)</title><rect x="25.8" y="291.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.8" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.11%)</title><rect x="25.8" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.8" y="286.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.11%)</title><rect x="25.8" y="259.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="28.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (47 samples, 0.24%)</title><rect x="27.0" y="291.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.24%)</title><rect x="27.0" y="275.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.05%)</title><rect x="27.0" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="30.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.19%)</title><rect x="27.6" y="259.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.6" y="270.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.19%)</title><rect x="27.6" y="243.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="30.6" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.04%)</title><rect x="29.8" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.04%)</title><rect x="29.8" y="275.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.8" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.04%)</title><rect x="29.8" y="259.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="32.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (342 samples, 1.73%)</title><rect x="30.5" y="291.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (194 samples, 0.98%)</title><rect x="30.7" y="275.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (117 samples, 0.59%)</title><rect x="30.7" y="259.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.7" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (117 samples, 0.59%)</title><rect x="30.7" y="243.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.7" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (117 samples, 0.59%)</title><rect x="30.7" y="227.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (117 samples, 0.59%)</title><rect x="30.7" y="211.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.7" y="222.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.59%)</title><rect x="30.7" y="195.0" width="7.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="33.7" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (13 samples, 0.07%)</title><rect x="37.7" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (13 samples, 0.07%)</title><rect x="37.7" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.7" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (13 samples, 0.07%)</title><rect x="37.7" y="227.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.7" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (13 samples, 0.07%)</title><rect x="37.7" y="211.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="40.7" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (16 samples, 0.08%)</title><rect x="38.5" y="259.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.5" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (8 samples, 0.04%)</title><rect x="38.5" y="243.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="41.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (8 samples, 0.04%)</title><rect x="38.9" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.9" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (8 samples, 0.04%)</title><rect x="38.9" y="227.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="41.9" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$403/621187221.test (48 samples, 0.24%)</title><rect x="39.4" y="259.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.4" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (48 samples, 0.24%)</title><rect x="39.4" y="243.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1687662712.test (48 samples, 0.24%)</title><rect x="39.4" y="227.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (48 samples, 0.24%)</title><rect x="39.4" y="211.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.4" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1778081847.test (48 samples, 0.24%)</title><rect x="39.4" y="195.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.4" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (48 samples, 0.24%)</title><rect x="39.4" y="179.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/231786897.test (48 samples, 0.24%)</title><rect x="39.4" y="163.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (48 samples, 0.24%)</title><rect x="39.4" y="147.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.24%)</title><rect x="39.4" y="131.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.24%)</title><rect x="39.4" y="115.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.13%)</title><rect x="39.4" y="99.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="42.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.12%)</title><rect x="40.9" y="99.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.9" y="110.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.12%)</title><rect x="40.9" y="83.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="43.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (145 samples, 0.73%)</title><rect x="42.3" y="275.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (145 samples, 0.73%)</title><rect x="42.3" y="259.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (145 samples, 0.73%)</title><rect x="42.3" y="243.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.3" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.04%)</title><rect x="42.4" y="227.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="45.4" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.03%)</title><rect x="42.8" y="227.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="45.8" y="238.0"></text>
</g>
<g>
<title>java.util.TreeSet (6 samples, 0.03%)</title><rect x="43.2" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="46.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.05%)</title><rect x="43.5" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.05%)</title><rect x="43.5" y="211.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.5" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.get$Lambda (9 samples, 0.05%)</title><rect x="43.5" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.5" y="206.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$168 (9 samples, 0.05%)</title><rect x="43.5" y="179.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="46.5" y="190.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (6 samples, 0.03%)</title><rect x="44.1" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.1" y="238.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (6 samples, 0.03%)</title><rect x="44.1" y="211.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="47.1" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (100 samples, 0.50%)</title><rect x="44.4" y="227.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.4" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (100 samples, 0.50%)</title><rect x="44.4" y="211.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (100 samples, 0.50%)</title><rect x="44.4" y="195.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.10%)</title><rect x="44.4" y="179.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.10%)</title><rect x="44.4" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.4" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.get$Lambda (20 samples, 0.10%)</title><rect x="44.4" y="147.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.4" y="158.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$177 (20 samples, 0.10%)</title><rect x="44.4" y="131.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="47.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (13 samples, 0.07%)</title><rect x="45.6" y="179.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.6" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (13 samples, 0.07%)</title><rect x="45.6" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.6" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (13 samples, 0.07%)</title><rect x="45.6" y="147.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.07%)</title><rect x="45.6" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.07%)</title><rect x="45.6" y="115.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.07%)</title><rect x="45.6" y="99.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.6" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.07%)</title><rect x="45.6" y="83.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.07%)</title><rect x="45.6" y="67.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.6" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.07%)</title><rect x="45.6" y="51.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="48.6" y="62.0"></text>
</g>
<g>
<title>java/util/List.copyOf (41 samples, 0.21%)</title><rect x="46.4" y="179.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.4" y="190.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (41 samples, 0.21%)</title><rect x="46.4" y="163.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (28 samples, 0.14%)</title><rect x="46.4" y="147.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.14%)</title><rect x="46.4" y="131.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.4" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.14%)</title><rect x="46.4" y="115.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="49.4" y="126.0"></text>
</g>
<g>
<title>java/util/List.of (13 samples, 0.07%)</title><rect x="48.0" y="147.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.0" y="158.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (13 samples, 0.07%)</title><rect x="48.0" y="131.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="51.0" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.13%)</title><rect x="48.8" y="179.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.8" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (26 samples, 0.13%)</title><rect x="48.8" y="163.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="51.8" y="174.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (9 samples, 0.05%)</title><rect x="50.4" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.4" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.05%)</title><rect x="50.4" y="211.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="53.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (14 samples, 0.07%)</title><rect x="50.9" y="291.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.06%)</title><rect x="51.1" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (11 samples, 0.06%)</title><rect x="51.1" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702940637.invoke (11 samples, 0.06%)</title><rect x="51.1" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.06%)</title><rect x="51.1" y="227.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.03%)</title><rect x="51.1" y="211.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.03%)</title><rect x="51.1" y="195.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="54.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.03%)</title><rect x="51.4" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.03%)</title><rect x="51.4" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.4" y="206.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="51.4" y="179.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="54.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (18 samples, 0.09%)</title><rect x="51.7" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (18 samples, 0.09%)</title><rect x="51.7" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.09%)</title><rect x="51.7" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (18 samples, 0.09%)</title><rect x="51.7" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702940637.invoke (18 samples, 0.09%)</title><rect x="51.7" y="227.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.09%)</title><rect x="51.7" y="211.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.04%)</title><rect x="51.7" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.7" y="206.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.04%)</title><rect x="51.7" y="179.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="54.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.06%)</title><rect x="52.2" y="195.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.06%)</title><rect x="52.2" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.2" y="190.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.06%)</title><rect x="52.2" y="163.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="55.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (45 samples, 0.23%)</title><rect x="52.8" y="291.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.8" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.06%)</title><rect x="52.8" y="275.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="55.8" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (15 samples, 0.08%)</title><rect x="53.5" y="275.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.08%)</title><rect x="53.5" y="259.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="56.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (18 samples, 0.09%)</title><rect x="54.4" y="275.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.4" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 0.09%)</title><rect x="54.4" y="259.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="57.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.07%)</title><rect x="55.5" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.07%)</title><rect x="55.5" y="323.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.07%)</title><rect x="55.5" y="307.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="58.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (23 samples, 0.12%)</title><rect x="56.3" y="371.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="59.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.03%)</title><rect x="57.6" y="371.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="60.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (90 samples, 0.45%)</title><rect x="57.9" y="371.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="57.9" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="57.9" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (13 samples, 0.07%)</title><rect x="58.2" y="355.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="61.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (5 samples, 0.03%)</title><rect x="59.0" y="355.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="62.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (7 samples, 0.04%)</title><rect x="59.3" y="355.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="62.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (36 samples, 0.18%)</title><rect x="59.7" y="355.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.18%)</title><rect x="59.7" y="339.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.18%)</title><rect x="59.7" y="323.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (36 samples, 0.18%)</title><rect x="59.7" y="307.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (36 samples, 0.18%)</title><rect x="59.7" y="291.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (36 samples, 0.18%)</title><rect x="59.7" y="275.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (36 samples, 0.18%)</title><rect x="59.7" y="259.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (36 samples, 0.18%)</title><rect x="59.7" y="243.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (36 samples, 0.18%)</title><rect x="59.7" y="227.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.07%)</title><rect x="59.7" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.07%)</title><rect x="59.7" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/1388728102.get$Lambda (12 samples, 0.06%)</title><rect x="59.8" y="179.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$352 (12 samples, 0.06%)</title><rect x="59.8" y="163.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="62.8" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (10 samples, 0.05%)</title><rect x="60.5" y="211.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="63.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (13 samples, 0.07%)</title><rect x="61.1" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (13 samples, 0.07%)</title><rect x="61.1" y="195.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.1" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (5 samples, 0.03%)</title><rect x="61.1" y="179.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="64.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (8 samples, 0.04%)</title><rect x="61.4" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (8 samples, 0.04%)</title><rect x="61.4" y="163.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="64.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (17 samples, 0.09%)</title><rect x="61.9" y="355.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.9" y="366.0"></text>
</g>
<g>
<title>java.util.HashMap (10 samples, 0.05%)</title><rect x="62.0" y="339.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="65.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.03%)</title><rect x="62.6" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.6" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.03%)</title><rect x="62.6" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.6" y="334.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="62.6" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="65.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (7 samples, 0.04%)</title><rect x="62.9" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.04%)</title><rect x="62.9" y="339.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="65.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.07%)</title><rect x="63.3" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.07%)</title><rect x="63.3" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.07%)</title><rect x="63.3" y="451.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="66.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17 samples, 0.09%)</title><rect x="64.1" y="515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (17 samples, 0.09%)</title><rect x="64.1" y="499.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (5 samples, 0.03%)</title><rect x="64.1" y="483.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="67.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.06%)</title><rect x="64.4" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.06%)</title><rect x="64.4" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.06%)</title><rect x="64.4" y="451.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="67.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (338 samples, 1.71%)</title><rect x="65.1" y="515.0" width="20.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.04%)</title><rect x="65.1" y="499.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.04%)</title><rect x="65.1" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$329/106537356.get$Lambda (6 samples, 0.03%)</title><rect x="65.1" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$329 (6 samples, 0.03%)</title><rect x="65.1" y="451.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="68.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (14 samples, 0.07%)</title><rect x="65.6" y="499.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (14 samples, 0.07%)</title><rect x="65.6" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$331/981882798.apply (11 samples, 0.06%)</title><rect x="65.6" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (11 samples, 0.06%)</title><rect x="65.6" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (11 samples, 0.06%)</title><rect x="65.6" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.06%)</title><rect x="65.6" y="419.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="68.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (15 samples, 0.08%)</title><rect x="66.4" y="499.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (15 samples, 0.08%)</title><rect x="66.4" y="483.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.08%)</title><rect x="66.4" y="467.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.08%)</title><rect x="66.4" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.08%)</title><rect x="66.4" y="435.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="69.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (301 samples, 1.52%)</title><rect x="67.3" y="499.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (301 samples, 1.52%)</title><rect x="67.3" y="483.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (25 samples, 0.13%)</title><rect x="67.3" y="467.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="70.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (265 samples, 1.34%)</title><rect x="68.8" y="467.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.8" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList (7 samples, 0.04%)</title><rect x="68.9" y="451.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="71.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (9 samples, 0.05%)</title><rect x="69.3" y="451.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="72.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (17 samples, 0.09%)</title><rect x="69.8" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.8" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (17 samples, 0.09%)</title><rect x="69.8" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.8" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (17 samples, 0.09%)</title><rect x="69.8" y="419.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="72.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (6 samples, 0.03%)</title><rect x="70.9" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (6 samples, 0.03%)</title><rect x="70.9" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="73.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (21 samples, 0.11%)</title><rect x="71.2" y="451.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="74.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (17 samples, 0.09%)</title><rect x="72.5" y="451.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="75.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (16 samples, 0.08%)</title><rect x="73.5" y="451.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="76.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.07%)</title><rect x="74.4" y="451.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="77.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (77 samples, 0.39%)</title><rect x="75.2" y="451.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (8 samples, 0.04%)</title><rect x="75.2" y="435.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="78.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (8 samples, 0.04%)</title><rect x="75.8" y="435.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="78.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="76.4" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.04%)</title><rect x="76.4" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (5 samples, 0.03%)</title><rect x="77.0" y="435.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="80.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.05%)</title><rect x="77.3" y="435.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="80.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (32 samples, 0.16%)</title><rect x="77.9" y="435.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (7 samples, 0.04%)</title><rect x="77.9" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="80.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (7 samples, 0.04%)</title><rect x="78.3" y="419.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="81.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (16 samples, 0.08%)</title><rect x="78.8" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.04%)</title><rect x="78.8" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="81.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (5 samples, 0.03%)</title><rect x="79.5" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="82.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (42 samples, 0.21%)</title><rect x="79.8" y="451.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (7 samples, 0.04%)</title><rect x="79.8" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="82.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (5 samples, 0.03%)</title><rect x="80.2" y="435.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="83.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (6 samples, 0.03%)</title><rect x="80.6" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (6 samples, 0.03%)</title><rect x="80.6" y="419.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="83.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (22 samples, 0.11%)</title><rect x="81.0" y="435.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (11 samples, 0.06%)</title><rect x="81.2" y="419.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="84.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (7 samples, 0.04%)</title><rect x="81.9" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (15 samples, 0.08%)</title><rect x="82.3" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (15 samples, 0.08%)</title><rect x="82.3" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (5 samples, 0.03%)</title><rect x="82.3" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="85.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (10 samples, 0.05%)</title><rect x="82.6" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.05%)</title><rect x="82.6" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.05%)</title><rect x="82.6" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (10 samples, 0.05%)</title><rect x="82.6" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.05%)</title><rect x="82.6" y="355.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="85.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (23 samples, 0.12%)</title><rect x="83.2" y="451.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.2" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (19 samples, 0.10%)</title><rect x="83.4" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$248/502041341.run (19 samples, 0.10%)</title><rect x="83.4" y="419.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (19 samples, 0.10%)</title><rect x="83.4" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.4" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (15 samples, 0.08%)</title><rect x="83.7" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.7" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (10 samples, 0.05%)</title><rect x="83.7" y="371.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="86.7" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (5 samples, 0.03%)</title><rect x="84.2" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.03%)</title><rect x="84.2" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.03%)</title><rect x="84.2" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (5 samples, 0.03%)</title><rect x="84.2" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.2" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (5 samples, 0.03%)</title><rect x="84.2" y="307.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="87.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (11 samples, 0.06%)</title><rect x="84.5" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.06%)</title><rect x="84.5" y="451.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="87.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (12 samples, 0.06%)</title><rect x="85.2" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (12 samples, 0.06%)</title><rect x="85.2" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.06%)</title><rect x="85.2" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.2" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (12 samples, 0.06%)</title><rect x="85.2" y="515.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="88.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (41 samples, 0.21%)</title><rect x="85.9" y="563.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (35 samples, 0.18%)</title><rect x="85.9" y="547.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="88.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (6 samples, 0.03%)</title><rect x="88.0" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (6 samples, 0.03%)</title><rect x="88.0" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.0" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.03%)</title><rect x="88.0" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.0" y="526.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (6 samples, 0.03%)</title><rect x="88.0" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.0" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.03%)</title><rect x="88.0" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.0" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.03%)</title><rect x="88.0" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.0" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (6 samples, 0.03%)</title><rect x="88.0" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.0" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.03%)</title><rect x="88.0" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.0" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (6 samples, 0.03%)</title><rect x="88.0" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.0" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.create (6 samples, 0.03%)</title><rect x="88.0" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.0" y="414.0"></text>
</g>
<g>
<title>java.time.Instant (6 samples, 0.03%)</title><rect x="88.0" y="387.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="91.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,038 samples, 5.24%)</title><rect x="88.4" y="627.0" width="61.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.4" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,038 samples, 5.24%)</title><rect x="88.4" y="611.0" width="61.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.4" y="622.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.accept (1,035 samples, 5.22%)</title><rect x="88.4" y="595.0" width="61.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.4" y="606.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (1,035 samples, 5.22%)</title><rect x="88.4" y="579.0" width="61.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.4" y="590.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (451 samples, 2.28%)</title><rect x="88.4" y="563.0" width="26.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.4" y="574.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (451 samples, 2.28%)</title><rect x="88.4" y="547.0" width="26.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.4" y="558.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (451 samples, 2.28%)</title><rect x="88.4" y="531.0" width="26.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.4" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (336 samples, 1.70%)</title><rect x="88.4" y="515.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.4" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (336 samples, 1.70%)</title><rect x="88.4" y="499.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.4" y="510.0"></text>
</g>
<g>
<title>byte[] (336 samples, 1.70%)</title><rect x="88.4" y="483.0" width="20.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="91.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (115 samples, 0.58%)</title><rect x="108.4" y="515.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.4" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (115 samples, 0.58%)</title><rect x="108.4" y="499.0" width="6.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="111.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (584 samples, 2.95%)</title><rect x="115.2" y="563.0" width="34.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.2" y="574.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1437941060.linkToTargetMethod (219 samples, 1.11%)</title><rect x="115.2" y="547.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1281615336.invoke (219 samples, 1.11%)</title><rect x="115.2" y="531.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (219 samples, 1.11%)</title><rect x="115.2" y="515.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (67 samples, 0.34%)</title><rect x="115.2" y="499.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.34%)</title><rect x="115.2" y="483.0" width="4.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="118.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (152 samples, 0.77%)</title><rect x="119.2" y="499.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (152 samples, 0.77%)</title><rect x="119.2" y="483.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.2" y="494.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.77%)</title><rect x="119.2" y="467.0" width="9.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="122.2" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (65 samples, 0.33%)</title><rect x="128.3" y="547.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="131.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (300 samples, 1.51%)</title><rect x="132.1" y="547.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.1" y="558.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.63%)</title><rect x="132.1" y="531.0" width="7.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="135.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (88 samples, 0.44%)</title><rect x="139.6" y="531.0" width="5.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="142.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (87 samples, 0.44%)</title><rect x="144.8" y="531.0" width="5.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="147.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$607/75241041.get (3,836 samples, 19.36%)</title><rect x="150.2" y="643.0" width="228.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.2" y="654.0">ru/mail/polis/service/re1nex/A..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$get$13 (3,836 samples, 19.36%)</title><rect x="150.2" y="627.0" width="228.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.2" y="638.0">ru/mail/polis/service/re1nex/A..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (99 samples, 0.50%)</title><rect x="150.2" y="611.0" width="5.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="153.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (3,160 samples, 15.95%)</title><rect x="156.1" y="611.0" width="188.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.1" y="622.0">ru/mail/polis/dao/DAO.ge..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (463 samples, 2.34%)</title><rect x="156.1" y="595.0" width="27.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.1" y="606.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (157 samples, 0.79%)</title><rect x="156.1" y="579.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (157 samples, 0.79%)</title><rect x="156.1" y="563.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.1" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (157 samples, 0.79%)</title><rect x="156.1" y="547.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (157 samples, 0.79%)</title><rect x="156.1" y="531.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (157 samples, 0.79%)</title><rect x="156.1" y="515.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (157 samples, 0.79%)</title><rect x="156.1" y="499.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$654/245478249.getAsBoolean (157 samples, 0.79%)</title><rect x="156.1" y="483.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (157 samples, 0.79%)</title><rect x="156.1" y="467.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (157 samples, 0.79%)</title><rect x="156.1" y="451.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (84 samples, 0.42%)</title><rect x="156.1" y="435.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (84 samples, 0.42%)</title><rect x="156.1" y="419.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.1" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (84 samples, 0.42%)</title><rect x="156.1" y="403.0" width="5.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="159.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (73 samples, 0.37%)</title><rect x="161.1" y="435.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$623/1240334558.apply (73 samples, 0.37%)</title><rect x="161.1" y="419.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (73 samples, 0.37%)</title><rect x="161.1" y="403.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="164.1" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (73 samples, 0.37%)</title><rect x="161.1" y="387.0" width="4.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="164.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$660/1474543491.apply (306 samples, 1.54%)</title><rect x="165.4" y="579.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (306 samples, 1.54%)</title><rect x="165.4" y="563.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (306 samples, 1.54%)</title><rect x="165.4" y="547.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="168.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (306 samples, 1.54%)</title><rect x="165.4" y="531.0" width="18.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="168.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (170 samples, 0.86%)</title><rect x="183.6" y="595.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (170 samples, 0.86%)</title><rect x="183.6" y="579.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (170 samples, 0.86%)</title><rect x="183.6" y="563.0" width="10.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="186.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (2,527 samples, 12.75%)</title><rect x="193.7" y="595.0" width="150.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.7" y="606.0">ru/mail/polis/dao/r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,057 samples, 5.33%)</title><rect x="193.7" y="579.0" width="63.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.7" y="590.0">com/go..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (60 samples, 0.30%)</title><rect x="193.7" y="563.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="196.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (997 samples, 5.03%)</title><rect x="197.3" y="563.0" width="59.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.3" y="574.0">com/go..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (75 samples, 0.38%)</title><rect x="197.3" y="547.0" width="4.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="200.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (61 samples, 0.31%)</title><rect x="201.8" y="547.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.8" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (61 samples, 0.31%)</title><rect x="201.8" y="531.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="204.8" y="542.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (80 samples, 0.40%)</title><rect x="205.4" y="547.0" width="4.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="208.4" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (63 samples, 0.32%)</title><rect x="210.2" y="547.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.2" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (63 samples, 0.32%)</title><rect x="210.2" y="531.0" width="3.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="213.2" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (718 samples, 3.62%)</title><rect x="213.9" y="547.0" width="42.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.9" y="558.0">java..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (718 samples, 3.62%)</title><rect x="213.9" y="531.0" width="42.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.9" y="542.0">java..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (718 samples, 3.62%)</title><rect x="213.9" y="515.0" width="42.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.9" y="526.0">java..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (162 samples, 0.82%)</title><rect x="213.9" y="499.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$654/245478249.getAsBoolean (162 samples, 0.82%)</title><rect x="213.9" y="483.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (162 samples, 0.82%)</title><rect x="213.9" y="467.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (162 samples, 0.82%)</title><rect x="213.9" y="451.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (82 samples, 0.41%)</title><rect x="213.9" y="435.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (82 samples, 0.41%)</title><rect x="213.9" y="419.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.9" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (82 samples, 0.41%)</title><rect x="213.9" y="403.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="216.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (80 samples, 0.40%)</title><rect x="218.8" y="435.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$623/1240334558.apply (80 samples, 0.40%)</title><rect x="218.8" y="419.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (80 samples, 0.40%)</title><rect x="218.8" y="403.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.8" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (80 samples, 0.40%)</title><rect x="218.8" y="387.0" width="4.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="221.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (556 samples, 2.81%)</title><rect x="223.6" y="499.0" width="33.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.6" y="510.0">ja..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (117 samples, 0.59%)</title><rect x="223.6" y="483.0" width="6.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="226.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (102 samples, 0.51%)</title><rect x="230.5" y="483.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (102 samples, 0.51%)</title><rect x="230.5" y="467.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$636/770343537.get$Lambda (44 samples, 0.22%)</title><rect x="230.5" y="451.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.5" y="462.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$636 (44 samples, 0.22%)</title><rect x="230.5" y="435.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="233.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$654/245478249.get$Lambda (58 samples, 0.29%)</title><rect x="233.2" y="451.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.2" y="462.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$654 (58 samples, 0.29%)</title><rect x="233.2" y="435.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="236.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (66 samples, 0.33%)</title><rect x="236.6" y="483.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (66 samples, 0.33%)</title><rect x="236.6" y="467.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.6" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (66 samples, 0.33%)</title><rect x="236.6" y="451.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="239.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (271 samples, 1.37%)</title><rect x="240.5" y="483.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (271 samples, 1.37%)</title><rect x="240.5" y="467.0" width="16.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="243.5" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (61 samples, 0.31%)</title><rect x="256.7" y="579.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="259.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (104 samples, 0.52%)</title><rect x="260.3" y="579.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (104 samples, 0.52%)</title><rect x="260.3" y="563.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (104 samples, 0.52%)</title><rect x="260.3" y="547.0" width="6.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="263.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.39%)</title><rect x="266.5" y="579.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.39%)</title><rect x="266.5" y="563.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$629/91388973.get$Lambda (78 samples, 0.39%)</title><rect x="266.5" y="547.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.5" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$629 (78 samples, 0.39%)</title><rect x="266.5" y="531.0" width="4.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="269.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (79 samples, 0.40%)</title><rect x="271.2" y="579.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.2" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (79 samples, 0.40%)</title><rect x="271.2" y="563.0" width="4.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="274.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (10 samples, 0.05%)</title><rect x="275.9" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (10 samples, 0.05%)</title><rect x="275.9" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (10 samples, 0.05%)</title><rect x="275.9" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.9" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.05%)</title><rect x="275.9" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.9" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (10 samples, 0.05%)</title><rect x="275.9" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.9" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (7 samples, 0.04%)</title><rect x="275.9" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.9" y="510.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (7 samples, 0.04%)</title><rect x="275.9" y="483.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="278.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (169 samples, 0.85%)</title><rect x="276.4" y="579.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (169 samples, 0.85%)</title><rect x="276.4" y="563.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (169 samples, 0.85%)</title><rect x="276.4" y="547.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (169 samples, 0.85%)</title><rect x="276.4" y="531.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.4" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (169 samples, 0.85%)</title><rect x="276.4" y="515.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (169 samples, 0.85%)</title><rect x="276.4" y="499.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (169 samples, 0.85%)</title><rect x="276.4" y="483.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (169 samples, 0.85%)</title><rect x="276.4" y="467.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$654/245478249.getAsBoolean (169 samples, 0.85%)</title><rect x="276.4" y="451.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (169 samples, 0.85%)</title><rect x="276.4" y="435.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (169 samples, 0.85%)</title><rect x="276.4" y="419.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (88 samples, 0.44%)</title><rect x="276.4" y="403.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (88 samples, 0.44%)</title><rect x="276.4" y="387.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.4" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (88 samples, 0.44%)</title><rect x="276.4" y="371.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="279.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (81 samples, 0.41%)</title><rect x="281.7" y="403.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$623/1240334558.apply (81 samples, 0.41%)</title><rect x="281.7" y="387.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (81 samples, 0.41%)</title><rect x="281.7" y="371.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.7" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (81 samples, 0.41%)</title><rect x="281.7" y="355.0" width="4.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="284.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (969 samples, 4.89%)</title><rect x="286.5" y="579.0" width="57.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.5" y="590.0">ru/mai..</text>
</g>
<g>
<title>java/util/Collection.stream (302 samples, 1.52%)</title><rect x="286.5" y="563.0" width="18.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (99 samples, 0.50%)</title><rect x="286.5" y="547.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (99 samples, 0.50%)</title><rect x="286.5" y="531.0" width="5.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="289.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (203 samples, 1.02%)</title><rect x="292.4" y="547.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.4" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (203 samples, 1.02%)</title><rect x="292.4" y="531.0" width="12.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="295.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (47 samples, 0.24%)</title><rect x="304.5" y="563.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (47 samples, 0.24%)</title><rect x="304.5" y="547.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="307.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (128 samples, 0.65%)</title><rect x="307.3" y="563.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (128 samples, 0.65%)</title><rect x="307.3" y="547.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (128 samples, 0.65%)</title><rect x="307.3" y="531.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (128 samples, 0.65%)</title><rect x="307.3" y="515.0" width="7.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="310.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (279 samples, 1.41%)</title><rect x="314.9" y="563.0" width="16.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.9" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (78 samples, 0.39%)</title><rect x="314.9" y="547.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.9" y="558.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (78 samples, 0.39%)</title><rect x="314.9" y="531.0" width="4.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="317.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (201 samples, 1.01%)</title><rect x="319.6" y="547.0" width="11.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.25%)</title><rect x="319.6" y="531.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.25%)</title><rect x="319.6" y="515.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$626/216827783.get$Lambda (49 samples, 0.25%)</title><rect x="319.6" y="499.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.6" y="510.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$626 (49 samples, 0.25%)</title><rect x="319.6" y="483.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="322.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (152 samples, 0.77%)</title><rect x="322.5" y="531.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.5" y="542.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (152 samples, 0.77%)</title><rect x="322.5" y="515.0" width="9.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="325.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (213 samples, 1.07%)</title><rect x="331.5" y="563.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.5" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (213 samples, 1.07%)</title><rect x="331.5" y="547.0" width="12.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="334.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Value.getData (155 samples, 0.78%)</title><rect x="344.2" y="611.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (155 samples, 0.78%)</title><rect x="344.2" y="595.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.2" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (155 samples, 0.78%)</title><rect x="344.2" y="579.0" width="9.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="347.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (90 samples, 0.45%)</title><rect x="353.4" y="611.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.4" y="622.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.45%)</title><rect x="353.4" y="595.0" width="5.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="356.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (218 samples, 1.10%)</title><rect x="358.8" y="611.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (90 samples, 0.45%)</title><rect x="358.8" y="595.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (90 samples, 0.45%)</title><rect x="358.8" y="579.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="361.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (90 samples, 0.45%)</title><rect x="358.8" y="563.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (90 samples, 0.45%)</title><rect x="358.8" y="547.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.8" y="558.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.45%)</title><rect x="358.8" y="531.0" width="5.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="361.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (128 samples, 0.65%)</title><rect x="364.2" y="595.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (128 samples, 0.65%)</title><rect x="364.2" y="579.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.2" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (128 samples, 0.65%)</title><rect x="364.2" y="563.0" width="7.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="367.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.&lt;init&gt; (114 samples, 0.58%)</title><rect x="371.8" y="611.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.&lt;init&gt; (114 samples, 0.58%)</title><rect x="371.8" y="595.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.8" y="606.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.58%)</title><rect x="371.8" y="579.0" width="6.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="374.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (162 samples, 0.82%)</title><rect x="378.6" y="659.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (23 samples, 0.12%)</title><rect x="378.6" y="643.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (23 samples, 0.12%)</title><rect x="378.6" y="627.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (23 samples, 0.12%)</title><rect x="378.6" y="611.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (23 samples, 0.12%)</title><rect x="378.6" y="595.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="381.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 0.12%)</title><rect x="378.6" y="579.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.accept (23 samples, 0.12%)</title><rect x="378.6" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (23 samples, 0.12%)</title><rect x="378.6" y="547.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (23 samples, 0.12%)</title><rect x="378.6" y="531.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.12%)</title><rect x="378.6" y="515.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.6" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.12%)</title><rect x="378.6" y="499.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="381.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (139 samples, 0.70%)</title><rect x="379.9" y="643.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (139 samples, 0.70%)</title><rect x="379.9" y="627.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$226/1373714853.accept (139 samples, 0.70%)</title><rect x="379.9" y="611.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$15 (139 samples, 0.70%)</title><rect x="379.9" y="595.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (29 samples, 0.15%)</title><rect x="379.9" y="579.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (29 samples, 0.15%)</title><rect x="379.9" y="563.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (29 samples, 0.15%)</title><rect x="379.9" y="547.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.09%)</title><rect x="379.9" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.9" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (17 samples, 0.09%)</title><rect x="379.9" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.9" y="526.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.09%)</title><rect x="379.9" y="499.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="382.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.06%)</title><rect x="380.9" y="531.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.9" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.06%)</title><rect x="380.9" y="515.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="383.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$622/1830881346.mergeResponse (110 samples, 0.56%)</title><rect x="381.7" y="579.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$3 (110 samples, 0.56%)</title><rect x="381.7" y="563.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergeGetResponseBuilders (110 samples, 0.56%)</title><rect x="381.7" y="547.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.7" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (10 samples, 0.05%)</title><rect x="381.7" y="531.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="384.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.getResponseFromValues (33 samples, 0.17%)</title><rect x="382.3" y="531.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (33 samples, 0.17%)</title><rect x="382.3" y="515.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.3" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.04%)</title><rect x="382.3" y="499.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="385.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (26 samples, 0.13%)</title><rect x="382.7" y="499.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.7" y="510.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.06%)</title><rect x="382.7" y="483.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="385.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.04%)</title><rect x="383.3" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="386.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.04%)</title><rect x="383.8" y="483.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="386.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (67 samples, 0.34%)</title><rect x="384.2" y="531.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1437941060.linkToTargetMethod (31 samples, 0.16%)</title><rect x="384.2" y="515.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1281615336.invoke (31 samples, 0.16%)</title><rect x="384.2" y="499.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.16%)</title><rect x="384.2" y="483.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.07%)</title><rect x="384.2" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.07%)</title><rect x="384.2" y="451.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="387.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.09%)</title><rect x="385.1" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.09%)</title><rect x="385.1" y="451.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.1" y="462.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.09%)</title><rect x="385.1" y="435.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="388.1" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.03%)</title><rect x="386.1" y="515.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="389.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (31 samples, 0.16%)</title><rect x="386.4" y="515.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.4" y="526.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.07%)</title><rect x="386.4" y="499.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="389.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.05%)</title><rect x="387.2" y="499.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="390.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.04%)</title><rect x="387.8" y="499.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="390.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (337 samples, 1.70%)</title><rect x="388.2" y="659.0" width="20.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (293 samples, 1.48%)</title><rect x="388.2" y="643.0" width="17.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (291 samples, 1.47%)</title><rect x="388.2" y="627.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (291 samples, 1.47%)</title><rect x="388.2" y="611.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (291 samples, 1.47%)</title><rect x="388.2" y="595.0" width="17.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="391.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (44 samples, 0.22%)</title><rect x="405.7" y="643.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (43 samples, 0.22%)</title><rect x="405.7" y="627.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (43 samples, 0.22%)</title><rect x="405.7" y="611.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (43 samples, 0.22%)</title><rect x="405.7" y="595.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="408.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$407/438359882.run (126 samples, 0.64%)</title><rect x="408.3" y="659.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (126 samples, 0.64%)</title><rect x="408.3" y="643.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (126 samples, 0.64%)</title><rect x="408.3" y="627.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (126 samples, 0.64%)</title><rect x="408.3" y="611.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (126 samples, 0.64%)</title><rect x="408.3" y="595.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (126 samples, 0.64%)</title><rect x="408.3" y="579.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (126 samples, 0.64%)</title><rect x="408.3" y="563.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (126 samples, 0.64%)</title><rect x="408.3" y="547.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (126 samples, 0.64%)</title><rect x="408.3" y="531.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (126 samples, 0.64%)</title><rect x="408.3" y="515.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (126 samples, 0.64%)</title><rect x="408.3" y="499.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (111 samples, 0.56%)</title><rect x="408.3" y="483.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.08%)</title><rect x="408.3" y="467.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.08%)</title><rect x="408.3" y="451.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$412/1107824211.get$Lambda (10 samples, 0.05%)</title><rect x="408.3" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$412 (10 samples, 0.05%)</title><rect x="408.3" y="419.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="411.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$442/1751367345.get$Lambda (5 samples, 0.03%)</title><rect x="408.9" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$442 (5 samples, 0.03%)</title><rect x="408.9" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="411.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (96 samples, 0.48%)</title><rect x="409.2" y="467.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="412.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (12 samples, 0.06%)</title><rect x="409.2" y="451.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="412.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (84 samples, 0.42%)</title><rect x="409.9" y="451.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (84 samples, 0.42%)</title><rect x="409.9" y="435.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (84 samples, 0.42%)</title><rect x="409.9" y="419.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (36 samples, 0.18%)</title><rect x="409.9" y="403.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (20 samples, 0.10%)</title><rect x="409.9" y="387.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="412.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/725906402.apply (15 samples, 0.08%)</title><rect x="411.1" y="387.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (15 samples, 0.08%)</title><rect x="411.1" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (15 samples, 0.08%)</title><rect x="411.1" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (11 samples, 0.06%)</title><rect x="411.3" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (9 samples, 0.05%)</title><rect x="411.4" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (9 samples, 0.05%)</title><rect x="411.4" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="411.7" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="411.7" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.03%)</title><rect x="411.7" y="259.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="414.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (48 samples, 0.24%)</title><rect x="412.0" y="403.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (48 samples, 0.24%)</title><rect x="412.0" y="387.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$383/847257842.apply (48 samples, 0.24%)</title><rect x="412.0" y="371.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (48 samples, 0.24%)</title><rect x="412.0" y="355.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (48 samples, 0.24%)</title><rect x="412.0" y="339.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$229/148200039.apply (48 samples, 0.24%)</title><rect x="412.0" y="323.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (48 samples, 0.24%)</title><rect x="412.0" y="307.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (20 samples, 0.10%)</title><rect x="412.2" y="291.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (20 samples, 0.10%)</title><rect x="412.2" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (6 samples, 0.03%)</title><rect x="412.2" y="259.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="415.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.07%)</title><rect x="412.6" y="259.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.07%)</title><rect x="412.6" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.07%)</title><rect x="412.6" y="227.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="415.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (25 samples, 0.13%)</title><rect x="413.4" y="291.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (17 samples, 0.09%)</title><rect x="413.4" y="275.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (8 samples, 0.04%)</title><rect x="413.4" y="259.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="416.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (9 samples, 0.05%)</title><rect x="413.9" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (9 samples, 0.05%)</title><rect x="413.9" y="243.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.05%)</title><rect x="413.9" y="227.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="416.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.04%)</title><rect x="414.4" y="275.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (6 samples, 0.03%)</title><rect x="414.4" y="259.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="417.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (15 samples, 0.08%)</title><rect x="414.9" y="483.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (15 samples, 0.08%)</title><rect x="414.9" y="467.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (15 samples, 0.08%)</title><rect x="414.9" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (15 samples, 0.08%)</title><rect x="414.9" y="435.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (15 samples, 0.08%)</title><rect x="414.9" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.9" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (15 samples, 0.08%)</title><rect x="414.9" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.9" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (6 samples, 0.03%)</title><rect x="414.9" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.9" y="398.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (6 samples, 0.03%)</title><rect x="414.9" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="417.9" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (9 samples, 0.05%)</title><rect x="415.2" y="387.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.2" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (9 samples, 0.05%)</title><rect x="415.2" y="371.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="418.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,306 samples, 6.59%)</title><rect x="415.8" y="659.0" width="77.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.8" y="670.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,306 samples, 6.59%)</title><rect x="415.8" y="643.0" width="77.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.8" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,092 samples, 5.51%)</title><rect x="415.8" y="627.0" width="65.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.8" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (1,092 samples, 5.51%)</title><rect x="415.8" y="611.0" width="65.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.8" y="622.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,092 samples, 5.51%)</title><rect x="415.8" y="595.0" width="65.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.8" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (26 samples, 0.13%)</title><rect x="415.8" y="579.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (26 samples, 0.13%)</title><rect x="415.8" y="563.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (26 samples, 0.13%)</title><rect x="415.8" y="547.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="418.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (26 samples, 0.13%)</title><rect x="415.8" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1437941060.linkToTargetMethod (16 samples, 0.08%)</title><rect x="415.8" y="515.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.invoke (16 samples, 0.08%)</title><rect x="415.8" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.08%)</title><rect x="415.8" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.08%)</title><rect x="415.8" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.08%)</title><rect x="415.8" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.8" y="462.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.08%)</title><rect x="415.8" y="435.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="418.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (10 samples, 0.05%)</title><rect x="416.7" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.05%)</title><rect x="416.7" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.05%)</title><rect x="416.7" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$408/1005179682.get$Lambda (10 samples, 0.05%)</title><rect x="416.7" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$408 (10 samples, 0.05%)</title><rect x="416.7" y="451.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="419.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,066 samples, 5.38%)</title><rect x="417.3" y="579.0" width="63.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.3" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,066 samples, 5.38%)</title><rect x="417.3" y="563.0" width="63.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.3" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,066 samples, 5.38%)</title><rect x="417.3" y="547.0" width="63.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.3" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,066 samples, 5.38%)</title><rect x="417.3" y="531.0" width="63.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.3" y="542.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (491 samples, 2.48%)</title><rect x="417.3" y="515.0" width="29.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.3" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (491 samples, 2.48%)</title><rect x="417.3" y="499.0" width="29.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.3" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (491 samples, 2.48%)</title><rect x="417.3" y="483.0" width="29.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.3" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (491 samples, 2.48%)</title><rect x="417.3" y="467.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.3" y="478.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (491 samples, 2.48%)</title><rect x="417.3" y="451.0" width="29.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.3" y="462.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (491 samples, 2.48%)</title><rect x="417.3" y="435.0" width="29.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.3" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (491 samples, 2.48%)</title><rect x="417.3" y="419.0" width="29.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.3" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (479 samples, 2.42%)</title><rect x="417.3" y="403.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.3" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (479 samples, 2.42%)</title><rect x="417.3" y="387.0" width="28.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.3" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (469 samples, 2.37%)</title><rect x="417.3" y="371.0" width="28.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.3" y="382.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (6 samples, 0.03%)</title><rect x="417.3" y="355.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="420.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$209/1479888648.apply (441 samples, 2.23%)</title><rect x="417.7" y="355.0" width="26.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.7" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (441 samples, 2.23%)</title><rect x="417.7" y="339.0" width="26.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.7" y="350.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.05%)</title><rect x="417.7" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.05%)</title><rect x="417.7" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$513/1932888160.get$Lambda (9 samples, 0.05%)</title><rect x="417.7" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$513 (9 samples, 0.05%)</title><rect x="417.7" y="275.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="420.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (14 samples, 0.07%)</title><rect x="418.2" y="323.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (14 samples, 0.07%)</title><rect x="418.2" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.05%)</title><rect x="418.5" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.05%)</title><rect x="418.5" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="421.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.05%)</title><rect x="418.5" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="421.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (418 samples, 2.11%)</title><rect x="419.1" y="323.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.1" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.09%)</title><rect x="419.2" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.09%)</title><rect x="419.2" y="291.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (9 samples, 0.05%)</title><rect x="419.2" y="275.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="422.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.05%)</title><rect x="419.7" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.05%)</title><rect x="419.7" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.05%)</title><rect x="419.7" y="243.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="422.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (398 samples, 2.01%)</title><rect x="420.2" y="307.0" width="23.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.2" y="318.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (7 samples, 0.04%)</title><rect x="420.2" y="291.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="423.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (297 samples, 1.50%)</title><rect x="420.7" y="291.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.07%)</title><rect x="420.7" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.07%)</title><rect x="420.7" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$501/514946210.get$Lambda (8 samples, 0.04%)</title><rect x="420.7" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$501 (8 samples, 0.04%)</title><rect x="420.7" y="227.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="423.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$505/20416744.get$Lambda (5 samples, 0.03%)</title><rect x="421.1" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$505 (5 samples, 0.03%)</title><rect x="421.1" y="227.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="424.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1403353704.linkToTargetMethod (12 samples, 0.06%)</title><rect x="421.4" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1102993836.invokeStatic (12 samples, 0.06%)</title><rect x="421.4" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$465/1751998761.get$Lambda (12 samples, 0.06%)</title><rect x="421.4" y="243.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$465 (12 samples, 0.06%)</title><rect x="421.4" y="227.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="424.4" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (47 samples, 0.24%)</title><rect x="422.1" y="275.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (18 samples, 0.09%)</title><rect x="422.1" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.1" y="270.0"></text>
</g>
<g>
<title>java/util/List.spliterator (5 samples, 0.03%)</title><rect x="422.1" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.1" y="254.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (5 samples, 0.03%)</title><rect x="422.1" y="227.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="425.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.07%)</title><rect x="422.4" y="243.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (13 samples, 0.07%)</title><rect x="422.4" y="227.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="425.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (14 samples, 0.07%)</title><rect x="423.2" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.2" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.07%)</title><rect x="423.2" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (14 samples, 0.07%)</title><rect x="423.2" y="227.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.2" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (7 samples, 0.04%)</title><rect x="423.6" y="211.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (7 samples, 0.04%)</title><rect x="423.6" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.6" y="206.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (7 samples, 0.04%)</title><rect x="423.6" y="179.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.6" y="190.0"></text>
</g>
<g>
<title>java.util.OptionalLong (7 samples, 0.04%)</title><rect x="423.6" y="163.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="426.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (15 samples, 0.08%)</title><rect x="424.1" y="259.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (15 samples, 0.08%)</title><rect x="424.1" y="243.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="427.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.15%)</title><rect x="424.9" y="275.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.06%)</title><rect x="424.9" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.03%)</title><rect x="424.9" y="243.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="427.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="425.2" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.03%)</title><rect x="425.2" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.03%)</title><rect x="425.2" y="211.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="428.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.10%)</title><rect x="425.6" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.10%)</title><rect x="425.6" y="243.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (11 samples, 0.06%)</title><rect x="425.6" y="227.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="428.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="426.3" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="426.3" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.04%)</title><rect x="426.3" y="195.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="429.3" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (7 samples, 0.04%)</title><rect x="426.7" y="275.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="429.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.06%)</title><rect x="427.4" y="275.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="430.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (147 samples, 0.74%)</title><rect x="428.3" y="275.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$465/1751998761.run (147 samples, 0.74%)</title><rect x="428.3" y="259.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (147 samples, 0.74%)</title><rect x="428.3" y="243.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.11%)</title><rect x="428.3" y="227.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.11%)</title><rect x="428.3" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1005240389.get$Lambda (6 samples, 0.03%)</title><rect x="428.3" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.3" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$473 (6 samples, 0.03%)</title><rect x="428.3" y="179.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="431.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$481/548427899.get$Lambda (6 samples, 0.03%)</title><rect x="428.6" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.6" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$481 (6 samples, 0.03%)</title><rect x="428.6" y="179.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="431.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$492/150982051.get$Lambda (9 samples, 0.05%)</title><rect x="429.0" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.0" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$492 (9 samples, 0.05%)</title><rect x="429.0" y="179.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="432.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (13 samples, 0.07%)</title><rect x="429.5" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (13 samples, 0.07%)</title><rect x="429.5" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.5" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (8 samples, 0.04%)</title><rect x="429.5" y="195.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="432.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="430.0" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.03%)</title><rect x="430.0" y="179.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.03%)</title><rect x="430.0" y="163.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="433.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (7 samples, 0.04%)</title><rect x="430.3" y="227.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="433.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (13 samples, 0.07%)</title><rect x="430.7" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.07%)</title><rect x="430.7" y="211.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="433.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (21 samples, 0.11%)</title><rect x="431.5" y="227.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="434.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (21 samples, 0.11%)</title><rect x="431.5" y="211.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.04%)</title><rect x="431.5" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.04%)</title><rect x="431.5" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$495/1406044820.get$Lambda (8 samples, 0.04%)</title><rect x="431.5" y="163.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$495 (8 samples, 0.04%)</title><rect x="431.5" y="147.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="434.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (13 samples, 0.07%)</title><rect x="432.0" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (13 samples, 0.07%)</title><rect x="432.0" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (13 samples, 0.07%)</title><rect x="432.0" y="163.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.0" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (6 samples, 0.03%)</title><rect x="432.0" y="147.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="435.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.04%)</title><rect x="432.3" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.04%)</title><rect x="432.3" y="131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.3" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.04%)</title><rect x="432.3" y="115.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="435.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (26 samples, 0.13%)</title><rect x="432.7" y="227.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.13%)</title><rect x="432.7" y="211.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1822971466.invoke (26 samples, 0.13%)</title><rect x="432.7" y="195.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.13%)</title><rect x="432.7" y="179.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (6 samples, 0.03%)</title><rect x="432.7" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="432.7" y="147.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="435.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (20 samples, 0.10%)</title><rect x="433.1" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (20 samples, 0.10%)</title><rect x="433.1" y="147.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.1" y="158.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.10%)</title><rect x="433.1" y="131.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="436.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (46 samples, 0.23%)</title><rect x="434.3" y="227.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (17 samples, 0.09%)</title><rect x="434.3" y="211.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="437.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (29 samples, 0.15%)</title><rect x="435.3" y="211.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.15%)</title><rect x="435.3" y="195.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1822971466.invoke (29 samples, 0.15%)</title><rect x="435.3" y="179.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.15%)</title><rect x="435.3" y="163.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (26 samples, 0.13%)</title><rect x="435.5" y="147.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (26 samples, 0.13%)</title><rect x="435.5" y="131.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.5" y="142.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.13%)</title><rect x="435.5" y="115.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="438.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (22 samples, 0.11%)</title><rect x="437.0" y="275.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (22 samples, 0.11%)</title><rect x="437.0" y="259.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (22 samples, 0.11%)</title><rect x="437.0" y="243.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (22 samples, 0.11%)</title><rect x="437.0" y="227.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (11 samples, 0.06%)</title><rect x="437.0" y="211.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="440.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.06%)</title><rect x="437.7" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.06%)</title><rect x="437.7" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.7" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.06%)</title><rect x="437.7" y="179.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="440.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler.apply (94 samples, 0.47%)</title><rect x="438.3" y="291.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.3" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (65 samples, 0.33%)</title><rect x="438.5" y="275.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (50 samples, 0.25%)</title><rect x="438.5" y="259.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="441.5" y="270.0"></text>
</g>
<g>
<title>java/util/List.spliterator (17 samples, 0.09%)</title><rect x="438.5" y="243.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.5" y="254.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (17 samples, 0.09%)</title><rect x="438.5" y="227.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="441.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (33 samples, 0.17%)</title><rect x="439.5" y="243.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (33 samples, 0.17%)</title><rect x="439.5" y="227.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="442.5" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (15 samples, 0.08%)</title><rect x="441.4" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.08%)</title><rect x="441.4" y="243.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (15 samples, 0.08%)</title><rect x="441.4" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1820383114.get (13 samples, 0.07%)</title><rect x="441.4" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="444.4" y="222.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (13 samples, 0.07%)</title><rect x="441.4" y="195.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="444.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (23 samples, 0.12%)</title><rect x="442.6" y="275.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (8 samples, 0.04%)</title><rect x="442.6" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="445.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (15 samples, 0.08%)</title><rect x="443.0" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.0" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.03%)</title><rect x="443.0" y="243.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="446.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.05%)</title><rect x="443.3" y="243.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="446.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$384/1609426679.apply (22 samples, 0.11%)</title><rect x="443.9" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (22 samples, 0.11%)</title><rect x="443.9" y="339.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (10 samples, 0.05%)</title><rect x="443.9" y="323.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.9" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (10 samples, 0.05%)</title><rect x="443.9" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.9" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (10 samples, 0.05%)</title><rect x="443.9" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.9" y="302.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (10 samples, 0.05%)</title><rect x="443.9" y="275.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="446.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (12 samples, 0.06%)</title><rect x="444.5" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.06%)</title><rect x="444.5" y="307.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="447.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10 samples, 0.05%)</title><rect x="445.3" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.05%)</title><rect x="445.3" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="448.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$385/1826212424.apply (10 samples, 0.05%)</title><rect x="445.3" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (10 samples, 0.05%)</title><rect x="445.3" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (10 samples, 0.05%)</title><rect x="445.3" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.05%)</title><rect x="445.3" y="291.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="448.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$445/279938722.apply (12 samples, 0.06%)</title><rect x="445.8" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (12 samples, 0.06%)</title><rect x="445.8" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (12 samples, 0.06%)</title><rect x="445.8" y="371.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="448.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (575 samples, 2.90%)</title><rect x="446.6" y="515.0" width="34.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.6" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (41 samples, 0.21%)</title><rect x="446.6" y="499.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (41 samples, 0.21%)</title><rect x="446.6" y="483.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.6" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (41 samples, 0.21%)</title><rect x="446.6" y="467.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (41 samples, 0.21%)</title><rect x="446.6" y="451.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.21%)</title><rect x="446.6" y="435.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.6" y="446.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.21%)</title><rect x="446.6" y="419.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="449.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (39 samples, 0.20%)</title><rect x="449.0" y="499.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.03%)</title><rect x="449.1" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.03%)</title><rect x="449.1" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.03%)</title><rect x="449.1" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.1" y="462.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="449.1" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="452.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.07%)</title><rect x="449.5" y="483.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.5" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.07%)</title><rect x="449.5" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.5" y="478.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.07%)</title><rect x="449.5" y="451.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="452.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (17 samples, 0.09%)</title><rect x="450.3" y="483.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.09%)</title><rect x="450.3" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.06%)</title><rect x="450.3" y="451.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="453.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.03%)</title><rect x="451.0" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.0" y="462.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="451.0" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="454.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (157 samples, 0.79%)</title><rect x="451.3" y="499.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (157 samples, 0.79%)</title><rect x="451.3" y="483.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (157 samples, 0.79%)</title><rect x="451.3" y="467.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.3" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (5 samples, 0.03%)</title><rect x="451.3" y="451.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="454.3" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.07%)</title><rect x="451.9" y="451.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="454.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="452.9" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="452.9" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.get$Lambda (6 samples, 0.03%)</title><rect x="452.9" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.9" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$168 (6 samples, 0.03%)</title><rect x="452.9" y="403.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="455.9" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (11 samples, 0.06%)</title><rect x="453.3" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.3" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (11 samples, 0.06%)</title><rect x="453.3" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="456.3" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (98 samples, 0.49%)</title><rect x="453.9" y="451.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (98 samples, 0.49%)</title><rect x="453.9" y="435.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (98 samples, 0.49%)</title><rect x="453.9" y="419.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.08%)</title><rect x="453.9" y="403.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.08%)</title><rect x="453.9" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.get$Lambda (15 samples, 0.08%)</title><rect x="453.9" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.9" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$177 (15 samples, 0.08%)</title><rect x="453.9" y="355.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="456.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (14 samples, 0.07%)</title><rect x="454.8" y="403.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (14 samples, 0.07%)</title><rect x="454.8" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (14 samples, 0.07%)</title><rect x="454.8" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.07%)</title><rect x="454.8" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.07%)</title><rect x="454.8" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.07%)</title><rect x="454.8" y="323.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.07%)</title><rect x="454.8" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.07%)</title><rect x="454.8" y="291.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.8" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.07%)</title><rect x="454.8" y="275.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="457.8" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (41 samples, 0.21%)</title><rect x="455.7" y="403.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.7" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (41 samples, 0.21%)</title><rect x="455.7" y="387.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (19 samples, 0.10%)</title><rect x="455.7" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.10%)</title><rect x="455.7" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.10%)</title><rect x="455.7" y="339.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="458.7" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (22 samples, 0.11%)</title><rect x="456.8" y="371.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.8" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (22 samples, 0.11%)</title><rect x="456.8" y="355.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="459.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (28 samples, 0.14%)</title><rect x="458.1" y="403.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.1" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (28 samples, 0.14%)</title><rect x="458.1" y="387.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="461.1" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (15 samples, 0.08%)</title><rect x="459.8" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (15 samples, 0.08%)</title><rect x="459.8" y="435.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="462.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (338 samples, 1.71%)</title><rect x="460.7" y="499.0" width="20.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.7" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (19 samples, 0.10%)</title><rect x="460.7" y="483.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="463.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.11%)</title><rect x="461.8" y="483.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.8" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.11%)</title><rect x="461.8" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.8" y="478.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.11%)</title><rect x="461.8" y="451.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="464.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (51 samples, 0.26%)</title><rect x="463.1" y="483.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.26%)</title><rect x="463.1" y="467.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.08%)</title><rect x="463.1" y="451.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="466.1" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.18%)</title><rect x="463.9" y="451.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.9" y="462.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.18%)</title><rect x="463.9" y="435.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="466.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (247 samples, 1.25%)</title><rect x="466.1" y="483.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (79 samples, 0.40%)</title><rect x="466.1" y="467.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (79 samples, 0.40%)</title><rect x="466.1" y="451.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.18%)</title><rect x="466.1" y="435.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="469.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.22%)</title><rect x="468.2" y="435.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.2" y="446.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.22%)</title><rect x="468.2" y="419.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="471.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (27 samples, 0.14%)</title><rect x="470.8" y="467.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (27 samples, 0.14%)</title><rect x="470.8" y="451.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.8" y="462.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.09%)</title><rect x="470.8" y="435.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="473.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.05%)</title><rect x="471.8" y="435.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="474.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.trim (32 samples, 0.16%)</title><rect x="472.4" y="467.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (32 samples, 0.16%)</title><rect x="472.4" y="451.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.16%)</title><rect x="472.4" y="435.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.06%)</title><rect x="472.4" y="419.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="475.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.10%)</title><rect x="473.1" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.1" y="430.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.10%)</title><rect x="473.1" y="403.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="476.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (48 samples, 0.24%)</title><rect x="474.3" y="467.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (48 samples, 0.24%)</title><rect x="474.3" y="451.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (48 samples, 0.24%)</title><rect x="474.3" y="435.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (48 samples, 0.24%)</title><rect x="474.3" y="419.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.24%)</title><rect x="474.3" y="403.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.24%)</title><rect x="474.3" y="387.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="477.3" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (61 samples, 0.31%)</title><rect x="477.2" y="467.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.2" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (18 samples, 0.09%)</title><rect x="477.2" y="451.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.2" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (18 samples, 0.09%)</title><rect x="477.2" y="435.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="480.2" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (20 samples, 0.10%)</title><rect x="478.2" y="451.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.2" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (20 samples, 0.10%)</title><rect x="478.2" y="435.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="481.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$449/225976591.apply (23 samples, 0.12%)</title><rect x="479.4" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (23 samples, 0.12%)</title><rect x="479.4" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.4" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (23 samples, 0.12%)</title><rect x="479.4" y="419.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="482.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (214 samples, 1.08%)</title><rect x="480.8" y="627.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (214 samples, 1.08%)</title><rect x="480.8" y="611.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (214 samples, 1.08%)</title><rect x="480.8" y="595.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (214 samples, 1.08%)</title><rect x="480.8" y="579.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (214 samples, 1.08%)</title><rect x="480.8" y="563.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (36 samples, 0.18%)</title><rect x="480.8" y="547.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.07%)</title><rect x="480.8" y="531.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.07%)</title><rect x="480.8" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/379794951.get$Lambda (7 samples, 0.04%)</title><rect x="480.8" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$346 (7 samples, 0.04%)</title><rect x="480.8" y="483.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="483.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$352/1388728102.get$Lambda (7 samples, 0.04%)</title><rect x="481.2" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$352 (7 samples, 0.04%)</title><rect x="481.2" y="483.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="484.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (10 samples, 0.05%)</title><rect x="481.6" y="531.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="484.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (12 samples, 0.06%)</title><rect x="482.2" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (12 samples, 0.06%)</title><rect x="482.2" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (8 samples, 0.04%)</title><rect x="482.2" y="499.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="485.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (176 samples, 0.89%)</title><rect x="482.9" y="547.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (176 samples, 0.89%)</title><rect x="482.9" y="531.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (176 samples, 0.89%)</title><rect x="482.9" y="515.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (176 samples, 0.89%)</title><rect x="482.9" y="499.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (176 samples, 0.89%)</title><rect x="482.9" y="483.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (176 samples, 0.89%)</title><rect x="482.9" y="467.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.08%)</title><rect x="482.9" y="451.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.9" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.08%)</title><rect x="482.9" y="435.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.9" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.08%)</title><rect x="482.9" y="419.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="485.9" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.04%)</title><rect x="483.8" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.8" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.04%)</title><rect x="483.8" y="435.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="486.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1005240389.run (96 samples, 0.48%)</title><rect x="484.3" y="451.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (96 samples, 0.48%)</title><rect x="484.3" y="435.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (96 samples, 0.48%)</title><rect x="484.3" y="419.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (28 samples, 0.14%)</title><rect x="484.3" y="403.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.3" y="414.0"></text>
</g>
<g>
<title>java/util/Collection.stream (16 samples, 0.08%)</title><rect x="484.3" y="387.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.3" y="398.0"></text>
</g>
<g>
<title>java/util/List.spliterator (6 samples, 0.03%)</title><rect x="484.3" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.3" y="382.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (6 samples, 0.03%)</title><rect x="484.3" y="355.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="487.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.05%)</title><rect x="484.6" y="371.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.6" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.05%)</title><rect x="484.6" y="355.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="487.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (12 samples, 0.06%)</title><rect x="485.2" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.06%)</title><rect x="485.2" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (12 samples, 0.06%)</title><rect x="485.2" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1820383114.get (8 samples, 0.04%)</title><rect x="485.2" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.2" y="350.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (8 samples, 0.04%)</title><rect x="485.2" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="488.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (68 samples, 0.34%)</title><rect x="485.9" y="403.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (68 samples, 0.34%)</title><rect x="485.9" y="387.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (19 samples, 0.10%)</title><rect x="485.9" y="371.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.9" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (5 samples, 0.03%)</title><rect x="486.2" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.2" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (5 samples, 0.03%)</title><rect x="486.2" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.2" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.03%)</title><rect x="486.2" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.2" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (5 samples, 0.03%)</title><rect x="486.2" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.2" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.create (5 samples, 0.03%)</title><rect x="486.2" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.2" y="302.0"></text>
</g>
<g>
<title>java.time.Instant (5 samples, 0.03%)</title><rect x="486.2" y="275.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="489.2" y="286.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (7 samples, 0.04%)</title><rect x="486.5" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.5" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (7 samples, 0.04%)</title><rect x="486.5" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.5" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (7 samples, 0.04%)</title><rect x="486.5" y="323.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="489.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (17 samples, 0.09%)</title><rect x="487.0" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.0" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.03%)</title><rect x="487.0" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.03%)</title><rect x="487.0" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (5 samples, 0.03%)</title><rect x="487.0" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.0" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="487.0" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="490.0" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (12 samples, 0.06%)</title><rect x="487.3" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.3" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (12 samples, 0.06%)</title><rect x="487.3" y="339.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.3" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (12 samples, 0.06%)</title><rect x="487.3" y="323.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="490.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (32 samples, 0.16%)</title><rect x="488.1" y="371.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (10 samples, 0.05%)</title><rect x="488.1" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="491.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (22 samples, 0.11%)</title><rect x="488.7" y="355.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (8 samples, 0.04%)</title><rect x="488.7" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (8 samples, 0.04%)</title><rect x="488.7" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (8 samples, 0.04%)</title><rect x="488.7" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (8 samples, 0.04%)</title><rect x="488.7" y="291.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="491.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (14 samples, 0.07%)</title><rect x="489.1" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (14 samples, 0.07%)</title><rect x="489.1" y="323.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (6 samples, 0.03%)</title><rect x="489.1" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="492.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (8 samples, 0.04%)</title><rect x="489.5" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (8 samples, 0.04%)</title><rect x="489.5" y="291.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="492.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (44 samples, 0.22%)</title><rect x="490.0" y="451.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (44 samples, 0.22%)</title><rect x="490.0" y="435.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (44 samples, 0.22%)</title><rect x="490.0" y="419.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (44 samples, 0.22%)</title><rect x="490.0" y="403.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (34 samples, 0.17%)</title><rect x="490.0" y="387.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34 samples, 0.17%)</title><rect x="490.0" y="371.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12 samples, 0.06%)</title><rect x="490.0" y="355.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler$$Lambda$674/1044820419.apply (12 samples, 0.06%)</title><rect x="490.0" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler.lambda$apply$0 (12 samples, 0.06%)</title><rect x="490.0" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.0" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (8 samples, 0.04%)</title><rect x="490.0" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="493.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (22 samples, 0.11%)</title><rect x="490.7" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (22 samples, 0.11%)</title><rect x="490.7" y="339.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$501/514946210.accept (22 samples, 0.11%)</title><rect x="490.7" y="323.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (22 samples, 0.11%)</title><rect x="490.7" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (22 samples, 0.11%)</title><rect x="490.7" y="291.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (22 samples, 0.11%)</title><rect x="490.7" y="275.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (22 samples, 0.11%)</title><rect x="490.7" y="259.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$513/1932888160.apply (22 samples, 0.11%)</title><rect x="490.7" y="243.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (22 samples, 0.11%)</title><rect x="490.7" y="227.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (22 samples, 0.11%)</title><rect x="490.7" y="211.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="493.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (10 samples, 0.05%)</title><rect x="492.0" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.0" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.05%)</title><rect x="492.0" y="371.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="495.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (14 samples, 0.07%)</title><rect x="492.6" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (14 samples, 0.07%)</title><rect x="492.6" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (14 samples, 0.07%)</title><rect x="492.6" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (14 samples, 0.07%)</title><rect x="492.6" y="403.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (14 samples, 0.07%)</title><rect x="492.6" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (14 samples, 0.07%)</title><rect x="492.6" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (14 samples, 0.07%)</title><rect x="492.6" y="355.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.6" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5 samples, 0.03%)</title><rect x="492.6" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="492.6" y="323.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="495.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.05%)</title><rect x="492.9" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.9" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.05%)</title><rect x="492.9" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.05%)</title><rect x="492.9" y="307.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="495.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.run (2,877 samples, 14.52%)</title><rect x="493.5" y="659.0" width="171.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.5" y="670.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (2,877 samples, 14.52%)</title><rect x="493.5" y="643.0" width="171.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.5" y="654.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (166 samples, 0.84%)</title><rect x="493.5" y="627.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (166 samples, 0.84%)</title><rect x="493.5" y="611.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (166 samples, 0.84%)</title><rect x="493.5" y="595.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.5" y="606.0"></text>
</g>
<g>
<title>java.lang.String (103 samples, 0.52%)</title><rect x="493.5" y="579.0" width="6.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="496.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.32%)</title><rect x="499.7" y="579.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.7" y="590.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.32%)</title><rect x="499.7" y="563.0" width="3.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="502.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (468 samples, 2.36%)</title><rect x="503.4" y="627.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.4" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (468 samples, 2.36%)</title><rect x="503.4" y="611.0" width="27.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.4" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (266 samples, 1.34%)</title><rect x="503.4" y="595.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.41%)</title><rect x="503.4" y="579.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.41%)</title><rect x="503.4" y="563.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.get$Lambda (81 samples, 0.41%)</title><rect x="503.4" y="547.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.4" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ApiUtils$$Lambda$448 (81 samples, 0.41%)</title><rect x="503.4" y="531.0" width="4.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="506.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (185 samples, 0.93%)</title><rect x="508.2" y="579.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (185 samples, 0.93%)</title><rect x="508.2" y="563.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (113 samples, 0.57%)</title><rect x="508.2" y="547.0" width="6.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="511.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (70 samples, 0.35%)</title><rect x="515.0" y="547.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (70 samples, 0.35%)</title><rect x="515.0" y="531.0" width="4.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="518.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (202 samples, 1.02%)</title><rect x="519.3" y="595.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.32%)</title><rect x="519.3" y="579.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.32%)</title><rect x="519.3" y="563.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$607/75241041.get$Lambda (64 samples, 0.32%)</title><rect x="519.3" y="547.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.3" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$607 (64 samples, 0.32%)</title><rect x="519.3" y="531.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="522.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (138 samples, 0.70%)</title><rect x="523.1" y="579.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (138 samples, 0.70%)</title><rect x="523.1" y="563.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (65 samples, 0.33%)</title><rect x="523.1" y="547.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="526.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (70 samples, 0.35%)</title><rect x="526.9" y="547.0" width="4.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="529.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (2,243 samples, 11.32%)</title><rect x="531.3" y="627.0" width="133.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.3" y="638.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (270 samples, 1.36%)</title><rect x="531.3" y="611.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.3" y="622.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="531.3" y="595.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="534.3" y="606.0"></text>
</g>
<g>
<title>java.util.TreeSet (8 samples, 0.04%)</title><rect x="531.6" y="595.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="534.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (11 samples, 0.06%)</title><rect x="532.3" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.3" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (11 samples, 0.06%)</title><rect x="532.3" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.3" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (11 samples, 0.06%)</title><rect x="532.3" y="563.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="535.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (13 samples, 0.07%)</title><rect x="533.0" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.0" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.07%)</title><rect x="533.0" y="579.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="536.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (162 samples, 0.82%)</title><rect x="533.7" y="595.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.7" y="606.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (20 samples, 0.10%)</title><rect x="533.7" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.7" y="590.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (20 samples, 0.10%)</title><rect x="533.7" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.7" y="574.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (20 samples, 0.10%)</title><rect x="533.7" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.7" y="558.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.10%)</title><rect x="533.7" y="531.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="536.7" y="542.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (142 samples, 0.72%)</title><rect x="534.9" y="579.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.9" y="590.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (142 samples, 0.72%)</title><rect x="534.9" y="563.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.9" y="574.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (142 samples, 0.72%)</title><rect x="534.9" y="547.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.9" y="558.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (135 samples, 0.68%)</title><rect x="534.9" y="531.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.9" y="542.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (129 samples, 0.65%)</title><rect x="534.9" y="515.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.9" y="526.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (129 samples, 0.65%)</title><rect x="534.9" y="499.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="535.2" y="483.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="538.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (16 samples, 0.08%)</title><rect x="535.5" y="483.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (16 samples, 0.08%)</title><rect x="535.5" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (16 samples, 0.08%)</title><rect x="535.5" y="451.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.5" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (16 samples, 0.08%)</title><rect x="535.5" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="538.5" y="446.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (16 samples, 0.08%)</title><rect x="535.5" y="419.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="538.5" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (104 samples, 0.52%)</title><rect x="536.4" y="483.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (104 samples, 0.52%)</title><rect x="536.4" y="467.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (104 samples, 0.52%)</title><rect x="536.4" y="451.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.4" y="462.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (16 samples, 0.08%)</title><rect x="536.4" y="435.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="539.4" y="446.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (88 samples, 0.44%)</title><rect x="537.4" y="435.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.4" y="446.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (88 samples, 0.44%)</title><rect x="537.4" y="419.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.4" y="430.0"></text>
</g>
<g>
<title>int[] (67 samples, 0.34%)</title><rect x="537.4" y="403.0" width="4.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="540.4" y="414.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (21 samples, 0.11%)</title><rect x="541.4" y="403.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.4" y="414.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.11%)</title><rect x="541.4" y="387.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="544.4" y="398.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (6 samples, 0.03%)</title><rect x="542.6" y="515.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="545.6" y="526.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (7 samples, 0.04%)</title><rect x="543.0" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.0" y="542.0"></text>
</g>
<g>
<title>java/security/Provider.getService (7 samples, 0.04%)</title><rect x="543.0" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.04%)</title><rect x="543.0" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.0" y="510.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (7 samples, 0.04%)</title><rect x="543.0" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.04%)</title><rect x="543.0" y="467.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="546.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (67 samples, 0.34%)</title><rect x="543.4" y="595.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.4" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (25 samples, 0.13%)</title><rect x="543.4" y="579.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.4" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (22 samples, 0.11%)</title><rect x="543.6" y="563.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (12 samples, 0.06%)</title><rect x="543.6" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (12 samples, 0.06%)</title><rect x="543.6" y="531.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="546.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (10 samples, 0.05%)</title><rect x="544.3" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (10 samples, 0.05%)</title><rect x="544.3" y="531.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="547.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (11 samples, 0.06%)</title><rect x="545.0" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.0" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (11 samples, 0.06%)</title><rect x="545.0" y="563.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="548.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (28 samples, 0.14%)</title><rect x="545.7" y="579.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (28 samples, 0.14%)</title><rect x="545.7" y="563.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (28 samples, 0.14%)</title><rect x="545.7" y="547.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="548.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (1,958 samples, 9.88%)</title><rect x="547.4" y="611.0" width="116.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.4" y="622.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.10%)</title><rect x="547.4" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.10%)</title><rect x="547.4" y="579.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$596/955395010.get$Lambda (11 samples, 0.06%)</title><rect x="547.4" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.4" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$596 (11 samples, 0.06%)</title><rect x="547.4" y="547.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="550.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$601/996857683.get$Lambda (5 samples, 0.03%)</title><rect x="548.0" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.0" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$601 (5 samples, 0.03%)</title><rect x="548.0" y="547.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="551.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (1,800 samples, 9.08%)</title><rect x="548.7" y="595.0" width="107.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.7" y="606.0">ru/mail/polis..</text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.06%)</title><rect x="548.7" y="579.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="551.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.11%)</title><rect x="549.4" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.11%)</title><rect x="549.4" y="563.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.11%)</title><rect x="549.4" y="547.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.11%)</title><rect x="549.4" y="531.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.11%)</title><rect x="549.4" y="515.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.4" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.11%)</title><rect x="549.4" y="499.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="552.4" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (16 samples, 0.08%)</title><rect x="550.6" y="579.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (11 samples, 0.06%)</title><rect x="550.6" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (11 samples, 0.06%)</title><rect x="550.6" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (11 samples, 0.06%)</title><rect x="550.6" y="531.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="553.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (5 samples, 0.03%)</title><rect x="551.3" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.3" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (5 samples, 0.03%)</title><rect x="551.3" y="547.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="554.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (39 samples, 0.20%)</title><rect x="551.6" y="579.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (39 samples, 0.20%)</title><rect x="551.6" y="563.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (23 samples, 0.12%)</title><rect x="551.6" y="547.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="554.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.08%)</title><rect x="553.0" y="547.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.08%)</title><rect x="553.0" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.08%)</title><rect x="553.0" y="515.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="556.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1,107 samples, 5.59%)</title><rect x="553.9" y="579.0" width="65.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.9" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,107 samples, 5.59%)</title><rect x="553.9" y="563.0" width="65.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.9" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,107 samples, 5.59%)</title><rect x="553.9" y="547.0" width="65.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.9" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,107 samples, 5.59%)</title><rect x="553.9" y="531.0" width="65.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.9" y="542.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (42 samples, 0.21%)</title><rect x="554.2" y="515.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (42 samples, 0.21%)</title><rect x="554.2" y="499.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (27 samples, 0.14%)</title><rect x="554.2" y="483.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="557.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.08%)</title><rect x="555.8" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.08%)</title><rect x="555.8" y="467.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.08%)</title><rect x="555.8" y="451.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="558.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (42 samples, 0.21%)</title><rect x="556.7" y="515.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="559.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (42 samples, 0.21%)</title><rect x="556.7" y="499.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (23 samples, 0.12%)</title><rect x="556.7" y="483.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="559.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.10%)</title><rect x="558.0" y="483.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.10%)</title><rect x="558.0" y="467.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.10%)</title><rect x="558.0" y="451.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="561.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (37 samples, 0.19%)</title><rect x="559.2" y="515.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="562.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (50 samples, 0.25%)</title><rect x="561.4" y="515.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="564.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (516 samples, 2.60%)</title><rect x="564.3" y="515.0" width="30.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.3" y="526.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (60 samples, 0.30%)</title><rect x="564.3" y="499.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.3" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (52 samples, 0.26%)</title><rect x="564.3" y="483.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.3" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (19 samples, 0.10%)</title><rect x="564.3" y="467.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.3" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (19 samples, 0.10%)</title><rect x="564.3" y="451.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="567.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (33 samples, 0.17%)</title><rect x="565.5" y="467.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.5" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (33 samples, 0.17%)</title><rect x="565.5" y="451.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="568.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (8 samples, 0.04%)</title><rect x="567.4" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.04%)</title><rect x="567.4" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (8 samples, 0.04%)</title><rect x="567.4" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1820383114.get (8 samples, 0.04%)</title><rect x="567.4" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.4" y="446.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (8 samples, 0.04%)</title><rect x="567.4" y="419.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="570.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (213 samples, 1.07%)</title><rect x="567.9" y="499.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (213 samples, 1.07%)</title><rect x="567.9" y="483.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.9" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (7 samples, 0.04%)</title><rect x="567.9" y="467.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="570.9" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.05%)</title><rect x="568.3" y="467.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="571.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (29 samples, 0.15%)</title><rect x="568.9" y="467.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="571.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (9 samples, 0.05%)</title><rect x="570.6" y="467.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="573.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.11%)</title><rect x="571.1" y="467.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.11%)</title><rect x="571.1" y="451.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.get$Lambda (21 samples, 0.11%)</title><rect x="571.1" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.1" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$168 (21 samples, 0.11%)</title><rect x="571.1" y="419.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="574.1" y="430.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (105 samples, 0.53%)</title><rect x="572.4" y="467.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.4" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (105 samples, 0.53%)</title><rect x="572.4" y="451.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (105 samples, 0.53%)</title><rect x="572.4" y="435.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (105 samples, 0.53%)</title><rect x="572.4" y="419.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (46 samples, 0.23%)</title><rect x="572.4" y="403.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (23 samples, 0.12%)</title><rect x="572.4" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (23 samples, 0.12%)</title><rect x="572.4" y="371.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (23 samples, 0.12%)</title><rect x="572.4" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (23 samples, 0.12%)</title><rect x="572.4" y="339.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (23 samples, 0.12%)</title><rect x="572.4" y="323.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (23 samples, 0.12%)</title><rect x="572.4" y="307.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.12%)</title><rect x="572.4" y="291.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.4" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.12%)</title><rect x="572.4" y="275.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="575.4" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (23 samples, 0.12%)</title><rect x="573.7" y="387.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.7" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (23 samples, 0.12%)</title><rect x="573.7" y="371.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="576.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.09%)</title><rect x="575.1" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.09%)</title><rect x="575.1" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.get$Lambda (18 samples, 0.09%)</title><rect x="575.1" y="371.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.1" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$177 (18 samples, 0.09%)</title><rect x="575.1" y="355.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="578.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.copyOf (30 samples, 0.15%)</title><rect x="576.2" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.2" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (30 samples, 0.15%)</title><rect x="576.2" y="387.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (16 samples, 0.08%)</title><rect x="576.2" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="579.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.08%)</title><rect x="576.2" y="355.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="579.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.08%)</title><rect x="576.2" y="339.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="579.2" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (14 samples, 0.07%)</title><rect x="577.1" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.1" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (14 samples, 0.07%)</title><rect x="577.1" y="355.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="580.1" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.06%)</title><rect x="578.0" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.0" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.06%)</title><rect x="578.0" y="387.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="581.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (14 samples, 0.07%)</title><rect x="578.6" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="581.6" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (14 samples, 0.07%)</title><rect x="578.6" y="451.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="581.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (19 samples, 0.10%)</title><rect x="579.5" y="467.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (19 samples, 0.10%)</title><rect x="579.5" y="451.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="582.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (11 samples, 0.06%)</title><rect x="580.6" y="499.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="583.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (171 samples, 0.86%)</title><rect x="581.2" y="499.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.2" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (171 samples, 0.86%)</title><rect x="581.2" y="483.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.2" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (159 samples, 0.80%)</title><rect x="581.2" y="467.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.2" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (159 samples, 0.80%)</title><rect x="581.2" y="451.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.2" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (159 samples, 0.80%)</title><rect x="581.2" y="435.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.2" y="446.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (36 samples, 0.18%)</title><rect x="581.2" y="419.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="584.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (55 samples, 0.28%)</title><rect x="583.4" y="419.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.4" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (55 samples, 0.28%)</title><rect x="583.4" y="403.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.4" y="414.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.28%)</title><rect x="583.4" y="387.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="586.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (68 samples, 0.34%)</title><rect x="586.7" y="419.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (68 samples, 0.34%)</title><rect x="586.7" y="403.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.15%)</title><rect x="586.7" y="387.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="589.7" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.19%)</title><rect x="588.4" y="387.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.4" y="398.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.19%)</title><rect x="588.4" y="371.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="591.4" y="382.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (12 samples, 0.06%)</title><rect x="590.7" y="467.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="593.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (24 samples, 0.12%)</title><rect x="591.4" y="499.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (24 samples, 0.12%)</title><rect x="591.4" y="483.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="594.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (37 samples, 0.19%)</title><rect x="592.9" y="499.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.9" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.06%)</title><rect x="592.9" y="483.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="595.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (11 samples, 0.06%)</title><rect x="593.5" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.06%)</title><rect x="593.5" y="467.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="596.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.08%)</title><rect x="594.2" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.2" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (15 samples, 0.08%)</title><rect x="594.2" y="467.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="597.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (291 samples, 1.47%)</title><rect x="595.1" y="515.0" width="17.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (10 samples, 0.05%)</title><rect x="595.1" y="499.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="598.1" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.map (36 samples, 0.18%)</title><rect x="595.7" y="499.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/719664157.apply (36 samples, 0.18%)</title><rect x="595.7" y="483.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (22 samples, 0.11%)</title><rect x="595.7" y="467.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="598.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (14 samples, 0.07%)</title><rect x="597.0" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (14 samples, 0.07%)</title><rect x="597.0" y="451.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="600.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (41 samples, 0.21%)</title><rect x="597.8" y="499.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="600.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (9 samples, 0.05%)</title><rect x="600.2" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (9 samples, 0.05%)</title><rect x="600.2" y="483.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="603.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (6 samples, 0.03%)</title><rect x="600.8" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.8" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (6 samples, 0.03%)</title><rect x="600.8" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.8" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (6 samples, 0.03%)</title><rect x="600.8" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.8" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (6 samples, 0.03%)</title><rect x="600.8" y="451.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="603.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (189 samples, 0.95%)</title><rect x="601.1" y="499.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (189 samples, 0.95%)</title><rect x="601.1" y="483.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Class[] (14 samples, 0.07%)</title><rect x="601.1" y="467.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="604.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.07%)</title><rect x="602.0" y="467.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="605.0" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList (23 samples, 0.12%)</title><rect x="602.8" y="467.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="605.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (87 samples, 0.44%)</title><rect x="604.2" y="467.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (87 samples, 0.44%)</title><rect x="604.2" y="451.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.2" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (87 samples, 0.44%)</title><rect x="604.2" y="435.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.2" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (87 samples, 0.44%)</title><rect x="604.2" y="419.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.2" y="430.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (87 samples, 0.44%)</title><rect x="604.2" y="403.0" width="5.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="607.2" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (31 samples, 0.16%)</title><rect x="609.3" y="467.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (31 samples, 0.16%)</title><rect x="609.3" y="451.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (10 samples, 0.05%)</title><rect x="609.3" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (10 samples, 0.05%)</title><rect x="609.3" y="419.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="612.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (21 samples, 0.11%)</title><rect x="609.9" y="435.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (21 samples, 0.11%)</title><rect x="609.9" y="419.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="612.9" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (20 samples, 0.10%)</title><rect x="611.2" y="467.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.2" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (20 samples, 0.10%)</title><rect x="611.2" y="451.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.2" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (20 samples, 0.10%)</title><rect x="611.2" y="435.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="614.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (125 samples, 0.63%)</title><rect x="612.4" y="515.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (23 samples, 0.12%)</title><rect x="612.4" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (13 samples, 0.07%)</title><rect x="612.4" y="483.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="615.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.05%)</title><rect x="613.2" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.05%)</title><rect x="613.2" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (10 samples, 0.05%)</title><rect x="613.2" y="451.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="616.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.05%)</title><rect x="613.8" y="499.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="616.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (93 samples, 0.47%)</title><rect x="614.3" y="499.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.08%)</title><rect x="614.3" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.08%)</title><rect x="614.3" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/1728467356.get$Lambda (8 samples, 0.04%)</title><rect x="614.3" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$200 (8 samples, 0.04%)</title><rect x="614.3" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="617.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$209/1479888648.get$Lambda (7 samples, 0.04%)</title><rect x="614.8" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$209 (7 samples, 0.04%)</title><rect x="614.8" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="617.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (78 samples, 0.39%)</title><rect x="615.2" y="483.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (78 samples, 0.39%)</title><rect x="615.2" y="467.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (43 samples, 0.22%)</title><rect x="615.2" y="451.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="618.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.18%)</title><rect x="617.7" y="451.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.18%)</title><rect x="617.7" y="435.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.18%)</title><rect x="617.7" y="419.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="620.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$596/955395010.handleLocalResponse (13 samples, 0.07%)</title><rect x="619.8" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$1 (13 samples, 0.07%)</title><rect x="619.8" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (13 samples, 0.07%)</title><rect x="619.8" y="547.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (9 samples, 0.05%)</title><rect x="620.1" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (9 samples, 0.05%)</title><rect x="620.1" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (7 samples, 0.04%)</title><rect x="620.1" y="499.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="623.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$601/996857683.requestBuild (593 samples, 2.99%)</title><rect x="620.6" y="579.0" width="35.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.6" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$2 (593 samples, 2.99%)</title><rect x="620.6" y="563.0" width="35.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.6" y="574.0">ru/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (234 samples, 1.18%)</title><rect x="620.6" y="547.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (24 samples, 0.12%)</title><rect x="620.6" y="531.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="623.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (210 samples, 1.06%)</title><rect x="622.0" y="531.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (195 samples, 0.98%)</title><rect x="622.0" y="515.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (195 samples, 0.98%)</title><rect x="622.0" y="499.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.0" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (7 samples, 0.04%)</title><rect x="622.0" y="483.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="625.0" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.06%)</title><rect x="622.4" y="483.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="625.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (26 samples, 0.13%)</title><rect x="623.2" y="483.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="626.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.07%)</title><rect x="624.8" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.07%)</title><rect x="624.8" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.get$Lambda (13 samples, 0.07%)</title><rect x="624.8" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.8" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$168 (13 samples, 0.07%)</title><rect x="624.8" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="627.8" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (24 samples, 0.12%)</title><rect x="625.5" y="483.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.5" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (24 samples, 0.12%)</title><rect x="625.5" y="467.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="628.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (83 samples, 0.42%)</title><rect x="627.0" y="483.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (83 samples, 0.42%)</title><rect x="627.0" y="467.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (83 samples, 0.42%)</title><rect x="627.0" y="451.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.06%)</title><rect x="627.0" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.06%)</title><rect x="627.0" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.get$Lambda (12 samples, 0.06%)</title><rect x="627.0" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.0" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$177 (12 samples, 0.06%)</title><rect x="627.0" y="387.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="630.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (28 samples, 0.14%)</title><rect x="627.7" y="435.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (28 samples, 0.14%)</title><rect x="627.7" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (28 samples, 0.14%)</title><rect x="627.7" y="403.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.7" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (28 samples, 0.14%)</title><rect x="627.7" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (28 samples, 0.14%)</title><rect x="627.7" y="371.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (28 samples, 0.14%)</title><rect x="627.7" y="355.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (28 samples, 0.14%)</title><rect x="627.7" y="339.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.14%)</title><rect x="627.7" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.7" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.14%)</title><rect x="627.7" y="307.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="630.7" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (17 samples, 0.09%)</title><rect x="629.4" y="435.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.4" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (17 samples, 0.09%)</title><rect x="629.4" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (10 samples, 0.05%)</title><rect x="629.4" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.05%)</title><rect x="629.4" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.05%)</title><rect x="629.4" y="371.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="632.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.04%)</title><rect x="629.9" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.9" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.04%)</title><rect x="629.9" y="387.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="632.9" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.13%)</title><rect x="630.4" y="435.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (26 samples, 0.13%)</title><rect x="630.4" y="419.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="633.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (29 samples, 0.15%)</title><rect x="631.9" y="483.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.9" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (29 samples, 0.15%)</title><rect x="631.9" y="467.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="634.9" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (15 samples, 0.08%)</title><rect x="633.6" y="515.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.6" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.of (15 samples, 0.08%)</title><rect x="633.6" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.6" y="510.0"></text>
</g>
<g>
<title>java.util.Optional (15 samples, 0.08%)</title><rect x="633.6" y="483.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="636.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (359 samples, 1.81%)</title><rect x="634.5" y="547.0" width="21.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.5" y="558.0">r..</text>
</g>
<g>
<title>java.net.URI (53 samples, 0.27%)</title><rect x="634.5" y="531.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="637.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.22%)</title><rect x="637.7" y="531.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (44 samples, 0.22%)</title><rect x="637.7" y="515.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702940637.invoke (44 samples, 0.22%)</title><rect x="637.7" y="499.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.22%)</title><rect x="637.7" y="483.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.06%)</title><rect x="637.7" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.06%)</title><rect x="637.7" y="451.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="640.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (32 samples, 0.16%)</title><rect x="638.4" y="467.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (32 samples, 0.16%)</title><rect x="638.4" y="451.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.4" y="462.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.16%)</title><rect x="638.4" y="435.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="641.4" y="446.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (152 samples, 0.77%)</title><rect x="640.3" y="531.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.3" y="542.0"></text>
</g>
<g>
<title>java.net.URI$Parser (14 samples, 0.07%)</title><rect x="640.3" y="515.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="643.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (138 samples, 0.70%)</title><rect x="641.1" y="515.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.11%)</title><rect x="641.1" y="499.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.11%)</title><rect x="641.1" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.06%)</title><rect x="641.1" y="467.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="644.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.06%)</title><rect x="641.8" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.8" y="478.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.06%)</title><rect x="641.8" y="451.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="644.8" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (116 samples, 0.59%)</title><rect x="642.5" y="499.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (64 samples, 0.32%)</title><rect x="642.5" y="483.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.32%)</title><rect x="642.5" y="467.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.17%)</title><rect x="642.5" y="451.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="645.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.15%)</title><rect x="644.5" y="451.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.5" y="462.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.15%)</title><rect x="644.5" y="435.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="647.5" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (52 samples, 0.26%)</title><rect x="646.3" y="483.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.3" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.13%)</title><rect x="646.3" y="467.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.13%)</title><rect x="646.3" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.06%)</title><rect x="646.3" y="435.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="649.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.08%)</title><rect x="646.9" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.9" y="446.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.08%)</title><rect x="646.9" y="419.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="649.9" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (26 samples, 0.13%)</title><rect x="647.8" y="467.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.8" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (26 samples, 0.13%)</title><rect x="647.8" y="451.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.13%)</title><rect x="647.8" y="435.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.13%)</title><rect x="647.8" y="419.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.06%)</title><rect x="647.8" y="403.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="650.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.08%)</title><rect x="648.5" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.5" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.08%)</title><rect x="648.5" y="387.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="651.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (68 samples, 0.34%)</title><rect x="649.4" y="531.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (28 samples, 0.14%)</title><rect x="649.4" y="515.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="652.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (40 samples, 0.20%)</title><rect x="651.0" y="515.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (7 samples, 0.04%)</title><rect x="651.0" y="499.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="654.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (33 samples, 0.17%)</title><rect x="651.4" y="499.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (33 samples, 0.17%)</title><rect x="651.4" y="483.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="654.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (42 samples, 0.21%)</title><rect x="653.4" y="531.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (42 samples, 0.21%)</title><rect x="653.4" y="515.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (42 samples, 0.21%)</title><rect x="653.4" y="499.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.4" y="510.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (42 samples, 0.21%)</title><rect x="653.4" y="483.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (17 samples, 0.09%)</title><rect x="653.4" y="467.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (17 samples, 0.09%)</title><rect x="653.4" y="451.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="656.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$166/1179495696.apply (25 samples, 0.13%)</title><rect x="654.4" y="467.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (25 samples, 0.13%)</title><rect x="654.4" y="451.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.4" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.08%)</title><rect x="654.4" y="435.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="657.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (10 samples, 0.05%)</title><rect x="655.3" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.05%)</title><rect x="655.3" y="419.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="658.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (135 samples, 0.68%)</title><rect x="655.9" y="595.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.04%)</title><rect x="655.9" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.04%)</title><rect x="655.9" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$226/1373714853.get$Lambda (8 samples, 0.04%)</title><rect x="655.9" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.9" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$226 (8 samples, 0.04%)</title><rect x="655.9" y="531.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="658.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (14 samples, 0.07%)</title><rect x="656.4" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (14 samples, 0.07%)</title><rect x="656.4" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (6 samples, 0.03%)</title><rect x="656.4" y="547.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="659.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (8 samples, 0.04%)</title><rect x="656.7" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (8 samples, 0.04%)</title><rect x="656.7" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="659.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (113 samples, 0.57%)</title><rect x="657.2" y="579.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (12 samples, 0.06%)</title><rect x="657.2" y="563.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="660.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (11 samples, 0.06%)</title><rect x="658.2" y="563.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="661.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (75 samples, 0.38%)</title><rect x="658.8" y="563.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$219/330067305.accept (75 samples, 0.38%)</title><rect x="658.8" y="547.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (75 samples, 0.38%)</title><rect x="658.8" y="531.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.12%)</title><rect x="658.8" y="515.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.12%)</title><rect x="658.8" y="499.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.get$Lambda (24 samples, 0.12%)</title><rect x="658.8" y="483.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.8" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.MergeUtils$$Lambda$223 (24 samples, 0.12%)</title><rect x="658.8" y="467.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="661.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (51 samples, 0.26%)</title><rect x="660.3" y="515.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (51 samples, 0.26%)</title><rect x="660.3" y="499.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.14%)</title><rect x="660.3" y="483.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="663.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.09%)</title><rect x="662.2" y="483.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.09%)</title><rect x="662.2" y="467.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.09%)</title><rect x="662.2" y="451.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="665.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (11 samples, 0.06%)</title><rect x="663.3" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.3" y="574.0"></text>
</g>
<g>
<title>java.lang.Object (8 samples, 0.04%)</title><rect x="663.5" y="547.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="666.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (15 samples, 0.08%)</title><rect x="663.9" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.08%)</title><rect x="663.9" y="595.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.08%)</title><rect x="663.9" y="579.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.08%)</title><rect x="663.9" y="563.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.08%)</title><rect x="663.9" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.9" y="558.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.08%)</title><rect x="663.9" y="531.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="666.9" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (238 samples, 1.20%)</title><rect x="664.8" y="659.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.8" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (238 samples, 1.20%)</title><rect x="664.8" y="643.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.8" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$580/1356497911.run (238 samples, 1.20%)</title><rect x="664.8" y="627.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.8" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (238 samples, 1.20%)</title><rect x="664.8" y="611.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.8" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (238 samples, 1.20%)</title><rect x="664.8" y="595.0" width="14.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.8" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (238 samples, 1.20%)</title><rect x="664.8" y="579.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.8" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (234 samples, 1.18%)</title><rect x="665.1" y="563.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.1" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (231 samples, 1.17%)</title><rect x="665.1" y="547.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.1" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (231 samples, 1.17%)</title><rect x="665.1" y="531.0" width="13.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.1" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (231 samples, 1.17%)</title><rect x="665.1" y="515.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (231 samples, 1.17%)</title><rect x="665.1" y="499.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (153 samples, 0.77%)</title><rect x="665.1" y="483.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (153 samples, 0.77%)</title><rect x="665.1" y="467.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (152 samples, 0.77%)</title><rect x="665.1" y="451.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.1" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (152 samples, 0.77%)</title><rect x="665.1" y="435.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.1" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (142 samples, 0.72%)</title><rect x="665.1" y="419.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.1" y="430.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (142 samples, 0.72%)</title><rect x="665.1" y="403.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="668.1" y="414.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (142 samples, 0.72%)</title><rect x="665.1" y="387.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.1" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (142 samples, 0.72%)</title><rect x="665.1" y="371.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.1" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (142 samples, 0.72%)</title><rect x="665.1" y="355.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.1" y="366.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (142 samples, 0.72%)</title><rect x="665.1" y="339.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (142 samples, 0.72%)</title><rect x="665.1" y="323.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.1" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (142 samples, 0.72%)</title><rect x="665.1" y="307.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (142 samples, 0.72%)</title><rect x="665.1" y="291.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.1" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (142 samples, 0.72%)</title><rect x="665.1" y="275.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.1" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (142 samples, 0.72%)</title><rect x="665.1" y="259.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.1" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (142 samples, 0.72%)</title><rect x="665.1" y="243.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.1" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (142 samples, 0.72%)</title><rect x="665.1" y="227.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.1" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (134 samples, 0.68%)</title><rect x="665.1" y="211.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.1" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (134 samples, 0.68%)</title><rect x="665.1" y="195.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.1" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (134 samples, 0.68%)</title><rect x="665.1" y="179.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (134 samples, 0.68%)</title><rect x="665.1" y="163.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.1" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (50 samples, 0.25%)</title><rect x="665.1" y="147.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="158.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (44 samples, 0.22%)</title><rect x="665.1" y="131.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.1" y="142.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (41 samples, 0.21%)</title><rect x="665.1" y="115.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.1" y="126.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (41 samples, 0.21%)</title><rect x="665.1" y="99.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.1" y="110.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (25 samples, 0.13%)</title><rect x="665.4" y="83.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.4" y="94.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (23 samples, 0.12%)</title><rect x="665.6" y="67.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.6" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (19 samples, 0.10%)</title><rect x="665.8" y="51.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.8" y="62.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (19 samples, 0.10%)</title><rect x="665.8" y="35.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="668.8" y="46.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (11 samples, 0.06%)</title><rect x="666.9" y="83.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.9" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.06%)</title><rect x="666.9" y="67.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="669.9" y="78.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (6 samples, 0.03%)</title><rect x="667.8" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="670.8" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.03%)</title><rect x="668.1" y="147.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="671.1" y="158.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (45 samples, 0.23%)</title><rect x="668.5" y="147.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.5" y="158.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (44 samples, 0.22%)</title><rect x="668.6" y="131.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.6" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (43 samples, 0.22%)</title><rect x="668.7" y="115.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.7" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (43 samples, 0.22%)</title><rect x="668.7" y="99.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="671.7" y="110.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (32 samples, 0.16%)</title><rect x="671.2" y="147.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.15%)</title><rect x="671.2" y="131.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="674.2" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (8 samples, 0.04%)</title><rect x="673.1" y="211.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.1" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.04%)</title><rect x="673.1" y="195.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.04%)</title><rect x="673.1" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (8 samples, 0.04%)</title><rect x="673.1" y="163.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.1" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (8 samples, 0.04%)</title><rect x="673.1" y="147.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.1" y="158.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.04%)</title><rect x="673.1" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.04%)</title><rect x="673.1" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor50.invoke (8 samples, 0.04%)</title><rect x="673.1" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.1" y="110.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (8 samples, 0.04%)</title><rect x="673.1" y="83.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.1" y="94.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (7 samples, 0.04%)</title><rect x="673.2" y="67.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.2" y="78.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (7 samples, 0.04%)</title><rect x="673.8" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.8" y="430.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (63 samples, 0.32%)</title><rect x="674.2" y="483.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (63 samples, 0.32%)</title><rect x="674.2" y="467.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (63 samples, 0.32%)</title><rect x="674.2" y="451.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (63 samples, 0.32%)</title><rect x="674.2" y="435.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (63 samples, 0.32%)</title><rect x="674.2" y="419.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (63 samples, 0.32%)</title><rect x="674.2" y="403.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (63 samples, 0.32%)</title><rect x="674.2" y="387.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.2" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (63 samples, 0.32%)</title><rect x="674.2" y="371.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (63 samples, 0.32%)</title><rect x="674.2" y="355.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.2" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (60 samples, 0.30%)</title><rect x="674.2" y="339.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.2" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (60 samples, 0.30%)</title><rect x="674.2" y="323.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.2" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (56 samples, 0.28%)</title><rect x="674.4" y="307.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.4" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (54 samples, 0.27%)</title><rect x="674.5" y="291.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (54 samples, 0.27%)</title><rect x="674.5" y="275.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (54 samples, 0.27%)</title><rect x="674.5" y="259.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (54 samples, 0.27%)</title><rect x="674.5" y="243.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.5" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (5 samples, 0.03%)</title><rect x="674.5" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.5" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.03%)</title><rect x="674.5" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.5" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="674.5" y="195.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="677.5" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (49 samples, 0.25%)</title><rect x="674.8" y="227.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.8" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (49 samples, 0.25%)</title><rect x="674.8" y="211.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (19 samples, 0.10%)</title><rect x="674.8" y="195.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.8" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (11 samples, 0.06%)</title><rect x="674.8" y="179.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.8" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (10 samples, 0.05%)</title><rect x="674.8" y="163.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.03%)</title><rect x="675.1" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="678.1" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (8 samples, 0.04%)</title><rect x="675.5" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.5" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (7 samples, 0.04%)</title><rect x="675.5" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.5" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (7 samples, 0.04%)</title><rect x="675.5" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.5" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (7 samples, 0.04%)</title><rect x="675.5" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.5" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.03%)</title><rect x="675.6" y="115.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.6" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.03%)</title><rect x="675.6" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.6" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.03%)</title><rect x="675.6" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.6" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (14 samples, 0.07%)</title><rect x="676.0" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.0" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (7 samples, 0.04%)</title><rect x="676.0" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.0" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (6 samples, 0.03%)</title><rect x="676.0" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.0" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (7 samples, 0.04%)</title><rect x="676.4" y="179.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.4" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (7 samples, 0.04%)</title><rect x="676.4" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.4" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.03%)</title><rect x="676.5" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.5" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.03%)</title><rect x="676.5" y="131.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.5" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.03%)</title><rect x="676.5" y="115.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.5" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (5 samples, 0.03%)</title><rect x="676.5" y="99.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.5" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (15 samples, 0.08%)</title><rect x="676.9" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.9" y="206.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (15 samples, 0.08%)</title><rect x="676.9" y="179.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="679.9" y="190.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (10 samples, 0.05%)</title><rect x="677.9" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (10 samples, 0.05%)</title><rect x="677.9" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (10 samples, 0.05%)</title><rect x="677.9" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (10 samples, 0.05%)</title><rect x="677.9" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (9 samples, 0.05%)</title><rect x="678.0" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (6 samples, 0.03%)</title><rect x="678.2" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (6 samples, 0.03%)</title><rect x="678.2" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.03%)</title><rect x="678.2" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.03%)</title><rect x="678.2" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.2" y="366.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (5 samples, 0.03%)</title><rect x="678.5" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.5" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (5 samples, 0.03%)</title><rect x="678.5" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.5" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (5 samples, 0.03%)</title><rect x="678.5" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.5" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (5 samples, 0.03%)</title><rect x="678.5" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.5" y="446.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (5 samples, 0.03%)</title><rect x="678.5" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (5 samples, 0.03%)</title><rect x="678.5" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (39 samples, 0.20%)</title><rect x="679.0" y="707.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (39 samples, 0.20%)</title><rect x="679.0" y="691.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (39 samples, 0.20%)</title><rect x="679.0" y="675.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (39 samples, 0.20%)</title><rect x="679.0" y="659.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (39 samples, 0.20%)</title><rect x="679.0" y="643.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (39 samples, 0.20%)</title><rect x="679.0" y="627.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (39 samples, 0.20%)</title><rect x="679.0" y="611.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (39 samples, 0.20%)</title><rect x="679.0" y="595.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (39 samples, 0.20%)</title><rect x="679.0" y="579.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (39 samples, 0.20%)</title><rect x="679.0" y="563.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (39 samples, 0.20%)</title><rect x="679.0" y="547.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (39 samples, 0.20%)</title><rect x="679.0" y="531.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (39 samples, 0.20%)</title><rect x="679.0" y="515.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (39 samples, 0.20%)</title><rect x="679.0" y="499.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (39 samples, 0.20%)</title><rect x="679.0" y="483.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (39 samples, 0.20%)</title><rect x="679.0" y="467.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (39 samples, 0.20%)</title><rect x="679.0" y="451.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="682.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (269 samples, 1.36%)</title><rect x="681.3" y="707.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.04%)</title><rect x="681.3" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.04%)</title><rect x="681.3" y="675.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$387/1360552641.get$Lambda (5 samples, 0.03%)</title><rect x="681.3" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$387 (5 samples, 0.03%)</title><rect x="681.3" y="643.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="684.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2015781843.linkToTargetMethod (5 samples, 0.03%)</title><rect x="681.8" y="691.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="684.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="681.8" y="675.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/975438429.get$Lambda (5 samples, 0.03%)</title><rect x="681.8" y="659.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.8" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$388 (5 samples, 0.03%)</title><rect x="681.8" y="643.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="684.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (55 samples, 0.28%)</title><rect x="682.0" y="691.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$389/894063145.accept (46 samples, 0.23%)</title><rect x="682.0" y="675.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (46 samples, 0.23%)</title><rect x="682.0" y="659.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (46 samples, 0.23%)</title><rect x="682.0" y="643.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (46 samples, 0.23%)</title><rect x="682.0" y="627.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (46 samples, 0.23%)</title><rect x="682.0" y="611.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (46 samples, 0.23%)</title><rect x="682.0" y="595.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.23%)</title><rect x="682.0" y="579.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.23%)</title><rect x="682.0" y="563.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (46 samples, 0.23%)</title><rect x="682.0" y="547.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (46 samples, 0.23%)</title><rect x="682.0" y="531.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (46 samples, 0.23%)</title><rect x="682.0" y="515.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (46 samples, 0.23%)</title><rect x="682.0" y="499.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (6 samples, 0.03%)</title><rect x="682.0" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (6 samples, 0.03%)</title><rect x="682.0" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (6 samples, 0.03%)</title><rect x="682.0" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (38 samples, 0.19%)</title><rect x="682.5" y="483.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (18 samples, 0.09%)</title><rect x="682.5" y="467.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.06%)</title><rect x="682.5" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.5" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.06%)</title><rect x="682.5" y="435.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="685.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (6 samples, 0.03%)</title><rect x="683.2" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.2" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (6 samples, 0.03%)</title><rect x="683.2" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.2" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (6 samples, 0.03%)</title><rect x="683.2" y="419.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="686.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (20 samples, 0.10%)</title><rect x="683.6" y="467.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$269/1544669751.get (20 samples, 0.10%)</title><rect x="683.6" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (20 samples, 0.10%)</title><rect x="683.6" y="435.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.10%)</title><rect x="683.6" y="419.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (19 samples, 0.10%)</title><rect x="683.7" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.7" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.08%)</title><rect x="683.9" y="387.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="686.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$392/1752394167.accept (9 samples, 0.05%)</title><rect x="684.8" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="687.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (9 samples, 0.05%)</title><rect x="684.8" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/975438429.run (9 samples, 0.05%)</title><rect x="684.8" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (9 samples, 0.05%)</title><rect x="684.8" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (9 samples, 0.05%)</title><rect x="684.8" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.05%)</title><rect x="684.8" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (9 samples, 0.05%)</title><rect x="684.8" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.8" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (9 samples, 0.05%)</title><rect x="684.8" y="563.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="687.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (18 samples, 0.09%)</title><rect x="685.3" y="691.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.3" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (18 samples, 0.09%)</title><rect x="685.3" y="675.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="688.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (13 samples, 0.07%)</title><rect x="686.4" y="691.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.05%)</title><rect x="686.4" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (9 samples, 0.05%)</title><rect x="686.4" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (9 samples, 0.05%)</title><rect x="686.4" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.05%)</title><rect x="686.4" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.05%)</title><rect x="686.4" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (9 samples, 0.05%)</title><rect x="686.4" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.4" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (9 samples, 0.05%)</title><rect x="686.4" y="579.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="689.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (43 samples, 0.22%)</title><rect x="687.2" y="691.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$292/1483596319.run (13 samples, 0.07%)</title><rect x="687.2" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (13 samples, 0.07%)</title><rect x="687.2" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.07%)</title><rect x="687.2" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.07%)</title><rect x="687.2" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 0.07%)</title><rect x="687.2" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (13 samples, 0.07%)</title><rect x="687.2" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (13 samples, 0.07%)</title><rect x="687.2" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (13 samples, 0.07%)</title><rect x="687.2" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (13 samples, 0.07%)</title><rect x="687.2" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (13 samples, 0.07%)</title><rect x="687.2" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (9 samples, 0.05%)</title><rect x="687.4" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.05%)</title><rect x="687.4" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.05%)</title><rect x="687.4" y="483.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.05%)</title><rect x="687.4" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.05%)</title><rect x="687.4" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.05%)</title><rect x="687.4" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (9 samples, 0.05%)</title><rect x="687.4" y="419.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="690.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$302/1986808666.run (30 samples, 0.15%)</title><rect x="687.9" y="675.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (30 samples, 0.15%)</title><rect x="687.9" y="659.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.07%)</title><rect x="687.9" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.07%)</title><rect x="687.9" y="627.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$407/438359882.get$Lambda (13 samples, 0.07%)</title><rect x="687.9" y="611.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$407 (13 samples, 0.07%)</title><rect x="687.9" y="595.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="690.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.09%)</title><rect x="688.7" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.09%)</title><rect x="688.7" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.09%)</title><rect x="688.7" y="611.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (17 samples, 0.09%)</title><rect x="688.7" y="595.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="691.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (42 samples, 0.21%)</title><rect x="689.7" y="691.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.7" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.now (15 samples, 0.08%)</title><rect x="689.7" y="675.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.7" y="686.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (15 samples, 0.08%)</title><rect x="689.7" y="659.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.7" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (15 samples, 0.08%)</title><rect x="689.7" y="643.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.7" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.create (15 samples, 0.08%)</title><rect x="689.7" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.7" y="638.0"></text>
</g>
<g>
<title>java.time.Instant (15 samples, 0.08%)</title><rect x="689.7" y="611.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="692.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (27 samples, 0.14%)</title><rect x="690.6" y="675.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="690.6" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="690.6" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$524/1727875309.get$Lambda (6 samples, 0.03%)</title><rect x="690.6" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$524 (6 samples, 0.03%)</title><rect x="690.6" y="611.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="693.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (21 samples, 0.11%)</title><rect x="691.0" y="659.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.0" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.04%)</title><rect x="691.0" y="643.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="694.0" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (14 samples, 0.07%)</title><rect x="691.4" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.4" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (14 samples, 0.07%)</title><rect x="691.4" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.4" y="638.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (14 samples, 0.07%)</title><rect x="691.4" y="611.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="694.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (40 samples, 0.20%)</title><rect x="692.2" y="691.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.03%)</title><rect x="692.2" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.03%)</title><rect x="692.2" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$386/601196166.get$Lambda (5 samples, 0.03%)</title><rect x="692.2" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$386 (5 samples, 0.03%)</title><rect x="692.2" y="627.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="695.2" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.10%)</title><rect x="692.5" y="675.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (15 samples, 0.08%)</title><rect x="692.8" y="659.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.8" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (15 samples, 0.08%)</title><rect x="692.8" y="643.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="695.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (16 samples, 0.08%)</title><rect x="693.7" y="675.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.7" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (16 samples, 0.08%)</title><rect x="693.7" y="659.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="696.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (19 samples, 0.10%)</title><rect x="694.6" y="691.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (19 samples, 0.10%)</title><rect x="694.6" y="675.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (19 samples, 0.10%)</title><rect x="694.6" y="659.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (19 samples, 0.10%)</title><rect x="694.6" y="643.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.6" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (19 samples, 0.10%)</title><rect x="694.6" y="627.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="697.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (13 samples, 0.07%)</title><rect x="695.7" y="691.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.7" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (13 samples, 0.07%)</title><rect x="695.7" y="675.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (13 samples, 0.07%)</title><rect x="695.7" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (13 samples, 0.07%)</title><rect x="695.7" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (5 samples, 0.03%)</title><rect x="695.7" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.7" y="638.0"></text>
</g>
<g>
<title>java.lang.Integer (5 samples, 0.03%)</title><rect x="695.7" y="611.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="698.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.04%)</title><rect x="696.0" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.04%)</title><rect x="696.0" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.04%)</title><rect x="696.0" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.04%)</title><rect x="696.0" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (8 samples, 0.04%)</title><rect x="696.0" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.0" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (8 samples, 0.04%)</title><rect x="696.0" y="547.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="699.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (9 samples, 0.05%)</title><rect x="696.5" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (9 samples, 0.05%)</title><rect x="696.5" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (9 samples, 0.05%)</title><rect x="696.5" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (9 samples, 0.05%)</title><rect x="696.5" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (7 samples, 0.04%)</title><rect x="696.5" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.5" y="638.0"></text>
</g>
<g>
<title>java.lang.Integer (7 samples, 0.04%)</title><rect x="696.5" y="611.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="699.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (5 samples, 0.03%)</title><rect x="697.1" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.03%)</title><rect x="697.1" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.03%)</title><rect x="697.1" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.1" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (5 samples, 0.03%)</title><rect x="697.1" y="643.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="700.1" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,274 samples, 41.75%)</title><rect x="697.4" y="707.0" width="492.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.4" y="718.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (366 samples, 1.85%)</title><rect x="697.4" y="691.0" width="21.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.4" y="702.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (366 samples, 1.85%)</title><rect x="697.4" y="675.0" width="21.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="700.4" y="686.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (7,908 samples, 39.90%)</title><rect x="719.1" y="691.0" width="470.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.1" y="702.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7,908 samples, 39.90%)</title><rect x="719.1" y="675.0" width="470.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.1" y="686.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7,908 samples, 39.90%)</title><rect x="719.1" y="659.0" width="470.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.1" y="670.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,184 samples, 5.97%)</title><rect x="719.1" y="643.0" width="70.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.1" y="654.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,184 samples, 5.97%)</title><rect x="719.1" y="627.0" width="70.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.1" y="638.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (663 samples, 3.35%)</title><rect x="719.1" y="611.0" width="39.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.1" y="622.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (394 samples, 1.99%)</title><rect x="719.1" y="595.0" width="23.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.1" y="606.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (394 samples, 1.99%)</title><rect x="719.1" y="579.0" width="23.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.1" y="590.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (394 samples, 1.99%)</title><rect x="719.1" y="563.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.1" y="574.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (394 samples, 1.99%)</title><rect x="719.1" y="547.0" width="23.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.1" y="558.0">j..</text>
</g>
<g>
<title>java.lang.String (179 samples, 0.90%)</title><rect x="719.1" y="531.0" width="10.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="722.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (215 samples, 1.08%)</title><rect x="729.8" y="531.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="732.8" y="542.0"></text>
</g>
<g>
<title>byte[] (215 samples, 1.08%)</title><rect x="729.8" y="515.0" width="12.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="732.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (269 samples, 1.36%)</title><rect x="742.6" y="595.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (269 samples, 1.36%)</title><rect x="742.6" y="579.0" width="16.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/636786234.linkToTargetMethod (260 samples, 1.31%)</title><rect x="742.6" y="563.0" width="15.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (260 samples, 1.31%)</title><rect x="742.6" y="547.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.get$Lambda (260 samples, 1.31%)</title><rect x="742.6" y="531.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$112 (260 samples, 1.31%)</title><rect x="742.6" y="515.0" width="15.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="745.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (9 samples, 0.05%)</title><rect x="758.1" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.05%)</title><rect x="758.1" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (9 samples, 0.05%)</title><rect x="758.1" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.05%)</title><rect x="758.1" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.05%)</title><rect x="758.1" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (9 samples, 0.05%)</title><rect x="758.1" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.05%)</title><rect x="758.1" y="467.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="761.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (521 samples, 2.63%)</title><rect x="758.6" y="611.0" width="31.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.6" y="622.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (521 samples, 2.63%)</title><rect x="758.6" y="595.0" width="31.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.6" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (521 samples, 2.63%)</title><rect x="758.6" y="579.0" width="31.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.6" y="590.0">ja..</text>
</g>
<g>
<title>java.lang.String (240 samples, 1.21%)</title><rect x="758.6" y="563.0" width="14.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="761.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (281 samples, 1.42%)</title><rect x="772.9" y="563.0" width="16.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.9" y="574.0"></text>
</g>
<g>
<title>byte[] (281 samples, 1.42%)</title><rect x="772.9" y="547.0" width="16.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="775.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,715 samples, 13.70%)</title><rect x="789.6" y="643.0" width="161.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.6" y="654.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one.nio.http.Request (278 samples, 1.40%)</title><rect x="789.6" y="627.0" width="16.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="792.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (815 samples, 4.11%)</title><rect x="806.2" y="627.0" width="48.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.2" y="638.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (746 samples, 3.76%)</title><rect x="806.2" y="611.0" width="44.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="809.2" y="622.0">java..</text>
</g>
<g>
<title>java.lang.String[] (69 samples, 0.35%)</title><rect x="850.6" y="611.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="853.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,622 samples, 8.18%)</title><rect x="854.7" y="627.0" width="96.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.7" y="638.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,622 samples, 8.18%)</title><rect x="854.7" y="611.0" width="96.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.7" y="622.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (1,049 samples, 5.29%)</title><rect x="854.7" y="595.0" width="62.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="857.7" y="606.0">char[]</text>
</g>
<g>
<title>char[] (5 samples, 0.03%)</title><rect x="917.2" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="920.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (223 samples, 1.13%)</title><rect x="917.5" y="595.0" width="13.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="920.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (345 samples, 1.74%)</title><rect x="930.8" y="595.0" width="20.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="933.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (345 samples, 1.74%)</title><rect x="930.8" y="579.0" width="20.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (345 samples, 1.74%)</title><rect x="930.8" y="563.0" width="20.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.8" y="574.0"></text>
</g>
<g>
<title>byte[] (345 samples, 1.74%)</title><rect x="930.8" y="547.0" width="20.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="933.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (73 samples, 0.37%)</title><rect x="951.3" y="643.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.3" y="654.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.37%)</title><rect x="951.3" y="627.0" width="4.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="954.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (236 samples, 1.19%)</title><rect x="955.6" y="643.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (236 samples, 1.19%)</title><rect x="955.6" y="627.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (236 samples, 1.19%)</title><rect x="955.6" y="611.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="958.6" y="622.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.60%)</title><rect x="955.6" y="595.0" width="7.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="958.6" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (118 samples, 0.60%)</title><rect x="962.7" y="595.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.7" y="606.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.60%)</title><rect x="962.7" y="579.0" width="7.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="965.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,700 samples, 18.67%)</title><rect x="969.7" y="643.0" width="220.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.7" y="654.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,700 samples, 18.67%)</title><rect x="969.7" y="627.0" width="220.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.7" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (1,915 samples, 9.66%)</title><rect x="969.7" y="611.0" width="114.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="972.7" y="622.0">char[]</text>
</g>
<g>
<title>char[] (25 samples, 0.13%)</title><rect x="1083.7" y="611.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1086.7" y="622.0"></text>
</g>
<g>
<title>java.lang.String (593 samples, 2.99%)</title><rect x="1085.2" y="611.0" width="35.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1088.2" y="622.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,167 samples, 5.89%)</title><rect x="1120.5" y="611.0" width="69.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.5" y="622.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,167 samples, 5.89%)</title><rect x="1120.5" y="595.0" width="69.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.5" y="606.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,167 samples, 5.89%)</title><rect x="1120.5" y="579.0" width="69.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.5" y="590.0">java/la..</text>
</g>
<g>
<title>byte[] (1,167 samples, 5.89%)</title><rect x="1120.5" y="563.0" width="69.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1123.5" y="574.0">byte[]</text>
</g>
</g>
</svg>
