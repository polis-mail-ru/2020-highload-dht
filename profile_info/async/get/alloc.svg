<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (95,412 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (57,830 samples, 60.61%)</title><rect x="10.0" y="691.0" width="715.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (57,830 samples, 60.61%)</title><rect x="10.0" y="675.0" width="715.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (57,830 samples, 60.61%)</title><rect x="10.0" y="659.0" width="715.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (40,438 samples, 42.38%)</title><rect x="10.0" y="643.0" width="500.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,039 samples, 8.43%)</title><rect x="10.0" y="627.0" width="99.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6,694 samples, 7.02%)</title><rect x="10.0" y="611.0" width="82.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (32 samples, 0.03%)</title><rect x="10.0" y="595.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1084020713.apply (6,662 samples, 6.98%)</title><rect x="10.4" y="595.0" width="82.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.4" y="606.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (6,662 samples, 6.98%)</title><rect x="10.4" y="579.0" width="82.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.4" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (6,662 samples, 6.98%)</title><rect x="10.4" y="563.0" width="82.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.4" y="574.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.05%)</title><rect x="10.4" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.05%)</title><rect x="10.4" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/491272286.get$Lambda (26 samples, 0.03%)</title><rect x="10.4" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$441 (26 samples, 0.03%)</title><rect x="10.4" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (96 samples, 0.10%)</title><rect x="11.0" y="547.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (96 samples, 0.10%)</title><rect x="11.0" y="531.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (61 samples, 0.06%)</title><rect x="11.0" y="515.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="14.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.04%)</title><rect x="11.7" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.04%)</title><rect x="11.7" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.04%)</title><rect x="11.7" y="483.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="14.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (228 samples, 0.24%)</title><rect x="12.1" y="547.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (228 samples, 0.24%)</title><rect x="12.1" y="531.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (122 samples, 0.13%)</title><rect x="12.1" y="515.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="15.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.11%)</title><rect x="13.6" y="515.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.11%)</title><rect x="13.6" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.11%)</title><rect x="13.6" y="483.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="16.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (6,058 samples, 6.35%)</title><rect x="15.0" y="547.0" width="74.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.0" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (6,058 samples, 6.35%)</title><rect x="15.0" y="531.0" width="74.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.0" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (6,058 samples, 6.35%)</title><rect x="15.0" y="515.0" width="74.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.0" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.09%)</title><rect x="15.0" y="499.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.09%)</title><rect x="15.0" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/925206735.get$Lambda (21 samples, 0.02%)</title><rect x="15.0" y="467.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$207 (21 samples, 0.02%)</title><rect x="15.0" y="451.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="18.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/868767352.get$Lambda (37 samples, 0.04%)</title><rect x="15.2" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$211 (37 samples, 0.04%)</title><rect x="15.2" y="451.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="18.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1315053200.get$Lambda (30 samples, 0.03%)</title><rect x="15.7" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$361 (30 samples, 0.03%)</title><rect x="15.7" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="18.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4,262 samples, 4.47%)</title><rect x="16.0" y="499.0" width="52.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.0" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4,262 samples, 4.47%)</title><rect x="16.0" y="483.0" width="52.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.0" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4,229 samples, 4.43%)</title><rect x="16.0" y="467.0" width="52.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.0" y="478.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1315053200.apply (4,229 samples, 4.43%)</title><rect x="16.0" y="451.0" width="52.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.0" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (4,229 samples, 4.43%)</title><rect x="16.0" y="435.0" width="52.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.0" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4,229 samples, 4.43%)</title><rect x="16.0" y="419.0" width="52.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.0" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/868767352.apply (4,229 samples, 4.43%)</title><rect x="16.0" y="403.0" width="52.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.0" y="414.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (4,229 samples, 4.43%)</title><rect x="16.0" y="387.0" width="52.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.0" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.04%)</title><rect x="16.0" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.04%)</title><rect x="16.0" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$435/1932218312.get$Lambda (42 samples, 0.04%)</title><rect x="16.0" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$435 (42 samples, 0.04%)</title><rect x="16.0" y="323.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="19.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (102 samples, 0.11%)</title><rect x="16.6" y="371.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (102 samples, 0.11%)</title><rect x="16.6" y="355.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (54 samples, 0.06%)</title><rect x="16.6" y="339.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="19.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.03%)</title><rect x="17.4" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.03%)</title><rect x="17.4" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.03%)</title><rect x="17.4" y="307.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="20.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (112 samples, 0.12%)</title><rect x="17.8" y="371.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (112 samples, 0.12%)</title><rect x="17.8" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (62 samples, 0.06%)</title><rect x="17.8" y="339.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="20.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.05%)</title><rect x="18.6" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.05%)</title><rect x="18.6" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.05%)</title><rect x="18.6" y="307.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="21.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (3,973 samples, 4.16%)</title><rect x="19.2" y="371.0" width="49.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.2" y="382.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.05%)</title><rect x="19.2" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.05%)</title><rect x="19.2" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$424/1323568008.get$Lambda (22 samples, 0.02%)</title><rect x="19.2" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$424 (22 samples, 0.02%)</title><rect x="19.2" y="307.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="22.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$430/2029056860.get$Lambda (21 samples, 0.02%)</title><rect x="19.5" y="323.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$430 (21 samples, 0.02%)</title><rect x="19.5" y="307.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,221 samples, 3.38%)</title><rect x="19.7" y="355.0" width="39.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.7" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,221 samples, 3.38%)</title><rect x="19.7" y="339.0" width="39.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.7" y="350.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (35 samples, 0.04%)</title><rect x="19.7" y="323.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="22.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$424/1323568008.apply (3,110 samples, 3.26%)</title><rect x="20.2" y="323.0" width="38.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.2" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,110 samples, 3.26%)</title><rect x="20.2" y="307.0" width="38.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.2" y="318.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (82 samples, 0.09%)</title><rect x="20.4" y="291.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (82 samples, 0.09%)</title><rect x="20.4" y="275.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (46 samples, 0.05%)</title><rect x="20.4" y="259.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="23.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.04%)</title><rect x="20.9" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.04%)</title><rect x="20.9" y="243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.04%)</title><rect x="20.9" y="227.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="23.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="21.4" y="291.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="24.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (65 samples, 0.07%)</title><rect x="21.9" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (36 samples, 0.04%)</title><rect x="21.9" y="275.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="24.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (29 samples, 0.03%)</title><rect x="22.4" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (26 samples, 0.03%)</title><rect x="22.4" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (26 samples, 0.03%)</title><rect x="22.4" y="243.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (26 samples, 0.03%)</title><rect x="22.4" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (26 samples, 0.03%)</title><rect x="22.4" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (26 samples, 0.03%)</title><rect x="22.4" y="195.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="25.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (97 samples, 0.10%)</title><rect x="22.7" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (97 samples, 0.10%)</title><rect x="22.7" y="275.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (27 samples, 0.03%)</title><rect x="22.7" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (27 samples, 0.03%)</title><rect x="22.7" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (27 samples, 0.03%)</title><rect x="22.7" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (27 samples, 0.03%)</title><rect x="22.7" y="211.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="25.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (70 samples, 0.07%)</title><rect x="23.1" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (70 samples, 0.07%)</title><rect x="23.1" y="243.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (53 samples, 0.06%)</title><rect x="23.1" y="227.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="26.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (2,806 samples, 2.94%)</title><rect x="23.9" y="291.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.9" y="302.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (33 samples, 0.03%)</title><rect x="23.9" y="275.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="26.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (216 samples, 0.23%)</title><rect x="24.3" y="275.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (216 samples, 0.23%)</title><rect x="24.3" y="259.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (216 samples, 0.23%)</title><rect x="24.3" y="243.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.3" y="254.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.23%)</title><rect x="24.3" y="227.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="27.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (102 samples, 0.11%)</title><rect x="27.0" y="275.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.0" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (102 samples, 0.11%)</title><rect x="27.0" y="259.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.0" y="270.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.11%)</title><rect x="27.0" y="243.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="30.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (253 samples, 0.27%)</title><rect x="28.3" y="275.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (253 samples, 0.27%)</title><rect x="28.3" y="259.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.04%)</title><rect x="28.3" y="243.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="31.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (216 samples, 0.23%)</title><rect x="28.7" y="243.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.7" y="254.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.23%)</title><rect x="28.7" y="227.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="31.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (69 samples, 0.07%)</title><rect x="31.4" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (69 samples, 0.07%)</title><rect x="31.4" y="259.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (69 samples, 0.07%)</title><rect x="31.4" y="243.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="34.4" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (34 samples, 0.04%)</title><rect x="32.3" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.3" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (34 samples, 0.04%)</title><rect x="32.3" y="259.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="35.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,666 samples, 1.75%)</title><rect x="32.7" y="275.0" width="20.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.7" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (34 samples, 0.04%)</title><rect x="32.7" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.04%)</title><rect x="32.7" y="243.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.04%)</title><rect x="32.7" y="227.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.7" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$466/1134579550.get$Lambda (34 samples, 0.04%)</title><rect x="32.7" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.7" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$466 (34 samples, 0.04%)</title><rect x="32.7" y="195.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="35.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (927 samples, 0.97%)</title><rect x="33.1" y="259.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="36.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (558 samples, 0.58%)</title><rect x="33.1" y="243.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.1" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (558 samples, 0.58%)</title><rect x="33.1" y="227.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.1" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (558 samples, 0.58%)</title><rect x="33.1" y="211.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (558 samples, 0.58%)</title><rect x="33.1" y="195.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.1" y="206.0"></text>
</g>
<g>
<title>byte[] (558 samples, 0.58%)</title><rect x="33.1" y="179.0" width="6.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="36.1" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (85 samples, 0.09%)</title><rect x="40.0" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (85 samples, 0.09%)</title><rect x="40.0" y="227.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (85 samples, 0.09%)</title><rect x="40.0" y="211.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (85 samples, 0.09%)</title><rect x="40.0" y="195.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="43.0" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (76 samples, 0.08%)</title><rect x="41.1" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.1" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (38 samples, 0.04%)</title><rect x="41.1" y="227.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="44.1" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (38 samples, 0.04%)</title><rect x="41.5" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.5" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (38 samples, 0.04%)</title><rect x="41.5" y="211.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="44.5" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$466/1134579550.test (208 samples, 0.22%)</title><rect x="42.0" y="243.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.0" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (208 samples, 0.22%)</title><rect x="42.0" y="227.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1442191055.test (208 samples, 0.22%)</title><rect x="42.0" y="211.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (208 samples, 0.22%)</title><rect x="42.0" y="195.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.0" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1019298652.test (208 samples, 0.22%)</title><rect x="42.0" y="179.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.0" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (208 samples, 0.22%)</title><rect x="42.0" y="163.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/119290689.test (208 samples, 0.22%)</title><rect x="42.0" y="147.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (208 samples, 0.22%)</title><rect x="42.0" y="131.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (208 samples, 0.22%)</title><rect x="42.0" y="115.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (208 samples, 0.22%)</title><rect x="42.0" y="99.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (94 samples, 0.10%)</title><rect x="42.0" y="83.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="45.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (114 samples, 0.12%)</title><rect x="43.2" y="83.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.2" y="94.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.12%)</title><rect x="43.2" y="67.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="46.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (705 samples, 0.74%)</title><rect x="44.6" y="259.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (705 samples, 0.74%)</title><rect x="44.6" y="243.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.6" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (705 samples, 0.74%)</title><rect x="44.6" y="227.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.6" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.02%)</title><rect x="44.8" y="211.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="47.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (63 samples, 0.07%)</title><rect x="45.1" y="211.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="48.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.03%)</title><rect x="46.1" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.03%)</title><rect x="46.1" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.1" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.get$Lambda (31 samples, 0.03%)</title><rect x="46.1" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.1" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (31 samples, 0.03%)</title><rect x="46.1" y="163.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="49.1" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (41 samples, 0.04%)</title><rect x="46.5" y="211.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.5" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (41 samples, 0.04%)</title><rect x="46.5" y="195.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="49.5" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (448 samples, 0.47%)</title><rect x="47.0" y="211.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (448 samples, 0.47%)</title><rect x="47.0" y="195.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.0" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (448 samples, 0.47%)</title><rect x="47.0" y="179.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.0" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (93 samples, 0.10%)</title><rect x="47.0" y="163.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.0" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (93 samples, 0.10%)</title><rect x="47.0" y="147.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (93 samples, 0.10%)</title><rect x="47.0" y="131.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (93 samples, 0.10%)</title><rect x="47.0" y="115.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (93 samples, 0.10%)</title><rect x="47.0" y="99.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.0" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (93 samples, 0.10%)</title><rect x="47.0" y="83.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.0" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (93 samples, 0.10%)</title><rect x="47.0" y="67.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.10%)</title><rect x="47.0" y="51.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.0" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.10%)</title><rect x="47.0" y="35.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="50.0" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (201 samples, 0.21%)</title><rect x="48.1" y="163.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.1" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (201 samples, 0.21%)</title><rect x="48.1" y="147.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (103 samples, 0.11%)</title><rect x="48.1" y="131.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (103 samples, 0.11%)</title><rect x="48.1" y="115.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.11%)</title><rect x="48.1" y="99.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="51.1" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (98 samples, 0.10%)</title><rect x="49.4" y="131.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (98 samples, 0.10%)</title><rect x="49.4" y="115.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="52.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (154 samples, 0.16%)</title><rect x="50.6" y="163.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (154 samples, 0.16%)</title><rect x="50.6" y="147.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (62 samples, 0.06%)</title><rect x="52.5" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (62 samples, 0.06%)</title><rect x="52.5" y="195.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="55.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (106 samples, 0.11%)</title><rect x="53.3" y="275.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.3" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (27 samples, 0.03%)</title><rect x="53.3" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.3" y="270.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="53.3" y="243.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="56.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.08%)</title><rect x="53.6" y="259.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (79 samples, 0.08%)</title><rect x="53.6" y="243.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (79 samples, 0.08%)</title><rect x="53.6" y="227.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.08%)</title><rect x="53.6" y="211.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (31 samples, 0.03%)</title><rect x="53.6" y="195.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.03%)</title><rect x="53.6" y="179.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="56.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (48 samples, 0.05%)</title><rect x="54.0" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (48 samples, 0.05%)</title><rect x="54.0" y="179.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.0" y="190.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.05%)</title><rect x="54.0" y="163.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="57.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (89 samples, 0.09%)</title><rect x="54.6" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (89 samples, 0.09%)</title><rect x="54.6" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 0.09%)</title><rect x="54.6" y="243.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (89 samples, 0.09%)</title><rect x="54.6" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (89 samples, 0.09%)</title><rect x="54.6" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.09%)</title><rect x="54.6" y="195.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (40 samples, 0.04%)</title><rect x="54.6" y="179.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.04%)</title><rect x="54.6" y="163.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="57.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (49 samples, 0.05%)</title><rect x="55.1" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (49 samples, 0.05%)</title><rect x="55.1" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.1" y="174.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.05%)</title><rect x="55.1" y="147.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="58.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (238 samples, 0.25%)</title><rect x="55.7" y="275.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.7" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (48 samples, 0.05%)</title><rect x="55.7" y="259.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="58.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (75 samples, 0.08%)</title><rect x="56.3" y="259.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.3" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (75 samples, 0.08%)</title><rect x="56.3" y="243.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="59.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (115 samples, 0.12%)</title><rect x="57.2" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.2" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (115 samples, 0.12%)</title><rect x="57.2" y="243.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="60.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.08%)</title><rect x="58.6" y="323.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (76 samples, 0.08%)</title><rect x="58.6" y="307.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (76 samples, 0.08%)</title><rect x="58.6" y="291.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="61.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (119 samples, 0.12%)</title><rect x="59.6" y="355.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="62.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="61.1" y="355.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="64.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (549 samples, 0.58%)</title><rect x="61.6" y="355.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.05%)</title><rect x="61.6" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.05%)</title><rect x="61.6" y="323.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$378/7833235.get$Lambda (31 samples, 0.03%)</title><rect x="61.6" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$378 (31 samples, 0.03%)</title><rect x="61.6" y="291.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="64.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (41 samples, 0.04%)</title><rect x="62.2" y="339.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="65.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (45 samples, 0.05%)</title><rect x="62.7" y="339.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="65.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (53 samples, 0.06%)</title><rect x="63.2" y="339.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="66.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (167 samples, 0.18%)</title><rect x="63.9" y="339.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (167 samples, 0.18%)</title><rect x="63.9" y="323.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (167 samples, 0.18%)</title><rect x="63.9" y="307.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (167 samples, 0.18%)</title><rect x="63.9" y="291.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (167 samples, 0.18%)</title><rect x="63.9" y="275.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (167 samples, 0.18%)</title><rect x="63.9" y="259.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (167 samples, 0.18%)</title><rect x="63.9" y="243.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (167 samples, 0.18%)</title><rect x="63.9" y="227.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (167 samples, 0.18%)</title><rect x="63.9" y="211.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.06%)</title><rect x="63.9" y="195.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.06%)</title><rect x="63.9" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$393/1560942433.get$Lambda (41 samples, 0.04%)</title><rect x="64.1" y="163.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.1" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$393 (41 samples, 0.04%)</title><rect x="64.1" y="147.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="67.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (52 samples, 0.05%)</title><rect x="64.6" y="195.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="67.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (57 samples, 0.06%)</title><rect x="65.2" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (57 samples, 0.06%)</title><rect x="65.2" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (37 samples, 0.04%)</title><rect x="65.5" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (37 samples, 0.04%)</title><rect x="65.5" y="147.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="68.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (149 samples, 0.16%)</title><rect x="65.9" y="339.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.9" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (37 samples, 0.04%)</title><rect x="65.9" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="68.9" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (79 samples, 0.08%)</title><rect x="66.4" y="323.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="69.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (33 samples, 0.03%)</title><rect x="67.4" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.4" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (33 samples, 0.03%)</title><rect x="67.4" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.4" y="318.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.03%)</title><rect x="67.4" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="70.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (46 samples, 0.05%)</title><rect x="67.8" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="67.8" y="323.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="70.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.03%)</title><rect x="68.3" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.03%)</title><rect x="68.3" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.03%)</title><rect x="68.3" y="435.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="71.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (78 samples, 0.08%)</title><rect x="68.8" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (78 samples, 0.08%)</title><rect x="68.8" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (39 samples, 0.04%)</title><rect x="68.8" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="71.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="69.2" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="69.2" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.04%)</title><rect x="69.2" y="435.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="72.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,630 samples, 1.71%)</title><rect x="69.7" y="499.0" width="20.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.05%)</title><rect x="69.7" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.05%)</title><rect x="69.7" y="467.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$343/982574544.get$Lambda (34 samples, 0.04%)</title><rect x="69.7" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$343 (34 samples, 0.04%)</title><rect x="69.7" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="72.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (86 samples, 0.09%)</title><rect x="70.3" y="483.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (86 samples, 0.09%)</title><rect x="70.3" y="467.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/975015434.apply (54 samples, 0.06%)</title><rect x="70.3" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (54 samples, 0.06%)</title><rect x="70.3" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (54 samples, 0.06%)</title><rect x="70.3" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.06%)</title><rect x="70.3" y="403.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="73.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.03%)</title><rect x="71.0" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.03%)</title><rect x="71.0" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.03%)</title><rect x="71.0" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="74.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (33 samples, 0.03%)</title><rect x="71.4" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (33 samples, 0.03%)</title><rect x="71.4" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.03%)</title><rect x="71.4" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.03%)</title><rect x="71.4" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.03%)</title><rect x="71.4" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="74.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,461 samples, 1.53%)</title><rect x="71.8" y="483.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,461 samples, 1.53%)</title><rect x="71.8" y="467.0" width="18.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (109 samples, 0.11%)</title><rect x="71.8" y="451.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="74.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,304 samples, 1.37%)</title><rect x="73.2" y="451.0" width="16.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.2" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (33 samples, 0.03%)</title><rect x="73.4" y="435.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="76.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (38 samples, 0.04%)</title><rect x="73.8" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="76.8" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (84 samples, 0.09%)</title><rect x="74.3" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.3" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (84 samples, 0.09%)</title><rect x="74.3" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.3" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (84 samples, 0.09%)</title><rect x="74.3" y="403.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="77.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (30 samples, 0.03%)</title><rect x="75.3" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (30 samples, 0.03%)</title><rect x="75.3" y="419.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="78.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (78 samples, 0.08%)</title><rect x="75.7" y="435.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="78.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (61 samples, 0.06%)</title><rect x="76.6" y="435.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="79.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (73 samples, 0.08%)</title><rect x="77.4" y="435.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="80.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (84 samples, 0.09%)</title><rect x="78.3" y="435.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="81.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (362 samples, 0.38%)</title><rect x="79.3" y="435.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (25 samples, 0.03%)</title><rect x="79.3" y="419.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="82.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (37 samples, 0.04%)</title><rect x="79.8" y="419.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="82.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.03%)</title><rect x="80.5" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.03%)</title><rect x="80.5" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.get$Lambda (28 samples, 0.03%)</title><rect x="80.5" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$333 (28 samples, 0.03%)</title><rect x="80.5" y="371.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="83.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (29 samples, 0.03%)</title><rect x="80.8" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (29 samples, 0.03%)</title><rect x="80.8" y="403.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="83.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (32 samples, 0.03%)</title><rect x="81.2" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="84.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.03%)</title><rect x="81.6" y="419.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="84.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (149 samples, 0.16%)</title><rect x="82.0" y="419.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (32 samples, 0.03%)</title><rect x="82.0" y="403.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="85.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (43 samples, 0.05%)</title><rect x="82.4" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="85.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (24 samples, 0.03%)</title><rect x="82.9" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.9" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (24 samples, 0.03%)</title><rect x="82.9" y="387.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="85.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (50 samples, 0.05%)</title><rect x="83.2" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (21 samples, 0.02%)</title><rect x="83.2" y="387.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="86.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (249 samples, 0.26%)</title><rect x="83.8" y="435.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (27 samples, 0.03%)</title><rect x="83.8" y="419.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="86.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (31 samples, 0.03%)</title><rect x="84.6" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (31 samples, 0.03%)</title><rect x="84.6" y="403.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="87.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (158 samples, 0.17%)</title><rect x="84.9" y="419.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (29 samples, 0.03%)</title><rect x="84.9" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="87.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (43 samples, 0.05%)</title><rect x="85.3" y="403.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="88.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (31 samples, 0.03%)</title><rect x="85.8" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (31 samples, 0.03%)</title><rect x="85.8" y="387.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="88.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (55 samples, 0.06%)</title><rect x="86.2" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (21 samples, 0.02%)</title><rect x="86.6" y="387.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="89.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (61 samples, 0.06%)</title><rect x="86.9" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (61 samples, 0.06%)</title><rect x="86.9" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (29 samples, 0.03%)</title><rect x="86.9" y="403.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="89.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (32 samples, 0.03%)</title><rect x="87.2" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (32 samples, 0.03%)</title><rect x="87.2" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.2" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (32 samples, 0.03%)</title><rect x="87.2" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (32 samples, 0.03%)</title><rect x="87.2" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.03%)</title><rect x="87.2" y="339.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="90.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (133 samples, 0.14%)</title><rect x="87.6" y="435.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2015781843.linkToTargetMethod (27 samples, 0.03%)</title><rect x="87.6" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="87.6" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$244/1029230441.get$Lambda (27 samples, 0.03%)</title><rect x="87.6" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$244 (27 samples, 0.03%)</title><rect x="87.6" y="371.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="90.6" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (106 samples, 0.11%)</title><rect x="88.0" y="419.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$244/1029230441.run (106 samples, 0.11%)</title><rect x="88.0" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (106 samples, 0.11%)</title><rect x="88.0" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.0" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (29 samples, 0.03%)</title><rect x="88.0" y="371.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="91.0" y="382.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (77 samples, 0.08%)</title><rect x="88.3" y="371.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.3" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (38 samples, 0.04%)</title><rect x="88.3" y="355.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="91.3" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (39 samples, 0.04%)</title><rect x="88.8" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.8" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (39 samples, 0.04%)</title><rect x="88.8" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.8" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (39 samples, 0.04%)</title><rect x="88.8" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.8" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (39 samples, 0.04%)</title><rect x="88.8" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.8" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (39 samples, 0.04%)</title><rect x="88.8" y="291.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="91.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (48 samples, 0.05%)</title><rect x="89.3" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.05%)</title><rect x="89.3" y="435.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="92.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (46 samples, 0.05%)</title><rect x="89.9" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (46 samples, 0.05%)</title><rect x="89.9" y="531.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (46 samples, 0.05%)</title><rect x="89.9" y="515.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.9" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (46 samples, 0.05%)</title><rect x="89.9" y="499.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="92.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (189 samples, 0.20%)</title><rect x="90.5" y="547.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (145 samples, 0.15%)</title><rect x="90.5" y="531.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="93.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (44 samples, 0.05%)</title><rect x="92.2" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (44 samples, 0.05%)</title><rect x="92.2" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (44 samples, 0.05%)</title><rect x="92.2" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.2" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (44 samples, 0.05%)</title><rect x="92.2" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (44 samples, 0.05%)</title><rect x="92.2" y="467.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (44 samples, 0.05%)</title><rect x="92.2" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (44 samples, 0.05%)</title><rect x="92.2" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.2" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (44 samples, 0.05%)</title><rect x="92.2" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (44 samples, 0.05%)</title><rect x="92.2" y="403.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.2" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (44 samples, 0.05%)</title><rect x="92.2" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.2" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (44 samples, 0.05%)</title><rect x="92.2" y="371.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="95.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,345 samples, 1.41%)</title><rect x="92.8" y="611.0" width="16.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,345 samples, 1.41%)</title><rect x="92.8" y="595.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.accept (1,316 samples, 1.38%)</title><rect x="92.8" y="579.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (1,316 samples, 1.38%)</title><rect x="92.8" y="563.0" width="16.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (571 samples, 0.60%)</title><rect x="92.8" y="547.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (571 samples, 0.60%)</title><rect x="92.8" y="531.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (571 samples, 0.60%)</title><rect x="92.8" y="515.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (436 samples, 0.46%)</title><rect x="92.8" y="499.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.8" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (436 samples, 0.46%)</title><rect x="92.8" y="483.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.8" y="494.0"></text>
</g>
<g>
<title>byte[] (436 samples, 0.46%)</title><rect x="92.8" y="467.0" width="5.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="95.8" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (135 samples, 0.14%)</title><rect x="98.2" y="499.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.2" y="510.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (135 samples, 0.14%)</title><rect x="98.2" y="483.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="101.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (745 samples, 0.78%)</title><rect x="99.8" y="547.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.linkToTargetMethod (266 samples, 0.28%)</title><rect x="99.8" y="531.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="102.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1841757097.invoke (266 samples, 0.28%)</title><rect x="99.8" y="515.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (266 samples, 0.28%)</title><rect x="99.8" y="499.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (83 samples, 0.09%)</title><rect x="99.8" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.09%)</title><rect x="99.8" y="467.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="102.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (183 samples, 0.19%)</title><rect x="100.9" y="483.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (183 samples, 0.19%)</title><rect x="100.9" y="467.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.9" y="478.0"></text>
</g>
<g>
<title>byte[] (183 samples, 0.19%)</title><rect x="100.9" y="451.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="103.9" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Response (82 samples, 0.09%)</title><rect x="103.1" y="531.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="106.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (397 samples, 0.42%)</title><rect x="104.2" y="531.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.2" y="542.0"></text>
</g>
<g>
<title>byte[] (166 samples, 0.17%)</title><rect x="104.2" y="515.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="107.2" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (129 samples, 0.14%)</title><rect x="106.2" y="515.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="109.2" y="526.0"></text>
</g>
<g>
<title>java.lang.String (102 samples, 0.11%)</title><rect x="107.8" y="515.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="110.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.accept (29 samples, 0.03%)</title><rect x="109.1" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (29 samples, 0.03%)</title><rect x="109.1" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (29 samples, 0.03%)</title><rect x="109.1" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.03%)</title><rect x="109.1" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.03%)</title><rect x="109.1" y="515.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="112.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$654/1765400375.get (32,399 samples, 33.96%)</title><rect x="109.4" y="627.0" width="400.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.4" y="638.0">ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$La..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$get$13 (32,399 samples, 33.96%)</title><rect x="109.4" y="611.0" width="400.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.4" y="622.0">ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lam..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (150 samples, 0.16%)</title><rect x="109.4" y="595.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="112.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (31,529 samples, 33.05%)</title><rect x="111.3" y="595.0" width="389.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.3" y="606.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,383 samples, 3.55%)</title><rect x="111.3" y="579.0" width="41.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.3" y="590.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,945 samples, 3.09%)</title><rect x="111.3" y="563.0" width="36.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.3" y="574.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (108 samples, 0.11%)</title><rect x="111.3" y="547.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (108 samples, 0.11%)</title><rect x="111.3" y="531.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (108 samples, 0.11%)</title><rect x="111.3" y="515.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (108 samples, 0.11%)</title><rect x="111.3" y="499.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (47 samples, 0.05%)</title><rect x="111.3" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.3" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.03%)</title><rect x="111.3" y="467.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="114.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (39 samples, 0.04%)</title><rect x="112.1" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (27 samples, 0.03%)</title><rect x="112.1" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.1" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.02%)</title><rect x="112.1" y="451.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="115.1" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,837 samples, 2.97%)</title><rect x="112.6" y="547.0" width="35.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.6" y="558.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,837 samples, 2.97%)</title><rect x="112.6" y="531.0" width="35.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.6" y="542.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,837 samples, 2.97%)</title><rect x="112.6" y="515.0" width="35.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.6" y="526.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,837 samples, 2.97%)</title><rect x="112.6" y="499.0" width="35.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.6" y="510.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,837 samples, 2.97%)</title><rect x="112.6" y="483.0" width="35.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.6" y="494.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,837 samples, 2.97%)</title><rect x="112.6" y="467.0" width="35.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.6" y="478.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,601 samples, 2.73%)</title><rect x="112.6" y="451.0" width="32.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.6" y="462.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (2,601 samples, 2.73%)</title><rect x="112.6" y="435.0" width="32.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.6" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (2,601 samples, 2.73%)</title><rect x="112.6" y="419.0" width="32.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.6" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (2,601 samples, 2.73%)</title><rect x="112.6" y="403.0" width="32.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.6" y="414.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (997 samples, 1.04%)</title><rect x="112.6" y="387.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.6" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (640 samples, 0.67%)</title><rect x="112.6" y="371.0" width="7.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="115.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (357 samples, 0.37%)</title><rect x="120.5" y="371.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.5" y="382.0"></text>
</g>
<g>
<title>byte[] (357 samples, 0.37%)</title><rect x="120.5" y="355.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="123.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (116 samples, 0.12%)</title><rect x="124.9" y="387.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="127.9" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (109 samples, 0.11%)</title><rect x="126.4" y="387.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="129.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (336 samples, 0.35%)</title><rect x="127.7" y="387.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (336 samples, 0.35%)</title><rect x="127.7" y="371.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (229 samples, 0.24%)</title><rect x="127.7" y="355.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="130.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (107 samples, 0.11%)</title><rect x="130.6" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.6" y="366.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.11%)</title><rect x="130.6" y="339.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="133.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (1,043 samples, 1.09%)</title><rect x="131.9" y="387.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (702 samples, 0.74%)</title><rect x="131.9" y="371.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.9" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (434 samples, 0.45%)</title><rect x="131.9" y="355.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="134.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (268 samples, 0.28%)</title><rect x="137.2" y="355.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.2" y="366.0"></text>
</g>
<g>
<title>byte[] (268 samples, 0.28%)</title><rect x="137.2" y="339.0" width="3.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="140.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (341 samples, 0.36%)</title><rect x="140.6" y="371.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (341 samples, 0.36%)</title><rect x="140.6" y="355.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (232 samples, 0.24%)</title><rect x="140.6" y="339.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="143.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (109 samples, 0.11%)</title><rect x="143.4" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.4" y="350.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.11%)</title><rect x="143.4" y="323.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="146.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (236 samples, 0.25%)</title><rect x="144.8" y="451.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.8" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (236 samples, 0.25%)</title><rect x="144.8" y="435.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (236 samples, 0.25%)</title><rect x="144.8" y="419.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (236 samples, 0.25%)</title><rect x="144.8" y="403.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (236 samples, 0.25%)</title><rect x="144.8" y="387.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (236 samples, 0.25%)</title><rect x="144.8" y="371.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.8" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (236 samples, 0.25%)</title><rect x="144.8" y="355.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="147.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$671/1425168384.apply (438 samples, 0.46%)</title><rect x="147.7" y="563.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (438 samples, 0.46%)</title><rect x="147.7" y="547.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (438 samples, 0.46%)</title><rect x="147.7" y="531.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.7" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (438 samples, 0.46%)</title><rect x="147.7" y="515.0" width="5.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="150.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (207 samples, 0.22%)</title><rect x="153.1" y="579.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.1" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (207 samples, 0.22%)</title><rect x="153.1" y="563.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.1" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (207 samples, 0.22%)</title><rect x="153.1" y="547.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="156.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (27,939 samples, 29.28%)</title><rect x="155.7" y="579.0" width="345.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.7" y="590.0">ru/mail/polis/dao/re1nex/NewDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4,616 samples, 4.84%)</title><rect x="155.7" y="563.0" width="57.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.7" y="574.0">com/go..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (79 samples, 0.08%)</title><rect x="155.7" y="547.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="158.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4,537 samples, 4.76%)</title><rect x="156.7" y="547.0" width="56.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.7" y="558.0">com/go..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (116 samples, 0.12%)</title><rect x="156.7" y="531.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="159.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (252 samples, 0.26%)</title><rect x="158.1" y="531.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.1" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (252 samples, 0.26%)</title><rect x="158.1" y="515.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="161.1" y="526.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (125 samples, 0.13%)</title><rect x="161.2" y="531.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="164.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (119 samples, 0.12%)</title><rect x="162.7" y="531.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (119 samples, 0.12%)</title><rect x="162.7" y="515.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="165.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,833 samples, 2.97%)</title><rect x="164.2" y="531.0" width="35.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.2" y="542.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,833 samples, 2.97%)</title><rect x="164.2" y="515.0" width="35.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.2" y="526.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,833 samples, 2.97%)</title><rect x="164.2" y="499.0" width="35.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.2" y="510.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,833 samples, 2.97%)</title><rect x="164.2" y="483.0" width="35.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.2" y="494.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,833 samples, 2.97%)</title><rect x="164.2" y="467.0" width="35.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.2" y="478.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,833 samples, 2.97%)</title><rect x="164.2" y="451.0" width="35.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.2" y="462.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,619 samples, 2.74%)</title><rect x="164.2" y="435.0" width="32.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.2" y="446.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (2,619 samples, 2.74%)</title><rect x="164.2" y="419.0" width="32.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.2" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (2,619 samples, 2.74%)</title><rect x="164.2" y="403.0" width="32.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.2" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (2,619 samples, 2.74%)</title><rect x="164.2" y="387.0" width="32.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.2" y="398.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,016 samples, 1.06%)</title><rect x="164.2" y="371.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.2" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (635 samples, 0.67%)</title><rect x="164.2" y="355.0" width="7.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="167.2" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (381 samples, 0.40%)</title><rect x="172.1" y="355.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.1" y="366.0"></text>
</g>
<g>
<title>byte[] (381 samples, 0.40%)</title><rect x="172.1" y="339.0" width="4.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="175.1" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (121 samples, 0.13%)</title><rect x="176.8" y="371.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="179.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (83 samples, 0.09%)</title><rect x="178.3" y="371.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="181.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (350 samples, 0.37%)</title><rect x="179.3" y="371.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.3" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (350 samples, 0.37%)</title><rect x="179.3" y="355.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (228 samples, 0.24%)</title><rect x="179.3" y="339.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="182.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (122 samples, 0.13%)</title><rect x="182.1" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.1" y="350.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.13%)</title><rect x="182.1" y="323.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="185.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (1,049 samples, 1.10%)</title><rect x="183.6" y="371.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (714 samples, 0.75%)</title><rect x="183.6" y="355.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (472 samples, 0.49%)</title><rect x="183.6" y="339.0" width="5.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="186.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (242 samples, 0.25%)</title><rect x="189.5" y="339.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.5" y="350.0"></text>
</g>
<g>
<title>byte[] (242 samples, 0.25%)</title><rect x="189.5" y="323.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="192.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (335 samples, 0.35%)</title><rect x="192.5" y="355.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (335 samples, 0.35%)</title><rect x="192.5" y="339.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.5" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (199 samples, 0.21%)</title><rect x="192.5" y="323.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="195.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (136 samples, 0.14%)</title><rect x="194.9" y="323.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.9" y="334.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.14%)</title><rect x="194.9" y="307.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="197.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (214 samples, 0.22%)</title><rect x="196.6" y="435.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (214 samples, 0.22%)</title><rect x="196.6" y="419.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (214 samples, 0.22%)</title><rect x="196.6" y="403.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (214 samples, 0.22%)</title><rect x="196.6" y="387.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (214 samples, 0.22%)</title><rect x="196.6" y="371.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (214 samples, 0.22%)</title><rect x="196.6" y="355.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (214 samples, 0.22%)</title><rect x="196.6" y="339.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="199.6" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1,092 samples, 1.14%)</title><rect x="199.3" y="531.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (1,092 samples, 1.14%)</title><rect x="199.3" y="515.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (1,092 samples, 1.14%)</title><rect x="199.3" y="499.0" width="13.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (260 samples, 0.27%)</title><rect x="199.3" y="483.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$648/1444948168.getAsBoolean (260 samples, 0.27%)</title><rect x="199.3" y="467.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (260 samples, 0.27%)</title><rect x="199.3" y="451.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (260 samples, 0.27%)</title><rect x="199.3" y="435.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (132 samples, 0.14%)</title><rect x="199.3" y="419.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (132 samples, 0.14%)</title><rect x="199.3" y="403.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.3" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (132 samples, 0.14%)</title><rect x="199.3" y="387.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="202.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (128 samples, 0.13%)</title><rect x="200.9" y="419.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$645/1567275606.apply (128 samples, 0.13%)</title><rect x="200.9" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (128 samples, 0.13%)</title><rect x="200.9" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.9" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (128 samples, 0.13%)</title><rect x="200.9" y="371.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="203.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (832 samples, 0.87%)</title><rect x="202.5" y="483.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.5" y="494.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (195 samples, 0.20%)</title><rect x="202.5" y="467.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="205.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (160 samples, 0.17%)</title><rect x="204.9" y="467.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (160 samples, 0.17%)</title><rect x="204.9" y="451.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$647/1581947954.get$Lambda (87 samples, 0.09%)</title><rect x="204.9" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.9" y="446.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$647 (87 samples, 0.09%)</title><rect x="204.9" y="419.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="207.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$648/1444948168.get$Lambda (73 samples, 0.08%)</title><rect x="206.0" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.0" y="446.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$648 (73 samples, 0.08%)</title><rect x="206.0" y="419.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="209.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (123 samples, 0.13%)</title><rect x="206.9" y="467.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (123 samples, 0.13%)</title><rect x="206.9" y="451.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.9" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (123 samples, 0.13%)</title><rect x="206.9" y="435.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="209.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (354 samples, 0.37%)</title><rect x="208.4" y="467.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (354 samples, 0.37%)</title><rect x="208.4" y="451.0" width="4.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="211.4" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (116 samples, 0.12%)</title><rect x="212.8" y="563.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="215.8" y="574.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (18,478 samples, 19.37%)</title><rect x="214.2" y="563.0" width="228.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.2" y="574.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (302 samples, 0.32%)</title><rect x="214.2" y="547.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.2" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (119 samples, 0.12%)</title><rect x="214.2" y="531.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="217.2" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (183 samples, 0.19%)</title><rect x="215.7" y="531.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (183 samples, 0.19%)</title><rect x="215.7" y="515.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.7" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (183 samples, 0.19%)</title><rect x="215.7" y="499.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="218.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$661/742609776.accept (18,176 samples, 19.05%)</title><rect x="217.9" y="547.0" width="224.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.9" y="558.0">ru/mail/polis/dao/re1nex/NewDA..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$cellIterator$5 (18,176 samples, 19.05%)</title><rect x="217.9" y="531.0" width="224.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.9" y="542.0">ru/mail/polis/dao/re1nex/NewDA..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.iterator (18,176 samples, 19.05%)</title><rect x="217.9" y="515.0" width="224.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.9" y="526.0">ru/mail/polis/dao/re1nex/SSTab..</text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.SSTable$1 (141 samples, 0.15%)</title><rect x="217.9" y="499.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="220.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt; (18,035 samples, 18.90%)</title><rect x="219.7" y="499.0" width="223.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.7" y="510.0">ru/mail/polis/dao/re1nex/SSTa..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.binarySearch (18,035 samples, 18.90%)</title><rect x="219.7" y="483.0" width="223.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.7" y="494.0">ru/mail/polis/dao/re1nex/SSTa..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (18,035 samples, 18.90%)</title><rect x="219.7" y="467.0" width="223.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.7" y="478.0">ru/mail/polis/dao/re1nex/SSTa..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12,364 samples, 12.96%)</title><rect x="219.7" y="451.0" width="152.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.7" y="462.0">java/nio/ByteBuffer..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7,908 samples, 8.29%)</title><rect x="219.7" y="435.0" width="97.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="222.7" y="446.0">java.nio.He..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,456 samples, 4.67%)</title><rect x="317.5" y="435.0" width="55.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="320.5" y="446.0">java/..</text>
</g>
<g>
<title>byte[] (4,456 samples, 4.67%)</title><rect x="317.5" y="419.0" width="55.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="320.5" y="430.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (5,671 samples, 5.94%)</title><rect x="372.6" y="451.0" width="70.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.6" y="462.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5,671 samples, 5.94%)</title><rect x="372.6" y="435.0" width="70.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.6" y="446.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,776 samples, 3.96%)</title><rect x="372.6" y="419.0" width="46.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="375.6" y="430.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,895 samples, 1.99%)</title><rect x="419.3" y="419.0" width="23.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.3" y="430.0">j..</text>
</g>
<g>
<title>byte[] (1,895 samples, 1.99%)</title><rect x="419.3" y="403.0" width="23.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="422.3" y="414.0">b..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (121 samples, 0.13%)</title><rect x="442.7" y="563.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (121 samples, 0.13%)</title><rect x="442.7" y="547.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$661/742609776.get$Lambda (121 samples, 0.13%)</title><rect x="442.7" y="531.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.7" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$661 (121 samples, 0.13%)</title><rect x="442.7" y="515.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="445.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (110 samples, 0.12%)</title><rect x="444.2" y="563.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.2" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (110 samples, 0.12%)</title><rect x="444.2" y="547.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="447.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (85 samples, 0.09%)</title><rect x="445.6" y="563.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="448.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (85 samples, 0.09%)</title><rect x="445.6" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (85 samples, 0.09%)</title><rect x="445.6" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (83 samples, 0.09%)</title><rect x="445.6" y="515.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.6" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (83 samples, 0.09%)</title><rect x="445.6" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="448.6" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (47 samples, 0.05%)</title><rect x="445.6" y="483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.6" y="494.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (47 samples, 0.05%)</title><rect x="445.6" y="467.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="448.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (36 samples, 0.04%)</title><rect x="446.2" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (36 samples, 0.04%)</title><rect x="446.2" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (36 samples, 0.04%)</title><rect x="446.2" y="451.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="449.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2,978 samples, 3.12%)</title><rect x="446.6" y="563.0" width="36.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.6" y="574.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (105 samples, 0.11%)</title><rect x="446.6" y="547.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="449.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2,873 samples, 3.01%)</title><rect x="447.9" y="547.0" width="35.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.9" y="558.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,873 samples, 3.01%)</title><rect x="447.9" y="531.0" width="35.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.9" y="542.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (123 samples, 0.13%)</title><rect x="447.9" y="515.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (123 samples, 0.13%)</title><rect x="447.9" y="499.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (123 samples, 0.13%)</title><rect x="447.9" y="483.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (123 samples, 0.13%)</title><rect x="447.9" y="467.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (48 samples, 0.05%)</title><rect x="447.9" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.9" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.03%)</title><rect x="447.9" y="435.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="450.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (49 samples, 0.05%)</title><rect x="448.8" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.04%)</title><rect x="448.8" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.8" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.03%)</title><rect x="448.8" y="419.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="451.8" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,750 samples, 2.88%)</title><rect x="449.5" y="515.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.5" y="526.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,750 samples, 2.88%)</title><rect x="449.5" y="499.0" width="34.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.5" y="510.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,750 samples, 2.88%)</title><rect x="449.5" y="483.0" width="34.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.5" y="494.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,750 samples, 2.88%)</title><rect x="449.5" y="467.0" width="34.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.5" y="478.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,750 samples, 2.88%)</title><rect x="449.5" y="451.0" width="34.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.5" y="462.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,750 samples, 2.88%)</title><rect x="449.5" y="435.0" width="34.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.5" y="446.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2,528 samples, 2.65%)</title><rect x="449.5" y="419.0" width="31.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.5" y="430.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (2,528 samples, 2.65%)</title><rect x="449.5" y="403.0" width="31.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.5" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (2,528 samples, 2.65%)</title><rect x="449.5" y="387.0" width="31.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.5" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (2,528 samples, 2.65%)</title><rect x="449.5" y="371.0" width="31.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.5" y="382.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (960 samples, 1.01%)</title><rect x="449.5" y="355.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (625 samples, 0.66%)</title><rect x="449.5" y="339.0" width="7.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="452.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (335 samples, 0.35%)</title><rect x="457.2" y="339.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.2" y="350.0"></text>
</g>
<g>
<title>byte[] (335 samples, 0.35%)</title><rect x="457.2" y="323.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="460.2" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (117 samples, 0.12%)</title><rect x="461.3" y="355.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="464.3" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (103 samples, 0.11%)</title><rect x="462.8" y="355.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="465.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (335 samples, 0.35%)</title><rect x="464.0" y="355.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (335 samples, 0.35%)</title><rect x="464.0" y="339.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.0" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (226 samples, 0.24%)</title><rect x="464.0" y="323.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="467.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (109 samples, 0.11%)</title><rect x="466.8" y="323.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.8" y="334.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.11%)</title><rect x="466.8" y="307.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="469.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (1,013 samples, 1.06%)</title><rect x="468.2" y="355.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (680 samples, 0.71%)</title><rect x="468.2" y="339.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.2" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (440 samples, 0.46%)</title><rect x="468.2" y="323.0" width="5.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="471.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (240 samples, 0.25%)</title><rect x="473.6" y="323.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.6" y="334.0"></text>
</g>
<g>
<title>byte[] (240 samples, 0.25%)</title><rect x="473.6" y="307.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="476.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (333 samples, 0.35%)</title><rect x="476.6" y="339.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (333 samples, 0.35%)</title><rect x="476.6" y="323.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.6" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (223 samples, 0.23%)</title><rect x="476.6" y="307.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="479.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (110 samples, 0.12%)</title><rect x="479.4" y="307.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.4" y="318.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.12%)</title><rect x="479.4" y="291.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="482.4" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (222 samples, 0.23%)</title><rect x="480.7" y="419.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.7" y="430.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (222 samples, 0.23%)</title><rect x="480.7" y="403.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (222 samples, 0.23%)</title><rect x="480.7" y="387.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (222 samples, 0.23%)</title><rect x="480.7" y="371.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (222 samples, 0.23%)</title><rect x="480.7" y="355.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (222 samples, 0.23%)</title><rect x="480.7" y="339.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (222 samples, 0.23%)</title><rect x="480.7" y="323.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="483.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (1,435 samples, 1.50%)</title><rect x="483.5" y="563.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.5" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (407 samples, 0.43%)</title><rect x="483.5" y="547.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (148 samples, 0.16%)</title><rect x="483.5" y="531.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (148 samples, 0.16%)</title><rect x="483.5" y="515.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="486.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (259 samples, 0.27%)</title><rect x="485.3" y="531.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.3" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (259 samples, 0.27%)</title><rect x="485.3" y="515.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="488.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (76 samples, 0.08%)</title><rect x="488.5" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (76 samples, 0.08%)</title><rect x="488.5" y="531.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="491.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (240 samples, 0.25%)</title><rect x="489.4" y="547.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (240 samples, 0.25%)</title><rect x="489.4" y="531.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (240 samples, 0.25%)</title><rect x="489.4" y="515.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (240 samples, 0.25%)</title><rect x="489.4" y="499.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="492.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (407 samples, 0.43%)</title><rect x="492.4" y="547.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="495.4" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (109 samples, 0.11%)</title><rect x="492.4" y="531.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.4" y="542.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (109 samples, 0.11%)</title><rect x="492.4" y="515.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="495.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (298 samples, 0.31%)</title><rect x="493.8" y="531.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.07%)</title><rect x="493.8" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.07%)</title><rect x="493.8" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$646/690068454.get$Lambda (69 samples, 0.07%)</title><rect x="493.8" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.8" y="494.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$646 (69 samples, 0.07%)</title><rect x="493.8" y="467.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="496.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (229 samples, 0.24%)</title><rect x="494.6" y="515.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (229 samples, 0.24%)</title><rect x="494.6" y="499.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="497.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (305 samples, 0.32%)</title><rect x="497.4" y="547.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.4" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (305 samples, 0.32%)</title><rect x="497.4" y="531.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="500.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (140 samples, 0.15%)</title><rect x="501.2" y="595.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.2" y="606.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.15%)</title><rect x="501.2" y="579.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="504.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (437 samples, 0.46%)</title><rect x="502.9" y="595.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (224 samples, 0.23%)</title><rect x="502.9" y="579.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (224 samples, 0.23%)</title><rect x="502.9" y="563.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (224 samples, 0.23%)</title><rect x="502.9" y="547.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="505.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (224 samples, 0.23%)</title><rect x="502.9" y="531.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.9" y="542.0"></text>
</g>
<g>
<title>byte[] (224 samples, 0.23%)</title><rect x="502.9" y="515.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="505.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (213 samples, 0.22%)</title><rect x="505.7" y="579.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (213 samples, 0.22%)</title><rect x="505.7" y="563.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.7" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (213 samples, 0.22%)</title><rect x="505.7" y="547.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="508.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.&lt;init&gt; (143 samples, 0.15%)</title><rect x="508.3" y="595.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.&lt;init&gt; (143 samples, 0.15%)</title><rect x="508.3" y="579.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.3" y="590.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.15%)</title><rect x="508.3" y="563.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="511.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (482 samples, 0.51%)</title><rect x="510.1" y="643.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (482 samples, 0.51%)</title><rect x="510.1" y="627.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (482 samples, 0.51%)</title><rect x="510.1" y="611.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (482 samples, 0.51%)</title><rect x="510.1" y="595.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (482 samples, 0.51%)</title><rect x="510.1" y="579.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (482 samples, 0.51%)</title><rect x="510.1" y="563.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.accept (482 samples, 0.51%)</title><rect x="510.1" y="547.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (482 samples, 0.51%)</title><rect x="510.1" y="531.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (403 samples, 0.42%)</title><rect x="510.1" y="515.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (403 samples, 0.42%)</title><rect x="510.1" y="499.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (403 samples, 0.42%)</title><rect x="510.1" y="483.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (403 samples, 0.42%)</title><rect x="510.1" y="467.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$203/366038914.accept (403 samples, 0.42%)</title><rect x="510.1" y="451.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$15 (403 samples, 0.42%)</title><rect x="510.1" y="435.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (118 samples, 0.12%)</title><rect x="510.1" y="419.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (118 samples, 0.12%)</title><rect x="510.1" y="403.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (118 samples, 0.12%)</title><rect x="510.1" y="387.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (80 samples, 0.08%)</title><rect x="510.1" y="371.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (80 samples, 0.08%)</title><rect x="510.1" y="355.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.1" y="366.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.08%)</title><rect x="510.1" y="339.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="513.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 0.04%)</title><rect x="511.1" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.1" y="382.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (38 samples, 0.04%)</title><rect x="511.1" y="355.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="514.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$658/677759461.mergeResponse (285 samples, 0.30%)</title><rect x="511.6" y="419.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$3 (285 samples, 0.30%)</title><rect x="511.6" y="403.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergeGetResponseBuilders (285 samples, 0.30%)</title><rect x="511.6" y="387.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.6" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (29 samples, 0.03%)</title><rect x="511.6" y="371.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="514.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.getResponseFromValues (94 samples, 0.10%)</title><rect x="511.9" y="371.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (94 samples, 0.10%)</title><rect x="511.9" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (76 samples, 0.08%)</title><rect x="512.2" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.2" y="350.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.03%)</title><rect x="512.2" y="323.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="515.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.02%)</title><rect x="512.5" y="323.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="515.5" y="334.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.02%)</title><rect x="512.8" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="515.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (162 samples, 0.17%)</title><rect x="513.1" y="371.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.linkToTargetMethod (69 samples, 0.07%)</title><rect x="513.1" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1841757097.invoke (69 samples, 0.07%)</title><rect x="513.1" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.07%)</title><rect x="513.1" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (27 samples, 0.03%)</title><rect x="513.1" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.03%)</title><rect x="513.1" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="516.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (42 samples, 0.04%)</title><rect x="513.4" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (42 samples, 0.04%)</title><rect x="513.4" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.4" y="302.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.04%)</title><rect x="513.4" y="275.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="516.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (78 samples, 0.08%)</title><rect x="514.1" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.1" y="366.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.03%)</title><rect x="514.1" y="339.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="517.1" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.03%)</title><rect x="514.5" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="517.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (79 samples, 0.08%)</title><rect x="515.1" y="515.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (79 samples, 0.08%)</title><rect x="515.1" y="499.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (79 samples, 0.08%)</title><rect x="515.1" y="483.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="518.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,069 samples, 1.12%)</title><rect x="516.1" y="643.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (774 samples, 0.81%)</title><rect x="516.1" y="627.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (769 samples, 0.81%)</title><rect x="516.1" y="611.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (769 samples, 0.81%)</title><rect x="516.1" y="595.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (769 samples, 0.81%)</title><rect x="516.1" y="579.0" width="9.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="519.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (295 samples, 0.31%)</title><rect x="525.6" y="627.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (280 samples, 0.29%)</title><rect x="525.6" y="611.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (280 samples, 0.29%)</title><rect x="525.6" y="595.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (280 samples, 0.29%)</title><rect x="525.6" y="579.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="528.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$470/1679529773.run (672 samples, 0.70%)</title><rect x="529.3" y="643.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (672 samples, 0.70%)</title><rect x="529.3" y="627.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (672 samples, 0.70%)</title><rect x="529.3" y="611.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (672 samples, 0.70%)</title><rect x="529.3" y="595.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (672 samples, 0.70%)</title><rect x="529.3" y="579.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (672 samples, 0.70%)</title><rect x="529.3" y="563.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (672 samples, 0.70%)</title><rect x="529.3" y="547.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (672 samples, 0.70%)</title><rect x="529.3" y="531.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (672 samples, 0.70%)</title><rect x="529.3" y="515.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (672 samples, 0.70%)</title><rect x="529.3" y="499.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (672 samples, 0.70%)</title><rect x="529.3" y="483.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="532.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (588 samples, 0.62%)</title><rect x="529.3" y="467.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.07%)</title><rect x="529.3" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.07%)</title><rect x="529.3" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$478/966811203.get$Lambda (37 samples, 0.04%)</title><rect x="529.3" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$478 (37 samples, 0.04%)</title><rect x="529.3" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="532.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$518/2112924215.get$Lambda (28 samples, 0.03%)</title><rect x="529.8" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$518 (28 samples, 0.03%)</title><rect x="529.8" y="403.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="532.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (523 samples, 0.55%)</title><rect x="530.1" y="451.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (52 samples, 0.05%)</title><rect x="530.1" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="533.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (471 samples, 0.49%)</title><rect x="530.7" y="435.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (471 samples, 0.49%)</title><rect x="530.7" y="419.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (471 samples, 0.49%)</title><rect x="530.7" y="403.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (214 samples, 0.22%)</title><rect x="530.7" y="387.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (72 samples, 0.08%)</title><rect x="530.7" y="371.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="533.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$503/474007538.apply (138 samples, 0.14%)</title><rect x="531.6" y="371.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (138 samples, 0.14%)</title><rect x="531.6" y="355.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (138 samples, 0.14%)</title><rect x="531.6" y="339.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (22 samples, 0.02%)</title><rect x="531.6" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.6" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (22 samples, 0.02%)</title><rect x="531.6" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.6" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (22 samples, 0.02%)</title><rect x="531.6" y="291.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="534.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (116 samples, 0.12%)</title><rect x="531.9" y="323.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="531.9" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="531.9" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$522/1200579297.get$Lambda (21 samples, 0.02%)</title><rect x="531.9" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$522 (21 samples, 0.02%)</title><rect x="531.9" y="259.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="534.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (95 samples, 0.10%)</title><rect x="532.2" y="307.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (95 samples, 0.10%)</title><rect x="532.2" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (58 samples, 0.06%)</title><rect x="532.2" y="275.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="535.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="532.9" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="532.9" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="532.9" y="243.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="535.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (257 samples, 0.27%)</title><rect x="533.4" y="387.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (257 samples, 0.27%)</title><rect x="533.4" y="371.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="536.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$435/1932218312.apply (257 samples, 0.27%)</title><rect x="533.4" y="355.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (257 samples, 0.27%)</title><rect x="533.4" y="339.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (257 samples, 0.27%)</title><rect x="533.4" y="323.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/925206735.apply (257 samples, 0.27%)</title><rect x="533.4" y="307.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (257 samples, 0.27%)</title><rect x="533.4" y="291.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="536.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (85 samples, 0.09%)</title><rect x="533.6" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (85 samples, 0.09%)</title><rect x="533.6" y="259.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="536.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (44 samples, 0.05%)</title><rect x="533.6" y="243.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="536.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="534.2" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="534.2" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="534.2" y="211.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="537.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (154 samples, 0.16%)</title><rect x="534.7" y="275.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (92 samples, 0.10%)</title><rect x="534.7" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (45 samples, 0.05%)</title><rect x="534.7" y="243.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="537.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (47 samples, 0.05%)</title><rect x="535.2" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (47 samples, 0.05%)</title><rect x="535.2" y="227.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.05%)</title><rect x="535.2" y="211.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="538.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (62 samples, 0.06%)</title><rect x="535.8" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (35 samples, 0.04%)</title><rect x="535.8" y="243.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="538.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (27 samples, 0.03%)</title><rect x="536.2" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (27 samples, 0.03%)</title><rect x="536.2" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (27 samples, 0.03%)</title><rect x="536.2" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (27 samples, 0.03%)</title><rect x="536.2" y="195.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (27 samples, 0.03%)</title><rect x="536.2" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (27 samples, 0.03%)</title><rect x="536.2" y="163.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="539.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (84 samples, 0.09%)</title><rect x="536.6" y="467.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="539.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (84 samples, 0.09%)</title><rect x="536.6" y="451.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (84 samples, 0.09%)</title><rect x="536.6" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (84 samples, 0.09%)</title><rect x="536.6" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="539.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (84 samples, 0.09%)</title><rect x="536.6" y="403.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.6" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (84 samples, 0.09%)</title><rect x="536.6" y="387.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.6" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (37 samples, 0.04%)</title><rect x="536.6" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.6" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (37 samples, 0.04%)</title><rect x="536.6" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="539.6" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (47 samples, 0.05%)</title><rect x="537.0" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="540.0" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (47 samples, 0.05%)</title><rect x="537.0" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="540.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6,723 samples, 7.05%)</title><rect x="537.6" y="643.0" width="83.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.6" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6,723 samples, 7.05%)</title><rect x="537.6" y="627.0" width="83.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.6" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,638 samples, 5.91%)</title><rect x="537.6" y="611.0" width="69.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.6" y="622.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (5,638 samples, 5.91%)</title><rect x="537.6" y="595.0" width="69.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.6" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,638 samples, 5.91%)</title><rect x="537.6" y="579.0" width="69.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.6" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (119 samples, 0.12%)</title><rect x="537.6" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (119 samples, 0.12%)</title><rect x="537.6" y="547.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (119 samples, 0.12%)</title><rect x="537.6" y="531.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (119 samples, 0.12%)</title><rect x="537.6" y="515.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.linkToTargetMethod (66 samples, 0.07%)</title><rect x="537.6" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/680712932.invoke (66 samples, 0.07%)</title><rect x="537.6" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.07%)</title><rect x="537.6" y="467.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (66 samples, 0.07%)</title><rect x="537.6" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (66 samples, 0.07%)</title><rect x="537.6" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.6" y="446.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.07%)</title><rect x="537.6" y="419.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="540.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (53 samples, 0.06%)</title><rect x="538.4" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.06%)</title><rect x="538.4" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.06%)</title><rect x="538.4" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$471/258511231.get$Lambda (53 samples, 0.06%)</title><rect x="538.4" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$471 (53 samples, 0.06%)</title><rect x="538.4" y="435.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="541.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5,519 samples, 5.78%)</title><rect x="539.1" y="563.0" width="68.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.1" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5,519 samples, 5.78%)</title><rect x="539.1" y="547.0" width="68.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.1" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,519 samples, 5.78%)</title><rect x="539.1" y="531.0" width="68.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.1" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,519 samples, 5.78%)</title><rect x="539.1" y="515.0" width="68.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.1" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,546 samples, 2.67%)</title><rect x="539.1" y="499.0" width="31.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.1" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,546 samples, 2.67%)</title><rect x="539.1" y="483.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.1" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,546 samples, 2.67%)</title><rect x="539.1" y="467.0" width="31.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.1" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,546 samples, 2.67%)</title><rect x="539.1" y="451.0" width="31.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.1" y="462.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,546 samples, 2.67%)</title><rect x="539.1" y="435.0" width="31.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.1" y="446.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,546 samples, 2.67%)</title><rect x="539.1" y="419.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.1" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,546 samples, 2.67%)</title><rect x="539.1" y="403.0" width="31.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.1" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,475 samples, 2.59%)</title><rect x="539.1" y="387.0" width="30.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.1" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,475 samples, 2.59%)</title><rect x="539.1" y="371.0" width="30.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.1" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,431 samples, 2.55%)</title><rect x="539.1" y="355.0" width="30.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.1" y="366.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (40 samples, 0.04%)</title><rect x="539.1" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="542.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1615536830.apply (2,303 samples, 2.41%)</title><rect x="539.6" y="339.0" width="28.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.6" y="350.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,303 samples, 2.41%)</title><rect x="539.6" y="323.0" width="28.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.6" y="334.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.03%)</title><rect x="539.6" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.03%)</title><rect x="539.6" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$611/845309973.get$Lambda (32 samples, 0.03%)</title><rect x="539.6" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$611 (32 samples, 0.03%)</title><rect x="539.6" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="542.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (78 samples, 0.08%)</title><rect x="540.0" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (78 samples, 0.08%)</title><rect x="540.0" y="291.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (42 samples, 0.04%)</title><rect x="540.0" y="275.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="543.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.04%)</title><rect x="540.5" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.04%)</title><rect x="540.5" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.04%)</title><rect x="540.5" y="243.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="543.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,193 samples, 2.30%)</title><rect x="540.9" y="307.0" width="27.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.9" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (97 samples, 0.10%)</title><rect x="541.2" y="291.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (97 samples, 0.10%)</title><rect x="541.2" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (51 samples, 0.05%)</title><rect x="541.2" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="544.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="541.8" y="259.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="541.8" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="541.8" y="227.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="544.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,077 samples, 2.18%)</title><rect x="542.4" y="291.0" width="25.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.4" y="302.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (29 samples, 0.03%)</title><rect x="542.4" y="275.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="545.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,582 samples, 1.66%)</title><rect x="542.7" y="275.0" width="19.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.04%)</title><rect x="542.7" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.04%)</title><rect x="542.7" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$599/1916045487.get$Lambda (22 samples, 0.02%)</title><rect x="542.7" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$599 (22 samples, 0.02%)</title><rect x="542.7" y="211.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="545.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1439382165.linkToTargetMethod (52 samples, 0.05%)</title><rect x="543.1" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/495153420.invokeStatic (52 samples, 0.05%)</title><rect x="543.1" y="243.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$559/1235714752.get$Lambda (52 samples, 0.05%)</title><rect x="543.1" y="227.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$559 (52 samples, 0.05%)</title><rect x="543.1" y="211.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="546.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (290 samples, 0.30%)</title><rect x="543.8" y="259.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (101 samples, 0.11%)</title><rect x="543.8" y="243.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="546.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (39 samples, 0.04%)</title><rect x="543.8" y="227.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.8" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (39 samples, 0.04%)</title><rect x="543.8" y="211.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="546.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (62 samples, 0.06%)</title><rect x="544.3" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.3" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (62 samples, 0.06%)</title><rect x="544.3" y="211.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="547.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (104 samples, 0.11%)</title><rect x="545.0" y="243.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (104 samples, 0.11%)</title><rect x="545.0" y="227.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (104 samples, 0.11%)</title><rect x="545.0" y="211.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (32 samples, 0.03%)</title><rect x="545.0" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (32 samples, 0.03%)</title><rect x="545.0" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (32 samples, 0.03%)</title><rect x="545.0" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.0" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (32 samples, 0.03%)</title><rect x="545.0" y="147.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="548.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$549/379229248.get (39 samples, 0.04%)</title><rect x="545.4" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (39 samples, 0.04%)</title><rect x="545.4" y="179.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="548.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (33 samples, 0.03%)</title><rect x="545.9" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (33 samples, 0.03%)</title><rect x="545.9" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.9" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (33 samples, 0.03%)</title><rect x="545.9" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.9" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (33 samples, 0.03%)</title><rect x="545.9" y="147.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="548.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (85 samples, 0.09%)</title><rect x="546.3" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (85 samples, 0.09%)</title><rect x="546.3" y="227.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="549.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (192 samples, 0.20%)</title><rect x="547.4" y="259.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (94 samples, 0.10%)</title><rect x="547.4" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (53 samples, 0.06%)</title><rect x="547.4" y="227.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="550.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="548.0" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="548.0" y="211.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="548.0" y="195.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="551.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (98 samples, 0.10%)</title><rect x="548.5" y="243.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (98 samples, 0.10%)</title><rect x="548.5" y="227.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (52 samples, 0.05%)</title><rect x="548.5" y="211.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="551.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="549.2" y="211.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="549.2" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="549.2" y="179.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="552.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (39 samples, 0.04%)</title><rect x="549.8" y="259.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="552.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (38 samples, 0.04%)</title><rect x="550.2" y="259.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="553.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.05%)</title><rect x="550.7" y="259.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="553.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (792 samples, 0.83%)</title><rect x="551.4" y="259.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$559/1235714752.run (792 samples, 0.83%)</title><rect x="551.4" y="243.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (792 samples, 0.83%)</title><rect x="551.4" y="227.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.10%)</title><rect x="551.4" y="211.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.10%)</title><rect x="551.4" y="195.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$576/272680000.get$Lambda (34 samples, 0.04%)</title><rect x="551.6" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$576 (34 samples, 0.04%)</title><rect x="551.6" y="163.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="554.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$586/805615386.get$Lambda (45 samples, 0.05%)</title><rect x="552.0" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$586 (45 samples, 0.05%)</title><rect x="552.0" y="163.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="555.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (95 samples, 0.10%)</title><rect x="552.6" y="211.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (95 samples, 0.10%)</title><rect x="552.6" y="195.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (53 samples, 0.06%)</title><rect x="552.6" y="179.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="555.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.04%)</title><rect x="553.2" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.04%)</title><rect x="553.2" y="163.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.04%)</title><rect x="553.2" y="147.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="556.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (66 samples, 0.07%)</title><rect x="553.7" y="211.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="556.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (39 samples, 0.04%)</title><rect x="554.6" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.04%)</title><rect x="554.6" y="195.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="557.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (140 samples, 0.15%)</title><rect x="555.0" y="211.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (140 samples, 0.15%)</title><rect x="555.0" y="195.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.03%)</title><rect x="555.0" y="179.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.03%)</title><rect x="555.0" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$594/353462104.get$Lambda (29 samples, 0.03%)</title><rect x="555.0" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$594 (29 samples, 0.03%)</title><rect x="555.0" y="131.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="558.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (111 samples, 0.12%)</title><rect x="555.4" y="179.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (111 samples, 0.12%)</title><rect x="555.4" y="163.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (111 samples, 0.12%)</title><rect x="555.4" y="147.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (59 samples, 0.06%)</title><rect x="555.4" y="131.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="558.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.05%)</title><rect x="556.1" y="131.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.05%)</title><rect x="556.1" y="115.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.1" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.05%)</title><rect x="556.1" y="99.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="559.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (128 samples, 0.13%)</title><rect x="556.8" y="211.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (128 samples, 0.13%)</title><rect x="556.8" y="195.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/404214852.invoke (128 samples, 0.13%)</title><rect x="556.8" y="179.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (128 samples, 0.13%)</title><rect x="556.8" y="163.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (38 samples, 0.04%)</title><rect x="556.8" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.04%)</title><rect x="556.8" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="559.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (90 samples, 0.09%)</title><rect x="557.2" y="147.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (90 samples, 0.09%)</title><rect x="557.2" y="131.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.2" y="142.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.09%)</title><rect x="557.2" y="115.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="560.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (231 samples, 0.24%)</title><rect x="558.4" y="211.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (81 samples, 0.08%)</title><rect x="558.4" y="195.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="561.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (150 samples, 0.16%)</title><rect x="559.4" y="195.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (150 samples, 0.16%)</title><rect x="559.4" y="179.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/404214852.invoke (150 samples, 0.16%)</title><rect x="559.4" y="163.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (150 samples, 0.16%)</title><rect x="559.4" y="147.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (32 samples, 0.03%)</title><rect x="559.4" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.03%)</title><rect x="559.4" y="115.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="562.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (118 samples, 0.12%)</title><rect x="559.8" y="131.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (118 samples, 0.12%)</title><rect x="559.8" y="115.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.8" y="126.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.12%)</title><rect x="559.8" y="99.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="562.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (87 samples, 0.09%)</title><rect x="561.2" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (87 samples, 0.09%)</title><rect x="561.2" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (87 samples, 0.09%)</title><rect x="561.2" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (87 samples, 0.09%)</title><rect x="561.2" y="211.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.2" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (50 samples, 0.05%)</title><rect x="561.2" y="195.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="564.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="561.8" y="195.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="561.8" y="179.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="561.8" y="163.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="564.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler.apply (466 samples, 0.49%)</title><rect x="562.3" y="275.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="562.3" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="562.3" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler$$Lambda$681/930209208.get$Lambda (24 samples, 0.03%)</title><rect x="562.3" y="227.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.3" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.GetBodyHandler$$Lambda$681 (24 samples, 0.03%)</title><rect x="562.3" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="565.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (302 samples, 0.32%)</title><rect x="562.6" y="259.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.6" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (227 samples, 0.24%)</title><rect x="562.6" y="243.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.6" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (84 samples, 0.09%)</title><rect x="562.6" y="227.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.6" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (84 samples, 0.09%)</title><rect x="562.6" y="211.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="565.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (143 samples, 0.15%)</title><rect x="563.6" y="227.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.6" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (143 samples, 0.15%)</title><rect x="563.6" y="211.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="566.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (75 samples, 0.08%)</title><rect x="565.4" y="243.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (75 samples, 0.08%)</title><rect x="565.4" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (75 samples, 0.08%)</title><rect x="565.4" y="211.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (54 samples, 0.06%)</title><rect x="565.4" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (54 samples, 0.06%)</title><rect x="565.4" y="179.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="568.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (21 samples, 0.02%)</title><rect x="566.1" y="195.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (21 samples, 0.02%)</title><rect x="566.1" y="179.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.1" y="190.0"></text>
</g>
<g>
<title>java/util/Optional.of (21 samples, 0.02%)</title><rect x="566.1" y="163.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.1" y="174.0"></text>
</g>
<g>
<title>java.util.Optional (21 samples, 0.02%)</title><rect x="566.1" y="147.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="569.1" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.mapping (31 samples, 0.03%)</title><rect x="566.3" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$MappingSubscriber (31 samples, 0.03%)</title><rect x="566.3" y="243.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="569.3" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (109 samples, 0.11%)</title><rect x="566.7" y="259.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (49 samples, 0.05%)</title><rect x="566.7" y="243.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="569.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (60 samples, 0.06%)</title><rect x="567.3" y="243.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.3" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (25 samples, 0.03%)</title><rect x="567.3" y="227.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="570.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.04%)</title><rect x="567.6" y="227.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="570.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/491272286.apply (88 samples, 0.09%)</title><rect x="568.1" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (88 samples, 0.09%)</title><rect x="568.1" y="323.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (47 samples, 0.05%)</title><rect x="568.1" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.1" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (47 samples, 0.05%)</title><rect x="568.1" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (47 samples, 0.05%)</title><rect x="568.1" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.1" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (47 samples, 0.05%)</title><rect x="568.1" y="259.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="571.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (41 samples, 0.04%)</title><rect x="568.6" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="568.6" y="291.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="571.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (44 samples, 0.05%)</title><rect x="569.1" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (44 samples, 0.05%)</title><rect x="569.1" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/80373017.apply (44 samples, 0.05%)</title><rect x="569.1" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (44 samples, 0.05%)</title><rect x="569.1" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (44 samples, 0.05%)</title><rect x="569.1" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="569.1" y="275.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="572.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$522/1200579297.apply (71 samples, 0.07%)</title><rect x="569.7" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (71 samples, 0.07%)</title><rect x="569.7" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (71 samples, 0.07%)</title><rect x="569.7" y="355.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="572.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2,973 samples, 3.12%)</title><rect x="570.6" y="499.0" width="36.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.6" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (222 samples, 0.23%)</title><rect x="570.6" y="483.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (222 samples, 0.23%)</title><rect x="570.6" y="467.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (222 samples, 0.23%)</title><rect x="570.6" y="451.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (222 samples, 0.23%)</title><rect x="570.6" y="435.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (222 samples, 0.23%)</title><rect x="570.6" y="419.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.6" y="430.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.23%)</title><rect x="570.6" y="403.0" width="2.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="573.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (211 samples, 0.22%)</title><rect x="573.3" y="483.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (49 samples, 0.05%)</title><rect x="573.3" y="467.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="576.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (36 samples, 0.04%)</title><rect x="573.9" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.04%)</title><rect x="573.9" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.9" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.04%)</title><rect x="573.9" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.9" y="446.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.04%)</title><rect x="573.9" y="419.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="576.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (45 samples, 0.05%)</title><rect x="574.4" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (45 samples, 0.05%)</title><rect x="574.4" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.4" y="462.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.05%)</title><rect x="574.4" y="435.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="577.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (81 samples, 0.08%)</title><rect x="574.9" y="467.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (81 samples, 0.08%)</title><rect x="574.9" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.05%)</title><rect x="574.9" y="435.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="577.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.04%)</title><rect x="575.5" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.5" y="446.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.04%)</title><rect x="575.5" y="419.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="578.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (719 samples, 0.75%)</title><rect x="575.9" y="483.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (719 samples, 0.75%)</title><rect x="575.9" y="467.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (719 samples, 0.75%)</title><rect x="575.9" y="451.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.9" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (22 samples, 0.02%)</title><rect x="575.9" y="435.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="578.9" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.03%)</title><rect x="576.2" y="435.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="579.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (60 samples, 0.06%)</title><rect x="576.6" y="435.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="579.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (23 samples, 0.02%)</title><rect x="577.3" y="435.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="580.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.05%)</title><rect x="577.6" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.05%)</title><rect x="577.6" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.get$Lambda (44 samples, 0.05%)</title><rect x="577.6" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.6" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (44 samples, 0.05%)</title><rect x="577.6" y="387.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="580.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (45 samples, 0.05%)</title><rect x="578.1" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.1" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (45 samples, 0.05%)</title><rect x="578.1" y="419.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="581.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (427 samples, 0.45%)</title><rect x="578.7" y="435.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (427 samples, 0.45%)</title><rect x="578.7" y="419.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (427 samples, 0.45%)</title><rect x="578.7" y="403.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.7" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (94 samples, 0.10%)</title><rect x="578.7" y="387.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (94 samples, 0.10%)</title><rect x="578.7" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (94 samples, 0.10%)</title><rect x="578.7" y="355.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (94 samples, 0.10%)</title><rect x="578.7" y="339.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="581.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (94 samples, 0.10%)</title><rect x="578.7" y="323.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (94 samples, 0.10%)</title><rect x="578.7" y="307.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="581.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (94 samples, 0.10%)</title><rect x="578.7" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (94 samples, 0.10%)</title><rect x="578.7" y="275.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="581.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (94 samples, 0.10%)</title><rect x="578.7" y="259.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="581.7" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (181 samples, 0.19%)</title><rect x="579.9" y="387.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (181 samples, 0.19%)</title><rect x="579.9" y="371.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (93 samples, 0.10%)</title><rect x="579.9" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.10%)</title><rect x="579.9" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.10%)</title><rect x="579.9" y="323.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="582.9" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (88 samples, 0.09%)</title><rect x="581.0" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.0" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (88 samples, 0.09%)</title><rect x="581.0" y="339.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="584.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (152 samples, 0.16%)</title><rect x="582.1" y="387.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (152 samples, 0.16%)</title><rect x="582.1" y="371.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="585.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (67 samples, 0.07%)</title><rect x="584.0" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="587.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (67 samples, 0.07%)</title><rect x="584.0" y="419.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="587.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,821 samples, 1.91%)</title><rect x="584.8" y="483.0" width="22.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.8" y="494.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (101 samples, 0.11%)</title><rect x="584.8" y="467.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="587.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (124 samples, 0.13%)</title><rect x="586.1" y="467.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (124 samples, 0.13%)</title><rect x="586.1" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.1" y="462.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.13%)</title><rect x="586.1" y="435.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="589.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (246 samples, 0.26%)</title><rect x="587.6" y="467.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (246 samples, 0.26%)</title><rect x="587.6" y="451.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.09%)</title><rect x="587.6" y="435.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="590.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (160 samples, 0.17%)</title><rect x="588.7" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.7" y="446.0"></text>
</g>
<g>
<title>byte[] (160 samples, 0.17%)</title><rect x="588.7" y="419.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="591.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,350 samples, 1.41%)</title><rect x="590.6" y="467.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (426 samples, 0.45%)</title><rect x="590.6" y="451.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (426 samples, 0.45%)</title><rect x="590.6" y="435.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (178 samples, 0.19%)</title><rect x="590.6" y="419.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="593.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (248 samples, 0.26%)</title><rect x="592.8" y="419.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.8" y="430.0"></text>
</g>
<g>
<title>byte[] (248 samples, 0.26%)</title><rect x="592.8" y="403.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="595.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (139 samples, 0.15%)</title><rect x="595.9" y="451.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (139 samples, 0.15%)</title><rect x="595.9" y="435.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.9" y="446.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.11%)</title><rect x="595.9" y="419.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="598.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.04%)</title><rect x="597.2" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="600.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (226 samples, 0.24%)</title><rect x="597.6" y="451.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (226 samples, 0.24%)</title><rect x="597.6" y="435.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (226 samples, 0.24%)</title><rect x="597.6" y="419.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (103 samples, 0.11%)</title><rect x="597.6" y="403.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="600.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (123 samples, 0.13%)</title><rect x="598.9" y="403.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.9" y="414.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.13%)</title><rect x="598.9" y="387.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="601.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (251 samples, 0.26%)</title><rect x="600.4" y="451.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (251 samples, 0.26%)</title><rect x="600.4" y="435.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (251 samples, 0.26%)</title><rect x="600.4" y="419.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (251 samples, 0.26%)</title><rect x="600.4" y="403.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (251 samples, 0.26%)</title><rect x="600.4" y="387.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (251 samples, 0.26%)</title><rect x="600.4" y="371.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="603.4" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (308 samples, 0.32%)</title><rect x="603.5" y="451.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.5" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (115 samples, 0.12%)</title><rect x="603.5" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.5" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (115 samples, 0.12%)</title><rect x="603.5" y="419.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="606.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (114 samples, 0.12%)</title><rect x="604.9" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (114 samples, 0.12%)</title><rect x="604.9" y="419.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="607.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$534/2041148455.apply (79 samples, 0.08%)</title><rect x="606.4" y="435.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (79 samples, 0.08%)</title><rect x="606.4" y="419.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.4" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (79 samples, 0.08%)</title><rect x="606.4" y="403.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="609.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,085 samples, 1.14%)</title><rect x="607.3" y="611.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,085 samples, 1.14%)</title><rect x="607.3" y="595.0" width="13.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,085 samples, 1.14%)</title><rect x="607.3" y="579.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (1,085 samples, 1.14%)</title><rect x="607.3" y="563.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,085 samples, 1.14%)</title><rect x="607.3" y="547.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (153 samples, 0.16%)</title><rect x="607.3" y="531.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.06%)</title><rect x="607.3" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.06%)</title><rect x="607.3" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$393/1560942433.get$Lambda (33 samples, 0.03%)</title><rect x="607.6" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$393 (33 samples, 0.03%)</title><rect x="607.6" y="467.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="610.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (50 samples, 0.05%)</title><rect x="608.0" y="515.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="611.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (50 samples, 0.05%)</title><rect x="608.6" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (50 samples, 0.05%)</title><rect x="608.6" y="499.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (21 samples, 0.02%)</title><rect x="608.6" y="483.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="611.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (29 samples, 0.03%)</title><rect x="608.9" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (29 samples, 0.03%)</title><rect x="608.9" y="467.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="611.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (930 samples, 0.97%)</title><rect x="609.2" y="531.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (930 samples, 0.97%)</title><rect x="609.2" y="515.0" width="11.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (930 samples, 0.97%)</title><rect x="609.2" y="499.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (930 samples, 0.97%)</title><rect x="609.2" y="483.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (930 samples, 0.97%)</title><rect x="609.2" y="467.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (930 samples, 0.97%)</title><rect x="609.2" y="451.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (65 samples, 0.07%)</title><rect x="609.2" y="435.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (65 samples, 0.07%)</title><rect x="609.2" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.2" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 0.07%)</title><rect x="609.2" y="403.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="612.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (37 samples, 0.04%)</title><rect x="610.0" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.0" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (37 samples, 0.04%)</title><rect x="610.0" y="419.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="613.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/706069328.run (509 samples, 0.53%)</title><rect x="610.5" y="435.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (509 samples, 0.53%)</title><rect x="610.5" y="419.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (509 samples, 0.53%)</title><rect x="610.5" y="403.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.5" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (172 samples, 0.18%)</title><rect x="610.5" y="387.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.5" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (112 samples, 0.12%)</title><rect x="610.5" y="371.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.5" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (46 samples, 0.05%)</title><rect x="610.5" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.5" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (46 samples, 0.05%)</title><rect x="610.5" y="339.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="613.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (66 samples, 0.07%)</title><rect x="611.1" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (66 samples, 0.07%)</title><rect x="611.1" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="614.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (60 samples, 0.06%)</title><rect x="611.9" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (60 samples, 0.06%)</title><rect x="611.9" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (60 samples, 0.06%)</title><rect x="611.9" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (39 samples, 0.04%)</title><rect x="611.9" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (39 samples, 0.04%)</title><rect x="611.9" y="307.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="614.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (21 samples, 0.02%)</title><rect x="612.4" y="323.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (21 samples, 0.02%)</title><rect x="612.4" y="307.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.4" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (21 samples, 0.02%)</title><rect x="612.4" y="291.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.4" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (21 samples, 0.02%)</title><rect x="612.4" y="275.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="615.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (337 samples, 0.35%)</title><rect x="612.6" y="387.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.6" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (27 samples, 0.03%)</title><rect x="612.6" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.6" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (27 samples, 0.03%)</title><rect x="612.6" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (27 samples, 0.03%)</title><rect x="612.6" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (27 samples, 0.03%)</title><rect x="612.6" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.6" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (27 samples, 0.03%)</title><rect x="612.6" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="615.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (310 samples, 0.32%)</title><rect x="612.9" y="371.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (124 samples, 0.13%)</title><rect x="612.9" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.9" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (30 samples, 0.03%)</title><rect x="612.9" y="339.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (30 samples, 0.03%)</title><rect x="612.9" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.9" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (30 samples, 0.03%)</title><rect x="612.9" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.9" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (30 samples, 0.03%)</title><rect x="612.9" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.9" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (30 samples, 0.03%)</title><rect x="612.9" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.9" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (30 samples, 0.03%)</title><rect x="612.9" y="259.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="615.9" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (24 samples, 0.03%)</title><rect x="613.3" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.3" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (24 samples, 0.03%)</title><rect x="613.3" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.3" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.03%)</title><rect x="613.3" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.3" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (24 samples, 0.03%)</title><rect x="613.3" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.3" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (24 samples, 0.03%)</title><rect x="613.3" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.3" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (24 samples, 0.03%)</title><rect x="613.3" y="259.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="616.3" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (31 samples, 0.03%)</title><rect x="613.7" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (31 samples, 0.03%)</title><rect x="613.7" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (31 samples, 0.03%)</title><rect x="613.7" y="307.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="616.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (36 samples, 0.04%)</title><rect x="614.0" y="339.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="617.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (68 samples, 0.07%)</title><rect x="614.5" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (36 samples, 0.04%)</title><rect x="614.5" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (36 samples, 0.04%)</title><rect x="614.5" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (36 samples, 0.04%)</title><rect x="614.5" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.04%)</title><rect x="614.5" y="291.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="617.5" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (32 samples, 0.03%)</title><rect x="614.9" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (32 samples, 0.03%)</title><rect x="614.9" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (32 samples, 0.03%)</title><rect x="614.9" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="617.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (118 samples, 0.12%)</title><rect x="615.3" y="355.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (24 samples, 0.03%)</title><rect x="615.3" y="339.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="618.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (94 samples, 0.10%)</title><rect x="615.6" y="339.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (39 samples, 0.04%)</title><rect x="615.6" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (39 samples, 0.04%)</title><rect x="615.6" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (39 samples, 0.04%)</title><rect x="615.6" y="291.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (39 samples, 0.04%)</title><rect x="615.6" y="275.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="618.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (55 samples, 0.06%)</title><rect x="616.1" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (55 samples, 0.06%)</title><rect x="616.1" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (39 samples, 0.04%)</title><rect x="616.1" y="291.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="619.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (207 samples, 0.22%)</title><rect x="616.8" y="435.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (207 samples, 0.22%)</title><rect x="616.8" y="419.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (207 samples, 0.22%)</title><rect x="616.8" y="403.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (207 samples, 0.22%)</title><rect x="616.8" y="387.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (170 samples, 0.18%)</title><rect x="616.8" y="371.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (170 samples, 0.18%)</title><rect x="616.8" y="355.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (87 samples, 0.09%)</title><rect x="616.8" y="339.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler$$Lambda$681/930209208.apply (87 samples, 0.09%)</title><rect x="616.8" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler.lambda$apply$0 (87 samples, 0.09%)</title><rect x="616.8" y="307.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.8" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (45 samples, 0.05%)</title><rect x="616.8" y="291.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="619.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.&lt;init&gt; (42 samples, 0.04%)</title><rect x="617.3" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.3" y="302.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.04%)</title><rect x="617.3" y="275.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="620.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (83 samples, 0.09%)</title><rect x="617.9" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (83 samples, 0.09%)</title><rect x="617.9" y="323.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$599/1916045487.accept (83 samples, 0.09%)</title><rect x="617.9" y="307.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (83 samples, 0.09%)</title><rect x="617.9" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (83 samples, 0.09%)</title><rect x="617.9" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (83 samples, 0.09%)</title><rect x="617.9" y="259.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (83 samples, 0.09%)</title><rect x="617.9" y="243.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$611/845309973.apply (83 samples, 0.09%)</title><rect x="617.9" y="227.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (83 samples, 0.09%)</title><rect x="617.9" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (83 samples, 0.09%)</title><rect x="617.9" y="195.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="620.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (37 samples, 0.04%)</title><rect x="618.9" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.9" y="382.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.04%)</title><rect x="618.9" y="355.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="621.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (112 samples, 0.12%)</title><rect x="619.3" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (112 samples, 0.12%)</title><rect x="619.3" y="419.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (112 samples, 0.12%)</title><rect x="619.3" y="403.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (112 samples, 0.12%)</title><rect x="619.3" y="387.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (112 samples, 0.12%)</title><rect x="619.3" y="371.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (112 samples, 0.12%)</title><rect x="619.3" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (112 samples, 0.12%)</title><rect x="619.3" y="339.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.3" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (31 samples, 0.03%)</title><rect x="619.3" y="323.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.3" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.03%)</title><rect x="619.3" y="307.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="622.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (81 samples, 0.08%)</title><rect x="619.7" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.08%)</title><rect x="619.7" y="307.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (81 samples, 0.08%)</title><rect x="619.7" y="291.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="622.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.run (8,446 samples, 8.85%)</title><rect x="620.8" y="643.0" width="104.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.8" y="654.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (8,446 samples, 8.85%)</title><rect x="620.8" y="627.0" width="104.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.8" y="638.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (360 samples, 0.38%)</title><rect x="620.8" y="611.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (360 samples, 0.38%)</title><rect x="620.8" y="595.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (360 samples, 0.38%)</title><rect x="620.8" y="579.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (271 samples, 0.28%)</title><rect x="620.8" y="563.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="623.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (89 samples, 0.09%)</title><rect x="624.1" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.1" y="574.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.09%)</title><rect x="624.1" y="547.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="627.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (604 samples, 0.63%)</title><rect x="625.2" y="611.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (604 samples, 0.63%)</title><rect x="625.2" y="595.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (347 samples, 0.36%)</title><rect x="625.2" y="579.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.09%)</title><rect x="625.2" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.09%)</title><rect x="625.2" y="547.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.get$Lambda (90 samples, 0.09%)</title><rect x="625.2" y="531.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.2" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ApiUtils$$Lambda$531 (90 samples, 0.09%)</title><rect x="625.2" y="515.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="628.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (257 samples, 0.27%)</title><rect x="626.3" y="563.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (257 samples, 0.27%)</title><rect x="626.3" y="547.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (162 samples, 0.17%)</title><rect x="626.3" y="531.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="629.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (95 samples, 0.10%)</title><rect x="628.3" y="531.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (95 samples, 0.10%)</title><rect x="628.3" y="515.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="631.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (257 samples, 0.27%)</title><rect x="629.5" y="579.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.09%)</title><rect x="629.5" y="563.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.09%)</title><rect x="629.5" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$654/1765400375.get$Lambda (82 samples, 0.09%)</title><rect x="629.5" y="531.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.5" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$654 (82 samples, 0.09%)</title><rect x="629.5" y="515.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="632.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (175 samples, 0.18%)</title><rect x="630.5" y="563.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (175 samples, 0.18%)</title><rect x="630.5" y="547.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (80 samples, 0.08%)</title><rect x="630.5" y="531.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="633.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (95 samples, 0.10%)</title><rect x="631.5" y="531.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="634.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (7,482 samples, 7.84%)</title><rect x="632.7" y="611.0" width="92.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.7" y="622.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (926 samples, 0.97%)</title><rect x="632.7" y="595.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.7" y="606.0"></text>
</g>
<g>
<title>java.util.TreeSet (21 samples, 0.02%)</title><rect x="632.9" y="579.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="635.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (22 samples, 0.02%)</title><rect x="633.1" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Long (22 samples, 0.02%)</title><rect x="633.1" y="563.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="636.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (42 samples, 0.04%)</title><rect x="633.4" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.4" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (42 samples, 0.04%)</title><rect x="633.4" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (42 samples, 0.04%)</title><rect x="633.4" y="547.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="636.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (35 samples, 0.04%)</title><rect x="633.9" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (35 samples, 0.04%)</title><rect x="633.9" y="563.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="636.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (574 samples, 0.60%)</title><rect x="634.4" y="579.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.4" y="590.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (40 samples, 0.04%)</title><rect x="634.4" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.4" y="574.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (40 samples, 0.04%)</title><rect x="634.4" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.4" y="558.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (40 samples, 0.04%)</title><rect x="634.4" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.4" y="542.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.04%)</title><rect x="634.4" y="515.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="637.4" y="526.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (534 samples, 0.56%)</title><rect x="634.9" y="563.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.9" y="574.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (534 samples, 0.56%)</title><rect x="634.9" y="547.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.9" y="558.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (534 samples, 0.56%)</title><rect x="634.9" y="531.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.9" y="542.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (511 samples, 0.54%)</title><rect x="634.9" y="515.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.9" y="526.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (488 samples, 0.51%)</title><rect x="634.9" y="499.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.9" y="510.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (488 samples, 0.51%)</title><rect x="634.9" y="483.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (62 samples, 0.06%)</title><rect x="635.2" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (62 samples, 0.06%)</title><rect x="635.2" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.2" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (62 samples, 0.06%)</title><rect x="635.2" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.2" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (62 samples, 0.06%)</title><rect x="635.2" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.2" y="430.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (62 samples, 0.06%)</title><rect x="635.2" y="403.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="638.2" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (395 samples, 0.41%)</title><rect x="636.0" y="467.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (395 samples, 0.41%)</title><rect x="636.0" y="451.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (395 samples, 0.41%)</title><rect x="636.0" y="435.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.0" y="446.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (53 samples, 0.06%)</title><rect x="636.0" y="419.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="639.0" y="430.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (342 samples, 0.36%)</title><rect x="636.7" y="419.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.7" y="430.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (342 samples, 0.36%)</title><rect x="636.7" y="403.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.7" y="414.0"></text>
</g>
<g>
<title>int[] (270 samples, 0.28%)</title><rect x="636.7" y="387.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="639.7" y="398.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (72 samples, 0.08%)</title><rect x="640.0" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.0" y="398.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.08%)</title><rect x="640.0" y="371.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="643.0" y="382.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (23 samples, 0.02%)</title><rect x="640.9" y="499.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="643.9" y="510.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (23 samples, 0.02%)</title><rect x="641.2" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.2" y="526.0"></text>
</g>
<g>
<title>java/security/Provider.getService (23 samples, 0.02%)</title><rect x="641.2" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (23 samples, 0.02%)</title><rect x="641.2" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.2" y="494.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (23 samples, 0.02%)</title><rect x="641.2" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.2" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.02%)</title><rect x="641.2" y="451.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="644.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (216 samples, 0.23%)</title><rect x="641.5" y="579.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.5" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (81 samples, 0.08%)</title><rect x="641.5" y="563.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.5" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (21 samples, 0.02%)</title><rect x="641.5" y="547.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="644.5" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (60 samples, 0.06%)</title><rect x="641.7" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (30 samples, 0.03%)</title><rect x="641.7" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (30 samples, 0.03%)</title><rect x="641.7" y="515.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="644.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (30 samples, 0.03%)</title><rect x="642.1" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (30 samples, 0.03%)</title><rect x="642.1" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="645.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (102 samples, 0.11%)</title><rect x="642.9" y="563.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (102 samples, 0.11%)</title><rect x="642.9" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (102 samples, 0.11%)</title><rect x="642.9" y="531.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="645.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (6,446 samples, 6.76%)</title><rect x="644.1" y="595.0" width="79.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.1" y="606.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.05%)</title><rect x="644.3" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.05%)</title><rect x="644.3" y="563.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$649/1942734930.get$Lambda (22 samples, 0.02%)</title><rect x="644.3" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.3" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$649 (22 samples, 0.02%)</title><rect x="644.3" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="647.3" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.GetBodyHandler (21 samples, 0.02%)</title><rect x="645.0" y="579.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="648.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (5,900 samples, 6.18%)</title><rect x="645.2" y="579.0" width="73.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.2" y="590.0">ru/mail/..</text>
</g>
<g>
<title>java/util/ArrayList.add (49 samples, 0.05%)</title><rect x="645.2" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (49 samples, 0.05%)</title><rect x="645.2" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (49 samples, 0.05%)</title><rect x="645.2" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (49 samples, 0.05%)</title><rect x="645.2" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.05%)</title><rect x="645.2" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.05%)</title><rect x="645.2" y="483.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="648.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (21 samples, 0.02%)</title><rect x="645.8" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (21 samples, 0.02%)</title><rect x="645.8" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (21 samples, 0.02%)</title><rect x="645.8" y="531.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="648.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (120 samples, 0.13%)</title><rect x="646.1" y="563.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (120 samples, 0.13%)</title><rect x="646.1" y="547.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (62 samples, 0.06%)</title><rect x="646.1" y="531.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="649.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.06%)</title><rect x="646.8" y="531.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.06%)</title><rect x="646.8" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.06%)</title><rect x="646.8" y="499.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="649.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (3,671 samples, 3.85%)</title><rect x="647.6" y="563.0" width="45.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.6" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,671 samples, 3.85%)</title><rect x="647.6" y="547.0" width="45.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.6" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,671 samples, 3.85%)</title><rect x="647.6" y="531.0" width="45.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.6" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,671 samples, 3.85%)</title><rect x="647.6" y="515.0" width="45.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.6" y="526.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.03%)</title><rect x="647.6" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.03%)</title><rect x="647.6" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$193/281304560.get$Lambda (32 samples, 0.03%)</title><rect x="647.6" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$193 (32 samples, 0.03%)</title><rect x="647.6" y="451.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="650.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (113 samples, 0.12%)</title><rect x="648.0" y="499.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (113 samples, 0.12%)</title><rect x="648.0" y="483.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (54 samples, 0.06%)</title><rect x="648.0" y="467.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="651.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="648.6" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="648.6" y="451.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.06%)</title><rect x="648.6" y="435.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="651.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (132 samples, 0.14%)</title><rect x="649.4" y="499.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (132 samples, 0.14%)</title><rect x="649.4" y="483.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (76 samples, 0.08%)</title><rect x="649.4" y="467.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="652.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.06%)</title><rect x="650.3" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.06%)</title><rect x="650.3" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.06%)</title><rect x="650.3" y="435.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="653.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (98 samples, 0.10%)</title><rect x="651.0" y="499.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="654.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (177 samples, 0.19%)</title><rect x="652.2" y="499.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="655.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,762 samples, 1.85%)</title><rect x="654.4" y="499.0" width="21.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.4" y="510.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (195 samples, 0.20%)</title><rect x="654.4" y="483.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.4" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (160 samples, 0.17%)</title><rect x="654.4" y="467.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.4" y="478.0"></text>
</g>
<g>
<title>java/util/List.spliterator (59 samples, 0.06%)</title><rect x="654.4" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.4" y="462.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (59 samples, 0.06%)</title><rect x="654.4" y="435.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="657.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (101 samples, 0.11%)</title><rect x="655.1" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.1" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (101 samples, 0.11%)</title><rect x="655.1" y="435.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="658.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (35 samples, 0.04%)</title><rect x="656.4" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (35 samples, 0.04%)</title><rect x="656.4" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (35 samples, 0.04%)</title><rect x="656.4" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (35 samples, 0.04%)</title><rect x="656.4" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.4" y="430.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (35 samples, 0.04%)</title><rect x="656.4" y="403.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="659.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (638 samples, 0.67%)</title><rect x="656.8" y="483.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (638 samples, 0.67%)</title><rect x="656.8" y="467.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.8" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (22 samples, 0.02%)</title><rect x="656.8" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="659.8" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (49 samples, 0.05%)</title><rect x="657.1" y="451.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="660.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (79 samples, 0.08%)</title><rect x="657.7" y="451.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="660.7" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (29 samples, 0.03%)</title><rect x="658.7" y="451.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="661.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.06%)</title><rect x="659.0" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.06%)</title><rect x="659.0" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.get$Lambda (53 samples, 0.06%)</title><rect x="659.0" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.0" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (53 samples, 0.06%)</title><rect x="659.0" y="403.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="662.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (265 samples, 0.28%)</title><rect x="659.7" y="451.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (265 samples, 0.28%)</title><rect x="659.7" y="435.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (265 samples, 0.28%)</title><rect x="659.7" y="419.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (265 samples, 0.28%)</title><rect x="659.7" y="403.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (91 samples, 0.10%)</title><rect x="659.7" y="387.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (91 samples, 0.10%)</title><rect x="659.7" y="371.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (91 samples, 0.10%)</title><rect x="659.7" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (91 samples, 0.10%)</title><rect x="659.7" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (91 samples, 0.10%)</title><rect x="659.7" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (91 samples, 0.10%)</title><rect x="659.7" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (91 samples, 0.10%)</title><rect x="659.7" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (91 samples, 0.10%)</title><rect x="659.7" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (91 samples, 0.10%)</title><rect x="659.7" y="259.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="662.7" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (82 samples, 0.09%)</title><rect x="660.8" y="387.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.8" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (82 samples, 0.09%)</title><rect x="660.8" y="371.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (44 samples, 0.05%)</title><rect x="660.8" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.05%)</title><rect x="660.8" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.05%)</title><rect x="660.8" y="323.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="663.8" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (38 samples, 0.04%)</title><rect x="661.3" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.3" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (38 samples, 0.04%)</title><rect x="661.3" y="339.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="664.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (92 samples, 0.10%)</title><rect x="661.8" y="387.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.8" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (92 samples, 0.10%)</title><rect x="661.8" y="371.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="664.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (56 samples, 0.06%)</title><rect x="663.0" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.0" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (56 samples, 0.06%)</title><rect x="663.0" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="666.0" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (85 samples, 0.09%)</title><rect x="663.6" y="451.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (85 samples, 0.09%)</title><rect x="663.6" y="435.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="666.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (32 samples, 0.03%)</title><rect x="664.7" y="483.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="667.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (643 samples, 0.67%)</title><rect x="665.1" y="483.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.1" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (643 samples, 0.67%)</title><rect x="665.1" y="467.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.1" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (588 samples, 0.62%)</title><rect x="665.1" y="451.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.1" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (588 samples, 0.62%)</title><rect x="665.1" y="435.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.1" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (588 samples, 0.62%)</title><rect x="665.1" y="419.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.1" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (108 samples, 0.11%)</title><rect x="665.1" y="403.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="668.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (175 samples, 0.18%)</title><rect x="666.4" y="403.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.4" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (175 samples, 0.18%)</title><rect x="666.4" y="387.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.4" y="398.0"></text>
</g>
<g>
<title>byte[] (175 samples, 0.18%)</title><rect x="666.4" y="371.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="669.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (305 samples, 0.32%)</title><rect x="668.6" y="403.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (305 samples, 0.32%)</title><rect x="668.6" y="387.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.12%)</title><rect x="668.6" y="371.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="671.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (190 samples, 0.20%)</title><rect x="670.0" y="371.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.0" y="382.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.20%)</title><rect x="670.0" y="355.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="673.0" y="366.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (55 samples, 0.06%)</title><rect x="672.4" y="451.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="675.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (87 samples, 0.09%)</title><rect x="673.0" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.0" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (87 samples, 0.09%)</title><rect x="673.0" y="467.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="676.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (167 samples, 0.18%)</title><rect x="674.1" y="483.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.1" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (51 samples, 0.05%)</title><rect x="674.1" y="467.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="677.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (42 samples, 0.04%)</title><rect x="674.7" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.04%)</title><rect x="674.7" y="451.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="677.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (74 samples, 0.08%)</title><rect x="675.3" y="467.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (74 samples, 0.08%)</title><rect x="675.3" y="451.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="678.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (903 samples, 0.95%)</title><rect x="676.2" y="499.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.2" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.map (72 samples, 0.08%)</title><rect x="676.4" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$167/1412176863.apply (72 samples, 0.08%)</title><rect x="676.4" y="467.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (34 samples, 0.04%)</title><rect x="676.4" y="451.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="679.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (38 samples, 0.04%)</title><rect x="676.8" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (38 samples, 0.04%)</title><rect x="676.8" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="679.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (118 samples, 0.12%)</title><rect x="677.3" y="483.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="680.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (42 samples, 0.04%)</title><rect x="678.7" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (42 samples, 0.04%)</title><rect x="678.7" y="467.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="681.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (26 samples, 0.03%)</title><rect x="679.3" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.3" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (26 samples, 0.03%)</title><rect x="679.3" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.3" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (26 samples, 0.03%)</title><rect x="679.3" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.3" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (26 samples, 0.03%)</title><rect x="679.3" y="435.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="682.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (628 samples, 0.66%)</title><rect x="679.6" y="483.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (628 samples, 0.66%)</title><rect x="679.6" y="467.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Class[] (62 samples, 0.06%)</title><rect x="679.6" y="451.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="682.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.05%)</title><rect x="680.4" y="451.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="683.4" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (58 samples, 0.06%)</title><rect x="680.9" y="451.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="683.9" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (261 samples, 0.27%)</title><rect x="681.7" y="451.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (261 samples, 0.27%)</title><rect x="681.7" y="435.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.7" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (261 samples, 0.27%)</title><rect x="681.7" y="419.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.7" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (261 samples, 0.27%)</title><rect x="681.7" y="403.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.7" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (261 samples, 0.27%)</title><rect x="681.7" y="387.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="684.7" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (111 samples, 0.12%)</title><rect x="684.9" y="451.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (111 samples, 0.12%)</title><rect x="684.9" y="435.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (31 samples, 0.03%)</title><rect x="684.9" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (31 samples, 0.03%)</title><rect x="684.9" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="687.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (80 samples, 0.08%)</title><rect x="685.3" y="419.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (80 samples, 0.08%)</title><rect x="685.3" y="403.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="688.3" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (88 samples, 0.09%)</title><rect x="686.3" y="451.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (88 samples, 0.09%)</title><rect x="686.3" y="435.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (88 samples, 0.09%)</title><rect x="686.3" y="419.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="689.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (454 samples, 0.48%)</title><rect x="687.4" y="499.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (87 samples, 0.09%)</title><rect x="687.4" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (46 samples, 0.05%)</title><rect x="687.4" y="467.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="690.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (41 samples, 0.04%)</title><rect x="687.9" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (41 samples, 0.04%)</title><rect x="687.9" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (41 samples, 0.04%)</title><rect x="687.9" y="435.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="690.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.06%)</title><rect x="688.4" y="483.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="691.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (313 samples, 0.33%)</title><rect x="689.1" y="483.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.06%)</title><rect x="689.1" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.06%)</title><rect x="689.1" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1084020713.get$Lambda (33 samples, 0.03%)</title><rect x="689.1" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$178 (33 samples, 0.03%)</title><rect x="689.1" y="419.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="692.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1615536830.get$Lambda (26 samples, 0.03%)</title><rect x="689.5" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$185 (26 samples, 0.03%)</title><rect x="689.5" y="419.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="692.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (254 samples, 0.27%)</title><rect x="689.8" y="467.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (254 samples, 0.27%)</title><rect x="689.8" y="451.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (148 samples, 0.16%)</title><rect x="689.8" y="435.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="692.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.11%)</title><rect x="691.7" y="435.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.11%)</title><rect x="691.7" y="419.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.11%)</title><rect x="691.7" y="403.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="694.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$649/1942734930.handleLocalResponse (67 samples, 0.07%)</title><rect x="693.0" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$1 (67 samples, 0.07%)</title><rect x="693.0" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (67 samples, 0.07%)</title><rect x="693.0" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="693.0" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="693.0" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$654/1765400375.get$Lambda (24 samples, 0.03%)</title><rect x="693.0" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.0" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$654 (24 samples, 0.03%)</title><rect x="693.0" y="467.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="696.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (43 samples, 0.05%)</title><rect x="693.3" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (43 samples, 0.05%)</title><rect x="693.3" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (24 samples, 0.03%)</title><rect x="693.3" y="483.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="696.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$652/191716500.requestBuild (1,972 samples, 2.07%)</title><rect x="693.8" y="563.0" width="24.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.8" y="574.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$2 (1,972 samples, 2.07%)</title><rect x="693.8" y="547.0" width="24.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.8" y="558.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (762 samples, 0.80%)</title><rect x="693.8" y="531.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (75 samples, 0.08%)</title><rect x="693.8" y="515.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="696.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (687 samples, 0.72%)</title><rect x="694.7" y="515.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (661 samples, 0.69%)</title><rect x="694.7" y="499.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (661 samples, 0.69%)</title><rect x="694.7" y="483.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.7" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (33 samples, 0.03%)</title><rect x="694.7" y="467.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="697.7" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (40 samples, 0.04%)</title><rect x="695.1" y="467.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="698.1" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (87 samples, 0.09%)</title><rect x="695.6" y="467.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="698.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (24 samples, 0.03%)</title><rect x="696.7" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="699.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.08%)</title><rect x="697.0" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.08%)</title><rect x="697.0" y="451.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.get$Lambda (73 samples, 0.08%)</title><rect x="697.0" y="435.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.0" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (73 samples, 0.08%)</title><rect x="697.0" y="419.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="700.0" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (59 samples, 0.06%)</title><rect x="697.9" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.9" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (59 samples, 0.06%)</title><rect x="697.9" y="451.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="700.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (266 samples, 0.28%)</title><rect x="698.6" y="467.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (266 samples, 0.28%)</title><rect x="698.6" y="451.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (266 samples, 0.28%)</title><rect x="698.6" y="435.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (97 samples, 0.10%)</title><rect x="698.6" y="419.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.6" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (97 samples, 0.10%)</title><rect x="698.6" y="403.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (97 samples, 0.10%)</title><rect x="698.6" y="387.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.10%)</title><rect x="698.6" y="371.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.10%)</title><rect x="698.6" y="355.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.10%)</title><rect x="698.6" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.10%)</title><rect x="698.6" y="323.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="701.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (97 samples, 0.10%)</title><rect x="698.6" y="307.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (97 samples, 0.10%)</title><rect x="698.6" y="291.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="701.6" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (76 samples, 0.08%)</title><rect x="699.8" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.8" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (76 samples, 0.08%)</title><rect x="699.8" y="403.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (38 samples, 0.04%)</title><rect x="699.8" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.04%)</title><rect x="699.8" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.04%)</title><rect x="699.8" y="355.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="702.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (38 samples, 0.04%)</title><rect x="700.3" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.3" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (38 samples, 0.04%)</title><rect x="700.3" y="371.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="703.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (93 samples, 0.10%)</title><rect x="700.8" y="419.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.8" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (93 samples, 0.10%)</title><rect x="700.8" y="403.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="703.8" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (79 samples, 0.08%)</title><rect x="701.9" y="467.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (79 samples, 0.08%)</title><rect x="701.9" y="451.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="704.9" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (26 samples, 0.03%)</title><rect x="702.9" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.9" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.of (26 samples, 0.03%)</title><rect x="702.9" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.9" y="494.0"></text>
</g>
<g>
<title>java.util.Optional (26 samples, 0.03%)</title><rect x="702.9" y="467.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="705.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (1,210 samples, 1.27%)</title><rect x="703.2" y="531.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.2" y="542.0"></text>
</g>
<g>
<title>java.net.URI (139 samples, 0.15%)</title><rect x="703.2" y="515.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="706.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (150 samples, 0.16%)</title><rect x="704.9" y="515.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (150 samples, 0.16%)</title><rect x="704.9" y="499.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (150 samples, 0.16%)</title><rect x="704.9" y="483.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (150 samples, 0.16%)</title><rect x="704.9" y="467.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (44 samples, 0.05%)</title><rect x="704.9" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.05%)</title><rect x="704.9" y="435.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="707.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (106 samples, 0.11%)</title><rect x="705.5" y="451.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (106 samples, 0.11%)</title><rect x="705.5" y="435.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.5" y="446.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.11%)</title><rect x="705.5" y="419.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="708.5" y="430.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (547 samples, 0.57%)</title><rect x="706.8" y="515.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.8" y="526.0"></text>
</g>
<g>
<title>java.net.URI$Parser (67 samples, 0.07%)</title><rect x="706.8" y="499.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="709.8" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (480 samples, 0.50%)</title><rect x="707.6" y="499.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (80 samples, 0.08%)</title><rect x="707.6" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (80 samples, 0.08%)</title><rect x="707.6" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.04%)</title><rect x="707.6" y="451.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="710.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.04%)</title><rect x="708.1" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.1" y="462.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.04%)</title><rect x="708.1" y="435.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="711.1" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (400 samples, 0.42%)</title><rect x="708.6" y="483.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (213 samples, 0.22%)</title><rect x="708.6" y="467.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (213 samples, 0.22%)</title><rect x="708.6" y="451.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (96 samples, 0.10%)</title><rect x="708.6" y="435.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="711.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (117 samples, 0.12%)</title><rect x="709.8" y="435.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.8" y="446.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.12%)</title><rect x="709.8" y="419.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="712.8" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (187 samples, 0.20%)</title><rect x="711.2" y="467.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (84 samples, 0.09%)</title><rect x="711.2" y="451.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.09%)</title><rect x="711.2" y="435.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.04%)</title><rect x="711.2" y="419.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="714.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.05%)</title><rect x="711.7" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.7" y="430.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="711.7" y="403.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="714.7" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (103 samples, 0.11%)</title><rect x="712.3" y="451.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="715.3" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (103 samples, 0.11%)</title><rect x="712.3" y="435.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (103 samples, 0.11%)</title><rect x="712.3" y="419.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (103 samples, 0.11%)</title><rect x="712.3" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.05%)</title><rect x="712.3" y="387.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="715.3" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.06%)</title><rect x="712.8" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.8" y="398.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.06%)</title><rect x="712.8" y="371.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="715.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (194 samples, 0.20%)</title><rect x="713.6" y="515.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (76 samples, 0.08%)</title><rect x="713.6" y="499.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="716.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (118 samples, 0.12%)</title><rect x="714.5" y="499.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (34 samples, 0.04%)</title><rect x="714.5" y="483.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="717.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (84 samples, 0.09%)</title><rect x="714.9" y="483.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.9" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (84 samples, 0.09%)</title><rect x="714.9" y="467.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="717.9" y="478.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (38 samples, 0.04%)</title><rect x="716.0" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.0" y="526.0"></text>
</g>
<g>
<title>java/time/Duration.create (38 samples, 0.04%)</title><rect x="716.0" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.0" y="510.0"></text>
</g>
<g>
<title>java.time.Duration (38 samples, 0.04%)</title><rect x="716.0" y="483.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="719.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (142 samples, 0.15%)</title><rect x="716.4" y="515.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (142 samples, 0.15%)</title><rect x="716.4" y="499.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (142 samples, 0.15%)</title><rect x="716.4" y="483.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.4" y="494.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (142 samples, 0.15%)</title><rect x="716.4" y="467.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.4" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (67 samples, 0.07%)</title><rect x="716.4" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (67 samples, 0.07%)</title><rect x="716.4" y="435.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="719.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$150/874905175.apply (75 samples, 0.08%)</title><rect x="717.3" y="451.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (75 samples, 0.08%)</title><rect x="717.3" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.3" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (39 samples, 0.04%)</title><rect x="717.3" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="720.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (36 samples, 0.04%)</title><rect x="717.7" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.7" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.04%)</title><rect x="717.7" y="403.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="720.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (458 samples, 0.48%)</title><rect x="718.2" y="579.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.03%)</title><rect x="718.2" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.03%)</title><rect x="718.2" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$203/366038914.get$Lambda (26 samples, 0.03%)</title><rect x="718.2" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.2" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$203 (26 samples, 0.03%)</title><rect x="718.2" y="515.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="721.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (60 samples, 0.06%)</title><rect x="718.5" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (60 samples, 0.06%)</title><rect x="718.5" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (27 samples, 0.03%)</title><rect x="718.5" y="531.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="721.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (33 samples, 0.03%)</title><rect x="718.8" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (33 samples, 0.03%)</title><rect x="718.8" y="515.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="721.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (372 samples, 0.39%)</title><rect x="719.2" y="563.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (31 samples, 0.03%)</title><rect x="719.7" y="547.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="722.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (283 samples, 0.30%)</title><rect x="720.0" y="547.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$201/847124037.accept (283 samples, 0.30%)</title><rect x="720.0" y="531.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (283 samples, 0.30%)</title><rect x="720.0" y="515.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (74 samples, 0.08%)</title><rect x="720.0" y="499.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (74 samples, 0.08%)</title><rect x="720.0" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.get$Lambda (74 samples, 0.08%)</title><rect x="720.0" y="467.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.0" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.MergeUtils$$Lambda$202 (74 samples, 0.08%)</title><rect x="720.0" y="451.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="723.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (209 samples, 0.22%)</title><rect x="721.0" y="499.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (209 samples, 0.22%)</title><rect x="721.0" y="483.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (110 samples, 0.12%)</title><rect x="721.0" y="467.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="724.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="722.3" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (24 samples, 0.03%)</title><rect x="722.3" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="725.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.08%)</title><rect x="722.6" y="467.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.08%)</title><rect x="722.6" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.08%)</title><rect x="722.6" y="435.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="725.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (25 samples, 0.03%)</title><rect x="723.5" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (110 samples, 0.12%)</title><rect x="723.8" y="595.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (110 samples, 0.12%)</title><rect x="723.8" y="579.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (110 samples, 0.12%)</title><rect x="723.8" y="563.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (110 samples, 0.12%)</title><rect x="723.8" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (110 samples, 0.12%)</title><rect x="723.8" y="531.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.8" y="542.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.12%)</title><rect x="723.8" y="515.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="726.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (220 samples, 0.23%)</title><rect x="725.2" y="691.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (220 samples, 0.23%)</title><rect x="725.2" y="675.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (220 samples, 0.23%)</title><rect x="725.2" y="659.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (220 samples, 0.23%)</title><rect x="725.2" y="643.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (220 samples, 0.23%)</title><rect x="725.2" y="627.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (220 samples, 0.23%)</title><rect x="725.2" y="611.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (220 samples, 0.23%)</title><rect x="725.2" y="595.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (220 samples, 0.23%)</title><rect x="725.2" y="579.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (220 samples, 0.23%)</title><rect x="725.2" y="563.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (202 samples, 0.21%)</title><rect x="725.2" y="547.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (192 samples, 0.20%)</title><rect x="725.2" y="531.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (192 samples, 0.20%)</title><rect x="725.2" y="515.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (105 samples, 0.11%)</title><rect x="725.2" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (105 samples, 0.11%)</title><rect x="725.2" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (105 samples, 0.11%)</title><rect x="725.2" y="467.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (105 samples, 0.11%)</title><rect x="725.2" y="451.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (105 samples, 0.11%)</title><rect x="725.2" y="435.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="728.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (87 samples, 0.09%)</title><rect x="726.5" y="499.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (87 samples, 0.09%)</title><rect x="726.5" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/RejectedExecutionException.&lt;init&gt; (26 samples, 0.03%)</title><rect x="727.1" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.1" y="478.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (26 samples, 0.03%)</title><rect x="727.1" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (26 samples, 0.03%)</title><rect x="727.1" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (26 samples, 0.03%)</title><rect x="727.1" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (26 samples, 0.03%)</title><rect x="727.1" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.1" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (26 samples, 0.03%)</title><rect x="727.1" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,274 samples, 1.34%)</title><rect x="727.9" y="691.0" width="15.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="727.9" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="727.9" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2015781843.linkToTargetMethod (21 samples, 0.02%)</title><rect x="728.2" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="728.2" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$452/1862861862.get$Lambda (21 samples, 0.02%)</title><rect x="728.2" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$452 (21 samples, 0.02%)</title><rect x="728.2" y="627.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="731.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (230 samples, 0.24%)</title><rect x="728.5" y="675.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$453/1260814613.accept (189 samples, 0.20%)</title><rect x="728.5" y="659.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (189 samples, 0.20%)</title><rect x="728.5" y="643.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (189 samples, 0.20%)</title><rect x="728.5" y="627.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (189 samples, 0.20%)</title><rect x="728.5" y="611.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (189 samples, 0.20%)</title><rect x="728.5" y="595.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (189 samples, 0.20%)</title><rect x="728.5" y="579.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (189 samples, 0.20%)</title><rect x="728.5" y="563.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (189 samples, 0.20%)</title><rect x="728.5" y="547.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (189 samples, 0.20%)</title><rect x="728.5" y="531.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (189 samples, 0.20%)</title><rect x="728.5" y="515.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (189 samples, 0.20%)</title><rect x="728.5" y="499.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (189 samples, 0.20%)</title><rect x="728.5" y="483.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (35 samples, 0.04%)</title><rect x="728.5" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="731.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (35 samples, 0.04%)</title><rect x="728.5" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (35 samples, 0.04%)</title><rect x="728.5" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (21 samples, 0.02%)</title><rect x="728.9" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="728.9" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="728.9" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$471/258511231.get$Lambda (21 samples, 0.02%)</title><rect x="728.9" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$471 (21 samples, 0.02%)</title><rect x="728.9" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="731.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (133 samples, 0.14%)</title><rect x="729.2" y="467.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (68 samples, 0.07%)</title><rect x="729.2" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (42 samples, 0.04%)</title><rect x="729.2" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (42 samples, 0.04%)</title><rect x="729.2" y="419.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="732.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (26 samples, 0.03%)</title><rect x="729.7" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (26 samples, 0.03%)</title><rect x="729.7" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.7" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (26 samples, 0.03%)</title><rect x="729.7" y="403.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="732.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (65 samples, 0.07%)</title><rect x="730.0" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$266/696326643.get (65 samples, 0.07%)</title><rect x="730.0" y="435.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (65 samples, 0.07%)</title><rect x="730.0" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (65 samples, 0.07%)</title><rect x="730.0" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (64 samples, 0.07%)</title><rect x="730.0" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.0" y="398.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.06%)</title><rect x="730.1" y="371.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="733.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$456/1562675777.accept (41 samples, 0.04%)</title><rect x="730.8" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (41 samples, 0.04%)</title><rect x="730.8" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$452/1862861862.run (41 samples, 0.04%)</title><rect x="730.8" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (41 samples, 0.04%)</title><rect x="730.8" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (41 samples, 0.04%)</title><rect x="730.8" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (41 samples, 0.04%)</title><rect x="730.8" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (41 samples, 0.04%)</title><rect x="730.8" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.8" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (41 samples, 0.04%)</title><rect x="730.8" y="547.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="733.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (91 samples, 0.10%)</title><rect x="731.3" y="675.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.3" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (91 samples, 0.10%)</title><rect x="731.3" y="659.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="734.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (38 samples, 0.04%)</title><rect x="732.5" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (132 samples, 0.14%)</title><rect x="732.9" y="675.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$286/1250923022.run (60 samples, 0.06%)</title><rect x="732.9" y="659.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (60 samples, 0.06%)</title><rect x="732.9" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (60 samples, 0.06%)</title><rect x="732.9" y="627.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (60 samples, 0.06%)</title><rect x="732.9" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (60 samples, 0.06%)</title><rect x="732.9" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (60 samples, 0.06%)</title><rect x="732.9" y="579.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (60 samples, 0.06%)</title><rect x="732.9" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (60 samples, 0.06%)</title><rect x="732.9" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (60 samples, 0.06%)</title><rect x="732.9" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (60 samples, 0.06%)</title><rect x="732.9" y="515.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (44 samples, 0.05%)</title><rect x="732.9" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (44 samples, 0.05%)</title><rect x="732.9" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (44 samples, 0.05%)</title><rect x="732.9" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.linkToTargetMethod (27 samples, 0.03%)</title><rect x="732.9" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/680712932.invoke (27 samples, 0.03%)</title><rect x="732.9" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="732.9" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.03%)</title><rect x="732.9" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.03%)</title><rect x="732.9" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.9" y="398.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="732.9" y="371.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="735.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$301/890062922.run (72 samples, 0.08%)</title><rect x="733.7" y="659.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (72 samples, 0.08%)</title><rect x="733.7" y="643.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.02%)</title><rect x="733.7" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.02%)</title><rect x="733.7" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$470/1679529773.get$Lambda (23 samples, 0.02%)</title><rect x="733.7" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$470 (23 samples, 0.02%)</title><rect x="733.7" y="579.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="736.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 0.05%)</title><rect x="734.0" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (49 samples, 0.05%)</title><rect x="734.0" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (49 samples, 0.05%)</title><rect x="734.0" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (47 samples, 0.05%)</title><rect x="734.0" y="579.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="737.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (377 samples, 0.40%)</title><rect x="734.6" y="675.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.6" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (66 samples, 0.07%)</title><rect x="734.6" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.6" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (66 samples, 0.07%)</title><rect x="734.6" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (66 samples, 0.07%)</title><rect x="734.6" y="627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (66 samples, 0.07%)</title><rect x="734.6" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.6" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (66 samples, 0.07%)</title><rect x="734.6" y="595.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="737.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (311 samples, 0.33%)</title><rect x="735.4" y="659.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.04%)</title><rect x="735.4" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.04%)</title><rect x="735.4" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$622/396849249.get$Lambda (38 samples, 0.04%)</title><rect x="735.4" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$622 (38 samples, 0.04%)</title><rect x="735.4" y="595.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="738.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (69 samples, 0.07%)</title><rect x="735.9" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.9" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (69 samples, 0.07%)</title><rect x="735.9" y="627.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="738.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (34 samples, 0.04%)</title><rect x="736.7" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.7" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (34 samples, 0.04%)</title><rect x="736.7" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.7" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (34 samples, 0.04%)</title><rect x="736.7" y="611.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="739.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (170 samples, 0.18%)</title><rect x="737.1" y="643.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.1" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (83 samples, 0.09%)</title><rect x="737.1" y="627.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="740.1" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (87 samples, 0.09%)</title><rect x="738.2" y="627.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.2" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (87 samples, 0.09%)</title><rect x="738.2" y="611.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.2" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (87 samples, 0.09%)</title><rect x="738.2" y="595.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="741.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (144 samples, 0.15%)</title><rect x="739.2" y="675.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="742.2" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (79 samples, 0.08%)</title><rect x="739.3" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (30 samples, 0.03%)</title><rect x="739.3" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (30 samples, 0.03%)</title><rect x="739.3" y="627.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="742.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (49 samples, 0.05%)</title><rect x="739.7" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.7" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (49 samples, 0.05%)</title><rect x="739.7" y="627.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="742.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (56 samples, 0.06%)</title><rect x="740.3" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="743.3" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (56 samples, 0.06%)</title><rect x="740.3" y="643.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="743.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (127 samples, 0.13%)</title><rect x="741.0" y="675.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (127 samples, 0.13%)</title><rect x="741.0" y="659.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (127 samples, 0.13%)</title><rect x="741.0" y="643.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (127 samples, 0.13%)</title><rect x="741.0" y="627.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.0" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (127 samples, 0.13%)</title><rect x="741.0" y="611.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="744.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (55 samples, 0.06%)</title><rect x="742.6" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (55 samples, 0.06%)</title><rect x="742.6" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (55 samples, 0.06%)</title><rect x="742.6" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (55 samples, 0.06%)</title><rect x="742.6" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (21 samples, 0.02%)</title><rect x="742.6" y="611.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (21 samples, 0.02%)</title><rect x="742.6" y="595.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="745.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (34 samples, 0.04%)</title><rect x="742.8" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (34 samples, 0.04%)</title><rect x="742.8" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (34 samples, 0.04%)</title><rect x="742.8" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (34 samples, 0.04%)</title><rect x="742.8" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (34 samples, 0.04%)</title><rect x="742.8" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (34 samples, 0.04%)</title><rect x="742.8" y="531.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="745.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (23 samples, 0.02%)</title><rect x="743.4" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (23 samples, 0.02%)</title><rect x="743.4" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (23 samples, 0.02%)</title><rect x="743.4" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.4" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (23 samples, 0.02%)</title><rect x="743.4" y="627.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="746.4" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (36,088 samples, 37.82%)</title><rect x="743.7" y="691.0" width="446.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.7" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (889 samples, 0.93%)</title><rect x="743.7" y="675.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.7" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (889 samples, 0.93%)</title><rect x="743.7" y="659.0" width="11.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="746.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (35,199 samples, 36.89%)</title><rect x="754.7" y="675.0" width="435.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.7" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (35,199 samples, 36.89%)</title><rect x="754.7" y="659.0" width="435.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.7" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (35,199 samples, 36.89%)</title><rect x="754.7" y="643.0" width="435.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.7" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,142 samples, 7.49%)</title><rect x="754.7" y="627.0" width="88.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.7" y="638.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,142 samples, 7.49%)</title><rect x="754.7" y="611.0" width="88.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.7" y="622.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (4,095 samples, 4.29%)</title><rect x="754.7" y="595.0" width="50.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.7" y="606.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2,307 samples, 2.42%)</title><rect x="754.7" y="579.0" width="28.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.7" y="590.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,307 samples, 2.42%)</title><rect x="754.7" y="563.0" width="28.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.7" y="574.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (2,307 samples, 2.42%)</title><rect x="754.7" y="547.0" width="28.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.7" y="558.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,307 samples, 2.42%)</title><rect x="754.7" y="531.0" width="28.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.7" y="542.0">ja..</text>
</g>
<g>
<title>java.lang.String (940 samples, 0.99%)</title><rect x="754.7" y="515.0" width="11.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="757.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,367 samples, 1.43%)</title><rect x="766.3" y="515.0" width="16.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.3" y="526.0"></text>
</g>
<g>
<title>byte[] (1,367 samples, 1.43%)</title><rect x="766.3" y="499.0" width="16.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="769.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (1,788 samples, 1.87%)</title><rect x="783.2" y="579.0" width="22.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.2" y="590.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (1,788 samples, 1.87%)</title><rect x="783.2" y="563.0" width="22.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.2" y="574.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1457384287.linkToTargetMethod (1,608 samples, 1.69%)</title><rect x="783.2" y="547.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,608 samples, 1.69%)</title><rect x="783.2" y="531.0" width="19.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.get$Lambda (1,608 samples, 1.69%)</title><rect x="783.2" y="515.0" width="19.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.2" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$111 (1,608 samples, 1.69%)</title><rect x="783.2" y="499.0" width="19.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="786.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (180 samples, 0.19%)</title><rect x="803.1" y="547.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.1" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (124 samples, 0.13%)</title><rect x="803.1" y="531.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.1" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (124 samples, 0.13%)</title><rect x="803.1" y="515.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.1" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (124 samples, 0.13%)</title><rect x="803.1" y="499.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.1" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (122 samples, 0.13%)</title><rect x="803.1" y="483.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.1" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (122 samples, 0.13%)</title><rect x="803.1" y="467.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.1" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (122 samples, 0.13%)</title><rect x="803.1" y="451.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.1" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (122 samples, 0.13%)</title><rect x="803.1" y="435.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (122 samples, 0.13%)</title><rect x="803.1" y="419.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.1" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (122 samples, 0.13%)</title><rect x="803.1" y="403.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (122 samples, 0.13%)</title><rect x="803.1" y="387.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.1" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (111 samples, 0.12%)</title><rect x="803.1" y="371.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.1" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (111 samples, 0.12%)</title><rect x="803.1" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.1" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (82 samples, 0.09%)</title><rect x="803.1" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.1" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (82 samples, 0.09%)</title><rect x="803.1" y="323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.1" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (63 samples, 0.07%)</title><rect x="803.1" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.1" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (63 samples, 0.07%)</title><rect x="803.1" y="291.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.1" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (63 samples, 0.07%)</title><rect x="803.1" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.1" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (63 samples, 0.07%)</title><rect x="803.1" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (45 samples, 0.05%)</title><rect x="803.1" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (21 samples, 0.02%)</title><rect x="803.4" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.02%)</title><rect x="803.4" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (56 samples, 0.06%)</title><rect x="804.6" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (36 samples, 0.04%)</title><rect x="804.9" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (36 samples, 0.04%)</title><rect x="804.9" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3,047 samples, 3.19%)</title><rect x="805.3" y="595.0" width="37.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.3" y="606.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (3,047 samples, 3.19%)</title><rect x="805.3" y="579.0" width="37.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.3" y="590.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,047 samples, 3.19%)</title><rect x="805.3" y="563.0" width="37.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.3" y="574.0">jav..</text>
</g>
<g>
<title>java.lang.String (1,177 samples, 1.23%)</title><rect x="805.3" y="547.0" width="14.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="808.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,870 samples, 1.96%)</title><rect x="819.9" y="547.0" width="23.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.9" y="558.0">j..</text>
</g>
<g>
<title>byte[] (1,870 samples, 1.96%)</title><rect x="819.9" y="531.0" width="23.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="822.9" y="542.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10,058 samples, 10.54%)</title><rect x="843.0" y="627.0" width="124.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.0" y="638.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one.nio.http.Request (2,137 samples, 2.24%)</title><rect x="843.0" y="611.0" width="26.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="846.0" y="622.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,568 samples, 2.69%)</title><rect x="869.4" y="611.0" width="31.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.4" y="622.0">on..</text>
</g>
<g>
<title>java.lang.String[] (2,200 samples, 2.31%)</title><rect x="869.4" y="595.0" width="27.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="872.4" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String[] (368 samples, 0.39%)</title><rect x="896.6" y="595.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="899.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,353 samples, 5.61%)</title><rect x="901.2" y="611.0" width="66.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.2" y="622.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,353 samples, 5.61%)</title><rect x="901.2" y="595.0" width="66.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.2" y="606.0">one/nio..</text>
</g>
<g>
<title>char[] (1,923 samples, 2.02%)</title><rect x="901.2" y="579.0" width="23.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="904.2" y="590.0">c..</text>
</g>
<g>
<title>char[] (159 samples, 0.17%)</title><rect x="925.0" y="579.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String (1,643 samples, 1.72%)</title><rect x="926.9" y="579.0" width="20.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="929.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,628 samples, 1.71%)</title><rect x="947.3" y="579.0" width="20.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,628 samples, 1.71%)</title><rect x="947.3" y="563.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,628 samples, 1.71%)</title><rect x="947.3" y="547.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.3" y="558.0"></text>
</g>
<g>
<title>byte[] (1,628 samples, 1.71%)</title><rect x="947.3" y="531.0" width="20.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="950.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (464 samples, 0.49%)</title><rect x="967.4" y="627.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.4" y="638.0"></text>
</g>
<g>
<title>byte[] (464 samples, 0.49%)</title><rect x="967.4" y="611.0" width="5.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="970.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,933 samples, 2.03%)</title><rect x="973.1" y="627.0" width="23.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.1" y="638.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,933 samples, 2.03%)</title><rect x="973.1" y="611.0" width="23.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.1" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,933 samples, 2.03%)</title><rect x="973.1" y="595.0" width="23.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.1" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String (1,146 samples, 1.20%)</title><rect x="973.1" y="579.0" width="14.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="976.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (787 samples, 0.82%)</title><rect x="987.3" y="579.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.3" y="590.0"></text>
</g>
<g>
<title>byte[] (787 samples, 0.82%)</title><rect x="987.3" y="563.0" width="9.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="990.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15,602 samples, 16.35%)</title><rect x="997.0" y="627.0" width="193.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.0" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (15,602 samples, 16.35%)</title><rect x="997.0" y="611.0" width="193.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.0" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (5,637 samples, 5.91%)</title><rect x="997.0" y="595.0" width="69.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1000.0" y="606.0">char[]</text>
</g>
<g>
<title>char[] (879 samples, 0.92%)</title><rect x="1066.8" y="595.0" width="10.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1069.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String (3,443 samples, 3.61%)</title><rect x="1077.6" y="595.0" width="42.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1080.6" y="606.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,643 samples, 5.91%)</title><rect x="1120.2" y="595.0" width="69.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.2" y="606.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,643 samples, 5.91%)</title><rect x="1120.2" y="579.0" width="69.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.2" y="590.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5,643 samples, 5.91%)</title><rect x="1120.2" y="563.0" width="69.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.2" y="574.0">java/la..</text>
</g>
<g>
<title>byte[] (5,632 samples, 5.90%)</title><rect x="1120.2" y="547.0" width="69.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1123.2" y="558.0">byte[]</text>
</g>
</g>
</svg>
