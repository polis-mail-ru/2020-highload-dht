<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (117,396 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (67,403 samples, 57.42%)</title><rect x="10.0" y="691.0" width="677.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (67,403 samples, 57.42%)</title><rect x="10.0" y="675.0" width="677.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (67,403 samples, 57.42%)</title><rect x="10.0" y="659.0" width="677.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (37,205 samples, 31.69%)</title><rect x="10.0" y="643.0" width="374.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14,514 samples, 12.36%)</title><rect x="10.0" y="627.0" width="145.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,024 samples, 6.83%)</title><rect x="10.0" y="611.0" width="80.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (42 samples, 0.04%)</title><rect x="10.0" y="595.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/741792946.apply (7,982 samples, 6.80%)</title><rect x="10.4" y="595.0" width="80.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.4" y="606.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (7,982 samples, 6.80%)</title><rect x="10.4" y="579.0" width="80.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.4" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (7,982 samples, 6.80%)</title><rect x="10.4" y="563.0" width="80.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.4" y="574.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.06%)</title><rect x="10.4" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.06%)</title><rect x="10.4" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/2133978669.get$Lambda (43 samples, 0.04%)</title><rect x="10.4" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$441 (43 samples, 0.04%)</title><rect x="10.4" y="499.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="13.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1523195787.get$Lambda (29 samples, 0.02%)</title><rect x="10.9" y="515.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$442 (29 samples, 0.02%)</title><rect x="10.9" y="499.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (100 samples, 0.09%)</title><rect x="11.1" y="547.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (100 samples, 0.09%)</title><rect x="11.1" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (53 samples, 0.05%)</title><rect x="11.1" y="515.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="14.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.04%)</title><rect x="11.7" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.04%)</title><rect x="11.7" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.04%)</title><rect x="11.7" y="483.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="14.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (254 samples, 0.22%)</title><rect x="12.2" y="547.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (254 samples, 0.22%)</title><rect x="12.2" y="531.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (151 samples, 0.13%)</title><rect x="12.2" y="515.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="15.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.09%)</title><rect x="13.7" y="515.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.09%)</title><rect x="13.7" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.09%)</title><rect x="13.7" y="483.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="16.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (7,325 samples, 6.24%)</title><rect x="14.7" y="547.0" width="73.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.7" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (7,325 samples, 6.24%)</title><rect x="14.7" y="531.0" width="73.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.7" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (7,325 samples, 6.24%)</title><rect x="14.7" y="515.0" width="73.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.7" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.09%)</title><rect x="14.7" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.09%)</title><rect x="14.7" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/1245067522.get$Lambda (33 samples, 0.03%)</title><rect x="14.7" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$207 (33 samples, 0.03%)</title><rect x="14.7" y="451.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="17.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/704007913.get$Lambda (34 samples, 0.03%)</title><rect x="15.0" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$213 (34 samples, 0.03%)</title><rect x="15.0" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="18.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$369/2088470337.get$Lambda (38 samples, 0.03%)</title><rect x="15.4" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$369 (38 samples, 0.03%)</title><rect x="15.4" y="451.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="18.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5,110 samples, 4.35%)</title><rect x="15.8" y="499.0" width="51.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.8" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5,110 samples, 4.35%)</title><rect x="15.8" y="483.0" width="51.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.8" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,058 samples, 4.31%)</title><rect x="15.8" y="467.0" width="50.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.8" y="478.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$369/2088470337.apply (5,058 samples, 4.31%)</title><rect x="15.8" y="451.0" width="50.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.8" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (5,058 samples, 4.31%)</title><rect x="15.8" y="435.0" width="50.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.8" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,058 samples, 4.31%)</title><rect x="15.8" y="419.0" width="50.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.8" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/704007913.apply (5,058 samples, 4.31%)</title><rect x="15.8" y="403.0" width="50.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.8" y="414.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5,058 samples, 4.31%)</title><rect x="15.8" y="387.0" width="50.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.8" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.03%)</title><rect x="15.8" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.03%)</title><rect x="15.8" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$439/1214099568.get$Lambda (38 samples, 0.03%)</title><rect x="15.8" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$439 (38 samples, 0.03%)</title><rect x="15.8" y="323.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="18.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (112 samples, 0.10%)</title><rect x="16.1" y="371.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (112 samples, 0.10%)</title><rect x="16.1" y="355.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (48 samples, 0.04%)</title><rect x="16.1" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="19.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.05%)</title><rect x="16.7" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.05%)</title><rect x="16.7" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.05%)</title><rect x="16.7" y="307.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="19.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (115 samples, 0.10%)</title><rect x="17.3" y="371.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (115 samples, 0.10%)</title><rect x="17.3" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (62 samples, 0.05%)</title><rect x="17.3" y="339.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="20.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="17.9" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="17.9" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.04%)</title><rect x="17.9" y="307.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="20.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,793 samples, 4.08%)</title><rect x="18.4" y="371.0" width="48.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.4" y="382.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.05%)</title><rect x="18.4" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.05%)</title><rect x="18.4" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/719435531.get$Lambda (27 samples, 0.02%)</title><rect x="18.4" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$436 (27 samples, 0.02%)</title><rect x="18.4" y="307.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="21.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$438/1095477642.get$Lambda (29 samples, 0.02%)</title><rect x="18.7" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$438 (29 samples, 0.02%)</title><rect x="18.7" y="307.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="21.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,938 samples, 3.35%)</title><rect x="19.0" y="355.0" width="39.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.0" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,938 samples, 3.35%)</title><rect x="19.0" y="339.0" width="39.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.0" y="350.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (43 samples, 0.04%)</title><rect x="19.0" y="323.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="22.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/719435531.apply (3,787 samples, 3.23%)</title><rect x="19.4" y="323.0" width="38.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.4" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,787 samples, 3.23%)</title><rect x="19.4" y="307.0" width="38.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.4" y="318.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (123 samples, 0.10%)</title><rect x="19.7" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (123 samples, 0.10%)</title><rect x="19.7" y="275.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (65 samples, 0.06%)</title><rect x="19.7" y="259.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="22.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.05%)</title><rect x="20.3" y="259.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.05%)</title><rect x="20.3" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.05%)</title><rect x="20.3" y="227.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="23.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.04%)</title><rect x="20.9" y="291.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="23.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (82 samples, 0.07%)</title><rect x="21.4" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (46 samples, 0.04%)</title><rect x="21.4" y="275.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="24.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (36 samples, 0.03%)</title><rect x="21.8" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (34 samples, 0.03%)</title><rect x="21.8" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (34 samples, 0.03%)</title><rect x="21.8" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (34 samples, 0.03%)</title><rect x="21.8" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (34 samples, 0.03%)</title><rect x="21.8" y="211.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (34 samples, 0.03%)</title><rect x="21.8" y="195.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="24.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (117 samples, 0.10%)</title><rect x="22.2" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (117 samples, 0.10%)</title><rect x="22.2" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (30 samples, 0.03%)</title><rect x="22.2" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (30 samples, 0.03%)</title><rect x="22.2" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (30 samples, 0.03%)</title><rect x="22.2" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (30 samples, 0.03%)</title><rect x="22.2" y="211.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="25.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (87 samples, 0.07%)</title><rect x="22.5" y="259.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (87 samples, 0.07%)</title><rect x="22.5" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (58 samples, 0.05%)</title><rect x="22.5" y="227.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="25.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (29 samples, 0.02%)</title><rect x="23.1" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (29 samples, 0.02%)</title><rect x="23.1" y="211.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="26.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,394 samples, 2.89%)</title><rect x="23.4" y="291.0" width="34.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.4" y="302.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (36 samples, 0.03%)</title><rect x="23.4" y="275.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="26.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (288 samples, 0.25%)</title><rect x="23.7" y="275.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (288 samples, 0.25%)</title><rect x="23.7" y="259.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (288 samples, 0.25%)</title><rect x="23.7" y="243.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.7" y="254.0"></text>
</g>
<g>
<title>byte[] (284 samples, 0.24%)</title><rect x="23.7" y="227.0" width="2.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="26.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (111 samples, 0.09%)</title><rect x="26.6" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.6" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (111 samples, 0.09%)</title><rect x="26.6" y="259.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.6" y="270.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.09%)</title><rect x="26.6" y="243.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="29.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (310 samples, 0.26%)</title><rect x="27.7" y="275.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (310 samples, 0.26%)</title><rect x="27.7" y="259.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.04%)</title><rect x="27.7" y="243.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="30.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (259 samples, 0.22%)</title><rect x="28.3" y="243.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.3" y="254.0"></text>
</g>
<g>
<title>byte[] (256 samples, 0.22%)</title><rect x="28.3" y="227.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="31.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.06%)</title><rect x="30.9" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.06%)</title><rect x="30.9" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.9" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (75 samples, 0.06%)</title><rect x="30.9" y="243.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="33.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (45 samples, 0.04%)</title><rect x="31.6" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.6" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (45 samples, 0.04%)</title><rect x="31.6" y="259.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="34.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,040 samples, 1.74%)</title><rect x="32.1" y="275.0" width="20.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.1" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (38 samples, 0.03%)</title><rect x="32.1" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.03%)</title><rect x="32.1" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.03%)</title><rect x="32.1" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.1" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$454/669478227.get$Lambda (38 samples, 0.03%)</title><rect x="32.1" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.1" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$454 (38 samples, 0.03%)</title><rect x="32.1" y="195.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="35.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,075 samples, 0.92%)</title><rect x="32.4" y="259.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (635 samples, 0.54%)</title><rect x="32.4" y="243.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.4" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (635 samples, 0.54%)</title><rect x="32.4" y="227.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.4" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (635 samples, 0.54%)</title><rect x="32.4" y="211.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (635 samples, 0.54%)</title><rect x="32.4" y="195.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.4" y="206.0"></text>
</g>
<g>
<title>byte[] (592 samples, 0.50%)</title><rect x="32.4" y="179.0" width="6.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="35.4" y="190.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.04%)</title><rect x="38.4" y="179.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="41.4" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (89 samples, 0.08%)</title><rect x="38.8" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.8" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (89 samples, 0.08%)</title><rect x="38.8" y="227.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (89 samples, 0.08%)</title><rect x="38.8" y="211.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (89 samples, 0.08%)</title><rect x="38.8" y="195.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="41.8" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (127 samples, 0.11%)</title><rect x="39.7" y="243.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.7" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (62 samples, 0.05%)</title><rect x="39.7" y="227.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="42.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (65 samples, 0.06%)</title><rect x="40.3" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.3" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (65 samples, 0.06%)</title><rect x="40.3" y="211.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="43.3" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$454/669478227.test (224 samples, 0.19%)</title><rect x="41.0" y="243.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.0" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (224 samples, 0.19%)</title><rect x="41.0" y="227.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/324457684.test (224 samples, 0.19%)</title><rect x="41.0" y="211.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (224 samples, 0.19%)</title><rect x="41.0" y="195.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.0" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1810899357.test (224 samples, 0.19%)</title><rect x="41.0" y="179.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.0" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (224 samples, 0.19%)</title><rect x="41.0" y="163.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/594427726.test (224 samples, 0.19%)</title><rect x="41.0" y="147.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="44.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (224 samples, 0.19%)</title><rect x="41.0" y="131.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (224 samples, 0.19%)</title><rect x="41.0" y="115.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (224 samples, 0.19%)</title><rect x="41.0" y="99.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.09%)</title><rect x="41.0" y="83.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="44.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (114 samples, 0.10%)</title><rect x="42.1" y="83.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.1" y="94.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.10%)</title><rect x="42.1" y="67.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="45.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (927 samples, 0.79%)</title><rect x="43.3" y="259.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (927 samples, 0.79%)</title><rect x="43.3" y="243.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.3" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (927 samples, 0.79%)</title><rect x="43.3" y="227.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.3" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (30 samples, 0.03%)</title><rect x="43.5" y="211.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="46.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (78 samples, 0.07%)</title><rect x="43.8" y="211.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="46.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.05%)</title><rect x="44.7" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.05%)</title><rect x="44.7" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.7" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.get$Lambda (54 samples, 0.05%)</title><rect x="44.7" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.7" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (54 samples, 0.05%)</title><rect x="44.7" y="163.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="47.7" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (46 samples, 0.04%)</title><rect x="45.3" y="211.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.3" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (46 samples, 0.04%)</title><rect x="45.3" y="195.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (603 samples, 0.51%)</title><rect x="45.8" y="211.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (603 samples, 0.51%)</title><rect x="45.8" y="195.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.8" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (603 samples, 0.51%)</title><rect x="45.8" y="179.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (121 samples, 0.10%)</title><rect x="45.8" y="163.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (121 samples, 0.10%)</title><rect x="45.8" y="147.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.8" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.get$Lambda (121 samples, 0.10%)</title><rect x="45.8" y="131.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.8" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$147 (121 samples, 0.10%)</title><rect x="45.8" y="115.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="48.8" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (77 samples, 0.07%)</title><rect x="47.0" y="163.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.0" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (77 samples, 0.07%)</title><rect x="47.0" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (77 samples, 0.07%)</title><rect x="47.0" y="131.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (77 samples, 0.07%)</title><rect x="47.0" y="115.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (77 samples, 0.07%)</title><rect x="47.0" y="99.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.0" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (77 samples, 0.07%)</title><rect x="47.0" y="83.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.0" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (77 samples, 0.07%)</title><rect x="47.0" y="67.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.0" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (77 samples, 0.07%)</title><rect x="47.0" y="51.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.0" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (77 samples, 0.07%)</title><rect x="47.0" y="35.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="50.0" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (221 samples, 0.19%)</title><rect x="47.7" y="163.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.7" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (221 samples, 0.19%)</title><rect x="47.7" y="147.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (121 samples, 0.10%)</title><rect x="47.7" y="131.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (121 samples, 0.10%)</title><rect x="47.7" y="115.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (121 samples, 0.10%)</title><rect x="47.7" y="99.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="50.7" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (100 samples, 0.09%)</title><rect x="49.0" y="131.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.0" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (100 samples, 0.09%)</title><rect x="49.0" y="115.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="52.0" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (184 samples, 0.16%)</title><rect x="50.0" y="163.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.0" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (184 samples, 0.16%)</title><rect x="50.0" y="147.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="53.0" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (75 samples, 0.06%)</title><rect x="51.8" y="211.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (75 samples, 0.06%)</title><rect x="51.8" y="195.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="54.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (124 samples, 0.11%)</title><rect x="52.6" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (46 samples, 0.04%)</title><rect x="52.6" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.6" y="270.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.04%)</title><rect x="52.6" y="243.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="55.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.07%)</title><rect x="53.0" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (78 samples, 0.07%)</title><rect x="53.0" y="243.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (78 samples, 0.07%)</title><rect x="53.0" y="227.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.07%)</title><rect x="53.0" y="211.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (35 samples, 0.03%)</title><rect x="53.0" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.03%)</title><rect x="53.0" y="179.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="56.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (43 samples, 0.04%)</title><rect x="53.4" y="195.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (43 samples, 0.04%)</title><rect x="53.4" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.4" y="190.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.04%)</title><rect x="53.4" y="163.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="56.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (89 samples, 0.08%)</title><rect x="53.8" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (89 samples, 0.08%)</title><rect x="53.8" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 0.08%)</title><rect x="53.8" y="243.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (89 samples, 0.08%)</title><rect x="53.8" y="227.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (89 samples, 0.08%)</title><rect x="53.8" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.08%)</title><rect x="53.8" y="195.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (37 samples, 0.03%)</title><rect x="53.8" y="179.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.03%)</title><rect x="53.8" y="163.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="56.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.04%)</title><rect x="54.2" y="179.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.04%)</title><rect x="54.2" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.2" y="174.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.04%)</title><rect x="54.2" y="147.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="57.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (276 samples, 0.24%)</title><rect x="54.7" y="275.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.7" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (73 samples, 0.06%)</title><rect x="54.7" y="259.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="57.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (67 samples, 0.06%)</title><rect x="55.4" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (67 samples, 0.06%)</title><rect x="55.4" y="243.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="58.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (136 samples, 0.12%)</title><rect x="56.1" y="259.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (136 samples, 0.12%)</title><rect x="56.1" y="243.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="59.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.09%)</title><rect x="57.5" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.09%)</title><rect x="57.5" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.09%)</title><rect x="57.5" y="291.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="60.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (152 samples, 0.13%)</title><rect x="58.6" y="355.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="61.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.04%)</title><rect x="60.1" y="355.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="63.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (597 samples, 0.51%)</title><rect x="60.6" y="355.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.04%)</title><rect x="60.6" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.04%)</title><rect x="60.6" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$384/137700567.get$Lambda (28 samples, 0.02%)</title><rect x="60.6" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$384 (28 samples, 0.02%)</title><rect x="60.6" y="291.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="63.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (63 samples, 0.05%)</title><rect x="61.1" y="339.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="64.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (41 samples, 0.03%)</title><rect x="61.7" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="64.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (58 samples, 0.05%)</title><rect x="62.1" y="339.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="65.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (184 samples, 0.16%)</title><rect x="62.7" y="339.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (184 samples, 0.16%)</title><rect x="62.7" y="323.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (184 samples, 0.16%)</title><rect x="62.7" y="307.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (184 samples, 0.16%)</title><rect x="62.7" y="291.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (184 samples, 0.16%)</title><rect x="62.7" y="275.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (184 samples, 0.16%)</title><rect x="62.7" y="259.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (184 samples, 0.16%)</title><rect x="62.7" y="243.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (184 samples, 0.16%)</title><rect x="62.7" y="227.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (184 samples, 0.16%)</title><rect x="62.7" y="211.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.06%)</title><rect x="62.7" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.06%)</title><rect x="62.7" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$400/490244969.get$Lambda (29 samples, 0.02%)</title><rect x="62.7" y="163.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.7" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$400 (29 samples, 0.02%)</title><rect x="62.7" y="147.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="65.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$410/487703675.get$Lambda (38 samples, 0.03%)</title><rect x="63.0" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$410 (38 samples, 0.03%)</title><rect x="63.0" y="147.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="66.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (45 samples, 0.04%)</title><rect x="63.4" y="195.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="66.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (72 samples, 0.06%)</title><rect x="63.8" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (72 samples, 0.06%)</title><rect x="63.8" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (50 samples, 0.04%)</title><rect x="64.1" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (50 samples, 0.04%)</title><rect x="64.1" y="147.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="67.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (168 samples, 0.14%)</title><rect x="64.6" y="339.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.6" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (38 samples, 0.03%)</title><rect x="64.6" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="67.6" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (76 samples, 0.06%)</title><rect x="65.0" y="323.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="68.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (54 samples, 0.05%)</title><rect x="65.7" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.7" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (54 samples, 0.05%)</title><rect x="65.7" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.7" y="318.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.05%)</title><rect x="65.7" y="291.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="68.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (34 samples, 0.03%)</title><rect x="66.3" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.03%)</title><rect x="66.3" y="323.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="69.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="66.6" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="66.6" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.04%)</title><rect x="66.6" y="435.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="69.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (98 samples, 0.08%)</title><rect x="67.1" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (98 samples, 0.08%)</title><rect x="67.1" y="483.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (48 samples, 0.04%)</title><rect x="67.1" y="467.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="70.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="67.6" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="67.6" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.04%)</title><rect x="67.6" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="70.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (2,012 samples, 1.71%)</title><rect x="68.1" y="499.0" width="20.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.05%)</title><rect x="68.1" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.05%)</title><rect x="68.1" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$356/142089639.get$Lambda (47 samples, 0.04%)</title><rect x="68.1" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$356 (47 samples, 0.04%)</title><rect x="68.1" y="435.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="71.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (113 samples, 0.10%)</title><rect x="68.7" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (113 samples, 0.10%)</title><rect x="68.7" y="467.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1092332279.apply (50 samples, 0.04%)</title><rect x="68.7" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (50 samples, 0.04%)</title><rect x="68.7" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (50 samples, 0.04%)</title><rect x="68.7" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.04%)</title><rect x="68.7" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="71.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.05%)</title><rect x="69.2" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.05%)</title><rect x="69.2" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.05%)</title><rect x="69.2" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="72.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (49 samples, 0.04%)</title><rect x="69.9" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (49 samples, 0.04%)</title><rect x="69.9" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.04%)</title><rect x="69.9" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.04%)</title><rect x="69.9" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.04%)</title><rect x="69.9" y="419.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="72.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,787 samples, 1.52%)</title><rect x="70.4" y="483.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,787 samples, 1.52%)</title><rect x="70.4" y="467.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (155 samples, 0.13%)</title><rect x="70.4" y="451.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="73.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,585 samples, 1.35%)</title><rect x="71.9" y="451.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (25 samples, 0.02%)</title><rect x="71.9" y="435.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="74.9" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList (51 samples, 0.04%)</title><rect x="72.2" y="435.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="75.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (27 samples, 0.02%)</title><rect x="72.7" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="75.7" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (94 samples, 0.08%)</title><rect x="73.0" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (94 samples, 0.08%)</title><rect x="73.0" y="419.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.0" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (94 samples, 0.08%)</title><rect x="73.0" y="403.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="76.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (45 samples, 0.04%)</title><rect x="73.9" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (45 samples, 0.04%)</title><rect x="73.9" y="419.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="76.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (112 samples, 0.10%)</title><rect x="74.4" y="435.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="77.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (80 samples, 0.07%)</title><rect x="75.5" y="435.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="78.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (101 samples, 0.09%)</title><rect x="76.3" y="435.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="79.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (105 samples, 0.09%)</title><rect x="77.3" y="435.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="80.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (435 samples, 0.37%)</title><rect x="78.4" y="435.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (42 samples, 0.04%)</title><rect x="78.4" y="419.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="81.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (27 samples, 0.02%)</title><rect x="78.8" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="81.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (35 samples, 0.03%)</title><rect x="79.1" y="419.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="82.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (25 samples, 0.02%)</title><rect x="79.4" y="419.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="82.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.02%)</title><rect x="79.7" y="419.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.02%)</title><rect x="79.7" y="403.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.get$Lambda (27 samples, 0.02%)</title><rect x="79.7" y="387.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$341 (27 samples, 0.02%)</title><rect x="79.7" y="371.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="82.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (30 samples, 0.03%)</title><rect x="79.9" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (30 samples, 0.03%)</title><rect x="79.9" y="403.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="82.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (39 samples, 0.03%)</title><rect x="80.2" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="83.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.04%)</title><rect x="80.6" y="419.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="83.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (166 samples, 0.14%)</title><rect x="81.1" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (38 samples, 0.03%)</title><rect x="81.1" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="84.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (38 samples, 0.03%)</title><rect x="81.4" y="403.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="84.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (31 samples, 0.03%)</title><rect x="81.8" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (31 samples, 0.03%)</title><rect x="81.8" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="84.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (59 samples, 0.05%)</title><rect x="82.1" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (295 samples, 0.25%)</title><rect x="82.7" y="435.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (29 samples, 0.02%)</title><rect x="83.0" y="419.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="86.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (25 samples, 0.02%)</title><rect x="83.2" y="419.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="86.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (32 samples, 0.03%)</title><rect x="83.5" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (32 samples, 0.03%)</title><rect x="83.5" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="86.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (187 samples, 0.16%)</title><rect x="83.8" y="419.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (34 samples, 0.03%)</title><rect x="83.8" y="403.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="86.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (51 samples, 0.04%)</title><rect x="84.2" y="403.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="87.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (26 samples, 0.02%)</title><rect x="84.7" y="403.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (26 samples, 0.02%)</title><rect x="84.7" y="387.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="87.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (76 samples, 0.06%)</title><rect x="84.9" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (27 samples, 0.02%)</title><rect x="85.2" y="387.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="88.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (26 samples, 0.02%)</title><rect x="85.4" y="387.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="88.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (83 samples, 0.07%)</title><rect x="85.7" y="435.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (83 samples, 0.07%)</title><rect x="85.7" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (83 samples, 0.07%)</title><rect x="85.7" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (32 samples, 0.03%)</title><rect x="85.7" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.7" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (32 samples, 0.03%)</title><rect x="85.7" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (32 samples, 0.03%)</title><rect x="85.7" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.03%)</title><rect x="85.7" y="339.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="88.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (51 samples, 0.04%)</title><rect x="86.0" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.0" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (51 samples, 0.04%)</title><rect x="86.0" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.0" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (51 samples, 0.04%)</title><rect x="86.0" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.0" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (51 samples, 0.04%)</title><rect x="86.0" y="339.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="89.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (132 samples, 0.11%)</title><rect x="86.5" y="435.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2015781843.linkToTargetMethod (35 samples, 0.03%)</title><rect x="86.5" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="86.5" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$241/940228546.get$Lambda (35 samples, 0.03%)</title><rect x="86.5" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$241 (35 samples, 0.03%)</title><rect x="86.5" y="371.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="89.5" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (97 samples, 0.08%)</title><rect x="86.9" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$241/940228546.run (97 samples, 0.08%)</title><rect x="86.9" y="403.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="89.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (97 samples, 0.08%)</title><rect x="86.9" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.9" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (29 samples, 0.02%)</title><rect x="86.9" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="89.9" y="382.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (68 samples, 0.06%)</title><rect x="87.2" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.2" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (36 samples, 0.03%)</title><rect x="87.2" y="355.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="90.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (32 samples, 0.03%)</title><rect x="87.5" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.5" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (32 samples, 0.03%)</title><rect x="87.5" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.5" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (32 samples, 0.03%)</title><rect x="87.5" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.5" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (32 samples, 0.03%)</title><rect x="87.5" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.5" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (32 samples, 0.03%)</title><rect x="87.5" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="90.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (47 samples, 0.04%)</title><rect x="87.9" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.04%)</title><rect x="87.9" y="435.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="90.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (60 samples, 0.05%)</title><rect x="88.3" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (60 samples, 0.05%)</title><rect x="88.3" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (60 samples, 0.05%)</title><rect x="88.3" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.3" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (60 samples, 0.05%)</title><rect x="88.3" y="499.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="91.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (171 samples, 0.15%)</title><rect x="88.9" y="547.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (123 samples, 0.10%)</title><rect x="88.9" y="531.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="91.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (48 samples, 0.04%)</title><rect x="90.2" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (48 samples, 0.04%)</title><rect x="90.2" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (48 samples, 0.04%)</title><rect x="90.2" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.2" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (48 samples, 0.04%)</title><rect x="90.2" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (48 samples, 0.04%)</title><rect x="90.2" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (48 samples, 0.04%)</title><rect x="90.2" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (48 samples, 0.04%)</title><rect x="90.2" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.2" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (48 samples, 0.04%)</title><rect x="90.2" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (48 samples, 0.04%)</title><rect x="90.2" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.2" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (48 samples, 0.04%)</title><rect x="90.2" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.2" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (48 samples, 0.04%)</title><rect x="90.2" y="371.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="93.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6,490 samples, 5.53%)</title><rect x="90.7" y="611.0" width="65.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.7" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6,490 samples, 5.53%)</title><rect x="90.7" y="595.0" width="65.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.7" y="606.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$528/67792651.accept (6,488 samples, 5.53%)</title><rect x="90.7" y="579.0" width="65.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.7" y="590.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (6,488 samples, 5.53%)</title><rect x="90.7" y="563.0" width="65.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.7" y="574.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (2,921 samples, 2.49%)</title><rect x="90.7" y="547.0" width="29.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.7" y="558.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,921 samples, 2.49%)</title><rect x="90.7" y="531.0" width="29.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.7" y="542.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,921 samples, 2.49%)</title><rect x="90.7" y="515.0" width="29.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.7" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,203 samples, 1.88%)</title><rect x="90.7" y="499.0" width="22.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.7" y="510.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,203 samples, 1.88%)</title><rect x="90.7" y="483.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.7" y="494.0">o..</text>
</g>
<g>
<title>byte[] (1,470 samples, 1.25%)</title><rect x="90.7" y="467.0" width="14.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="93.7" y="478.0"></text>
</g>
<g>
<title>byte[] (733 samples, 0.62%)</title><rect x="105.4" y="467.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="108.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (718 samples, 0.61%)</title><rect x="112.8" y="499.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.8" y="510.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (718 samples, 0.61%)</title><rect x="112.8" y="483.0" width="7.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="115.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (3,567 samples, 3.04%)</title><rect x="120.0" y="547.0" width="35.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.0" y="558.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/857068247.linkToTargetMethod (1,353 samples, 1.15%)</title><rect x="120.0" y="531.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/720467292.invoke (1,353 samples, 1.15%)</title><rect x="120.0" y="515.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,353 samples, 1.15%)</title><rect x="120.0" y="499.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (423 samples, 0.36%)</title><rect x="120.0" y="483.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String (423 samples, 0.36%)</title><rect x="120.0" y="467.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="123.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (930 samples, 0.79%)</title><rect x="124.3" y="483.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (930 samples, 0.79%)</title><rect x="124.3" y="467.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.3" y="478.0"></text>
</g>
<g>
<title>byte[] (930 samples, 0.79%)</title><rect x="124.3" y="451.0" width="9.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="127.3" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Response (445 samples, 0.38%)</title><rect x="133.6" y="531.0" width="4.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="136.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,769 samples, 1.51%)</title><rect x="138.1" y="531.0" width="17.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.1" y="542.0"></text>
</g>
<g>
<title>byte[] (733 samples, 0.62%)</title><rect x="138.1" y="515.0" width="7.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="141.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (600 samples, 0.51%)</title><rect x="145.5" y="515.0" width="6.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="148.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (436 samples, 0.37%)</title><rect x="151.5" y="515.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="154.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$639/310460158.get (22,691 samples, 19.33%)</title><rect x="155.9" y="627.0" width="228.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.9" y="638.0">ru/mail/polis/service/re1nex/A..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$get$11 (22,691 samples, 19.33%)</title><rect x="155.9" y="611.0" width="228.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.9" y="622.0">ru/mail/polis/service/re1nex/A..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (649 samples, 0.55%)</title><rect x="155.9" y="595.0" width="6.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="158.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (19,144 samples, 16.31%)</title><rect x="162.4" y="595.0" width="192.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.4" y="606.0">ru/mail/polis/dao/DAO.get..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,400 samples, 2.04%)</title><rect x="162.4" y="579.0" width="24.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.4" y="590.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (473 samples, 0.40%)</title><rect x="162.4" y="563.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (473 samples, 0.40%)</title><rect x="162.4" y="547.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.4" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (473 samples, 0.40%)</title><rect x="162.4" y="531.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (473 samples, 0.40%)</title><rect x="162.4" y="515.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (473 samples, 0.40%)</title><rect x="162.4" y="499.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (473 samples, 0.40%)</title><rect x="162.4" y="483.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$689/1973218.getAsBoolean (473 samples, 0.40%)</title><rect x="162.4" y="467.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (473 samples, 0.40%)</title><rect x="162.4" y="451.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (473 samples, 0.40%)</title><rect x="162.4" y="435.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (473 samples, 0.40%)</title><rect x="162.4" y="419.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$641/645952595.apply (473 samples, 0.40%)</title><rect x="162.4" y="403.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (473 samples, 0.40%)</title><rect x="162.4" y="387.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.4" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (473 samples, 0.40%)</title><rect x="162.4" y="371.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="165.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$693/988629209.apply (1,927 samples, 1.64%)</title><rect x="167.2" y="563.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (1,927 samples, 1.64%)</title><rect x="167.2" y="547.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,927 samples, 1.64%)</title><rect x="167.2" y="531.0" width="19.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.2" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,927 samples, 1.64%)</title><rect x="167.2" y="515.0" width="19.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="170.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (1,018 samples, 0.87%)</title><rect x="186.5" y="579.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,018 samples, 0.87%)</title><rect x="186.5" y="563.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.5" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,018 samples, 0.87%)</title><rect x="186.5" y="547.0" width="10.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="189.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (15,726 samples, 13.40%)</title><rect x="196.8" y="579.0" width="158.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.8" y="590.0">ru/mail/polis/dao/re..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,759 samples, 5.76%)</title><rect x="196.8" y="563.0" width="67.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.8" y="574.0">com/goo..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (319 samples, 0.27%)</title><rect x="196.8" y="547.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="199.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,440 samples, 5.49%)</title><rect x="200.0" y="547.0" width="64.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.0" y="558.0">com/goo..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (515 samples, 0.44%)</title><rect x="200.0" y="531.0" width="5.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="203.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (483 samples, 0.41%)</title><rect x="205.1" y="531.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.1" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (483 samples, 0.41%)</title><rect x="205.1" y="515.0" width="4.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="208.1" y="526.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (690 samples, 0.59%)</title><rect x="210.0" y="531.0" width="6.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="213.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (512 samples, 0.44%)</title><rect x="216.9" y="531.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (512 samples, 0.44%)</title><rect x="216.9" y="515.0" width="5.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="219.9" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4,240 samples, 3.61%)</title><rect x="222.1" y="531.0" width="42.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.1" y="542.0">java..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4,240 samples, 3.61%)</title><rect x="222.1" y="515.0" width="42.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.1" y="526.0">java..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4,240 samples, 3.61%)</title><rect x="222.1" y="499.0" width="42.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.1" y="510.0">java..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (559 samples, 0.48%)</title><rect x="222.1" y="483.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$689/1973218.getAsBoolean (559 samples, 0.48%)</title><rect x="222.1" y="467.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (559 samples, 0.48%)</title><rect x="222.1" y="451.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (559 samples, 0.48%)</title><rect x="222.1" y="435.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (559 samples, 0.48%)</title><rect x="222.1" y="419.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$641/645952595.apply (559 samples, 0.48%)</title><rect x="222.1" y="403.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (559 samples, 0.48%)</title><rect x="222.1" y="387.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.1" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (559 samples, 0.48%)</title><rect x="222.1" y="371.0" width="5.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="225.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3,681 samples, 3.14%)</title><rect x="227.7" y="483.0" width="37.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.7" y="494.0">jav..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (841 samples, 0.72%)</title><rect x="227.7" y="467.0" width="8.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="230.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (680 samples, 0.58%)</title><rect x="236.2" y="467.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (680 samples, 0.58%)</title><rect x="236.2" y="451.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.2" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$671/795899443.get$Lambda (333 samples, 0.28%)</title><rect x="236.2" y="435.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.2" y="446.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$671 (333 samples, 0.28%)</title><rect x="236.2" y="419.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="239.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$689/1973218.get$Lambda (347 samples, 0.30%)</title><rect x="239.5" y="435.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.5" y="446.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$689 (347 samples, 0.30%)</title><rect x="239.5" y="419.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="242.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (483 samples, 0.41%)</title><rect x="243.0" y="467.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (483 samples, 0.41%)</title><rect x="243.0" y="451.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.0" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (483 samples, 0.41%)</title><rect x="243.0" y="435.0" width="4.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="246.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (1,677 samples, 1.43%)</title><rect x="247.8" y="467.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.8" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,621 samples, 1.38%)</title><rect x="247.8" y="451.0" width="16.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="250.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (56 samples, 0.05%)</title><rect x="264.1" y="451.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="267.1" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (487 samples, 0.41%)</title><rect x="264.7" y="563.0" width="4.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="267.7" y="574.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (691 samples, 0.59%)</title><rect x="269.6" y="563.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (691 samples, 0.59%)</title><rect x="269.6" y="547.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (691 samples, 0.59%)</title><rect x="269.6" y="531.0" width="6.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="272.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (501 samples, 0.43%)</title><rect x="276.5" y="563.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (501 samples, 0.43%)</title><rect x="276.5" y="547.0" width="5.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="279.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (78 samples, 0.07%)</title><rect x="281.6" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (78 samples, 0.07%)</title><rect x="281.6" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (78 samples, 0.07%)</title><rect x="281.6" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (63 samples, 0.05%)</title><rect x="281.6" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.6" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (63 samples, 0.05%)</title><rect x="281.6" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.6" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (35 samples, 0.03%)</title><rect x="281.6" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.6" y="494.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (35 samples, 0.03%)</title><rect x="281.6" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="284.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (28 samples, 0.02%)</title><rect x="281.9" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (28 samples, 0.02%)</title><rect x="281.9" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (28 samples, 0.02%)</title><rect x="281.9" y="451.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="284.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (974 samples, 0.83%)</title><rect x="282.4" y="563.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.4" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (487 samples, 0.41%)</title><rect x="282.4" y="547.0" width="4.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="285.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (487 samples, 0.41%)</title><rect x="287.3" y="547.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (487 samples, 0.41%)</title><rect x="287.3" y="531.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (487 samples, 0.41%)</title><rect x="287.3" y="515.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.3" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (487 samples, 0.41%)</title><rect x="287.3" y="499.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (487 samples, 0.41%)</title><rect x="287.3" y="483.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (487 samples, 0.41%)</title><rect x="287.3" y="467.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (487 samples, 0.41%)</title><rect x="287.3" y="451.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$689/1973218.getAsBoolean (487 samples, 0.41%)</title><rect x="287.3" y="435.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (487 samples, 0.41%)</title><rect x="287.3" y="419.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (487 samples, 0.41%)</title><rect x="287.3" y="403.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (487 samples, 0.41%)</title><rect x="287.3" y="387.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$641/645952595.apply (487 samples, 0.41%)</title><rect x="287.3" y="371.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (487 samples, 0.41%)</title><rect x="287.3" y="355.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.3" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (487 samples, 0.41%)</title><rect x="287.3" y="339.0" width="4.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="290.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (6,236 samples, 5.31%)</title><rect x="292.2" y="563.0" width="62.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.2" y="574.0">ru/mai..</text>
</g>
<g>
<title>java/util/Collection.stream (1,849 samples, 1.58%)</title><rect x="292.2" y="547.0" width="18.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (657 samples, 0.56%)</title><rect x="292.2" y="531.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (657 samples, 0.56%)</title><rect x="292.2" y="515.0" width="6.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="295.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,192 samples, 1.02%)</title><rect x="298.8" y="531.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.8" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,188 samples, 1.01%)</title><rect x="298.8" y="515.0" width="11.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="301.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (302 samples, 0.26%)</title><rect x="310.7" y="547.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (302 samples, 0.26%)</title><rect x="310.7" y="531.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="313.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (978 samples, 0.83%)</title><rect x="313.8" y="547.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (978 samples, 0.83%)</title><rect x="313.8" y="531.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (978 samples, 0.83%)</title><rect x="313.8" y="515.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (978 samples, 0.83%)</title><rect x="313.8" y="499.0" width="9.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="316.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (1,796 samples, 1.53%)</title><rect x="323.6" y="547.0" width="18.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.6" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (452 samples, 0.39%)</title><rect x="323.6" y="531.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.6" y="542.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (452 samples, 0.39%)</title><rect x="323.6" y="515.0" width="4.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="326.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (1,344 samples, 1.14%)</title><rect x="328.1" y="531.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (329 samples, 0.28%)</title><rect x="328.1" y="515.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (329 samples, 0.28%)</title><rect x="328.1" y="499.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$650/142146322.get$Lambda (329 samples, 0.28%)</title><rect x="328.1" y="483.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.1" y="494.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$650 (329 samples, 0.28%)</title><rect x="328.1" y="467.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="331.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (1,015 samples, 0.86%)</title><rect x="331.5" y="515.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.5" y="526.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (1,015 samples, 0.86%)</title><rect x="331.5" y="499.0" width="10.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="334.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1,311 samples, 1.12%)</title><rect x="341.7" y="547.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.7" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (1,301 samples, 1.11%)</title><rect x="341.7" y="531.0" width="13.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="344.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (612 samples, 0.52%)</title><rect x="354.8" y="595.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.8" y="606.0"></text>
</g>
<g>
<title>byte[] (612 samples, 0.52%)</title><rect x="354.8" y="579.0" width="6.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="357.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (1,661 samples, 1.41%)</title><rect x="361.0" y="595.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (571 samples, 0.49%)</title><rect x="361.0" y="579.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (571 samples, 0.49%)</title><rect x="361.0" y="563.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (571 samples, 0.49%)</title><rect x="361.0" y="547.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (571 samples, 0.49%)</title><rect x="361.0" y="531.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.0" y="542.0"></text>
</g>
<g>
<title>byte[] (571 samples, 0.49%)</title><rect x="361.0" y="515.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="364.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,090 samples, 0.93%)</title><rect x="366.7" y="579.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,090 samples, 0.93%)</title><rect x="366.7" y="563.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.7" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,090 samples, 0.93%)</title><rect x="366.7" y="547.0" width="11.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="369.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.&lt;init&gt; (625 samples, 0.53%)</title><rect x="377.7" y="595.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.&lt;init&gt; (625 samples, 0.53%)</title><rect x="377.7" y="579.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.7" y="590.0"></text>
</g>
<g>
<title>byte[] (625 samples, 0.53%)</title><rect x="377.7" y="563.0" width="6.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="380.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (961 samples, 0.82%)</title><rect x="384.0" y="643.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (959 samples, 0.82%)</title><rect x="384.0" y="627.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (959 samples, 0.82%)</title><rect x="384.0" y="611.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$235/2044206769.accept (787 samples, 0.67%)</title><rect x="384.0" y="595.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$13 (787 samples, 0.67%)</title><rect x="384.0" y="579.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (217 samples, 0.18%)</title><rect x="384.0" y="563.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (217 samples, 0.18%)</title><rect x="384.0" y="547.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (217 samples, 0.18%)</title><rect x="384.0" y="531.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (147 samples, 0.13%)</title><rect x="384.0" y="515.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.0" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (147 samples, 0.13%)</title><rect x="384.0" y="499.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.0" y="510.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.12%)</title><rect x="384.0" y="483.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="387.0" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 0.06%)</title><rect x="385.5" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.5" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (70 samples, 0.06%)</title><rect x="385.5" y="499.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="388.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$640/980730005.mergeResponse (570 samples, 0.49%)</title><rect x="386.2" y="563.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$3 (570 samples, 0.49%)</title><rect x="386.2" y="547.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergeGetResponseBuilders (570 samples, 0.49%)</title><rect x="386.2" y="531.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.2" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (66 samples, 0.06%)</title><rect x="386.2" y="515.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="389.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.getResponseFromValues (199 samples, 0.17%)</title><rect x="386.8" y="515.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (199 samples, 0.17%)</title><rect x="386.8" y="499.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.8" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Response (46 samples, 0.04%)</title><rect x="386.8" y="483.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="389.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (153 samples, 0.13%)</title><rect x="387.3" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.3" y="494.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.05%)</title><rect x="387.3" y="467.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="390.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (49 samples, 0.04%)</title><rect x="387.9" y="467.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="390.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.04%)</title><rect x="388.4" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="391.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (305 samples, 0.26%)</title><rect x="388.8" y="515.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/857068247.linkToTargetMethod (110 samples, 0.09%)</title><rect x="388.8" y="499.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/720467292.invoke (110 samples, 0.09%)</title><rect x="388.8" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (110 samples, 0.09%)</title><rect x="388.8" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (39 samples, 0.03%)</title><rect x="388.8" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.03%)</title><rect x="388.8" y="435.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="391.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (71 samples, 0.06%)</title><rect x="389.2" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (71 samples, 0.06%)</title><rect x="389.2" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.2" y="446.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.06%)</title><rect x="389.2" y="419.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="392.2" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (42 samples, 0.04%)</title><rect x="389.9" y="499.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="392.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (153 samples, 0.13%)</title><rect x="390.4" y="499.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.4" y="510.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.06%)</title><rect x="390.4" y="483.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="393.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (49 samples, 0.04%)</title><rect x="391.0" y="483.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="394.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.03%)</title><rect x="391.5" y="483.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="394.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$230/1479809634.accept (172 samples, 0.15%)</title><rect x="391.9" y="595.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (172 samples, 0.15%)</title><rect x="391.9" y="579.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (172 samples, 0.15%)</title><rect x="391.9" y="563.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (172 samples, 0.15%)</title><rect x="391.9" y="547.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.9" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (172 samples, 0.15%)</title><rect x="391.9" y="531.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="394.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,070 samples, 1.76%)</title><rect x="393.6" y="643.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,908 samples, 1.63%)</title><rect x="393.6" y="627.0" width="19.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,881 samples, 1.60%)</title><rect x="393.6" y="611.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,881 samples, 1.60%)</title><rect x="393.6" y="595.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,881 samples, 1.60%)</title><rect x="393.6" y="579.0" width="18.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="396.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (27 samples, 0.02%)</title><rect x="412.5" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (27 samples, 0.02%)</title><rect x="412.5" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (27 samples, 0.02%)</title><rect x="412.5" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (27 samples, 0.02%)</title><rect x="412.5" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (27 samples, 0.02%)</title><rect x="412.5" y="547.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="415.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (162 samples, 0.14%)</title><rect x="412.8" y="627.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (151 samples, 0.13%)</title><rect x="412.8" y="611.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (151 samples, 0.13%)</title><rect x="412.8" y="595.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (151 samples, 0.13%)</title><rect x="412.8" y="579.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="415.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$462/1898580517.run (824 samples, 0.70%)</title><rect x="414.4" y="643.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (824 samples, 0.70%)</title><rect x="414.4" y="627.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (824 samples, 0.70%)</title><rect x="414.4" y="611.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (824 samples, 0.70%)</title><rect x="414.4" y="595.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (824 samples, 0.70%)</title><rect x="414.4" y="579.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (824 samples, 0.70%)</title><rect x="414.4" y="563.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (824 samples, 0.70%)</title><rect x="414.4" y="547.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (824 samples, 0.70%)</title><rect x="414.4" y="531.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (824 samples, 0.70%)</title><rect x="414.4" y="515.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (824 samples, 0.70%)</title><rect x="414.4" y="499.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (824 samples, 0.70%)</title><rect x="414.4" y="483.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (746 samples, 0.64%)</title><rect x="414.4" y="467.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (97 samples, 0.08%)</title><rect x="414.4" y="451.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (97 samples, 0.08%)</title><rect x="414.4" y="435.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$468/1654403376.get$Lambda (54 samples, 0.05%)</title><rect x="414.4" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$468 (54 samples, 0.05%)</title><rect x="414.4" y="403.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="417.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$512/1618641874.get$Lambda (43 samples, 0.04%)</title><rect x="415.0" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$512 (43 samples, 0.04%)</title><rect x="415.0" y="403.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="418.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (649 samples, 0.55%)</title><rect x="415.4" y="451.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (73 samples, 0.06%)</title><rect x="415.4" y="435.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="418.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (576 samples, 0.49%)</title><rect x="416.1" y="435.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (576 samples, 0.49%)</title><rect x="416.1" y="419.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (576 samples, 0.49%)</title><rect x="416.1" y="403.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (284 samples, 0.24%)</title><rect x="416.1" y="387.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (98 samples, 0.08%)</title><rect x="416.1" y="371.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="419.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$484/1129193864.apply (175 samples, 0.15%)</title><rect x="417.1" y="371.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (175 samples, 0.15%)</title><rect x="417.1" y="355.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (175 samples, 0.15%)</title><rect x="417.1" y="339.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (34 samples, 0.03%)</title><rect x="417.1" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.1" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (34 samples, 0.03%)</title><rect x="417.1" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.1" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (34 samples, 0.03%)</title><rect x="417.1" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="420.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (141 samples, 0.12%)</title><rect x="417.5" y="323.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (119 samples, 0.10%)</title><rect x="417.7" y="307.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (119 samples, 0.10%)</title><rect x="417.7" y="291.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (67 samples, 0.06%)</title><rect x="417.7" y="275.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="420.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="418.4" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="418.4" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.04%)</title><rect x="418.4" y="243.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="421.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (292 samples, 0.25%)</title><rect x="419.0" y="387.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (292 samples, 0.25%)</title><rect x="419.0" y="371.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$439/1214099568.apply (292 samples, 0.25%)</title><rect x="419.0" y="355.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (292 samples, 0.25%)</title><rect x="419.0" y="339.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (292 samples, 0.25%)</title><rect x="419.0" y="323.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/1245067522.apply (292 samples, 0.25%)</title><rect x="419.0" y="307.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (292 samples, 0.25%)</title><rect x="419.0" y="291.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (110 samples, 0.09%)</title><rect x="419.2" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (110 samples, 0.09%)</title><rect x="419.2" y="259.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (62 samples, 0.05%)</title><rect x="419.2" y="243.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="422.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.04%)</title><rect x="419.8" y="243.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.04%)</title><rect x="419.8" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.04%)</title><rect x="419.8" y="211.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="422.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (164 samples, 0.14%)</title><rect x="420.3" y="275.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (91 samples, 0.08%)</title><rect x="420.3" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (44 samples, 0.04%)</title><rect x="420.3" y="243.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="423.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (47 samples, 0.04%)</title><rect x="420.7" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (47 samples, 0.04%)</title><rect x="420.7" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="423.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.04%)</title><rect x="420.7" y="211.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="423.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (73 samples, 0.06%)</title><rect x="421.2" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (37 samples, 0.03%)</title><rect x="421.2" y="243.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="424.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (36 samples, 0.03%)</title><rect x="421.6" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (36 samples, 0.03%)</title><rect x="421.6" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (36 samples, 0.03%)</title><rect x="421.6" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (36 samples, 0.03%)</title><rect x="421.6" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (36 samples, 0.03%)</title><rect x="421.6" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (36 samples, 0.03%)</title><rect x="421.6" y="163.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="424.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (78 samples, 0.07%)</title><rect x="421.9" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (78 samples, 0.07%)</title><rect x="421.9" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (78 samples, 0.07%)</title><rect x="421.9" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (78 samples, 0.07%)</title><rect x="421.9" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (78 samples, 0.07%)</title><rect x="421.9" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.9" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (78 samples, 0.07%)</title><rect x="421.9" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (37 samples, 0.03%)</title><rect x="421.9" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.9" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (37 samples, 0.03%)</title><rect x="421.9" y="355.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="424.9" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (41 samples, 0.03%)</title><rect x="422.3" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.3" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (41 samples, 0.03%)</title><rect x="422.3" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="425.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8,026 samples, 6.84%)</title><rect x="422.7" y="643.0" width="80.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.7" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8,026 samples, 6.84%)</title><rect x="422.7" y="627.0" width="80.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.7" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6,676 samples, 5.69%)</title><rect x="422.7" y="611.0" width="67.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.7" y="622.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (6,676 samples, 5.69%)</title><rect x="422.7" y="595.0" width="67.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.7" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6,676 samples, 5.69%)</title><rect x="422.7" y="579.0" width="67.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.7" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (141 samples, 0.12%)</title><rect x="422.7" y="563.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (141 samples, 0.12%)</title><rect x="422.7" y="547.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (141 samples, 0.12%)</title><rect x="422.7" y="531.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (141 samples, 0.12%)</title><rect x="422.7" y="515.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/857068247.linkToTargetMethod (65 samples, 0.06%)</title><rect x="422.7" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/895281180.invoke (65 samples, 0.06%)</title><rect x="422.7" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.06%)</title><rect x="422.7" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (65 samples, 0.06%)</title><rect x="422.7" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (65 samples, 0.06%)</title><rect x="422.7" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.7" y="446.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.06%)</title><rect x="422.7" y="419.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="425.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (76 samples, 0.06%)</title><rect x="423.4" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.06%)</title><rect x="423.4" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="426.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.06%)</title><rect x="423.4" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$464/909082479.get$Lambda (76 samples, 0.06%)</title><rect x="423.4" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="426.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$464 (76 samples, 0.06%)</title><rect x="423.4" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="426.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6,535 samples, 5.57%)</title><rect x="424.1" y="563.0" width="65.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.1" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6,535 samples, 5.57%)</title><rect x="424.1" y="547.0" width="65.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.1" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,535 samples, 5.57%)</title><rect x="424.1" y="531.0" width="65.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.1" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,535 samples, 5.57%)</title><rect x="424.1" y="515.0" width="65.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.1" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,958 samples, 2.52%)</title><rect x="424.1" y="499.0" width="29.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.1" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,958 samples, 2.52%)</title><rect x="424.1" y="483.0" width="29.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.1" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,958 samples, 2.52%)</title><rect x="424.1" y="467.0" width="29.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.1" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,958 samples, 2.52%)</title><rect x="424.1" y="451.0" width="29.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.1" y="462.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,958 samples, 2.52%)</title><rect x="424.1" y="435.0" width="29.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.1" y="446.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,958 samples, 2.52%)</title><rect x="424.1" y="419.0" width="29.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.1" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,958 samples, 2.52%)</title><rect x="424.1" y="403.0" width="29.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.1" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,887 samples, 2.46%)</title><rect x="424.1" y="387.0" width="29.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.1" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,887 samples, 2.46%)</title><rect x="424.1" y="371.0" width="29.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.1" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,848 samples, 2.43%)</title><rect x="424.1" y="355.0" width="28.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.1" y="366.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (51 samples, 0.04%)</title><rect x="424.1" y="339.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="427.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1057916871.apply (2,695 samples, 2.30%)</title><rect x="424.6" y="339.0" width="27.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.6" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,695 samples, 2.30%)</title><rect x="424.6" y="323.0" width="27.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.6" y="334.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.02%)</title><rect x="424.6" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.02%)</title><rect x="424.6" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$619/314910917.get$Lambda (29 samples, 0.02%)</title><rect x="424.6" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$619 (29 samples, 0.02%)</title><rect x="424.6" y="259.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="427.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (134 samples, 0.11%)</title><rect x="424.9" y="307.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (134 samples, 0.11%)</title><rect x="424.9" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (71 samples, 0.06%)</title><rect x="424.9" y="275.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="427.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.05%)</title><rect x="425.6" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.05%)</title><rect x="425.6" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.05%)</title><rect x="425.6" y="243.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="428.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,532 samples, 2.16%)</title><rect x="426.3" y="307.0" width="25.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.3" y="318.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.02%)</title><rect x="426.3" y="291.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.02%)</title><rect x="426.3" y="275.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$616/762811245.get$Lambda (25 samples, 0.02%)</title><rect x="426.3" y="259.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$616 (25 samples, 0.02%)</title><rect x="426.3" y="243.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="429.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (124 samples, 0.11%)</title><rect x="426.5" y="291.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (124 samples, 0.11%)</title><rect x="426.5" y="275.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (71 samples, 0.06%)</title><rect x="426.5" y="259.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="429.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.05%)</title><rect x="427.2" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.05%)</title><rect x="427.2" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.05%)</title><rect x="427.2" y="227.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="430.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,383 samples, 2.03%)</title><rect x="427.8" y="291.0" width="23.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.8" y="302.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,820 samples, 1.55%)</title><rect x="427.8" y="275.0" width="18.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.04%)</title><rect x="427.8" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.04%)</title><rect x="427.8" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1127276719.linkToTargetMethod (74 samples, 0.06%)</title><rect x="428.2" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="431.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1528971165.invokeStatic (74 samples, 0.06%)</title><rect x="428.2" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$558/902590235.get$Lambda (74 samples, 0.06%)</title><rect x="428.2" y="227.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$558 (74 samples, 0.06%)</title><rect x="428.2" y="211.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="431.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (326 samples, 0.28%)</title><rect x="428.9" y="259.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (133 samples, 0.11%)</title><rect x="428.9" y="243.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="431.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (47 samples, 0.04%)</title><rect x="428.9" y="227.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.9" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (47 samples, 0.04%)</title><rect x="428.9" y="211.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="431.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (86 samples, 0.07%)</title><rect x="429.4" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (86 samples, 0.07%)</title><rect x="429.4" y="211.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="432.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (115 samples, 0.10%)</title><rect x="430.3" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="433.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (115 samples, 0.10%)</title><rect x="430.3" y="227.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (115 samples, 0.10%)</title><rect x="430.3" y="211.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (44 samples, 0.04%)</title><rect x="430.3" y="195.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (44 samples, 0.04%)</title><rect x="430.3" y="179.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (44 samples, 0.04%)</title><rect x="430.3" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (44 samples, 0.04%)</title><rect x="430.3" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="433.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$549/1675476970.get (34 samples, 0.03%)</title><rect x="430.7" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (34 samples, 0.03%)</title><rect x="430.7" y="179.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="433.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (37 samples, 0.03%)</title><rect x="431.1" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (37 samples, 0.03%)</title><rect x="431.1" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="434.1" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (37 samples, 0.03%)</title><rect x="431.1" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="434.1" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (37 samples, 0.03%)</title><rect x="431.1" y="147.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="434.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (78 samples, 0.07%)</title><rect x="431.4" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (78 samples, 0.07%)</title><rect x="431.4" y="227.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="434.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (210 samples, 0.18%)</title><rect x="432.2" y="259.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (98 samples, 0.08%)</title><rect x="432.2" y="243.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.2" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (46 samples, 0.04%)</title><rect x="432.2" y="227.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="435.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="432.7" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.04%)</title><rect x="432.7" y="211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.04%)</title><rect x="432.7" y="195.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="435.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (112 samples, 0.10%)</title><rect x="433.2" y="243.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (112 samples, 0.10%)</title><rect x="433.2" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (69 samples, 0.06%)</title><rect x="433.2" y="211.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="436.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.04%)</title><rect x="433.9" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.04%)</title><rect x="433.9" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.04%)</title><rect x="433.9" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="436.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (38 samples, 0.03%)</title><rect x="434.3" y="259.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="437.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (41 samples, 0.03%)</title><rect x="434.7" y="259.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="437.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.05%)</title><rect x="435.1" y="259.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="438.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (32 samples, 0.03%)</title><rect x="435.7" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (32 samples, 0.03%)</title><rect x="435.7" y="243.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="438.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (895 samples, 0.76%)</title><rect x="436.0" y="259.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$558/902590235.run (895 samples, 0.76%)</title><rect x="436.0" y="243.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (895 samples, 0.76%)</title><rect x="436.0" y="227.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.08%)</title><rect x="436.0" y="211.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.08%)</title><rect x="436.0" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$573/1624205294.get$Lambda (31 samples, 0.03%)</title><rect x="436.3" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$573 (31 samples, 0.03%)</title><rect x="436.3" y="163.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="439.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/2146705485.get$Lambda (36 samples, 0.03%)</title><rect x="436.6" y="179.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$587 (36 samples, 0.03%)</title><rect x="436.6" y="163.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="439.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (126 samples, 0.11%)</title><rect x="436.9" y="211.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (126 samples, 0.11%)</title><rect x="436.9" y="195.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (59 samples, 0.05%)</title><rect x="436.9" y="179.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="439.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.06%)</title><rect x="437.5" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.06%)</title><rect x="437.5" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.06%)</title><rect x="437.5" y="147.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="440.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (61 samples, 0.05%)</title><rect x="438.2" y="211.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="441.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (54 samples, 0.05%)</title><rect x="438.8" y="211.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="441.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.05%)</title><rect x="438.8" y="195.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="441.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (135 samples, 0.11%)</title><rect x="439.4" y="211.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (135 samples, 0.11%)</title><rect x="439.4" y="195.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.03%)</title><rect x="439.4" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.03%)</title><rect x="439.4" y="163.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$595/1364654810.get$Lambda (37 samples, 0.03%)</title><rect x="439.4" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$595 (37 samples, 0.03%)</title><rect x="439.4" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="442.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (98 samples, 0.08%)</title><rect x="439.7" y="179.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (98 samples, 0.08%)</title><rect x="439.7" y="163.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (98 samples, 0.08%)</title><rect x="439.7" y="147.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.7" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (54 samples, 0.05%)</title><rect x="439.7" y="131.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="442.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.04%)</title><rect x="440.3" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.04%)</title><rect x="440.3" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.3" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.04%)</title><rect x="440.3" y="99.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="443.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (147 samples, 0.13%)</title><rect x="440.7" y="211.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (147 samples, 0.13%)</title><rect x="440.7" y="195.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/404214852.invoke (147 samples, 0.13%)</title><rect x="440.7" y="179.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (147 samples, 0.13%)</title><rect x="440.7" y="163.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (40 samples, 0.03%)</title><rect x="440.7" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.03%)</title><rect x="440.7" y="131.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="443.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (107 samples, 0.09%)</title><rect x="441.1" y="147.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (107 samples, 0.09%)</title><rect x="441.1" y="131.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="444.1" y="142.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.09%)</title><rect x="441.1" y="115.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="444.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (282 samples, 0.24%)</title><rect x="442.2" y="211.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="445.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (99 samples, 0.08%)</title><rect x="442.2" y="195.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="445.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (183 samples, 0.16%)</title><rect x="443.2" y="195.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (183 samples, 0.16%)</title><rect x="443.2" y="179.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/404214852.invoke (183 samples, 0.16%)</title><rect x="443.2" y="163.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (183 samples, 0.16%)</title><rect x="443.2" y="147.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (37 samples, 0.03%)</title><rect x="443.2" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.2" y="142.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.03%)</title><rect x="443.2" y="115.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="446.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (146 samples, 0.12%)</title><rect x="443.6" y="131.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (146 samples, 0.12%)</title><rect x="443.6" y="115.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.6" y="126.0"></text>
</g>
<g>
<title>byte[] (146 samples, 0.12%)</title><rect x="443.6" y="99.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="446.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (104 samples, 0.09%)</title><rect x="445.0" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (104 samples, 0.09%)</title><rect x="445.0" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (104 samples, 0.09%)</title><rect x="445.0" y="227.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (104 samples, 0.09%)</title><rect x="445.0" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.0" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (50 samples, 0.04%)</title><rect x="445.0" y="195.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="448.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.05%)</title><rect x="445.5" y="195.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.05%)</title><rect x="445.5" y="179.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.05%)</title><rect x="445.5" y="163.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="448.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler.apply (563 samples, 0.48%)</title><rect x="446.1" y="275.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (370 samples, 0.32%)</title><rect x="446.3" y="259.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.3" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (257 samples, 0.22%)</title><rect x="446.3" y="243.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.3" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (84 samples, 0.07%)</title><rect x="446.3" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.3" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (84 samples, 0.07%)</title><rect x="446.3" y="211.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="449.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (173 samples, 0.15%)</title><rect x="447.2" y="227.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.2" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (173 samples, 0.15%)</title><rect x="447.2" y="211.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="450.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (113 samples, 0.10%)</title><rect x="448.9" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (113 samples, 0.10%)</title><rect x="448.9" y="227.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (113 samples, 0.10%)</title><rect x="448.9" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (83 samples, 0.07%)</title><rect x="448.9" y="195.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (83 samples, 0.07%)</title><rect x="448.9" y="179.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="451.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (30 samples, 0.03%)</title><rect x="449.7" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (30 samples, 0.03%)</title><rect x="449.7" y="179.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.7" y="190.0"></text>
</g>
<g>
<title>java/util/Optional.of (30 samples, 0.03%)</title><rect x="449.7" y="163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="452.7" y="174.0"></text>
</g>
<g>
<title>java.util.Optional (30 samples, 0.03%)</title><rect x="449.7" y="147.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="452.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.mapping (41 samples, 0.03%)</title><rect x="450.0" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$MappingSubscriber (41 samples, 0.03%)</title><rect x="450.0" y="243.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="453.0" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (128 samples, 0.11%)</title><rect x="450.4" y="259.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (47 samples, 0.04%)</title><rect x="450.4" y="243.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="453.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (81 samples, 0.07%)</title><rect x="450.9" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.9" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (36 samples, 0.03%)</title><rect x="450.9" y="227.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="453.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.04%)</title><rect x="451.3" y="227.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="454.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/2133978669.apply (102 samples, 0.09%)</title><rect x="451.7" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (102 samples, 0.09%)</title><rect x="451.7" y="323.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (56 samples, 0.05%)</title><rect x="451.7" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.7" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (56 samples, 0.05%)</title><rect x="451.7" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.7" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (56 samples, 0.05%)</title><rect x="451.7" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.7" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (56 samples, 0.05%)</title><rect x="451.7" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="454.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (46 samples, 0.04%)</title><rect x="452.3" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.04%)</title><rect x="452.3" y="291.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="455.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (39 samples, 0.03%)</title><rect x="452.8" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (39 samples, 0.03%)</title><rect x="452.8" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1523195787.apply (39 samples, 0.03%)</title><rect x="452.8" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (39 samples, 0.03%)</title><rect x="452.8" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (39 samples, 0.03%)</title><rect x="452.8" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.03%)</title><rect x="452.8" y="275.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="455.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$519/1406514091.apply (71 samples, 0.06%)</title><rect x="453.1" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (71 samples, 0.06%)</title><rect x="453.1" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (71 samples, 0.06%)</title><rect x="453.1" y="355.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="456.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (3,577 samples, 3.05%)</title><rect x="453.9" y="499.0" width="35.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.9" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (245 samples, 0.21%)</title><rect x="453.9" y="483.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (245 samples, 0.21%)</title><rect x="453.9" y="467.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (245 samples, 0.21%)</title><rect x="453.9" y="451.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.9" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (245 samples, 0.21%)</title><rect x="453.9" y="435.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (245 samples, 0.21%)</title><rect x="453.9" y="419.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.9" y="430.0"></text>
</g>
<g>
<title>byte[] (245 samples, 0.21%)</title><rect x="453.9" y="403.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="456.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (275 samples, 0.23%)</title><rect x="456.3" y="483.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (43 samples, 0.04%)</title><rect x="456.3" y="467.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="459.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.04%)</title><rect x="456.8" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.04%)</title><rect x="456.8" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.04%)</title><rect x="456.8" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.8" y="446.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.04%)</title><rect x="456.8" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="459.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (50 samples, 0.04%)</title><rect x="457.2" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (50 samples, 0.04%)</title><rect x="457.2" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.2" y="462.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.04%)</title><rect x="457.2" y="435.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="460.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (140 samples, 0.12%)</title><rect x="457.7" y="467.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (140 samples, 0.12%)</title><rect x="457.7" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (84 samples, 0.07%)</title><rect x="457.7" y="435.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="460.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 0.05%)</title><rect x="458.5" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.5" y="446.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.05%)</title><rect x="458.5" y="419.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="461.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (942 samples, 0.80%)</title><rect x="459.1" y="483.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (942 samples, 0.80%)</title><rect x="459.1" y="467.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (942 samples, 0.80%)</title><rect x="459.1" y="451.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.1" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (27 samples, 0.02%)</title><rect x="459.1" y="435.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="462.1" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (54 samples, 0.05%)</title><rect x="459.4" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="462.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (72 samples, 0.06%)</title><rect x="459.9" y="435.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="462.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.04%)</title><rect x="460.8" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="463.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.04%)</title><rect x="460.8" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="463.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.get$Lambda (52 samples, 0.04%)</title><rect x="460.8" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.8" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (52 samples, 0.04%)</title><rect x="460.8" y="387.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="463.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (35 samples, 0.03%)</title><rect x="461.3" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.3" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (35 samples, 0.03%)</title><rect x="461.3" y="419.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="464.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (603 samples, 0.51%)</title><rect x="461.7" y="435.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (603 samples, 0.51%)</title><rect x="461.7" y="419.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (603 samples, 0.51%)</title><rect x="461.7" y="403.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.08%)</title><rect x="461.7" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.08%)</title><rect x="461.7" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.get$Lambda (92 samples, 0.08%)</title><rect x="461.7" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.7" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$147 (92 samples, 0.08%)</title><rect x="461.7" y="339.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="464.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (84 samples, 0.07%)</title><rect x="462.6" y="387.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (84 samples, 0.07%)</title><rect x="462.6" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (84 samples, 0.07%)</title><rect x="462.6" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (84 samples, 0.07%)</title><rect x="462.6" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (84 samples, 0.07%)</title><rect x="462.6" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (84 samples, 0.07%)</title><rect x="462.6" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (84 samples, 0.07%)</title><rect x="462.6" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.6" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (84 samples, 0.07%)</title><rect x="462.6" y="275.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.07%)</title><rect x="462.6" y="259.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="465.6" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (225 samples, 0.19%)</title><rect x="463.4" y="387.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.4" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (225 samples, 0.19%)</title><rect x="463.4" y="371.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (111 samples, 0.09%)</title><rect x="463.4" y="355.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (111 samples, 0.09%)</title><rect x="463.4" y="339.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (111 samples, 0.09%)</title><rect x="463.4" y="323.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="466.4" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (114 samples, 0.10%)</title><rect x="464.6" y="355.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.6" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (114 samples, 0.10%)</title><rect x="464.6" y="339.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="467.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (202 samples, 0.17%)</title><rect x="465.7" y="387.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (202 samples, 0.17%)</title><rect x="465.7" y="371.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="468.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (82 samples, 0.07%)</title><rect x="467.7" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (82 samples, 0.07%)</title><rect x="467.7" y="419.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="470.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (2,115 samples, 1.80%)</title><rect x="468.6" y="483.0" width="21.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.6" y="494.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (106 samples, 0.09%)</title><rect x="468.6" y="467.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="471.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (153 samples, 0.13%)</title><rect x="469.6" y="467.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (153 samples, 0.13%)</title><rect x="469.6" y="451.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.6" y="462.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.13%)</title><rect x="469.6" y="435.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="472.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (280 samples, 0.24%)</title><rect x="471.2" y="467.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (280 samples, 0.24%)</title><rect x="471.2" y="451.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.09%)</title><rect x="471.2" y="435.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="474.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (179 samples, 0.15%)</title><rect x="472.2" y="435.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.2" y="446.0"></text>
</g>
<g>
<title>byte[] (179 samples, 0.15%)</title><rect x="472.2" y="419.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="475.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,576 samples, 1.34%)</title><rect x="474.0" y="467.0" width="15.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (495 samples, 0.42%)</title><rect x="474.0" y="451.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (495 samples, 0.42%)</title><rect x="474.0" y="435.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (207 samples, 0.18%)</title><rect x="474.0" y="419.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="477.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (288 samples, 0.25%)</title><rect x="476.1" y="419.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.1" y="430.0"></text>
</g>
<g>
<title>byte[] (288 samples, 0.25%)</title><rect x="476.1" y="403.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="479.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (190 samples, 0.16%)</title><rect x="479.0" y="451.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (190 samples, 0.16%)</title><rect x="479.0" y="435.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.0" y="446.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.10%)</title><rect x="479.0" y="419.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="482.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.06%)</title><rect x="480.1" y="419.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="483.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (256 samples, 0.22%)</title><rect x="480.9" y="451.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (256 samples, 0.22%)</title><rect x="480.9" y="435.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (256 samples, 0.22%)</title><rect x="480.9" y="419.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (113 samples, 0.10%)</title><rect x="480.9" y="403.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="483.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (143 samples, 0.12%)</title><rect x="482.0" y="403.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.0" y="414.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.12%)</title><rect x="482.0" y="387.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="485.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (265 samples, 0.23%)</title><rect x="483.4" y="451.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (265 samples, 0.23%)</title><rect x="483.4" y="435.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (265 samples, 0.23%)</title><rect x="483.4" y="419.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (265 samples, 0.23%)</title><rect x="483.4" y="403.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (265 samples, 0.23%)</title><rect x="483.4" y="387.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (265 samples, 0.23%)</title><rect x="483.4" y="371.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="486.4" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (370 samples, 0.32%)</title><rect x="486.1" y="451.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (130 samples, 0.11%)</title><rect x="486.1" y="435.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (130 samples, 0.11%)</title><rect x="486.1" y="419.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="489.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (108 samples, 0.09%)</title><rect x="487.4" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (108 samples, 0.09%)</title><rect x="487.4" y="419.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="490.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$532/205363253.apply (132 samples, 0.11%)</title><rect x="488.5" y="435.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (132 samples, 0.11%)</title><rect x="488.5" y="419.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (132 samples, 0.11%)</title><rect x="488.5" y="403.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="491.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,350 samples, 1.15%)</title><rect x="489.8" y="611.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,350 samples, 1.15%)</title><rect x="489.8" y="595.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,350 samples, 1.15%)</title><rect x="489.8" y="579.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="492.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (1,350 samples, 1.15%)</title><rect x="489.8" y="563.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,350 samples, 1.15%)</title><rect x="489.8" y="547.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (185 samples, 0.16%)</title><rect x="489.8" y="531.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (62 samples, 0.05%)</title><rect x="489.8" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (62 samples, 0.05%)</title><rect x="489.8" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$410/487703675.get$Lambda (39 samples, 0.03%)</title><rect x="490.0" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$410 (39 samples, 0.03%)</title><rect x="490.0" y="467.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="493.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (59 samples, 0.05%)</title><rect x="490.4" y="515.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="493.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (64 samples, 0.05%)</title><rect x="491.0" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (64 samples, 0.05%)</title><rect x="491.0" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (27 samples, 0.02%)</title><rect x="491.0" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="494.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (37 samples, 0.03%)</title><rect x="491.3" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (37 samples, 0.03%)</title><rect x="491.3" y="467.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="494.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1,143 samples, 0.97%)</title><rect x="491.7" y="531.0" width="11.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,143 samples, 0.97%)</title><rect x="491.7" y="515.0" width="11.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,143 samples, 0.97%)</title><rect x="491.7" y="499.0" width="11.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,143 samples, 0.97%)</title><rect x="491.7" y="483.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,143 samples, 0.97%)</title><rect x="491.7" y="467.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,143 samples, 0.97%)</title><rect x="491.7" y="451.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.7" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (91 samples, 0.08%)</title><rect x="491.7" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (91 samples, 0.08%)</title><rect x="491.7" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (91 samples, 0.08%)</title><rect x="491.7" y="403.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="494.7" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (40 samples, 0.03%)</title><rect x="492.6" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.6" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (40 samples, 0.03%)</title><rect x="492.6" y="419.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="495.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/106021012.run (654 samples, 0.56%)</title><rect x="493.0" y="435.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (654 samples, 0.56%)</title><rect x="493.0" y="419.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (654 samples, 0.56%)</title><rect x="493.0" y="403.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (201 samples, 0.17%)</title><rect x="493.0" y="387.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.0" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (140 samples, 0.12%)</title><rect x="493.0" y="371.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.0" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (58 samples, 0.05%)</title><rect x="493.0" y="355.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.0" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (58 samples, 0.05%)</title><rect x="493.0" y="339.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="496.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (82 samples, 0.07%)</title><rect x="493.6" y="355.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.6" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (82 samples, 0.07%)</title><rect x="493.6" y="339.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="496.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (61 samples, 0.05%)</title><rect x="494.4" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (61 samples, 0.05%)</title><rect x="494.4" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (61 samples, 0.05%)</title><rect x="494.4" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (34 samples, 0.03%)</title><rect x="494.4" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (34 samples, 0.03%)</title><rect x="494.4" y="307.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="497.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (27 samples, 0.02%)</title><rect x="494.7" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (27 samples, 0.02%)</title><rect x="494.7" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.7" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (27 samples, 0.02%)</title><rect x="494.7" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.7" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (27 samples, 0.02%)</title><rect x="494.7" y="275.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="497.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (453 samples, 0.39%)</title><rect x="495.0" y="387.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.0" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (38 samples, 0.03%)</title><rect x="495.0" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="498.0" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (38 samples, 0.03%)</title><rect x="495.0" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.0" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (38 samples, 0.03%)</title><rect x="495.0" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.0" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (38 samples, 0.03%)</title><rect x="495.0" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.0" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (38 samples, 0.03%)</title><rect x="495.0" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="498.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (415 samples, 0.35%)</title><rect x="495.4" y="371.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (172 samples, 0.15%)</title><rect x="495.4" y="355.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.4" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (42 samples, 0.04%)</title><rect x="495.4" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.4" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (42 samples, 0.04%)</title><rect x="495.4" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.4" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (42 samples, 0.04%)</title><rect x="495.4" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.4" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (42 samples, 0.04%)</title><rect x="495.4" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.4" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (42 samples, 0.04%)</title><rect x="495.4" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.4" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (42 samples, 0.04%)</title><rect x="495.4" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="498.4" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (46 samples, 0.04%)</title><rect x="495.8" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.8" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (46 samples, 0.04%)</title><rect x="495.8" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.8" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.04%)</title><rect x="495.8" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="498.8" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (46 samples, 0.04%)</title><rect x="495.8" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.8" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (46 samples, 0.04%)</title><rect x="495.8" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.8" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (46 samples, 0.04%)</title><rect x="495.8" y="259.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="498.8" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (49 samples, 0.04%)</title><rect x="496.3" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (49 samples, 0.04%)</title><rect x="496.3" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.3" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (49 samples, 0.04%)</title><rect x="496.3" y="307.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="499.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (34 samples, 0.03%)</title><rect x="496.8" y="339.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="499.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (89 samples, 0.08%)</title><rect x="497.1" y="355.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="500.1" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (44 samples, 0.04%)</title><rect x="497.1" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="500.1" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (44 samples, 0.04%)</title><rect x="497.1" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (44 samples, 0.04%)</title><rect x="497.1" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.04%)</title><rect x="497.1" y="291.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="500.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (45 samples, 0.04%)</title><rect x="497.6" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (45 samples, 0.04%)</title><rect x="497.6" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.6" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (45 samples, 0.04%)</title><rect x="497.6" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="500.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (154 samples, 0.13%)</title><rect x="498.0" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (38 samples, 0.03%)</title><rect x="498.0" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="501.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (116 samples, 0.10%)</title><rect x="498.4" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (41 samples, 0.03%)</title><rect x="498.4" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (41 samples, 0.03%)</title><rect x="498.4" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (41 samples, 0.03%)</title><rect x="498.4" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (41 samples, 0.03%)</title><rect x="498.4" y="275.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="501.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (75 samples, 0.06%)</title><rect x="498.8" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (75 samples, 0.06%)</title><rect x="498.8" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (54 samples, 0.05%)</title><rect x="498.8" y="291.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="501.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (242 samples, 0.21%)</title><rect x="499.6" y="435.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (242 samples, 0.21%)</title><rect x="499.6" y="419.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (242 samples, 0.21%)</title><rect x="499.6" y="403.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (242 samples, 0.21%)</title><rect x="499.6" y="387.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (200 samples, 0.17%)</title><rect x="499.6" y="371.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="502.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (200 samples, 0.17%)</title><rect x="499.6" y="355.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (92 samples, 0.08%)</title><rect x="499.6" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler$$Lambda$706/845313759.apply (92 samples, 0.08%)</title><rect x="499.6" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/GetBodyHandler.lambda$apply$0 (92 samples, 0.08%)</title><rect x="499.6" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="502.6" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (50 samples, 0.04%)</title><rect x="499.6" y="291.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="502.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.&lt;init&gt; (42 samples, 0.04%)</title><rect x="500.1" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.1" y="302.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.04%)</title><rect x="500.1" y="275.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="503.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (108 samples, 0.09%)</title><rect x="500.5" y="339.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="503.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (108 samples, 0.09%)</title><rect x="500.5" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$608/356097117.accept (108 samples, 0.09%)</title><rect x="500.5" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (108 samples, 0.09%)</title><rect x="500.5" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (108 samples, 0.09%)</title><rect x="500.5" y="275.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="503.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (108 samples, 0.09%)</title><rect x="500.5" y="259.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (108 samples, 0.09%)</title><rect x="500.5" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$619/314910917.apply (108 samples, 0.09%)</title><rect x="500.5" y="227.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (108 samples, 0.09%)</title><rect x="500.5" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="503.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (108 samples, 0.09%)</title><rect x="500.5" y="195.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="503.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (42 samples, 0.04%)</title><rect x="501.6" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.6" y="382.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.04%)</title><rect x="501.6" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="504.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (116 samples, 0.10%)</title><rect x="502.0" y="435.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (116 samples, 0.10%)</title><rect x="502.0" y="419.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (116 samples, 0.10%)</title><rect x="502.0" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (116 samples, 0.10%)</title><rect x="502.0" y="387.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (116 samples, 0.10%)</title><rect x="502.0" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (116 samples, 0.10%)</title><rect x="502.0" y="355.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (116 samples, 0.10%)</title><rect x="502.0" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.0" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (27 samples, 0.02%)</title><rect x="502.0" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.0" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.02%)</title><rect x="502.0" y="307.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="505.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (89 samples, 0.08%)</title><rect x="502.3" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (89 samples, 0.08%)</title><rect x="502.3" y="307.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (89 samples, 0.08%)</title><rect x="502.3" y="291.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="505.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/637964804.run (18,317 samples, 15.60%)</title><rect x="503.4" y="643.0" width="184.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.4" y="654.0">ru/mail/polis/service/re..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (18,317 samples, 15.60%)</title><rect x="503.4" y="627.0" width="184.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.4" y="638.0">ru/mail/polis/service/re..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,216 samples, 1.04%)</title><rect x="503.4" y="611.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,216 samples, 1.04%)</title><rect x="503.4" y="595.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,216 samples, 1.04%)</title><rect x="503.4" y="579.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (730 samples, 0.62%)</title><rect x="503.4" y="563.0" width="7.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="506.4" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (486 samples, 0.41%)</title><rect x="510.7" y="563.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.7" y="574.0"></text>
</g>
<g>
<title>byte[] (486 samples, 0.41%)</title><rect x="510.7" y="547.0" width="4.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="513.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (2,947 samples, 2.51%)</title><rect x="515.6" y="611.0" width="29.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.6" y="622.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (2,947 samples, 2.51%)</title><rect x="515.6" y="595.0" width="29.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.6" y="606.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (1,576 samples, 1.34%)</title><rect x="515.6" y="579.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (415 samples, 0.35%)</title><rect x="515.6" y="563.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (415 samples, 0.35%)</title><rect x="515.6" y="547.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$528/67792651.get$Lambda (415 samples, 0.35%)</title><rect x="515.6" y="531.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ApiUtils$$Lambda$528 (415 samples, 0.35%)</title><rect x="515.6" y="515.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="518.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,161 samples, 0.99%)</title><rect x="519.8" y="563.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,161 samples, 0.99%)</title><rect x="519.8" y="547.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (725 samples, 0.62%)</title><rect x="519.8" y="531.0" width="7.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="522.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (430 samples, 0.37%)</title><rect x="527.1" y="531.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (430 samples, 0.37%)</title><rect x="527.1" y="515.0" width="4.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="530.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (1,371 samples, 1.17%)</title><rect x="531.4" y="579.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (508 samples, 0.43%)</title><rect x="531.4" y="563.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (508 samples, 0.43%)</title><rect x="531.4" y="547.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$639/310460158.get$Lambda (508 samples, 0.43%)</title><rect x="531.4" y="531.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="534.4" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$639 (508 samples, 0.43%)</title><rect x="531.4" y="515.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="534.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (863 samples, 0.74%)</title><rect x="536.6" y="563.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (863 samples, 0.74%)</title><rect x="536.6" y="547.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (385 samples, 0.33%)</title><rect x="536.6" y="531.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="539.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (472 samples, 0.40%)</title><rect x="540.4" y="531.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="543.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (14,154 samples, 12.06%)</title><rect x="545.2" y="611.0" width="142.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.2" y="622.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (1,869 samples, 1.59%)</title><rect x="545.2" y="595.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.2" y="606.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.04%)</title><rect x="545.2" y="579.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="548.2" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (33 samples, 0.03%)</title><rect x="545.7" y="579.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="548.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (51 samples, 0.04%)</title><rect x="546.0" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.0" y="590.0"></text>
</g>
<g>
<title>java.lang.Long (51 samples, 0.04%)</title><rect x="546.0" y="563.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="549.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (92 samples, 0.08%)</title><rect x="546.5" y="579.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (92 samples, 0.08%)</title><rect x="546.5" y="563.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (92 samples, 0.08%)</title><rect x="546.5" y="547.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="549.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (100 samples, 0.09%)</title><rect x="547.5" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (100 samples, 0.09%)</title><rect x="547.5" y="563.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="550.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (1,104 samples, 0.94%)</title><rect x="548.5" y="579.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.5" y="590.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (75 samples, 0.06%)</title><rect x="548.5" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.5" y="574.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (75 samples, 0.06%)</title><rect x="548.5" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.5" y="558.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (75 samples, 0.06%)</title><rect x="548.5" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.5" y="542.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.06%)</title><rect x="548.5" y="515.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="551.5" y="526.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (1,029 samples, 0.88%)</title><rect x="549.2" y="563.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.2" y="574.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (1,029 samples, 0.88%)</title><rect x="549.2" y="547.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.2" y="558.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (1,029 samples, 0.88%)</title><rect x="549.2" y="531.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.2" y="542.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (988 samples, 0.84%)</title><rect x="549.2" y="515.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.2" y="526.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (952 samples, 0.81%)</title><rect x="549.2" y="499.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.2" y="510.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (952 samples, 0.81%)</title><rect x="549.2" y="483.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.2" y="494.0"></text>
</g>
<g>
<title>java.lang.Class[] (31 samples, 0.03%)</title><rect x="549.2" y="467.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="552.2" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.02%)</title><rect x="549.5" y="467.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="552.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (126 samples, 0.11%)</title><rect x="549.8" y="467.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (126 samples, 0.11%)</title><rect x="549.8" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.8" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (126 samples, 0.11%)</title><rect x="549.8" y="435.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.8" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (126 samples, 0.11%)</title><rect x="549.8" y="419.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.8" y="430.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (122 samples, 0.10%)</title><rect x="549.8" y="403.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="552.8" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (769 samples, 0.66%)</title><rect x="551.0" y="467.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (769 samples, 0.66%)</title><rect x="551.0" y="451.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (769 samples, 0.66%)</title><rect x="551.0" y="435.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.0" y="446.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (96 samples, 0.08%)</title><rect x="551.0" y="419.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="554.0" y="430.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (673 samples, 0.57%)</title><rect x="552.0" y="419.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.0" y="430.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (673 samples, 0.57%)</title><rect x="552.0" y="403.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.0" y="414.0"></text>
</g>
<g>
<title>int[] (474 samples, 0.40%)</title><rect x="552.0" y="387.0" width="4.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="555.0" y="398.0"></text>
</g>
<g>
<title>int[] (70 samples, 0.06%)</title><rect x="556.8" y="387.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="559.8" y="398.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (129 samples, 0.11%)</title><rect x="557.5" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.5" y="398.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.11%)</title><rect x="557.5" y="371.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="560.5" y="382.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (36 samples, 0.03%)</title><rect x="558.8" y="499.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="561.8" y="510.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (41 samples, 0.03%)</title><rect x="559.1" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.1" y="526.0"></text>
</g>
<g>
<title>java/security/Provider.getService (41 samples, 0.03%)</title><rect x="559.1" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (41 samples, 0.03%)</title><rect x="559.1" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.1" y="494.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (41 samples, 0.03%)</title><rect x="559.1" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.03%)</title><rect x="559.1" y="451.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="562.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (444 samples, 0.38%)</title><rect x="559.6" y="579.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.6" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (175 samples, 0.15%)</title><rect x="559.6" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.6" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (54 samples, 0.05%)</title><rect x="559.6" y="547.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="562.6" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (121 samples, 0.10%)</title><rect x="560.1" y="547.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (66 samples, 0.06%)</title><rect x="560.1" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (66 samples, 0.06%)</title><rect x="560.1" y="515.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="563.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (55 samples, 0.05%)</title><rect x="560.8" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (55 samples, 0.05%)</title><rect x="560.8" y="515.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="563.8" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (28 samples, 0.02%)</title><rect x="561.3" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.3" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (28 samples, 0.02%)</title><rect x="561.3" y="547.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="564.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (52 samples, 0.04%)</title><rect x="561.6" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.6" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (52 samples, 0.04%)</title><rect x="561.6" y="547.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="564.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (189 samples, 0.16%)</title><rect x="562.1" y="563.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (189 samples, 0.16%)</title><rect x="562.1" y="547.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (189 samples, 0.16%)</title><rect x="562.1" y="531.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="565.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (12,146 samples, 10.35%)</title><rect x="564.0" y="595.0" width="122.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.0" y="606.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.02%)</title><rect x="564.0" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.02%)</title><rect x="564.0" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$640/980730005.get$Lambda (25 samples, 0.02%)</title><rect x="564.0" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.0" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$640 (25 samples, 0.02%)</title><rect x="564.0" y="531.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="567.0" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.GetBodyHandler (25 samples, 0.02%)</title><rect x="564.3" y="579.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="567.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (11,229 samples, 9.57%)</title><rect x="564.5" y="579.0" width="112.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.5" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.03%)</title><rect x="564.5" y="563.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="567.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (89 samples, 0.08%)</title><rect x="564.8" y="563.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (89 samples, 0.08%)</title><rect x="564.8" y="547.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (89 samples, 0.08%)</title><rect x="564.8" y="531.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (89 samples, 0.08%)</title><rect x="564.8" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (89 samples, 0.08%)</title><rect x="564.8" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (89 samples, 0.08%)</title><rect x="564.8" y="483.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="567.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (80 samples, 0.07%)</title><rect x="565.7" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (49 samples, 0.04%)</title><rect x="565.7" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (49 samples, 0.04%)</title><rect x="565.7" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (49 samples, 0.04%)</title><rect x="565.7" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="568.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (31 samples, 0.03%)</title><rect x="566.2" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (31 samples, 0.03%)</title><rect x="566.2" y="531.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="569.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (245 samples, 0.21%)</title><rect x="566.5" y="563.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (245 samples, 0.21%)</title><rect x="566.5" y="547.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (151 samples, 0.13%)</title><rect x="566.5" y="531.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="569.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (94 samples, 0.08%)</title><rect x="568.1" y="531.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (94 samples, 0.08%)</title><rect x="568.1" y="515.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (94 samples, 0.08%)</title><rect x="568.1" y="499.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="571.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (7,153 samples, 6.09%)</title><rect x="569.0" y="563.0" width="71.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.0" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (7,153 samples, 6.09%)</title><rect x="569.0" y="547.0" width="71.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.0" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (7,153 samples, 6.09%)</title><rect x="569.0" y="531.0" width="71.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.0" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (7,153 samples, 6.09%)</title><rect x="569.0" y="515.0" width="71.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.0" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.04%)</title><rect x="569.0" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.04%)</title><rect x="569.0" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$196/1405076149.get$Lambda (44 samples, 0.04%)</title><rect x="569.0" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$196 (44 samples, 0.04%)</title><rect x="569.0" y="451.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="572.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (247 samples, 0.21%)</title><rect x="569.4" y="499.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (247 samples, 0.21%)</title><rect x="569.4" y="483.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (137 samples, 0.12%)</title><rect x="569.4" y="467.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="572.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (110 samples, 0.09%)</title><rect x="570.8" y="467.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (110 samples, 0.09%)</title><rect x="570.8" y="451.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="573.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (110 samples, 0.09%)</title><rect x="570.8" y="435.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="573.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (259 samples, 0.22%)</title><rect x="571.9" y="499.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (259 samples, 0.22%)</title><rect x="571.9" y="483.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (146 samples, 0.12%)</title><rect x="571.9" y="467.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="574.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (113 samples, 0.10%)</title><rect x="573.4" y="467.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (113 samples, 0.10%)</title><rect x="573.4" y="451.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.10%)</title><rect x="573.4" y="435.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="576.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (192 samples, 0.16%)</title><rect x="574.5" y="499.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="577.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (271 samples, 0.23%)</title><rect x="576.5" y="499.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="579.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (3,531 samples, 3.01%)</title><rect x="579.3" y="499.0" width="35.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.3" y="510.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (384 samples, 0.33%)</title><rect x="579.3" y="483.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.3" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (295 samples, 0.25%)</title><rect x="579.3" y="467.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.3" y="478.0"></text>
</g>
<g>
<title>java/util/List.spliterator (112 samples, 0.10%)</title><rect x="579.3" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.3" y="462.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (112 samples, 0.10%)</title><rect x="579.3" y="435.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="582.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (183 samples, 0.16%)</title><rect x="580.5" y="451.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.5" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (183 samples, 0.16%)</title><rect x="580.5" y="435.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="583.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (89 samples, 0.08%)</title><rect x="582.3" y="467.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (89 samples, 0.08%)</title><rect x="582.3" y="451.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (89 samples, 0.08%)</title><rect x="582.3" y="435.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (89 samples, 0.08%)</title><rect x="582.3" y="419.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.3" y="430.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (89 samples, 0.08%)</title><rect x="582.3" y="403.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="585.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,447 samples, 1.23%)</title><rect x="583.2" y="483.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,447 samples, 1.23%)</title><rect x="583.2" y="467.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.2" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (50 samples, 0.04%)</title><rect x="583.2" y="451.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="586.2" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (87 samples, 0.07%)</title><rect x="583.7" y="451.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="586.7" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (170 samples, 0.14%)</title><rect x="584.6" y="451.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="587.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (52 samples, 0.04%)</title><rect x="586.3" y="451.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="589.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (139 samples, 0.12%)</title><rect x="586.8" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (139 samples, 0.12%)</title><rect x="586.8" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.get$Lambda (139 samples, 0.12%)</title><rect x="586.8" y="419.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.8" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (139 samples, 0.12%)</title><rect x="586.8" y="403.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="589.8" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (681 samples, 0.58%)</title><rect x="588.2" y="451.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (681 samples, 0.58%)</title><rect x="588.2" y="435.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (681 samples, 0.58%)</title><rect x="588.2" y="419.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (681 samples, 0.58%)</title><rect x="588.2" y="403.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (280 samples, 0.24%)</title><rect x="588.2" y="387.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (181 samples, 0.15%)</title><rect x="588.2" y="371.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (181 samples, 0.15%)</title><rect x="588.2" y="355.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (181 samples, 0.15%)</title><rect x="588.2" y="339.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (181 samples, 0.15%)</title><rect x="588.2" y="323.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (181 samples, 0.15%)</title><rect x="588.2" y="307.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (181 samples, 0.15%)</title><rect x="588.2" y="291.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (181 samples, 0.15%)</title><rect x="588.2" y="275.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (181 samples, 0.15%)</title><rect x="588.2" y="259.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="591.2" y="270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (99 samples, 0.08%)</title><rect x="590.0" y="371.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.0" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (99 samples, 0.08%)</title><rect x="590.0" y="355.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="593.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (94 samples, 0.08%)</title><rect x="591.0" y="387.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (94 samples, 0.08%)</title><rect x="591.0" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.get$Lambda (94 samples, 0.08%)</title><rect x="591.0" y="355.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.0" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$147 (94 samples, 0.08%)</title><rect x="591.0" y="339.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="594.0" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (159 samples, 0.14%)</title><rect x="592.0" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.0" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (159 samples, 0.14%)</title><rect x="592.0" y="371.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (85 samples, 0.07%)</title><rect x="592.0" y="355.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (85 samples, 0.07%)</title><rect x="592.0" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (85 samples, 0.07%)</title><rect x="592.0" y="323.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="595.0" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (74 samples, 0.06%)</title><rect x="592.8" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.8" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (74 samples, 0.06%)</title><rect x="592.8" y="339.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="595.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (148 samples, 0.13%)</title><rect x="593.6" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.6" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (148 samples, 0.13%)</title><rect x="593.6" y="371.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="596.6" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (110 samples, 0.09%)</title><rect x="595.0" y="451.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.0" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (110 samples, 0.09%)</title><rect x="595.0" y="435.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="598.0" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (158 samples, 0.13%)</title><rect x="596.2" y="451.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (158 samples, 0.13%)</title><rect x="596.2" y="435.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="599.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (58 samples, 0.05%)</title><rect x="597.7" y="483.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="600.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,174 samples, 1.00%)</title><rect x="598.3" y="483.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.3" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,174 samples, 1.00%)</title><rect x="598.3" y="467.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.3" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,075 samples, 0.92%)</title><rect x="598.3" y="451.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.3" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,075 samples, 0.92%)</title><rect x="598.3" y="435.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.3" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,075 samples, 0.92%)</title><rect x="598.3" y="419.0" width="10.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.3" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (234 samples, 0.20%)</title><rect x="598.3" y="403.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="601.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (298 samples, 0.25%)</title><rect x="600.7" y="403.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.7" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (298 samples, 0.25%)</title><rect x="600.7" y="387.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.7" y="398.0"></text>
</g>
<g>
<title>byte[] (298 samples, 0.25%)</title><rect x="600.7" y="371.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="603.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (543 samples, 0.46%)</title><rect x="603.7" y="403.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (543 samples, 0.46%)</title><rect x="603.7" y="387.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (234 samples, 0.20%)</title><rect x="603.7" y="371.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="606.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (309 samples, 0.26%)</title><rect x="606.0" y="371.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.0" y="382.0"></text>
</g>
<g>
<title>byte[] (309 samples, 0.26%)</title><rect x="606.0" y="355.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="609.0" y="366.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (99 samples, 0.08%)</title><rect x="609.1" y="451.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="612.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (164 samples, 0.14%)</title><rect x="610.1" y="483.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.1" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (164 samples, 0.14%)</title><rect x="610.1" y="467.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="613.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (304 samples, 0.26%)</title><rect x="611.8" y="483.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.8" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (81 samples, 0.07%)</title><rect x="611.8" y="467.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="614.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (98 samples, 0.08%)</title><rect x="612.6" y="467.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (98 samples, 0.08%)</title><rect x="612.6" y="451.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="615.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (125 samples, 0.11%)</title><rect x="613.6" y="467.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (125 samples, 0.11%)</title><rect x="613.6" y="451.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="616.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,783 samples, 1.52%)</title><rect x="614.8" y="499.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (59 samples, 0.05%)</title><rect x="614.8" y="483.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="617.8" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.map (148 samples, 0.13%)</title><rect x="615.4" y="483.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$164/1116232512.apply (148 samples, 0.13%)</title><rect x="615.4" y="467.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (70 samples, 0.06%)</title><rect x="615.4" y="451.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="618.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (78 samples, 0.07%)</title><rect x="616.1" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (78 samples, 0.07%)</title><rect x="616.1" y="435.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="619.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (254 samples, 0.22%)</title><rect x="616.9" y="483.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="619.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (44 samples, 0.04%)</title><rect x="619.5" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (44 samples, 0.04%)</title><rect x="619.5" y="467.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="622.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (67 samples, 0.06%)</title><rect x="620.0" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.0" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (67 samples, 0.06%)</title><rect x="620.0" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.0" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (67 samples, 0.06%)</title><rect x="620.0" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.0" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (67 samples, 0.06%)</title><rect x="620.0" y="435.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="623.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,205 samples, 1.03%)</title><rect x="620.6" y="483.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,205 samples, 1.03%)</title><rect x="620.6" y="467.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Class[] (97 samples, 0.08%)</title><rect x="620.6" y="451.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="623.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (90 samples, 0.08%)</title><rect x="621.6" y="451.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="624.6" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (98 samples, 0.08%)</title><rect x="622.5" y="451.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="625.5" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (545 samples, 0.46%)</title><rect x="623.5" y="451.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (545 samples, 0.46%)</title><rect x="623.5" y="435.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.5" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (545 samples, 0.46%)</title><rect x="623.5" y="419.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.5" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (545 samples, 0.46%)</title><rect x="623.5" y="403.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.5" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (530 samples, 0.45%)</title><rect x="623.5" y="387.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="626.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (198 samples, 0.17%)</title><rect x="629.0" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (198 samples, 0.17%)</title><rect x="629.0" y="435.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (47 samples, 0.04%)</title><rect x="629.0" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (47 samples, 0.04%)</title><rect x="629.0" y="403.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="632.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (151 samples, 0.13%)</title><rect x="629.5" y="419.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (151 samples, 0.13%)</title><rect x="629.5" y="403.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="632.5" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (177 samples, 0.15%)</title><rect x="631.0" y="451.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (177 samples, 0.15%)</title><rect x="631.0" y="435.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.0" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (177 samples, 0.15%)</title><rect x="631.0" y="419.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="634.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (811 samples, 0.69%)</title><rect x="632.7" y="499.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (142 samples, 0.12%)</title><rect x="632.7" y="483.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (75 samples, 0.06%)</title><rect x="632.7" y="467.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="635.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (67 samples, 0.06%)</title><rect x="633.5" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (67 samples, 0.06%)</title><rect x="633.5" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (67 samples, 0.06%)</title><rect x="633.5" y="435.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="636.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (107 samples, 0.09%)</title><rect x="634.2" y="483.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="637.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (562 samples, 0.48%)</title><rect x="635.3" y="483.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.08%)</title><rect x="635.3" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.08%)</title><rect x="635.3" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/741792946.get$Lambda (46 samples, 0.04%)</title><rect x="635.3" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$181 (46 samples, 0.04%)</title><rect x="635.3" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="638.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1057916871.get$Lambda (46 samples, 0.04%)</title><rect x="635.7" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$191 (46 samples, 0.04%)</title><rect x="635.7" y="419.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="638.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (470 samples, 0.40%)</title><rect x="636.2" y="467.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (470 samples, 0.40%)</title><rect x="636.2" y="451.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (258 samples, 0.22%)</title><rect x="636.2" y="435.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="639.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (212 samples, 0.18%)</title><rect x="638.8" y="435.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="641.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (212 samples, 0.18%)</title><rect x="638.8" y="419.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (212 samples, 0.18%)</title><rect x="638.8" y="403.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="641.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$637/600928666.handleLocalResponse (125 samples, 0.11%)</title><rect x="640.9" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$1 (125 samples, 0.11%)</title><rect x="640.9" y="547.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (125 samples, 0.11%)</title><rect x="640.9" y="531.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.04%)</title><rect x="640.9" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.04%)</title><rect x="640.9" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$639/310460158.get$Lambda (44 samples, 0.04%)</title><rect x="640.9" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.9" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$639 (44 samples, 0.04%)</title><rect x="640.9" y="467.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="643.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (81 samples, 0.07%)</title><rect x="641.3" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (81 samples, 0.07%)</title><rect x="641.3" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (35 samples, 0.03%)</title><rect x="641.3" y="483.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="644.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (44 samples, 0.04%)</title><rect x="641.7" y="483.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="644.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$638/616184970.requestBuild (3,505 samples, 2.99%)</title><rect x="642.2" y="563.0" width="35.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.2" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$2 (3,505 samples, 2.99%)</title><rect x="642.2" y="547.0" width="35.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.2" y="558.0">ru/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,360 samples, 1.16%)</title><rect x="642.2" y="531.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (116 samples, 0.10%)</title><rect x="642.2" y="515.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="645.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,244 samples, 1.06%)</title><rect x="643.3" y="515.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,202 samples, 1.02%)</title><rect x="643.3" y="499.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,202 samples, 1.02%)</title><rect x="643.3" y="483.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.3" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (47 samples, 0.04%)</title><rect x="643.3" y="467.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="646.3" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (71 samples, 0.06%)</title><rect x="643.8" y="467.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="646.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (141 samples, 0.12%)</title><rect x="644.5" y="467.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="647.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (56 samples, 0.05%)</title><rect x="645.9" y="467.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="648.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (95 samples, 0.08%)</title><rect x="646.5" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (95 samples, 0.08%)</title><rect x="646.5" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.get$Lambda (95 samples, 0.08%)</title><rect x="646.5" y="435.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.5" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (95 samples, 0.08%)</title><rect x="646.5" y="419.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="649.5" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (109 samples, 0.09%)</title><rect x="647.4" y="467.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.4" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (109 samples, 0.09%)</title><rect x="647.4" y="451.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="650.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (541 samples, 0.46%)</title><rect x="648.5" y="467.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (541 samples, 0.46%)</title><rect x="648.5" y="451.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (541 samples, 0.46%)</title><rect x="648.5" y="435.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.06%)</title><rect x="648.5" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="651.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.06%)</title><rect x="648.5" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.5" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.get$Lambda (73 samples, 0.06%)</title><rect x="648.5" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.5" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$147 (73 samples, 0.06%)</title><rect x="648.5" y="371.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="651.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (184 samples, 0.16%)</title><rect x="649.3" y="419.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (184 samples, 0.16%)</title><rect x="649.3" y="403.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (184 samples, 0.16%)</title><rect x="649.3" y="387.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (184 samples, 0.16%)</title><rect x="649.3" y="371.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (184 samples, 0.16%)</title><rect x="649.3" y="355.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (184 samples, 0.16%)</title><rect x="649.3" y="339.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (184 samples, 0.16%)</title><rect x="649.3" y="323.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (184 samples, 0.16%)</title><rect x="649.3" y="307.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (184 samples, 0.16%)</title><rect x="649.3" y="291.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="652.3" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (157 samples, 0.13%)</title><rect x="651.1" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.1" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (157 samples, 0.13%)</title><rect x="651.1" y="403.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (81 samples, 0.07%)</title><rect x="651.1" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.07%)</title><rect x="651.1" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (81 samples, 0.07%)</title><rect x="651.1" y="355.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="654.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (76 samples, 0.06%)</title><rect x="651.9" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.9" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (76 samples, 0.06%)</title><rect x="651.9" y="371.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="654.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (127 samples, 0.11%)</title><rect x="652.7" y="419.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (127 samples, 0.11%)</title><rect x="652.7" y="403.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="655.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (142 samples, 0.12%)</title><rect x="654.0" y="467.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.0" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (142 samples, 0.12%)</title><rect x="654.0" y="451.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="657.0" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (42 samples, 0.04%)</title><rect x="655.4" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.4" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.of (42 samples, 0.04%)</title><rect x="655.4" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.4" y="494.0"></text>
</g>
<g>
<title>java.util.Optional (42 samples, 0.04%)</title><rect x="655.4" y="467.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="658.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (2,145 samples, 1.83%)</title><rect x="655.8" y="531.0" width="21.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.8" y="542.0">r..</text>
</g>
<g>
<title>java.net.URI (266 samples, 0.23%)</title><rect x="655.8" y="515.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="658.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (283 samples, 0.24%)</title><rect x="658.7" y="515.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (283 samples, 0.24%)</title><rect x="658.7" y="499.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (283 samples, 0.24%)</title><rect x="658.7" y="483.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (283 samples, 0.24%)</title><rect x="658.7" y="467.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (91 samples, 0.08%)</title><rect x="658.7" y="451.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.08%)</title><rect x="658.7" y="435.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="661.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (192 samples, 0.16%)</title><rect x="659.6" y="451.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (192 samples, 0.16%)</title><rect x="659.6" y="435.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.6" y="446.0"></text>
</g>
<g>
<title>byte[] (192 samples, 0.16%)</title><rect x="659.6" y="419.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="662.6" y="430.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (963 samples, 0.82%)</title><rect x="661.5" y="515.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.5" y="526.0"></text>
</g>
<g>
<title>java.net.URI$Parser (104 samples, 0.09%)</title><rect x="661.5" y="499.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="664.5" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (859 samples, 0.73%)</title><rect x="662.5" y="499.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (147 samples, 0.13%)</title><rect x="662.5" y="483.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (147 samples, 0.13%)</title><rect x="662.5" y="467.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.07%)</title><rect x="662.5" y="451.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="665.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.06%)</title><rect x="663.3" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.3" y="462.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.06%)</title><rect x="663.3" y="435.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="666.3" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (712 samples, 0.61%)</title><rect x="664.0" y="483.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (348 samples, 0.30%)</title><rect x="664.0" y="467.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (348 samples, 0.30%)</title><rect x="664.0" y="451.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (158 samples, 0.13%)</title><rect x="664.0" y="435.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="667.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (190 samples, 0.16%)</title><rect x="665.6" y="435.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.6" y="446.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.16%)</title><rect x="665.6" y="419.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="668.6" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (364 samples, 0.31%)</title><rect x="667.5" y="467.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (165 samples, 0.14%)</title><rect x="667.5" y="451.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (165 samples, 0.14%)</title><rect x="667.5" y="435.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (61 samples, 0.05%)</title><rect x="667.5" y="419.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="670.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (104 samples, 0.09%)</title><rect x="668.1" y="419.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.1" y="430.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.09%)</title><rect x="668.1" y="403.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="671.1" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (199 samples, 0.17%)</title><rect x="669.2" y="451.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.2" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (199 samples, 0.17%)</title><rect x="669.2" y="435.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (199 samples, 0.17%)</title><rect x="669.2" y="419.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (199 samples, 0.17%)</title><rect x="669.2" y="403.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (87 samples, 0.07%)</title><rect x="669.2" y="387.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="672.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (112 samples, 0.10%)</title><rect x="670.0" y="387.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.0" y="398.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.10%)</title><rect x="670.0" y="371.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="673.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (335 samples, 0.29%)</title><rect x="671.2" y="515.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (114 samples, 0.10%)</title><rect x="671.2" y="499.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="674.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (221 samples, 0.19%)</title><rect x="672.3" y="499.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (59 samples, 0.05%)</title><rect x="672.3" y="483.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="675.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (162 samples, 0.14%)</title><rect x="672.9" y="483.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.9" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (162 samples, 0.14%)</title><rect x="672.9" y="467.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="675.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (283 samples, 0.24%)</title><rect x="674.5" y="515.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (283 samples, 0.24%)</title><rect x="674.5" y="499.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (283 samples, 0.24%)</title><rect x="674.5" y="483.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.5" y="494.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (283 samples, 0.24%)</title><rect x="674.5" y="467.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (117 samples, 0.10%)</title><rect x="674.5" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (117 samples, 0.10%)</title><rect x="674.5" y="435.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="677.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$131/898061759.apply (166 samples, 0.14%)</title><rect x="675.7" y="451.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (166 samples, 0.14%)</title><rect x="675.7" y="435.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.7" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (80 samples, 0.07%)</title><rect x="675.7" y="419.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="678.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (86 samples, 0.07%)</title><rect x="676.5" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (86 samples, 0.07%)</title><rect x="676.5" y="403.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="679.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (867 samples, 0.74%)</title><rect x="677.4" y="579.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.03%)</title><rect x="677.4" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.03%)</title><rect x="677.4" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$235/2044206769.get$Lambda (41 samples, 0.03%)</title><rect x="677.4" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.4" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$235 (41 samples, 0.03%)</title><rect x="677.4" y="515.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="680.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (106 samples, 0.09%)</title><rect x="677.8" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (106 samples, 0.09%)</title><rect x="677.8" y="547.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (65 samples, 0.06%)</title><rect x="677.8" y="531.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="680.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (41 samples, 0.03%)</title><rect x="678.5" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (41 samples, 0.03%)</title><rect x="678.5" y="515.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="681.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (720 samples, 0.61%)</title><rect x="678.9" y="563.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (49 samples, 0.04%)</title><rect x="678.9" y="547.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="681.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (41 samples, 0.03%)</title><rect x="679.4" y="547.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="682.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (58 samples, 0.05%)</title><rect x="679.8" y="547.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="682.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (519 samples, 0.44%)</title><rect x="680.4" y="547.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$224/1601412013.accept (519 samples, 0.44%)</title><rect x="680.4" y="531.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (519 samples, 0.44%)</title><rect x="680.4" y="515.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (172 samples, 0.15%)</title><rect x="680.4" y="499.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (172 samples, 0.15%)</title><rect x="680.4" y="483.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$230/1479809634.get$Lambda (172 samples, 0.15%)</title><rect x="680.4" y="467.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.4" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.MergeUtils$$Lambda$230 (172 samples, 0.15%)</title><rect x="680.4" y="451.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="683.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (347 samples, 0.30%)</title><rect x="682.1" y="499.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (347 samples, 0.30%)</title><rect x="682.1" y="483.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (199 samples, 0.17%)</title><rect x="682.1" y="467.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="685.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (46 samples, 0.04%)</title><rect x="684.1" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (46 samples, 0.04%)</title><rect x="684.1" y="451.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="687.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.09%)</title><rect x="684.6" y="467.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.09%)</title><rect x="684.6" y="451.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (101 samples, 0.09%)</title><rect x="684.6" y="435.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="687.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (53 samples, 0.05%)</title><rect x="685.6" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.02%)</title><rect x="685.6" y="531.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="688.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Object (25 samples, 0.02%)</title><rect x="685.8" y="531.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="688.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (139 samples, 0.12%)</title><rect x="686.1" y="595.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (139 samples, 0.12%)</title><rect x="686.1" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (139 samples, 0.12%)</title><rect x="686.1" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (139 samples, 0.12%)</title><rect x="686.1" y="547.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (139 samples, 0.12%)</title><rect x="686.1" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.1" y="542.0"></text>
</g>
<g>
<title>byte[] (139 samples, 0.12%)</title><rect x="686.1" y="515.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="689.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (203 samples, 0.17%)</title><rect x="687.5" y="691.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (203 samples, 0.17%)</title><rect x="687.5" y="675.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (203 samples, 0.17%)</title><rect x="687.5" y="659.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (203 samples, 0.17%)</title><rect x="687.5" y="643.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (203 samples, 0.17%)</title><rect x="687.5" y="627.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (203 samples, 0.17%)</title><rect x="687.5" y="611.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (203 samples, 0.17%)</title><rect x="687.5" y="595.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (203 samples, 0.17%)</title><rect x="687.5" y="579.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (203 samples, 0.17%)</title><rect x="687.5" y="563.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (203 samples, 0.17%)</title><rect x="687.5" y="547.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (203 samples, 0.17%)</title><rect x="687.5" y="531.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (203 samples, 0.17%)</title><rect x="687.5" y="515.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (203 samples, 0.17%)</title><rect x="687.5" y="499.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (203 samples, 0.17%)</title><rect x="687.5" y="483.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (203 samples, 0.17%)</title><rect x="687.5" y="467.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (203 samples, 0.17%)</title><rect x="687.5" y="451.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (203 samples, 0.17%)</title><rect x="687.5" y="435.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="690.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,478 samples, 1.26%)</title><rect x="689.5" y="691.0" width="14.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.03%)</title><rect x="689.5" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="689.5" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$444/922607877.get$Lambda (25 samples, 0.02%)</title><rect x="689.5" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.5" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$444 (25 samples, 0.02%)</title><rect x="689.5" y="627.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="692.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2015781843.linkToTargetMethod (36 samples, 0.03%)</title><rect x="689.9" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.03%)</title><rect x="689.9" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$448/1963952344.get$Lambda (36 samples, 0.03%)</title><rect x="689.9" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$448 (36 samples, 0.03%)</title><rect x="689.9" y="627.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="692.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (376 samples, 0.32%)</title><rect x="690.3" y="675.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$449/992417271.accept (312 samples, 0.27%)</title><rect x="690.3" y="659.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (312 samples, 0.27%)</title><rect x="690.3" y="643.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (312 samples, 0.27%)</title><rect x="690.3" y="627.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (312 samples, 0.27%)</title><rect x="690.3" y="611.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (312 samples, 0.27%)</title><rect x="690.3" y="595.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (312 samples, 0.27%)</title><rect x="690.3" y="579.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (312 samples, 0.27%)</title><rect x="690.3" y="563.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (312 samples, 0.27%)</title><rect x="690.3" y="547.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (312 samples, 0.27%)</title><rect x="690.3" y="531.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="693.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (312 samples, 0.27%)</title><rect x="690.3" y="515.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="693.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (312 samples, 0.27%)</title><rect x="690.3" y="499.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (312 samples, 0.27%)</title><rect x="690.3" y="483.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (62 samples, 0.05%)</title><rect x="690.3" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (62 samples, 0.05%)</title><rect x="690.3" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (62 samples, 0.05%)</title><rect x="690.3" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (28 samples, 0.02%)</title><rect x="690.3" y="419.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (28 samples, 0.02%)</title><rect x="690.3" y="403.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (28 samples, 0.02%)</title><rect x="690.3" y="387.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (28 samples, 0.02%)</title><rect x="690.3" y="371.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (28 samples, 0.02%)</title><rect x="690.3" y="355.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="693.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.03%)</title><rect x="690.5" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.03%)</title><rect x="690.5" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 0.03%)</title><rect x="690.5" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (34 samples, 0.03%)</title><rect x="690.5" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (34 samples, 0.03%)</title><rect x="690.5" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (34 samples, 0.03%)</title><rect x="690.5" y="339.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="693.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (27 samples, 0.02%)</title><rect x="690.9" y="467.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.02%)</title><rect x="690.9" y="451.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.02%)</title><rect x="690.9" y="435.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$464/909082479.get$Lambda (27 samples, 0.02%)</title><rect x="690.9" y="419.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="693.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$464 (27 samples, 0.02%)</title><rect x="690.9" y="403.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="693.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (223 samples, 0.19%)</title><rect x="691.1" y="467.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (100 samples, 0.09%)</title><rect x="691.1" y="451.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (67 samples, 0.06%)</title><rect x="691.1" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.1" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (67 samples, 0.06%)</title><rect x="691.1" y="419.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="694.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (33 samples, 0.03%)</title><rect x="691.8" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (33 samples, 0.03%)</title><rect x="691.8" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.8" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (33 samples, 0.03%)</title><rect x="691.8" y="403.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="694.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (123 samples, 0.10%)</title><rect x="692.2" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$264/213652655.get (123 samples, 0.10%)</title><rect x="692.2" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (123 samples, 0.10%)</title><rect x="692.2" y="419.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (123 samples, 0.10%)</title><rect x="692.2" y="403.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (122 samples, 0.10%)</title><rect x="692.2" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.2" y="398.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.10%)</title><rect x="692.2" y="371.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="695.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$452/1901706323.accept (64 samples, 0.05%)</title><rect x="693.4" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (64 samples, 0.05%)</title><rect x="693.4" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$448/1963952344.run (64 samples, 0.05%)</title><rect x="693.4" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (64 samples, 0.05%)</title><rect x="693.4" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (64 samples, 0.05%)</title><rect x="693.4" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (64 samples, 0.05%)</title><rect x="693.4" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (64 samples, 0.05%)</title><rect x="693.4" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.4" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (64 samples, 0.05%)</title><rect x="693.4" y="547.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="696.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (106 samples, 0.09%)</title><rect x="694.0" y="675.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.0" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (106 samples, 0.09%)</title><rect x="694.0" y="659.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="697.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (71 samples, 0.06%)</title><rect x="695.1" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (38 samples, 0.03%)</title><rect x="695.1" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (38 samples, 0.03%)</title><rect x="695.1" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (38 samples, 0.03%)</title><rect x="695.1" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (38 samples, 0.03%)</title><rect x="695.1" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (38 samples, 0.03%)</title><rect x="695.1" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (38 samples, 0.03%)</title><rect x="695.1" y="579.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.1" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (38 samples, 0.03%)</title><rect x="695.1" y="563.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="698.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (33 samples, 0.03%)</title><rect x="695.5" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.5" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (33 samples, 0.03%)</title><rect x="695.5" y="643.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="698.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (230 samples, 0.20%)</title><rect x="695.8" y="675.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1523868633.run (118 samples, 0.10%)</title><rect x="695.8" y="659.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (118 samples, 0.10%)</title><rect x="695.8" y="643.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.10%)</title><rect x="695.8" y="627.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.10%)</title><rect x="695.8" y="611.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (118 samples, 0.10%)</title><rect x="695.8" y="595.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (118 samples, 0.10%)</title><rect x="695.8" y="579.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (118 samples, 0.10%)</title><rect x="695.8" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (118 samples, 0.10%)</title><rect x="695.8" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (118 samples, 0.10%)</title><rect x="695.8" y="531.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (118 samples, 0.10%)</title><rect x="695.8" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (84 samples, 0.07%)</title><rect x="695.8" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (84 samples, 0.07%)</title><rect x="695.8" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (84 samples, 0.07%)</title><rect x="695.8" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/857068247.linkToTargetMethod (63 samples, 0.05%)</title><rect x="695.8" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/895281180.invoke (63 samples, 0.05%)</title><rect x="695.8" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.05%)</title><rect x="695.8" y="419.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (63 samples, 0.05%)</title><rect x="695.8" y="403.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (63 samples, 0.05%)</title><rect x="695.8" y="387.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.8" y="398.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.05%)</title><rect x="695.8" y="371.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="698.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (34 samples, 0.03%)</title><rect x="696.7" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.03%)</title><rect x="696.7" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.03%)</title><rect x="696.7" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 0.03%)</title><rect x="696.7" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (34 samples, 0.03%)</title><rect x="696.7" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (34 samples, 0.03%)</title><rect x="696.7" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (34 samples, 0.03%)</title><rect x="696.7" y="403.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="699.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$320/1685040699.run (112 samples, 0.10%)</title><rect x="697.0" y="659.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (112 samples, 0.10%)</title><rect x="697.0" y="643.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.04%)</title><rect x="697.0" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.04%)</title><rect x="697.0" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$462/1898580517.get$Lambda (49 samples, 0.04%)</title><rect x="697.0" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$462 (49 samples, 0.04%)</title><rect x="697.0" y="579.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="700.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (63 samples, 0.05%)</title><rect x="697.5" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (63 samples, 0.05%)</title><rect x="697.5" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (63 samples, 0.05%)</title><rect x="697.5" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (63 samples, 0.05%)</title><rect x="697.5" y="579.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="700.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (250 samples, 0.21%)</title><rect x="698.1" y="675.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.1" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (54 samples, 0.05%)</title><rect x="698.1" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.1" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (54 samples, 0.05%)</title><rect x="698.1" y="643.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.1" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (54 samples, 0.05%)</title><rect x="698.1" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.1" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (54 samples, 0.05%)</title><rect x="698.1" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.1" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (54 samples, 0.05%)</title><rect x="698.1" y="595.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="701.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (196 samples, 0.17%)</title><rect x="698.7" y="659.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.04%)</title><rect x="698.7" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.04%)</title><rect x="698.7" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$636/1267503831.get$Lambda (52 samples, 0.04%)</title><rect x="698.7" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$636 (52 samples, 0.04%)</title><rect x="698.7" y="595.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="701.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (144 samples, 0.12%)</title><rect x="699.2" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.2" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (62 samples, 0.05%)</title><rect x="699.2" y="627.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="702.2" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (82 samples, 0.07%)</title><rect x="699.8" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.8" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (82 samples, 0.07%)</title><rect x="699.8" y="611.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.8" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (82 samples, 0.07%)</title><rect x="699.8" y="595.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="702.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (259 samples, 0.22%)</title><rect x="700.6" y="675.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.6" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (124 samples, 0.11%)</title><rect x="700.8" y="659.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (48 samples, 0.04%)</title><rect x="700.8" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.8" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (48 samples, 0.04%)</title><rect x="700.8" y="627.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="703.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (76 samples, 0.06%)</title><rect x="701.3" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.3" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (76 samples, 0.06%)</title><rect x="701.3" y="627.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="704.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (120 samples, 0.10%)</title><rect x="702.0" y="659.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (120 samples, 0.10%)</title><rect x="702.0" y="643.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="705.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (63 samples, 0.05%)</title><rect x="703.2" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (63 samples, 0.05%)</title><rect x="703.2" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (63 samples, 0.05%)</title><rect x="703.2" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (63 samples, 0.05%)</title><rect x="703.2" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (43 samples, 0.04%)</title><rect x="703.4" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (43 samples, 0.04%)</title><rect x="703.4" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (43 samples, 0.04%)</title><rect x="703.4" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (43 samples, 0.04%)</title><rect x="703.4" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (43 samples, 0.04%)</title><rect x="703.4" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (43 samples, 0.04%)</title><rect x="703.4" y="531.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="706.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (36 samples, 0.03%)</title><rect x="704.0" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (36 samples, 0.03%)</title><rect x="704.0" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (36 samples, 0.03%)</title><rect x="704.0" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (36 samples, 0.03%)</title><rect x="704.0" y="627.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="707.0" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (48,312 samples, 41.15%)</title><rect x="704.4" y="691.0" width="485.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.4" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,236 samples, 1.05%)</title><rect x="704.4" y="675.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.4" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,236 samples, 1.05%)</title><rect x="704.4" y="659.0" width="12.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="707.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (47,076 samples, 40.10%)</title><rect x="716.8" y="675.0" width="473.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.8" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47,076 samples, 40.10%)</title><rect x="716.8" y="659.0" width="473.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.8" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (47,076 samples, 40.10%)</title><rect x="716.8" y="643.0" width="473.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.8" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,208 samples, 6.14%)</title><rect x="716.8" y="627.0" width="72.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.8" y="638.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,208 samples, 6.14%)</title><rect x="716.8" y="611.0" width="72.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.8" y="622.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (4,170 samples, 3.55%)</title><rect x="716.8" y="595.0" width="41.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.8" y="606.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,925 samples, 1.64%)</title><rect x="716.8" y="579.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,925 samples, 1.64%)</title><rect x="716.8" y="563.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,925 samples, 1.64%)</title><rect x="716.8" y="547.0" width="19.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,925 samples, 1.64%)</title><rect x="716.8" y="531.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (716 samples, 0.61%)</title><rect x="716.8" y="515.0" width="7.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="719.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,209 samples, 1.03%)</title><rect x="724.0" y="515.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.0" y="526.0"></text>
</g>
<g>
<title>byte[] (1,209 samples, 1.03%)</title><rect x="724.0" y="499.0" width="12.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="727.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (2,245 samples, 1.91%)</title><rect x="736.2" y="579.0" width="22.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.2" y="590.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (2,245 samples, 1.91%)</title><rect x="736.2" y="563.0" width="22.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="739.2" y="574.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1762000431.linkToTargetMethod (2,216 samples, 1.89%)</title><rect x="736.2" y="547.0" width="22.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.2" y="558.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,216 samples, 1.89%)</title><rect x="736.2" y="531.0" width="22.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.2" y="542.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/637964804.get$Lambda (2,216 samples, 1.89%)</title><rect x="736.2" y="515.0" width="22.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.2" y="526.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$112 (2,216 samples, 1.89%)</title><rect x="736.2" y="499.0" width="22.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="739.2" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (29 samples, 0.02%)</title><rect x="758.4" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (29 samples, 0.02%)</title><rect x="758.4" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (29 samples, 0.02%)</title><rect x="758.4" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (29 samples, 0.02%)</title><rect x="758.4" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (29 samples, 0.02%)</title><rect x="758.4" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (29 samples, 0.02%)</title><rect x="758.4" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (29 samples, 0.02%)</title><rect x="758.4" y="451.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="761.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3,038 samples, 2.59%)</title><rect x="758.7" y="595.0" width="30.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.7" y="606.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (3,038 samples, 2.59%)</title><rect x="758.7" y="579.0" width="30.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.7" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,038 samples, 2.59%)</title><rect x="758.7" y="563.0" width="30.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="761.7" y="574.0">ja..</text>
</g>
<g>
<title>java.lang.String (1,451 samples, 1.24%)</title><rect x="758.7" y="547.0" width="14.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="761.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,587 samples, 1.35%)</title><rect x="773.3" y="547.0" width="16.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.3" y="558.0"></text>
</g>
<g>
<title>byte[] (1,587 samples, 1.35%)</title><rect x="773.3" y="531.0" width="16.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="776.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14,874 samples, 12.67%)</title><rect x="789.3" y="627.0" width="149.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.3" y="638.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one.nio.http.Request (2,126 samples, 1.81%)</title><rect x="789.3" y="611.0" width="21.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="792.3" y="622.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4,818 samples, 4.10%)</title><rect x="810.6" y="611.0" width="48.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.6" y="622.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (3,264 samples, 2.78%)</title><rect x="810.6" y="595.0" width="32.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="813.6" y="606.0">ja..</text>
</g>
<g>
<title>java.lang.String[] (1,554 samples, 1.32%)</title><rect x="843.4" y="595.0" width="15.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="846.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,930 samples, 6.75%)</title><rect x="859.1" y="611.0" width="79.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="862.1" y="622.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,930 samples, 6.75%)</title><rect x="859.1" y="595.0" width="79.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.1" y="606.0">one/nio/u..</text>
</g>
<g>
<title>char[] (3,504 samples, 2.98%)</title><rect x="859.1" y="579.0" width="35.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="862.1" y="590.0">cha..</text>
</g>
<g>
<title>char[] (391 samples, 0.33%)</title><rect x="894.3" y="579.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="897.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String (999 samples, 0.85%)</title><rect x="898.2" y="579.0" width="10.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="901.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,036 samples, 2.59%)</title><rect x="908.3" y="579.0" width="30.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.3" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,036 samples, 2.59%)</title><rect x="908.3" y="563.0" width="30.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.3" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,036 samples, 2.59%)</title><rect x="908.3" y="547.0" width="30.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.3" y="558.0">ja..</text>
</g>
<g>
<title>byte[] (3,036 samples, 2.59%)</title><rect x="908.3" y="531.0" width="30.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="911.3" y="542.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (434 samples, 0.37%)</title><rect x="938.8" y="627.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="941.8" y="638.0"></text>
</g>
<g>
<title>byte[] (434 samples, 0.37%)</title><rect x="938.8" y="611.0" width="4.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="941.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,538 samples, 1.31%)</title><rect x="943.1" y="627.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,538 samples, 1.31%)</title><rect x="943.1" y="611.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,538 samples, 1.31%)</title><rect x="943.1" y="595.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (627 samples, 0.53%)</title><rect x="943.1" y="579.0" width="6.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="946.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (911 samples, 0.78%)</title><rect x="949.4" y="579.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.4" y="590.0"></text>
</g>
<g>
<title>byte[] (911 samples, 0.78%)</title><rect x="949.4" y="563.0" width="9.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="952.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23,022 samples, 19.61%)</title><rect x="958.6" y="627.0" width="231.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.6" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (23,022 samples, 19.61%)</title><rect x="958.6" y="611.0" width="231.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.6" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (8,431 samples, 7.18%)</title><rect x="958.6" y="595.0" width="84.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="961.6" y="606.0">char[]</text>
</g>
<g>
<title>char[] (2,355 samples, 2.01%)</title><rect x="1043.3" y="595.0" width="23.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1046.3" y="606.0">c..</text>
</g>
<g>
<title>java.lang.String (4,379 samples, 3.73%)</title><rect x="1067.0" y="595.0" width="44.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1070.0" y="606.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,857 samples, 6.69%)</title><rect x="1111.0" y="595.0" width="79.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.0" y="606.0">java/lang..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,857 samples, 6.69%)</title><rect x="1111.0" y="579.0" width="79.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.0" y="590.0">java/lang..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7,857 samples, 6.69%)</title><rect x="1111.0" y="563.0" width="79.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.0" y="574.0">java/lang..</text>
</g>
<g>
<title>byte[] (7,741 samples, 6.59%)</title><rect x="1111.0" y="547.0" width="77.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1114.0" y="558.0">byte[]</text>
</g>
<g>
<title>byte[] (116 samples, 0.10%)</title><rect x="1188.8" y="547.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1191.8" y="558.0"></text>
</g>
</g>
</svg>
