<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (186,132 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (154,510 samples, 83.01%)</title><rect x="10.0" y="563.0" width="979.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (154,510 samples, 83.01%)</title><rect x="10.0" y="547.0" width="979.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (154,510 samples, 83.01%)</title><rect x="10.0" y="531.0" width="979.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (57,381 samples, 30.83%)</title><rect x="10.0" y="515.0" width="363.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncSuppl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (57,381 samples, 30.83%)</title><rect x="10.0" y="499.0" width="363.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (56,338 samples, 30.27%)</title><rect x="10.0" y="483.0" width="357.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableFuture$UniCompose..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/741792946.apply (56,338 samples, 30.27%)</title><rect x="10.0" y="467.0" width="357.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$181/7..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (56,338 samples, 30.27%)</title><rect x="10.0" y="451.0" width="357.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/MultiExchange.lambda$respon..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (56,338 samples, 30.27%)</title><rect x="10.0" y="435.0" width="357.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/MultiExchange.responseAsync..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (42,884 samples, 23.04%)</title><rect x="10.0" y="419.0" width="271.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (42,884 samples, 23.04%)</title><rect x="10.0" y="403.0" width="271.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (42,884 samples, 23.04%)</title><rect x="10.0" y="387.0" width="271.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Exchange.respo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (41,156 samples, 22.11%)</title><rect x="10.0" y="371.0" width="260.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (41,156 samples, 22.11%)</title><rect x="10.0" y="355.0" width="260.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (41,156 samples, 22.11%)</title><rect x="10.0" y="339.0" width="260.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$369/2088470337.apply (41,156 samples, 22.11%)</title><rect x="10.0" y="323.0" width="260.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net/http/Exchange$$Lam..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (41,156 samples, 22.11%)</title><rect x="10.0" y="307.0" width="260.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/net/http/Exchange.lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (41,156 samples, 22.11%)</title><rect x="10.0" y="291.0" width="260.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/net/http/Exchange.chec..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/704007913.apply (41,156 samples, 22.11%)</title><rect x="10.0" y="275.0" width="260.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net/http/Exchange$$Lam..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (41,156 samples, 22.11%)</title><rect x="10.0" y="259.0" width="260.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net/http/Exchange.lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (41,156 samples, 22.11%)</title><rect x="10.0" y="243.0" width="260.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net/http/Http1Exchange..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (41,156 samples, 22.11%)</title><rect x="10.0" y="227.0" width="260.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (41,156 samples, 22.11%)</title><rect x="10.0" y="211.0" width="260.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/719435531.apply (41,156 samples, 22.11%)</title><rect x="10.0" y="195.0" width="260.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/net/http/Http1Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (41,156 samples, 22.11%)</title><rect x="10.0" y="179.0" width="260.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/net/http/Http1Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (41,156 samples, 22.11%)</title><rect x="10.0" y="163.0" width="260.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/net/http/Http1Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (41,156 samples, 22.11%)</title><rect x="10.0" y="147.0" width="260.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/net/http/SocketTube.co..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (4,570 samples, 2.46%)</title><rect x="10.0" y="131.0" width="29.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="142.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (4,570 samples, 2.46%)</title><rect x="10.0" y="115.0" width="29.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="126.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4,570 samples, 2.46%)</title><rect x="10.0" y="99.0" width="29.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="110.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4,570 samples, 2.46%)</title><rect x="10.0" y="83.0" width="29.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="94.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4,570 samples, 2.46%)</title><rect x="10.0" y="67.0" width="29.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="78.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,575 samples, 1.92%)</title><rect x="10.0" y="51.0" width="22.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.0" y="62.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (995 samples, 0.53%)</title><rect x="32.7" y="51.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="35.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (995 samples, 0.53%)</title><rect x="32.7" y="35.0" width="6.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="35.7" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (36,586 samples, 19.66%)</title><rect x="39.0" y="131.0" width="231.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.0" y="142.0">jdk/internal/net/http/SocketTub..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (36,586 samples, 19.66%)</title><rect x="39.0" y="115.0" width="231.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.0" y="126.0">jdk/internal/net/http/SocketTub..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (36,586 samples, 19.66%)</title><rect x="39.0" y="99.0" width="231.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.0" y="110.0">jdk/internal/net/http/SocketTub..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (36,586 samples, 19.66%)</title><rect x="39.0" y="83.0" width="231.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.0" y="94.0">jdk/internal/net/http/HttpClien..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (36,586 samples, 19.66%)</title><rect x="39.0" y="67.0" width="231.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.0" y="78.0">jdk/internal/net/http/HttpClien..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (34,173 samples, 18.36%)</title><rect x="39.0" y="51.0" width="216.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="42.0" y="62.0">jdk.internal.net.http.HttpCl..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,413 samples, 1.30%)</title><rect x="255.6" y="51.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.6" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (2,413 samples, 1.30%)</title><rect x="255.6" y="35.0" width="15.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="258.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,728 samples, 0.93%)</title><rect x="270.9" y="371.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,728 samples, 0.93%)</title><rect x="270.9" y="355.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,728 samples, 0.93%)</title><rect x="270.9" y="339.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,728 samples, 0.93%)</title><rect x="270.9" y="323.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,728 samples, 0.93%)</title><rect x="270.9" y="307.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1,728 samples, 0.93%)</title><rect x="270.9" y="291.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,728 samples, 0.93%)</title><rect x="270.9" y="275.0" width="11.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="273.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (13,339 samples, 7.17%)</title><rect x="281.9" y="419.0" width="84.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.9" y="430.0">jdk/intern..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (10,566 samples, 5.68%)</title><rect x="281.9" y="403.0" width="67.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="284.9" y="414.0">jdk.int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (2,773 samples, 1.49%)</title><rect x="348.9" y="403.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,773 samples, 1.49%)</title><rect x="348.9" y="387.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (2,773 samples, 1.49%)</title><rect x="348.9" y="371.0" width="17.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="351.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (115 samples, 0.06%)</title><rect x="366.4" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (115 samples, 0.06%)</title><rect x="366.4" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (113 samples, 0.06%)</title><rect x="366.4" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.4" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (113 samples, 0.06%)</title><rect x="366.4" y="371.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="369.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,043 samples, 0.56%)</title><rect x="367.2" y="483.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,043 samples, 0.56%)</title><rect x="367.2" y="467.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,012 samples, 0.54%)</title><rect x="367.2" y="451.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,012 samples, 0.54%)</title><rect x="367.2" y="435.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,012 samples, 0.54%)</title><rect x="367.2" y="419.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,012 samples, 0.54%)</title><rect x="367.2" y="403.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,012 samples, 0.54%)</title><rect x="367.2" y="387.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,012 samples, 0.54%)</title><rect x="367.2" y="371.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,012 samples, 0.54%)</title><rect x="367.2" y="355.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,012 samples, 0.54%)</title><rect x="367.2" y="339.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,012 samples, 0.54%)</title><rect x="367.2" y="323.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,012 samples, 0.54%)</title><rect x="367.2" y="307.0" width="6.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="370.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,739 samples, 0.93%)</title><rect x="373.8" y="515.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (899 samples, 0.48%)</title><rect x="373.8" y="499.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (899 samples, 0.48%)</title><rect x="373.8" y="483.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (899 samples, 0.48%)</title><rect x="373.8" y="467.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (899 samples, 0.48%)</title><rect x="373.8" y="451.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (899 samples, 0.48%)</title><rect x="373.8" y="435.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (899 samples, 0.48%)</title><rect x="373.8" y="419.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (899 samples, 0.48%)</title><rect x="373.8" y="403.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (899 samples, 0.48%)</title><rect x="373.8" y="387.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (899 samples, 0.48%)</title><rect x="373.8" y="371.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (899 samples, 0.48%)</title><rect x="373.8" y="355.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (899 samples, 0.48%)</title><rect x="373.8" y="339.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (899 samples, 0.48%)</title><rect x="373.8" y="323.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (899 samples, 0.48%)</title><rect x="373.8" y="307.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (899 samples, 0.48%)</title><rect x="373.8" y="291.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (899 samples, 0.48%)</title><rect x="373.8" y="275.0" width="5.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="376.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (840 samples, 0.45%)</title><rect x="379.5" y="499.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (840 samples, 0.45%)</title><rect x="379.5" y="483.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$230/1479809634.accept (840 samples, 0.45%)</title><rect x="379.5" y="467.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (840 samples, 0.45%)</title><rect x="379.5" y="451.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (839 samples, 0.45%)</title><rect x="379.5" y="435.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (839 samples, 0.45%)</title><rect x="379.5" y="419.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (839 samples, 0.45%)</title><rect x="379.5" y="403.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (839 samples, 0.45%)</title><rect x="379.5" y="387.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (839 samples, 0.45%)</title><rect x="379.5" y="371.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (839 samples, 0.45%)</title><rect x="379.5" y="355.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (839 samples, 0.45%)</title><rect x="379.5" y="339.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (839 samples, 0.45%)</title><rect x="379.5" y="323.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (839 samples, 0.45%)</title><rect x="379.5" y="307.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (839 samples, 0.45%)</title><rect x="379.5" y="291.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (839 samples, 0.45%)</title><rect x="379.5" y="275.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (839 samples, 0.45%)</title><rect x="379.5" y="259.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (839 samples, 0.45%)</title><rect x="379.5" y="243.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (839 samples, 0.45%)</title><rect x="379.5" y="227.0" width="5.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="382.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (19,954 samples, 10.72%)</title><rect x="384.8" y="515.0" width="126.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.8" y="526.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (13,499 samples, 7.25%)</title><rect x="384.8" y="499.0" width="85.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.8" y="510.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4,289 samples, 2.30%)</title><rect x="384.8" y="483.0" width="27.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.8" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,289 samples, 2.30%)</title><rect x="384.8" y="467.0" width="27.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.8" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,289 samples, 2.30%)</title><rect x="384.8" y="451.0" width="27.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.8" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,289 samples, 2.30%)</title><rect x="384.8" y="435.0" width="27.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.8" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,289 samples, 2.30%)</title><rect x="384.8" y="419.0" width="27.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.8" y="430.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,289 samples, 2.30%)</title><rect x="384.8" y="403.0" width="27.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="387.8" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (9,210 samples, 4.95%)</title><rect x="412.0" y="483.0" width="58.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.0" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (9,210 samples, 4.95%)</title><rect x="412.0" y="467.0" width="58.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.0" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (9,210 samples, 4.95%)</title><rect x="412.0" y="451.0" width="58.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.0" y="462.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9,210 samples, 4.95%)</title><rect x="412.0" y="435.0" width="58.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.0" y="446.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9,210 samples, 4.95%)</title><rect x="412.0" y="419.0" width="58.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.0" y="430.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9,210 samples, 4.95%)</title><rect x="412.0" y="403.0" width="58.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.0" y="414.0">jdk/in..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (9,210 samples, 4.95%)</title><rect x="412.0" y="387.0" width="58.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="415.0" y="398.0">java.u..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6,455 samples, 3.47%)</title><rect x="470.4" y="499.0" width="40.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.4" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (826 samples, 0.44%)</title><rect x="470.4" y="483.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (826 samples, 0.44%)</title><rect x="470.4" y="467.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (826 samples, 0.44%)</title><rect x="470.4" y="451.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (826 samples, 0.44%)</title><rect x="470.4" y="435.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (826 samples, 0.44%)</title><rect x="470.4" y="419.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (826 samples, 0.44%)</title><rect x="470.4" y="403.0" width="5.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="473.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5,629 samples, 3.02%)</title><rect x="475.6" y="483.0" width="35.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.6" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5,629 samples, 3.02%)</title><rect x="475.6" y="467.0" width="35.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="478.6" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5,629 samples, 3.02%)</title><rect x="475.6" y="451.0" width="35.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.6" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5,629 samples, 3.02%)</title><rect x="475.6" y="435.0" width="35.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.6" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5,629 samples, 3.02%)</title><rect x="475.6" y="419.0" width="35.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.6" y="430.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5,629 samples, 3.02%)</title><rect x="475.6" y="403.0" width="35.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.6" y="414.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (5,629 samples, 3.02%)</title><rect x="475.6" y="387.0" width="35.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="478.6" y="398.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (71,719 samples, 38.53%)</title><rect x="511.3" y="515.0" width="454.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.3" y="526.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTa..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (71,719 samples, 38.53%)</title><rect x="511.3" y="499.0" width="454.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.3" y="510.0">jdk/internal/net/http/common/SequentialScheduler$CompleteResta..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (31,543 samples, 16.95%)</title><rect x="511.3" y="483.0" width="200.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.3" y="494.0">jdk/internal/net/http/comm..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (31,543 samples, 16.95%)</title><rect x="511.3" y="467.0" width="200.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.3" y="478.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (31,543 samples, 16.95%)</title><rect x="511.3" y="451.0" width="200.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.3" y="462.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (29,916 samples, 16.07%)</title><rect x="511.3" y="435.0" width="189.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.3" y="446.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (29,916 samples, 16.07%)</title><rect x="511.3" y="419.0" width="189.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.3" y="430.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (29,916 samples, 16.07%)</title><rect x="511.3" y="403.0" width="189.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="514.3" y="414.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (29,916 samples, 16.07%)</title><rect x="511.3" y="387.0" width="189.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.3" y="398.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (29,916 samples, 16.07%)</title><rect x="511.3" y="371.0" width="189.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.3" y="382.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (29,916 samples, 16.07%)</title><rect x="511.3" y="355.0" width="189.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.3" y="366.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (29,916 samples, 16.07%)</title><rect x="511.3" y="339.0" width="189.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.3" y="350.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (29,916 samples, 16.07%)</title><rect x="511.3" y="323.0" width="189.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.3" y="334.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (29,916 samples, 16.07%)</title><rect x="511.3" y="307.0" width="189.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.3" y="318.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (28,948 samples, 15.55%)</title><rect x="511.3" y="291.0" width="183.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="514.3" y="302.0">jdk.internal.net.http.Ht..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (968 samples, 0.52%)</title><rect x="694.8" y="291.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.8" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (968 samples, 0.52%)</title><rect x="694.8" y="275.0" width="6.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="697.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,627 samples, 0.87%)</title><rect x="701.0" y="435.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,627 samples, 0.87%)</title><rect x="701.0" y="419.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,627 samples, 0.87%)</title><rect x="701.0" y="403.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,627 samples, 0.87%)</title><rect x="701.0" y="387.0" width="10.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,627 samples, 0.87%)</title><rect x="701.0" y="371.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,627 samples, 0.87%)</title><rect x="701.0" y="355.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,627 samples, 0.87%)</title><rect x="701.0" y="339.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,627 samples, 0.87%)</title><rect x="701.0" y="323.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,627 samples, 0.87%)</title><rect x="701.0" y="307.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,627 samples, 0.87%)</title><rect x="701.0" y="291.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,627 samples, 0.87%)</title><rect x="701.0" y="275.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,627 samples, 0.87%)</title><rect x="701.0" y="259.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,627 samples, 0.87%)</title><rect x="701.0" y="243.0" width="10.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (133 samples, 0.07%)</title><rect x="701.0" y="227.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/2133978669.apply (133 samples, 0.07%)</title><rect x="701.0" y="211.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (133 samples, 0.07%)</title><rect x="701.0" y="195.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (133 samples, 0.07%)</title><rect x="701.0" y="179.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (133 samples, 0.07%)</title><rect x="701.0" y="163.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (133 samples, 0.07%)</title><rect x="701.0" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (133 samples, 0.07%)</title><rect x="701.0" y="131.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="704.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,494 samples, 0.80%)</title><rect x="701.8" y="227.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,494 samples, 0.80%)</title><rect x="701.8" y="211.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1523195787.apply (1,494 samples, 0.80%)</title><rect x="701.8" y="195.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1,494 samples, 0.80%)</title><rect x="701.8" y="179.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1,494 samples, 0.80%)</title><rect x="701.8" y="163.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1,494 samples, 0.80%)</title><rect x="701.8" y="147.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.8" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,494 samples, 0.80%)</title><rect x="701.8" y="131.0" width="9.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="704.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (40,176 samples, 21.58%)</title><rect x="711.3" y="483.0" width="254.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.3" y="494.0">jdk/internal/net/http/common/Seque..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (40,176 samples, 21.58%)</title><rect x="711.3" y="467.0" width="254.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.3" y="478.0">jdk/internal/net/http/common/Seque..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (40,176 samples, 21.58%)</title><rect x="711.3" y="451.0" width="254.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.3" y="462.0">jdk/internal/net/http/common/Seque..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (40,176 samples, 21.58%)</title><rect x="711.3" y="435.0" width="254.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.3" y="446.0">jdk/internal/net/http/Http1AsyncRe..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (40,176 samples, 21.58%)</title><rect x="711.3" y="419.0" width="254.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.3" y="430.0">jdk/internal/net/http/Http1AsyncRe..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (40,098 samples, 21.54%)</title><rect x="711.3" y="403.0" width="254.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.3" y="414.0">jdk/internal/net/http/Http1Respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (40,098 samples, 21.54%)</title><rect x="711.3" y="387.0" width="254.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.3" y="398.0">jdk/internal/net/http/Http1Respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (40,098 samples, 21.54%)</title><rect x="711.3" y="371.0" width="254.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.3" y="382.0">jdk/internal/net/http/Http1Respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (40,098 samples, 21.54%)</title><rect x="711.3" y="355.0" width="254.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.3" y="366.0">jdk/internal/net/http/Http1Respons..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (40,098 samples, 21.54%)</title><rect x="711.3" y="339.0" width="254.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.3" y="350.0">jdk/internal/net/http/ResponseCont..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (40,098 samples, 21.54%)</title><rect x="711.3" y="323.0" width="254.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.3" y="334.0">jdk/internal/net/http/ResponseCont..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/106021012.run (40,098 samples, 21.54%)</title><rect x="711.3" y="307.0" width="254.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.3" y="318.0">jdk/internal/net/http/Http1Respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (40,098 samples, 21.54%)</title><rect x="711.3" y="291.0" width="254.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.3" y="302.0">jdk/internal/net/http/Http1Respons..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (40,098 samples, 21.54%)</title><rect x="711.3" y="275.0" width="254.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.3" y="286.0">jdk/internal/net/http/HttpConnecti..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (40,098 samples, 21.54%)</title><rect x="711.3" y="259.0" width="254.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.3" y="270.0">jdk/internal/net/http/ConnectionPo..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (40,098 samples, 21.54%)</title><rect x="711.3" y="243.0" width="254.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.3" y="254.0">jdk/internal/net/http/ConnectionPo..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,275 samples, 1.22%)</title><rect x="711.3" y="227.0" width="14.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="714.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (37,823 samples, 20.32%)</title><rect x="725.7" y="227.0" width="239.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.7" y="238.0">jdk/internal/net/http/Connection..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (37,823 samples, 20.32%)</title><rect x="725.7" y="211.0" width="239.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.7" y="222.0">jdk/internal/net/http/SocketTube..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (4,984 samples, 2.68%)</title><rect x="725.7" y="195.0" width="31.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.7" y="206.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (4,984 samples, 2.68%)</title><rect x="725.7" y="179.0" width="31.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.7" y="190.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4,984 samples, 2.68%)</title><rect x="725.7" y="163.0" width="31.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.7" y="174.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4,984 samples, 2.68%)</title><rect x="725.7" y="147.0" width="31.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="728.7" y="158.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4,984 samples, 2.68%)</title><rect x="725.7" y="131.0" width="31.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.7" y="142.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,406 samples, 2.37%)</title><rect x="725.7" y="115.0" width="27.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="728.7" y="126.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (578 samples, 0.31%)</title><rect x="753.6" y="115.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Object (578 samples, 0.31%)</title><rect x="753.6" y="99.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="756.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (32,839 samples, 17.64%)</title><rect x="757.3" y="195.0" width="208.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.3" y="206.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (32,839 samples, 17.64%)</title><rect x="757.3" y="179.0" width="208.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.3" y="190.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (32,839 samples, 17.64%)</title><rect x="757.3" y="163.0" width="208.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.3" y="174.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (32,839 samples, 17.64%)</title><rect x="757.3" y="147.0" width="208.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.3" y="158.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (32,839 samples, 17.64%)</title><rect x="757.3" y="131.0" width="208.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.3" y="142.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (32,288 samples, 17.35%)</title><rect x="757.3" y="115.0" width="204.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="760.3" y="126.0">jdk.internal.net.http.HttpC..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (551 samples, 0.30%)</title><rect x="962.0" y="115.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="965.0" y="126.0"></text>
</g>
<g>
<title>java.lang.Object (551 samples, 0.30%)</title><rect x="962.0" y="99.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="965.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (78 samples, 0.04%)</title><rect x="965.5" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (78 samples, 0.04%)</title><rect x="965.5" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (78 samples, 0.04%)</title><rect x="965.5" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (78 samples, 0.04%)</title><rect x="965.5" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (78 samples, 0.04%)</title><rect x="965.5" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (78 samples, 0.04%)</title><rect x="965.5" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (78 samples, 0.04%)</title><rect x="965.5" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (78 samples, 0.04%)</title><rect x="965.5" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (78 samples, 0.04%)</title><rect x="965.5" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (78 samples, 0.04%)</title><rect x="965.5" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (78 samples, 0.04%)</title><rect x="965.5" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (78 samples, 0.04%)</title><rect x="965.5" y="227.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (78 samples, 0.04%)</title><rect x="965.5" y="211.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (69 samples, 0.04%)</title><rect x="965.6" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (69 samples, 0.04%)</title><rect x="965.6" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1523195787.apply (69 samples, 0.04%)</title><rect x="965.6" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (69 samples, 0.04%)</title><rect x="965.6" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (69 samples, 0.04%)</title><rect x="965.6" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (69 samples, 0.04%)</title><rect x="965.6" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.6" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (69 samples, 0.04%)</title><rect x="965.6" y="99.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="968.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/637964804.run (3,713 samples, 1.99%)</title><rect x="966.0" y="515.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.0" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (3,713 samples, 1.99%)</title><rect x="966.0" y="499.0" width="23.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.0" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (744 samples, 0.40%)</title><rect x="966.0" y="483.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (744 samples, 0.40%)</title><rect x="966.0" y="467.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (743 samples, 0.40%)</title><rect x="966.0" y="451.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="969.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (743 samples, 0.40%)</title><rect x="966.0" y="435.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (743 samples, 0.40%)</title><rect x="966.0" y="419.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (743 samples, 0.40%)</title><rect x="966.0" y="403.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (743 samples, 0.40%)</title><rect x="966.0" y="387.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="969.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (743 samples, 0.40%)</title><rect x="966.0" y="371.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (743 samples, 0.40%)</title><rect x="966.0" y="355.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (743 samples, 0.40%)</title><rect x="966.0" y="339.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="969.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (743 samples, 0.40%)</title><rect x="966.0" y="323.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (743 samples, 0.40%)</title><rect x="966.0" y="307.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (743 samples, 0.40%)</title><rect x="966.0" y="291.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (743 samples, 0.40%)</title><rect x="966.0" y="275.0" width="4.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="969.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (2,969 samples, 1.60%)</title><rect x="970.7" y="483.0" width="18.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (2,967 samples, 1.59%)</title><rect x="970.7" y="467.0" width="18.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (2,029 samples, 1.09%)</title><rect x="970.7" y="451.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (223 samples, 0.12%)</title><rect x="970.7" y="435.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (223 samples, 0.12%)</title><rect x="970.7" y="419.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (223 samples, 0.12%)</title><rect x="970.7" y="403.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (223 samples, 0.12%)</title><rect x="970.7" y="387.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (223 samples, 0.12%)</title><rect x="970.7" y="371.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="973.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (223 samples, 0.12%)</title><rect x="970.7" y="355.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (223 samples, 0.12%)</title><rect x="970.7" y="339.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (223 samples, 0.12%)</title><rect x="970.7" y="323.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (81 samples, 0.04%)</title><rect x="970.7" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (81 samples, 0.04%)</title><rect x="970.7" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (81 samples, 0.04%)</title><rect x="970.7" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (81 samples, 0.04%)</title><rect x="970.7" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (81 samples, 0.04%)</title><rect x="970.7" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (81 samples, 0.04%)</title><rect x="970.7" y="227.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (81 samples, 0.04%)</title><rect x="970.7" y="211.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (81 samples, 0.04%)</title><rect x="970.7" y="195.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="973.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (142 samples, 0.08%)</title><rect x="971.2" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (142 samples, 0.08%)</title><rect x="971.2" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (142 samples, 0.08%)</title><rect x="971.2" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (142 samples, 0.08%)</title><rect x="971.2" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (142 samples, 0.08%)</title><rect x="971.2" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="974.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (142 samples, 0.08%)</title><rect x="971.2" y="227.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (142 samples, 0.08%)</title><rect x="971.2" y="211.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="974.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$637/600928666.handleLocalResponse (1,806 samples, 0.97%)</title><rect x="972.1" y="435.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="975.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$1 (1,806 samples, 0.97%)</title><rect x="972.1" y="419.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (1,806 samples, 0.97%)</title><rect x="972.1" y="403.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,806 samples, 0.97%)</title><rect x="972.1" y="387.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,806 samples, 0.97%)</title><rect x="972.1" y="371.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="975.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,806 samples, 0.97%)</title><rect x="972.1" y="355.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,806 samples, 0.97%)</title><rect x="972.1" y="339.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,806 samples, 0.97%)</title><rect x="972.1" y="323.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,806 samples, 0.97%)</title><rect x="972.1" y="307.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,806 samples, 0.97%)</title><rect x="972.1" y="291.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,806 samples, 0.97%)</title><rect x="972.1" y="275.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,806 samples, 0.97%)</title><rect x="972.1" y="259.0" width="11.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,806 samples, 0.97%)</title><rect x="972.1" y="243.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="975.1" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,806 samples, 0.97%)</title><rect x="972.1" y="227.0" width="11.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="975.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (938 samples, 0.50%)</title><rect x="983.6" y="451.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (938 samples, 0.50%)</title><rect x="983.6" y="435.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (938 samples, 0.50%)</title><rect x="983.6" y="419.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$224/1601412013.accept (938 samples, 0.50%)</title><rect x="983.6" y="403.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="986.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (938 samples, 0.50%)</title><rect x="983.6" y="387.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (938 samples, 0.50%)</title><rect x="983.6" y="371.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="986.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (938 samples, 0.50%)</title><rect x="983.6" y="355.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (931 samples, 0.50%)</title><rect x="983.6" y="339.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (931 samples, 0.50%)</title><rect x="983.6" y="323.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="986.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (931 samples, 0.50%)</title><rect x="983.6" y="307.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="986.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (931 samples, 0.50%)</title><rect x="983.6" y="291.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (931 samples, 0.50%)</title><rect x="983.6" y="275.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (931 samples, 0.50%)</title><rect x="983.6" y="259.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="986.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (931 samples, 0.50%)</title><rect x="983.6" y="243.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (931 samples, 0.50%)</title><rect x="983.6" y="227.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (931 samples, 0.50%)</title><rect x="983.6" y="211.0" width="5.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="986.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,218 samples, 1.19%)</title><rect x="989.5" y="563.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,218 samples, 1.19%)</title><rect x="989.5" y="547.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,218 samples, 1.19%)</title><rect x="989.5" y="531.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,218 samples, 1.19%)</title><rect x="989.5" y="515.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,218 samples, 1.19%)</title><rect x="989.5" y="499.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (2,218 samples, 1.19%)</title><rect x="989.5" y="483.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="992.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,218 samples, 1.19%)</title><rect x="989.5" y="467.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,218 samples, 1.19%)</title><rect x="989.5" y="451.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="992.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,218 samples, 1.19%)</title><rect x="989.5" y="435.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,218 samples, 1.19%)</title><rect x="989.5" y="419.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,218 samples, 1.19%)</title><rect x="989.5" y="403.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,218 samples, 1.19%)</title><rect x="989.5" y="387.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="992.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2,218 samples, 1.19%)</title><rect x="989.5" y="371.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2,218 samples, 1.19%)</title><rect x="989.5" y="355.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2,218 samples, 1.19%)</title><rect x="989.5" y="339.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,218 samples, 1.19%)</title><rect x="989.5" y="323.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,218 samples, 1.19%)</title><rect x="989.5" y="307.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,218 samples, 1.19%)</title><rect x="989.5" y="291.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,218 samples, 1.19%)</title><rect x="989.5" y="275.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,218 samples, 1.19%)</title><rect x="989.5" y="259.0" width="14.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="992.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (26,455 samples, 14.21%)</title><rect x="1003.6" y="563.0" width="167.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.6" y="574.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (179 samples, 0.10%)</title><rect x="1003.6" y="547.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$449/992417271.accept (179 samples, 0.10%)</title><rect x="1003.6" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1006.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (179 samples, 0.10%)</title><rect x="1003.6" y="515.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (179 samples, 0.10%)</title><rect x="1003.6" y="499.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (179 samples, 0.10%)</title><rect x="1003.6" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (179 samples, 0.10%)</title><rect x="1003.6" y="467.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (179 samples, 0.10%)</title><rect x="1003.6" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (179 samples, 0.10%)</title><rect x="1003.6" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (179 samples, 0.10%)</title><rect x="1003.6" y="419.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (179 samples, 0.10%)</title><rect x="1003.6" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1006.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (179 samples, 0.10%)</title><rect x="1003.6" y="387.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (179 samples, 0.10%)</title><rect x="1003.6" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (179 samples, 0.10%)</title><rect x="1003.6" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (179 samples, 0.10%)</title><rect x="1003.6" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1006.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (179 samples, 0.10%)</title><rect x="1003.6" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (179 samples, 0.10%)</title><rect x="1003.6" y="307.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1006.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (179 samples, 0.10%)</title><rect x="1003.6" y="291.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (179 samples, 0.10%)</title><rect x="1003.6" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (179 samples, 0.10%)</title><rect x="1003.6" y="259.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (179 samples, 0.10%)</title><rect x="1003.6" y="243.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (179 samples, 0.10%)</title><rect x="1003.6" y="227.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (172 samples, 0.09%)</title><rect x="1003.6" y="211.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (172 samples, 0.09%)</title><rect x="1003.6" y="195.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (172 samples, 0.09%)</title><rect x="1003.6" y="179.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (172 samples, 0.09%)</title><rect x="1003.6" y="163.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (172 samples, 0.09%)</title><rect x="1003.6" y="147.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (172 samples, 0.09%)</title><rect x="1003.6" y="131.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (172 samples, 0.09%)</title><rect x="1003.6" y="115.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.6" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (172 samples, 0.09%)</title><rect x="1003.6" y="99.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1006.6" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (18,985 samples, 10.20%)</title><rect x="1004.7" y="547.0" width="120.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1007.7" y="558.0">jdk.internal.ne..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (431 samples, 0.23%)</title><rect x="1125.1" y="547.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1523868633.run (159 samples, 0.09%)</title><rect x="1125.1" y="531.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (159 samples, 0.09%)</title><rect x="1125.1" y="515.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 0.09%)</title><rect x="1125.1" y="499.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 0.09%)</title><rect x="1125.1" y="483.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (159 samples, 0.09%)</title><rect x="1125.1" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (159 samples, 0.09%)</title><rect x="1125.1" y="451.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (159 samples, 0.09%)</title><rect x="1125.1" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (159 samples, 0.09%)</title><rect x="1125.1" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1128.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (159 samples, 0.09%)</title><rect x="1125.1" y="403.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (159 samples, 0.09%)</title><rect x="1125.1" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (159 samples, 0.09%)</title><rect x="1125.1" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 0.09%)</title><rect x="1125.1" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 0.09%)</title><rect x="1125.1" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (159 samples, 0.09%)</title><rect x="1125.1" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (159 samples, 0.09%)</title><rect x="1125.1" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (159 samples, 0.09%)</title><rect x="1125.1" y="291.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (126 samples, 0.07%)</title><rect x="1125.1" y="275.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (126 samples, 0.07%)</title><rect x="1125.1" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (126 samples, 0.07%)</title><rect x="1125.1" y="243.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (126 samples, 0.07%)</title><rect x="1125.1" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (126 samples, 0.07%)</title><rect x="1125.1" y="211.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (126 samples, 0.07%)</title><rect x="1125.1" y="195.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (126 samples, 0.07%)</title><rect x="1125.1" y="179.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (126 samples, 0.07%)</title><rect x="1125.1" y="163.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1128.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$320/1685040699.run (272 samples, 0.15%)</title><rect x="1126.1" y="531.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (272 samples, 0.15%)</title><rect x="1126.1" y="515.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (272 samples, 0.15%)</title><rect x="1126.1" y="499.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (272 samples, 0.15%)</title><rect x="1126.1" y="483.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (272 samples, 0.15%)</title><rect x="1126.1" y="467.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (241 samples, 0.13%)</title><rect x="1126.1" y="451.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (241 samples, 0.13%)</title><rect x="1126.1" y="435.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (241 samples, 0.13%)</title><rect x="1126.1" y="419.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (241 samples, 0.13%)</title><rect x="1126.1" y="403.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (241 samples, 0.13%)</title><rect x="1126.1" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (241 samples, 0.13%)</title><rect x="1126.1" y="371.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (241 samples, 0.13%)</title><rect x="1126.1" y="355.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (241 samples, 0.13%)</title><rect x="1126.1" y="339.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1129.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (590 samples, 0.32%)</title><rect x="1127.8" y="547.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (590 samples, 0.32%)</title><rect x="1127.8" y="531.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (590 samples, 0.32%)</title><rect x="1127.8" y="515.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1130.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (5,354 samples, 2.88%)</title><rect x="1131.6" y="547.0" width="33.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1134.6" y="558.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (5,354 samples, 2.88%)</title><rect x="1131.6" y="531.0" width="33.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1134.6" y="542.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (873 samples, 0.47%)</title><rect x="1165.5" y="547.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (873 samples, 0.47%)</title><rect x="1165.5" y="531.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (873 samples, 0.47%)</title><rect x="1165.5" y="515.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (873 samples, 0.47%)</title><rect x="1165.5" y="499.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1168.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (873 samples, 0.47%)</title><rect x="1165.5" y="483.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (873 samples, 0.47%)</title><rect x="1165.5" y="467.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1168.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (43 samples, 0.02%)</title><rect x="1171.0" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (43 samples, 0.02%)</title><rect x="1171.0" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (43 samples, 0.02%)</title><rect x="1171.0" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (43 samples, 0.02%)</title><rect x="1171.0" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (43 samples, 0.02%)</title><rect x="1171.0" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (43 samples, 0.02%)</title><rect x="1171.0" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1174.0" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,949 samples, 1.58%)</title><rect x="1171.3" y="563.0" width="18.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1174.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,949 samples, 1.58%)</title><rect x="1171.3" y="547.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1174.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,949 samples, 1.58%)</title><rect x="1171.3" y="531.0" width="18.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,949 samples, 1.58%)</title><rect x="1171.3" y="515.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,949 samples, 1.58%)</title><rect x="1171.3" y="499.0" width="18.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,949 samples, 1.58%)</title><rect x="1171.3" y="483.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1174.3" y="494.0"></text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (2,949 samples, 1.58%)</title><rect x="1171.3" y="467.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1174.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (2,949 samples, 1.58%)</title><rect x="1171.3" y="451.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1174.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (2,949 samples, 1.58%)</title><rect x="1171.3" y="435.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1174.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (2,949 samples, 1.58%)</title><rect x="1171.3" y="419.0" width="18.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,949 samples, 1.58%)</title><rect x="1171.3" y="403.0" width="18.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2,949 samples, 1.58%)</title><rect x="1171.3" y="387.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1174.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2,949 samples, 1.58%)</title><rect x="1171.3" y="371.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2,949 samples, 1.58%)</title><rect x="1171.3" y="355.0" width="18.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,949 samples, 1.58%)</title><rect x="1171.3" y="339.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1174.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,949 samples, 1.58%)</title><rect x="1171.3" y="323.0" width="18.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,949 samples, 1.58%)</title><rect x="1171.3" y="307.0" width="18.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1174.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,949 samples, 1.58%)</title><rect x="1171.3" y="291.0" width="18.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1174.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,949 samples, 1.58%)</title><rect x="1171.3" y="275.0" width="18.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1174.3" y="286.0"></text>
</g>
</g>
</svg>
