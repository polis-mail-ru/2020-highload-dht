<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (73,823 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (62,082 samples, 84.10%)</title><rect x="10.0" y="563.0" width="992.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (62,082 samples, 84.10%)</title><rect x="10.0" y="547.0" width="992.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (62,082 samples, 84.10%)</title><rect x="10.0" y="531.0" width="992.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (23,376 samples, 31.66%)</title><rect x="10.0" y="515.0" width="373.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncSupply...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (23,376 samples, 31.66%)</title><rect x="10.0" y="499.0" width="373.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (23,352 samples, 31.63%)</title><rect x="10.0" y="483.0" width="373.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableFuture$UniCompose.t..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/1728467356.apply (23,352 samples, 31.63%)</title><rect x="10.0" y="467.0" width="373.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$200/172..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (23,352 samples, 31.63%)</title><rect x="10.0" y="451.0" width="373.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/MultiExchange.lambda$response..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (23,352 samples, 31.63%)</title><rect x="10.0" y="435.0" width="373.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/MultiExchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (17,386 samples, 23.55%)</title><rect x="10.0" y="419.0" width="277.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net/http/Exchange.respon..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (17,386 samples, 23.55%)</title><rect x="10.0" y="403.0" width="277.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Exchange.respon..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (17,386 samples, 23.55%)</title><rect x="10.0" y="387.0" width="277.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Exchange.respon..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (17,105 samples, 23.17%)</title><rect x="10.0" y="371.0" width="273.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (17,105 samples, 23.17%)</title><rect x="10.0" y="355.0" width="273.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (17,105 samples, 23.17%)</title><rect x="10.0" y="339.0" width="273.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1197842853.apply (17,105 samples, 23.17%)</title><rect x="10.0" y="323.0" width="273.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net/http/Exchange$$Lambd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (17,105 samples, 23.17%)</title><rect x="10.0" y="307.0" width="273.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/net/http/Exchange.lambda..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (17,105 samples, 23.17%)</title><rect x="10.0" y="291.0" width="273.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/net/http/Exchange.checkF..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.apply (17,105 samples, 23.17%)</title><rect x="10.0" y="275.0" width="273.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net/http/Exchange$$Lambd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (17,105 samples, 23.17%)</title><rect x="10.0" y="259.0" width="273.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net/http/Exchange.lambda..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (17,105 samples, 23.17%)</title><rect x="10.0" y="243.0" width="273.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net/http/Http1Exchange.s..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17,105 samples, 23.17%)</title><rect x="10.0" y="227.0" width="273.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (17,105 samples, 23.17%)</title><rect x="10.0" y="211.0" width="273.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$380/136395083.apply (17,105 samples, 23.17%)</title><rect x="10.0" y="195.0" width="273.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/net/http/Http1Exchange$$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (17,105 samples, 23.17%)</title><rect x="10.0" y="179.0" width="273.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/net/http/Http1Exchange.l..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (17,105 samples, 23.17%)</title><rect x="10.0" y="163.0" width="273.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/net/http/Http1Exchange.c..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (17,105 samples, 23.17%)</title><rect x="10.0" y="147.0" width="273.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/net/http/SocketTube.conn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2,204 samples, 2.99%)</title><rect x="10.0" y="131.0" width="35.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="142.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2,204 samples, 2.99%)</title><rect x="10.0" y="115.0" width="35.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="126.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2,204 samples, 2.99%)</title><rect x="10.0" y="99.0" width="35.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="110.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,204 samples, 2.99%)</title><rect x="10.0" y="83.0" width="35.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="94.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,204 samples, 2.99%)</title><rect x="10.0" y="67.0" width="35.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="78.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,818 samples, 2.46%)</title><rect x="10.0" y="51.0" width="29.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.0" y="62.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (386 samples, 0.52%)</title><rect x="39.1" y="51.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (386 samples, 0.52%)</title><rect x="39.1" y="35.0" width="6.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="42.1" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (14,901 samples, 20.18%)</title><rect x="45.2" y="131.0" width="238.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.2" y="142.0">jdk/internal/net/http/SocketTube..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (14,901 samples, 20.18%)</title><rect x="45.2" y="115.0" width="238.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.2" y="126.0">jdk/internal/net/http/SocketTube..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (14,901 samples, 20.18%)</title><rect x="45.2" y="99.0" width="238.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.2" y="110.0">jdk/internal/net/http/SocketTube..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (14,901 samples, 20.18%)</title><rect x="45.2" y="83.0" width="238.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.2" y="94.0">jdk/internal/net/http/HttpClient..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (14,901 samples, 20.18%)</title><rect x="45.2" y="67.0" width="238.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.2" y="78.0">jdk/internal/net/http/HttpClient..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (14,174 samples, 19.20%)</title><rect x="45.2" y="51.0" width="226.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="48.2" y="62.0">jdk.internal.net.http.HttpClie..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (727 samples, 0.98%)</title><rect x="271.8" y="51.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.8" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (727 samples, 0.98%)</title><rect x="271.8" y="35.0" width="11.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="274.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (281 samples, 0.38%)</title><rect x="283.4" y="371.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (281 samples, 0.38%)</title><rect x="283.4" y="355.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (281 samples, 0.38%)</title><rect x="283.4" y="339.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (281 samples, 0.38%)</title><rect x="283.4" y="323.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (279 samples, 0.38%)</title><rect x="283.4" y="307.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (279 samples, 0.38%)</title><rect x="283.4" y="291.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (279 samples, 0.38%)</title><rect x="283.4" y="275.0" width="4.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="286.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (5,927 samples, 8.03%)</title><rect x="287.9" y="419.0" width="94.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.9" y="430.0">jdk/interna..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (4,741 samples, 6.42%)</title><rect x="287.9" y="403.0" width="75.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="290.9" y="414.0">jdk.inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (1,186 samples, 1.61%)</title><rect x="363.7" y="403.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,186 samples, 1.61%)</title><rect x="363.7" y="387.0" width="18.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (1,186 samples, 1.61%)</title><rect x="363.7" y="371.0" width="18.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="366.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (39 samples, 0.05%)</title><rect x="382.6" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (39 samples, 0.05%)</title><rect x="382.6" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (35 samples, 0.05%)</title><rect x="382.7" y="387.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="385.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (35 samples, 0.05%)</title><rect x="382.7" y="371.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="385.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (24 samples, 0.03%)</title><rect x="383.3" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (24 samples, 0.03%)</title><rect x="383.3" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.accept (24 samples, 0.03%)</title><rect x="383.3" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (24 samples, 0.03%)</title><rect x="383.3" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (24 samples, 0.03%)</title><rect x="383.3" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (24 samples, 0.03%)</title><rect x="383.3" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.3" y="414.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (24 samples, 0.03%)</title><rect x="383.3" y="387.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="386.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (196 samples, 0.27%)</title><rect x="383.6" y="515.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (196 samples, 0.27%)</title><rect x="383.6" y="499.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (196 samples, 0.27%)</title><rect x="383.6" y="483.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (196 samples, 0.27%)</title><rect x="383.6" y="467.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (196 samples, 0.27%)</title><rect x="383.6" y="451.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (196 samples, 0.27%)</title><rect x="383.6" y="435.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.accept (196 samples, 0.27%)</title><rect x="383.6" y="419.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (196 samples, 0.27%)</title><rect x="383.6" y="403.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (196 samples, 0.27%)</title><rect x="383.6" y="387.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (196 samples, 0.27%)</title><rect x="383.6" y="371.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (196 samples, 0.27%)</title><rect x="383.6" y="355.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (196 samples, 0.27%)</title><rect x="383.6" y="339.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (196 samples, 0.27%)</title><rect x="383.6" y="323.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (196 samples, 0.27%)</title><rect x="383.6" y="307.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (195 samples, 0.26%)</title><rect x="383.6" y="291.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (195 samples, 0.26%)</title><rect x="383.6" y="275.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (195 samples, 0.26%)</title><rect x="383.6" y="259.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (195 samples, 0.26%)</title><rect x="383.6" y="243.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (195 samples, 0.26%)</title><rect x="383.6" y="227.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (195 samples, 0.26%)</title><rect x="383.6" y="211.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (195 samples, 0.26%)</title><rect x="383.6" y="195.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (195 samples, 0.26%)</title><rect x="383.6" y="179.0" width="3.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="386.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6,662 samples, 9.02%)</title><rect x="386.8" y="515.0" width="106.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="389.8" y="526.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3,292 samples, 4.46%)</title><rect x="386.8" y="499.0" width="52.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.8" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (773 samples, 1.05%)</title><rect x="386.8" y="483.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (773 samples, 1.05%)</title><rect x="386.8" y="467.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (773 samples, 1.05%)</title><rect x="386.8" y="451.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (773 samples, 1.05%)</title><rect x="386.8" y="435.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (773 samples, 1.05%)</title><rect x="386.8" y="419.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (773 samples, 1.05%)</title><rect x="386.8" y="403.0" width="12.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="389.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,519 samples, 3.41%)</title><rect x="399.2" y="483.0" width="40.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.2" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,519 samples, 3.41%)</title><rect x="399.2" y="467.0" width="40.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.2" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,519 samples, 3.41%)</title><rect x="399.2" y="451.0" width="40.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.2" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,519 samples, 3.41%)</title><rect x="399.2" y="435.0" width="40.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.2" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,519 samples, 3.41%)</title><rect x="399.2" y="419.0" width="40.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.2" y="430.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,519 samples, 3.41%)</title><rect x="399.2" y="403.0" width="40.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.2" y="414.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,519 samples, 3.41%)</title><rect x="399.2" y="387.0" width="40.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="402.2" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,369 samples, 4.56%)</title><rect x="439.4" y="499.0" width="53.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.4" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (461 samples, 0.62%)</title><rect x="439.4" y="483.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (461 samples, 0.62%)</title><rect x="439.4" y="467.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (461 samples, 0.62%)</title><rect x="439.4" y="451.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (461 samples, 0.62%)</title><rect x="439.4" y="435.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (461 samples, 0.62%)</title><rect x="439.4" y="419.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (461 samples, 0.62%)</title><rect x="439.4" y="403.0" width="7.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="442.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,908 samples, 3.94%)</title><rect x="446.8" y="483.0" width="46.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.8" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,908 samples, 3.94%)</title><rect x="446.8" y="467.0" width="46.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.8" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,908 samples, 3.94%)</title><rect x="446.8" y="451.0" width="46.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.8" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,908 samples, 3.94%)</title><rect x="446.8" y="435.0" width="46.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.8" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,908 samples, 3.94%)</title><rect x="446.8" y="419.0" width="46.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.8" y="430.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,908 samples, 3.94%)</title><rect x="446.8" y="403.0" width="46.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.8" y="414.0">jdk/..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,908 samples, 3.94%)</title><rect x="446.8" y="387.0" width="46.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="449.8" y="398.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (30,822 samples, 41.75%)</title><rect x="493.3" y="515.0" width="492.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.3" y="526.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (30,822 samples, 41.75%)</title><rect x="493.3" y="499.0" width="492.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.3" y="510.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRestartable..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (14,350 samples, 19.44%)</title><rect x="493.3" y="483.0" width="229.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.3" y="494.0">jdk/internal/net/http/common/S..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (14,350 samples, 19.44%)</title><rect x="493.3" y="467.0" width="229.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.3" y="478.0">jdk/internal/net/http/Http1Asy..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (14,350 samples, 19.44%)</title><rect x="493.3" y="451.0" width="229.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.3" y="462.0">jdk/internal/net/http/Http1Asy..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (13,251 samples, 17.95%)</title><rect x="493.3" y="435.0" width="211.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.3" y="446.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (13,251 samples, 17.95%)</title><rect x="493.3" y="419.0" width="211.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.3" y="430.0">jdk/internal/net/http/Http1A..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (13,251 samples, 17.95%)</title><rect x="493.3" y="403.0" width="211.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.3" y="414.0">jdk/internal/net/http/Socket..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (13,251 samples, 17.95%)</title><rect x="493.3" y="387.0" width="211.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.3" y="398.0">jdk/internal/net/http/Socket..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13,251 samples, 17.95%)</title><rect x="493.3" y="371.0" width="211.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.3" y="382.0">jdk/internal/net/http/Socket..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (13,251 samples, 17.95%)</title><rect x="493.3" y="355.0" width="211.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.3" y="366.0">jdk/internal/net/http/Socket..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (13,251 samples, 17.95%)</title><rect x="493.3" y="339.0" width="211.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.3" y="350.0">jdk/internal/net/http/HttpCl..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (13,251 samples, 17.95%)</title><rect x="493.3" y="323.0" width="211.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.3" y="334.0">jdk/internal/net/http/HttpCl..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13,251 samples, 17.95%)</title><rect x="493.3" y="307.0" width="211.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.3" y="318.0">jdk/internal/net/http/HttpCl..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,797 samples, 17.33%)</title><rect x="493.3" y="291.0" width="204.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="496.3" y="302.0">jdk.internal.net.http.HttpC..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (454 samples, 0.61%)</title><rect x="697.8" y="291.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.8" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (454 samples, 0.61%)</title><rect x="697.8" y="275.0" width="7.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="700.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,099 samples, 1.49%)</title><rect x="705.1" y="435.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,099 samples, 1.49%)</title><rect x="705.1" y="419.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,099 samples, 1.49%)</title><rect x="705.1" y="403.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,099 samples, 1.49%)</title><rect x="705.1" y="387.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,099 samples, 1.49%)</title><rect x="705.1" y="371.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,099 samples, 1.49%)</title><rect x="705.1" y="355.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,099 samples, 1.49%)</title><rect x="705.1" y="339.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,099 samples, 1.49%)</title><rect x="705.1" y="323.0" width="17.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,099 samples, 1.49%)</title><rect x="705.1" y="307.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,099 samples, 1.49%)</title><rect x="705.1" y="291.0" width="17.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,099 samples, 1.49%)</title><rect x="705.1" y="275.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,099 samples, 1.49%)</title><rect x="705.1" y="259.0" width="17.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,099 samples, 1.49%)</title><rect x="705.1" y="243.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (75 samples, 0.10%)</title><rect x="705.1" y="227.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$384/1609426679.apply (75 samples, 0.10%)</title><rect x="705.1" y="211.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="708.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (75 samples, 0.10%)</title><rect x="705.1" y="195.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (75 samples, 0.10%)</title><rect x="705.1" y="179.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (75 samples, 0.10%)</title><rect x="705.1" y="163.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (75 samples, 0.10%)</title><rect x="705.1" y="147.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.1" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (75 samples, 0.10%)</title><rect x="705.1" y="131.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="708.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,024 samples, 1.39%)</title><rect x="706.3" y="227.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,024 samples, 1.39%)</title><rect x="706.3" y="211.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$385/1826212424.apply (1,024 samples, 1.39%)</title><rect x="706.3" y="195.0" width="16.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1,024 samples, 1.39%)</title><rect x="706.3" y="179.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1,024 samples, 1.39%)</title><rect x="706.3" y="163.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1,024 samples, 1.39%)</title><rect x="706.3" y="147.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,024 samples, 1.39%)</title><rect x="706.3" y="131.0" width="16.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="709.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (16,472 samples, 22.31%)</title><rect x="722.7" y="483.0" width="263.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.7" y="494.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16,472 samples, 22.31%)</title><rect x="722.7" y="467.0" width="263.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.7" y="478.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (16,472 samples, 22.31%)</title><rect x="722.7" y="451.0" width="263.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.7" y="462.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (16,472 samples, 22.31%)</title><rect x="722.7" y="435.0" width="263.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.7" y="446.0">jdk/internal/net/http/Http1AsyncRec..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (16,472 samples, 22.31%)</title><rect x="722.7" y="419.0" width="263.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.7" y="430.0">jdk/internal/net/http/Http1AsyncRec..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (16,397 samples, 22.21%)</title><rect x="722.7" y="403.0" width="262.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.7" y="414.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (16,397 samples, 22.21%)</title><rect x="722.7" y="387.0" width="262.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.7" y="398.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (16,397 samples, 22.21%)</title><rect x="722.7" y="371.0" width="262.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.7" y="382.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (16,397 samples, 22.21%)</title><rect x="722.7" y="355.0" width="262.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.7" y="366.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (16,397 samples, 22.21%)</title><rect x="722.7" y="339.0" width="262.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.7" y="350.0">jdk/internal/net/http/ResponseConte..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (16,397 samples, 22.21%)</title><rect x="722.7" y="323.0" width="262.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.7" y="334.0">jdk/internal/net/http/ResponseConte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1005240389.run (16,397 samples, 22.21%)</title><rect x="722.7" y="307.0" width="262.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.7" y="318.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (16,397 samples, 22.21%)</title><rect x="722.7" y="291.0" width="262.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.7" y="302.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (16,397 samples, 22.21%)</title><rect x="722.7" y="275.0" width="262.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.7" y="286.0">jdk/internal/net/http/HttpConnectio..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (16,397 samples, 22.21%)</title><rect x="722.7" y="259.0" width="262.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.7" y="270.0">jdk/internal/net/http/ConnectionPoo..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (16,397 samples, 22.21%)</title><rect x="722.7" y="243.0" width="262.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.7" y="254.0">jdk/internal/net/http/ConnectionPoo..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (604 samples, 0.82%)</title><rect x="722.7" y="227.0" width="9.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="725.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (15,793 samples, 21.39%)</title><rect x="732.3" y="227.0" width="252.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.3" y="238.0">jdk/internal/net/http/ConnectionPo..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (15,793 samples, 21.39%)</title><rect x="732.3" y="211.0" width="252.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.3" y="222.0">jdk/internal/net/http/SocketTube.c..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,828 samples, 2.48%)</title><rect x="732.3" y="195.0" width="29.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.3" y="206.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,828 samples, 2.48%)</title><rect x="732.3" y="179.0" width="29.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.3" y="190.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,828 samples, 2.48%)</title><rect x="732.3" y="163.0" width="29.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.3" y="174.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,828 samples, 2.48%)</title><rect x="732.3" y="147.0" width="29.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.3" y="158.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,828 samples, 2.48%)</title><rect x="732.3" y="131.0" width="29.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.3" y="142.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,630 samples, 2.21%)</title><rect x="732.3" y="115.0" width="26.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="735.3" y="126.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (198 samples, 0.27%)</title><rect x="758.4" y="115.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.4" y="126.0"></text>
</g>
<g>
<title>java.lang.Object (198 samples, 0.27%)</title><rect x="758.4" y="99.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="761.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (13,965 samples, 18.92%)</title><rect x="761.5" y="195.0" width="223.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.5" y="206.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (13,965 samples, 18.92%)</title><rect x="761.5" y="179.0" width="223.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.5" y="190.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (13,965 samples, 18.92%)</title><rect x="761.5" y="163.0" width="223.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.5" y="174.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (13,965 samples, 18.92%)</title><rect x="761.5" y="147.0" width="223.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.5" y="158.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13,965 samples, 18.92%)</title><rect x="761.5" y="131.0" width="223.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.5" y="142.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (13,724 samples, 18.59%)</title><rect x="761.5" y="115.0" width="219.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="764.5" y="126.0">jdk.internal.net.http.HttpCli..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (241 samples, 0.33%)</title><rect x="980.9" y="115.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object (241 samples, 0.33%)</title><rect x="980.9" y="99.0" width="3.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="983.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (75 samples, 0.10%)</title><rect x="984.8" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (75 samples, 0.10%)</title><rect x="984.8" y="387.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (75 samples, 0.10%)</title><rect x="984.8" y="371.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="987.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (75 samples, 0.10%)</title><rect x="984.8" y="355.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (75 samples, 0.10%)</title><rect x="984.8" y="339.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (75 samples, 0.10%)</title><rect x="984.8" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (75 samples, 0.10%)</title><rect x="984.8" y="307.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="987.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (75 samples, 0.10%)</title><rect x="984.8" y="291.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (75 samples, 0.10%)</title><rect x="984.8" y="275.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="987.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (75 samples, 0.10%)</title><rect x="984.8" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="987.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (75 samples, 0.10%)</title><rect x="984.8" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (75 samples, 0.10%)</title><rect x="984.8" y="227.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (75 samples, 0.10%)</title><rect x="984.8" y="211.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="987.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (67 samples, 0.09%)</title><rect x="984.9" y="195.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (67 samples, 0.09%)</title><rect x="984.9" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$385/1826212424.apply (67 samples, 0.09%)</title><rect x="984.9" y="163.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (67 samples, 0.09%)</title><rect x="984.9" y="147.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (67 samples, 0.09%)</title><rect x="984.9" y="131.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (67 samples, 0.09%)</title><rect x="984.9" y="115.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="987.9" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (67 samples, 0.09%)</title><rect x="984.9" y="99.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="987.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.run (1,024 samples, 1.39%)</title><rect x="986.0" y="515.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (1,024 samples, 1.39%)</title><rect x="986.0" y="499.0" width="16.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="989.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (362 samples, 0.49%)</title><rect x="986.0" y="483.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (362 samples, 0.49%)</title><rect x="986.0" y="467.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (362 samples, 0.49%)</title><rect x="986.0" y="451.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="989.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (362 samples, 0.49%)</title><rect x="986.0" y="435.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (362 samples, 0.49%)</title><rect x="986.0" y="419.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (362 samples, 0.49%)</title><rect x="986.0" y="403.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="989.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (362 samples, 0.49%)</title><rect x="986.0" y="387.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (362 samples, 0.49%)</title><rect x="986.0" y="371.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (362 samples, 0.49%)</title><rect x="986.0" y="355.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (362 samples, 0.49%)</title><rect x="986.0" y="339.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (362 samples, 0.49%)</title><rect x="986.0" y="323.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="989.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (362 samples, 0.49%)</title><rect x="986.0" y="307.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="989.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (362 samples, 0.49%)</title><rect x="986.0" y="291.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (362 samples, 0.49%)</title><rect x="986.0" y="275.0" width="5.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="989.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (662 samples, 0.90%)</title><rect x="991.7" y="483.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (662 samples, 0.90%)</title><rect x="991.7" y="467.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (662 samples, 0.90%)</title><rect x="991.7" y="451.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="994.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (143 samples, 0.19%)</title><rect x="991.7" y="435.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (143 samples, 0.19%)</title><rect x="991.7" y="419.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (143 samples, 0.19%)</title><rect x="991.7" y="403.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (143 samples, 0.19%)</title><rect x="991.7" y="387.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (143 samples, 0.19%)</title><rect x="991.7" y="371.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (143 samples, 0.19%)</title><rect x="991.7" y="355.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (143 samples, 0.19%)</title><rect x="991.7" y="339.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (143 samples, 0.19%)</title><rect x="991.7" y="323.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="994.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (81 samples, 0.11%)</title><rect x="991.7" y="307.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (81 samples, 0.11%)</title><rect x="991.7" y="291.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (81 samples, 0.11%)</title><rect x="991.7" y="275.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (81 samples, 0.11%)</title><rect x="991.7" y="259.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (81 samples, 0.11%)</title><rect x="991.7" y="243.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (81 samples, 0.11%)</title><rect x="991.7" y="227.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (81 samples, 0.11%)</title><rect x="991.7" y="211.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (81 samples, 0.11%)</title><rect x="991.7" y="195.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="994.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (62 samples, 0.08%)</title><rect x="993.0" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (62 samples, 0.08%)</title><rect x="993.0" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (62 samples, 0.08%)</title><rect x="993.0" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="996.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (62 samples, 0.08%)</title><rect x="993.0" y="259.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="996.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 0.08%)</title><rect x="993.0" y="243.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 0.08%)</title><rect x="993.0" y="227.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (62 samples, 0.08%)</title><rect x="993.0" y="211.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="996.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$596/955395010.handleLocalResponse (519 samples, 0.70%)</title><rect x="994.0" y="435.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$1 (519 samples, 0.70%)</title><rect x="994.0" y="419.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.get (519 samples, 0.70%)</title><rect x="994.0" y="403.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="997.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (519 samples, 0.70%)</title><rect x="994.0" y="387.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (519 samples, 0.70%)</title><rect x="994.0" y="371.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (519 samples, 0.70%)</title><rect x="994.0" y="355.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (519 samples, 0.70%)</title><rect x="994.0" y="339.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (519 samples, 0.70%)</title><rect x="994.0" y="323.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="997.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (519 samples, 0.70%)</title><rect x="994.0" y="307.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (519 samples, 0.70%)</title><rect x="994.0" y="291.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (519 samples, 0.70%)</title><rect x="994.0" y="275.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (519 samples, 0.70%)</title><rect x="994.0" y="259.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (519 samples, 0.70%)</title><rect x="994.0" y="243.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (519 samples, 0.70%)</title><rect x="994.0" y="227.0" width="8.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="997.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (544 samples, 0.74%)</title><rect x="1002.3" y="563.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (544 samples, 0.74%)</title><rect x="1002.3" y="547.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (544 samples, 0.74%)</title><rect x="1002.3" y="531.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (544 samples, 0.74%)</title><rect x="1002.3" y="515.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (544 samples, 0.74%)</title><rect x="1002.3" y="499.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (544 samples, 0.74%)</title><rect x="1002.3" y="483.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1005.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (544 samples, 0.74%)</title><rect x="1002.3" y="467.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (544 samples, 0.74%)</title><rect x="1002.3" y="451.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (544 samples, 0.74%)</title><rect x="1002.3" y="435.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (544 samples, 0.74%)</title><rect x="1002.3" y="419.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (544 samples, 0.74%)</title><rect x="1002.3" y="403.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (544 samples, 0.74%)</title><rect x="1002.3" y="387.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (544 samples, 0.74%)</title><rect x="1002.3" y="371.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (544 samples, 0.74%)</title><rect x="1002.3" y="355.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (544 samples, 0.74%)</title><rect x="1002.3" y="339.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1005.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (544 samples, 0.74%)</title><rect x="1002.3" y="323.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1005.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (544 samples, 0.74%)</title><rect x="1002.3" y="307.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (544 samples, 0.74%)</title><rect x="1002.3" y="291.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (544 samples, 0.74%)</title><rect x="1002.3" y="275.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (544 samples, 0.74%)</title><rect x="1002.3" y="259.0" width="8.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1005.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (10,131 samples, 13.72%)</title><rect x="1011.0" y="563.0" width="162.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1014.0" y="574.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (105 samples, 0.14%)</title><rect x="1011.0" y="547.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$389/894063145.accept (105 samples, 0.14%)</title><rect x="1011.0" y="531.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (105 samples, 0.14%)</title><rect x="1011.0" y="515.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1014.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (105 samples, 0.14%)</title><rect x="1011.0" y="499.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (105 samples, 0.14%)</title><rect x="1011.0" y="483.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (105 samples, 0.14%)</title><rect x="1011.0" y="467.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (105 samples, 0.14%)</title><rect x="1011.0" y="451.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (105 samples, 0.14%)</title><rect x="1011.0" y="435.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (105 samples, 0.14%)</title><rect x="1011.0" y="419.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (105 samples, 0.14%)</title><rect x="1011.0" y="403.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (105 samples, 0.14%)</title><rect x="1011.0" y="387.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1014.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (105 samples, 0.14%)</title><rect x="1011.0" y="371.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (105 samples, 0.14%)</title><rect x="1011.0" y="355.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1014.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (105 samples, 0.14%)</title><rect x="1011.0" y="339.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (105 samples, 0.14%)</title><rect x="1011.0" y="323.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (105 samples, 0.14%)</title><rect x="1011.0" y="307.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (105 samples, 0.14%)</title><rect x="1011.0" y="291.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1014.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (105 samples, 0.14%)</title><rect x="1011.0" y="275.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (105 samples, 0.14%)</title><rect x="1011.0" y="259.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1014.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (105 samples, 0.14%)</title><rect x="1011.0" y="243.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (105 samples, 0.14%)</title><rect x="1011.0" y="227.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (102 samples, 0.14%)</title><rect x="1011.0" y="211.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (102 samples, 0.14%)</title><rect x="1011.0" y="195.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (102 samples, 0.14%)</title><rect x="1011.0" y="179.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (102 samples, 0.14%)</title><rect x="1011.0" y="163.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (102 samples, 0.14%)</title><rect x="1011.0" y="147.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (102 samples, 0.14%)</title><rect x="1011.0" y="131.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (102 samples, 0.14%)</title><rect x="1011.0" y="115.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.0" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (102 samples, 0.14%)</title><rect x="1011.0" y="99.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1014.0" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (7,382 samples, 10.00%)</title><rect x="1012.7" y="547.0" width="118.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1015.7" y="558.0">jdk.internal.n..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (153 samples, 0.21%)</title><rect x="1130.7" y="547.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$292/1483596319.run (40 samples, 0.05%)</title><rect x="1130.7" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (40 samples, 0.05%)</title><rect x="1130.7" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.05%)</title><rect x="1130.7" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.05%)</title><rect x="1130.7" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (40 samples, 0.05%)</title><rect x="1130.7" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (40 samples, 0.05%)</title><rect x="1130.7" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (40 samples, 0.05%)</title><rect x="1130.7" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (40 samples, 0.05%)</title><rect x="1130.7" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (40 samples, 0.05%)</title><rect x="1130.7" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (40 samples, 0.05%)</title><rect x="1130.7" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (40 samples, 0.05%)</title><rect x="1130.7" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.05%)</title><rect x="1130.7" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.05%)</title><rect x="1130.7" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (40 samples, 0.05%)</title><rect x="1130.7" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (40 samples, 0.05%)</title><rect x="1130.7" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (40 samples, 0.05%)</title><rect x="1130.7" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (27 samples, 0.04%)</title><rect x="1130.7" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1133.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (27 samples, 0.04%)</title><rect x="1130.7" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (27 samples, 0.04%)</title><rect x="1130.7" y="243.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (27 samples, 0.04%)</title><rect x="1130.7" y="227.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (27 samples, 0.04%)</title><rect x="1130.7" y="211.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 0.04%)</title><rect x="1130.7" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (27 samples, 0.04%)</title><rect x="1130.7" y="179.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (27 samples, 0.04%)</title><rect x="1130.7" y="163.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1133.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$302/1986808666.run (113 samples, 0.15%)</title><rect x="1131.3" y="531.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (113 samples, 0.15%)</title><rect x="1131.3" y="515.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (113 samples, 0.15%)</title><rect x="1131.3" y="499.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (113 samples, 0.15%)</title><rect x="1131.3" y="483.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (113 samples, 0.15%)</title><rect x="1131.3" y="467.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (93 samples, 0.13%)</title><rect x="1131.3" y="451.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (93 samples, 0.13%)</title><rect x="1131.3" y="435.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (93 samples, 0.13%)</title><rect x="1131.3" y="419.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (93 samples, 0.13%)</title><rect x="1131.3" y="403.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (93 samples, 0.13%)</title><rect x="1131.3" y="387.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (93 samples, 0.13%)</title><rect x="1131.3" y="371.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (93 samples, 0.13%)</title><rect x="1131.3" y="355.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (93 samples, 0.13%)</title><rect x="1131.3" y="339.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1134.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (20 samples, 0.03%)</title><rect x="1132.8" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (20 samples, 0.03%)</title><rect x="1132.8" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (20 samples, 0.03%)</title><rect x="1132.8" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1135.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (20 samples, 0.03%)</title><rect x="1132.8" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 0.03%)</title><rect x="1132.8" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1135.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.03%)</title><rect x="1132.8" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (20 samples, 0.03%)</title><rect x="1132.8" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1135.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (177 samples, 0.24%)</title><rect x="1133.1" y="547.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1136.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (177 samples, 0.24%)</title><rect x="1133.1" y="531.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (177 samples, 0.24%)</title><rect x="1133.1" y="515.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1136.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (2,014 samples, 2.73%)</title><rect x="1136.0" y="547.0" width="32.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.0" y="558.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (2,014 samples, 2.73%)</title><rect x="1136.0" y="531.0" width="32.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1139.0" y="542.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (279 samples, 0.38%)</title><rect x="1168.2" y="547.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1171.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (279 samples, 0.38%)</title><rect x="1168.2" y="531.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1171.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (279 samples, 0.38%)</title><rect x="1168.2" y="515.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (279 samples, 0.38%)</title><rect x="1168.2" y="499.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (279 samples, 0.38%)</title><rect x="1168.2" y="483.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.2" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (279 samples, 0.38%)</title><rect x="1168.2" y="467.0" width="4.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1171.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (21 samples, 0.03%)</title><rect x="1172.6" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (21 samples, 0.03%)</title><rect x="1172.6" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1175.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (21 samples, 0.03%)</title><rect x="1172.6" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (21 samples, 0.03%)</title><rect x="1172.6" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1175.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (21 samples, 0.03%)</title><rect x="1172.6" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (21 samples, 0.03%)</title><rect x="1172.6" y="467.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1175.6" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,066 samples, 1.44%)</title><rect x="1173.0" y="563.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,066 samples, 1.44%)</title><rect x="1173.0" y="547.0" width="17.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,066 samples, 1.44%)</title><rect x="1173.0" y="531.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,066 samples, 1.44%)</title><rect x="1173.0" y="515.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,066 samples, 1.44%)</title><rect x="1173.0" y="499.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,066 samples, 1.44%)</title><rect x="1173.0" y="483.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.0" y="494.0"></text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (1,066 samples, 1.44%)</title><rect x="1173.0" y="467.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (1,066 samples, 1.44%)</title><rect x="1173.0" y="451.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (1,066 samples, 1.44%)</title><rect x="1173.0" y="435.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1176.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (1,066 samples, 1.44%)</title><rect x="1173.0" y="419.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1176.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,066 samples, 1.44%)</title><rect x="1173.0" y="403.0" width="17.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,066 samples, 1.44%)</title><rect x="1173.0" y="387.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,066 samples, 1.44%)</title><rect x="1173.0" y="371.0" width="17.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,066 samples, 1.44%)</title><rect x="1173.0" y="355.0" width="17.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,066 samples, 1.44%)</title><rect x="1173.0" y="339.0" width="17.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,066 samples, 1.44%)</title><rect x="1173.0" y="323.0" width="17.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,066 samples, 1.44%)</title><rect x="1173.0" y="307.0" width="17.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1176.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,066 samples, 1.44%)</title><rect x="1173.0" y="291.0" width="17.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,066 samples, 1.44%)</title><rect x="1173.0" y="275.0" width="17.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1176.0" y="286.0"></text>
</g>
</g>
</svg>
