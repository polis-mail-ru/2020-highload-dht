<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (9,287 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (5,603 samples, 60.33%)</title><rect x="10.0" y="851.0" width="711.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (9 samples, 0.10%)</title><rect x="10.0" y="835.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (9 samples, 0.10%)</title><rect x="10.0" y="819.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1441707365.linkToTargetMethod (9 samples, 0.10%)</title><rect x="10.0" y="803.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1305497491.invoke (9 samples, 0.10%)</title><rect x="10.0" y="787.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.10%)</title><rect x="10.0" y="771.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (4 samples, 0.04%)</title><rect x="10.0" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="10.0" y="739.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.05%)</title><rect x="10.5" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.05%)</title><rect x="10.5" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.5" y="750.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="10.5" y="723.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="13.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5,594 samples, 60.23%)</title><rect x="11.1" y="835.0" width="710.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.1" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5,594 samples, 60.23%)</title><rect x="11.1" y="819.0" width="710.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.1" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,493 samples, 26.84%)</title><rect x="11.1" y="803.0" width="316.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.1" y="814.0">java/util/concurrent/CompletableFuture$Asyn..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,470 samples, 15.83%)</title><rect x="11.1" y="787.0" width="186.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.1" y="798.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (644 samples, 6.93%)</title><rect x="11.1" y="771.0" width="81.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.1" y="782.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (7 samples, 0.08%)</title><rect x="11.1" y="755.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="14.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/1728467356.apply (637 samples, 6.86%)</title><rect x="12.0" y="755.0" width="81.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.0" y="766.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (637 samples, 6.86%)</title><rect x="12.0" y="739.0" width="81.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.0" y="750.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (637 samples, 6.86%)</title><rect x="12.0" y="723.0" width="81.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.0" y="734.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9 samples, 0.10%)</title><rect x="12.2" y="707.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9 samples, 0.10%)</title><rect x="12.2" y="691.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.2" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (6 samples, 0.06%)</title><rect x="12.2" y="675.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="15.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="12.9" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="12.9" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.9" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.03%)</title><rect x="12.9" y="643.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="15.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (13 samples, 0.14%)</title><rect x="13.3" y="707.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (13 samples, 0.14%)</title><rect x="13.3" y="691.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (6 samples, 0.06%)</title><rect x="13.3" y="675.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="16.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="14.1" y="675.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="14.1" y="659.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.1" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.08%)</title><rect x="14.1" y="643.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="17.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (590 samples, 6.35%)</title><rect x="15.0" y="707.0" width="74.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.0" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (590 samples, 6.35%)</title><rect x="15.0" y="691.0" width="74.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.0" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (590 samples, 6.35%)</title><rect x="15.0" y="675.0" width="74.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.0" y="686.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="15.0" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="15.0" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$229/148200039.get$Lambda (2 samples, 0.02%)</title><rect x="15.0" y="627.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$229 (2 samples, 0.02%)</title><rect x="15.0" y="611.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="18.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (419 samples, 4.51%)</title><rect x="15.5" y="659.0" width="53.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.5" y="670.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (419 samples, 4.51%)</title><rect x="15.5" y="643.0" width="53.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.5" y="654.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (414 samples, 4.46%)</title><rect x="15.5" y="627.0" width="52.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.5" y="638.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1197842853.apply (414 samples, 4.46%)</title><rect x="15.5" y="611.0" width="52.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.5" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (414 samples, 4.46%)</title><rect x="15.5" y="595.0" width="52.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.5" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (414 samples, 4.46%)</title><rect x="15.5" y="579.0" width="52.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.5" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.apply (414 samples, 4.46%)</title><rect x="15.5" y="563.0" width="52.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.5" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (414 samples, 4.46%)</title><rect x="15.5" y="547.0" width="52.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.5" y="558.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6 samples, 0.06%)</title><rect x="15.6" y="531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6 samples, 0.06%)</title><rect x="15.6" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2 samples, 0.02%)</title><rect x="15.6" y="499.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="18.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.03%)</title><rect x="15.8" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$383/847257842.apply (3 samples, 0.03%)</title><rect x="15.8" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3 samples, 0.03%)</title><rect x="15.8" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.03%)</title><rect x="15.8" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$229/148200039.apply (3 samples, 0.03%)</title><rect x="15.8" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.03%)</title><rect x="15.8" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3 samples, 0.03%)</title><rect x="15.8" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (2 samples, 0.02%)</title><rect x="16.0" y="387.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (2 samples, 0.02%)</title><rect x="16.0" y="371.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (2 samples, 0.02%)</title><rect x="16.0" y="355.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="19.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.08%)</title><rect x="16.4" y="531.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.08%)</title><rect x="16.4" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (4 samples, 0.04%)</title><rect x="16.4" y="499.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="19.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="16.9" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="16.9" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.03%)</title><rect x="16.9" y="467.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="19.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (400 samples, 4.31%)</title><rect x="17.2" y="531.0" width="50.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.2" y="542.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="17.2" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="17.2" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$382/1279735055.get$Lambda (2 samples, 0.02%)</title><rect x="17.4" y="483.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$382 (2 samples, 0.02%)</title><rect x="17.4" y="467.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (335 samples, 3.61%)</title><rect x="17.6" y="515.0" width="42.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.6" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (335 samples, 3.61%)</title><rect x="17.6" y="499.0" width="42.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.6" y="510.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (5 samples, 0.05%)</title><rect x="17.6" y="483.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="20.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$380/136395083.apply (325 samples, 3.50%)</title><rect x="18.3" y="483.0" width="41.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.3" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (325 samples, 3.50%)</title><rect x="18.3" y="467.0" width="41.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.3" y="478.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="18.3" y="451.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="18.3" y="435.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$396/542042495.get$Lambda (2 samples, 0.02%)</title><rect x="18.3" y="419.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$396 (2 samples, 0.02%)</title><rect x="18.3" y="403.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="21.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.06%)</title><rect x="18.5" y="451.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.06%)</title><rect x="18.5" y="435.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="21.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.03%)</title><rect x="18.5" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="21.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="18.9" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="18.9" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.03%)</title><rect x="18.9" y="387.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="21.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.04%)</title><rect x="19.3" y="451.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="22.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.10%)</title><rect x="19.8" y="451.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (5 samples, 0.05%)</title><rect x="19.8" y="435.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="22.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.04%)</title><rect x="20.4" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.02%)</title><rect x="20.4" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.02%)</title><rect x="20.4" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.02%)</title><rect x="20.4" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (2 samples, 0.02%)</title><rect x="20.4" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.02%)</title><rect x="20.4" y="355.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="23.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="20.7" y="419.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="20.7" y="403.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.02%)</title><rect x="20.7" y="387.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.02%)</title><rect x="20.7" y="371.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.02%)</title><rect x="20.7" y="355.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.02%)</title><rect x="20.7" y="339.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2 samples, 0.02%)</title><rect x="20.7" y="323.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (6 samples, 0.06%)</title><rect x="20.9" y="451.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (6 samples, 0.06%)</title><rect x="20.9" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (3 samples, 0.03%)</title><rect x="20.9" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.03%)</title><rect x="20.9" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.03%)</title><rect x="20.9" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (3 samples, 0.03%)</title><rect x="20.9" y="371.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="23.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3 samples, 0.03%)</title><rect x="21.3" y="419.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3 samples, 0.03%)</title><rect x="21.3" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (2 samples, 0.02%)</title><rect x="21.3" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="24.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (298 samples, 3.21%)</title><rect x="21.7" y="451.0" width="37.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.7" y="462.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.03%)</title><rect x="21.7" y="435.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="24.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.toString (4 samples, 0.04%)</title><rect x="22.1" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.1" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="22.1" y="419.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="25.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="22.3" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="25.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.16%)</title><rect x="22.6" y="435.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.16%)</title><rect x="22.6" y="419.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (15 samples, 0.16%)</title><rect x="22.6" y="403.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.6" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.16%)</title><rect x="22.6" y="387.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="25.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.10%)</title><rect x="24.5" y="435.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.5" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.10%)</title><rect x="24.5" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.5" y="430.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="24.5" y="403.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="27.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (20 samples, 0.22%)</title><rect x="25.6" y="435.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.22%)</title><rect x="25.6" y="419.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.20%)</title><rect x="25.8" y="403.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.8" y="414.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.20%)</title><rect x="25.8" y="387.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="28.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.04%)</title><rect x="28.2" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.04%)</title><rect x="28.2" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.2" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.04%)</title><rect x="28.2" y="403.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="31.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.02%)</title><rect x="28.7" y="435.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.7" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.02%)</title><rect x="28.7" y="419.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="31.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (196 samples, 2.11%)</title><rect x="28.9" y="435.0" width="24.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.9" y="446.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (2 samples, 0.02%)</title><rect x="28.9" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="28.9" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="28.9" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.9" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$403/621187221.get$Lambda (2 samples, 0.02%)</title><rect x="28.9" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.9" y="382.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$403 (2 samples, 0.02%)</title><rect x="28.9" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="31.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (103 samples, 1.11%)</title><rect x="29.2" y="419.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (70 samples, 0.75%)</title><rect x="29.2" y="403.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.2" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (70 samples, 0.75%)</title><rect x="29.2" y="387.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.2" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (70 samples, 0.75%)</title><rect x="29.2" y="371.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (70 samples, 0.75%)</title><rect x="29.2" y="355.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.2" y="366.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.75%)</title><rect x="29.2" y="339.0" width="8.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="32.2" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (7 samples, 0.08%)</title><rect x="38.1" y="403.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.1" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (7 samples, 0.08%)</title><rect x="38.1" y="387.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.1" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (7 samples, 0.08%)</title><rect x="38.1" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.1" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (7 samples, 0.08%)</title><rect x="38.1" y="355.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="41.1" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (12 samples, 0.13%)</title><rect x="39.0" y="403.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.0" y="414.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (6 samples, 0.06%)</title><rect x="39.0" y="387.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="42.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (6 samples, 0.06%)</title><rect x="39.7" y="387.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (6 samples, 0.06%)</title><rect x="39.7" y="371.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="42.7" y="382.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$403/621187221.test (14 samples, 0.15%)</title><rect x="40.5" y="403.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.5" y="414.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (14 samples, 0.15%)</title><rect x="40.5" y="387.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1687662712.test (14 samples, 0.15%)</title><rect x="40.5" y="371.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (14 samples, 0.15%)</title><rect x="40.5" y="355.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.5" y="366.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1778081847.test (14 samples, 0.15%)</title><rect x="40.5" y="339.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.5" y="350.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (14 samples, 0.15%)</title><rect x="40.5" y="323.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/231786897.test (14 samples, 0.15%)</title><rect x="40.5" y="307.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (14 samples, 0.15%)</title><rect x="40.5" y="291.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.15%)</title><rect x="40.5" y="275.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.15%)</title><rect x="40.5" y="259.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.08%)</title><rect x="40.5" y="243.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="43.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.08%)</title><rect x="41.4" y="243.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.4" y="254.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="41.4" y="227.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="44.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (91 samples, 0.98%)</title><rect x="42.3" y="419.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (91 samples, 0.98%)</title><rect x="42.3" y="403.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (91 samples, 0.98%)</title><rect x="42.3" y="387.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.3" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (3 samples, 0.03%)</title><rect x="42.3" y="371.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="45.3" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.03%)</title><rect x="42.7" y="371.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="45.7" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.05%)</title><rect x="43.0" y="371.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="46.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.06%)</title><rect x="43.7" y="371.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.06%)</title><rect x="43.7" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="46.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.get$Lambda (6 samples, 0.06%)</title><rect x="43.7" y="339.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.7" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$168 (6 samples, 0.06%)</title><rect x="43.7" y="323.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="46.7" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (8 samples, 0.09%)</title><rect x="44.4" y="371.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.4" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (8 samples, 0.09%)</title><rect x="44.4" y="355.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="47.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (56 samples, 0.60%)</title><rect x="45.4" y="371.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (56 samples, 0.60%)</title><rect x="45.4" y="355.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (56 samples, 0.60%)</title><rect x="45.4" y="339.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.12%)</title><rect x="45.4" y="323.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.12%)</title><rect x="45.4" y="307.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.get$Lambda (11 samples, 0.12%)</title><rect x="45.4" y="291.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.4" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$177 (11 samples, 0.12%)</title><rect x="45.4" y="275.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="48.4" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12 samples, 0.13%)</title><rect x="46.8" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (12 samples, 0.13%)</title><rect x="46.8" y="307.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (12 samples, 0.13%)</title><rect x="46.8" y="291.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.13%)</title><rect x="46.8" y="275.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.8" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.13%)</title><rect x="46.8" y="259.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.8" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.13%)</title><rect x="46.8" y="243.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.13%)</title><rect x="46.8" y="227.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.8" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.13%)</title><rect x="46.8" y="211.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.8" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.13%)</title><rect x="46.8" y="195.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="49.8" y="206.0"></text>
</g>
<g>
<title>java/util/List.copyOf (20 samples, 0.22%)</title><rect x="48.4" y="323.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.4" y="334.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (20 samples, 0.22%)</title><rect x="48.4" y="307.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (8 samples, 0.09%)</title><rect x="48.4" y="291.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.09%)</title><rect x="48.4" y="275.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.09%)</title><rect x="48.4" y="259.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="51.4" y="270.0"></text>
</g>
<g>
<title>java/util/List.of (12 samples, 0.13%)</title><rect x="49.4" y="291.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.4" y="302.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (12 samples, 0.13%)</title><rect x="49.4" y="275.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="52.4" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (13 samples, 0.14%)</title><rect x="50.9" y="323.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (13 samples, 0.14%)</title><rect x="50.9" y="307.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="53.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (10 samples, 0.11%)</title><rect x="52.6" y="371.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap (10 samples, 0.11%)</title><rect x="52.6" y="355.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="55.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (8 samples, 0.09%)</title><rect x="53.8" y="435.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="54.0" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (7 samples, 0.08%)</title><rect x="54.0" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702940637.invoke (7 samples, 0.08%)</title><rect x="54.0" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="54.0" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.05%)</title><rect x="54.0" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.05%)</title><rect x="54.0" y="339.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="57.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.02%)</title><rect x="54.6" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.02%)</title><rect x="54.6" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.6" y="350.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="54.6" y="323.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="57.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (7 samples, 0.08%)</title><rect x="54.9" y="435.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (7 samples, 0.08%)</title><rect x="54.9" y="419.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="54.9" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (7 samples, 0.08%)</title><rect x="54.9" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702940637.invoke (7 samples, 0.08%)</title><rect x="54.9" y="371.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="54.9" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.02%)</title><rect x="54.9" y="339.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.9" y="350.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="54.9" y="323.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="57.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.05%)</title><rect x="55.1" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.05%)</title><rect x="55.1" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.1" y="334.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="55.1" y="307.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="58.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (30 samples, 0.32%)</title><rect x="55.7" y="435.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.7" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.12%)</title><rect x="55.7" y="419.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="58.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (10 samples, 0.11%)</title><rect x="57.1" y="419.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.11%)</title><rect x="57.1" y="403.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="60.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.10%)</title><rect x="58.4" y="419.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (9 samples, 0.10%)</title><rect x="58.4" y="403.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="61.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.05%)</title><rect x="59.6" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.05%)</title><rect x="59.6" y="467.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.05%)</title><rect x="59.6" y="451.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="62.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (8 samples, 0.09%)</title><rect x="60.2" y="515.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="63.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.09%)</title><rect x="61.2" y="515.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="64.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (46 samples, 0.50%)</title><rect x="62.2" y="515.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="62.2" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="62.2" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$341/983326260.get$Lambda (3 samples, 0.03%)</title><rect x="62.2" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$341 (3 samples, 0.03%)</title><rect x="62.2" y="451.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="65.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (5 samples, 0.05%)</title><rect x="62.7" y="499.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="65.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (3 samples, 0.03%)</title><rect x="63.4" y="499.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="66.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (6 samples, 0.06%)</title><rect x="63.7" y="499.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="66.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (16 samples, 0.17%)</title><rect x="64.5" y="499.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.17%)</title><rect x="64.5" y="483.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.17%)</title><rect x="64.5" y="467.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (16 samples, 0.17%)</title><rect x="64.5" y="451.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16 samples, 0.17%)</title><rect x="64.5" y="435.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (16 samples, 0.17%)</title><rect x="64.5" y="419.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (16 samples, 0.17%)</title><rect x="64.5" y="403.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (16 samples, 0.17%)</title><rect x="64.5" y="387.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (16 samples, 0.17%)</title><rect x="64.5" y="371.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="64.5" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="64.5" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (5 samples, 0.05%)</title><rect x="64.8" y="355.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="67.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (9 samples, 0.10%)</title><rect x="65.4" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (9 samples, 0.10%)</title><rect x="65.4" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (3 samples, 0.03%)</title><rect x="65.4" y="323.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="68.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (6 samples, 0.06%)</title><rect x="65.8" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (6 samples, 0.06%)</title><rect x="65.8" y="307.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="68.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (10 samples, 0.11%)</title><rect x="66.5" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.5" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.03%)</title><rect x="66.5" y="483.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="69.5" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap (3 samples, 0.03%)</title><rect x="66.9" y="483.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="69.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.04%)</title><rect x="67.3" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.3" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.04%)</title><rect x="67.3" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.3" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="67.3" y="451.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="70.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (2 samples, 0.02%)</title><rect x="67.8" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.02%)</title><rect x="67.8" y="483.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="70.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.05%)</title><rect x="68.1" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.05%)</title><rect x="68.1" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.05%)</title><rect x="68.1" y="595.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="71.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.05%)</title><rect x="68.7" y="659.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.05%)</title><rect x="68.7" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.04%)</title><rect x="68.8" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.04%)</title><rect x="68.8" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.04%)</title><rect x="68.8" y="595.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="71.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (162 samples, 1.74%)</title><rect x="69.3" y="659.0" width="20.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.10%)</title><rect x="69.3" y="643.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.10%)</title><rect x="69.3" y="627.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$329/106537356.get$Lambda (5 samples, 0.05%)</title><rect x="69.3" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$329 (5 samples, 0.05%)</title><rect x="69.3" y="595.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="72.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$331/981882798.get$Lambda (4 samples, 0.04%)</title><rect x="70.0" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$331 (4 samples, 0.04%)</title><rect x="70.0" y="595.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="73.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.10%)</title><rect x="70.5" y="643.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.10%)</title><rect x="70.5" y="627.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$331/981882798.apply (5 samples, 0.05%)</title><rect x="70.5" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (5 samples, 0.05%)</title><rect x="70.5" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (5 samples, 0.05%)</title><rect x="70.5" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.05%)</title><rect x="70.5" y="563.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="73.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.04%)</title><rect x="71.1" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.04%)</title><rect x="71.1" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.04%)</title><rect x="71.1" y="579.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="74.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (143 samples, 1.54%)</title><rect x="71.8" y="643.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (143 samples, 1.54%)</title><rect x="71.8" y="627.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (7 samples, 0.08%)</title><rect x="71.8" y="611.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="74.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (135 samples, 1.45%)</title><rect x="72.6" y="611.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.02%)</title><rect x="72.6" y="595.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="75.6" y="606.0"></text>
</g>
<g>
<title>java.util.LinkedList (3 samples, 0.03%)</title><rect x="72.9" y="595.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="75.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (3 samples, 0.03%)</title><rect x="73.3" y="595.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="76.3" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (9 samples, 0.10%)</title><rect x="73.7" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.7" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (9 samples, 0.10%)</title><rect x="73.7" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.7" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (9 samples, 0.10%)</title><rect x="73.7" y="563.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="76.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (8 samples, 0.09%)</title><rect x="74.8" y="595.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (7 samples, 0.08%)</title><rect x="75.8" y="595.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="78.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (8 samples, 0.09%)</title><rect x="76.7" y="595.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="79.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.09%)</title><rect x="77.7" y="595.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="80.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (47 samples, 0.51%)</title><rect x="78.7" y="595.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (4 samples, 0.04%)</title><rect x="78.7" y="579.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="81.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (3 samples, 0.03%)</title><rect x="79.2" y="579.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="82.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (3 samples, 0.03%)</title><rect x="79.6" y="579.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="82.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (3 samples, 0.03%)</title><rect x="80.0" y="579.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="83.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (3 samples, 0.03%)</title><rect x="80.5" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (3 samples, 0.03%)</title><rect x="80.5" y="563.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="83.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (4 samples, 0.04%)</title><rect x="80.9" y="579.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="83.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.04%)</title><rect x="81.4" y="579.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="84.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (22 samples, 0.24%)</title><rect x="81.9" y="579.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (3 samples, 0.03%)</title><rect x="81.9" y="563.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="84.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (8 samples, 0.09%)</title><rect x="82.3" y="563.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="85.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (3 samples, 0.03%)</title><rect x="83.3" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.3" y="574.0"></text>
</g>
<g>
<title>java.lang.Object (3 samples, 0.03%)</title><rect x="83.3" y="547.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="86.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (8 samples, 0.09%)</title><rect x="83.7" y="563.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (3 samples, 0.03%)</title><rect x="83.7" y="547.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="86.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (4 samples, 0.04%)</title><rect x="84.2" y="547.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="87.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (29 samples, 0.31%)</title><rect x="84.7" y="595.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (2 samples, 0.02%)</title><rect x="84.8" y="579.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="87.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (3 samples, 0.03%)</title><rect x="85.1" y="579.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="88.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (22 samples, 0.24%)</title><rect x="85.6" y="579.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (5 samples, 0.05%)</title><rect x="85.6" y="563.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="88.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (2 samples, 0.02%)</title><rect x="86.2" y="563.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="89.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (5 samples, 0.05%)</title><rect x="86.5" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object (5 samples, 0.05%)</title><rect x="86.5" y="547.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="89.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (10 samples, 0.11%)</title><rect x="87.1" y="563.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (4 samples, 0.04%)</title><rect x="87.1" y="547.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="90.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (2 samples, 0.02%)</title><rect x="87.6" y="547.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="90.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (4 samples, 0.04%)</title><rect x="87.9" y="547.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="90.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (5 samples, 0.05%)</title><rect x="88.4" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (5 samples, 0.05%)</title><rect x="88.4" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (3 samples, 0.03%)</title><rect x="88.4" y="563.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="91.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (2 samples, 0.02%)</title><rect x="88.8" y="563.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="88.8" y="547.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.02%)</title><rect x="88.8" y="531.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.02%)</title><rect x="88.8" y="515.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="88.8" y="499.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="91.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (6 samples, 0.06%)</title><rect x="89.0" y="595.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.0" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.06%)</title><rect x="89.0" y="579.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$248/502041341.run (6 samples, 0.06%)</title><rect x="89.0" y="563.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (6 samples, 0.06%)</title><rect x="89.0" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.0" y="558.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (6 samples, 0.06%)</title><rect x="89.0" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.0" y="542.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (3 samples, 0.03%)</title><rect x="89.0" y="515.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="92.0" y="526.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.03%)</title><rect x="89.4" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.4" y="526.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.03%)</title><rect x="89.4" y="499.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.4" y="510.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.03%)</title><rect x="89.4" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.4" y="494.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (3 samples, 0.03%)</title><rect x="89.4" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.4" y="478.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (3 samples, 0.03%)</title><rect x="89.4" y="451.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="92.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (7 samples, 0.08%)</title><rect x="89.9" y="707.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.9" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (7 samples, 0.08%)</title><rect x="89.9" y="691.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.9" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.08%)</title><rect x="89.9" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.9" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.08%)</title><rect x="89.9" y="659.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="92.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (17 samples, 0.18%)</title><rect x="90.8" y="707.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.8" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (12 samples, 0.13%)</title><rect x="90.8" y="691.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="93.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (5 samples, 0.05%)</title><rect x="92.3" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (5 samples, 0.05%)</title><rect x="92.3" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.3" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.05%)</title><rect x="92.3" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.3" y="670.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (5 samples, 0.05%)</title><rect x="92.3" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.3" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.05%)</title><rect x="92.3" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.3" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.05%)</title><rect x="92.3" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.3" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (5 samples, 0.05%)</title><rect x="92.3" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.3" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.05%)</title><rect x="92.3" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.3" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (5 samples, 0.05%)</title><rect x="92.3" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.3" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.create (5 samples, 0.05%)</title><rect x="92.3" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.3" y="558.0"></text>
</g>
<g>
<title>java.time.Instant (5 samples, 0.05%)</title><rect x="92.3" y="531.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="95.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (826 samples, 8.89%)</title><rect x="93.0" y="771.0" width="104.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.0" y="782.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (826 samples, 8.89%)</title><rect x="93.0" y="755.0" width="104.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.0" y="766.0">java/util/co..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.accept (825 samples, 8.88%)</title><rect x="93.0" y="739.0" width="104.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.0" y="750.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (825 samples, 8.88%)</title><rect x="93.0" y="723.0" width="104.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.0" y="734.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (427 samples, 4.60%)</title><rect x="93.0" y="707.0" width="54.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.0" y="718.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (427 samples, 4.60%)</title><rect x="93.0" y="691.0" width="54.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.0" y="702.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (427 samples, 4.60%)</title><rect x="93.0" y="675.0" width="54.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.0" y="686.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (305 samples, 3.28%)</title><rect x="93.0" y="659.0" width="38.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.0" y="670.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (305 samples, 3.28%)</title><rect x="93.0" y="643.0" width="38.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.0" y="654.0">one..</text>
</g>
<g>
<title>byte[] (283 samples, 3.05%)</title><rect x="93.0" y="627.0" width="35.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="96.0" y="638.0">byt..</text>
</g>
<g>
<title>byte[] (22 samples, 0.24%)</title><rect x="128.9" y="627.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="131.9" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (122 samples, 1.31%)</title><rect x="131.7" y="659.0" width="15.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.7" y="670.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (122 samples, 1.31%)</title><rect x="131.7" y="643.0" width="15.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="134.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (398 samples, 4.29%)</title><rect x="147.2" y="707.0" width="50.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.2" y="718.0">ru/ma..</text>
</g>
<g>
<title>one.nio.http.Response (73 samples, 0.79%)</title><rect x="147.2" y="691.0" width="9.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="150.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (325 samples, 3.50%)</title><rect x="156.5" y="691.0" width="41.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.5" y="702.0">one..</text>
</g>
<g>
<title>byte[] (132 samples, 1.42%)</title><rect x="156.5" y="675.0" width="16.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="159.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (119 samples, 1.28%)</title><rect x="173.3" y="675.0" width="15.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="176.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.80%)</title><rect x="188.4" y="675.0" width="9.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="191.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$155/2091524807.get (1,023 samples, 11.02%)</title><rect x="197.9" y="787.0" width="130.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.9" y="798.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$put$12 (1,023 samples, 11.02%)</title><rect x="197.9" y="771.0" width="130.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.9" y="782.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (167 samples, 1.80%)</title><rect x="197.9" y="755.0" width="21.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.9" y="766.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (167 samples, 1.80%)</title><rect x="197.9" y="739.0" width="21.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.9" y="750.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (167 samples, 1.80%)</title><rect x="197.9" y="723.0" width="21.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="200.9" y="734.0">j..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (104 samples, 1.12%)</title><rect x="219.1" y="755.0" width="13.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="222.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (448 samples, 4.82%)</title><rect x="232.4" y="755.0" width="56.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.4" y="766.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.03%)</title><rect x="232.4" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.03%)</title><rect x="232.4" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.03%)</title><rect x="232.4" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="232.4" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.4" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="232.4" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.4" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.03%)</title><rect x="232.4" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.4" y="670.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (3 samples, 0.03%)</title><rect x="232.4" y="643.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="235.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (445 samples, 4.79%)</title><rect x="232.7" y="739.0" width="56.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.7" y="750.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (356 samples, 3.83%)</title><rect x="232.7" y="723.0" width="45.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.7" y="734.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (356 samples, 3.83%)</title><rect x="232.7" y="707.0" width="45.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="235.7" y="718.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (13 samples, 0.14%)</title><rect x="278.0" y="723.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (13 samples, 0.14%)</title><rect x="278.0" y="707.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (12 samples, 0.13%)</title><rect x="278.1" y="691.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="281.1" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (76 samples, 0.82%)</title><rect x="279.6" y="723.0" width="9.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="282.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (304 samples, 3.27%)</title><rect x="289.3" y="755.0" width="38.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.3" y="766.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (102 samples, 1.10%)</title><rect x="289.3" y="739.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (102 samples, 1.10%)</title><rect x="289.3" y="723.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (102 samples, 1.10%)</title><rect x="289.3" y="707.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="292.3" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (102 samples, 1.10%)</title><rect x="289.3" y="691.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.3" y="702.0"></text>
</g>
<g>
<title>byte[] (102 samples, 1.10%)</title><rect x="289.3" y="675.0" width="12.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="292.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (202 samples, 2.18%)</title><rect x="302.2" y="739.0" width="25.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.2" y="750.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (202 samples, 2.18%)</title><rect x="302.2" y="723.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.2" y="734.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (202 samples, 2.18%)</title><rect x="302.2" y="707.0" width="25.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="305.2" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (116 samples, 1.25%)</title><rect x="327.9" y="803.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.06%)</title><rect x="327.9" y="787.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.06%)</title><rect x="327.9" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.06%)</title><rect x="327.9" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.06%)</title><rect x="327.9" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.06%)</title><rect x="327.9" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.accept (6 samples, 0.06%)</title><rect x="327.9" y="707.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (6 samples, 0.06%)</title><rect x="327.9" y="691.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (6 samples, 0.06%)</title><rect x="327.9" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.9" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.06%)</title><rect x="327.9" y="659.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.9" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.06%)</title><rect x="327.9" y="643.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="330.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (110 samples, 1.18%)</title><rect x="328.7" y="787.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (110 samples, 1.18%)</title><rect x="328.7" y="771.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$226/1373714853.accept (110 samples, 1.18%)</title><rect x="328.7" y="755.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$15 (110 samples, 1.18%)</title><rect x="328.7" y="739.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (15 samples, 0.16%)</title><rect x="328.7" y="723.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.16%)</title><rect x="328.7" y="707.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.16%)</title><rect x="328.7" y="691.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.12%)</title><rect x="328.7" y="675.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.12%)</title><rect x="328.7" y="659.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.7" y="670.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.12%)</title><rect x="328.7" y="643.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="331.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.04%)</title><rect x="330.1" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.1" y="686.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.04%)</title><rect x="330.1" y="659.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="333.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$218/1944842503.mergeResponse (95 samples, 1.02%)</title><rect x="330.6" y="723.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$11 (95 samples, 1.02%)</title><rect x="330.6" y="707.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.6" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.11%)</title><rect x="330.6" y="691.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (2 samples, 0.02%)</title><rect x="330.6" y="675.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.6" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (2 samples, 0.02%)</title><rect x="330.6" y="659.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.6" y="670.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (2 samples, 0.02%)</title><rect x="330.6" y="643.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="333.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.09%)</title><rect x="330.8" y="675.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.8" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.09%)</title><rect x="330.8" y="659.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="333.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (5 samples, 0.05%)</title><rect x="331.8" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.8" y="702.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (5 samples, 0.05%)</title><rect x="331.8" y="675.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="334.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (61 samples, 0.66%)</title><rect x="332.5" y="691.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (54 samples, 0.58%)</title><rect x="332.5" y="675.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="335.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (54 samples, 0.58%)</title><rect x="332.5" y="659.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="335.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (53 samples, 0.57%)</title><rect x="332.5" y="643.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (49 samples, 0.53%)</title><rect x="332.5" y="627.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.5" y="638.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (49 samples, 0.53%)</title><rect x="332.5" y="611.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (49 samples, 0.53%)</title><rect x="332.5" y="595.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (8 samples, 0.09%)</title><rect x="332.5" y="579.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$535/703303253.accept (8 samples, 0.09%)</title><rect x="332.5" y="563.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.09%)</title><rect x="332.5" y="547.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.09%)</title><rect x="332.5" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.09%)</title><rect x="332.5" y="515.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.09%)</title><rect x="332.5" y="499.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.09%)</title><rect x="332.5" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.09%)</title><rect x="332.5" y="467.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="335.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$526/561308271.apply (41 samples, 0.44%)</title><rect x="333.5" y="579.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$10 (41 samples, 0.44%)</title><rect x="333.5" y="563.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.5" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.03%)</title><rect x="333.5" y="547.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="336.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 0.15%)</title><rect x="333.9" y="547.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.15%)</title><rect x="333.9" y="531.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.15%)</title><rect x="333.9" y="515.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="336.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (24 samples, 0.26%)</title><rect x="335.7" y="547.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (24 samples, 0.26%)</title><rect x="335.7" y="531.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.7" y="542.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="335.7" y="515.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="338.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.11%)</title><rect x="336.8" y="515.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="339.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.05%)</title><rect x="338.1" y="515.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="341.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.04%)</title><rect x="338.7" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.04%)</title><rect x="338.7" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.7" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (4 samples, 0.04%)</title><rect x="338.7" y="595.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="341.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (7 samples, 0.08%)</title><rect x="339.3" y="675.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.3" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (7 samples, 0.08%)</title><rect x="339.3" y="659.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="342.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (7 samples, 0.08%)</title><rect x="340.2" y="691.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.2" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (7 samples, 0.08%)</title><rect x="340.2" y="675.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="343.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergePutDeleteResponses (12 samples, 0.13%)</title><rect x="341.1" y="691.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.1" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.03%)</title><rect x="341.1" y="675.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="344.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.10%)</title><rect x="341.5" y="675.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.5" y="686.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="341.5" y="659.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="344.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.05%)</title><rect x="341.9" y="659.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="344.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (330 samples, 3.55%)</title><rect x="342.6" y="803.0" width="42.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.6" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (299 samples, 3.22%)</title><rect x="342.6" y="787.0" width="38.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.6" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (296 samples, 3.19%)</title><rect x="342.6" y="771.0" width="37.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.6" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (296 samples, 3.19%)</title><rect x="342.6" y="755.0" width="37.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.6" y="766.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (296 samples, 3.19%)</title><rect x="342.6" y="739.0" width="37.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="345.6" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.03%)</title><rect x="380.3" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.03%)</title><rect x="380.3" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.03%)</title><rect x="380.3" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="380.3" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.3" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.03%)</title><rect x="380.3" y="707.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="383.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (31 samples, 0.33%)</title><rect x="380.6" y="787.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 0.32%)</title><rect x="380.6" y="771.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (30 samples, 0.32%)</title><rect x="380.6" y="755.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.6" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (30 samples, 0.32%)</title><rect x="380.6" y="739.0" width="3.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="383.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$407/438359882.run (156 samples, 1.68%)</title><rect x="384.6" y="803.0" width="19.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="387.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (156 samples, 1.68%)</title><rect x="384.6" y="787.0" width="19.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (156 samples, 1.68%)</title><rect x="384.6" y="771.0" width="19.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (156 samples, 1.68%)</title><rect x="384.6" y="755.0" width="19.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (156 samples, 1.68%)</title><rect x="384.6" y="739.0" width="19.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (156 samples, 1.68%)</title><rect x="384.6" y="723.0" width="19.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (156 samples, 1.68%)</title><rect x="384.6" y="707.0" width="19.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (156 samples, 1.68%)</title><rect x="384.6" y="691.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (156 samples, 1.68%)</title><rect x="384.6" y="675.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (156 samples, 1.68%)</title><rect x="384.6" y="659.0" width="19.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (156 samples, 1.68%)</title><rect x="384.6" y="643.0" width="19.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (149 samples, 1.60%)</title><rect x="384.6" y="627.0" width="18.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.05%)</title><rect x="384.6" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.05%)</title><rect x="384.6" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$442/1751367345.get$Lambda (4 samples, 0.04%)</title><rect x="384.7" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$442 (4 samples, 0.04%)</title><rect x="384.7" y="563.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="387.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (144 samples, 1.55%)</title><rect x="385.2" y="611.0" width="18.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (7 samples, 0.08%)</title><rect x="385.2" y="595.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="388.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (137 samples, 1.48%)</title><rect x="386.1" y="595.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (137 samples, 1.48%)</title><rect x="386.1" y="579.0" width="17.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (137 samples, 1.48%)</title><rect x="386.1" y="563.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (26 samples, 0.28%)</title><rect x="386.1" y="547.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (10 samples, 0.11%)</title><rect x="386.1" y="531.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="389.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/725906402.apply (16 samples, 0.17%)</title><rect x="387.4" y="531.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (16 samples, 0.17%)</title><rect x="387.4" y="515.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (16 samples, 0.17%)</title><rect x="387.4" y="499.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.03%)</title><rect x="387.4" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.4" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3 samples, 0.03%)</title><rect x="387.4" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.4" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.03%)</title><rect x="387.4" y="451.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="390.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (13 samples, 0.14%)</title><rect x="387.7" y="483.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (13 samples, 0.14%)</title><rect x="387.7" y="467.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (13 samples, 0.14%)</title><rect x="387.7" y="451.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (6 samples, 0.06%)</title><rect x="387.7" y="435.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="390.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="388.5" y="435.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="388.5" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.08%)</title><rect x="388.5" y="403.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="391.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (111 samples, 1.20%)</title><rect x="389.4" y="547.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="392.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (111 samples, 1.20%)</title><rect x="389.4" y="531.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$383/847257842.apply (111 samples, 1.20%)</title><rect x="389.4" y="515.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (111 samples, 1.20%)</title><rect x="389.4" y="499.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (111 samples, 1.20%)</title><rect x="389.4" y="483.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$229/148200039.apply (111 samples, 1.20%)</title><rect x="389.4" y="467.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (111 samples, 1.20%)</title><rect x="389.4" y="451.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="389.4" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="389.4" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/725906402.get$Lambda (4 samples, 0.04%)</title><rect x="389.4" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$433 (4 samples, 0.04%)</title><rect x="389.4" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="392.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.09%)</title><rect x="389.9" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.09%)</title><rect x="389.9" y="419.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (6 samples, 0.06%)</title><rect x="389.9" y="403.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="392.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="390.7" y="403.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="390.7" y="387.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.02%)</title><rect x="390.7" y="371.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="393.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (99 samples, 1.07%)</title><rect x="390.9" y="435.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="393.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.05%)</title><rect x="390.9" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.05%)</title><rect x="390.9" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$417/607985568.get$Lambda (3 samples, 0.03%)</title><rect x="390.9" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$417 (3 samples, 0.03%)</title><rect x="390.9" y="371.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="393.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$426/706282661.get$Lambda (2 samples, 0.02%)</title><rect x="391.3" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$426 (2 samples, 0.02%)</title><rect x="391.3" y="371.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="394.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (36 samples, 0.39%)</title><rect x="391.6" y="419.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (36 samples, 0.39%)</title><rect x="391.6" y="403.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (36 samples, 0.39%)</title><rect x="391.6" y="387.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$417/607985568.accept (8 samples, 0.09%)</title><rect x="391.6" y="371.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (8 samples, 0.09%)</title><rect x="391.6" y="355.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (8 samples, 0.09%)</title><rect x="391.6" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="391.6" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="391.6" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$421/1903175199.get$Lambda (3 samples, 0.03%)</title><rect x="391.6" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$421 (3 samples, 0.03%)</title><rect x="391.6" y="275.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="394.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (5 samples, 0.05%)</title><rect x="391.9" y="323.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.05%)</title><rect x="391.9" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.02%)</title><rect x="391.9" y="291.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="394.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="392.2" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="392.2" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.03%)</title><rect x="392.2" y="259.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="395.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$426/706282661.accept (23 samples, 0.25%)</title><rect x="392.6" y="371.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (23 samples, 0.25%)</title><rect x="392.6" y="355.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (23 samples, 0.25%)</title><rect x="392.6" y="339.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (23 samples, 0.25%)</title><rect x="392.6" y="323.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (23 samples, 0.25%)</title><rect x="392.6" y="307.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (23 samples, 0.25%)</title><rect x="392.6" y="291.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (23 samples, 0.25%)</title><rect x="392.6" y="275.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (23 samples, 0.25%)</title><rect x="392.6" y="259.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (23 samples, 0.25%)</title><rect x="392.6" y="243.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (23 samples, 0.25%)</title><rect x="392.6" y="227.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (8 samples, 0.09%)</title><rect x="392.6" y="211.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.09%)</title><rect x="392.6" y="195.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.6" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (3 samples, 0.03%)</title><rect x="392.6" y="179.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="395.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.05%)</title><rect x="393.0" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (5 samples, 0.05%)</title><rect x="393.0" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (5 samples, 0.05%)</title><rect x="393.0" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (5 samples, 0.05%)</title><rect x="393.0" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (5 samples, 0.05%)</title><rect x="393.0" y="115.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.0" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (5 samples, 0.05%)</title><rect x="393.0" y="99.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="396.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (15 samples, 0.16%)</title><rect x="393.6" y="211.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (15 samples, 0.16%)</title><rect x="393.6" y="195.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.6" y="206.0"></text>
</g>
<g>
<title>java/util/List.of (6 samples, 0.06%)</title><rect x="393.6" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.6" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (6 samples, 0.06%)</title><rect x="393.6" y="163.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="396.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.10%)</title><rect x="394.4" y="179.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (4 samples, 0.04%)</title><rect x="394.4" y="163.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="397.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.05%)</title><rect x="394.9" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (5 samples, 0.05%)</title><rect x="394.9" y="147.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (5 samples, 0.05%)</title><rect x="394.9" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (5 samples, 0.05%)</title><rect x="394.9" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (5 samples, 0.05%)</title><rect x="394.9" y="99.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.9" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (5 samples, 0.05%)</title><rect x="394.9" y="83.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="397.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.05%)</title><rect x="395.5" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.05%)</title><rect x="395.5" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.05%)</title><rect x="395.5" y="339.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="398.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (58 samples, 0.62%)</title><rect x="396.1" y="419.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (6 samples, 0.06%)</title><rect x="396.1" y="403.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="399.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (51 samples, 0.55%)</title><rect x="397.0" y="403.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (25 samples, 0.27%)</title><rect x="397.1" y="387.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (8 samples, 0.09%)</title><rect x="397.1" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="400.1" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (8 samples, 0.09%)</title><rect x="397.1" y="355.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="400.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (16 samples, 0.17%)</title><rect x="398.3" y="371.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="401.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (3 samples, 0.03%)</title><rect x="398.3" y="355.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="401.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (2 samples, 0.02%)</title><rect x="398.8" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="401.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (3 samples, 0.03%)</title><rect x="399.1" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (3 samples, 0.03%)</title><rect x="399.1" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="402.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (7 samples, 0.08%)</title><rect x="399.4" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (4 samples, 0.04%)</title><rect x="399.6" y="339.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="402.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.02%)</title><rect x="400.1" y="339.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="403.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (25 samples, 0.27%)</title><rect x="400.3" y="387.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.17%)</title><rect x="400.5" y="371.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.5" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.13%)</title><rect x="400.5" y="355.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="403.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="402.0" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.0" y="366.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="402.0" y="339.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="405.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.09%)</title><rect x="402.5" y="371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.09%)</title><rect x="402.5" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.09%)</title><rect x="402.5" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.09%)</title><rect x="402.5" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.09%)</title><rect x="402.5" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.09%)</title><rect x="402.5" y="291.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="405.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (7 samples, 0.08%)</title><rect x="403.5" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (7 samples, 0.08%)</title><rect x="403.5" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (7 samples, 0.08%)</title><rect x="403.5" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (7 samples, 0.08%)</title><rect x="403.5" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (7 samples, 0.08%)</title><rect x="403.5" y="563.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.5" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.08%)</title><rect x="403.5" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.02%)</title><rect x="403.5" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.5" y="542.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (2 samples, 0.02%)</title><rect x="403.5" y="515.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="406.5" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (5 samples, 0.05%)</title><rect x="403.8" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.8" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (5 samples, 0.05%)</title><rect x="403.8" y="515.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="406.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (515 samples, 5.55%)</title><rect x="404.4" y="803.0" width="65.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.4" y="814.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (515 samples, 5.55%)</title><rect x="404.4" y="787.0" width="65.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.4" y="798.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (455 samples, 4.90%)</title><rect x="404.4" y="771.0" width="57.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.4" y="782.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (455 samples, 4.90%)</title><rect x="404.4" y="755.0" width="57.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.4" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (455 samples, 4.90%)</title><rect x="404.4" y="739.0" width="57.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.4" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (10 samples, 0.11%)</title><rect x="404.4" y="723.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (10 samples, 0.11%)</title><rect x="404.4" y="707.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="407.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (10 samples, 0.11%)</title><rect x="404.4" y="691.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (10 samples, 0.11%)</title><rect x="404.4" y="675.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1437941060.linkToTargetMethod (8 samples, 0.09%)</title><rect x="404.4" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.invoke (8 samples, 0.09%)</title><rect x="404.4" y="643.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.09%)</title><rect x="404.4" y="627.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.09%)</title><rect x="404.4" y="611.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.09%)</title><rect x="404.4" y="595.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.4" y="606.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.09%)</title><rect x="404.4" y="579.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="407.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.02%)</title><rect x="405.4" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="405.4" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="405.4" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$408/1005179682.get$Lambda (2 samples, 0.02%)</title><rect x="405.4" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="408.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$408 (2 samples, 0.02%)</title><rect x="405.4" y="595.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="408.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (445 samples, 4.79%)</title><rect x="405.7" y="723.0" width="56.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.7" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (445 samples, 4.79%)</title><rect x="405.7" y="707.0" width="56.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.7" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (445 samples, 4.79%)</title><rect x="405.7" y="691.0" width="56.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.7" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (445 samples, 4.79%)</title><rect x="405.7" y="675.0" width="56.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.7" y="686.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (236 samples, 2.54%)</title><rect x="405.7" y="659.0" width="29.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.7" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (236 samples, 2.54%)</title><rect x="405.7" y="643.0" width="29.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.7" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (236 samples, 2.54%)</title><rect x="405.7" y="627.0" width="29.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.7" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (236 samples, 2.54%)</title><rect x="405.7" y="611.0" width="29.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.7" y="622.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (236 samples, 2.54%)</title><rect x="405.7" y="595.0" width="29.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.7" y="606.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (236 samples, 2.54%)</title><rect x="405.7" y="579.0" width="29.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.7" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (236 samples, 2.54%)</title><rect x="405.7" y="563.0" width="29.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.7" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (228 samples, 2.46%)</title><rect x="405.7" y="547.0" width="28.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.7" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (228 samples, 2.46%)</title><rect x="405.7" y="531.0" width="28.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.7" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (225 samples, 2.42%)</title><rect x="405.7" y="515.0" width="28.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.7" y="526.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.02%)</title><rect x="405.7" y="499.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="408.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$209/1479888648.apply (216 samples, 2.33%)</title><rect x="405.9" y="499.0" width="27.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (216 samples, 2.33%)</title><rect x="405.9" y="483.0" width="27.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="408.9" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (8 samples, 0.09%)</title><rect x="405.9" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="408.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.09%)</title><rect x="405.9" y="451.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="408.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (5 samples, 0.05%)</title><rect x="405.9" y="435.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="408.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="406.6" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="406.6" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.03%)</title><rect x="406.6" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="409.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (208 samples, 2.24%)</title><rect x="406.9" y="467.0" width="26.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.9" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.17%)</title><rect x="407.1" y="451.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (16 samples, 0.17%)</title><rect x="407.1" y="435.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (9 samples, 0.10%)</title><rect x="407.1" y="419.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="410.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="408.2" y="419.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="411.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="408.2" y="403.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.08%)</title><rect x="408.2" y="387.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="411.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (191 samples, 2.06%)</title><rect x="409.1" y="451.0" width="24.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.1" y="462.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (6 samples, 0.06%)</title><rect x="409.1" y="435.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="412.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (162 samples, 1.74%)</title><rect x="409.9" y="435.0" width="20.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="412.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="409.9" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="409.9" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$505/20416744.get$Lambda (3 samples, 0.03%)</title><rect x="409.9" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$505 (3 samples, 0.03%)</title><rect x="409.9" y="371.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="412.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1403353704.linkToTargetMethod (4 samples, 0.04%)</title><rect x="410.2" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1102993836.invokeStatic (4 samples, 0.04%)</title><rect x="410.2" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$465/1751998761.get$Lambda (4 samples, 0.04%)</title><rect x="410.2" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$465 (4 samples, 0.04%)</title><rect x="410.2" y="371.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="413.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (33 samples, 0.36%)</title><rect x="410.7" y="419.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.7" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (15 samples, 0.16%)</title><rect x="410.7" y="403.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.7" y="414.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.04%)</title><rect x="410.7" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.7" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.04%)</title><rect x="410.7" y="371.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="413.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.12%)</title><rect x="411.3" y="387.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.3" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.12%)</title><rect x="411.3" y="371.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="414.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (11 samples, 0.12%)</title><rect x="412.7" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.12%)</title><rect x="412.7" y="387.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (11 samples, 0.12%)</title><rect x="412.7" y="371.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.03%)</title><rect x="412.7" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.03%)</title><rect x="412.7" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (3 samples, 0.03%)</title><rect x="412.7" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.7" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (3 samples, 0.03%)</title><rect x="412.7" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="415.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$457/1901827594.get (5 samples, 0.05%)</title><rect x="413.0" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (5 samples, 0.05%)</title><rect x="413.0" y="339.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="416.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (3 samples, 0.03%)</title><rect x="413.7" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (3 samples, 0.03%)</title><rect x="413.7" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.7" y="350.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (3 samples, 0.03%)</title><rect x="413.7" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.7" y="334.0"></text>
</g>
<g>
<title>java.util.OptionalLong (3 samples, 0.03%)</title><rect x="413.7" y="307.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="416.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (7 samples, 0.08%)</title><rect x="414.0" y="403.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.0" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (7 samples, 0.08%)</title><rect x="414.0" y="387.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="417.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.19%)</title><rect x="414.9" y="419.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.11%)</title><rect x="414.9" y="403.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.08%)</title><rect x="414.9" y="387.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="417.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="415.8" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="415.8" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.03%)</title><rect x="415.8" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="418.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.09%)</title><rect x="416.2" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.09%)</title><rect x="416.2" y="387.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.05%)</title><rect x="416.2" y="371.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="419.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="416.8" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="416.8" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.03%)</title><rect x="416.8" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="419.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (2 samples, 0.02%)</title><rect x="417.2" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="420.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.09%)</title><rect x="417.5" y="419.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="420.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (94 samples, 1.01%)</title><rect x="418.5" y="419.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$465/1751998761.run (94 samples, 1.01%)</title><rect x="418.5" y="403.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (94 samples, 1.01%)</title><rect x="418.5" y="387.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.22%)</title><rect x="418.5" y="371.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.22%)</title><rect x="418.5" y="355.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1005240389.get$Lambda (3 samples, 0.03%)</title><rect x="418.5" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$473 (3 samples, 0.03%)</title><rect x="418.5" y="323.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="421.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$481/548427899.get$Lambda (4 samples, 0.04%)</title><rect x="418.9" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$481 (4 samples, 0.04%)</title><rect x="418.9" y="323.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="421.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$492/150982051.get$Lambda (13 samples, 0.14%)</title><rect x="419.4" y="339.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$492 (13 samples, 0.14%)</title><rect x="419.4" y="323.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="422.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (17 samples, 0.18%)</title><rect x="421.0" y="371.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.18%)</title><rect x="421.0" y="355.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (13 samples, 0.14%)</title><rect x="421.0" y="339.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.04%)</title><rect x="422.7" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.04%)</title><rect x="422.7" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.04%)</title><rect x="422.7" y="307.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="425.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (21 samples, 0.23%)</title><rect x="423.5" y="371.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="426.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (21 samples, 0.23%)</title><rect x="423.5" y="355.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="426.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.05%)</title><rect x="423.5" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.05%)</title><rect x="423.5" y="323.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$495/1406044820.get$Lambda (5 samples, 0.05%)</title><rect x="423.5" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$495 (5 samples, 0.05%)</title><rect x="423.5" y="291.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="426.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.17%)</title><rect x="424.1" y="339.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.17%)</title><rect x="424.1" y="323.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (16 samples, 0.17%)</title><rect x="424.1" y="307.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.08%)</title><rect x="424.1" y="291.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="427.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.10%)</title><rect x="425.0" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.10%)</title><rect x="425.0" y="275.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.10%)</title><rect x="425.0" y="259.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="428.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (9 samples, 0.10%)</title><rect x="426.1" y="371.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.10%)</title><rect x="426.1" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1822971466.invoke (9 samples, 0.10%)</title><rect x="426.1" y="339.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.10%)</title><rect x="426.1" y="323.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.02%)</title><rect x="426.1" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="426.1" y="291.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="429.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.08%)</title><rect x="426.4" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.08%)</title><rect x="426.4" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.4" y="302.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="426.4" y="275.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="429.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (25 samples, 0.27%)</title><rect x="427.3" y="371.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (7 samples, 0.08%)</title><rect x="427.3" y="355.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="430.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (18 samples, 0.19%)</title><rect x="428.2" y="355.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.19%)</title><rect x="428.2" y="339.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1822971466.invoke (18 samples, 0.19%)</title><rect x="428.2" y="323.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.19%)</title><rect x="428.2" y="307.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.02%)</title><rect x="428.2" y="291.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.2" y="302.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="428.2" y="275.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="431.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.17%)</title><rect x="428.4" y="291.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.17%)</title><rect x="428.4" y="275.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="431.4" y="286.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.17%)</title><rect x="428.4" y="259.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="431.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/PutDeleteBodyHandler.apply (23 samples, 0.25%)</title><rect x="430.4" y="435.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (18 samples, 0.19%)</title><rect x="430.4" y="419.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.4" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.02%)</title><rect x="430.4" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.4" y="414.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.02%)</title><rect x="430.4" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.4" y="398.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.02%)</title><rect x="430.4" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="433.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (16 samples, 0.17%)</title><rect x="430.7" y="403.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (3 samples, 0.03%)</title><rect x="430.7" y="387.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="433.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.14%)</title><rect x="431.1" y="387.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="434.1" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (5 samples, 0.05%)</title><rect x="432.7" y="419.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="435.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$384/1609426679.apply (7 samples, 0.08%)</title><rect x="433.4" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (7 samples, 0.08%)</title><rect x="433.4" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2 samples, 0.02%)</title><rect x="433.4" y="467.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.4" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2 samples, 0.02%)</title><rect x="433.4" y="451.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="433.4" y="435.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.4" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2 samples, 0.02%)</title><rect x="433.4" y="419.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="436.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (5 samples, 0.05%)</title><rect x="433.6" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.05%)</title><rect x="433.6" y="451.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="436.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.03%)</title><rect x="434.3" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.03%)</title><rect x="434.3" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$385/1826212424.apply (3 samples, 0.03%)</title><rect x="434.3" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3 samples, 0.03%)</title><rect x="434.3" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.03%)</title><rect x="434.3" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="437.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.03%)</title><rect x="434.3" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="437.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$445/279938722.apply (8 samples, 0.09%)</title><rect x="434.6" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (8 samples, 0.09%)</title><rect x="434.6" y="531.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (8 samples, 0.09%)</title><rect x="434.6" y="515.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="437.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (209 samples, 2.25%)</title><rect x="435.6" y="659.0" width="26.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.6" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (8 samples, 0.09%)</title><rect x="435.6" y="643.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.09%)</title><rect x="435.6" y="627.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.6" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.09%)</title><rect x="435.6" y="611.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="438.6" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.09%)</title><rect x="435.6" y="595.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="438.6" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.09%)</title><rect x="435.6" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.6" y="590.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.09%)</title><rect x="435.6" y="563.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="438.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (9 samples, 0.10%)</title><rect x="436.7" y="643.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.10%)</title><rect x="436.7" y="627.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.7" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.10%)</title><rect x="436.7" y="611.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.7" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.10%)</title><rect x="436.7" y="595.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.7" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.10%)</title><rect x="436.7" y="579.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="439.7" y="590.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="436.7" y="563.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="439.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (12 samples, 0.13%)</title><rect x="437.8" y="643.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="437.8" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="437.8" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="437.8" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.8" y="606.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="437.8" y="579.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="440.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.04%)</title><rect x="438.1" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="441.1" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.04%)</title><rect x="438.1" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.1" y="622.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="438.1" y="595.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="441.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.06%)</title><rect x="438.6" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.06%)</title><rect x="438.6" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.05%)</title><rect x="438.7" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.7" y="606.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="438.7" y="579.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="441.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (64 samples, 0.69%)</title><rect x="439.3" y="643.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.3" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (64 samples, 0.69%)</title><rect x="439.3" y="627.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.3" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (64 samples, 0.69%)</title><rect x="439.3" y="611.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.3" y="622.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (5 samples, 0.05%)</title><rect x="439.3" y="595.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="442.3" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.02%)</title><rect x="440.0" y="595.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="443.0" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.05%)</title><rect x="440.2" y="595.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="443.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="441.0" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="441.0" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.0" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.get$Lambda (3 samples, 0.03%)</title><rect x="441.0" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.0" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$168 (3 samples, 0.03%)</title><rect x="441.0" y="547.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="444.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (3 samples, 0.03%)</title><rect x="441.4" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.4" y="606.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (3 samples, 0.03%)</title><rect x="441.4" y="579.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="444.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (43 samples, 0.46%)</title><rect x="441.7" y="595.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (43 samples, 0.46%)</title><rect x="441.7" y="579.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (43 samples, 0.46%)</title><rect x="441.7" y="563.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.05%)</title><rect x="441.7" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.05%)</title><rect x="441.7" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.get$Lambda (5 samples, 0.05%)</title><rect x="441.7" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.7" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$177 (5 samples, 0.05%)</title><rect x="441.7" y="499.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="444.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.10%)</title><rect x="442.4" y="547.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (9 samples, 0.10%)</title><rect x="442.4" y="531.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (9 samples, 0.10%)</title><rect x="442.4" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.4" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.10%)</title><rect x="442.4" y="499.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.10%)</title><rect x="442.4" y="483.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.10%)</title><rect x="442.4" y="467.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.10%)</title><rect x="442.4" y="451.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.4" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.10%)</title><rect x="442.4" y="435.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.10%)</title><rect x="442.4" y="419.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="445.4" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (16 samples, 0.17%)</title><rect x="443.5" y="547.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.5" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (16 samples, 0.17%)</title><rect x="443.5" y="531.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="446.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (9 samples, 0.10%)</title><rect x="443.5" y="515.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.10%)</title><rect x="443.5" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.10%)</title><rect x="443.5" y="483.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="446.5" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.08%)</title><rect x="444.7" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.7" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.08%)</title><rect x="444.7" y="499.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="447.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (13 samples, 0.14%)</title><rect x="445.6" y="547.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (13 samples, 0.14%)</title><rect x="445.6" y="531.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="448.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.02%)</title><rect x="447.2" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.2" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.02%)</title><rect x="447.2" y="579.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="450.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (116 samples, 1.25%)</title><rect x="447.5" y="643.0" width="14.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.5" y="654.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.04%)</title><rect x="447.5" y="627.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="450.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.12%)</title><rect x="448.0" y="627.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.0" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.12%)</title><rect x="448.0" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.0" y="622.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.12%)</title><rect x="448.0" y="595.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="451.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (16 samples, 0.17%)</title><rect x="449.4" y="627.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.17%)</title><rect x="449.4" y="611.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.11%)</title><rect x="449.4" y="595.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="452.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.06%)</title><rect x="450.6" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.6" y="606.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="450.6" y="579.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="453.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (85 samples, 0.92%)</title><rect x="451.4" y="627.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.33%)</title><rect x="451.4" y="611.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.33%)</title><rect x="451.4" y="595.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.15%)</title><rect x="451.4" y="579.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="454.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.18%)</title><rect x="453.2" y="579.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.2" y="590.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.18%)</title><rect x="453.2" y="563.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="456.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (15 samples, 0.16%)</title><rect x="455.3" y="611.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (15 samples, 0.16%)</title><rect x="455.3" y="595.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.3" y="606.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="455.3" y="579.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="458.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.06%)</title><rect x="456.5" y="579.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="459.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.trim (9 samples, 0.10%)</title><rect x="457.2" y="611.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (9 samples, 0.10%)</title><rect x="457.2" y="595.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.10%)</title><rect x="457.2" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.03%)</title><rect x="457.2" y="563.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="460.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.06%)</title><rect x="457.6" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.6" y="574.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="457.6" y="547.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="460.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.11%)</title><rect x="458.4" y="611.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.11%)</title><rect x="458.4" y="595.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.11%)</title><rect x="458.4" y="579.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.11%)</title><rect x="458.4" y="563.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.4" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.11%)</title><rect x="458.4" y="547.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.11%)</title><rect x="458.4" y="531.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="461.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (20 samples, 0.22%)</title><rect x="459.7" y="611.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (12 samples, 0.13%)</title><rect x="459.7" y="595.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.7" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (12 samples, 0.13%)</title><rect x="459.7" y="579.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="462.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (6 samples, 0.06%)</title><rect x="461.2" y="595.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.2" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (6 samples, 0.06%)</title><rect x="461.2" y="579.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="464.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$449/225976591.apply (2 samples, 0.02%)</title><rect x="462.0" y="595.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.02%)</title><rect x="462.0" y="579.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.0" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.02%)</title><rect x="462.0" y="563.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="465.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (60 samples, 0.65%)</title><rect x="462.2" y="771.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (60 samples, 0.65%)</title><rect x="462.2" y="755.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (60 samples, 0.65%)</title><rect x="462.2" y="739.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (60 samples, 0.65%)</title><rect x="462.2" y="723.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (60 samples, 0.65%)</title><rect x="462.2" y="707.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (60 samples, 0.65%)</title><rect x="462.2" y="691.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="462.2" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="462.2" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$346/379794951.get$Lambda (4 samples, 0.04%)</title><rect x="462.2" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$346 (4 samples, 0.04%)</title><rect x="462.2" y="627.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="465.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (3 samples, 0.03%)</title><rect x="462.7" y="675.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="465.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (6 samples, 0.06%)</title><rect x="463.1" y="675.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (6 samples, 0.06%)</title><rect x="463.1" y="659.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.1" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (5 samples, 0.05%)</title><rect x="463.1" y="643.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="466.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (47 samples, 0.51%)</title><rect x="463.9" y="675.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (47 samples, 0.51%)</title><rect x="463.9" y="659.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1005240389.run (37 samples, 0.40%)</title><rect x="463.9" y="643.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (37 samples, 0.40%)</title><rect x="463.9" y="627.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (37 samples, 0.40%)</title><rect x="463.9" y="611.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.9" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (10 samples, 0.11%)</title><rect x="463.9" y="595.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.9" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.08%)</title><rect x="463.9" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.9" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.03%)</title><rect x="463.9" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.9" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (3 samples, 0.03%)</title><rect x="463.9" y="547.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="466.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.04%)</title><rect x="464.2" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.2" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.04%)</title><rect x="464.2" y="547.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="467.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.03%)</title><rect x="464.7" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.03%)</title><rect x="464.7" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.03%)</title><rect x="464.7" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1820383114.get (2 samples, 0.02%)</title><rect x="464.7" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.7" y="542.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.02%)</title><rect x="464.7" y="515.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="467.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (27 samples, 0.29%)</title><rect x="465.1" y="595.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (26 samples, 0.28%)</title><rect x="465.3" y="579.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (11 samples, 0.12%)</title><rect x="465.3" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.3" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="465.3" y="547.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.3" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.02%)</title><rect x="465.3" y="531.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.3" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="465.3" y="515.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.02%)</title><rect x="465.3" y="499.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.02%)</title><rect x="465.3" y="483.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.3" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (2 samples, 0.02%)</title><rect x="465.3" y="467.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="468.3" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.03%)</title><rect x="465.5" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.5" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.03%)</title><rect x="465.5" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.5" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (3 samples, 0.03%)</title><rect x="465.5" y="515.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="468.5" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.02%)</title><rect x="466.0" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.0" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.02%)</title><rect x="466.0" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.0" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.02%)</title><rect x="466.0" y="515.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="469.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (3 samples, 0.03%)</title><rect x="466.3" y="547.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="469.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (6 samples, 0.06%)</title><rect x="466.7" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.06%)</title><rect x="466.7" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.06%)</title><rect x="466.7" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (6 samples, 0.06%)</title><rect x="466.7" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.06%)</title><rect x="466.7" y="499.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="469.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (9 samples, 0.10%)</title><rect x="467.4" y="563.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (2 samples, 0.02%)</title><rect x="467.4" y="547.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="470.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (7 samples, 0.08%)</title><rect x="467.7" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (6 samples, 0.06%)</title><rect x="467.8" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (6 samples, 0.06%)</title><rect x="467.8" y="515.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (5 samples, 0.05%)</title><rect x="467.8" y="499.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="470.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (10 samples, 0.11%)</title><rect x="468.6" y="643.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (10 samples, 0.11%)</title><rect x="468.6" y="627.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (10 samples, 0.11%)</title><rect x="468.6" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.11%)</title><rect x="468.6" y="595.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.11%)</title><rect x="468.6" y="579.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.11%)</title><rect x="468.6" y="563.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.11%)</title><rect x="468.6" y="547.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$501/514946210.accept (10 samples, 0.11%)</title><rect x="468.6" y="531.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (10 samples, 0.11%)</title><rect x="468.6" y="515.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.11%)</title><rect x="468.6" y="499.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.11%)</title><rect x="468.6" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (10 samples, 0.11%)</title><rect x="468.6" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$513/1932888160.apply (10 samples, 0.11%)</title><rect x="468.6" y="451.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (10 samples, 0.11%)</title><rect x="468.6" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (10 samples, 0.11%)</title><rect x="468.6" y="419.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="471.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.run (1,857 samples, 20.00%)</title><rect x="469.8" y="803.0" width="236.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.8" y="814.0">ru/mail/polis/service/re1nex/Ba..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (1,857 samples, 20.00%)</title><rect x="469.8" y="787.0" width="236.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.8" y="798.0">ru/mail/polis/service/re1nex/Ba..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (196 samples, 2.11%)</title><rect x="469.8" y="771.0" width="24.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.8" y="782.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (196 samples, 2.11%)</title><rect x="469.8" y="755.0" width="24.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.8" y="766.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (196 samples, 2.11%)</title><rect x="469.8" y="739.0" width="24.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.8" y="750.0">j..</text>
</g>
<g>
<title>java.lang.String (106 samples, 1.14%)</title><rect x="469.8" y="723.0" width="13.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="472.8" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (90 samples, 0.97%)</title><rect x="483.3" y="723.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.3" y="734.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.97%)</title><rect x="483.3" y="707.0" width="11.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="486.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (538 samples, 5.79%)</title><rect x="494.7" y="771.0" width="68.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.7" y="782.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (538 samples, 5.79%)</title><rect x="494.7" y="755.0" width="68.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.7" y="766.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (290 samples, 3.12%)</title><rect x="494.7" y="739.0" width="36.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.7" y="750.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.74%)</title><rect x="494.7" y="723.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.74%)</title><rect x="494.7" y="707.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.get$Lambda (69 samples, 0.74%)</title><rect x="494.7" y="691.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.7" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ApiUtils$$Lambda$448 (69 samples, 0.74%)</title><rect x="494.7" y="675.0" width="8.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="497.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (221 samples, 2.38%)</title><rect x="503.5" y="723.0" width="28.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.5" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (221 samples, 2.38%)</title><rect x="503.5" y="707.0" width="28.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.5" y="718.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (128 samples, 1.38%)</title><rect x="503.5" y="691.0" width="16.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="506.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (90 samples, 0.97%)</title><rect x="519.8" y="691.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.8" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (90 samples, 0.97%)</title><rect x="519.8" y="675.0" width="11.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="522.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.03%)</title><rect x="531.2" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.accept (3 samples, 0.03%)</title><rect x="531.2" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (3 samples, 0.03%)</title><rect x="531.2" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (2 samples, 0.02%)</title><rect x="531.3" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.02%)</title><rect x="531.3" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.3" y="638.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="531.3" y="611.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="534.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (248 samples, 2.67%)</title><rect x="531.6" y="739.0" width="31.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.6" y="750.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.93%)</title><rect x="531.6" y="723.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.93%)</title><rect x="531.6" y="707.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$155/2091524807.get$Lambda (86 samples, 0.93%)</title><rect x="531.6" y="691.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.6" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$155 (86 samples, 0.93%)</title><rect x="531.6" y="675.0" width="10.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="534.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (162 samples, 1.74%)</title><rect x="542.5" y="723.0" width="20.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (162 samples, 1.74%)</title><rect x="542.5" y="707.0" width="20.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (84 samples, 0.90%)</title><rect x="542.5" y="691.0" width="10.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="545.5" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (77 samples, 0.83%)</title><rect x="553.2" y="691.0" width="9.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="556.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (1,123 samples, 12.09%)</title><rect x="563.1" y="771.0" width="142.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.1" y="782.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (127 samples, 1.37%)</title><rect x="563.1" y="755.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.1" y="766.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="563.1" y="739.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="566.1" y="750.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.02%)</title><rect x="563.6" y="739.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="566.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="563.9" y="739.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.9" y="750.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.02%)</title><rect x="563.9" y="723.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="566.9" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (6 samples, 0.06%)</title><rect x="564.1" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.1" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (6 samples, 0.06%)</title><rect x="564.1" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.1" y="734.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (6 samples, 0.06%)</title><rect x="564.1" y="707.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="567.1" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (3 samples, 0.03%)</title><rect x="564.9" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.9" y="750.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.03%)</title><rect x="564.9" y="723.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="567.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (78 samples, 0.84%)</title><rect x="565.2" y="739.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.2" y="750.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (5 samples, 0.05%)</title><rect x="565.2" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.2" y="734.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (5 samples, 0.05%)</title><rect x="565.2" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.2" y="718.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (5 samples, 0.05%)</title><rect x="565.2" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.2" y="702.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="565.2" y="675.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="568.2" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (73 samples, 0.79%)</title><rect x="565.9" y="723.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.9" y="734.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (73 samples, 0.79%)</title><rect x="565.9" y="707.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.9" y="718.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (73 samples, 0.79%)</title><rect x="565.9" y="691.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.9" y="702.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (72 samples, 0.78%)</title><rect x="565.9" y="675.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.9" y="686.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (68 samples, 0.73%)</title><rect x="565.9" y="659.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.9" y="670.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (68 samples, 0.73%)</title><rect x="565.9" y="643.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.9" y="654.0"></text>
</g>
<g>
<title>java.lang.Class[] (4 samples, 0.04%)</title><rect x="565.9" y="627.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="568.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (7 samples, 0.08%)</title><rect x="566.5" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (7 samples, 0.08%)</title><rect x="566.5" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.5" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (7 samples, 0.08%)</title><rect x="566.5" y="595.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.5" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (7 samples, 0.08%)</title><rect x="566.5" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.5" y="590.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (7 samples, 0.08%)</title><rect x="566.5" y="563.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="569.5" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (56 samples, 0.60%)</title><rect x="567.4" y="627.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (56 samples, 0.60%)</title><rect x="567.4" y="611.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (56 samples, 0.60%)</title><rect x="567.4" y="595.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.4" y="606.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (9 samples, 0.10%)</title><rect x="567.4" y="579.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="570.4" y="590.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (47 samples, 0.51%)</title><rect x="568.6" y="579.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.6" y="590.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (47 samples, 0.51%)</title><rect x="568.6" y="563.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.6" y="574.0"></text>
</g>
<g>
<title>int[] (38 samples, 0.41%)</title><rect x="568.6" y="547.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="571.6" y="558.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (9 samples, 0.10%)</title><rect x="573.4" y="547.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.4" y="558.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="573.4" y="531.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="576.4" y="542.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (4 samples, 0.04%)</title><rect x="574.5" y="659.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="577.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (32 samples, 0.34%)</title><rect x="575.2" y="739.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.2" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (11 samples, 0.12%)</title><rect x="575.2" y="723.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.2" y="734.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (3 samples, 0.03%)</title><rect x="575.2" y="707.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="578.2" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (8 samples, 0.09%)</title><rect x="575.5" y="707.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (5 samples, 0.05%)</title><rect x="575.5" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.5" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (5 samples, 0.05%)</title><rect x="575.5" y="675.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="578.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (3 samples, 0.03%)</title><rect x="576.2" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.2" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (3 samples, 0.03%)</title><rect x="576.2" y="675.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="579.2" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (2 samples, 0.02%)</title><rect x="576.6" y="723.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.6" y="734.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (2 samples, 0.02%)</title><rect x="576.6" y="707.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="579.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (3 samples, 0.03%)</title><rect x="576.8" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="579.8" y="734.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (3 samples, 0.03%)</title><rect x="576.8" y="707.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="579.8" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (16 samples, 0.17%)</title><rect x="577.2" y="723.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.17%)</title><rect x="577.2" y="707.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.2" y="718.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.17%)</title><rect x="577.2" y="691.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="580.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (986 samples, 10.62%)</title><rect x="579.2" y="755.0" width="125.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.2" y="766.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="579.2" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="579.2" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$218/1944842503.get$Lambda (2 samples, 0.02%)</title><rect x="579.4" y="707.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.4" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$218 (2 samples, 0.02%)</title><rect x="579.4" y="691.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="582.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (901 samples, 9.70%)</title><rect x="579.7" y="739.0" width="114.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.7" y="750.0">ru/mail/polis/..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.03%)</title><rect x="579.7" y="723.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="582.7" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.03%)</title><rect x="580.1" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.1" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.03%)</title><rect x="580.1" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="580.1" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="580.1" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="580.1" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.1" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="580.1" y="643.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="583.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (9 samples, 0.10%)</title><rect x="580.5" y="723.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="583.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.03%)</title><rect x="580.5" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.03%)</title><rect x="580.5" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.5" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.03%)</title><rect x="580.5" y="675.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="583.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (6 samples, 0.06%)</title><rect x="580.9" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.9" y="718.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (6 samples, 0.06%)</title><rect x="580.9" y="691.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="583.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (24 samples, 0.26%)</title><rect x="581.6" y="723.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (24 samples, 0.26%)</title><rect x="581.6" y="707.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (8 samples, 0.09%)</title><rect x="581.6" y="691.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="584.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.17%)</title><rect x="582.7" y="691.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.17%)</title><rect x="582.7" y="675.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.7" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.17%)</title><rect x="582.7" y="659.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="585.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (572 samples, 6.16%)</title><rect x="584.7" y="723.0" width="72.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.7" y="734.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (572 samples, 6.16%)</title><rect x="584.7" y="707.0" width="72.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.7" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (572 samples, 6.16%)</title><rect x="584.7" y="691.0" width="72.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.7" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (572 samples, 6.16%)</title><rect x="584.7" y="675.0" width="72.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.7" y="686.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.05%)</title><rect x="584.7" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.05%)</title><rect x="584.7" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$215/706182509.get$Lambda (5 samples, 0.05%)</title><rect x="584.7" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="587.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$215 (5 samples, 0.05%)</title><rect x="584.7" y="611.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="587.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (15 samples, 0.16%)</title><rect x="585.3" y="659.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (15 samples, 0.16%)</title><rect x="585.3" y="643.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (8 samples, 0.09%)</title><rect x="585.3" y="627.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="588.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="586.3" y="627.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="586.3" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.08%)</title><rect x="586.3" y="595.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="589.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (17 samples, 0.18%)</title><rect x="587.2" y="659.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.18%)</title><rect x="587.2" y="643.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.08%)</title><rect x="587.2" y="627.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="590.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.11%)</title><rect x="588.1" y="627.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.11%)</title><rect x="588.1" y="611.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.11%)</title><rect x="588.1" y="595.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="591.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (16 samples, 0.17%)</title><rect x="589.4" y="659.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="592.4" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (30 samples, 0.32%)</title><rect x="591.4" y="659.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="594.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (293 samples, 3.15%)</title><rect x="595.2" y="659.0" width="37.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.2" y="670.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (29 samples, 0.31%)</title><rect x="595.2" y="643.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.2" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (25 samples, 0.27%)</title><rect x="595.2" y="627.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="598.2" y="638.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.04%)</title><rect x="595.2" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.2" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.04%)</title><rect x="595.2" y="595.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="598.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (21 samples, 0.23%)</title><rect x="595.7" y="611.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.7" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (21 samples, 0.23%)</title><rect x="595.7" y="595.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="598.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (4 samples, 0.04%)</title><rect x="598.4" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.04%)</title><rect x="598.4" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.04%)</title><rect x="598.4" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1820383114.get (4 samples, 0.04%)</title><rect x="598.4" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (4 samples, 0.04%)</title><rect x="598.4" y="563.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="601.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (125 samples, 1.35%)</title><rect x="598.9" y="643.0" width="15.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.9" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (125 samples, 1.35%)</title><rect x="598.9" y="627.0" width="15.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.9" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.17%)</title><rect x="599.0" y="611.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="602.0" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.10%)</title><rect x="601.1" y="611.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="604.1" y="622.0"></text>
</g>
<g>
<title>java.util.TreeSet (5 samples, 0.05%)</title><rect x="602.2" y="611.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="605.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.12%)</title><rect x="602.9" y="611.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.12%)</title><rect x="602.9" y="595.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.get$Lambda (11 samples, 0.12%)</title><rect x="602.9" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.9" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$168 (11 samples, 0.12%)</title><rect x="602.9" y="563.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="605.9" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (60 samples, 0.65%)</title><rect x="604.3" y="611.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (60 samples, 0.65%)</title><rect x="604.3" y="595.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (60 samples, 0.65%)</title><rect x="604.3" y="579.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (60 samples, 0.65%)</title><rect x="604.3" y="563.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (25 samples, 0.27%)</title><rect x="604.3" y="547.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (20 samples, 0.22%)</title><rect x="604.3" y="531.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (20 samples, 0.22%)</title><rect x="604.3" y="515.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (20 samples, 0.22%)</title><rect x="604.3" y="499.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (20 samples, 0.22%)</title><rect x="604.3" y="483.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (20 samples, 0.22%)</title><rect x="604.3" y="467.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (20 samples, 0.22%)</title><rect x="604.3" y="451.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.22%)</title><rect x="604.3" y="435.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.22%)</title><rect x="604.3" y="419.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="607.3" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (5 samples, 0.05%)</title><rect x="606.8" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.8" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (5 samples, 0.05%)</title><rect x="606.8" y="515.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="609.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.06%)</title><rect x="607.4" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.06%)</title><rect x="607.4" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.get$Lambda (6 samples, 0.06%)</title><rect x="607.4" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.4" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$177 (6 samples, 0.06%)</title><rect x="607.4" y="499.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="610.4" y="510.0"></text>
</g>
<g>
<title>java/util/List.copyOf (13 samples, 0.14%)</title><rect x="608.2" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.2" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (13 samples, 0.14%)</title><rect x="608.2" y="531.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (7 samples, 0.08%)</title><rect x="608.2" y="515.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.08%)</title><rect x="608.2" y="499.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.08%)</title><rect x="608.2" y="483.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="611.2" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (6 samples, 0.06%)</title><rect x="609.1" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.1" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (6 samples, 0.06%)</title><rect x="609.1" y="499.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="612.1" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.17%)</title><rect x="609.8" y="547.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.17%)</title><rect x="609.8" y="531.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="612.8" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (14 samples, 0.15%)</title><rect x="611.9" y="611.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.9" y="622.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (14 samples, 0.15%)</title><rect x="611.9" y="595.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="614.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (9 samples, 0.10%)</title><rect x="613.7" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.7" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.10%)</title><rect x="613.7" y="595.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="616.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (4 samples, 0.04%)</title><rect x="614.8" y="643.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="617.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (102 samples, 1.10%)</title><rect x="615.3" y="643.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.3" y="654.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (102 samples, 1.10%)</title><rect x="615.3" y="627.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.3" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (93 samples, 1.00%)</title><rect x="615.3" y="611.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.3" y="622.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (93 samples, 1.00%)</title><rect x="615.3" y="595.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.3" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (93 samples, 1.00%)</title><rect x="615.3" y="579.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.3" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (21 samples, 0.23%)</title><rect x="615.3" y="563.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="618.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (29 samples, 0.31%)</title><rect x="618.0" y="563.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (29 samples, 0.31%)</title><rect x="618.0" y="547.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.0" y="558.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.31%)</title><rect x="618.0" y="531.0" width="3.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="621.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (43 samples, 0.46%)</title><rect x="621.7" y="563.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.46%)</title><rect x="621.7" y="547.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.30%)</title><rect x="621.7" y="531.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="624.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.16%)</title><rect x="625.2" y="531.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.2" y="542.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.16%)</title><rect x="625.2" y="515.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="628.2" y="526.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (9 samples, 0.10%)</title><rect x="627.1" y="611.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="630.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (10 samples, 0.11%)</title><rect x="628.3" y="643.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.3" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (10 samples, 0.11%)</title><rect x="628.3" y="627.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="631.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (23 samples, 0.25%)</title><rect x="629.5" y="643.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.04%)</title><rect x="629.5" y="627.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="632.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.06%)</title><rect x="630.0" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.0" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.06%)</title><rect x="630.0" y="611.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="633.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (13 samples, 0.14%)</title><rect x="630.8" y="627.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (13 samples, 0.14%)</title><rect x="630.8" y="611.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="633.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (127 samples, 1.37%)</title><rect x="632.5" y="659.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.5" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (3 samples, 0.03%)</title><rect x="632.5" y="643.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="635.5" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.map (9 samples, 0.10%)</title><rect x="632.8" y="643.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/719664157.apply (9 samples, 0.10%)</title><rect x="632.8" y="627.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (2 samples, 0.02%)</title><rect x="632.8" y="611.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="635.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (7 samples, 0.08%)</title><rect x="633.1" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (7 samples, 0.08%)</title><rect x="633.1" y="595.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="636.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (19 samples, 0.20%)</title><rect x="634.0" y="643.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="637.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (3 samples, 0.03%)</title><rect x="636.4" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (3 samples, 0.03%)</title><rect x="636.4" y="627.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="639.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (2 samples, 0.02%)</title><rect x="636.8" y="643.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.8" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.02%)</title><rect x="636.8" y="627.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.8" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.02%)</title><rect x="636.8" y="611.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.8" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.02%)</title><rect x="636.8" y="595.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="639.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (91 samples, 0.98%)</title><rect x="637.0" y="643.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (91 samples, 0.98%)</title><rect x="637.0" y="627.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.0" y="638.0"></text>
</g>
<g>
<title>java.lang.Class[] (10 samples, 0.11%)</title><rect x="637.0" y="611.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="640.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.11%)</title><rect x="638.3" y="611.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="641.3" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList (7 samples, 0.08%)</title><rect x="639.6" y="611.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="642.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (34 samples, 0.37%)</title><rect x="640.5" y="611.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (34 samples, 0.37%)</title><rect x="640.5" y="595.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.5" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (34 samples, 0.37%)</title><rect x="640.5" y="579.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.5" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (34 samples, 0.37%)</title><rect x="640.5" y="563.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.5" y="574.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (34 samples, 0.37%)</title><rect x="640.5" y="547.0" width="4.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="643.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (14 samples, 0.15%)</title><rect x="644.8" y="611.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (14 samples, 0.15%)</title><rect x="644.8" y="595.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (7 samples, 0.08%)</title><rect x="644.8" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (7 samples, 0.08%)</title><rect x="644.8" y="563.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="647.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (7 samples, 0.08%)</title><rect x="645.7" y="579.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (7 samples, 0.08%)</title><rect x="645.7" y="563.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="648.7" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (16 samples, 0.17%)</title><rect x="646.6" y="611.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.6" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (16 samples, 0.17%)</title><rect x="646.6" y="595.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.6" y="606.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (16 samples, 0.17%)</title><rect x="646.6" y="579.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="649.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (69 samples, 0.74%)</title><rect x="648.6" y="659.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (8 samples, 0.09%)</title><rect x="648.6" y="643.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (3 samples, 0.03%)</title><rect x="648.6" y="627.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="651.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.05%)</title><rect x="649.0" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.05%)</title><rect x="649.0" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (5 samples, 0.05%)</title><rect x="649.0" y="595.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="652.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.09%)</title><rect x="649.6" y="643.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="652.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (53 samples, 0.57%)</title><rect x="650.6" y="643.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="650.6" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="650.6" y="611.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$209/1479888648.get$Lambda (6 samples, 0.06%)</title><rect x="650.8" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$209 (6 samples, 0.06%)</title><rect x="650.8" y="579.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="653.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (46 samples, 0.50%)</title><rect x="651.5" y="627.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (46 samples, 0.50%)</title><rect x="651.5" y="611.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (26 samples, 0.28%)</title><rect x="651.5" y="595.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="654.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.22%)</title><rect x="654.8" y="595.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.22%)</title><rect x="654.8" y="579.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.22%)</title><rect x="654.8" y="563.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="657.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$125/121225284.handleLocalResponse (7 samples, 0.08%)</title><rect x="657.4" y="723.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$8 (7 samples, 0.08%)</title><rect x="657.4" y="707.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (7 samples, 0.08%)</title><rect x="657.4" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="657.4" y="675.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="657.4" y="659.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$155/2091524807.get$Lambda (2 samples, 0.02%)</title><rect x="657.4" y="643.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.4" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$155 (2 samples, 0.02%)</title><rect x="657.4" y="627.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="660.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (5 samples, 0.05%)</title><rect x="657.6" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (5 samples, 0.05%)</title><rect x="657.6" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (2 samples, 0.02%)</title><rect x="657.6" y="643.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="660.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.03%)</title><rect x="657.9" y="643.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="660.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$141/122924094.requestBuild (283 samples, 3.05%)</title><rect x="658.3" y="723.0" width="35.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.3" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$9 (283 samples, 3.05%)</title><rect x="658.3" y="707.0" width="35.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.3" y="718.0">ru/..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (6 samples, 0.06%)</title><rect x="658.3" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.3" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (6 samples, 0.06%)</title><rect x="658.3" y="675.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="661.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (120 samples, 1.29%)</title><rect x="659.0" y="691.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.0" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (9 samples, 0.10%)</title><rect x="659.0" y="675.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="662.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (111 samples, 1.20%)</title><rect x="660.2" y="675.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.2" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (100 samples, 1.08%)</title><rect x="660.2" y="659.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.2" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (100 samples, 1.08%)</title><rect x="660.2" y="643.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.2" y="654.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (4 samples, 0.04%)</title><rect x="660.2" y="627.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="663.2" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.04%)</title><rect x="660.7" y="627.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="663.7" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.09%)</title><rect x="661.2" y="627.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="664.2" y="638.0"></text>
</g>
<g>
<title>java.util.TreeSet (7 samples, 0.08%)</title><rect x="662.2" y="627.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="665.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.11%)</title><rect x="663.1" y="627.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.11%)</title><rect x="663.1" y="611.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.1" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.get$Lambda (10 samples, 0.11%)</title><rect x="663.1" y="595.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.1" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$168 (10 samples, 0.11%)</title><rect x="663.1" y="579.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="666.1" y="590.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (5 samples, 0.05%)</title><rect x="664.4" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.4" y="638.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (5 samples, 0.05%)</title><rect x="664.4" y="611.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="667.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (46 samples, 0.50%)</title><rect x="665.0" y="627.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.0" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (46 samples, 0.50%)</title><rect x="665.0" y="611.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.0" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (46 samples, 0.50%)</title><rect x="665.0" y="595.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="668.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.09%)</title><rect x="665.0" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.09%)</title><rect x="665.0" y="563.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.get$Lambda (8 samples, 0.09%)</title><rect x="665.0" y="547.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.0" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$177 (8 samples, 0.09%)</title><rect x="665.0" y="531.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="668.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (14 samples, 0.15%)</title><rect x="666.0" y="579.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.0" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (14 samples, 0.15%)</title><rect x="666.0" y="563.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (14 samples, 0.15%)</title><rect x="666.0" y="547.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.15%)</title><rect x="666.0" y="531.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.15%)</title><rect x="666.0" y="515.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.15%)</title><rect x="666.0" y="499.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.15%)</title><rect x="666.0" y="483.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.15%)</title><rect x="666.0" y="467.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.15%)</title><rect x="666.0" y="451.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="669.0" y="462.0"></text>
</g>
<g>
<title>java/util/List.copyOf (9 samples, 0.10%)</title><rect x="667.8" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="670.8" y="590.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (9 samples, 0.10%)</title><rect x="667.8" y="563.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.02%)</title><rect x="667.8" y="547.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="667.8" y="531.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="667.8" y="515.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="670.8" y="526.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.08%)</title><rect x="668.0" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.0" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.08%)</title><rect x="668.0" y="531.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="671.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.16%)</title><rect x="668.9" y="579.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (15 samples, 0.16%)</title><rect x="668.9" y="563.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="671.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (16 samples, 0.17%)</title><rect x="670.8" y="627.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (16 samples, 0.17%)</title><rect x="670.8" y="611.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="673.8" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (11 samples, 0.12%)</title><rect x="672.9" y="659.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.9" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (11 samples, 0.12%)</title><rect x="672.9" y="643.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.9" y="654.0"></text>
</g>
<g>
<title>java.util.Optional (11 samples, 0.12%)</title><rect x="672.9" y="627.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="675.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (157 samples, 1.69%)</title><rect x="674.3" y="691.0" width="19.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.3" y="702.0"></text>
</g>
<g>
<title>java.net.URI (17 samples, 0.18%)</title><rect x="674.3" y="675.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="677.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.19%)</title><rect x="676.4" y="675.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (18 samples, 0.19%)</title><rect x="676.4" y="659.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702940637.invoke (18 samples, 0.19%)</title><rect x="676.4" y="643.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.19%)</title><rect x="676.4" y="627.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (4 samples, 0.04%)</title><rect x="676.4" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="676.4" y="595.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="679.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.15%)</title><rect x="676.9" y="611.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.15%)</title><rect x="676.9" y="595.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.9" y="606.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.15%)</title><rect x="676.9" y="579.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="679.9" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (81 samples, 0.87%)</title><rect x="678.7" y="675.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.7" y="686.0"></text>
</g>
<g>
<title>java.net.URI$Parser (10 samples, 0.11%)</title><rect x="678.7" y="659.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="681.7" y="670.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (71 samples, 0.76%)</title><rect x="680.0" y="659.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.12%)</title><rect x="680.0" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.12%)</title><rect x="680.0" y="627.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.06%)</title><rect x="680.0" y="611.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="683.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.05%)</title><rect x="680.7" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.7" y="622.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="680.7" y="595.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="683.7" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (60 samples, 0.65%)</title><rect x="681.4" y="643.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.32%)</title><rect x="681.4" y="627.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.32%)</title><rect x="681.4" y="611.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.23%)</title><rect x="681.4" y="595.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="684.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.10%)</title><rect x="684.0" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.0" y="606.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.10%)</title><rect x="684.0" y="579.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="687.0" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (30 samples, 0.32%)</title><rect x="685.2" y="627.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.22%)</title><rect x="685.2" y="611.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.22%)</title><rect x="685.2" y="595.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="688.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.09%)</title><rect x="685.2" y="579.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="688.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.13%)</title><rect x="686.2" y="579.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.2" y="590.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.13%)</title><rect x="686.2" y="563.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="689.2" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (10 samples, 0.11%)</title><rect x="687.7" y="611.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.7" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (10 samples, 0.11%)</title><rect x="687.7" y="595.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.11%)</title><rect x="687.7" y="579.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.11%)</title><rect x="687.7" y="563.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.06%)</title><rect x="687.7" y="547.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="690.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.04%)</title><rect x="688.5" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.5" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="688.5" y="531.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="691.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (17 samples, 0.18%)</title><rect x="689.0" y="675.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (17 samples, 0.18%)</title><rect x="689.0" y="659.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.0" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (6 samples, 0.06%)</title><rect x="689.0" y="643.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="692.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (11 samples, 0.12%)</title><rect x="689.8" y="643.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.8" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (11 samples, 0.12%)</title><rect x="689.8" y="627.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="692.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (24 samples, 0.26%)</title><rect x="691.2" y="675.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (24 samples, 0.26%)</title><rect x="691.2" y="659.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (24 samples, 0.26%)</title><rect x="691.2" y="643.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.2" y="654.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (24 samples, 0.26%)</title><rect x="691.2" y="627.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.05%)</title><rect x="691.2" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.2" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.05%)</title><rect x="691.2" y="595.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="694.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$166/1179495696.apply (19 samples, 0.20%)</title><rect x="691.8" y="611.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (19 samples, 0.20%)</title><rect x="691.8" y="595.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.8" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.11%)</title><rect x="691.8" y="579.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="694.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.10%)</title><rect x="693.1" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.10%)</title><rect x="693.1" y="563.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="696.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (81 samples, 0.87%)</title><rect x="694.2" y="739.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="694.2" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="694.2" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$226/1373714853.get$Lambda (2 samples, 0.02%)</title><rect x="694.2" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.2" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$226 (2 samples, 0.02%)</title><rect x="694.2" y="675.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="697.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (8 samples, 0.09%)</title><rect x="694.5" y="723.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.09%)</title><rect x="694.5" y="707.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.08%)</title><rect x="694.5" y="691.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="697.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (71 samples, 0.76%)</title><rect x="695.5" y="723.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.5" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (5 samples, 0.05%)</title><rect x="695.5" y="707.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="698.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (5 samples, 0.05%)</title><rect x="696.1" y="707.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="699.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (5 samples, 0.05%)</title><rect x="696.8" y="707.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="699.8" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (54 samples, 0.58%)</title><rect x="697.4" y="707.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$219/330067305.accept (54 samples, 0.58%)</title><rect x="697.4" y="691.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (54 samples, 0.58%)</title><rect x="697.4" y="675.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.22%)</title><rect x="697.4" y="659.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.22%)</title><rect x="697.4" y="643.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.get$Lambda (20 samples, 0.22%)</title><rect x="697.4" y="627.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.4" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.MergeUtils$$Lambda$223 (20 samples, 0.22%)</title><rect x="697.4" y="611.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="700.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (34 samples, 0.37%)</title><rect x="699.9" y="659.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (34 samples, 0.37%)</title><rect x="699.9" y="643.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (13 samples, 0.14%)</title><rect x="699.9" y="627.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="702.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (3 samples, 0.03%)</title><rect x="701.6" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.03%)</title><rect x="701.6" y="611.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="704.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.03%)</title><rect x="702.0" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.accept (3 samples, 0.03%)</title><rect x="702.0" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (3 samples, 0.03%)</title><rect x="702.0" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3 samples, 0.03%)</title><rect x="702.0" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="702.0" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.0" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="702.0" y="547.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="705.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.16%)</title><rect x="702.3" y="627.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.16%)</title><rect x="702.3" y="611.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.16%)</title><rect x="702.3" y="595.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="705.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="704.3" y="707.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.3" y="718.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.02%)</title><rect x="704.3" y="691.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="707.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (10 samples, 0.11%)</title><rect x="704.5" y="755.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.11%)</title><rect x="704.5" y="739.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.11%)</title><rect x="704.5" y="723.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (10 samples, 0.11%)</title><rect x="704.5" y="707.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.11%)</title><rect x="704.5" y="691.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.5" y="702.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.11%)</title><rect x="704.5" y="675.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="707.5" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (127 samples, 1.37%)</title><rect x="705.8" y="803.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.8" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (127 samples, 1.37%)</title><rect x="705.8" y="787.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.8" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$580/1356497911.run (127 samples, 1.37%)</title><rect x="705.8" y="771.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.8" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (127 samples, 1.37%)</title><rect x="705.8" y="755.0" width="16.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.8" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (127 samples, 1.37%)</title><rect x="705.8" y="739.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="708.8" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (127 samples, 1.37%)</title><rect x="705.8" y="723.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.8" y="734.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (2 samples, 0.02%)</title><rect x="705.8" y="707.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="708.8" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (125 samples, 1.35%)</title><rect x="706.0" y="707.0" width="15.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.0" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (119 samples, 1.28%)</title><rect x="706.0" y="691.0" width="15.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.0" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (119 samples, 1.28%)</title><rect x="706.0" y="675.0" width="15.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.0" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (119 samples, 1.28%)</title><rect x="706.0" y="659.0" width="15.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="709.0" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (119 samples, 1.28%)</title><rect x="706.0" y="643.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.0" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (78 samples, 0.84%)</title><rect x="706.0" y="627.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (78 samples, 0.84%)</title><rect x="706.0" y="611.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor42.invoke (2 samples, 0.02%)</title><rect x="706.0" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.0" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (2 samples, 0.02%)</title><rect x="706.0" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.0" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.02%)</title><rect x="706.0" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.0" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (2 samples, 0.02%)</title><rect x="706.0" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.0" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (2 samples, 0.02%)</title><rect x="706.0" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.0" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (2 samples, 0.02%)</title><rect x="706.0" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.0" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (2 samples, 0.02%)</title><rect x="706.0" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.0" y="510.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (2 samples, 0.02%)</title><rect x="706.0" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.0" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (2 samples, 0.02%)</title><rect x="706.0" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.0" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (2 samples, 0.02%)</title><rect x="706.0" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.0" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (2 samples, 0.02%)</title><rect x="706.0" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.0" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 0.02%)</title><rect x="706.0" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.0" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.02%)</title><rect x="706.0" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.0" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.02%)</title><rect x="706.0" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.0" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.02%)</title><rect x="706.0" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.0" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.02%)</title><rect x="706.0" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.0" y="366.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.02%)</title><rect x="706.0" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.0" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="706.0" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="706.0" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (2 samples, 0.02%)</title><rect x="706.0" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.0" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.02%)</title><rect x="706.0" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.0" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="706.0" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="706.0" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor49.invoke (2 samples, 0.02%)</title><rect x="706.0" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.0" y="238.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getAllThreadIds (2 samples, 0.02%)</title><rect x="706.0" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.0" y="222.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreads (2 samples, 0.02%)</title><rect x="706.0" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.0" y="206.0"></text>
</g>
<g>
<title>java.lang.Thread[] (2 samples, 0.02%)</title><rect x="706.0" y="179.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="709.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (76 samples, 0.82%)</title><rect x="706.3" y="595.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.3" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (76 samples, 0.82%)</title><rect x="706.3" y="579.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.3" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (73 samples, 0.79%)</title><rect x="706.3" y="563.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.3" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (73 samples, 0.79%)</title><rect x="706.3" y="547.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.3" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (73 samples, 0.79%)</title><rect x="706.3" y="531.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.3" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (73 samples, 0.79%)</title><rect x="706.3" y="515.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.3" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (73 samples, 0.79%)</title><rect x="706.3" y="499.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.3" y="510.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (73 samples, 0.79%)</title><rect x="706.3" y="483.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.3" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (73 samples, 0.79%)</title><rect x="706.3" y="467.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.3" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (73 samples, 0.79%)</title><rect x="706.3" y="451.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.3" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (73 samples, 0.79%)</title><rect x="706.3" y="435.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.3" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (73 samples, 0.79%)</title><rect x="706.3" y="419.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.3" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (73 samples, 0.79%)</title><rect x="706.3" y="403.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.3" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (73 samples, 0.79%)</title><rect x="706.3" y="387.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.3" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (73 samples, 0.79%)</title><rect x="706.3" y="371.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.3" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (67 samples, 0.72%)</title><rect x="706.3" y="355.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.3" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (67 samples, 0.72%)</title><rect x="706.3" y="339.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.3" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (67 samples, 0.72%)</title><rect x="706.3" y="323.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.3" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (67 samples, 0.72%)</title><rect x="706.3" y="307.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="709.3" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (23 samples, 0.25%)</title><rect x="706.3" y="291.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.3" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (18 samples, 0.19%)</title><rect x="706.3" y="275.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.3" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (16 samples, 0.17%)</title><rect x="706.3" y="259.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.3" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (16 samples, 0.17%)</title><rect x="706.3" y="243.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.3" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (8 samples, 0.09%)</title><rect x="706.4" y="227.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.4" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (7 samples, 0.08%)</title><rect x="706.5" y="211.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.5" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.06%)</title><rect x="706.7" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.7" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.06%)</title><rect x="706.7" y="179.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="709.7" y="190.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (7 samples, 0.08%)</title><rect x="707.4" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.4" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.08%)</title><rect x="707.4" y="211.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="710.4" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.02%)</title><rect x="708.3" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.3" y="270.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (2 samples, 0.02%)</title><rect x="708.3" y="243.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="711.3" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (5 samples, 0.05%)</title><rect x="708.6" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.6" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.03%)</title><rect x="708.6" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.6" y="270.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (3 samples, 0.03%)</title><rect x="708.6" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.03%)</title><rect x="708.6" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.03%)</title><rect x="708.6" y="211.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="711.6" y="222.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.02%)</title><rect x="709.0" y="259.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.0" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="709.0" y="243.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="709.0" y="227.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (2 samples, 0.02%)</title><rect x="709.0" y="211.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.0" y="222.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.02%)</title><rect x="709.0" y="195.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.0" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="709.0" y="179.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="709.0" y="163.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (2 samples, 0.02%)</title><rect x="709.0" y="147.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.0" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.02%)</title><rect x="709.0" y="131.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.0" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.02%)</title><rect x="709.0" y="115.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="712.0" y="126.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (21 samples, 0.23%)</title><rect x="709.2" y="291.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.2" y="302.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.03%)</title><rect x="709.2" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.2" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isValue (3 samples, 0.03%)</title><rect x="709.2" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.2" y="270.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isAssignableFrom (3 samples, 0.03%)</title><rect x="709.2" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.2" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.03%)</title><rect x="709.2" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.2" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (3 samples, 0.03%)</title><rect x="709.2" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.2" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.03%)</title><rect x="709.2" y="195.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.2" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.03%)</title><rect x="709.2" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.2" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.03%)</title><rect x="709.2" y="163.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="712.2" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (18 samples, 0.19%)</title><rect x="709.6" y="275.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.6" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.03%)</title><rect x="709.6" y="259.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="712.6" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.16%)</title><rect x="710.0" y="259.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (15 samples, 0.16%)</title><rect x="710.0" y="243.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="713.0" y="254.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (23 samples, 0.25%)</title><rect x="711.9" y="291.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.9" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.22%)</title><rect x="711.9" y="275.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="714.9" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.03%)</title><rect x="714.4" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.03%)</title><rect x="714.4" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (3 samples, 0.03%)</title><rect x="714.4" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.4" y="254.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (3 samples, 0.03%)</title><rect x="714.4" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.4" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.03%)</title><rect x="714.4" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.03%)</title><rect x="714.4" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor20.invoke (2 samples, 0.02%)</title><rect x="714.4" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.4" y="190.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (2 samples, 0.02%)</title><rect x="714.4" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.4" y="174.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (2 samples, 0.02%)</title><rect x="714.4" y="147.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="717.4" y="158.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (6 samples, 0.06%)</title><rect x="714.8" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.8" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.06%)</title><rect x="714.8" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.06%)</title><rect x="714.8" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (6 samples, 0.06%)</title><rect x="714.8" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.8" y="318.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (6 samples, 0.06%)</title><rect x="714.8" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.8" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.06%)</title><rect x="714.8" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="717.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.06%)</title><rect x="714.8" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="717.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor50.invoke (6 samples, 0.06%)</title><rect x="714.8" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.8" y="254.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (6 samples, 0.06%)</title><rect x="714.8" y="227.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="717.8" y="238.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (6 samples, 0.06%)</title><rect x="714.8" y="211.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.8" y="222.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (2 samples, 0.02%)</title><rect x="714.8" y="195.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="717.8" y="206.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (3 samples, 0.03%)</title><rect x="715.2" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.2" y="206.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (3 samples, 0.03%)</title><rect x="715.2" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="715.2" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.03%)</title><rect x="715.2" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1702940637.invoke (3 samples, 0.03%)</title><rect x="715.2" y="131.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.2" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="715.2" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.03%)</title><rect x="715.2" y="99.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.03%)</title><rect x="715.2" y="83.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.2" y="94.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="715.2" y="67.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="718.2" y="78.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (3 samples, 0.03%)</title><rect x="715.6" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.6" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (3 samples, 0.03%)</title><rect x="715.6" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.6" y="558.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (3 samples, 0.03%)</title><rect x="715.6" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.02%)</title><rect x="715.6" y="515.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.02%)</title><rect x="715.6" y="499.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.02%)</title><rect x="715.6" y="483.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.02%)</title><rect x="715.6" y="467.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.6" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.02%)</title><rect x="715.6" y="451.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.6" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.02%)</title><rect x="715.6" y="435.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.6" y="446.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (38 samples, 0.41%)</title><rect x="715.9" y="627.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.9" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (38 samples, 0.41%)</title><rect x="715.9" y="611.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (38 samples, 0.41%)</title><rect x="715.9" y="595.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (38 samples, 0.41%)</title><rect x="715.9" y="579.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (38 samples, 0.41%)</title><rect x="715.9" y="563.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (37 samples, 0.40%)</title><rect x="715.9" y="547.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (37 samples, 0.40%)</title><rect x="715.9" y="531.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (37 samples, 0.40%)</title><rect x="715.9" y="515.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.9" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="715.9" y="499.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="718.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (34 samples, 0.37%)</title><rect x="716.3" y="499.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (34 samples, 0.37%)</title><rect x="716.3" y="483.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (33 samples, 0.36%)</title><rect x="716.4" y="467.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.03%)</title><rect x="716.4" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.03%)</title><rect x="716.4" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.4" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.03%)</title><rect x="716.4" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.4" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.03%)</title><rect x="716.4" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.03%)</title><rect x="716.4" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.4" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.03%)</title><rect x="716.4" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.03%)</title><rect x="716.4" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (3 samples, 0.03%)</title><rect x="716.4" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.03%)</title><rect x="716.4" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.03%)</title><rect x="716.4" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.4" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.03%)</title><rect x="716.4" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.4" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.02%)</title><rect x="716.4" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.4" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.02%)</title><rect x="716.4" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.4" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.02%)</title><rect x="716.4" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="716.4" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.4" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.02%)</title><rect x="716.4" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.4" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.02%)</title><rect x="716.4" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.4" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.02%)</title><rect x="716.4" y="179.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.4" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="716.4" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="716.4" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (2 samples, 0.02%)</title><rect x="716.4" y="131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.4" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.02%)</title><rect x="716.4" y="115.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.4" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.02%)</title><rect x="716.4" y="99.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.4" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="716.4" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.4" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (2 samples, 0.02%)</title><rect x="716.4" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.4" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.02%)</title><rect x="716.4" y="51.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.4" y="62.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.02%)</title><rect x="716.4" y="35.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.4" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (30 samples, 0.32%)</title><rect x="716.8" y="451.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="716.8" y="435.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="719.8" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (28 samples, 0.30%)</title><rect x="717.1" y="435.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (28 samples, 0.30%)</title><rect x="717.1" y="419.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (28 samples, 0.30%)</title><rect x="717.1" y="403.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (28 samples, 0.30%)</title><rect x="717.1" y="387.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (28 samples, 0.30%)</title><rect x="717.1" y="371.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (28 samples, 0.30%)</title><rect x="717.1" y="355.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (7 samples, 0.08%)</title><rect x="717.1" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.1" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.06%)</title><rect x="717.2" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.2" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.05%)</title><rect x="717.2" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.2" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.04%)</title><rect x="717.3" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.3" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.04%)</title><rect x="717.3" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.3" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.04%)</title><rect x="717.3" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.3" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.04%)</title><rect x="717.3" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.3" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.03%)</title><rect x="717.3" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.3" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (3 samples, 0.03%)</title><rect x="717.3" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.3" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="717.5" y="195.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="720.5" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (12 samples, 0.13%)</title><rect x="718.0" y="339.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (7 samples, 0.08%)</title><rect x="718.0" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="721.0" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (6 samples, 0.06%)</title><rect x="718.0" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.0" y="318.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="718.0" y="291.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="721.0" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="718.2" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="721.2" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="718.5" y="291.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="721.5" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.05%)</title><rect x="718.9" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.9" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.05%)</title><rect x="718.9" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="718.9" y="291.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="721.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="719.2" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.2" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.02%)</title><rect x="719.2" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.2" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.02%)</title><rect x="719.2" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.2" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (3 samples, 0.03%)</title><rect x="719.5" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.03%)</title><rect x="719.5" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.5" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (3 samples, 0.03%)</title><rect x="719.5" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="719.6" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="722.6" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (6 samples, 0.06%)</title><rect x="719.9" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.9" y="350.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (6 samples, 0.06%)</title><rect x="719.9" y="323.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="722.9" y="334.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (2 samples, 0.02%)</title><rect x="720.8" y="627.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.02%)</title><rect x="720.8" y="611.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="723.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.02%)</title><rect x="720.8" y="595.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.02%)</title><rect x="720.8" y="579.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.02%)</title><rect x="720.8" y="563.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.8" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (5 samples, 0.05%)</title><rect x="721.3" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.3" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (5 samples, 0.05%)</title><rect x="721.3" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.3" y="686.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (5 samples, 0.05%)</title><rect x="721.3" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (5 samples, 0.05%)</title><rect x="721.3" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (4 samples, 0.04%)</title><rect x="721.4" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.4" y="638.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="721.4" y="611.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="724.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (14 samples, 0.15%)</title><rect x="721.9" y="851.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (14 samples, 0.15%)</title><rect x="721.9" y="835.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="724.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (14 samples, 0.15%)</title><rect x="721.9" y="819.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (14 samples, 0.15%)</title><rect x="721.9" y="803.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (14 samples, 0.15%)</title><rect x="721.9" y="787.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (14 samples, 0.15%)</title><rect x="721.9" y="771.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (14 samples, 0.15%)</title><rect x="721.9" y="755.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (14 samples, 0.15%)</title><rect x="721.9" y="739.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.15%)</title><rect x="721.9" y="723.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (14 samples, 0.15%)</title><rect x="721.9" y="707.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (14 samples, 0.15%)</title><rect x="721.9" y="691.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="724.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.15%)</title><rect x="721.9" y="675.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 0.15%)</title><rect x="721.9" y="659.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.15%)</title><rect x="721.9" y="643.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.15%)</title><rect x="721.9" y="627.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (14 samples, 0.15%)</title><rect x="721.9" y="611.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.15%)</title><rect x="721.9" y="595.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="724.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (150 samples, 1.62%)</title><rect x="723.7" y="851.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.7" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (45 samples, 0.48%)</title><rect x="723.8" y="835.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$389/894063145.accept (38 samples, 0.41%)</title><rect x="723.8" y="819.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (38 samples, 0.41%)</title><rect x="723.8" y="803.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (38 samples, 0.41%)</title><rect x="723.8" y="787.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (38 samples, 0.41%)</title><rect x="723.8" y="771.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (38 samples, 0.41%)</title><rect x="723.8" y="755.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (38 samples, 0.41%)</title><rect x="723.8" y="739.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 0.41%)</title><rect x="723.8" y="723.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 0.41%)</title><rect x="723.8" y="707.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (38 samples, 0.41%)</title><rect x="723.8" y="691.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (38 samples, 0.41%)</title><rect x="723.8" y="675.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (38 samples, 0.41%)</title><rect x="723.8" y="659.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (38 samples, 0.41%)</title><rect x="723.8" y="643.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (36 samples, 0.39%)</title><rect x="724.1" y="627.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (9 samples, 0.10%)</title><rect x="724.1" y="611.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.06%)</title><rect x="724.1" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.1" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.06%)</title><rect x="724.1" y="579.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="727.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (3 samples, 0.03%)</title><rect x="724.8" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.8" y="606.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.03%)</title><rect x="724.8" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.8" y="590.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.03%)</title><rect x="724.8" y="563.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="727.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (27 samples, 0.29%)</title><rect x="725.2" y="611.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$269/1544669751.get (27 samples, 0.29%)</title><rect x="725.2" y="595.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (27 samples, 0.29%)</title><rect x="725.2" y="579.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (27 samples, 0.29%)</title><rect x="725.2" y="563.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (27 samples, 0.29%)</title><rect x="725.2" y="547.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.2" y="558.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="725.2" y="531.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="728.2" y="542.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.24%)</title><rect x="725.9" y="531.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="728.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$392/1752394167.accept (7 samples, 0.08%)</title><rect x="728.6" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (7 samples, 0.08%)</title><rect x="728.6" y="803.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$388/975438429.run (7 samples, 0.08%)</title><rect x="728.6" y="787.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (7 samples, 0.08%)</title><rect x="728.6" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (7 samples, 0.08%)</title><rect x="728.6" y="755.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.08%)</title><rect x="728.6" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.08%)</title><rect x="728.6" y="723.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.6" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (7 samples, 0.08%)</title><rect x="728.6" y="707.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="731.6" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (14 samples, 0.15%)</title><rect x="729.5" y="835.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.5" y="846.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (14 samples, 0.15%)</title><rect x="729.5" y="819.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="732.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (7 samples, 0.08%)</title><rect x="731.3" y="835.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.04%)</title><rect x="731.3" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (4 samples, 0.04%)</title><rect x="731.3" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.04%)</title><rect x="731.3" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.04%)</title><rect x="731.3" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.04%)</title><rect x="731.3" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (4 samples, 0.04%)</title><rect x="731.3" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.3" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (4 samples, 0.04%)</title><rect x="731.3" y="723.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="734.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (3 samples, 0.03%)</title><rect x="731.8" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.8" y="830.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (3 samples, 0.03%)</title><rect x="731.8" y="803.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="734.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (19 samples, 0.20%)</title><rect x="732.2" y="835.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$292/1483596319.run (11 samples, 0.12%)</title><rect x="732.2" y="819.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (11 samples, 0.12%)</title><rect x="732.2" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.12%)</title><rect x="732.2" y="787.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.12%)</title><rect x="732.2" y="771.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.12%)</title><rect x="732.2" y="755.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (11 samples, 0.12%)</title><rect x="732.2" y="739.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (11 samples, 0.12%)</title><rect x="732.2" y="723.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (11 samples, 0.12%)</title><rect x="732.2" y="707.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (11 samples, 0.12%)</title><rect x="732.2" y="691.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (11 samples, 0.12%)</title><rect x="732.2" y="675.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (7 samples, 0.08%)</title><rect x="732.2" y="659.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (7 samples, 0.08%)</title><rect x="732.2" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (7 samples, 0.08%)</title><rect x="732.2" y="627.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1437941060.linkToTargetMethod (5 samples, 0.05%)</title><rect x="732.2" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.invoke (5 samples, 0.05%)</title><rect x="732.2" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.05%)</title><rect x="732.2" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.05%)</title><rect x="732.2" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.05%)</title><rect x="732.2" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.2" y="558.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="732.2" y="531.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="735.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.02%)</title><rect x="732.8" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="732.8" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="732.8" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$408/1005179682.get$Lambda (2 samples, 0.02%)</title><rect x="732.8" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$408 (2 samples, 0.02%)</title><rect x="732.8" y="547.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="735.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (4 samples, 0.04%)</title><rect x="733.1" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.04%)</title><rect x="733.1" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.04%)</title><rect x="733.1" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.04%)</title><rect x="733.1" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.04%)</title><rect x="733.1" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.04%)</title><rect x="733.1" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (4 samples, 0.04%)</title><rect x="733.1" y="563.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="736.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$302/1986808666.run (8 samples, 0.09%)</title><rect x="733.6" y="819.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (8 samples, 0.09%)</title><rect x="733.6" y="803.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.03%)</title><rect x="733.6" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.03%)</title><rect x="733.6" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$407/438359882.get$Lambda (3 samples, 0.03%)</title><rect x="733.6" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.6" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$407 (3 samples, 0.03%)</title><rect x="733.6" y="739.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="736.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.05%)</title><rect x="734.0" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.05%)</title><rect x="734.0" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.05%)</title><rect x="734.0" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.0" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (5 samples, 0.05%)</title><rect x="734.0" y="739.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="737.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (23 samples, 0.25%)</title><rect x="734.6" y="835.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.6" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.03%)</title><rect x="734.6" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.6" y="830.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.03%)</title><rect x="734.6" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.6" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.03%)</title><rect x="734.6" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.6" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.03%)</title><rect x="734.6" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.6" y="782.0"></text>
</g>
<g>
<title>java.time.Instant (3 samples, 0.03%)</title><rect x="734.6" y="755.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="737.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (20 samples, 0.22%)</title><rect x="735.0" y="819.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (19 samples, 0.20%)</title><rect x="735.1" y="803.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="738.1" y="814.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.05%)</title><rect x="735.1" y="787.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="738.1" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (14 samples, 0.15%)</title><rect x="735.8" y="787.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.8" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (14 samples, 0.15%)</title><rect x="735.8" y="771.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.8" y="782.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (14 samples, 0.15%)</title><rect x="735.8" y="755.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="738.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (24 samples, 0.26%)</title><rect x="737.5" y="835.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.5" y="846.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.14%)</title><rect x="737.7" y="819.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (7 samples, 0.08%)</title><rect x="737.7" y="803.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.7" y="814.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (7 samples, 0.08%)</title><rect x="737.7" y="787.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="740.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.06%)</title><rect x="738.6" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.6" y="814.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (6 samples, 0.06%)</title><rect x="738.6" y="787.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="741.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (10 samples, 0.11%)</title><rect x="739.3" y="819.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.3" y="830.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (10 samples, 0.11%)</title><rect x="739.3" y="803.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="742.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (6 samples, 0.06%)</title><rect x="740.6" y="835.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.6" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.06%)</title><rect x="740.6" y="819.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.6" y="830.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.06%)</title><rect x="740.6" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.6" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (6 samples, 0.06%)</title><rect x="740.6" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.6" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.create (6 samples, 0.06%)</title><rect x="740.6" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.6" y="782.0"></text>
</g>
<g>
<title>java.time.Instant (6 samples, 0.06%)</title><rect x="740.6" y="755.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="743.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (5 samples, 0.05%)</title><rect x="741.4" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5 samples, 0.05%)</title><rect x="741.4" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (5 samples, 0.05%)</title><rect x="741.4" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (5 samples, 0.05%)</title><rect x="741.4" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.02%)</title><rect x="741.4" y="771.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.4" y="782.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.02%)</title><rect x="741.4" y="755.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="744.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.03%)</title><rect x="741.6" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.03%)</title><rect x="741.6" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.03%)</title><rect x="741.6" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.03%)</title><rect x="741.6" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.03%)</title><rect x="741.6" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.6" y="718.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3 samples, 0.03%)</title><rect x="741.6" y="691.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="744.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (5 samples, 0.05%)</title><rect x="742.1" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (5 samples, 0.05%)</title><rect x="742.1" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.05%)</title><rect x="742.1" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.1" y="814.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (5 samples, 0.05%)</title><rect x="742.1" y="787.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="745.1" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,520 samples, 37.90%)</title><rect x="742.8" y="851.0" width="447.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.8" y="862.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (140 samples, 1.51%)</title><rect x="742.8" y="835.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.8" y="846.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (140 samples, 1.51%)</title><rect x="742.8" y="819.0" width="17.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="745.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,380 samples, 36.39%)</title><rect x="760.5" y="835.0" width="429.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.5" y="846.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,380 samples, 36.39%)</title><rect x="760.5" y="819.0" width="429.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.5" y="830.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,380 samples, 36.39%)</title><rect x="760.5" y="803.0" width="429.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.5" y="814.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (539 samples, 5.80%)</title><rect x="760.5" y="787.0" width="68.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.5" y="798.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (539 samples, 5.80%)</title><rect x="760.5" y="771.0" width="68.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.5" y="782.0">one/nio..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (322 samples, 3.47%)</title><rect x="760.5" y="755.0" width="41.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.5" y="766.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (163 samples, 1.76%)</title><rect x="760.5" y="739.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (163 samples, 1.76%)</title><rect x="760.5" y="723.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (163 samples, 1.76%)</title><rect x="760.5" y="707.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (163 samples, 1.76%)</title><rect x="760.5" y="691.0" width="20.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String (92 samples, 0.99%)</title><rect x="760.5" y="675.0" width="11.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="763.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (71 samples, 0.76%)</title><rect x="772.2" y="675.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.2" y="686.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.76%)</title><rect x="772.2" y="659.0" width="9.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="775.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (159 samples, 1.71%)</title><rect x="781.3" y="739.0" width="20.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (159 samples, 1.71%)</title><rect x="781.3" y="723.0" width="20.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/636786234.linkToTargetMethod (157 samples, 1.69%)</title><rect x="781.3" y="707.0" width="19.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (157 samples, 1.69%)</title><rect x="781.3" y="691.0" width="19.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.get$Lambda (157 samples, 1.69%)</title><rect x="781.3" y="675.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.3" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$112 (157 samples, 1.69%)</title><rect x="781.3" y="659.0" width="19.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="784.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (2 samples, 0.02%)</title><rect x="801.2" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.02%)</title><rect x="801.2" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.02%)</title><rect x="801.2" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.02%)</title><rect x="801.2" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.02%)</title><rect x="801.2" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.02%)</title><rect x="801.2" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.02%)</title><rect x="801.2" y="611.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="804.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (217 samples, 2.34%)</title><rect x="801.5" y="755.0" width="27.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.5" y="766.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (217 samples, 2.34%)</title><rect x="801.5" y="739.0" width="27.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.5" y="750.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (217 samples, 2.34%)</title><rect x="801.5" y="723.0" width="27.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.5" y="734.0">j..</text>
</g>
<g>
<title>java.lang.String (81 samples, 0.87%)</title><rect x="801.5" y="707.0" width="10.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="804.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (136 samples, 1.46%)</title><rect x="811.7" y="707.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.7" y="718.0"></text>
</g>
<g>
<title>byte[] (136 samples, 1.46%)</title><rect x="811.7" y="691.0" width="17.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="814.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (931 samples, 10.02%)</title><rect x="829.0" y="787.0" width="118.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.0" y="798.0">one/nio/http/H..</text>
</g>
<g>
<title>one.nio.http.Request (150 samples, 1.62%)</title><rect x="829.0" y="771.0" width="19.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="832.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (321 samples, 3.46%)</title><rect x="848.1" y="771.0" width="40.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.1" y="782.0">one..</text>
</g>
<g>
<title>java.lang.String[] (321 samples, 3.46%)</title><rect x="848.1" y="755.0" width="40.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="851.1" y="766.0">jav..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (460 samples, 4.95%)</title><rect x="888.9" y="771.0" width="58.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.9" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (460 samples, 4.95%)</title><rect x="888.9" y="755.0" width="58.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.9" y="766.0">one/ni..</text>
</g>
<g>
<title>char[] (244 samples, 2.63%)</title><rect x="888.9" y="739.0" width="31.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="891.9" y="750.0">ch..</text>
</g>
<g>
<title>java.lang.String (77 samples, 0.83%)</title><rect x="919.9" y="739.0" width="9.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="922.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (139 samples, 1.50%)</title><rect x="929.7" y="739.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="932.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (139 samples, 1.50%)</title><rect x="929.7" y="723.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (139 samples, 1.50%)</title><rect x="929.7" y="707.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="932.7" y="718.0"></text>
</g>
<g>
<title>byte[] (139 samples, 1.50%)</title><rect x="929.7" y="691.0" width="17.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="932.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (131 samples, 1.41%)</title><rect x="947.3" y="787.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="950.3" y="798.0"></text>
</g>
<g>
<title>byte[] (131 samples, 1.41%)</title><rect x="947.3" y="771.0" width="16.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="950.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (188 samples, 2.02%)</title><rect x="964.0" y="787.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.0" y="798.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (188 samples, 2.02%)</title><rect x="964.0" y="771.0" width="23.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.0" y="782.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (188 samples, 2.02%)</title><rect x="964.0" y="755.0" width="23.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.0" y="766.0">j..</text>
</g>
<g>
<title>java.lang.String (102 samples, 1.10%)</title><rect x="964.0" y="739.0" width="12.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="967.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (86 samples, 0.93%)</title><rect x="976.9" y="739.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.9" y="750.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.93%)</title><rect x="976.9" y="723.0" width="10.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="979.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,591 samples, 17.13%)</title><rect x="987.8" y="787.0" width="202.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.8" y="798.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,591 samples, 17.13%)</title><rect x="987.8" y="771.0" width="202.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="990.8" y="782.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (744 samples, 8.01%)</title><rect x="987.8" y="755.0" width="94.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="990.8" y="766.0">char[]</text>
</g>
<g>
<title>char[] (3 samples, 0.03%)</title><rect x="1082.4" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1085.4" y="766.0"></text>
</g>
<g>
<title>java.lang.String (300 samples, 3.23%)</title><rect x="1082.8" y="755.0" width="38.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1085.8" y="766.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (544 samples, 5.86%)</title><rect x="1120.9" y="755.0" width="69.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1123.9" y="766.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (544 samples, 5.86%)</title><rect x="1120.9" y="739.0" width="69.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.9" y="750.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (544 samples, 5.86%)</title><rect x="1120.9" y="723.0" width="69.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.9" y="734.0">java/la..</text>
</g>
<g>
<title>byte[] (544 samples, 5.86%)</title><rect x="1120.9" y="707.0" width="69.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1123.9" y="718.0">byte[]</text>
</g>
</g>
</svg>
