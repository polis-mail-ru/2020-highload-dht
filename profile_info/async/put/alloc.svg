<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (67,868 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (37,737 samples, 55.60%)</title><rect x="10.0" y="803.0" width="656.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (37,737 samples, 55.60%)</title><rect x="10.0" y="787.0" width="656.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (37,737 samples, 55.60%)</title><rect x="10.0" y="771.0" width="656.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (17,095 samples, 25.19%)</title><rect x="10.0" y="755.0" width="297.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/CompletableFuture$A..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10,557 samples, 15.56%)</title><rect x="10.0" y="739.0" width="183.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,307 samples, 6.35%)</title><rect x="10.0" y="723.0" width="74.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (34 samples, 0.05%)</title><rect x="10.0" y="707.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/741792946.apply (4,273 samples, 6.30%)</title><rect x="10.6" y="707.0" width="74.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.6" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (4,273 samples, 6.30%)</title><rect x="10.6" y="691.0" width="74.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.6" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (4,273 samples, 6.30%)</title><rect x="10.6" y="675.0" width="74.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.6" y="686.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.04%)</title><rect x="10.6" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.04%)</title><rect x="10.6" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/2133978669.get$Lambda (18 samples, 0.03%)</title><rect x="10.6" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$441 (18 samples, 0.03%)</title><rect x="10.6" y="611.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (61 samples, 0.09%)</title><rect x="11.1" y="659.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (61 samples, 0.09%)</title><rect x="11.1" y="643.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (43 samples, 0.06%)</title><rect x="11.1" y="627.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="14.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="11.8" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="11.8" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="11.8" y="595.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="14.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (114 samples, 0.17%)</title><rect x="12.1" y="659.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (114 samples, 0.17%)</title><rect x="12.1" y="643.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (56 samples, 0.08%)</title><rect x="12.1" y="627.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="15.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.09%)</title><rect x="13.1" y="627.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.09%)</title><rect x="13.1" y="611.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.09%)</title><rect x="13.1" y="595.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="16.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,904 samples, 5.75%)</title><rect x="14.1" y="659.0" width="67.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.1" y="670.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,904 samples, 5.75%)</title><rect x="14.1" y="643.0" width="67.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.1" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,904 samples, 5.75%)</title><rect x="14.1" y="627.0" width="67.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.1" y="638.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.07%)</title><rect x="14.1" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.07%)</title><rect x="14.1" y="595.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/704007913.get$Lambda (19 samples, 0.03%)</title><rect x="14.4" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$213 (19 samples, 0.03%)</title><rect x="14.4" y="563.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="17.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$369/2088470337.get$Lambda (17 samples, 0.03%)</title><rect x="14.7" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$369 (17 samples, 0.03%)</title><rect x="14.7" y="563.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="17.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,755 samples, 4.06%)</title><rect x="15.0" y="611.0" width="47.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.0" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,755 samples, 4.06%)</title><rect x="15.0" y="595.0" width="47.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.0" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,735 samples, 4.03%)</title><rect x="15.0" y="579.0" width="47.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.0" y="590.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$369/2088470337.apply (2,735 samples, 4.03%)</title><rect x="15.0" y="563.0" width="47.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.0" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,735 samples, 4.03%)</title><rect x="15.0" y="547.0" width="47.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.0" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,735 samples, 4.03%)</title><rect x="15.0" y="531.0" width="47.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.0" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/704007913.apply (2,735 samples, 4.03%)</title><rect x="15.0" y="515.0" width="47.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.0" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,735 samples, 4.03%)</title><rect x="15.0" y="499.0" width="47.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.0" y="510.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.04%)</title><rect x="15.0" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.04%)</title><rect x="15.0" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$439/1214099568.get$Lambda (24 samples, 0.04%)</title><rect x="15.0" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$439 (24 samples, 0.04%)</title><rect x="15.0" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="18.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (68 samples, 0.10%)</title><rect x="15.4" y="483.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (68 samples, 0.10%)</title><rect x="15.4" y="467.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (23 samples, 0.03%)</title><rect x="15.4" y="451.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="18.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (27 samples, 0.04%)</title><rect x="15.8" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$439/1214099568.apply (27 samples, 0.04%)</title><rect x="15.8" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (27 samples, 0.04%)</title><rect x="15.8" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (27 samples, 0.04%)</title><rect x="15.8" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/1245067522.apply (27 samples, 0.04%)</title><rect x="15.8" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (27 samples, 0.04%)</title><rect x="15.8" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (21 samples, 0.03%)</title><rect x="15.9" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="16.3" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="16.3" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="16.3" y="419.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="19.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (52 samples, 0.08%)</title><rect x="16.6" y="483.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (52 samples, 0.08%)</title><rect x="16.6" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (28 samples, 0.04%)</title><rect x="16.6" y="451.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="19.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="17.1" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="17.1" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.04%)</title><rect x="17.1" y="419.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="20.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,591 samples, 3.82%)</title><rect x="17.5" y="483.0" width="45.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.5" y="494.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.05%)</title><rect x="17.5" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.05%)</title><rect x="17.5" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/719435531.get$Lambda (21 samples, 0.03%)</title><rect x="17.5" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$436 (21 samples, 0.03%)</title><rect x="17.5" y="419.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="20.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$438/1095477642.get$Lambda (15 samples, 0.02%)</title><rect x="17.9" y="435.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$438 (15 samples, 0.02%)</title><rect x="17.9" y="419.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="20.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,122 samples, 3.13%)</title><rect x="18.1" y="467.0" width="36.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.1" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,122 samples, 3.13%)</title><rect x="18.1" y="451.0" width="36.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.1" y="462.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (19 samples, 0.03%)</title><rect x="18.1" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="21.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/719435531.apply (2,043 samples, 3.01%)</title><rect x="18.4" y="435.0" width="35.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.4" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2,043 samples, 3.01%)</title><rect x="18.4" y="419.0" width="35.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.4" y="430.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (47 samples, 0.07%)</title><rect x="18.7" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (47 samples, 0.07%)</title><rect x="18.7" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (29 samples, 0.04%)</title><rect x="18.7" y="371.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="21.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="19.2" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="19.2" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="19.2" y="339.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="22.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.04%)</title><rect x="19.5" y="403.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="22.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (41 samples, 0.06%)</title><rect x="19.9" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (20 samples, 0.03%)</title><rect x="19.9" y="387.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="22.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (21 samples, 0.03%)</title><rect x="20.3" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (20 samples, 0.03%)</title><rect x="20.3" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (20 samples, 0.03%)</title><rect x="20.3" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (20 samples, 0.03%)</title><rect x="20.3" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (20 samples, 0.03%)</title><rect x="20.3" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (20 samples, 0.03%)</title><rect x="20.3" y="307.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="23.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (67 samples, 0.10%)</title><rect x="20.7" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (67 samples, 0.10%)</title><rect x="20.7" y="387.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (17 samples, 0.03%)</title><rect x="20.7" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (17 samples, 0.03%)</title><rect x="20.7" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (17 samples, 0.03%)</title><rect x="20.7" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (17 samples, 0.03%)</title><rect x="20.7" y="323.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="23.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (50 samples, 0.07%)</title><rect x="21.0" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (50 samples, 0.07%)</title><rect x="21.0" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (31 samples, 0.05%)</title><rect x="21.0" y="339.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="24.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (19 samples, 0.03%)</title><rect x="21.5" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (19 samples, 0.03%)</title><rect x="21.5" y="323.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="24.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,849 samples, 2.72%)</title><rect x="21.8" y="403.0" width="32.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.8" y="414.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (20 samples, 0.03%)</title><rect x="21.8" y="387.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="24.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (35 samples, 0.05%)</title><rect x="22.2" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.2" y="398.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.02%)</title><rect x="22.2" y="371.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="25.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.03%)</title><rect x="22.4" y="371.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="25.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (138 samples, 0.20%)</title><rect x="22.8" y="387.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (138 samples, 0.20%)</title><rect x="22.8" y="371.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (138 samples, 0.20%)</title><rect x="22.8" y="355.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.20%)</title><rect x="22.8" y="339.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="25.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (68 samples, 0.10%)</title><rect x="25.2" y="387.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.2" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (68 samples, 0.10%)</title><rect x="25.2" y="371.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.2" y="382.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.10%)</title><rect x="25.2" y="355.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="28.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (147 samples, 0.22%)</title><rect x="26.4" y="387.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (147 samples, 0.22%)</title><rect x="26.4" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.03%)</title><rect x="26.4" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="29.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (130 samples, 0.19%)</title><rect x="26.7" y="355.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.7" y="366.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.19%)</title><rect x="26.7" y="339.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="29.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (48 samples, 0.07%)</title><rect x="28.9" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (48 samples, 0.07%)</title><rect x="28.9" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.9" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (48 samples, 0.07%)</title><rect x="28.9" y="355.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="31.9" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (26 samples, 0.04%)</title><rect x="29.8" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.8" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (26 samples, 0.04%)</title><rect x="29.8" y="371.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="32.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,091 samples, 1.61%)</title><rect x="30.2" y="387.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.2" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (23 samples, 0.03%)</title><rect x="30.2" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.03%)</title><rect x="30.2" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.03%)</title><rect x="30.2" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.2" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$454/669478227.get$Lambda (23 samples, 0.03%)</title><rect x="30.2" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.2" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$454 (23 samples, 0.03%)</title><rect x="30.2" y="307.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="33.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (555 samples, 0.82%)</title><rect x="30.6" y="371.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (339 samples, 0.50%)</title><rect x="30.6" y="355.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.6" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (339 samples, 0.50%)</title><rect x="30.6" y="339.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.6" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (339 samples, 0.50%)</title><rect x="30.6" y="323.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (339 samples, 0.50%)</title><rect x="30.6" y="307.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.6" y="318.0"></text>
</g>
<g>
<title>byte[] (339 samples, 0.50%)</title><rect x="30.6" y="291.0" width="5.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="33.6" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (52 samples, 0.08%)</title><rect x="36.5" y="355.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.5" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (52 samples, 0.08%)</title><rect x="36.5" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (52 samples, 0.08%)</title><rect x="36.5" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (52 samples, 0.08%)</title><rect x="36.5" y="307.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="39.5" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (47 samples, 0.07%)</title><rect x="37.4" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.4" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (19 samples, 0.03%)</title><rect x="37.4" y="339.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="40.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (28 samples, 0.04%)</title><rect x="37.7" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.7" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (28 samples, 0.04%)</title><rect x="37.7" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="40.7" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$454/669478227.test (117 samples, 0.17%)</title><rect x="38.2" y="355.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.2" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (117 samples, 0.17%)</title><rect x="38.2" y="339.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/324457684.test (117 samples, 0.17%)</title><rect x="38.2" y="323.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (117 samples, 0.17%)</title><rect x="38.2" y="307.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.2" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1810899357.test (117 samples, 0.17%)</title><rect x="38.2" y="291.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.2" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (117 samples, 0.17%)</title><rect x="38.2" y="275.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/594427726.test (117 samples, 0.17%)</title><rect x="38.2" y="259.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (117 samples, 0.17%)</title><rect x="38.2" y="243.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (117 samples, 0.17%)</title><rect x="38.2" y="227.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (117 samples, 0.17%)</title><rect x="38.2" y="211.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.08%)</title><rect x="38.2" y="195.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="41.2" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.09%)</title><rect x="39.2" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.2" y="206.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.09%)</title><rect x="39.2" y="179.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="42.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (513 samples, 0.76%)</title><rect x="40.3" y="371.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (513 samples, 0.76%)</title><rect x="40.3" y="355.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (513 samples, 0.76%)</title><rect x="40.3" y="339.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.3" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (15 samples, 0.02%)</title><rect x="40.3" y="323.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="43.3" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.03%)</title><rect x="40.5" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="43.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (46 samples, 0.07%)</title><rect x="40.8" y="323.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="43.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (16 samples, 0.02%)</title><rect x="41.6" y="323.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="44.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.05%)</title><rect x="41.9" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.05%)</title><rect x="41.9" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.get$Lambda (31 samples, 0.05%)</title><rect x="41.9" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.9" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (31 samples, 0.05%)</title><rect x="41.9" y="275.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="44.9" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (26 samples, 0.04%)</title><rect x="42.4" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.4" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (26 samples, 0.04%)</title><rect x="42.4" y="307.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="45.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (314 samples, 0.46%)</title><rect x="42.9" y="323.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.9" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (314 samples, 0.46%)</title><rect x="42.9" y="307.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.9" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (314 samples, 0.46%)</title><rect x="42.9" y="291.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.09%)</title><rect x="42.9" y="275.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.09%)</title><rect x="42.9" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.get$Lambda (59 samples, 0.09%)</title><rect x="42.9" y="243.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.9" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$147 (59 samples, 0.09%)</title><rect x="42.9" y="227.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="45.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (46 samples, 0.07%)</title><rect x="43.9" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.9" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (46 samples, 0.07%)</title><rect x="43.9" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (46 samples, 0.07%)</title><rect x="43.9" y="243.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.07%)</title><rect x="43.9" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.07%)</title><rect x="43.9" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.07%)</title><rect x="43.9" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.9" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.07%)</title><rect x="43.9" y="179.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.07%)</title><rect x="43.9" y="163.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.07%)</title><rect x="43.9" y="147.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="46.9" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (117 samples, 0.17%)</title><rect x="44.7" y="275.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.7" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (117 samples, 0.17%)</title><rect x="44.7" y="259.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (58 samples, 0.09%)</title><rect x="44.7" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.09%)</title><rect x="44.7" y="227.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.7" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.09%)</title><rect x="44.7" y="211.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="47.7" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (59 samples, 0.09%)</title><rect x="45.7" y="243.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.7" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (59 samples, 0.09%)</title><rect x="45.7" y="227.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="48.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (92 samples, 0.14%)</title><rect x="46.8" y="275.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (92 samples, 0.14%)</title><rect x="46.8" y="259.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="49.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (47 samples, 0.07%)</title><rect x="48.4" y="323.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (47 samples, 0.07%)</title><rect x="48.4" y="307.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="51.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (63 samples, 0.09%)</title><rect x="49.2" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (20 samples, 0.03%)</title><rect x="49.2" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.2" y="382.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.03%)</title><rect x="49.2" y="355.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="52.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.06%)</title><rect x="49.5" y="371.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (43 samples, 0.06%)</title><rect x="49.5" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (43 samples, 0.06%)</title><rect x="49.5" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.06%)</title><rect x="49.5" y="323.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (19 samples, 0.03%)</title><rect x="49.5" y="307.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.03%)</title><rect x="49.5" y="291.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="52.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (24 samples, 0.04%)</title><rect x="49.9" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (24 samples, 0.04%)</title><rect x="49.9" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.9" y="302.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.04%)</title><rect x="49.9" y="275.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="52.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (63 samples, 0.09%)</title><rect x="50.3" y="387.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (63 samples, 0.09%)</title><rect x="50.3" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.09%)</title><rect x="50.3" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (63 samples, 0.09%)</title><rect x="50.3" y="339.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (63 samples, 0.09%)</title><rect x="50.3" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.09%)</title><rect x="50.3" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.03%)</title><rect x="50.3" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.03%)</title><rect x="50.3" y="275.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="53.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (40 samples, 0.06%)</title><rect x="50.7" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (40 samples, 0.06%)</title><rect x="50.7" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.7" y="286.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.06%)</title><rect x="50.7" y="259.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="53.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (150 samples, 0.22%)</title><rect x="51.4" y="387.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.4" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (54 samples, 0.08%)</title><rect x="51.4" y="371.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="54.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (43 samples, 0.06%)</title><rect x="52.3" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.06%)</title><rect x="52.3" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="55.3" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (53 samples, 0.08%)</title><rect x="53.0" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.0" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (53 samples, 0.08%)</title><rect x="53.0" y="355.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="56.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.09%)</title><rect x="54.0" y="435.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.09%)</title><rect x="54.0" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.09%)</title><rect x="54.0" y="403.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="57.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (88 samples, 0.13%)</title><rect x="55.0" y="467.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="58.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.03%)</title><rect x="56.5" y="467.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="59.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (324 samples, 0.48%)</title><rect x="56.9" y="467.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.04%)</title><rect x="56.9" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.04%)</title><rect x="56.9" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$392/998733248.get$Lambda (18 samples, 0.03%)</title><rect x="57.0" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$392 (18 samples, 0.03%)</title><rect x="57.0" y="403.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="60.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (31 samples, 0.05%)</title><rect x="57.4" y="451.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="60.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (21 samples, 0.03%)</title><rect x="57.9" y="451.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="60.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (37 samples, 0.05%)</title><rect x="58.3" y="451.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="61.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (95 samples, 0.14%)</title><rect x="58.9" y="451.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (95 samples, 0.14%)</title><rect x="58.9" y="435.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (95 samples, 0.14%)</title><rect x="58.9" y="419.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (95 samples, 0.14%)</title><rect x="58.9" y="403.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (95 samples, 0.14%)</title><rect x="58.9" y="387.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (95 samples, 0.14%)</title><rect x="58.9" y="371.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (95 samples, 0.14%)</title><rect x="58.9" y="355.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (95 samples, 0.14%)</title><rect x="58.9" y="339.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (95 samples, 0.14%)</title><rect x="58.9" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.05%)</title><rect x="58.9" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="58.9" y="291.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$410/487703675.get$Lambda (25 samples, 0.04%)</title><rect x="59.1" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$410 (25 samples, 0.04%)</title><rect x="59.1" y="259.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="62.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (32 samples, 0.05%)</title><rect x="59.5" y="307.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="62.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (29 samples, 0.04%)</title><rect x="60.1" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (29 samples, 0.04%)</title><rect x="60.1" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (23 samples, 0.03%)</title><rect x="60.2" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (23 samples, 0.03%)</title><rect x="60.2" y="259.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="63.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (87 samples, 0.13%)</title><rect x="60.6" y="451.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.6" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap (44 samples, 0.06%)</title><rect x="60.8" y="435.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="63.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (29 samples, 0.04%)</title><rect x="61.6" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.6" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (29 samples, 0.04%)</title><rect x="61.6" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.6" y="430.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.04%)</title><rect x="61.6" y="403.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="64.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (27 samples, 0.04%)</title><rect x="62.1" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.04%)</title><rect x="62.1" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="65.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.03%)</title><rect x="62.5" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.03%)</title><rect x="62.5" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.03%)</title><rect x="62.5" y="547.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="65.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (47 samples, 0.07%)</title><rect x="62.9" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (47 samples, 0.07%)</title><rect x="62.9" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (29 samples, 0.04%)</title><rect x="62.9" y="579.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="65.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="63.4" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.03%)</title><rect x="63.4" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.03%)</title><rect x="63.4" y="547.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="66.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,052 samples, 1.55%)</title><rect x="63.7" y="611.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.05%)</title><rect x="63.7" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.05%)</title><rect x="63.7" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$356/142089639.get$Lambda (24 samples, 0.04%)</title><rect x="63.7" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$356 (24 samples, 0.04%)</title><rect x="63.7" y="547.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="66.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (62 samples, 0.09%)</title><rect x="64.3" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (62 samples, 0.09%)</title><rect x="64.3" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1092332279.apply (30 samples, 0.04%)</title><rect x="64.3" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (30 samples, 0.04%)</title><rect x="64.3" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (30 samples, 0.04%)</title><rect x="64.3" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.04%)</title><rect x="64.3" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="67.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.05%)</title><rect x="64.8" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (32 samples, 0.05%)</title><rect x="64.8" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.05%)</title><rect x="64.8" y="531.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="67.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (17 samples, 0.03%)</title><rect x="65.4" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.03%)</title><rect x="65.4" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.03%)</title><rect x="65.4" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.03%)</title><rect x="65.4" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.03%)</title><rect x="65.4" y="531.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="68.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (938 samples, 1.38%)</title><rect x="65.7" y="595.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (938 samples, 1.38%)</title><rect x="65.7" y="579.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (72 samples, 0.11%)</title><rect x="65.7" y="563.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="68.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (837 samples, 1.23%)</title><rect x="66.9" y="563.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.9" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (29 samples, 0.04%)</title><rect x="67.1" y="547.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="70.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (20 samples, 0.03%)</title><rect x="67.6" y="547.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="70.6" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (39 samples, 0.06%)</title><rect x="68.0" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.0" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (39 samples, 0.06%)</title><rect x="68.0" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.0" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (39 samples, 0.06%)</title><rect x="68.0" y="515.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="71.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (16 samples, 0.02%)</title><rect x="68.6" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.02%)</title><rect x="68.6" y="531.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="71.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (62 samples, 0.09%)</title><rect x="68.9" y="547.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="71.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (39 samples, 0.06%)</title><rect x="70.0" y="547.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="73.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (45 samples, 0.07%)</title><rect x="70.7" y="547.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="73.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.08%)</title><rect x="71.5" y="547.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="74.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (250 samples, 0.37%)</title><rect x="72.4" y="547.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (20 samples, 0.03%)</title><rect x="72.4" y="531.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="75.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (16 samples, 0.02%)</title><rect x="72.8" y="531.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="75.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (23 samples, 0.03%)</title><rect x="73.1" y="531.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="76.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.03%)</title><rect x="73.7" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.03%)</title><rect x="73.7" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.get$Lambda (17 samples, 0.03%)</title><rect x="73.7" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$341 (17 samples, 0.03%)</title><rect x="73.7" y="483.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="76.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (21 samples, 0.03%)</title><rect x="74.2" y="531.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.04%)</title><rect x="74.6" y="531.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="77.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (102 samples, 0.15%)</title><rect x="75.0" y="531.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (18 samples, 0.03%)</title><rect x="75.0" y="515.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="78.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (27 samples, 0.04%)</title><rect x="75.3" y="515.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="78.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (17 samples, 0.03%)</title><rect x="75.8" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (17 samples, 0.03%)</title><rect x="75.8" y="499.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="78.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (40 samples, 0.06%)</title><rect x="76.1" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (15 samples, 0.02%)</title><rect x="76.5" y="499.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="79.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (161 samples, 0.24%)</title><rect x="76.8" y="547.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (22 samples, 0.03%)</title><rect x="76.8" y="531.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="79.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (15 samples, 0.02%)</title><rect x="77.5" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (15 samples, 0.02%)</title><rect x="77.5" y="515.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="80.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (105 samples, 0.15%)</title><rect x="77.8" y="531.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (21 samples, 0.03%)</title><rect x="77.8" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="80.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (38 samples, 0.06%)</title><rect x="78.1" y="515.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="81.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (15 samples, 0.02%)</title><rect x="78.8" y="515.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (15 samples, 0.02%)</title><rect x="78.8" y="499.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="81.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (31 samples, 0.05%)</title><rect x="79.0" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (18 samples, 0.03%)</title><rect x="79.3" y="499.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="82.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (52 samples, 0.08%)</title><rect x="79.6" y="547.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (52 samples, 0.08%)</title><rect x="79.6" y="531.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (52 samples, 0.08%)</title><rect x="79.6" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (25 samples, 0.04%)</title><rect x="79.6" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (25 samples, 0.04%)</title><rect x="79.6" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (25 samples, 0.04%)</title><rect x="79.6" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.04%)</title><rect x="79.6" y="451.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="82.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (27 samples, 0.04%)</title><rect x="80.0" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.0" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (27 samples, 0.04%)</title><rect x="80.0" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.0" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (27 samples, 0.04%)</title><rect x="80.0" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.0" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (27 samples, 0.04%)</title><rect x="80.0" y="451.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="83.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (58 samples, 0.09%)</title><rect x="80.5" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2015781843.linkToTargetMethod (17 samples, 0.03%)</title><rect x="80.5" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.03%)</title><rect x="80.5" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$241/940228546.get$Lambda (17 samples, 0.03%)</title><rect x="80.5" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$241 (17 samples, 0.03%)</title><rect x="80.5" y="483.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="83.5" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (41 samples, 0.06%)</title><rect x="80.8" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$241/940228546.run (41 samples, 0.06%)</title><rect x="80.8" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (41 samples, 0.06%)</title><rect x="80.8" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.8" y="510.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (30 samples, 0.04%)</title><rect x="81.0" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.0" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (16 samples, 0.02%)</title><rect x="81.0" y="467.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="84.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (29 samples, 0.04%)</title><rect x="81.5" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.04%)</title><rect x="81.5" y="547.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="84.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (22 samples, 0.03%)</title><rect x="82.0" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (22 samples, 0.03%)</title><rect x="82.0" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.03%)</title><rect x="82.0" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.0" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.03%)</title><rect x="82.0" y="611.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="85.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (144 samples, 0.21%)</title><rect x="82.4" y="659.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.4" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (125 samples, 0.18%)</title><rect x="82.4" y="643.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="85.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (19 samples, 0.03%)</title><rect x="84.6" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (19 samples, 0.03%)</title><rect x="84.6" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (19 samples, 0.03%)</title><rect x="84.6" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.6" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (19 samples, 0.03%)</title><rect x="84.6" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.6" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (19 samples, 0.03%)</title><rect x="84.6" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.6" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (19 samples, 0.03%)</title><rect x="84.6" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.6" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (19 samples, 0.03%)</title><rect x="84.6" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.6" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (19 samples, 0.03%)</title><rect x="84.6" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.6" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (19 samples, 0.03%)</title><rect x="84.6" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (19 samples, 0.03%)</title><rect x="84.6" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.6" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (19 samples, 0.03%)</title><rect x="84.6" y="483.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="87.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6,250 samples, 9.21%)</title><rect x="84.9" y="723.0" width="108.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.9" y="734.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6,250 samples, 9.21%)</title><rect x="84.9" y="707.0" width="108.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.9" y="718.0">java/util/con..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$528/67792651.accept (6,250 samples, 9.21%)</title><rect x="84.9" y="691.0" width="108.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.9" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (6,250 samples, 9.21%)</title><rect x="84.9" y="675.0" width="108.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.9" y="686.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (3,254 samples, 4.79%)</title><rect x="84.9" y="659.0" width="56.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.9" y="670.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,254 samples, 4.79%)</title><rect x="84.9" y="643.0" width="56.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.9" y="654.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,254 samples, 4.79%)</title><rect x="84.9" y="627.0" width="56.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.9" y="638.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,233 samples, 3.29%)</title><rect x="84.9" y="611.0" width="38.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.9" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,233 samples, 3.29%)</title><rect x="84.9" y="595.0" width="38.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.9" y="606.0">one..</text>
</g>
<g>
<title>byte[] (1,579 samples, 2.33%)</title><rect x="84.9" y="579.0" width="27.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="87.9" y="590.0">b..</text>
</g>
<g>
<title>byte[] (654 samples, 0.96%)</title><rect x="112.3" y="579.0" width="11.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="115.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,021 samples, 1.50%)</title><rect x="123.7" y="611.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.7" y="622.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,021 samples, 1.50%)</title><rect x="123.7" y="595.0" width="17.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="126.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (2,996 samples, 4.41%)</title><rect x="141.5" y="659.0" width="52.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.5" y="670.0">ru/ma..</text>
</g>
<g>
<title>one.nio.http.Response (573 samples, 0.84%)</title><rect x="141.5" y="643.0" width="9.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="144.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,423 samples, 3.57%)</title><rect x="151.4" y="643.0" width="42.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.4" y="654.0">one/..</text>
</g>
<g>
<title>byte[] (999 samples, 1.47%)</title><rect x="151.4" y="627.0" width="17.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="154.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (800 samples, 1.18%)</title><rect x="168.8" y="627.0" width="13.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="171.8" y="638.0"></text>
</g>
<g>
<title>java.lang.String (624 samples, 0.92%)</title><rect x="182.7" y="627.0" width="10.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="185.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$125/631303880.get (6,538 samples, 9.63%)</title><rect x="193.6" y="739.0" width="113.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.6" y="750.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$put$10 (6,538 samples, 9.63%)</title><rect x="193.6" y="723.0" width="113.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.6" y="734.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (836 samples, 1.23%)</title><rect x="193.6" y="707.0" width="14.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="196.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (3,550 samples, 5.23%)</title><rect x="208.1" y="707.0" width="61.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.1" y="718.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (39 samples, 0.06%)</title><rect x="208.1" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (39 samples, 0.06%)</title><rect x="208.1" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (39 samples, 0.06%)</title><rect x="208.1" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.1" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (36 samples, 0.05%)</title><rect x="208.1" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (36 samples, 0.05%)</title><rect x="208.1" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.1" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (17 samples, 0.03%)</title><rect x="208.1" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.1" y="622.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (17 samples, 0.03%)</title><rect x="208.1" y="595.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="211.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (19 samples, 0.03%)</title><rect x="208.4" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (19 samples, 0.03%)</title><rect x="208.4" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (19 samples, 0.03%)</title><rect x="208.4" y="579.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="211.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (3,511 samples, 5.17%)</title><rect x="208.8" y="691.0" width="61.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.8" y="702.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2,444 samples, 3.60%)</title><rect x="208.8" y="675.0" width="42.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.8" y="686.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,444 samples, 3.60%)</title><rect x="208.8" y="659.0" width="42.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="211.8" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (466 samples, 0.69%)</title><rect x="251.3" y="675.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (466 samples, 0.69%)</title><rect x="251.3" y="659.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (157 samples, 0.23%)</title><rect x="251.3" y="643.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="254.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (309 samples, 0.46%)</title><rect x="254.0" y="643.0" width="5.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="257.0" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (601 samples, 0.89%)</title><rect x="259.4" y="675.0" width="10.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="262.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (2,152 samples, 3.17%)</title><rect x="269.8" y="707.0" width="37.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.8" y="718.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (927 samples, 1.37%)</title><rect x="269.8" y="691.0" width="16.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (927 samples, 1.37%)</title><rect x="269.8" y="675.0" width="16.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (927 samples, 1.37%)</title><rect x="269.8" y="659.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.8" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (927 samples, 1.37%)</title><rect x="269.8" y="643.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="272.8" y="654.0"></text>
</g>
<g>
<title>byte[] (927 samples, 1.37%)</title><rect x="269.8" y="627.0" width="16.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="272.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,225 samples, 1.80%)</title><rect x="285.9" y="691.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.9" y="702.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,225 samples, 1.80%)</title><rect x="285.9" y="675.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.9" y="686.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,225 samples, 1.80%)</title><rect x="285.9" y="659.0" width="21.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="288.9" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (334 samples, 0.49%)</title><rect x="307.2" y="755.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (333 samples, 0.49%)</title><rect x="307.2" y="739.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (333 samples, 0.49%)</title><rect x="307.2" y="723.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$235/2044206769.accept (242 samples, 0.36%)</title><rect x="307.2" y="707.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$13 (242 samples, 0.36%)</title><rect x="307.2" y="691.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (121 samples, 0.18%)</title><rect x="307.2" y="675.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (121 samples, 0.18%)</title><rect x="307.2" y="659.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="310.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (121 samples, 0.18%)</title><rect x="307.2" y="643.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (78 samples, 0.11%)</title><rect x="307.2" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.2" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (78 samples, 0.11%)</title><rect x="307.2" y="611.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.2" y="622.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.11%)</title><rect x="307.2" y="595.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="310.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 0.06%)</title><rect x="308.6" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.6" y="638.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (43 samples, 0.06%)</title><rect x="308.6" y="611.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="311.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$220/655598435.mergeResponse (121 samples, 0.18%)</title><rect x="309.3" y="675.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$9 (121 samples, 0.18%)</title><rect x="309.3" y="659.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergePutDeleteResponseBuilders (121 samples, 0.18%)</title><rect x="309.3" y="643.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.3" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.03%)</title><rect x="309.3" y="627.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="312.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (102 samples, 0.15%)</title><rect x="309.7" y="627.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.7" y="638.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.06%)</title><rect x="309.7" y="611.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="312.7" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (41 samples, 0.06%)</title><rect x="310.4" y="611.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="313.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.03%)</title><rect x="311.1" y="611.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="314.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$230/1479809634.accept (91 samples, 0.13%)</title><rect x="311.5" y="707.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (91 samples, 0.13%)</title><rect x="311.5" y="691.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (91 samples, 0.13%)</title><rect x="311.5" y="675.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (91 samples, 0.13%)</title><rect x="311.5" y="659.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.5" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (91 samples, 0.13%)</title><rect x="311.5" y="643.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="314.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,604 samples, 3.84%)</title><rect x="313.0" y="755.0" width="45.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.0" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,480 samples, 3.65%)</title><rect x="313.0" y="739.0" width="43.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.0" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,424 samples, 3.57%)</title><rect x="313.0" y="723.0" width="42.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.0" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2,424 samples, 3.57%)</title><rect x="313.0" y="707.0" width="42.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.0" y="718.0">java..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2,424 samples, 3.57%)</title><rect x="313.0" y="691.0" width="42.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="316.0" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (56 samples, 0.08%)</title><rect x="355.2" y="723.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (56 samples, 0.08%)</title><rect x="355.2" y="707.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (56 samples, 0.08%)</title><rect x="355.2" y="691.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (56 samples, 0.08%)</title><rect x="355.2" y="675.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (56 samples, 0.08%)</title><rect x="355.2" y="659.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="358.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (124 samples, 0.18%)</title><rect x="356.2" y="739.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (113 samples, 0.17%)</title><rect x="356.2" y="723.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (113 samples, 0.17%)</title><rect x="356.2" y="707.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (113 samples, 0.17%)</title><rect x="356.2" y="691.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="359.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$462/1898580517.run (1,010 samples, 1.49%)</title><rect x="358.3" y="755.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="361.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,010 samples, 1.49%)</title><rect x="358.3" y="739.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,010 samples, 1.49%)</title><rect x="358.3" y="723.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,010 samples, 1.49%)</title><rect x="358.3" y="707.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,010 samples, 1.49%)</title><rect x="358.3" y="691.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,010 samples, 1.49%)</title><rect x="358.3" y="675.0" width="17.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="361.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,010 samples, 1.49%)</title><rect x="358.3" y="659.0" width="17.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,010 samples, 1.49%)</title><rect x="358.3" y="643.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="361.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,010 samples, 1.49%)</title><rect x="358.3" y="627.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,010 samples, 1.49%)</title><rect x="358.3" y="611.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,010 samples, 1.49%)</title><rect x="358.3" y="595.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (893 samples, 1.32%)</title><rect x="358.3" y="579.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.07%)</title><rect x="358.3" y="563.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.07%)</title><rect x="358.3" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="361.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$468/1654403376.get$Lambda (26 samples, 0.04%)</title><rect x="358.3" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$468 (26 samples, 0.04%)</title><rect x="358.3" y="515.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="361.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$502/671420084.get$Lambda (16 samples, 0.02%)</title><rect x="358.8" y="531.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$502 (16 samples, 0.02%)</title><rect x="358.8" y="515.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="361.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (844 samples, 1.24%)</title><rect x="359.2" y="563.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (43 samples, 0.06%)</title><rect x="359.2" y="547.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="362.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (801 samples, 1.18%)</title><rect x="359.9" y="547.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (801 samples, 1.18%)</title><rect x="359.9" y="531.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (801 samples, 1.18%)</title><rect x="359.9" y="515.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (118 samples, 0.17%)</title><rect x="359.9" y="499.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (46 samples, 0.07%)</title><rect x="359.9" y="483.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="362.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$484/1129193864.apply (72 samples, 0.11%)</title><rect x="360.7" y="483.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (72 samples, 0.11%)</title><rect x="360.7" y="467.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (72 samples, 0.11%)</title><rect x="360.7" y="451.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (19 samples, 0.03%)</title><rect x="360.7" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="363.7" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (19 samples, 0.03%)</title><rect x="360.7" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.7" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (19 samples, 0.03%)</title><rect x="360.7" y="403.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="363.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (53 samples, 0.08%)</title><rect x="361.0" y="435.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (41 samples, 0.06%)</title><rect x="361.2" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (41 samples, 0.06%)</title><rect x="361.2" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (28 samples, 0.04%)</title><rect x="361.2" y="387.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="364.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (683 samples, 1.01%)</title><rect x="362.0" y="499.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (683 samples, 1.01%)</title><rect x="362.0" y="483.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$439/1214099568.apply (683 samples, 1.01%)</title><rect x="362.0" y="467.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (683 samples, 1.01%)</title><rect x="362.0" y="451.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (683 samples, 1.01%)</title><rect x="362.0" y="435.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/1245067522.apply (683 samples, 1.01%)</title><rect x="362.0" y="419.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (683 samples, 1.01%)</title><rect x="362.0" y="403.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (72 samples, 0.11%)</title><rect x="362.1" y="387.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (72 samples, 0.11%)</title><rect x="362.1" y="371.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (32 samples, 0.05%)</title><rect x="362.1" y="355.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="365.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.06%)</title><rect x="362.6" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.06%)</title><rect x="362.6" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.06%)</title><rect x="362.6" y="323.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="365.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (604 samples, 0.89%)</title><rect x="363.3" y="387.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (211 samples, 0.31%)</title><rect x="363.3" y="371.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (211 samples, 0.31%)</title><rect x="363.3" y="355.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (211 samples, 0.31%)</title><rect x="363.3" y="339.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$471/263178148.accept (86 samples, 0.13%)</title><rect x="363.3" y="323.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (86 samples, 0.13%)</title><rect x="363.3" y="307.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (86 samples, 0.13%)</title><rect x="363.3" y="291.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (75 samples, 0.11%)</title><rect x="363.5" y="275.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (75 samples, 0.11%)</title><rect x="363.5" y="259.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (41 samples, 0.06%)</title><rect x="363.5" y="243.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="366.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.05%)</title><rect x="364.2" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="367.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.05%)</title><rect x="364.2" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.05%)</title><rect x="364.2" y="211.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="367.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$479/249029434.accept (99 samples, 0.15%)</title><rect x="364.8" y="323.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (99 samples, 0.15%)</title><rect x="364.8" y="307.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (99 samples, 0.15%)</title><rect x="364.8" y="291.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (99 samples, 0.15%)</title><rect x="364.8" y="275.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (99 samples, 0.15%)</title><rect x="364.8" y="259.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 0.15%)</title><rect x="364.8" y="243.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 0.15%)</title><rect x="364.8" y="227.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (99 samples, 0.15%)</title><rect x="364.8" y="211.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="367.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (99 samples, 0.15%)</title><rect x="364.8" y="195.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (99 samples, 0.15%)</title><rect x="364.8" y="179.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (34 samples, 0.05%)</title><rect x="364.8" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (34 samples, 0.05%)</title><rect x="364.8" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.8" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (18 samples, 0.03%)</title><rect x="364.8" y="131.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="367.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (16 samples, 0.02%)</title><rect x="365.1" y="131.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (16 samples, 0.02%)</title><rect x="365.1" y="115.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (16 samples, 0.02%)</title><rect x="365.1" y="99.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (16 samples, 0.02%)</title><rect x="365.1" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (16 samples, 0.02%)</title><rect x="365.1" y="67.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.1" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.02%)</title><rect x="365.1" y="51.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="368.1" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (65 samples, 0.10%)</title><rect x="365.4" y="163.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (65 samples, 0.10%)</title><rect x="365.4" y="147.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="368.4" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (17 samples, 0.03%)</title><rect x="365.4" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (17 samples, 0.03%)</title><rect x="365.4" y="115.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="368.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (48 samples, 0.07%)</title><rect x="365.7" y="131.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.7" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (30 samples, 0.04%)</title><rect x="365.7" y="115.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="368.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (18 samples, 0.03%)</title><rect x="366.2" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (18 samples, 0.03%)</title><rect x="366.2" y="99.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (18 samples, 0.03%)</title><rect x="366.2" y="83.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (18 samples, 0.03%)</title><rect x="366.2" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (18 samples, 0.03%)</title><rect x="366.2" y="51.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (18 samples, 0.03%)</title><rect x="366.2" y="35.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="369.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="366.5" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="366.5" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="366.5" y="291.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="369.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (393 samples, 0.58%)</title><rect x="367.0" y="371.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (35 samples, 0.05%)</title><rect x="367.0" y="355.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="370.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (24 samples, 0.04%)</title><rect x="367.6" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="370.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (24 samples, 0.04%)</title><rect x="367.6" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.04%)</title><rect x="367.6" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="370.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (334 samples, 0.49%)</title><rect x="368.0" y="355.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (16 samples, 0.02%)</title><rect x="368.0" y="339.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="371.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (193 samples, 0.28%)</title><rect x="368.3" y="339.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (30 samples, 0.04%)</title><rect x="368.3" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.3" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (30 samples, 0.04%)</title><rect x="368.3" y="307.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="371.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (29 samples, 0.04%)</title><rect x="368.8" y="323.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="371.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (134 samples, 0.20%)</title><rect x="369.3" y="323.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (16 samples, 0.02%)</title><rect x="369.3" y="307.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="372.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (22 samples, 0.03%)</title><rect x="369.6" y="307.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="372.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (34 samples, 0.05%)</title><rect x="370.0" y="307.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="373.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (26 samples, 0.04%)</title><rect x="370.6" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (26 samples, 0.04%)</title><rect x="370.6" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="373.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (36 samples, 0.05%)</title><rect x="371.0" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (125 samples, 0.18%)</title><rect x="371.7" y="339.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.03%)</title><rect x="371.7" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="374.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (63 samples, 0.09%)</title><rect x="372.0" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39 samples, 0.06%)</title><rect x="372.0" y="307.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="375.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.04%)</title><rect x="372.7" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.7" y="318.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.04%)</title><rect x="372.7" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="375.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.06%)</title><rect x="373.1" y="323.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.06%)</title><rect x="373.1" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.06%)</title><rect x="373.1" y="291.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.06%)</title><rect x="373.1" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.06%)</title><rect x="373.1" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.06%)</title><rect x="373.1" y="243.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="376.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (117 samples, 0.17%)</title><rect x="373.8" y="579.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (117 samples, 0.17%)</title><rect x="373.8" y="563.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (117 samples, 0.17%)</title><rect x="373.8" y="547.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (117 samples, 0.17%)</title><rect x="373.8" y="531.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (117 samples, 0.17%)</title><rect x="373.8" y="515.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.8" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (117 samples, 0.17%)</title><rect x="373.8" y="499.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.8" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (57 samples, 0.08%)</title><rect x="373.8" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.8" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (57 samples, 0.08%)</title><rect x="373.8" y="467.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="376.8" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (60 samples, 0.09%)</title><rect x="374.8" y="483.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.8" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (60 samples, 0.09%)</title><rect x="374.8" y="467.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="377.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,443 samples, 5.07%)</title><rect x="375.9" y="755.0" width="59.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.9" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,443 samples, 5.07%)</title><rect x="375.9" y="739.0" width="59.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="378.9" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,930 samples, 4.32%)</title><rect x="375.9" y="723.0" width="50.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.9" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (2,930 samples, 4.32%)</title><rect x="375.9" y="707.0" width="50.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.9" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,930 samples, 4.32%)</title><rect x="375.9" y="691.0" width="50.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.9" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (74 samples, 0.11%)</title><rect x="375.9" y="675.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (74 samples, 0.11%)</title><rect x="375.9" y="659.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (74 samples, 0.11%)</title><rect x="375.9" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (74 samples, 0.11%)</title><rect x="375.9" y="627.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="378.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/857068247.linkToTargetMethod (49 samples, 0.07%)</title><rect x="375.9" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/895281180.invoke (49 samples, 0.07%)</title><rect x="375.9" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.07%)</title><rect x="375.9" y="579.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.03%)</title><rect x="375.9" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.03%)</title><rect x="375.9" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="378.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (31 samples, 0.05%)</title><rect x="376.2" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (31 samples, 0.05%)</title><rect x="376.2" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.2" y="558.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.05%)</title><rect x="376.2" y="531.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="379.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (25 samples, 0.04%)</title><rect x="376.7" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.04%)</title><rect x="376.7" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.04%)</title><rect x="376.7" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$464/909082479.get$Lambda (25 samples, 0.04%)</title><rect x="376.7" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$464 (25 samples, 0.04%)</title><rect x="376.7" y="547.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="379.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,856 samples, 4.21%)</title><rect x="377.2" y="675.0" width="49.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.2" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,856 samples, 4.21%)</title><rect x="377.2" y="659.0" width="49.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.2" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,856 samples, 4.21%)</title><rect x="377.2" y="643.0" width="49.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.2" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,856 samples, 4.21%)</title><rect x="377.2" y="627.0" width="49.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.2" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,360 samples, 2.00%)</title><rect x="377.2" y="611.0" width="23.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.2" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,360 samples, 2.00%)</title><rect x="377.2" y="595.0" width="23.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.2" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,360 samples, 2.00%)</title><rect x="377.2" y="579.0" width="23.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.2" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,360 samples, 2.00%)</title><rect x="377.2" y="563.0" width="23.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.2" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,360 samples, 2.00%)</title><rect x="377.2" y="547.0" width="23.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.2" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,360 samples, 2.00%)</title><rect x="377.2" y="531.0" width="23.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.2" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,360 samples, 2.00%)</title><rect x="377.2" y="515.0" width="23.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,316 samples, 1.94%)</title><rect x="377.2" y="499.0" width="22.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.2" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,316 samples, 1.94%)</title><rect x="377.2" y="483.0" width="22.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.2" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,297 samples, 1.91%)</title><rect x="377.2" y="467.0" width="22.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.2" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.03%)</title><rect x="377.2" y="451.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="380.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1057916871.apply (1,212 samples, 1.79%)</title><rect x="377.6" y="451.0" width="21.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.6" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,212 samples, 1.79%)</title><rect x="377.6" y="435.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.6" y="446.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.03%)</title><rect x="377.6" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.03%)</title><rect x="377.6" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$619/314910917.get$Lambda (21 samples, 0.03%)</title><rect x="377.6" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$619 (21 samples, 0.03%)</title><rect x="377.6" y="371.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="380.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (60 samples, 0.09%)</title><rect x="377.9" y="419.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (60 samples, 0.09%)</title><rect x="377.9" y="403.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (33 samples, 0.05%)</title><rect x="377.9" y="387.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="380.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.04%)</title><rect x="378.5" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="381.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.04%)</title><rect x="378.5" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="381.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.04%)</title><rect x="378.5" y="355.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="381.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,131 samples, 1.67%)</title><rect x="379.0" y="419.0" width="19.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.02%)</title><rect x="379.0" y="403.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.02%)</title><rect x="379.0" y="387.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$616/762811245.get$Lambda (16 samples, 0.02%)</title><rect x="379.0" y="371.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$616 (16 samples, 0.02%)</title><rect x="379.0" y="355.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="382.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (64 samples, 0.09%)</title><rect x="379.2" y="403.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (64 samples, 0.09%)</title><rect x="379.2" y="387.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (35 samples, 0.05%)</title><rect x="379.2" y="371.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="382.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="379.8" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="379.8" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.04%)</title><rect x="379.8" y="339.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="382.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,051 samples, 1.55%)</title><rect x="380.4" y="403.0" width="18.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (23 samples, 0.03%)</title><rect x="380.4" y="387.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="383.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (934 samples, 1.38%)</title><rect x="380.8" y="387.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.04%)</title><rect x="380.8" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.04%)</title><rect x="380.8" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$608/356097117.get$Lambda (15 samples, 0.02%)</title><rect x="380.8" y="339.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="383.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$608 (15 samples, 0.02%)</title><rect x="380.8" y="323.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="383.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$613/1259413759.get$Lambda (15 samples, 0.02%)</title><rect x="381.0" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$613 (15 samples, 0.02%)</title><rect x="381.0" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="384.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1127276719.linkToTargetMethod (33 samples, 0.05%)</title><rect x="381.3" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1528971165.invokeStatic (33 samples, 0.05%)</title><rect x="381.3" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$558/902590235.get$Lambda (33 samples, 0.05%)</title><rect x="381.3" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$558 (33 samples, 0.05%)</title><rect x="381.3" y="323.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="384.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (179 samples, 0.26%)</title><rect x="381.8" y="371.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (79 samples, 0.12%)</title><rect x="381.8" y="355.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (26 samples, 0.04%)</title><rect x="381.8" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.8" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (26 samples, 0.04%)</title><rect x="381.8" y="323.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="384.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (53 samples, 0.08%)</title><rect x="382.3" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (53 samples, 0.08%)</title><rect x="382.3" y="323.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="385.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (47 samples, 0.07%)</title><rect x="383.2" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (47 samples, 0.07%)</title><rect x="383.2" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (47 samples, 0.07%)</title><rect x="383.2" y="323.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$549/1675476970.get (23 samples, 0.03%)</title><rect x="383.4" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.4" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (23 samples, 0.03%)</title><rect x="383.4" y="291.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="386.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (53 samples, 0.08%)</title><rect x="384.0" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (53 samples, 0.08%)</title><rect x="384.0" y="339.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="387.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (124 samples, 0.18%)</title><rect x="385.0" y="371.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (47 samples, 0.07%)</title><rect x="385.0" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.04%)</title><rect x="385.0" y="339.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="388.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.03%)</title><rect x="385.4" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.03%)</title><rect x="385.4" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.03%)</title><rect x="385.4" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="388.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (77 samples, 0.11%)</title><rect x="385.8" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (77 samples, 0.11%)</title><rect x="385.8" y="339.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (39 samples, 0.06%)</title><rect x="385.8" y="323.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="388.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.06%)</title><rect x="386.5" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.06%)</title><rect x="386.5" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.06%)</title><rect x="386.5" y="291.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="389.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (19 samples, 0.03%)</title><rect x="387.1" y="371.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="390.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (22 samples, 0.03%)</title><rect x="387.4" y="371.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="390.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.04%)</title><rect x="387.8" y="371.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="390.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (487 samples, 0.72%)</title><rect x="388.5" y="371.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$558/902590235.run (487 samples, 0.72%)</title><rect x="388.5" y="355.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (487 samples, 0.72%)</title><rect x="388.5" y="339.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.08%)</title><rect x="388.5" y="323.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.08%)</title><rect x="388.5" y="307.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/106021012.get$Lambda (15 samples, 0.02%)</title><rect x="388.5" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$567 (15 samples, 0.02%)</title><rect x="388.5" y="275.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="391.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$573/1624205294.get$Lambda (18 samples, 0.03%)</title><rect x="388.8" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$573 (18 samples, 0.03%)</title><rect x="388.8" y="275.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="391.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/2146705485.get$Lambda (21 samples, 0.03%)</title><rect x="389.1" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$587 (21 samples, 0.03%)</title><rect x="389.1" y="275.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="392.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (65 samples, 0.10%)</title><rect x="389.5" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (65 samples, 0.10%)</title><rect x="389.5" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (36 samples, 0.05%)</title><rect x="389.5" y="291.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="392.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="390.1" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="390.1" y="275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.04%)</title><rect x="390.1" y="259.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="393.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (25 samples, 0.04%)</title><rect x="390.6" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="393.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (27 samples, 0.04%)</title><rect x="391.0" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.04%)</title><rect x="391.0" y="307.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="394.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (95 samples, 0.14%)</title><rect x="391.5" y="323.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (95 samples, 0.14%)</title><rect x="391.5" y="307.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.03%)</title><rect x="391.5" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.03%)</title><rect x="391.5" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$595/1364654810.get$Lambda (23 samples, 0.03%)</title><rect x="391.5" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$595 (23 samples, 0.03%)</title><rect x="391.5" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="394.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (72 samples, 0.11%)</title><rect x="391.9" y="291.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (72 samples, 0.11%)</title><rect x="391.9" y="275.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (72 samples, 0.11%)</title><rect x="391.9" y="259.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (36 samples, 0.05%)</title><rect x="391.9" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="394.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.05%)</title><rect x="392.5" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.05%)</title><rect x="392.5" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.05%)</title><rect x="392.5" y="211.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="395.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (77 samples, 0.11%)</title><rect x="393.2" y="323.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.11%)</title><rect x="393.2" y="307.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/404214852.invoke (77 samples, 0.11%)</title><rect x="393.2" y="291.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.11%)</title><rect x="393.2" y="275.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (22 samples, 0.03%)</title><rect x="393.2" y="259.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.03%)</title><rect x="393.2" y="243.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="396.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (55 samples, 0.08%)</title><rect x="393.5" y="259.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (55 samples, 0.08%)</title><rect x="393.5" y="243.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.5" y="254.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.08%)</title><rect x="393.5" y="227.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="396.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (144 samples, 0.21%)</title><rect x="394.5" y="323.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (47 samples, 0.07%)</title><rect x="394.5" y="307.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="397.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (97 samples, 0.14%)</title><rect x="395.3" y="307.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (97 samples, 0.14%)</title><rect x="395.3" y="291.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/404214852.invoke (97 samples, 0.14%)</title><rect x="395.3" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (97 samples, 0.14%)</title><rect x="395.3" y="259.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (20 samples, 0.03%)</title><rect x="395.3" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.03%)</title><rect x="395.3" y="227.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="398.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (77 samples, 0.11%)</title><rect x="395.7" y="243.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (77 samples, 0.11%)</title><rect x="395.7" y="227.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.7" y="238.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.11%)</title><rect x="395.7" y="211.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="398.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/PutDeleteBodyHandler.apply (94 samples, 0.14%)</title><rect x="397.0" y="387.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (64 samples, 0.09%)</title><rect x="397.0" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (21 samples, 0.03%)</title><rect x="397.1" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="400.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (34 samples, 0.05%)</title><rect x="397.5" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.03%)</title><rect x="397.7" y="339.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="400.7" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (30 samples, 0.04%)</title><rect x="398.1" y="371.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="401.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/2133978669.apply (62 samples, 0.09%)</title><rect x="398.6" y="451.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (62 samples, 0.09%)</title><rect x="398.6" y="435.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (27 samples, 0.04%)</title><rect x="398.6" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (27 samples, 0.04%)</title><rect x="398.6" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.6" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (27 samples, 0.04%)</title><rect x="398.6" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.6" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (27 samples, 0.04%)</title><rect x="398.6" y="371.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="401.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (35 samples, 0.05%)</title><rect x="399.1" y="419.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.05%)</title><rect x="399.1" y="403.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="402.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (19 samples, 0.03%)</title><rect x="399.7" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (19 samples, 0.03%)</title><rect x="399.7" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1523195787.apply (19 samples, 0.03%)</title><rect x="399.7" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (19 samples, 0.03%)</title><rect x="399.7" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="402.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (19 samples, 0.03%)</title><rect x="399.7" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.03%)</title><rect x="399.7" y="387.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="402.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$519/1406514091.apply (44 samples, 0.06%)</title><rect x="400.0" y="499.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="403.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (44 samples, 0.06%)</title><rect x="400.0" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (44 samples, 0.06%)</title><rect x="400.0" y="467.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="403.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,496 samples, 2.20%)</title><rect x="400.8" y="611.0" width="26.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.8" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (86 samples, 0.13%)</title><rect x="400.8" y="595.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (86 samples, 0.13%)</title><rect x="400.8" y="579.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.8" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (86 samples, 0.13%)</title><rect x="400.8" y="563.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.8" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (86 samples, 0.13%)</title><rect x="400.8" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="403.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (86 samples, 0.13%)</title><rect x="400.8" y="531.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.8" y="542.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.13%)</title><rect x="400.8" y="515.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="403.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (48 samples, 0.07%)</title><rect x="402.3" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (48 samples, 0.07%)</title><rect x="402.3" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (48 samples, 0.07%)</title><rect x="402.3" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.3" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (48 samples, 0.07%)</title><rect x="402.3" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.07%)</title><rect x="402.3" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.3" y="542.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.07%)</title><rect x="402.3" y="515.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="405.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (122 samples, 0.18%)</title><rect x="403.1" y="595.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.1" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (29 samples, 0.04%)</title><rect x="403.1" y="579.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="406.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.03%)</title><rect x="403.6" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.03%)</title><rect x="403.6" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.03%)</title><rect x="403.6" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.6" y="558.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.03%)</title><rect x="403.6" y="531.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="406.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.03%)</title><rect x="404.0" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.03%)</title><rect x="404.0" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.0" y="574.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.03%)</title><rect x="404.0" y="547.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="407.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (49 samples, 0.07%)</title><rect x="404.4" y="579.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.07%)</title><rect x="404.4" y="563.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.02%)</title><rect x="404.4" y="547.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="407.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.05%)</title><rect x="404.7" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.7" y="558.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.05%)</title><rect x="404.7" y="531.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="407.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (426 samples, 0.63%)</title><rect x="405.3" y="595.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (426 samples, 0.63%)</title><rect x="405.3" y="579.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="408.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (426 samples, 0.63%)</title><rect x="405.3" y="563.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="408.3" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (19 samples, 0.03%)</title><rect x="405.3" y="547.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="408.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (39 samples, 0.06%)</title><rect x="405.7" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="408.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.04%)</title><rect x="406.5" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.04%)</title><rect x="406.5" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.get$Lambda (27 samples, 0.04%)</title><rect x="406.5" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.5" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (27 samples, 0.04%)</title><rect x="406.5" y="499.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="409.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (32 samples, 0.05%)</title><rect x="407.0" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.0" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (32 samples, 0.05%)</title><rect x="407.0" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="410.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (254 samples, 0.37%)</title><rect x="407.5" y="547.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (254 samples, 0.37%)</title><rect x="407.5" y="531.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (254 samples, 0.37%)</title><rect x="407.5" y="515.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.05%)</title><rect x="407.5" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.05%)</title><rect x="407.5" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="410.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.get$Lambda (37 samples, 0.05%)</title><rect x="407.5" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.5" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$147 (37 samples, 0.05%)</title><rect x="407.5" y="451.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="410.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (58 samples, 0.09%)</title><rect x="408.2" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (58 samples, 0.09%)</title><rect x="408.2" y="483.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (58 samples, 0.09%)</title><rect x="408.2" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (58 samples, 0.09%)</title><rect x="408.2" y="451.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (58 samples, 0.09%)</title><rect x="408.2" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (58 samples, 0.09%)</title><rect x="408.2" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (58 samples, 0.09%)</title><rect x="408.2" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.09%)</title><rect x="408.2" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.09%)</title><rect x="408.2" y="371.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="411.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (83 samples, 0.12%)</title><rect x="409.2" y="499.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.2" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (83 samples, 0.12%)</title><rect x="409.2" y="483.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (34 samples, 0.05%)</title><rect x="409.2" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.05%)</title><rect x="409.2" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.05%)</title><rect x="409.2" y="435.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="412.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (49 samples, 0.07%)</title><rect x="409.8" y="467.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.8" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (49 samples, 0.07%)</title><rect x="409.8" y="451.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="412.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (76 samples, 0.11%)</title><rect x="410.6" y="499.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (76 samples, 0.11%)</title><rect x="410.6" y="483.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="413.6" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (41 samples, 0.06%)</title><rect x="411.9" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (41 samples, 0.06%)</title><rect x="411.9" y="531.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="414.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (814 samples, 1.20%)</title><rect x="412.7" y="595.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.7" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (37 samples, 0.05%)</title><rect x="412.7" y="579.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="415.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (60 samples, 0.09%)</title><rect x="413.3" y="579.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (60 samples, 0.09%)</title><rect x="413.3" y="563.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.3" y="574.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.09%)</title><rect x="413.3" y="547.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="416.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (96 samples, 0.14%)</title><rect x="414.3" y="579.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (96 samples, 0.14%)</title><rect x="414.3" y="563.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.06%)</title><rect x="414.3" y="547.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="417.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (54 samples, 0.08%)</title><rect x="415.1" y="547.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.1" y="558.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.08%)</title><rect x="415.1" y="531.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="418.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (621 samples, 0.92%)</title><rect x="416.0" y="579.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (186 samples, 0.27%)</title><rect x="416.0" y="563.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (186 samples, 0.27%)</title><rect x="416.0" y="547.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.11%)</title><rect x="416.0" y="531.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="419.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (108 samples, 0.16%)</title><rect x="417.4" y="531.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.4" y="542.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.16%)</title><rect x="417.4" y="515.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="420.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (89 samples, 0.13%)</title><rect x="419.2" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (89 samples, 0.13%)</title><rect x="419.2" y="547.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.2" y="558.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.08%)</title><rect x="419.2" y="531.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="422.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.05%)</title><rect x="420.2" y="531.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="423.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (93 samples, 0.14%)</title><rect x="420.8" y="563.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="423.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (93 samples, 0.14%)</title><rect x="420.8" y="547.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="423.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.14%)</title><rect x="420.8" y="531.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.08%)</title><rect x="420.8" y="515.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="423.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.06%)</title><rect x="421.8" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.8" y="526.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.06%)</title><rect x="421.8" y="499.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="424.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.14%)</title><rect x="422.4" y="563.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.14%)</title><rect x="422.4" y="547.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.14%)</title><rect x="422.4" y="531.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.14%)</title><rect x="422.4" y="515.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (97 samples, 0.14%)</title><rect x="422.4" y="499.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (97 samples, 0.14%)</title><rect x="422.4" y="483.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="425.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (156 samples, 0.23%)</title><rect x="424.1" y="563.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (48 samples, 0.07%)</title><rect x="424.1" y="547.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (48 samples, 0.07%)</title><rect x="424.1" y="531.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="427.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (61 samples, 0.09%)</title><rect x="424.9" y="547.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (61 samples, 0.09%)</title><rect x="424.9" y="531.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="427.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$532/205363253.apply (47 samples, 0.07%)</title><rect x="426.0" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (47 samples, 0.07%)</title><rect x="426.0" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.0" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (47 samples, 0.07%)</title><rect x="426.0" y="515.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="429.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (513 samples, 0.76%)</title><rect x="426.8" y="723.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (513 samples, 0.76%)</title><rect x="426.8" y="707.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (513 samples, 0.76%)</title><rect x="426.8" y="691.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (513 samples, 0.76%)</title><rect x="426.8" y="675.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (513 samples, 0.76%)</title><rect x="426.8" y="659.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (513 samples, 0.76%)</title><rect x="426.8" y="643.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.05%)</title><rect x="426.8" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="426.8" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$410/487703675.get$Lambda (20 samples, 0.03%)</title><rect x="427.1" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$410 (20 samples, 0.03%)</title><rect x="427.1" y="579.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="430.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (23 samples, 0.03%)</title><rect x="427.4" y="627.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="430.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (51 samples, 0.08%)</title><rect x="427.8" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (51 samples, 0.08%)</title><rect x="427.8" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (21 samples, 0.03%)</title><rect x="427.8" y="595.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="430.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (30 samples, 0.04%)</title><rect x="428.2" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (30 samples, 0.04%)</title><rect x="428.2" y="579.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="431.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (405 samples, 0.60%)</title><rect x="428.7" y="627.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (405 samples, 0.60%)</title><rect x="428.7" y="611.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/106021012.run (357 samples, 0.53%)</title><rect x="428.7" y="595.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (357 samples, 0.53%)</title><rect x="428.7" y="579.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (357 samples, 0.53%)</title><rect x="428.7" y="563.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (112 samples, 0.17%)</title><rect x="428.7" y="547.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.7" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (80 samples, 0.12%)</title><rect x="428.7" y="531.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.7" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (24 samples, 0.04%)</title><rect x="428.7" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.7" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (24 samples, 0.04%)</title><rect x="428.7" y="499.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="431.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (56 samples, 0.08%)</title><rect x="429.1" y="515.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.1" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (56 samples, 0.08%)</title><rect x="429.1" y="499.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="432.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (32 samples, 0.05%)</title><rect x="430.1" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (32 samples, 0.05%)</title><rect x="430.1" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (32 samples, 0.05%)</title><rect x="430.1" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (25 samples, 0.04%)</title><rect x="430.1" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.1" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (25 samples, 0.04%)</title><rect x="430.1" y="467.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="433.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (245 samples, 0.36%)</title><rect x="430.6" y="547.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.6" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (25 samples, 0.04%)</title><rect x="430.6" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.6" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (25 samples, 0.04%)</title><rect x="430.6" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.6" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (25 samples, 0.04%)</title><rect x="430.6" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.6" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (25 samples, 0.04%)</title><rect x="430.6" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.6" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (25 samples, 0.04%)</title><rect x="430.6" y="467.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="433.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (220 samples, 0.32%)</title><rect x="431.1" y="531.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (91 samples, 0.13%)</title><rect x="431.1" y="515.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.1" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (17 samples, 0.03%)</title><rect x="431.1" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (17 samples, 0.03%)</title><rect x="431.1" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.1" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (17 samples, 0.03%)</title><rect x="431.1" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.1" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (17 samples, 0.03%)</title><rect x="431.1" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.1" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (17 samples, 0.03%)</title><rect x="431.1" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.1" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (17 samples, 0.03%)</title><rect x="431.1" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="434.1" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (28 samples, 0.04%)</title><rect x="431.4" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (28 samples, 0.04%)</title><rect x="431.4" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (28 samples, 0.04%)</title><rect x="431.4" y="467.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="434.4" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (25 samples, 0.04%)</title><rect x="431.9" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.9" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (25 samples, 0.04%)</title><rect x="431.9" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="434.9" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (25 samples, 0.04%)</title><rect x="431.9" y="467.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="434.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (20 samples, 0.03%)</title><rect x="432.3" y="499.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="435.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (34 samples, 0.05%)</title><rect x="432.7" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (23 samples, 0.03%)</title><rect x="432.7" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (23 samples, 0.03%)</title><rect x="432.7" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="435.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (23 samples, 0.03%)</title><rect x="432.7" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.03%)</title><rect x="432.7" y="451.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="435.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (95 samples, 0.14%)</title><rect x="433.2" y="515.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (15 samples, 0.02%)</title><rect x="433.2" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="436.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (80 samples, 0.12%)</title><rect x="433.5" y="499.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (25 samples, 0.04%)</title><rect x="433.5" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (25 samples, 0.04%)</title><rect x="433.5" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (25 samples, 0.04%)</title><rect x="433.5" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (25 samples, 0.04%)</title><rect x="433.5" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="436.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (55 samples, 0.08%)</title><rect x="433.9" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (55 samples, 0.08%)</title><rect x="433.9" y="467.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (41 samples, 0.06%)</title><rect x="433.9" y="451.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="436.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (48 samples, 0.07%)</title><rect x="434.9" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (48 samples, 0.07%)</title><rect x="434.9" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (48 samples, 0.07%)</title><rect x="434.9" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="437.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (48 samples, 0.07%)</title><rect x="434.9" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="437.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 0.07%)</title><rect x="434.9" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (48 samples, 0.07%)</title><rect x="434.9" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (48 samples, 0.07%)</title><rect x="434.9" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$608/356097117.accept (48 samples, 0.07%)</title><rect x="434.9" y="483.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (48 samples, 0.07%)</title><rect x="434.9" y="467.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (48 samples, 0.07%)</title><rect x="434.9" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 0.07%)</title><rect x="434.9" y="435.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (48 samples, 0.07%)</title><rect x="434.9" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$619/314910917.apply (48 samples, 0.07%)</title><rect x="434.9" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="437.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (48 samples, 0.07%)</title><rect x="434.9" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (48 samples, 0.07%)</title><rect x="434.9" y="371.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="437.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/637964804.run (13,251 samples, 19.52%)</title><rect x="435.7" y="755.0" width="230.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.7" y="766.0">ru/mail/polis/service/re1nex/B..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (13,251 samples, 19.52%)</title><rect x="435.7" y="739.0" width="230.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.7" y="750.0">ru/mail/polis/service/re1nex/B..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,418 samples, 2.09%)</title><rect x="435.7" y="723.0" width="24.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.7" y="734.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,418 samples, 2.09%)</title><rect x="435.7" y="707.0" width="24.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.7" y="718.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,418 samples, 2.09%)</title><rect x="435.7" y="691.0" width="24.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.7" y="702.0">j..</text>
</g>
<g>
<title>java.lang.String (792 samples, 1.17%)</title><rect x="435.7" y="675.0" width="13.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="438.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (626 samples, 0.92%)</title><rect x="449.5" y="675.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.5" y="686.0"></text>
</g>
<g>
<title>byte[] (626 samples, 0.92%)</title><rect x="449.5" y="659.0" width="10.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="452.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (3,989 samples, 5.88%)</title><rect x="460.4" y="723.0" width="69.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.4" y="734.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (3,989 samples, 5.88%)</title><rect x="460.4" y="707.0" width="69.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.4" y="718.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (2,176 samples, 3.21%)</title><rect x="460.4" y="691.0" width="37.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.4" y="702.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (547 samples, 0.81%)</title><rect x="460.4" y="675.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (547 samples, 0.81%)</title><rect x="460.4" y="659.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$528/67792651.get$Lambda (547 samples, 0.81%)</title><rect x="460.4" y="643.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.4" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ApiUtils$$Lambda$528 (547 samples, 0.81%)</title><rect x="460.4" y="627.0" width="9.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="463.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,629 samples, 2.40%)</title><rect x="469.9" y="675.0" width="28.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.9" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,629 samples, 2.40%)</title><rect x="469.9" y="659.0" width="28.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.9" y="670.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,025 samples, 1.51%)</title><rect x="469.9" y="643.0" width="17.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="472.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (573 samples, 0.84%)</title><rect x="487.7" y="643.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (573 samples, 0.84%)</title><rect x="487.7" y="627.0" width="10.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="490.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (27 samples, 0.04%)</title><rect x="497.7" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$528/67792651.accept (27 samples, 0.04%)</title><rect x="497.7" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (27 samples, 0.04%)</title><rect x="497.7" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (15 samples, 0.02%)</title><rect x="497.7" y="595.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 0.02%)</title><rect x="497.7" y="579.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (15 samples, 0.02%)</title><rect x="497.7" y="563.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (1,813 samples, 2.67%)</title><rect x="498.2" y="691.0" width="31.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.2" y="702.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (583 samples, 0.86%)</title><rect x="498.2" y="675.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (583 samples, 0.86%)</title><rect x="498.2" y="659.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$125/631303880.get$Lambda (583 samples, 0.86%)</title><rect x="498.2" y="643.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$125 (583 samples, 0.86%)</title><rect x="498.2" y="627.0" width="10.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="501.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,230 samples, 1.81%)</title><rect x="508.4" y="675.0" width="21.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.4" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,230 samples, 1.81%)</title><rect x="508.4" y="659.0" width="21.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.4" y="670.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (604 samples, 0.89%)</title><rect x="508.4" y="643.0" width="10.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="511.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (620 samples, 0.91%)</title><rect x="518.9" y="643.0" width="10.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="521.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (7,844 samples, 11.56%)</title><rect x="529.7" y="723.0" width="136.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.7" y="734.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (993 samples, 1.46%)</title><rect x="529.7" y="707.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.7" y="718.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.05%)</title><rect x="529.7" y="691.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="532.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (25 samples, 0.04%)</title><rect x="530.5" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.5" y="702.0"></text>
</g>
<g>
<title>java.lang.Long (25 samples, 0.04%)</title><rect x="530.5" y="675.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="533.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (39 samples, 0.06%)</title><rect x="531.0" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (39 samples, 0.06%)</title><rect x="531.0" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.0" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (39 samples, 0.06%)</title><rect x="531.0" y="659.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="534.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (41 samples, 0.06%)</title><rect x="531.6" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.6" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap (41 samples, 0.06%)</title><rect x="531.6" y="675.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="534.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (630 samples, 0.93%)</title><rect x="532.3" y="691.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.3" y="702.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (37 samples, 0.05%)</title><rect x="532.3" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.3" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (37 samples, 0.05%)</title><rect x="532.3" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.3" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (37 samples, 0.05%)</title><rect x="532.3" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.3" y="654.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.05%)</title><rect x="532.3" y="627.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="535.3" y="638.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (593 samples, 0.87%)</title><rect x="533.0" y="675.0" width="10.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.0" y="686.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (593 samples, 0.87%)</title><rect x="533.0" y="659.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.0" y="670.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (593 samples, 0.87%)</title><rect x="533.0" y="643.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.0" y="654.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (573 samples, 0.84%)</title><rect x="533.0" y="627.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.0" y="638.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (551 samples, 0.81%)</title><rect x="533.0" y="611.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.0" y="622.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (551 samples, 0.81%)</title><rect x="533.0" y="595.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.0" y="606.0"></text>
</g>
<g>
<title>java.lang.Class[] (17 samples, 0.03%)</title><rect x="533.0" y="579.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="536.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (79 samples, 0.12%)</title><rect x="533.5" y="579.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (79 samples, 0.12%)</title><rect x="533.5" y="563.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.5" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (79 samples, 0.12%)</title><rect x="533.5" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (79 samples, 0.12%)</title><rect x="533.5" y="531.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.5" y="542.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (79 samples, 0.12%)</title><rect x="533.5" y="515.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="536.5" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (443 samples, 0.65%)</title><rect x="534.9" y="579.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (443 samples, 0.65%)</title><rect x="534.9" y="563.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (443 samples, 0.65%)</title><rect x="534.9" y="547.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.9" y="558.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (57 samples, 0.08%)</title><rect x="534.9" y="531.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="537.9" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (386 samples, 0.57%)</title><rect x="535.9" y="531.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.9" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (386 samples, 0.57%)</title><rect x="535.9" y="515.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.9" y="526.0"></text>
</g>
<g>
<title>int[] (319 samples, 0.47%)</title><rect x="535.9" y="499.0" width="5.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="538.9" y="510.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (67 samples, 0.10%)</title><rect x="541.4" y="499.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.4" y="510.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.10%)</title><rect x="541.4" y="483.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="544.4" y="494.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (22 samples, 0.03%)</title><rect x="542.6" y="611.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="545.6" y="622.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (20 samples, 0.03%)</title><rect x="543.0" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.0" y="638.0"></text>
</g>
<g>
<title>java/security/Provider.getService (20 samples, 0.03%)</title><rect x="543.0" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (20 samples, 0.03%)</title><rect x="543.0" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.0" y="606.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (20 samples, 0.03%)</title><rect x="543.0" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.0" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.03%)</title><rect x="543.0" y="563.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="546.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (213 samples, 0.31%)</title><rect x="543.3" y="691.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.3" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (83 samples, 0.12%)</title><rect x="543.3" y="675.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.3" y="686.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (25 samples, 0.04%)</title><rect x="543.3" y="659.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="546.3" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (58 samples, 0.09%)</title><rect x="543.7" y="659.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (33 samples, 0.05%)</title><rect x="543.7" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.7" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (33 samples, 0.05%)</title><rect x="543.7" y="627.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="546.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (25 samples, 0.04%)</title><rect x="544.3" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.3" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (25 samples, 0.04%)</title><rect x="544.3" y="627.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="547.3" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (24 samples, 0.04%)</title><rect x="545.0" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.0" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (24 samples, 0.04%)</title><rect x="545.0" y="659.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="548.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (92 samples, 0.14%)</title><rect x="545.4" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (92 samples, 0.14%)</title><rect x="545.4" y="659.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.4" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (92 samples, 0.14%)</title><rect x="545.4" y="643.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="548.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (6,732 samples, 9.92%)</title><rect x="547.0" y="707.0" width="117.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.0" y="718.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.08%)</title><rect x="547.0" y="691.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.08%)</title><rect x="547.0" y="675.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$114/599301499.get$Lambda (18 samples, 0.03%)</title><rect x="547.0" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.0" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$114 (18 samples, 0.03%)</title><rect x="547.0" y="643.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="550.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$119/692123147.get$Lambda (18 samples, 0.03%)</title><rect x="547.3" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.3" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$119 (18 samples, 0.03%)</title><rect x="547.3" y="643.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="550.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$220/655598435.get$Lambda (19 samples, 0.03%)</title><rect x="547.6" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.6" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$220 (19 samples, 0.03%)</title><rect x="547.6" y="643.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="550.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (6,214 samples, 9.16%)</title><rect x="548.2" y="691.0" width="108.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.2" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.05%)</title><rect x="548.2" y="675.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="551.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.06%)</title><rect x="548.7" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.7" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (44 samples, 0.06%)</title><rect x="548.7" y="659.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.06%)</title><rect x="548.7" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (44 samples, 0.06%)</title><rect x="548.7" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.06%)</title><rect x="548.7" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.06%)</title><rect x="548.7" y="595.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="551.7" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (16 samples, 0.02%)</title><rect x="549.5" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (16 samples, 0.02%)</title><rect x="549.5" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.5" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (16 samples, 0.02%)</title><rect x="549.5" y="643.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="552.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (112 samples, 0.17%)</title><rect x="549.8" y="675.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (112 samples, 0.17%)</title><rect x="549.8" y="659.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (56 samples, 0.08%)</title><rect x="549.8" y="643.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="552.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.08%)</title><rect x="550.7" y="643.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.08%)</title><rect x="550.7" y="627.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.08%)</title><rect x="550.7" y="611.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="553.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (3,948 samples, 5.82%)</title><rect x="551.7" y="675.0" width="68.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.7" y="686.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,948 samples, 5.82%)</title><rect x="551.7" y="659.0" width="68.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.7" y="670.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,948 samples, 5.82%)</title><rect x="551.7" y="643.0" width="68.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.7" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,948 samples, 5.82%)</title><rect x="551.7" y="627.0" width="68.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.7" y="638.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.03%)</title><rect x="551.7" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.03%)</title><rect x="551.7" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$196/1405076149.get$Lambda (22 samples, 0.03%)</title><rect x="551.7" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$196 (22 samples, 0.03%)</title><rect x="551.7" y="563.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="554.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (143 samples, 0.21%)</title><rect x="552.1" y="611.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (143 samples, 0.21%)</title><rect x="552.1" y="595.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (76 samples, 0.11%)</title><rect x="552.1" y="579.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="555.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.10%)</title><rect x="553.4" y="579.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (67 samples, 0.10%)</title><rect x="553.4" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.10%)</title><rect x="553.4" y="547.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="556.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (126 samples, 0.19%)</title><rect x="554.6" y="611.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (126 samples, 0.19%)</title><rect x="554.6" y="595.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (66 samples, 0.10%)</title><rect x="554.6" y="579.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="557.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.09%)</title><rect x="555.7" y="579.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.09%)</title><rect x="555.7" y="563.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.09%)</title><rect x="555.7" y="547.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="558.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (90 samples, 0.13%)</title><rect x="556.8" y="611.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="559.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (192 samples, 0.28%)</title><rect x="558.3" y="611.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="561.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,939 samples, 2.86%)</title><rect x="561.7" y="611.0" width="33.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.7" y="622.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (205 samples, 0.30%)</title><rect x="561.7" y="595.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.7" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (154 samples, 0.23%)</title><rect x="561.7" y="579.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.7" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (55 samples, 0.08%)</title><rect x="561.7" y="563.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.7" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (55 samples, 0.08%)</title><rect x="561.7" y="547.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="564.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (99 samples, 0.15%)</title><rect x="562.6" y="563.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.6" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (99 samples, 0.15%)</title><rect x="562.6" y="547.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="565.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (51 samples, 0.08%)</title><rect x="564.3" y="579.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (51 samples, 0.08%)</title><rect x="564.3" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (51 samples, 0.08%)</title><rect x="564.3" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (51 samples, 0.08%)</title><rect x="564.3" y="531.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.3" y="542.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (51 samples, 0.08%)</title><rect x="564.3" y="515.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="567.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (765 samples, 1.13%)</title><rect x="565.2" y="595.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (765 samples, 1.13%)</title><rect x="565.2" y="579.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.2" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (35 samples, 0.05%)</title><rect x="565.2" y="563.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="568.2" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (38 samples, 0.06%)</title><rect x="565.8" y="563.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="568.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (75 samples, 0.11%)</title><rect x="566.5" y="563.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="569.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeSet (26 samples, 0.04%)</title><rect x="567.8" y="563.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="570.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.09%)</title><rect x="568.3" y="563.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.09%)</title><rect x="568.3" y="547.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.get$Lambda (60 samples, 0.09%)</title><rect x="568.3" y="531.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.3" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (60 samples, 0.09%)</title><rect x="568.3" y="515.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="571.3" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (386 samples, 0.57%)</title><rect x="569.3" y="563.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (386 samples, 0.57%)</title><rect x="569.3" y="547.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (386 samples, 0.57%)</title><rect x="569.3" y="531.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (386 samples, 0.57%)</title><rect x="569.3" y="515.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (167 samples, 0.25%)</title><rect x="569.3" y="499.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (105 samples, 0.15%)</title><rect x="569.3" y="483.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (105 samples, 0.15%)</title><rect x="569.3" y="467.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.15%)</title><rect x="569.3" y="451.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.15%)</title><rect x="569.3" y="435.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.15%)</title><rect x="569.3" y="419.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.15%)</title><rect x="569.3" y="403.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (105 samples, 0.15%)</title><rect x="569.3" y="387.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (105 samples, 0.15%)</title><rect x="569.3" y="371.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="572.3" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (62 samples, 0.09%)</title><rect x="571.1" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.1" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (62 samples, 0.09%)</title><rect x="571.1" y="467.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="574.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.09%)</title><rect x="572.2" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.09%)</title><rect x="572.2" y="483.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.get$Lambda (58 samples, 0.09%)</title><rect x="572.2" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.2" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$147 (58 samples, 0.09%)</title><rect x="572.2" y="451.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="575.2" y="462.0"></text>
</g>
<g>
<title>java/util/List.copyOf (93 samples, 0.14%)</title><rect x="573.2" y="499.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.2" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (93 samples, 0.14%)</title><rect x="573.2" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (53 samples, 0.08%)</title><rect x="573.2" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (53 samples, 0.08%)</title><rect x="573.2" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.08%)</title><rect x="573.2" y="435.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="576.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (40 samples, 0.06%)</title><rect x="574.1" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.1" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (40 samples, 0.06%)</title><rect x="574.1" y="451.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="577.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (68 samples, 0.10%)</title><rect x="574.8" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (68 samples, 0.10%)</title><rect x="574.8" y="483.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="577.8" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (59 samples, 0.09%)</title><rect x="576.0" y="563.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="579.0" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (59 samples, 0.09%)</title><rect x="576.0" y="547.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="579.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (86 samples, 0.13%)</title><rect x="577.0" y="563.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.0" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (86 samples, 0.13%)</title><rect x="577.0" y="547.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="580.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (36 samples, 0.05%)</title><rect x="578.5" y="595.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="581.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (704 samples, 1.04%)</title><rect x="579.2" y="595.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.2" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (704 samples, 1.04%)</title><rect x="579.2" y="579.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.2" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (636 samples, 0.94%)</title><rect x="579.2" y="563.0" width="11.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.2" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (636 samples, 0.94%)</title><rect x="579.2" y="547.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.2" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (636 samples, 0.94%)</title><rect x="579.2" y="531.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.2" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (136 samples, 0.20%)</title><rect x="579.2" y="515.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="582.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (182 samples, 0.27%)</title><rect x="581.5" y="515.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.5" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (182 samples, 0.27%)</title><rect x="581.5" y="499.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.5" y="510.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.27%)</title><rect x="581.5" y="483.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="584.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (318 samples, 0.47%)</title><rect x="584.7" y="515.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (318 samples, 0.47%)</title><rect x="584.7" y="499.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (154 samples, 0.23%)</title><rect x="584.7" y="483.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="587.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (164 samples, 0.24%)</title><rect x="587.4" y="483.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.4" y="494.0"></text>
</g>
<g>
<title>byte[] (164 samples, 0.24%)</title><rect x="587.4" y="467.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="590.4" y="478.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (68 samples, 0.10%)</title><rect x="590.2" y="563.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="593.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (80 samples, 0.12%)</title><rect x="591.4" y="595.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.4" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (80 samples, 0.12%)</title><rect x="591.4" y="579.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="594.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (149 samples, 0.22%)</title><rect x="592.8" y="595.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.8" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (42 samples, 0.06%)</title><rect x="592.8" y="579.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="595.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (35 samples, 0.05%)</title><rect x="593.5" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.05%)</title><rect x="593.5" y="563.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="596.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (72 samples, 0.11%)</title><rect x="594.1" y="579.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (72 samples, 0.11%)</title><rect x="594.1" y="563.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="597.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (970 samples, 1.43%)</title><rect x="595.4" y="611.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (33 samples, 0.05%)</title><rect x="595.4" y="595.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="598.4" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.map (93 samples, 0.14%)</title><rect x="595.9" y="595.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$164/1116232512.apply (93 samples, 0.14%)</title><rect x="595.9" y="579.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (49 samples, 0.07%)</title><rect x="595.9" y="563.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="598.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (44 samples, 0.06%)</title><rect x="596.8" y="563.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (44 samples, 0.06%)</title><rect x="596.8" y="547.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="599.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (137 samples, 0.20%)</title><rect x="597.6" y="595.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="600.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (38 samples, 0.06%)</title><rect x="599.9" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (38 samples, 0.06%)</title><rect x="599.9" y="579.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="602.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (29 samples, 0.04%)</title><rect x="600.6" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.6" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (29 samples, 0.04%)</title><rect x="600.6" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.6" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (29 samples, 0.04%)</title><rect x="600.6" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.6" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (29 samples, 0.04%)</title><rect x="600.6" y="547.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="603.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (640 samples, 0.94%)</title><rect x="601.1" y="595.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (640 samples, 0.94%)</title><rect x="601.1" y="579.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Class[] (74 samples, 0.11%)</title><rect x="601.1" y="563.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="604.1" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.08%)</title><rect x="602.4" y="563.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="605.4" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (66 samples, 0.10%)</title><rect x="603.3" y="563.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="606.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (269 samples, 0.40%)</title><rect x="604.5" y="563.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (269 samples, 0.40%)</title><rect x="604.5" y="547.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (269 samples, 0.40%)</title><rect x="604.5" y="531.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.5" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (269 samples, 0.40%)</title><rect x="604.5" y="515.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.5" y="526.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (269 samples, 0.40%)</title><rect x="604.5" y="499.0" width="4.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="607.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (92 samples, 0.14%)</title><rect x="609.2" y="563.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (92 samples, 0.14%)</title><rect x="609.2" y="547.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (27 samples, 0.04%)</title><rect x="609.2" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (27 samples, 0.04%)</title><rect x="609.2" y="515.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="612.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (65 samples, 0.10%)</title><rect x="609.6" y="531.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (65 samples, 0.10%)</title><rect x="609.6" y="515.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="612.6" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (85 samples, 0.13%)</title><rect x="610.8" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.8" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (85 samples, 0.13%)</title><rect x="610.8" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.8" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (85 samples, 0.13%)</title><rect x="610.8" y="531.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="613.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (466 samples, 0.69%)</title><rect x="612.2" y="611.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (93 samples, 0.14%)</title><rect x="612.2" y="595.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (47 samples, 0.07%)</title><rect x="612.2" y="579.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="615.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.07%)</title><rect x="613.1" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (46 samples, 0.07%)</title><rect x="613.1" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (46 samples, 0.07%)</title><rect x="613.1" y="547.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="616.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.09%)</title><rect x="613.9" y="595.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="616.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (311 samples, 0.46%)</title><rect x="614.9" y="595.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.08%)</title><rect x="614.9" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.08%)</title><rect x="614.9" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/741792946.get$Lambda (22 samples, 0.03%)</title><rect x="614.9" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$181 (22 samples, 0.03%)</title><rect x="614.9" y="531.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="617.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1057916871.get$Lambda (29 samples, 0.04%)</title><rect x="615.3" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$191 (29 samples, 0.04%)</title><rect x="615.3" y="531.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="618.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (260 samples, 0.38%)</title><rect x="615.8" y="579.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (260 samples, 0.38%)</title><rect x="615.8" y="563.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (152 samples, 0.22%)</title><rect x="615.8" y="547.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="618.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.16%)</title><rect x="618.5" y="547.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="621.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.16%)</title><rect x="618.5" y="531.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.16%)</title><rect x="618.5" y="515.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="621.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$114/599301499.handleLocalResponse (59 samples, 0.09%)</title><rect x="620.3" y="675.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$7 (59 samples, 0.09%)</title><rect x="620.3" y="659.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (59 samples, 0.09%)</title><rect x="620.3" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (49 samples, 0.07%)</title><rect x="620.5" y="627.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (49 samples, 0.07%)</title><rect x="620.5" y="611.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (23 samples, 0.03%)</title><rect x="620.5" y="595.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="623.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (26 samples, 0.04%)</title><rect x="620.9" y="595.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="623.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$119/692123147.requestBuild (2,003 samples, 2.95%)</title><rect x="621.4" y="675.0" width="34.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.4" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$8 (2,003 samples, 2.95%)</title><rect x="621.4" y="659.0" width="34.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.4" y="670.0">ru..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (49 samples, 0.07%)</title><rect x="621.4" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (49 samples, 0.07%)</title><rect x="621.4" y="627.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="624.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (828 samples, 1.22%)</title><rect x="622.2" y="643.0" width="14.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (74 samples, 0.11%)</title><rect x="622.2" y="627.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="625.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (754 samples, 1.11%)</title><rect x="623.5" y="627.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.5" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (691 samples, 1.02%)</title><rect x="623.5" y="611.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="626.5" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (691 samples, 1.02%)</title><rect x="623.5" y="595.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.5" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (27 samples, 0.04%)</title><rect x="623.5" y="579.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="626.5" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (47 samples, 0.07%)</title><rect x="624.0" y="579.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="627.0" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (81 samples, 0.12%)</title><rect x="624.8" y="579.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="627.8" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (29 samples, 0.04%)</title><rect x="626.2" y="579.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="629.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.08%)</title><rect x="626.7" y="579.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.08%)</title><rect x="626.7" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.get$Lambda (53 samples, 0.08%)</title><rect x="626.7" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="629.7" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$141 (53 samples, 0.08%)</title><rect x="626.7" y="531.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="629.7" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (65 samples, 0.10%)</title><rect x="627.6" y="579.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.6" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (65 samples, 0.10%)</title><rect x="627.6" y="563.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="630.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (297 samples, 0.44%)</title><rect x="628.8" y="579.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (297 samples, 0.44%)</title><rect x="628.8" y="563.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (297 samples, 0.44%)</title><rect x="628.8" y="547.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.07%)</title><rect x="628.8" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.07%)</title><rect x="628.8" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.get$Lambda (48 samples, 0.07%)</title><rect x="628.8" y="499.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.8" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$147 (48 samples, 0.07%)</title><rect x="628.8" y="483.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="631.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (105 samples, 0.15%)</title><rect x="629.6" y="531.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (105 samples, 0.15%)</title><rect x="629.6" y="515.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (105 samples, 0.15%)</title><rect x="629.6" y="499.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.15%)</title><rect x="629.6" y="483.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.15%)</title><rect x="629.6" y="467.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.15%)</title><rect x="629.6" y="451.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.15%)</title><rect x="629.6" y="435.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (105 samples, 0.15%)</title><rect x="629.6" y="419.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (105 samples, 0.15%)</title><rect x="629.6" y="403.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="632.6" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (75 samples, 0.11%)</title><rect x="631.4" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.4" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (75 samples, 0.11%)</title><rect x="631.4" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.4" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (44 samples, 0.06%)</title><rect x="631.4" y="499.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.06%)</title><rect x="631.4" y="483.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.4" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.06%)</title><rect x="631.4" y="467.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="634.4" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (31 samples, 0.05%)</title><rect x="632.2" y="499.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.2" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (31 samples, 0.05%)</title><rect x="632.2" y="483.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="635.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (69 samples, 0.10%)</title><rect x="632.7" y="531.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (69 samples, 0.10%)</title><rect x="632.7" y="515.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="635.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (92 samples, 0.14%)</title><rect x="633.9" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (92 samples, 0.14%)</title><rect x="633.9" y="563.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="636.9" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (63 samples, 0.09%)</title><rect x="635.5" y="611.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.5" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (63 samples, 0.09%)</title><rect x="635.5" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.5" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (63 samples, 0.09%)</title><rect x="635.5" y="579.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="638.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (1,126 samples, 1.66%)</title><rect x="636.6" y="643.0" width="19.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.6" y="654.0"></text>
</g>
<g>
<title>java.net.URI (138 samples, 0.20%)</title><rect x="636.6" y="627.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="639.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (168 samples, 0.25%)</title><rect x="639.0" y="627.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (168 samples, 0.25%)</title><rect x="639.0" y="611.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (168 samples, 0.25%)</title><rect x="639.0" y="595.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (168 samples, 0.25%)</title><rect x="639.0" y="579.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (47 samples, 0.07%)</title><rect x="639.0" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.07%)</title><rect x="639.0" y="547.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="642.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (121 samples, 0.18%)</title><rect x="639.8" y="563.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (121 samples, 0.18%)</title><rect x="639.8" y="547.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.8" y="558.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.18%)</title><rect x="639.8" y="531.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="642.8" y="542.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (534 samples, 0.79%)</title><rect x="641.9" y="627.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.9" y="638.0"></text>
</g>
<g>
<title>java.net.URI$Parser (42 samples, 0.06%)</title><rect x="641.9" y="611.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="644.9" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (492 samples, 0.72%)</title><rect x="642.7" y="611.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (88 samples, 0.13%)</title><rect x="642.7" y="595.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 0.13%)</title><rect x="642.7" y="579.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.7" y="590.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.07%)</title><rect x="642.7" y="563.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="645.7" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.06%)</title><rect x="643.5" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.5" y="574.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.06%)</title><rect x="643.5" y="547.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="646.5" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (404 samples, 0.60%)</title><rect x="644.2" y="595.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (218 samples, 0.32%)</title><rect x="644.2" y="579.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (218 samples, 0.32%)</title><rect x="644.2" y="563.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.12%)</title><rect x="644.2" y="547.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="647.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (135 samples, 0.20%)</title><rect x="645.6" y="547.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.6" y="558.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.20%)</title><rect x="645.6" y="531.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="648.6" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (186 samples, 0.27%)</title><rect x="648.0" y="579.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (85 samples, 0.13%)</title><rect x="648.0" y="563.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (85 samples, 0.13%)</title><rect x="648.0" y="547.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.06%)</title><rect x="648.0" y="531.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="651.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.07%)</title><rect x="648.7" y="531.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.7" y="542.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.07%)</title><rect x="648.7" y="515.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="651.7" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (101 samples, 0.15%)</title><rect x="649.5" y="563.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.5" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (101 samples, 0.15%)</title><rect x="649.5" y="547.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (101 samples, 0.15%)</title><rect x="649.5" y="531.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (101 samples, 0.15%)</title><rect x="649.5" y="515.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.08%)</title><rect x="649.5" y="499.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="652.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.07%)</title><rect x="650.4" y="499.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.4" y="510.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.07%)</title><rect x="650.4" y="483.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="653.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (106 samples, 0.16%)</title><rect x="651.2" y="627.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (106 samples, 0.16%)</title><rect x="651.2" y="611.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (18 samples, 0.03%)</title><rect x="651.2" y="595.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="654.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (88 samples, 0.13%)</title><rect x="651.5" y="595.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (88 samples, 0.13%)</title><rect x="651.5" y="579.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="654.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (180 samples, 0.27%)</title><rect x="653.1" y="627.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (180 samples, 0.27%)</title><rect x="653.1" y="611.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (180 samples, 0.27%)</title><rect x="653.1" y="595.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.1" y="606.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (180 samples, 0.27%)</title><rect x="653.1" y="579.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.1" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (90 samples, 0.13%)</title><rect x="653.1" y="563.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.1" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (90 samples, 0.13%)</title><rect x="653.1" y="547.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="656.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$131/898061759.apply (90 samples, 0.13%)</title><rect x="654.6" y="563.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (90 samples, 0.13%)</title><rect x="654.6" y="547.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.6" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (43 samples, 0.06%)</title><rect x="654.6" y="531.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="657.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (47 samples, 0.07%)</title><rect x="655.4" y="531.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.07%)</title><rect x="655.4" y="515.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="658.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (452 samples, 0.67%)</title><rect x="656.2" y="691.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.03%)</title><rect x="656.2" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.03%)</title><rect x="656.2" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$235/2044206769.get$Lambda (22 samples, 0.03%)</title><rect x="656.2" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$235 (22 samples, 0.03%)</title><rect x="656.2" y="627.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="659.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (61 samples, 0.09%)</title><rect x="656.6" y="675.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (61 samples, 0.09%)</title><rect x="656.6" y="659.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (40 samples, 0.06%)</title><rect x="656.6" y="643.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="659.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (21 samples, 0.03%)</title><rect x="657.3" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (21 samples, 0.03%)</title><rect x="657.3" y="627.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="660.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (369 samples, 0.54%)</title><rect x="657.6" y="675.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.6" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (20 samples, 0.03%)</title><rect x="657.6" y="659.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="660.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (23 samples, 0.03%)</title><rect x="658.0" y="659.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="661.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (25 samples, 0.04%)</title><rect x="658.4" y="659.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="661.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (271 samples, 0.40%)</title><rect x="658.8" y="659.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$224/1601412013.accept (271 samples, 0.40%)</title><rect x="658.8" y="643.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (271 samples, 0.40%)</title><rect x="658.8" y="627.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="661.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.13%)</title><rect x="658.8" y="611.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.13%)</title><rect x="658.8" y="595.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$230/1479809634.get$Lambda (86 samples, 0.13%)</title><rect x="658.8" y="579.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.8" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.MergeUtils$$Lambda$230 (86 samples, 0.13%)</title><rect x="658.8" y="563.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="661.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (185 samples, 0.27%)</title><rect x="660.3" y="611.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (185 samples, 0.27%)</title><rect x="660.3" y="595.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (101 samples, 0.15%)</title><rect x="660.3" y="579.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="663.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (16 samples, 0.02%)</title><rect x="662.1" y="579.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (16 samples, 0.02%)</title><rect x="662.1" y="563.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="665.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.10%)</title><rect x="662.4" y="579.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.10%)</title><rect x="662.4" y="563.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.10%)</title><rect x="662.4" y="547.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="665.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (30 samples, 0.04%)</title><rect x="663.5" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.5" y="670.0"></text>
</g>
<g>
<title>java.lang.Object (21 samples, 0.03%)</title><rect x="663.7" y="643.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="666.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (119 samples, 0.18%)</title><rect x="664.1" y="707.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (119 samples, 0.18%)</title><rect x="664.1" y="691.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (119 samples, 0.18%)</title><rect x="664.1" y="675.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (119 samples, 0.18%)</title><rect x="664.1" y="659.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (119 samples, 0.18%)</title><rect x="664.1" y="643.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.1" y="654.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.18%)</title><rect x="664.1" y="627.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="667.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (71 samples, 0.10%)</title><rect x="666.1" y="803.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (71 samples, 0.10%)</title><rect x="666.1" y="787.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (71 samples, 0.10%)</title><rect x="666.1" y="771.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (71 samples, 0.10%)</title><rect x="666.1" y="755.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (71 samples, 0.10%)</title><rect x="666.1" y="739.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (71 samples, 0.10%)</title><rect x="666.1" y="723.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (71 samples, 0.10%)</title><rect x="666.1" y="707.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (71 samples, 0.10%)</title><rect x="666.1" y="691.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (71 samples, 0.10%)</title><rect x="666.1" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (71 samples, 0.10%)</title><rect x="666.1" y="659.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (71 samples, 0.10%)</title><rect x="666.1" y="643.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (71 samples, 0.10%)</title><rect x="666.1" y="627.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (71 samples, 0.10%)</title><rect x="666.1" y="611.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (71 samples, 0.10%)</title><rect x="666.1" y="595.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (71 samples, 0.10%)</title><rect x="666.1" y="579.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (71 samples, 0.10%)</title><rect x="666.1" y="563.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (71 samples, 0.10%)</title><rect x="666.1" y="547.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="669.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (802 samples, 1.18%)</title><rect x="667.4" y="803.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.03%)</title><rect x="667.4" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="670.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="667.4" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2015781843.linkToTargetMethod (16 samples, 0.02%)</title><rect x="667.7" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.02%)</title><rect x="667.7" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$448/1963952344.get$Lambda (16 samples, 0.02%)</title><rect x="667.7" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.7" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$448 (16 samples, 0.02%)</title><rect x="667.7" y="739.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="670.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (171 samples, 0.25%)</title><rect x="668.0" y="787.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$449/992417271.accept (149 samples, 0.22%)</title><rect x="668.0" y="771.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (149 samples, 0.22%)</title><rect x="668.0" y="755.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (149 samples, 0.22%)</title><rect x="668.0" y="739.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (149 samples, 0.22%)</title><rect x="668.0" y="723.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (149 samples, 0.22%)</title><rect x="668.0" y="707.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (149 samples, 0.22%)</title><rect x="668.0" y="691.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (149 samples, 0.22%)</title><rect x="668.0" y="675.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (149 samples, 0.22%)</title><rect x="668.0" y="659.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (149 samples, 0.22%)</title><rect x="668.0" y="643.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (149 samples, 0.22%)</title><rect x="668.0" y="627.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (149 samples, 0.22%)</title><rect x="668.0" y="611.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (149 samples, 0.22%)</title><rect x="668.0" y="595.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (34 samples, 0.05%)</title><rect x="668.0" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (34 samples, 0.05%)</title><rect x="668.0" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (34 samples, 0.05%)</title><rect x="668.0" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (18 samples, 0.03%)</title><rect x="668.0" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (18 samples, 0.03%)</title><rect x="668.0" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (18 samples, 0.03%)</title><rect x="668.0" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (18 samples, 0.03%)</title><rect x="668.0" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (18 samples, 0.03%)</title><rect x="668.0" y="467.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="671.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.02%)</title><rect x="668.3" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.02%)</title><rect x="668.3" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.02%)</title><rect x="668.3" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.02%)</title><rect x="668.3" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.02%)</title><rect x="668.3" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (16 samples, 0.02%)</title><rect x="668.3" y="451.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="671.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (101 samples, 0.15%)</title><rect x="668.8" y="579.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (54 samples, 0.08%)</title><rect x="668.8" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (37 samples, 0.05%)</title><rect x="668.8" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.8" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 0.05%)</title><rect x="668.8" y="531.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="671.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (17 samples, 0.03%)</title><rect x="669.4" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.4" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (17 samples, 0.03%)</title><rect x="669.4" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.4" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (17 samples, 0.03%)</title><rect x="669.4" y="515.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="672.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (47 samples, 0.07%)</title><rect x="669.7" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$264/213652655.get (47 samples, 0.07%)</title><rect x="669.7" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="672.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (47 samples, 0.07%)</title><rect x="669.7" y="531.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (47 samples, 0.07%)</title><rect x="669.7" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (47 samples, 0.07%)</title><rect x="669.7" y="499.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.7" y="510.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.06%)</title><rect x="669.9" y="483.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="672.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$452/1901706323.accept (22 samples, 0.03%)</title><rect x="670.6" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (22 samples, 0.03%)</title><rect x="670.6" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$448/1963952344.run (22 samples, 0.03%)</title><rect x="670.6" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (22 samples, 0.03%)</title><rect x="670.6" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (22 samples, 0.03%)</title><rect x="670.6" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="673.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (22 samples, 0.03%)</title><rect x="670.6" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (22 samples, 0.03%)</title><rect x="670.6" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.6" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (22 samples, 0.03%)</title><rect x="670.6" y="659.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="673.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (75 samples, 0.11%)</title><rect x="670.9" y="787.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.9" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (75 samples, 0.11%)</title><rect x="670.9" y="771.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="673.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (25 samples, 0.04%)</title><rect x="672.2" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (15 samples, 0.02%)</title><rect x="672.4" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.4" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (15 samples, 0.02%)</title><rect x="672.4" y="755.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="675.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (111 samples, 0.16%)</title><rect x="672.7" y="787.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1523868633.run (61 samples, 0.09%)</title><rect x="672.7" y="771.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (61 samples, 0.09%)</title><rect x="672.7" y="755.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (61 samples, 0.09%)</title><rect x="672.7" y="739.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (61 samples, 0.09%)</title><rect x="672.7" y="723.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (61 samples, 0.09%)</title><rect x="672.7" y="707.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (61 samples, 0.09%)</title><rect x="672.7" y="691.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (61 samples, 0.09%)</title><rect x="672.7" y="675.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (61 samples, 0.09%)</title><rect x="672.7" y="659.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="675.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (61 samples, 0.09%)</title><rect x="672.7" y="643.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (61 samples, 0.09%)</title><rect x="672.7" y="627.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (39 samples, 0.06%)</title><rect x="672.7" y="611.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (39 samples, 0.06%)</title><rect x="672.7" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (39 samples, 0.06%)</title><rect x="672.7" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/857068247.linkToTargetMethod (27 samples, 0.04%)</title><rect x="672.7" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/895281180.invoke (27 samples, 0.04%)</title><rect x="672.7" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.04%)</title><rect x="672.7" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.04%)</title><rect x="672.7" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.04%)</title><rect x="672.7" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.7" y="510.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.04%)</title><rect x="672.7" y="483.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="675.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (22 samples, 0.03%)</title><rect x="673.4" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.03%)</title><rect x="673.4" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.03%)</title><rect x="673.4" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.03%)</title><rect x="673.4" y="563.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.03%)</title><rect x="673.4" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.03%)</title><rect x="673.4" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (22 samples, 0.03%)</title><rect x="673.4" y="515.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="676.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$320/1685040699.run (50 samples, 0.07%)</title><rect x="673.7" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (50 samples, 0.07%)</title><rect x="673.7" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.04%)</title><rect x="673.7" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.04%)</title><rect x="673.7" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$462/1898580517.get$Lambda (24 samples, 0.04%)</title><rect x="673.7" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.7" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$462 (24 samples, 0.04%)</title><rect x="673.7" y="691.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="676.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.04%)</title><rect x="674.2" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.04%)</title><rect x="674.2" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.04%)</title><rect x="674.2" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (26 samples, 0.04%)</title><rect x="674.2" y="691.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="677.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (183 samples, 0.27%)</title><rect x="674.6" y="787.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.6" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (41 samples, 0.06%)</title><rect x="674.6" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.6" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (41 samples, 0.06%)</title><rect x="674.6" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.6" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (41 samples, 0.06%)</title><rect x="674.6" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.6" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (41 samples, 0.06%)</title><rect x="674.6" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.6" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (41 samples, 0.06%)</title><rect x="674.6" y="707.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="677.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (142 samples, 0.21%)</title><rect x="675.3" y="771.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.06%)</title><rect x="675.3" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.06%)</title><rect x="675.3" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$636/1267503831.get$Lambda (39 samples, 0.06%)</title><rect x="675.3" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.3" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$636 (39 samples, 0.06%)</title><rect x="675.3" y="707.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="678.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (103 samples, 0.15%)</title><rect x="676.0" y="755.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.0" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (45 samples, 0.07%)</title><rect x="676.0" y="739.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="679.0" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (58 samples, 0.09%)</title><rect x="676.8" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (58 samples, 0.09%)</title><rect x="676.8" y="723.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.8" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (58 samples, 0.09%)</title><rect x="676.8" y="707.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="679.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (123 samples, 0.18%)</title><rect x="677.8" y="787.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.8" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (59 samples, 0.09%)</title><rect x="678.0" y="771.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (22 samples, 0.03%)</title><rect x="678.0" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.0" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (22 samples, 0.03%)</title><rect x="678.0" y="739.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="681.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (37 samples, 0.05%)</title><rect x="678.4" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.4" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (37 samples, 0.05%)</title><rect x="678.4" y="739.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="681.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (51 samples, 0.08%)</title><rect x="679.0" y="771.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.0" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (51 samples, 0.08%)</title><rect x="679.0" y="755.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="682.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (37 samples, 0.05%)</title><rect x="679.9" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (37 samples, 0.05%)</title><rect x="679.9" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (37 samples, 0.05%)</title><rect x="679.9" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (37 samples, 0.05%)</title><rect x="679.9" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (23 samples, 0.03%)</title><rect x="680.2" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (23 samples, 0.03%)</title><rect x="680.2" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (23 samples, 0.03%)</title><rect x="680.2" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (23 samples, 0.03%)</title><rect x="680.2" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (23 samples, 0.03%)</title><rect x="680.2" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.2" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (23 samples, 0.03%)</title><rect x="680.2" y="643.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="683.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (29 samples, 0.04%)</title><rect x="680.8" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (29 samples, 0.04%)</title><rect x="680.8" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (29 samples, 0.04%)</title><rect x="680.8" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.8" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (29 samples, 0.04%)</title><rect x="680.8" y="739.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="683.8" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (29,258 samples, 43.11%)</title><rect x="681.3" y="803.0" width="508.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="684.3" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,369 samples, 2.02%)</title><rect x="681.3" y="787.0" width="23.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.3" y="798.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,369 samples, 2.02%)</title><rect x="681.3" y="771.0" width="23.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="684.3" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (27,889 samples, 41.09%)</title><rect x="705.1" y="787.0" width="484.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.1" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (27,889 samples, 41.09%)</title><rect x="705.1" y="771.0" width="484.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.1" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27,889 samples, 41.09%)</title><rect x="705.1" y="755.0" width="484.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.1" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,356 samples, 6.42%)</title><rect x="705.1" y="739.0" width="75.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.1" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,356 samples, 6.42%)</title><rect x="705.1" y="723.0" width="75.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.1" y="734.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (2,732 samples, 4.03%)</title><rect x="705.1" y="707.0" width="47.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.1" y="718.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,610 samples, 2.37%)</title><rect x="705.1" y="691.0" width="28.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.1" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,610 samples, 2.37%)</title><rect x="705.1" y="675.0" width="28.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.1" y="686.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,610 samples, 2.37%)</title><rect x="705.1" y="659.0" width="28.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.1" y="670.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,610 samples, 2.37%)</title><rect x="705.1" y="643.0" width="28.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.1" y="654.0">j..</text>
</g>
<g>
<title>java.lang.String (635 samples, 0.94%)</title><rect x="705.1" y="627.0" width="11.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="708.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (975 samples, 1.44%)</title><rect x="716.1" y="627.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.1" y="638.0"></text>
</g>
<g>
<title>byte[] (975 samples, 1.44%)</title><rect x="716.1" y="611.0" width="17.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="719.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (1,122 samples, 1.65%)</title><rect x="733.1" y="691.0" width="19.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (1,122 samples, 1.65%)</title><rect x="733.1" y="675.0" width="19.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1762000431.linkToTargetMethod (1,092 samples, 1.61%)</title><rect x="733.1" y="659.0" width="19.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,092 samples, 1.61%)</title><rect x="733.1" y="643.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/637964804.get$Lambda (1,092 samples, 1.61%)</title><rect x="733.1" y="627.0" width="19.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$112 (1,092 samples, 1.61%)</title><rect x="733.1" y="611.0" width="19.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="736.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (30 samples, 0.04%)</title><rect x="752.1" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (30 samples, 0.04%)</title><rect x="752.1" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (30 samples, 0.04%)</title><rect x="752.1" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (30 samples, 0.04%)</title><rect x="752.1" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (30 samples, 0.04%)</title><rect x="752.1" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (30 samples, 0.04%)</title><rect x="752.1" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (30 samples, 0.04%)</title><rect x="752.1" y="563.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="755.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,624 samples, 2.39%)</title><rect x="752.6" y="707.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.6" y="718.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (1,624 samples, 2.39%)</title><rect x="752.6" y="691.0" width="28.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.6" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,624 samples, 2.39%)</title><rect x="752.6" y="675.0" width="28.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.6" y="686.0">ja..</text>
</g>
<g>
<title>java.lang.String (682 samples, 1.00%)</title><rect x="752.6" y="659.0" width="11.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="755.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (942 samples, 1.39%)</title><rect x="764.5" y="659.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.5" y="670.0"></text>
</g>
<g>
<title>byte[] (942 samples, 1.39%)</title><rect x="764.5" y="643.0" width="16.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="767.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8,106 samples, 11.94%)</title><rect x="780.8" y="739.0" width="141.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.8" y="750.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one.nio.http.Request (1,164 samples, 1.72%)</title><rect x="780.8" y="723.0" width="20.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="783.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,588 samples, 3.81%)</title><rect x="801.1" y="723.0" width="45.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.1" y="734.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (2,255 samples, 3.32%)</title><rect x="801.1" y="707.0" width="39.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="804.1" y="718.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (333 samples, 0.49%)</title><rect x="840.3" y="707.0" width="5.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="843.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,354 samples, 6.42%)</title><rect x="846.1" y="723.0" width="75.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.1" y="734.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,354 samples, 6.42%)</title><rect x="846.1" y="707.0" width="75.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.1" y="718.0">one/nio/..</text>
</g>
<g>
<title>char[] (2,483 samples, 3.66%)</title><rect x="846.1" y="691.0" width="43.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="849.1" y="702.0">char[]</text>
</g>
<g>
<title>char[] (45 samples, 0.07%)</title><rect x="889.2" y="691.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="892.2" y="702.0"></text>
</g>
<g>
<title>java.lang.String (649 samples, 0.96%)</title><rect x="890.0" y="691.0" width="11.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="893.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,177 samples, 1.73%)</title><rect x="901.3" y="691.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,177 samples, 1.73%)</title><rect x="901.3" y="675.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,177 samples, 1.73%)</title><rect x="901.3" y="659.0" width="20.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.3" y="670.0"></text>
</g>
<g>
<title>byte[] (1,177 samples, 1.73%)</title><rect x="901.3" y="643.0" width="20.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="904.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1,007 samples, 1.48%)</title><rect x="921.8" y="739.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.8" y="750.0"></text>
</g>
<g>
<title>byte[] (1,007 samples, 1.48%)</title><rect x="921.8" y="723.0" width="17.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="924.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,482 samples, 2.18%)</title><rect x="939.3" y="739.0" width="25.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="942.3" y="750.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,482 samples, 2.18%)</title><rect x="939.3" y="723.0" width="25.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.3" y="734.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,482 samples, 2.18%)</title><rect x="939.3" y="707.0" width="25.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.3" y="718.0">j..</text>
</g>
<g>
<title>java.lang.String (699 samples, 1.03%)</title><rect x="939.3" y="691.0" width="12.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="942.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (783 samples, 1.15%)</title><rect x="951.4" y="691.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.4" y="702.0"></text>
</g>
<g>
<title>byte[] (783 samples, 1.15%)</title><rect x="951.4" y="675.0" width="13.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="954.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,938 samples, 19.06%)</title><rect x="965.1" y="739.0" width="224.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.1" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,938 samples, 19.06%)</title><rect x="965.1" y="723.0" width="224.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.1" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (6,103 samples, 8.99%)</title><rect x="965.1" y="707.0" width="106.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="968.1" y="718.0">char[]</text>
</g>
<g>
<title>char[] (167 samples, 0.25%)</title><rect x="1071.2" y="707.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1074.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String (2,375 samples, 3.50%)</title><rect x="1074.1" y="707.0" width="41.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1077.1" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,293 samples, 6.33%)</title><rect x="1115.4" y="707.0" width="74.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.4" y="718.0">java/lan..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,293 samples, 6.33%)</title><rect x="1115.4" y="691.0" width="74.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1118.4" y="702.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,293 samples, 6.33%)</title><rect x="1115.4" y="675.0" width="74.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.4" y="686.0">java/lan..</text>
</g>
<g>
<title>byte[] (4,293 samples, 6.33%)</title><rect x="1115.4" y="659.0" width="74.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1118.4" y="670.0">byte[]</text>
</g>
</g>
</svg>
