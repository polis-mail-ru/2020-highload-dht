<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (64,498 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (27,266 samples, 42.27%)</title><rect x="10.0" y="803.0" width="498.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (27,266 samples, 42.27%)</title><rect x="10.0" y="787.0" width="498.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (27,266 samples, 42.27%)</title><rect x="10.0" y="771.0" width="498.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4,218 samples, 6.54%)</title><rect x="10.0" y="755.0" width="77.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,218 samples, 6.54%)</title><rect x="10.0" y="739.0" width="77.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4,218 samples, 6.54%)</title><rect x="10.0" y="723.0" width="77.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (29 samples, 0.04%)</title><rect x="10.0" y="707.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1084020713.apply (4,189 samples, 6.49%)</title><rect x="10.5" y="707.0" width="76.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.5" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (4,189 samples, 6.49%)</title><rect x="10.5" y="691.0" width="76.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.5" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (4,189 samples, 6.49%)</title><rect x="10.5" y="675.0" width="76.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.5" y="686.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.07%)</title><rect x="10.5" y="659.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.07%)</title><rect x="10.5" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/491272286.get$Lambda (34 samples, 0.05%)</title><rect x="10.5" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$441 (34 samples, 0.05%)</title><rect x="10.5" y="611.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (52 samples, 0.08%)</title><rect x="11.4" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (52 samples, 0.08%)</title><rect x="11.4" y="643.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (28 samples, 0.04%)</title><rect x="11.4" y="627.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="14.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="11.9" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="11.9" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.04%)</title><rect x="11.9" y="595.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="14.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (146 samples, 0.23%)</title><rect x="12.3" y="659.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (146 samples, 0.23%)</title><rect x="12.3" y="643.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (69 samples, 0.11%)</title><rect x="12.3" y="627.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="15.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.12%)</title><rect x="13.6" y="627.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (77 samples, 0.12%)</title><rect x="13.6" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (77 samples, 0.12%)</title><rect x="13.6" y="595.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="16.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,765 samples, 5.84%)</title><rect x="15.0" y="659.0" width="68.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.0" y="670.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,765 samples, 5.84%)</title><rect x="15.0" y="643.0" width="68.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.0" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,765 samples, 5.84%)</title><rect x="15.0" y="627.0" width="68.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.0" y="638.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.09%)</title><rect x="15.0" y="611.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.09%)</title><rect x="15.0" y="595.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/868767352.get$Lambda (20 samples, 0.03%)</title><rect x="15.2" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$211 (20 samples, 0.03%)</title><rect x="15.2" y="563.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="18.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1315053200.get$Lambda (27 samples, 0.04%)</title><rect x="15.6" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$361 (27 samples, 0.04%)</title><rect x="15.6" y="563.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="18.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,651 samples, 4.11%)</title><rect x="16.1" y="611.0" width="48.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.1" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,651 samples, 4.11%)</title><rect x="16.1" y="595.0" width="48.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.1" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,626 samples, 4.07%)</title><rect x="16.1" y="579.0" width="48.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.1" y="590.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1315053200.apply (2,626 samples, 4.07%)</title><rect x="16.1" y="563.0" width="48.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.1" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,626 samples, 4.07%)</title><rect x="16.1" y="547.0" width="48.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.1" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,626 samples, 4.07%)</title><rect x="16.1" y="531.0" width="48.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.1" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/868767352.apply (2,626 samples, 4.07%)</title><rect x="16.1" y="515.0" width="48.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.1" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,626 samples, 4.07%)</title><rect x="16.1" y="499.0" width="48.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.1" y="510.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.03%)</title><rect x="16.1" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.03%)</title><rect x="16.1" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$435/1932218312.get$Lambda (18 samples, 0.03%)</title><rect x="16.1" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$435 (18 samples, 0.03%)</title><rect x="16.1" y="435.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="19.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (94 samples, 0.15%)</title><rect x="16.4" y="483.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (94 samples, 0.15%)</title><rect x="16.4" y="467.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (37 samples, 0.06%)</title><rect x="16.4" y="451.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="19.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (29 samples, 0.04%)</title><rect x="17.1" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$435/1932218312.apply (29 samples, 0.04%)</title><rect x="17.1" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (29 samples, 0.04%)</title><rect x="17.1" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (29 samples, 0.04%)</title><rect x="17.1" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/925206735.apply (29 samples, 0.04%)</title><rect x="17.1" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (29 samples, 0.04%)</title><rect x="17.1" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (25 samples, 0.04%)</title><rect x="17.1" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (14 samples, 0.02%)</title><rect x="17.1" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (14 samples, 0.02%)</title><rect x="17.1" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (14 samples, 0.02%)</title><rect x="17.1" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.04%)</title><rect x="17.6" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.04%)</title><rect x="17.6" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.04%)</title><rect x="17.6" y="419.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="20.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (54 samples, 0.08%)</title><rect x="18.1" y="483.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (54 samples, 0.08%)</title><rect x="18.1" y="467.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (25 samples, 0.04%)</title><rect x="18.1" y="451.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="21.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="18.6" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="18.6" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.04%)</title><rect x="18.6" y="419.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="21.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,460 samples, 3.81%)</title><rect x="19.1" y="483.0" width="45.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.1" y="494.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.05%)</title><rect x="19.1" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.05%)</title><rect x="19.1" y="451.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$424/1323568008.get$Lambda (16 samples, 0.02%)</title><rect x="19.1" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$424 (16 samples, 0.02%)</title><rect x="19.1" y="419.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="22.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$430/2029056860.get$Lambda (19 samples, 0.03%)</title><rect x="19.4" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$430 (19 samples, 0.03%)</title><rect x="19.4" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="22.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,004 samples, 3.11%)</title><rect x="19.7" y="467.0" width="36.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.7" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,004 samples, 3.11%)</title><rect x="19.7" y="451.0" width="36.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.7" y="462.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.04%)</title><rect x="19.7" y="435.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$424/1323568008.apply (1,924 samples, 2.98%)</title><rect x="20.2" y="435.0" width="35.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.2" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,924 samples, 2.98%)</title><rect x="20.2" y="419.0" width="35.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.2" y="430.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (65 samples, 0.10%)</title><rect x="20.3" y="403.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (65 samples, 0.10%)</title><rect x="20.3" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (45 samples, 0.07%)</title><rect x="20.3" y="371.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="23.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.03%)</title><rect x="21.1" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.03%)</title><rect x="21.1" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.03%)</title><rect x="21.1" y="339.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="24.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="21.5" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="24.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (44 samples, 0.07%)</title><rect x="22.0" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (24 samples, 0.04%)</title><rect x="22.0" y="387.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="25.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (20 samples, 0.03%)</title><rect x="22.4" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (19 samples, 0.03%)</title><rect x="22.4" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (19 samples, 0.03%)</title><rect x="22.4" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (19 samples, 0.03%)</title><rect x="22.4" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (19 samples, 0.03%)</title><rect x="22.4" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (19 samples, 0.03%)</title><rect x="22.4" y="307.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="25.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (60 samples, 0.09%)</title><rect x="22.8" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (60 samples, 0.09%)</title><rect x="22.8" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (24 samples, 0.04%)</title><rect x="22.8" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (24 samples, 0.04%)</title><rect x="22.8" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (24 samples, 0.04%)</title><rect x="22.8" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (24 samples, 0.04%)</title><rect x="22.8" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="25.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (36 samples, 0.06%)</title><rect x="23.2" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (36 samples, 0.06%)</title><rect x="23.2" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (21 samples, 0.03%)</title><rect x="23.2" y="339.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="26.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (15 samples, 0.02%)</title><rect x="23.6" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (15 samples, 0.02%)</title><rect x="23.6" y="323.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="26.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,721 samples, 2.67%)</title><rect x="23.9" y="403.0" width="31.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.9" y="414.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (17 samples, 0.03%)</title><rect x="23.9" y="387.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="26.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (27 samples, 0.04%)</title><rect x="24.2" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.02%)</title><rect x="24.4" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="27.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (147 samples, 0.23%)</title><rect x="24.7" y="387.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (147 samples, 0.23%)</title><rect x="24.7" y="371.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (147 samples, 0.23%)</title><rect x="24.7" y="355.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.7" y="366.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.23%)</title><rect x="24.7" y="339.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="27.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (59 samples, 0.09%)</title><rect x="27.4" y="387.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.4" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (59 samples, 0.09%)</title><rect x="27.4" y="371.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.4" y="382.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.09%)</title><rect x="27.4" y="355.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="30.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (149 samples, 0.23%)</title><rect x="28.4" y="387.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (149 samples, 0.23%)</title><rect x="28.4" y="371.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.03%)</title><rect x="28.4" y="355.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="31.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (128 samples, 0.20%)</title><rect x="28.8" y="355.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.8" y="366.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.20%)</title><rect x="28.8" y="339.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="31.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (35 samples, 0.05%)</title><rect x="31.2" y="387.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (35 samples, 0.05%)</title><rect x="31.2" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.2" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.05%)</title><rect x="31.2" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="34.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (15 samples, 0.02%)</title><rect x="31.8" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.8" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (15 samples, 0.02%)</title><rect x="31.8" y="371.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="34.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1,034 samples, 1.60%)</title><rect x="32.1" y="387.0" width="18.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.1" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (16 samples, 0.02%)</title><rect x="32.1" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.02%)</title><rect x="32.1" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.02%)</title><rect x="32.1" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="35.1" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$466/1134579550.get$Lambda (16 samples, 0.02%)</title><rect x="32.1" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.1" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$466 (16 samples, 0.02%)</title><rect x="32.1" y="307.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="35.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (572 samples, 0.89%)</title><rect x="32.4" y="371.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (349 samples, 0.54%)</title><rect x="32.4" y="355.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.4" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (349 samples, 0.54%)</title><rect x="32.4" y="339.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.4" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (349 samples, 0.54%)</title><rect x="32.4" y="323.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (349 samples, 0.54%)</title><rect x="32.4" y="307.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.4" y="318.0"></text>
</g>
<g>
<title>byte[] (349 samples, 0.54%)</title><rect x="32.4" y="291.0" width="6.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="35.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (47 samples, 0.07%)</title><rect x="38.8" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.8" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (47 samples, 0.07%)</title><rect x="38.8" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (47 samples, 0.07%)</title><rect x="38.8" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (47 samples, 0.07%)</title><rect x="38.8" y="307.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="41.8" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (44 samples, 0.07%)</title><rect x="39.6" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.6" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (18 samples, 0.03%)</title><rect x="39.6" y="339.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="42.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (26 samples, 0.04%)</title><rect x="39.9" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.9" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (26 samples, 0.04%)</title><rect x="39.9" y="323.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="42.9" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$466/1134579550.test (132 samples, 0.20%)</title><rect x="40.4" y="355.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.4" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (132 samples, 0.20%)</title><rect x="40.4" y="339.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1442191055.test (132 samples, 0.20%)</title><rect x="40.4" y="323.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (132 samples, 0.20%)</title><rect x="40.4" y="307.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.4" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1019298652.test (132 samples, 0.20%)</title><rect x="40.4" y="291.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.4" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (132 samples, 0.20%)</title><rect x="40.4" y="275.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/119290689.test (132 samples, 0.20%)</title><rect x="40.4" y="259.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (132 samples, 0.20%)</title><rect x="40.4" y="243.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (132 samples, 0.20%)</title><rect x="40.4" y="227.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (132 samples, 0.20%)</title><rect x="40.4" y="211.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.10%)</title><rect x="40.4" y="195.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="43.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.10%)</title><rect x="41.6" y="195.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.6" y="206.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.10%)</title><rect x="41.6" y="179.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="44.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (446 samples, 0.69%)</title><rect x="42.8" y="371.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (446 samples, 0.69%)</title><rect x="42.8" y="355.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.8" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (446 samples, 0.69%)</title><rect x="42.8" y="339.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.8" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (22 samples, 0.03%)</title><rect x="42.8" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="45.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.03%)</title><rect x="43.2" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="46.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (47 samples, 0.07%)</title><rect x="43.6" y="323.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="46.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (14 samples, 0.02%)</title><rect x="44.5" y="323.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="47.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.04%)</title><rect x="44.7" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.04%)</title><rect x="44.7" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.7" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.get$Lambda (28 samples, 0.04%)</title><rect x="44.7" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.7" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (28 samples, 0.04%)</title><rect x="44.7" y="275.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="47.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (24 samples, 0.04%)</title><rect x="45.3" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.3" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (24 samples, 0.04%)</title><rect x="45.3" y="307.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="48.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (250 samples, 0.39%)</title><rect x="45.7" y="323.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (250 samples, 0.39%)</title><rect x="45.7" y="307.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.7" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (250 samples, 0.39%)</title><rect x="45.7" y="291.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (54 samples, 0.08%)</title><rect x="45.7" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.7" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (54 samples, 0.08%)</title><rect x="45.7" y="259.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (54 samples, 0.08%)</title><rect x="45.7" y="243.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.7" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (54 samples, 0.08%)</title><rect x="45.7" y="227.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.7" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (54 samples, 0.08%)</title><rect x="45.7" y="211.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.7" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (54 samples, 0.08%)</title><rect x="45.7" y="195.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.7" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (54 samples, 0.08%)</title><rect x="45.7" y="179.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.7" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 0.08%)</title><rect x="45.7" y="163.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.08%)</title><rect x="45.7" y="147.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="48.7" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (102 samples, 0.16%)</title><rect x="46.7" y="275.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.7" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (102 samples, 0.16%)</title><rect x="46.7" y="259.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (51 samples, 0.08%)</title><rect x="46.7" y="243.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (51 samples, 0.08%)</title><rect x="46.7" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.7" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.08%)</title><rect x="46.7" y="211.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="49.7" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (51 samples, 0.08%)</title><rect x="47.6" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.6" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (51 samples, 0.08%)</title><rect x="47.6" y="227.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="50.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (94 samples, 0.15%)</title><rect x="48.5" y="275.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (94 samples, 0.15%)</title><rect x="48.5" y="259.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="51.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (40 samples, 0.06%)</title><rect x="50.3" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (40 samples, 0.06%)</title><rect x="50.3" y="307.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="53.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (56 samples, 0.09%)</title><rect x="51.0" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (15 samples, 0.02%)</title><rect x="51.0" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.0" y="382.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.02%)</title><rect x="51.0" y="355.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="54.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.06%)</title><rect x="51.3" y="371.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (41 samples, 0.06%)</title><rect x="51.3" y="355.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (41 samples, 0.06%)</title><rect x="51.3" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.06%)</title><rect x="51.3" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.02%)</title><rect x="51.3" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.3" y="318.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.02%)</title><rect x="51.3" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="54.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.04%)</title><rect x="51.6" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.04%)</title><rect x="51.6" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.6" y="302.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.04%)</title><rect x="51.6" y="275.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="54.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (39 samples, 0.06%)</title><rect x="52.0" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (39 samples, 0.06%)</title><rect x="52.0" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.06%)</title><rect x="52.0" y="355.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (39 samples, 0.06%)</title><rect x="52.0" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (39 samples, 0.06%)</title><rect x="52.0" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.06%)</title><rect x="52.0" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (39 samples, 0.06%)</title><rect x="52.0" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (39 samples, 0.06%)</title><rect x="52.0" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.0" y="286.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.06%)</title><rect x="52.0" y="259.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="55.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (143 samples, 0.22%)</title><rect x="52.7" y="387.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.7" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (35 samples, 0.05%)</title><rect x="52.7" y="371.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="55.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (36 samples, 0.06%)</title><rect x="53.4" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.06%)</title><rect x="53.4" y="355.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="56.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (72 samples, 0.11%)</title><rect x="54.0" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.0" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (72 samples, 0.11%)</title><rect x="54.0" y="355.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="57.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.09%)</title><rect x="55.4" y="435.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.09%)</title><rect x="55.4" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.09%)</title><rect x="55.4" y="403.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="58.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (73 samples, 0.11%)</title><rect x="56.4" y="467.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="59.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.04%)</title><rect x="57.7" y="467.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="60.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (320 samples, 0.50%)</title><rect x="58.2" y="467.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.05%)</title><rect x="58.2" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="58.2" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$378/7833235.get$Lambda (22 samples, 0.03%)</title><rect x="58.2" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$378 (22 samples, 0.03%)</title><rect x="58.2" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="61.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (28 samples, 0.04%)</title><rect x="58.9" y="451.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="61.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (34 samples, 0.05%)</title><rect x="59.4" y="451.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="62.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (27 samples, 0.04%)</title><rect x="60.0" y="451.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="63.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (89 samples, 0.14%)</title><rect x="60.5" y="451.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (89 samples, 0.14%)</title><rect x="60.5" y="435.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (89 samples, 0.14%)</title><rect x="60.5" y="419.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (89 samples, 0.14%)</title><rect x="60.5" y="403.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (89 samples, 0.14%)</title><rect x="60.5" y="387.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (89 samples, 0.14%)</title><rect x="60.5" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (89 samples, 0.14%)</title><rect x="60.5" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (89 samples, 0.14%)</title><rect x="60.5" y="339.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (89 samples, 0.14%)</title><rect x="60.5" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.05%)</title><rect x="60.5" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.05%)</title><rect x="60.5" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$393/1560942433.get$Lambda (19 samples, 0.03%)</title><rect x="60.7" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$393 (19 samples, 0.03%)</title><rect x="60.7" y="259.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="63.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (27 samples, 0.04%)</title><rect x="61.1" y="307.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="64.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (30 samples, 0.05%)</title><rect x="61.6" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (30 samples, 0.05%)</title><rect x="61.6" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (14 samples, 0.02%)</title><rect x="61.6" y="275.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="64.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (16 samples, 0.02%)</title><rect x="61.8" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (16 samples, 0.02%)</title><rect x="61.8" y="259.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="64.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (88 samples, 0.14%)</title><rect x="62.1" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.1" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (23 samples, 0.04%)</title><rect x="62.1" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="65.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (42 samples, 0.07%)</title><rect x="62.5" y="435.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="65.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (23 samples, 0.04%)</title><rect x="63.3" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (23 samples, 0.04%)</title><rect x="63.3" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.3" y="430.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.04%)</title><rect x="63.3" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="66.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (20 samples, 0.03%)</title><rect x="63.7" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.03%)</title><rect x="63.7" y="435.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="66.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.04%)</title><rect x="64.1" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.04%)</title><rect x="64.1" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.04%)</title><rect x="64.1" y="547.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="67.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51 samples, 0.08%)</title><rect x="64.6" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51 samples, 0.08%)</title><rect x="64.6" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (31 samples, 0.05%)</title><rect x="64.6" y="579.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="67.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.03%)</title><rect x="65.1" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.03%)</title><rect x="65.1" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.03%)</title><rect x="65.1" y="547.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="68.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,005 samples, 1.56%)</title><rect x="65.5" y="611.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.05%)</title><rect x="65.5" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.05%)</title><rect x="65.5" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$343/982574544.get$Lambda (23 samples, 0.04%)</title><rect x="65.5" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$343 (23 samples, 0.04%)</title><rect x="65.5" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="68.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (56 samples, 0.09%)</title><rect x="66.1" y="595.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (56 samples, 0.09%)</title><rect x="66.1" y="579.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/975015434.apply (26 samples, 0.04%)</title><rect x="66.1" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (26 samples, 0.04%)</title><rect x="66.1" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (26 samples, 0.04%)</title><rect x="66.1" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="66.1" y="515.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="69.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.05%)</title><rect x="66.6" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.05%)</title><rect x="66.6" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.05%)</title><rect x="66.6" y="531.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="69.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.03%)</title><rect x="67.1" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.03%)</title><rect x="67.1" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.03%)</title><rect x="67.1" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.03%)</title><rect x="67.1" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.03%)</title><rect x="67.1" y="531.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="70.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (898 samples, 1.39%)</title><rect x="67.4" y="595.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (898 samples, 1.39%)</title><rect x="67.4" y="579.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (60 samples, 0.09%)</title><rect x="67.4" y="563.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="70.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (818 samples, 1.27%)</title><rect x="68.5" y="563.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.5" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (18 samples, 0.03%)</title><rect x="68.8" y="547.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="71.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (17 samples, 0.03%)</title><rect x="69.1" y="547.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="72.1" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (40 samples, 0.06%)</title><rect x="69.4" y="547.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.4" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (40 samples, 0.06%)</title><rect x="69.4" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.4" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (40 samples, 0.06%)</title><rect x="69.4" y="515.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="72.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (20 samples, 0.03%)</title><rect x="70.2" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (20 samples, 0.03%)</title><rect x="70.2" y="531.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="73.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (52 samples, 0.08%)</title><rect x="70.5" y="547.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="73.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (39 samples, 0.06%)</title><rect x="71.5" y="547.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="74.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (47 samples, 0.07%)</title><rect x="72.2" y="547.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="75.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.07%)</title><rect x="73.0" y="547.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="76.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (231 samples, 0.36%)</title><rect x="73.9" y="547.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (18 samples, 0.03%)</title><rect x="73.9" y="531.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="76.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (21 samples, 0.03%)</title><rect x="74.5" y="531.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="77.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.03%)</title><rect x="75.0" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.03%)</title><rect x="75.0" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.get$Lambda (18 samples, 0.03%)</title><rect x="75.0" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$333 (18 samples, 0.03%)</title><rect x="75.0" y="483.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="78.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (16 samples, 0.02%)</title><rect x="75.3" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.02%)</title><rect x="75.3" y="515.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="78.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (15 samples, 0.02%)</title><rect x="75.6" y="531.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="78.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.03%)</title><rect x="75.9" y="531.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="78.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (104 samples, 0.16%)</title><rect x="76.2" y="531.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (24 samples, 0.04%)</title><rect x="76.2" y="515.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="79.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (33 samples, 0.05%)</title><rect x="76.7" y="515.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="79.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (37 samples, 0.06%)</title><rect x="77.5" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (158 samples, 0.24%)</title><rect x="78.1" y="547.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (14 samples, 0.02%)</title><rect x="78.1" y="531.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="81.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (14 samples, 0.02%)</title><rect x="78.4" y="531.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="81.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (15 samples, 0.02%)</title><rect x="78.7" y="531.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="81.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (19 samples, 0.03%)</title><rect x="78.9" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (19 samples, 0.03%)</title><rect x="78.9" y="515.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="81.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (96 samples, 0.15%)</title><rect x="79.3" y="531.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (32 samples, 0.05%)</title><rect x="79.5" y="515.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="82.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (18 samples, 0.03%)</title><rect x="80.1" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.1" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (18 samples, 0.03%)</title><rect x="80.1" y="499.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="83.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (35 samples, 0.05%)</title><rect x="80.4" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (17 samples, 0.03%)</title><rect x="80.7" y="499.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="83.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (54 samples, 0.08%)</title><rect x="81.0" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (54 samples, 0.08%)</title><rect x="81.0" y="531.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (29 samples, 0.04%)</title><rect x="81.0" y="515.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="84.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (25 samples, 0.04%)</title><rect x="81.6" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (25 samples, 0.04%)</title><rect x="81.6" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (25 samples, 0.04%)</title><rect x="81.6" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (25 samples, 0.04%)</title><rect x="81.6" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.04%)</title><rect x="81.6" y="451.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="84.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (81 samples, 0.13%)</title><rect x="82.0" y="547.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2015781843.linkToTargetMethod (23 samples, 0.04%)</title><rect x="82.0" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.04%)</title><rect x="82.0" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$244/1029230441.get$Lambda (23 samples, 0.04%)</title><rect x="82.0" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$244 (23 samples, 0.04%)</title><rect x="82.0" y="483.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="85.0" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (58 samples, 0.09%)</title><rect x="82.4" y="531.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$244/1029230441.run (58 samples, 0.09%)</title><rect x="82.4" y="515.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (58 samples, 0.09%)</title><rect x="82.4" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.4" y="510.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (45 samples, 0.07%)</title><rect x="82.7" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.7" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (21 samples, 0.03%)</title><rect x="82.7" y="467.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="85.7" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (24 samples, 0.04%)</title><rect x="83.1" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.1" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (24 samples, 0.04%)</title><rect x="83.1" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.1" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (24 samples, 0.04%)</title><rect x="83.1" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.1" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (24 samples, 0.04%)</title><rect x="83.1" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.1" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (24 samples, 0.04%)</title><rect x="83.1" y="403.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="86.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (20 samples, 0.03%)</title><rect x="83.5" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.03%)</title><rect x="83.5" y="547.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="86.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (34 samples, 0.05%)</title><rect x="83.9" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (34 samples, 0.05%)</title><rect x="83.9" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (34 samples, 0.05%)</title><rect x="83.9" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.9" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (34 samples, 0.05%)</title><rect x="83.9" y="611.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="86.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (146 samples, 0.23%)</title><rect x="84.5" y="659.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (124 samples, 0.19%)</title><rect x="84.5" y="643.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="87.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (22 samples, 0.03%)</title><rect x="86.8" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (22 samples, 0.03%)</title><rect x="86.8" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.8" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (22 samples, 0.03%)</title><rect x="86.8" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.8" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (22 samples, 0.03%)</title><rect x="86.8" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.8" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (22 samples, 0.03%)</title><rect x="86.8" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.8" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (22 samples, 0.03%)</title><rect x="86.8" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.8" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (22 samples, 0.03%)</title><rect x="86.8" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.8" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (22 samples, 0.03%)</title><rect x="86.8" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.8" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (22 samples, 0.03%)</title><rect x="86.8" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (22 samples, 0.03%)</title><rect x="86.8" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.8" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (22 samples, 0.03%)</title><rect x="86.8" y="483.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="89.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (834 samples, 1.29%)</title><rect x="87.2" y="755.0" width="15.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (834 samples, 1.29%)</title><rect x="87.2" y="739.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (834 samples, 1.29%)</title><rect x="87.2" y="723.0" width="15.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (834 samples, 1.29%)</title><rect x="87.2" y="707.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (834 samples, 1.29%)</title><rect x="87.2" y="691.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (834 samples, 1.29%)</title><rect x="87.2" y="675.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.accept (834 samples, 1.29%)</title><rect x="87.2" y="659.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (834 samples, 1.29%)</title><rect x="87.2" y="643.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (784 samples, 1.22%)</title><rect x="87.2" y="627.0" width="14.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (784 samples, 1.22%)</title><rect x="87.2" y="611.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (784 samples, 1.22%)</title><rect x="87.2" y="595.0" width="14.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (784 samples, 1.22%)</title><rect x="87.2" y="579.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$203/366038914.accept (784 samples, 1.22%)</title><rect x="87.2" y="563.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$15 (784 samples, 1.22%)</title><rect x="87.2" y="547.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (104 samples, 0.16%)</title><rect x="87.2" y="531.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (104 samples, 0.16%)</title><rect x="87.2" y="515.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (104 samples, 0.16%)</title><rect x="87.2" y="499.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (72 samples, 0.11%)</title><rect x="87.2" y="483.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (72 samples, 0.11%)</title><rect x="87.2" y="467.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.2" y="478.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.11%)</title><rect x="87.2" y="451.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="90.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 0.05%)</title><rect x="88.5" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.5" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (32 samples, 0.05%)</title><rect x="88.5" y="467.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="91.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$200/1835347556.mergeResponse (680 samples, 1.05%)</title><rect x="89.1" y="531.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$11 (680 samples, 1.05%)</title><rect x="89.1" y="515.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.1" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (73 samples, 0.11%)</title><rect x="89.1" y="499.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (31 samples, 0.05%)</title><rect x="89.1" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.1" y="494.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (31 samples, 0.05%)</title><rect x="89.1" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.1" y="478.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (31 samples, 0.05%)</title><rect x="89.1" y="451.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="92.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (42 samples, 0.07%)</title><rect x="89.6" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="92.6" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (42 samples, 0.07%)</title><rect x="89.6" y="467.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="92.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (23 samples, 0.04%)</title><rect x="90.4" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.4" y="510.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (23 samples, 0.04%)</title><rect x="90.4" y="483.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="93.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (421 samples, 0.65%)</title><rect x="90.8" y="499.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (390 samples, 0.60%)</title><rect x="90.8" y="483.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (390 samples, 0.60%)</title><rect x="90.8" y="467.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (367 samples, 0.57%)</title><rect x="90.8" y="451.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (344 samples, 0.53%)</title><rect x="90.8" y="435.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.8" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (324 samples, 0.50%)</title><rect x="90.8" y="419.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (324 samples, 0.50%)</title><rect x="90.8" y="403.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (50 samples, 0.08%)</title><rect x="90.8" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$632/945241302.accept (50 samples, 0.08%)</title><rect x="90.8" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.08%)</title><rect x="90.8" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.08%)</title><rect x="90.8" y="339.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.08%)</title><rect x="90.8" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.08%)</title><rect x="90.8" y="307.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.8" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.08%)</title><rect x="90.8" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.8" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.08%)</title><rect x="90.8" y="275.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="93.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$624/36709845.apply (274 samples, 0.42%)</title><rect x="91.7" y="387.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$10 (274 samples, 0.42%)</title><rect x="91.7" y="371.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.7" y="382.0"></text>
</g>
<g>
<title>one.nio.http.Response (36 samples, 0.06%)</title><rect x="91.7" y="355.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="94.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (66 samples, 0.10%)</title><rect x="92.4" y="355.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 0.10%)</title><rect x="92.4" y="339.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (66 samples, 0.10%)</title><rect x="92.4" y="323.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="95.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (172 samples, 0.27%)</title><rect x="93.6" y="355.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (172 samples, 0.27%)</title><rect x="93.6" y="339.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.6" y="350.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.11%)</title><rect x="93.6" y="323.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="96.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (46 samples, 0.07%)</title><rect x="95.0" y="323.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="98.0" y="334.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.08%)</title><rect x="95.8" y="323.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="98.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (20 samples, 0.03%)</title><rect x="96.8" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (20 samples, 0.03%)</title><rect x="96.8" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$626/326166351.get (20 samples, 0.03%)</title><rect x="96.8" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.8" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.03%)</title><rect x="96.8" y="371.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="99.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (23 samples, 0.04%)</title><rect x="97.1" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (23 samples, 0.04%)</title><rect x="97.1" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.1" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (23 samples, 0.04%)</title><rect x="97.1" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="100.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (23 samples, 0.04%)</title><rect x="97.5" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (23 samples, 0.04%)</title><rect x="97.5" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.5" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (23 samples, 0.04%)</title><rect x="97.5" y="419.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="100.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (31 samples, 0.05%)</title><rect x="98.0" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.0" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (31 samples, 0.05%)</title><rect x="98.0" y="467.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="101.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (66 samples, 0.10%)</title><rect x="98.5" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.5" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (66 samples, 0.10%)</title><rect x="98.5" y="483.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="101.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergePutDeleteResponses (97 samples, 0.15%)</title><rect x="99.7" y="499.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.7" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.03%)</title><rect x="99.7" y="483.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="102.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (78 samples, 0.12%)</title><rect x="100.1" y="483.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.1" y="494.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.07%)</title><rect x="100.1" y="467.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="103.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.02%)</title><rect x="100.9" y="467.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="103.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.03%)</title><rect x="101.2" y="467.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="104.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (50 samples, 0.08%)</title><rect x="101.5" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.08%)</title><rect x="101.5" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.08%)</title><rect x="101.5" y="595.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="104.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,612 samples, 2.50%)</title><rect x="102.4" y="755.0" width="29.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.4" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,470 samples, 2.28%)</title><rect x="102.4" y="739.0" width="26.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.4" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,460 samples, 2.26%)</title><rect x="102.4" y="723.0" width="26.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.4" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,460 samples, 2.26%)</title><rect x="102.4" y="707.0" width="26.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.4" y="718.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,460 samples, 2.26%)</title><rect x="102.4" y="691.0" width="26.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="105.4" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (142 samples, 0.22%)</title><rect x="129.3" y="739.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (138 samples, 0.21%)</title><rect x="129.3" y="723.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (138 samples, 0.21%)</title><rect x="129.3" y="707.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (138 samples, 0.21%)</title><rect x="129.3" y="691.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="132.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$470/1679529773.run (1,049 samples, 1.63%)</title><rect x="131.9" y="755.0" width="19.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,049 samples, 1.63%)</title><rect x="131.9" y="739.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,049 samples, 1.63%)</title><rect x="131.9" y="723.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,049 samples, 1.63%)</title><rect x="131.9" y="707.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,049 samples, 1.63%)</title><rect x="131.9" y="691.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,049 samples, 1.63%)</title><rect x="131.9" y="675.0" width="19.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,049 samples, 1.63%)</title><rect x="131.9" y="659.0" width="19.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,049 samples, 1.63%)</title><rect x="131.9" y="643.0" width="19.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,049 samples, 1.63%)</title><rect x="131.9" y="627.0" width="19.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,049 samples, 1.63%)</title><rect x="131.9" y="611.0" width="19.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,049 samples, 1.63%)</title><rect x="131.9" y="595.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (947 samples, 1.47%)</title><rect x="131.9" y="579.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.07%)</title><rect x="131.9" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.07%)</title><rect x="131.9" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$478/966811203.get$Lambda (25 samples, 0.04%)</title><rect x="131.9" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$478 (25 samples, 0.04%)</title><rect x="131.9" y="515.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="134.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$518/2112924215.get$Lambda (14 samples, 0.02%)</title><rect x="132.5" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$518 (14 samples, 0.02%)</title><rect x="132.5" y="515.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="135.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (899 samples, 1.39%)</title><rect x="132.8" y="563.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (40 samples, 0.06%)</title><rect x="132.8" y="547.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="135.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (859 samples, 1.33%)</title><rect x="133.5" y="547.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (859 samples, 1.33%)</title><rect x="133.5" y="531.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (859 samples, 1.33%)</title><rect x="133.5" y="515.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (140 samples, 0.22%)</title><rect x="133.5" y="499.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (43 samples, 0.07%)</title><rect x="133.5" y="483.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$503/474007538.apply (97 samples, 0.15%)</title><rect x="134.3" y="483.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (97 samples, 0.15%)</title><rect x="134.3" y="467.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (97 samples, 0.15%)</title><rect x="134.3" y="451.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (20 samples, 0.03%)</title><rect x="134.3" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.3" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (20 samples, 0.03%)</title><rect x="134.3" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.3" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (20 samples, 0.03%)</title><rect x="134.3" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="137.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (77 samples, 0.12%)</title><rect x="134.7" y="435.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (66 samples, 0.10%)</title><rect x="134.9" y="419.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (66 samples, 0.10%)</title><rect x="134.9" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (38 samples, 0.06%)</title><rect x="134.9" y="387.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="137.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.04%)</title><rect x="135.6" y="387.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.04%)</title><rect x="135.6" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.04%)</title><rect x="135.6" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="138.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (719 samples, 1.11%)</title><rect x="136.1" y="499.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (719 samples, 1.11%)</title><rect x="136.1" y="483.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$435/1932218312.apply (719 samples, 1.11%)</title><rect x="136.1" y="467.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (719 samples, 1.11%)</title><rect x="136.1" y="451.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (719 samples, 1.11%)</title><rect x="136.1" y="435.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/925206735.apply (719 samples, 1.11%)</title><rect x="136.1" y="419.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (719 samples, 1.11%)</title><rect x="136.1" y="403.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (66 samples, 0.10%)</title><rect x="136.3" y="387.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (66 samples, 0.10%)</title><rect x="136.3" y="371.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.3" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (40 samples, 0.06%)</title><rect x="136.3" y="355.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="139.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="137.0" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.04%)</title><rect x="137.0" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="137.0" y="323.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="140.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (643 samples, 1.00%)</title><rect x="137.5" y="387.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.03%)</title><rect x="137.5" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.03%)</title><rect x="137.5" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (218 samples, 0.34%)</title><rect x="137.8" y="371.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (218 samples, 0.34%)</title><rect x="137.8" y="355.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (218 samples, 0.34%)</title><rect x="137.8" y="339.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$486/406708749.accept (61 samples, 0.09%)</title><rect x="137.8" y="323.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (61 samples, 0.09%)</title><rect x="137.8" y="307.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (61 samples, 0.09%)</title><rect x="137.8" y="291.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.03%)</title><rect x="137.8" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="137.8" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$491/1321455559.get$Lambda (19 samples, 0.03%)</title><rect x="137.8" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$491 (19 samples, 0.03%)</title><rect x="137.8" y="227.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="140.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (42 samples, 0.07%)</title><rect x="138.2" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (42 samples, 0.07%)</title><rect x="138.2" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.03%)</title><rect x="138.2" y="243.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="141.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="138.6" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="138.6" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.03%)</title><rect x="138.6" y="211.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="141.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$497/908126266.accept (93 samples, 0.14%)</title><rect x="139.0" y="323.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (93 samples, 0.14%)</title><rect x="139.0" y="307.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (93 samples, 0.14%)</title><rect x="139.0" y="291.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (93 samples, 0.14%)</title><rect x="139.0" y="275.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (93 samples, 0.14%)</title><rect x="139.0" y="259.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (93 samples, 0.14%)</title><rect x="139.0" y="243.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (93 samples, 0.14%)</title><rect x="139.0" y="227.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (93 samples, 0.14%)</title><rect x="139.0" y="211.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (93 samples, 0.14%)</title><rect x="139.0" y="195.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (93 samples, 0.14%)</title><rect x="139.0" y="179.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (44 samples, 0.07%)</title><rect x="139.0" y="163.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (44 samples, 0.07%)</title><rect x="139.0" y="147.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (17 samples, 0.03%)</title><rect x="139.0" y="131.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="142.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (27 samples, 0.04%)</title><rect x="139.3" y="131.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (27 samples, 0.04%)</title><rect x="139.3" y="115.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (27 samples, 0.04%)</title><rect x="139.3" y="99.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (27 samples, 0.04%)</title><rect x="139.3" y="83.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (27 samples, 0.04%)</title><rect x="139.3" y="67.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (27 samples, 0.04%)</title><rect x="139.3" y="51.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="142.3" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (49 samples, 0.08%)</title><rect x="139.8" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (49 samples, 0.08%)</title><rect x="139.8" y="147.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (21 samples, 0.03%)</title><rect x="139.8" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (21 samples, 0.03%)</title><rect x="139.8" y="115.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="142.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (28 samples, 0.04%)</title><rect x="140.2" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (17 samples, 0.03%)</title><rect x="140.4" y="115.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (17 samples, 0.03%)</title><rect x="140.4" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (17 samples, 0.03%)</title><rect x="140.4" y="83.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (17 samples, 0.03%)</title><rect x="140.4" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (17 samples, 0.03%)</title><rect x="140.4" y="51.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (17 samples, 0.03%)</title><rect x="140.4" y="35.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="143.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.10%)</title><rect x="140.7" y="323.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.10%)</title><rect x="140.7" y="307.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.10%)</title><rect x="140.7" y="291.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="143.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (405 samples, 0.63%)</title><rect x="141.8" y="371.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (26 samples, 0.04%)</title><rect x="141.8" y="355.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="144.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (366 samples, 0.57%)</title><rect x="142.5" y="355.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (26 samples, 0.04%)</title><rect x="142.5" y="339.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="145.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (184 samples, 0.29%)</title><rect x="143.0" y="339.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (25 samples, 0.04%)</title><rect x="143.0" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.0" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (25 samples, 0.04%)</title><rect x="143.0" y="307.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="146.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (36 samples, 0.06%)</title><rect x="143.5" y="323.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="146.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (123 samples, 0.19%)</title><rect x="144.1" y="323.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (16 samples, 0.02%)</title><rect x="144.1" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="147.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (31 samples, 0.05%)</title><rect x="144.6" y="307.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="147.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (17 samples, 0.03%)</title><rect x="145.2" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (17 samples, 0.03%)</title><rect x="145.2" y="291.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="148.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (48 samples, 0.07%)</title><rect x="145.5" y="307.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (17 samples, 0.03%)</title><rect x="145.5" y="291.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="148.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (18 samples, 0.03%)</title><rect x="146.1" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="149.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (156 samples, 0.24%)</title><rect x="146.4" y="339.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.4" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (29 samples, 0.04%)</title><rect x="146.4" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="149.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (70 samples, 0.11%)</title><rect x="146.9" y="323.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.05%)</title><rect x="146.9" y="307.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="149.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (35 samples, 0.05%)</title><rect x="147.6" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.6" y="318.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.05%)</title><rect x="147.6" y="291.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="150.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (57 samples, 0.09%)</title><rect x="148.2" y="323.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (57 samples, 0.09%)</title><rect x="148.2" y="307.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (57 samples, 0.09%)</title><rect x="148.2" y="291.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (57 samples, 0.09%)</title><rect x="148.2" y="275.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 0.09%)</title><rect x="148.2" y="259.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.2" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (57 samples, 0.09%)</title><rect x="148.2" y="243.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="151.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (102 samples, 0.16%)</title><rect x="149.2" y="579.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (102 samples, 0.16%)</title><rect x="149.2" y="563.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (102 samples, 0.16%)</title><rect x="149.2" y="547.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (102 samples, 0.16%)</title><rect x="149.2" y="531.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (102 samples, 0.16%)</title><rect x="149.2" y="515.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (102 samples, 0.16%)</title><rect x="149.2" y="499.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.2" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (50 samples, 0.08%)</title><rect x="149.2" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.2" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (50 samples, 0.08%)</title><rect x="149.2" y="467.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="152.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (52 samples, 0.08%)</title><rect x="150.2" y="483.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.2" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (52 samples, 0.08%)</title><rect x="150.2" y="467.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="153.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,313 samples, 5.14%)</title><rect x="151.1" y="755.0" width="60.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.1" y="766.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,313 samples, 5.14%)</title><rect x="151.1" y="739.0" width="60.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.1" y="750.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,843 samples, 4.41%)</title><rect x="151.1" y="723.0" width="52.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.1" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (2,843 samples, 4.41%)</title><rect x="151.1" y="707.0" width="52.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.1" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,843 samples, 4.41%)</title><rect x="151.1" y="691.0" width="52.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.1" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (53 samples, 0.08%)</title><rect x="151.1" y="675.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (53 samples, 0.08%)</title><rect x="151.1" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (53 samples, 0.08%)</title><rect x="151.1" y="643.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (53 samples, 0.08%)</title><rect x="151.1" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.linkToTargetMethod (27 samples, 0.04%)</title><rect x="151.1" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/680712932.invoke (27 samples, 0.04%)</title><rect x="151.1" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.04%)</title><rect x="151.1" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.04%)</title><rect x="151.1" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.04%)</title><rect x="151.1" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.1" y="558.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.04%)</title><rect x="151.1" y="531.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="154.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (26 samples, 0.04%)</title><rect x="151.6" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.04%)</title><rect x="151.6" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.04%)</title><rect x="151.6" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$471/258511231.get$Lambda (26 samples, 0.04%)</title><rect x="151.6" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$471 (26 samples, 0.04%)</title><rect x="151.6" y="547.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="154.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,790 samples, 4.33%)</title><rect x="152.1" y="675.0" width="51.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.1" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,790 samples, 4.33%)</title><rect x="152.1" y="659.0" width="51.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.1" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,790 samples, 4.33%)</title><rect x="152.1" y="643.0" width="51.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.1" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,790 samples, 4.33%)</title><rect x="152.1" y="627.0" width="51.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.1" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,292 samples, 2.00%)</title><rect x="152.1" y="611.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.1" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,292 samples, 2.00%)</title><rect x="152.1" y="595.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.1" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,292 samples, 2.00%)</title><rect x="152.1" y="579.0" width="23.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.1" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,292 samples, 2.00%)</title><rect x="152.1" y="563.0" width="23.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.1" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,292 samples, 2.00%)</title><rect x="152.1" y="547.0" width="23.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.1" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,292 samples, 2.00%)</title><rect x="152.1" y="531.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.1" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,292 samples, 2.00%)</title><rect x="152.1" y="515.0" width="23.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.1" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,242 samples, 1.93%)</title><rect x="152.1" y="499.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,242 samples, 1.93%)</title><rect x="152.1" y="483.0" width="22.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,212 samples, 1.88%)</title><rect x="152.1" y="467.0" width="22.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.1" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (21 samples, 0.03%)</title><rect x="152.1" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="155.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1615536830.apply (1,141 samples, 1.77%)</title><rect x="152.5" y="451.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,141 samples, 1.77%)</title><rect x="152.5" y="435.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.04%)</title><rect x="152.5" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.04%)</title><rect x="152.5" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$611/845309973.get$Lambda (25 samples, 0.04%)</title><rect x="152.5" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$611 (25 samples, 0.04%)</title><rect x="152.5" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="155.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (60 samples, 0.09%)</title><rect x="152.9" y="419.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (60 samples, 0.09%)</title><rect x="152.9" y="403.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (38 samples, 0.06%)</title><rect x="152.9" y="387.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="155.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="153.6" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.03%)</title><rect x="153.6" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.03%)</title><rect x="153.6" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="156.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,056 samples, 1.64%)</title><rect x="154.0" y="419.0" width="19.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.02%)</title><rect x="154.0" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.02%)</title><rect x="154.0" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$610/945156481.get$Lambda (16 samples, 0.02%)</title><rect x="154.0" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$610 (16 samples, 0.02%)</title><rect x="154.0" y="355.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="157.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (59 samples, 0.09%)</title><rect x="154.3" y="403.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (59 samples, 0.09%)</title><rect x="154.3" y="387.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (35 samples, 0.05%)</title><rect x="154.3" y="371.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="157.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="155.0" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.04%)</title><rect x="155.0" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.04%)</title><rect x="155.0" y="339.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="158.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (981 samples, 1.52%)</title><rect x="155.4" y="403.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (16 samples, 0.02%)</title><rect x="155.4" y="387.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="158.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (883 samples, 1.37%)</title><rect x="155.7" y="387.0" width="16.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.03%)</title><rect x="155.7" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.03%)</title><rect x="155.7" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1439382165.linkToTargetMethod (36 samples, 0.06%)</title><rect x="156.0" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/495153420.invokeStatic (36 samples, 0.06%)</title><rect x="156.0" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$559/1235714752.get$Lambda (36 samples, 0.06%)</title><rect x="156.0" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$559 (36 samples, 0.06%)</title><rect x="156.0" y="323.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="159.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (193 samples, 0.30%)</title><rect x="156.7" y="371.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.7" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (75 samples, 0.12%)</title><rect x="156.7" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.7" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (26 samples, 0.04%)</title><rect x="156.7" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.7" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (26 samples, 0.04%)</title><rect x="156.7" y="323.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="159.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (49 samples, 0.08%)</title><rect x="157.1" y="339.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (49 samples, 0.08%)</title><rect x="157.1" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="160.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (64 samples, 0.10%)</title><rect x="158.0" y="355.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (64 samples, 0.10%)</title><rect x="158.0" y="339.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (64 samples, 0.10%)</title><rect x="158.0" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (19 samples, 0.03%)</title><rect x="158.0" y="307.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (19 samples, 0.03%)</title><rect x="158.0" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (19 samples, 0.03%)</title><rect x="158.0" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.0" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (19 samples, 0.03%)</title><rect x="158.0" y="259.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="161.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$549/379229248.get (23 samples, 0.04%)</title><rect x="158.4" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.4" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (23 samples, 0.04%)</title><rect x="158.4" y="291.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="161.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (22 samples, 0.03%)</title><rect x="158.8" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (22 samples, 0.03%)</title><rect x="158.8" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.8" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (22 samples, 0.03%)</title><rect x="158.8" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.8" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (22 samples, 0.03%)</title><rect x="158.8" y="259.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="161.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (54 samples, 0.08%)</title><rect x="159.2" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.2" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (54 samples, 0.08%)</title><rect x="159.2" y="339.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="162.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (100 samples, 0.16%)</title><rect x="160.2" y="371.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.07%)</title><rect x="160.2" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (15 samples, 0.02%)</title><rect x="160.2" y="339.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="163.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="160.5" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.04%)</title><rect x="160.5" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.04%)</title><rect x="160.5" y="307.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="163.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (56 samples, 0.09%)</title><rect x="161.0" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (56 samples, 0.09%)</title><rect x="161.0" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="164.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (33 samples, 0.05%)</title><rect x="161.0" y="323.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="164.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.04%)</title><rect x="161.6" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.04%)</title><rect x="161.6" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.04%)</title><rect x="161.6" y="291.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="164.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (18 samples, 0.03%)</title><rect x="162.0" y="371.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="165.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (25 samples, 0.04%)</title><rect x="162.3" y="371.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="165.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.03%)</title><rect x="162.8" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="165.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (462 samples, 0.72%)</title><rect x="163.4" y="371.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$559/1235714752.run (462 samples, 0.72%)</title><rect x="163.4" y="355.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (462 samples, 0.72%)</title><rect x="163.4" y="339.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.09%)</title><rect x="163.4" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.09%)</title><rect x="163.4" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/706069328.get$Lambda (16 samples, 0.02%)</title><rect x="163.4" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$567 (16 samples, 0.02%)</title><rect x="163.4" y="275.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="166.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$576/272680000.get$Lambda (23 samples, 0.04%)</title><rect x="163.7" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$576 (23 samples, 0.04%)</title><rect x="163.7" y="275.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="166.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$586/805615386.get$Lambda (21 samples, 0.03%)</title><rect x="164.1" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$586 (21 samples, 0.03%)</title><rect x="164.1" y="275.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="167.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (58 samples, 0.09%)</title><rect x="164.5" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (58 samples, 0.09%)</title><rect x="164.5" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (37 samples, 0.06%)</title><rect x="164.5" y="291.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="167.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.03%)</title><rect x="165.2" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.03%)</title><rect x="165.2" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.03%)</title><rect x="165.2" y="259.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="168.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (33 samples, 0.05%)</title><rect x="165.5" y="323.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="168.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (27 samples, 0.04%)</title><rect x="166.1" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.04%)</title><rect x="166.1" y="307.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="169.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (76 samples, 0.12%)</title><rect x="166.6" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (76 samples, 0.12%)</title><rect x="166.6" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.03%)</title><rect x="166.6" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.03%)</title><rect x="166.6" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$594/353462104.get$Lambda (17 samples, 0.03%)</title><rect x="166.6" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$594 (17 samples, 0.03%)</title><rect x="166.6" y="243.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="169.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (59 samples, 0.09%)</title><rect x="167.0" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (59 samples, 0.09%)</title><rect x="167.0" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (59 samples, 0.09%)</title><rect x="167.0" y="259.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.04%)</title><rect x="167.0" y="243.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="170.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.05%)</title><rect x="167.4" y="243.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.05%)</title><rect x="167.4" y="227.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.05%)</title><rect x="167.4" y="211.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="170.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (72 samples, 0.11%)</title><rect x="168.0" y="323.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.11%)</title><rect x="168.0" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/404214852.invoke (72 samples, 0.11%)</title><rect x="168.0" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.11%)</title><rect x="168.0" y="275.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.04%)</title><rect x="168.0" y="259.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.04%)</title><rect x="168.0" y="243.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="171.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (49 samples, 0.08%)</title><rect x="168.5" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (49 samples, 0.08%)</title><rect x="168.5" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.5" y="254.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.08%)</title><rect x="168.5" y="227.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="171.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (136 samples, 0.21%)</title><rect x="169.4" y="323.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (44 samples, 0.07%)</title><rect x="169.4" y="307.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="172.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (92 samples, 0.14%)</title><rect x="170.2" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.14%)</title><rect x="170.2" y="291.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/404214852.invoke (92 samples, 0.14%)</title><rect x="170.2" y="275.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.14%)</title><rect x="170.2" y="259.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.04%)</title><rect x="170.2" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.04%)</title><rect x="170.2" y="227.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="173.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (69 samples, 0.11%)</title><rect x="170.6" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (69 samples, 0.11%)</title><rect x="170.6" y="227.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.6" y="238.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.11%)</title><rect x="170.6" y="211.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="173.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/PutDeleteBodyHandler.apply (82 samples, 0.13%)</title><rect x="171.8" y="387.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (59 samples, 0.09%)</title><rect x="171.8" y="371.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (15 samples, 0.02%)</title><rect x="172.0" y="355.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="175.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (35 samples, 0.05%)</title><rect x="172.3" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.03%)</title><rect x="172.5" y="339.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="175.5" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (23 samples, 0.04%)</title><rect x="172.9" y="371.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="175.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/491272286.apply (50 samples, 0.08%)</title><rect x="173.3" y="451.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (50 samples, 0.08%)</title><rect x="173.3" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (24 samples, 0.04%)</title><rect x="173.3" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.3" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (24 samples, 0.04%)</title><rect x="173.3" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.3" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (24 samples, 0.04%)</title><rect x="173.3" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.3" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (24 samples, 0.04%)</title><rect x="173.3" y="371.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="176.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (26 samples, 0.04%)</title><rect x="173.8" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.04%)</title><rect x="173.8" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="176.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (30 samples, 0.05%)</title><rect x="174.3" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (30 samples, 0.05%)</title><rect x="174.3" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/80373017.apply (30 samples, 0.05%)</title><rect x="174.3" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (30 samples, 0.05%)</title><rect x="174.3" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (30 samples, 0.05%)</title><rect x="174.3" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.05%)</title><rect x="174.3" y="387.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="177.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$522/1200579297.apply (50 samples, 0.08%)</title><rect x="174.8" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (50 samples, 0.08%)</title><rect x="174.8" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (50 samples, 0.08%)</title><rect x="174.8" y="467.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="177.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,498 samples, 2.32%)</title><rect x="175.7" y="611.0" width="27.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.7" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (91 samples, 0.14%)</title><rect x="175.7" y="595.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (91 samples, 0.14%)</title><rect x="175.7" y="579.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (91 samples, 0.14%)</title><rect x="175.7" y="563.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (91 samples, 0.14%)</title><rect x="175.7" y="547.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (91 samples, 0.14%)</title><rect x="175.7" y="531.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.7" y="542.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.14%)</title><rect x="175.7" y="515.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="178.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (62 samples, 0.10%)</title><rect x="177.4" y="595.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (62 samples, 0.10%)</title><rect x="177.4" y="579.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (62 samples, 0.10%)</title><rect x="177.4" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.4" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (62 samples, 0.10%)</title><rect x="177.4" y="547.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.10%)</title><rect x="177.4" y="531.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.4" y="542.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.10%)</title><rect x="177.4" y="515.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="180.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (117 samples, 0.18%)</title><rect x="178.5" y="595.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.5" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (21 samples, 0.03%)</title><rect x="178.5" y="579.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="181.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.02%)</title><rect x="178.9" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.02%)</title><rect x="178.9" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.02%)</title><rect x="178.9" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.9" y="558.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.02%)</title><rect x="178.9" y="531.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="181.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (22 samples, 0.03%)</title><rect x="179.2" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (22 samples, 0.03%)</title><rect x="179.2" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.2" y="574.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.03%)</title><rect x="179.2" y="547.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="182.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (58 samples, 0.09%)</title><rect x="179.6" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.09%)</title><rect x="179.6" y="563.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.02%)</title><rect x="179.6" y="547.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="182.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.07%)</title><rect x="179.9" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.9" y="558.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.07%)</title><rect x="179.9" y="531.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="182.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (427 samples, 0.66%)</title><rect x="180.7" y="595.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (427 samples, 0.66%)</title><rect x="180.7" y="579.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (427 samples, 0.66%)</title><rect x="180.7" y="563.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.7" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (22 samples, 0.03%)</title><rect x="180.7" y="547.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="183.7" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.03%)</title><rect x="181.1" y="547.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="184.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (39 samples, 0.06%)</title><rect x="181.4" y="547.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="184.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (20 samples, 0.03%)</title><rect x="182.2" y="547.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="185.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.05%)</title><rect x="182.5" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.05%)</title><rect x="182.5" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.get$Lambda (31 samples, 0.05%)</title><rect x="182.5" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.5" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (31 samples, 0.05%)</title><rect x="182.5" y="499.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="185.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (30 samples, 0.05%)</title><rect x="183.1" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.1" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (30 samples, 0.05%)</title><rect x="183.1" y="531.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="186.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (216 samples, 0.33%)</title><rect x="183.6" y="547.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (216 samples, 0.33%)</title><rect x="183.6" y="531.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (216 samples, 0.33%)</title><rect x="183.6" y="515.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (58 samples, 0.09%)</title><rect x="183.6" y="499.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (58 samples, 0.09%)</title><rect x="183.6" y="483.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (58 samples, 0.09%)</title><rect x="183.6" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (58 samples, 0.09%)</title><rect x="183.6" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (58 samples, 0.09%)</title><rect x="183.6" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (58 samples, 0.09%)</title><rect x="183.6" y="419.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (58 samples, 0.09%)</title><rect x="183.6" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.09%)</title><rect x="183.6" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.09%)</title><rect x="183.6" y="371.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="186.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (88 samples, 0.14%)</title><rect x="184.7" y="499.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.7" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (88 samples, 0.14%)</title><rect x="184.7" y="483.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (41 samples, 0.06%)</title><rect x="184.7" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.06%)</title><rect x="184.7" y="451.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.06%)</title><rect x="184.7" y="435.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="187.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (47 samples, 0.07%)</title><rect x="185.5" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.5" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (47 samples, 0.07%)</title><rect x="185.5" y="451.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="188.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (70 samples, 0.11%)</title><rect x="186.3" y="499.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (70 samples, 0.11%)</title><rect x="186.3" y="483.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="189.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (48 samples, 0.07%)</title><rect x="187.6" y="547.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (48 samples, 0.07%)</title><rect x="187.6" y="531.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="190.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (801 samples, 1.24%)</title><rect x="188.5" y="595.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.5" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (39 samples, 0.06%)</title><rect x="188.5" y="579.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="191.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (51 samples, 0.08%)</title><rect x="189.2" y="579.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (51 samples, 0.08%)</title><rect x="189.2" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.2" y="574.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.08%)</title><rect x="189.2" y="547.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="192.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (107 samples, 0.17%)</title><rect x="190.1" y="579.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (107 samples, 0.17%)</title><rect x="190.1" y="563.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.08%)</title><rect x="190.1" y="547.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="193.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (57 samples, 0.09%)</title><rect x="191.0" y="547.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.0" y="558.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.09%)</title><rect x="191.0" y="531.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="194.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (604 samples, 0.94%)</title><rect x="192.1" y="579.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (169 samples, 0.26%)</title><rect x="192.1" y="563.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (169 samples, 0.26%)</title><rect x="192.1" y="547.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.11%)</title><rect x="192.1" y="531.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="195.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (97 samples, 0.15%)</title><rect x="193.4" y="531.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.4" y="542.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.15%)</title><rect x="193.4" y="515.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="196.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (88 samples, 0.14%)</title><rect x="195.2" y="563.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (88 samples, 0.14%)</title><rect x="195.2" y="547.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.2" y="558.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.07%)</title><rect x="195.2" y="531.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="198.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.06%)</title><rect x="196.0" y="531.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="199.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (98 samples, 0.15%)</title><rect x="196.8" y="563.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (98 samples, 0.15%)</title><rect x="196.8" y="547.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (98 samples, 0.15%)</title><rect x="196.8" y="531.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.07%)</title><rect x="196.8" y="515.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="199.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (52 samples, 0.08%)</title><rect x="197.6" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.6" y="526.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.08%)</title><rect x="197.6" y="499.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="200.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (94 samples, 0.15%)</title><rect x="198.6" y="563.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (94 samples, 0.15%)</title><rect x="198.6" y="547.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (94 samples, 0.15%)</title><rect x="198.6" y="531.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (94 samples, 0.15%)</title><rect x="198.6" y="515.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (94 samples, 0.15%)</title><rect x="198.6" y="499.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (94 samples, 0.15%)</title><rect x="198.6" y="483.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="201.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (155 samples, 0.24%)</title><rect x="200.3" y="563.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (46 samples, 0.07%)</title><rect x="200.3" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (46 samples, 0.07%)</title><rect x="200.3" y="531.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="203.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (71 samples, 0.11%)</title><rect x="201.1" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (71 samples, 0.11%)</title><rect x="201.1" y="531.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="204.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$534/2041148455.apply (38 samples, 0.06%)</title><rect x="202.4" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="205.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (38 samples, 0.06%)</title><rect x="202.4" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.4" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (38 samples, 0.06%)</title><rect x="202.4" y="515.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="205.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (470 samples, 0.73%)</title><rect x="203.1" y="723.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (470 samples, 0.73%)</title><rect x="203.1" y="707.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (470 samples, 0.73%)</title><rect x="203.1" y="691.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (470 samples, 0.73%)</title><rect x="203.1" y="675.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (470 samples, 0.73%)</title><rect x="203.1" y="659.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (470 samples, 0.73%)</title><rect x="203.1" y="643.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.05%)</title><rect x="203.1" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.05%)</title><rect x="203.1" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$393/1560942433.get$Lambda (23 samples, 0.04%)</title><rect x="203.3" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$393 (23 samples, 0.04%)</title><rect x="203.3" y="579.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="206.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (15 samples, 0.02%)</title><rect x="203.7" y="627.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="206.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (31 samples, 0.05%)</title><rect x="204.0" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (31 samples, 0.05%)</title><rect x="204.0" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (16 samples, 0.02%)</title><rect x="204.0" y="595.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="207.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (15 samples, 0.02%)</title><rect x="204.3" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (15 samples, 0.02%)</title><rect x="204.3" y="579.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="207.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (391 samples, 0.61%)</title><rect x="204.6" y="627.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (391 samples, 0.61%)</title><rect x="204.6" y="611.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/706069328.run (340 samples, 0.53%)</title><rect x="204.6" y="595.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (340 samples, 0.53%)</title><rect x="204.6" y="579.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (340 samples, 0.53%)</title><rect x="204.6" y="563.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (106 samples, 0.16%)</title><rect x="204.6" y="547.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (70 samples, 0.11%)</title><rect x="204.6" y="531.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.6" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (33 samples, 0.05%)</title><rect x="204.6" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.6" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (33 samples, 0.05%)</title><rect x="204.6" y="499.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="207.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (37 samples, 0.06%)</title><rect x="205.2" y="515.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (37 samples, 0.06%)</title><rect x="205.2" y="499.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="208.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (36 samples, 0.06%)</title><rect x="205.8" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (36 samples, 0.06%)</title><rect x="205.8" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (36 samples, 0.06%)</title><rect x="205.8" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (23 samples, 0.04%)</title><rect x="205.8" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.8" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (23 samples, 0.04%)</title><rect x="205.8" y="467.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="208.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (234 samples, 0.36%)</title><rect x="206.5" y="547.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (16 samples, 0.02%)</title><rect x="206.5" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.5" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (16 samples, 0.02%)</title><rect x="206.5" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (16 samples, 0.02%)</title><rect x="206.5" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (16 samples, 0.02%)</title><rect x="206.5" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.5" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (16 samples, 0.02%)</title><rect x="206.5" y="467.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="209.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (218 samples, 0.34%)</title><rect x="206.8" y="531.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (91 samples, 0.14%)</title><rect x="206.8" y="515.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="209.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (16 samples, 0.02%)</title><rect x="206.8" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (16 samples, 0.02%)</title><rect x="206.8" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (16 samples, 0.02%)</title><rect x="206.8" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (16 samples, 0.02%)</title><rect x="206.8" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (16 samples, 0.02%)</title><rect x="206.8" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (16 samples, 0.02%)</title><rect x="206.8" y="419.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="209.8" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (21 samples, 0.03%)</title><rect x="207.1" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (21 samples, 0.03%)</title><rect x="207.1" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.1" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (21 samples, 0.03%)</title><rect x="207.1" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.1" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (21 samples, 0.03%)</title><rect x="207.1" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.1" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (21 samples, 0.03%)</title><rect x="207.1" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.1" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (21 samples, 0.03%)</title><rect x="207.1" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="210.1" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (27 samples, 0.04%)</title><rect x="207.5" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (27 samples, 0.04%)</title><rect x="207.5" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (27 samples, 0.04%)</title><rect x="207.5" y="467.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="210.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (26 samples, 0.04%)</title><rect x="208.0" y="499.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="211.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (41 samples, 0.06%)</title><rect x="208.5" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (20 samples, 0.03%)</title><rect x="208.5" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (20 samples, 0.03%)</title><rect x="208.5" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (20 samples, 0.03%)</title><rect x="208.5" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.03%)</title><rect x="208.5" y="451.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="211.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (21 samples, 0.03%)</title><rect x="208.8" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (21 samples, 0.03%)</title><rect x="208.8" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (21 samples, 0.03%)</title><rect x="208.8" y="467.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="211.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (86 samples, 0.13%)</title><rect x="209.2" y="515.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (23 samples, 0.04%)</title><rect x="209.2" y="499.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="212.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (63 samples, 0.10%)</title><rect x="209.6" y="499.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (50 samples, 0.08%)</title><rect x="209.9" y="483.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (50 samples, 0.08%)</title><rect x="209.9" y="467.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (36 samples, 0.06%)</title><rect x="209.9" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="212.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (14 samples, 0.02%)</title><rect x="210.5" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (14 samples, 0.02%)</title><rect x="210.5" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="213.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (51 samples, 0.08%)</title><rect x="210.8" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (51 samples, 0.08%)</title><rect x="210.8" y="579.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (51 samples, 0.08%)</title><rect x="210.8" y="563.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (51 samples, 0.08%)</title><rect x="210.8" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 0.08%)</title><rect x="210.8" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (51 samples, 0.08%)</title><rect x="210.8" y="515.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (51 samples, 0.08%)</title><rect x="210.8" y="499.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$599/1916045487.accept (51 samples, 0.08%)</title><rect x="210.8" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (51 samples, 0.08%)</title><rect x="210.8" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (51 samples, 0.08%)</title><rect x="210.8" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="213.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 0.08%)</title><rect x="210.8" y="435.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (51 samples, 0.08%)</title><rect x="210.8" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$611/845309973.apply (51 samples, 0.08%)</title><rect x="210.8" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (51 samples, 0.08%)</title><rect x="210.8" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (51 samples, 0.08%)</title><rect x="210.8" y="371.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="213.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.run (16,240 samples, 25.18%)</title><rect x="211.7" y="755.0" width="297.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.7" y="766.0">ru/mail/polis/service/re1nex/BaseService..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (16,240 samples, 25.18%)</title><rect x="211.7" y="739.0" width="297.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.7" y="750.0">ru/mail/polis/service/re1nex/BaseService..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,837 samples, 2.85%)</title><rect x="211.7" y="723.0" width="33.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.7" y="734.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (1,837 samples, 2.85%)</title><rect x="211.7" y="707.0" width="33.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.7" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,837 samples, 2.85%)</title><rect x="211.7" y="691.0" width="33.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.7" y="702.0">ja..</text>
</g>
<g>
<title>java.lang.String (920 samples, 1.43%)</title><rect x="211.7" y="675.0" width="16.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="214.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (917 samples, 1.42%)</title><rect x="228.6" y="675.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.6" y="686.0"></text>
</g>
<g>
<title>byte[] (917 samples, 1.42%)</title><rect x="228.6" y="659.0" width="16.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="231.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (6,884 samples, 10.67%)</title><rect x="245.3" y="723.0" width="126.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.3" y="734.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (6,884 samples, 10.67%)</title><rect x="245.3" y="707.0" width="126.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.3" y="718.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (4,017 samples, 6.23%)</title><rect x="245.3" y="691.0" width="73.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.3" y="702.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,337 samples, 2.07%)</title><rect x="245.3" y="675.0" width="24.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.3" y="686.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,337 samples, 2.07%)</title><rect x="245.3" y="659.0" width="24.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.3" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.get$Lambda (1,337 samples, 2.07%)</title><rect x="245.3" y="643.0" width="24.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.3" y="654.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ApiUtils$$Lambda$531 (1,337 samples, 2.07%)</title><rect x="245.3" y="627.0" width="24.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="248.3" y="638.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,680 samples, 4.16%)</title><rect x="269.8" y="675.0" width="49.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.8" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,680 samples, 4.16%)</title><rect x="269.8" y="659.0" width="49.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.8" y="670.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,440 samples, 2.23%)</title><rect x="269.8" y="643.0" width="26.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="272.8" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1,082 samples, 1.68%)</title><rect x="296.1" y="643.0" width="19.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (1,082 samples, 1.68%)</title><rect x="296.1" y="627.0" width="19.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="299.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (142 samples, 0.22%)</title><rect x="315.9" y="643.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.accept (142 samples, 0.22%)</title><rect x="315.9" y="627.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (142 samples, 0.22%)</title><rect x="315.9" y="611.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (80 samples, 0.12%)</title><rect x="315.9" y="595.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (80 samples, 0.12%)</title><rect x="315.9" y="579.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (80 samples, 0.12%)</title><rect x="315.9" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (56 samples, 0.09%)</title><rect x="315.9" y="547.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.9" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (56 samples, 0.09%)</title><rect x="315.9" y="531.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.9" y="542.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.05%)</title><rect x="315.9" y="515.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="318.9" y="526.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.04%)</title><rect x="316.5" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="319.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (24 samples, 0.04%)</title><rect x="317.0" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.0" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (24 samples, 0.04%)</title><rect x="317.0" y="531.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="320.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (62 samples, 0.10%)</title><rect x="317.4" y="595.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.4" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Response (18 samples, 0.03%)</title><rect x="317.4" y="579.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="320.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (44 samples, 0.07%)</title><rect x="317.7" y="579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.7" y="590.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.03%)</title><rect x="317.7" y="563.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="320.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.02%)</title><rect x="318.3" y="563.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="321.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (16 samples, 0.02%)</title><rect x="318.5" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (16 samples, 0.02%)</title><rect x="318.5" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (16 samples, 0.02%)</title><rect x="318.5" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="321.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.accept (16 samples, 0.02%)</title><rect x="318.5" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (16 samples, 0.02%)</title><rect x="318.5" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (14 samples, 0.02%)</title><rect x="318.6" y="563.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (2,867 samples, 4.45%)</title><rect x="318.8" y="691.0" width="52.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.8" y="702.0">ru/ma..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,196 samples, 1.85%)</title><rect x="318.8" y="675.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.8" y="686.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,196 samples, 1.85%)</title><rect x="318.8" y="659.0" width="21.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.8" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$137/382080611.get$Lambda (1,196 samples, 1.85%)</title><rect x="318.8" y="643.0" width="21.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.8" y="654.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$137 (1,196 samples, 1.85%)</title><rect x="318.8" y="627.0" width="21.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="321.8" y="638.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,671 samples, 2.59%)</title><rect x="340.7" y="675.0" width="30.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.7" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,671 samples, 2.59%)</title><rect x="340.7" y="659.0" width="30.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.7" y="670.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (769 samples, 1.19%)</title><rect x="340.7" y="643.0" width="14.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="343.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (902 samples, 1.40%)</title><rect x="354.8" y="643.0" width="16.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="357.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (7,519 samples, 11.66%)</title><rect x="371.3" y="723.0" width="137.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.3" y="734.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (985 samples, 1.53%)</title><rect x="371.3" y="707.0" width="18.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.3" y="718.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.02%)</title><rect x="371.3" y="691.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="374.3" y="702.0"></text>
</g>
<g>
<title>java.util.TreeSet (15 samples, 0.02%)</title><rect x="371.5" y="691.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="374.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (28 samples, 0.04%)</title><rect x="371.8" y="691.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.8" y="702.0"></text>
</g>
<g>
<title>java.lang.Long (28 samples, 0.04%)</title><rect x="371.8" y="675.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="374.8" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (38 samples, 0.06%)</title><rect x="372.3" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (38 samples, 0.06%)</title><rect x="372.3" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.3" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (38 samples, 0.06%)</title><rect x="372.3" y="659.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="375.3" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (40 samples, 0.06%)</title><rect x="373.0" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.0" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap (40 samples, 0.06%)</title><rect x="373.0" y="675.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="376.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (581 samples, 0.90%)</title><rect x="373.8" y="691.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.8" y="702.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (39 samples, 0.06%)</title><rect x="373.8" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.8" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (39 samples, 0.06%)</title><rect x="373.8" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.8" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (39 samples, 0.06%)</title><rect x="373.8" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.8" y="654.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.06%)</title><rect x="373.8" y="627.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="376.8" y="638.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (542 samples, 0.84%)</title><rect x="374.5" y="675.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.5" y="686.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (542 samples, 0.84%)</title><rect x="374.5" y="659.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.5" y="670.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (542 samples, 0.84%)</title><rect x="374.5" y="643.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.5" y="654.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (523 samples, 0.81%)</title><rect x="374.5" y="627.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.5" y="638.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (500 samples, 0.78%)</title><rect x="374.5" y="611.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.5" y="622.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (500 samples, 0.78%)</title><rect x="374.5" y="595.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.5" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.03%)</title><rect x="374.7" y="579.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="377.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (71 samples, 0.11%)</title><rect x="375.1" y="579.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (71 samples, 0.11%)</title><rect x="375.1" y="563.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.1" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (71 samples, 0.11%)</title><rect x="375.1" y="547.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.1" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (71 samples, 0.11%)</title><rect x="375.1" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.1" y="542.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (71 samples, 0.11%)</title><rect x="375.1" y="515.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="378.1" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (397 samples, 0.62%)</title><rect x="376.4" y="579.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (397 samples, 0.62%)</title><rect x="376.4" y="563.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (397 samples, 0.62%)</title><rect x="376.4" y="547.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.4" y="558.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (54 samples, 0.08%)</title><rect x="376.4" y="531.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="379.4" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (343 samples, 0.53%)</title><rect x="377.3" y="531.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.3" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (343 samples, 0.53%)</title><rect x="377.3" y="515.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.3" y="526.0"></text>
</g>
<g>
<title>int[] (267 samples, 0.41%)</title><rect x="377.3" y="499.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="380.3" y="510.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (76 samples, 0.12%)</title><rect x="382.2" y="499.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="385.2" y="510.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.12%)</title><rect x="382.2" y="483.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="385.2" y="494.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (23 samples, 0.04%)</title><rect x="383.6" y="611.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="386.6" y="622.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (19 samples, 0.03%)</title><rect x="384.0" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.0" y="638.0"></text>
</g>
<g>
<title>java/security/Provider.getService (19 samples, 0.03%)</title><rect x="384.0" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (19 samples, 0.03%)</title><rect x="384.0" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.0" y="606.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (19 samples, 0.03%)</title><rect x="384.0" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.0" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.03%)</title><rect x="384.0" y="563.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="387.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (268 samples, 0.42%)</title><rect x="384.4" y="691.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.4" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (80 samples, 0.12%)</title><rect x="384.4" y="675.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.4" y="686.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (17 samples, 0.03%)</title><rect x="384.4" y="659.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="387.4" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (63 samples, 0.10%)</title><rect x="384.7" y="659.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (35 samples, 0.05%)</title><rect x="384.7" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.7" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (35 samples, 0.05%)</title><rect x="384.7" y="627.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="387.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (28 samples, 0.04%)</title><rect x="385.3" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.3" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (28 samples, 0.04%)</title><rect x="385.3" y="627.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="388.3" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (14 samples, 0.02%)</title><rect x="385.9" y="675.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.9" y="686.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (14 samples, 0.02%)</title><rect x="385.9" y="659.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="388.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (42 samples, 0.07%)</title><rect x="386.1" y="675.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.1" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (42 samples, 0.07%)</title><rect x="386.1" y="659.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="389.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (132 samples, 0.20%)</title><rect x="386.9" y="675.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (132 samples, 0.20%)</title><rect x="386.9" y="659.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.9" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (132 samples, 0.20%)</title><rect x="386.9" y="643.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="389.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (6,407 samples, 9.93%)</title><rect x="389.3" y="707.0" width="117.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.3" y="718.0">ru/mail/polis/..</text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.02%)</title><rect x="389.3" y="691.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="392.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.07%)</title><rect x="389.6" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.07%)</title><rect x="389.6" y="675.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$114/1531818127.get$Lambda (21 samples, 0.03%)</title><rect x="389.6" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.6" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$114 (21 samples, 0.03%)</title><rect x="389.6" y="643.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="392.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$200/1835347556.get$Lambda (14 samples, 0.02%)</title><rect x="390.2" y="659.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="393.2" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$200 (14 samples, 0.02%)</title><rect x="390.2" y="643.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="393.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.PutDeleteBodyHandler (15 samples, 0.02%)</title><rect x="390.4" y="691.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="393.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (5,916 samples, 9.17%)</title><rect x="390.7" y="691.0" width="108.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.7" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/ArrayList.add (60 samples, 0.09%)</title><rect x="390.7" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.7" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (60 samples, 0.09%)</title><rect x="390.7" y="659.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (60 samples, 0.09%)</title><rect x="390.7" y="643.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (60 samples, 0.09%)</title><rect x="390.7" y="627.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (60 samples, 0.09%)</title><rect x="390.7" y="611.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (60 samples, 0.09%)</title><rect x="390.7" y="595.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="393.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (125 samples, 0.19%)</title><rect x="392.0" y="675.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (125 samples, 0.19%)</title><rect x="392.0" y="659.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (66 samples, 0.10%)</title><rect x="392.0" y="643.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="395.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.09%)</title><rect x="393.2" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.09%)</title><rect x="393.2" y="627.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.09%)</title><rect x="393.2" y="611.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="396.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (3,673 samples, 5.69%)</title><rect x="394.3" y="675.0" width="67.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.3" y="686.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,673 samples, 5.69%)</title><rect x="394.3" y="659.0" width="67.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.3" y="670.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,673 samples, 5.69%)</title><rect x="394.3" y="643.0" width="67.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.3" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,673 samples, 5.69%)</title><rect x="394.3" y="627.0" width="67.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.3" y="638.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.05%)</title><rect x="394.3" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.05%)</title><rect x="394.3" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$193/281304560.get$Lambda (33 samples, 0.05%)</title><rect x="394.3" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$193 (33 samples, 0.05%)</title><rect x="394.3" y="563.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="397.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (118 samples, 0.18%)</title><rect x="394.9" y="611.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (118 samples, 0.18%)</title><rect x="394.9" y="595.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (66 samples, 0.10%)</title><rect x="394.9" y="579.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="397.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.08%)</title><rect x="396.1" y="579.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.08%)</title><rect x="396.1" y="563.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.08%)</title><rect x="396.1" y="547.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="399.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (123 samples, 0.19%)</title><rect x="397.1" y="611.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (123 samples, 0.19%)</title><rect x="397.1" y="595.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (64 samples, 0.10%)</title><rect x="397.1" y="579.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="400.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.09%)</title><rect x="398.2" y="579.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.09%)</title><rect x="398.2" y="563.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.09%)</title><rect x="398.2" y="547.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="401.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (96 samples, 0.15%)</title><rect x="399.3" y="611.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="402.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (166 samples, 0.26%)</title><rect x="401.1" y="611.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="404.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,754 samples, 2.72%)</title><rect x="404.1" y="611.0" width="32.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.1" y="622.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (186 samples, 0.29%)</title><rect x="404.1" y="595.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.1" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (143 samples, 0.22%)</title><rect x="404.1" y="579.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.1" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (49 samples, 0.08%)</title><rect x="404.1" y="563.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.1" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (49 samples, 0.08%)</title><rect x="404.1" y="547.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="407.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (94 samples, 0.15%)</title><rect x="405.0" y="563.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.0" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (94 samples, 0.15%)</title><rect x="405.0" y="547.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="408.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (43 samples, 0.07%)</title><rect x="406.7" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (43 samples, 0.07%)</title><rect x="406.7" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (43 samples, 0.07%)</title><rect x="406.7" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$50/1390869998.get (43 samples, 0.07%)</title><rect x="406.7" y="531.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.7" y="542.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (43 samples, 0.07%)</title><rect x="406.7" y="515.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="409.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (645 samples, 1.00%)</title><rect x="407.5" y="595.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (645 samples, 1.00%)</title><rect x="407.5" y="579.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.5" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (27 samples, 0.04%)</title><rect x="407.5" y="563.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="410.5" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (57 samples, 0.09%)</title><rect x="408.0" y="563.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="411.0" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (73 samples, 0.11%)</title><rect x="409.1" y="563.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="412.1" y="574.0"></text>
</g>
<g>
<title>java.util.TreeSet (31 samples, 0.05%)</title><rect x="410.4" y="563.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="413.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.07%)</title><rect x="411.0" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.07%)</title><rect x="411.0" y="547.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.get$Lambda (43 samples, 0.07%)</title><rect x="411.0" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.0" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (43 samples, 0.07%)</title><rect x="411.0" y="515.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="414.0" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (269 samples, 0.42%)</title><rect x="411.7" y="563.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (269 samples, 0.42%)</title><rect x="411.7" y="547.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (269 samples, 0.42%)</title><rect x="411.7" y="531.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (269 samples, 0.42%)</title><rect x="411.7" y="515.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (97 samples, 0.15%)</title><rect x="411.7" y="499.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (97 samples, 0.15%)</title><rect x="411.7" y="483.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (97 samples, 0.15%)</title><rect x="411.7" y="467.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.15%)</title><rect x="411.7" y="451.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (97 samples, 0.15%)</title><rect x="411.7" y="435.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.15%)</title><rect x="411.7" y="419.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (97 samples, 0.15%)</title><rect x="411.7" y="403.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (97 samples, 0.15%)</title><rect x="411.7" y="387.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (97 samples, 0.15%)</title><rect x="411.7" y="371.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="414.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (100 samples, 0.16%)</title><rect x="413.5" y="499.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.5" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (100 samples, 0.16%)</title><rect x="413.5" y="483.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (45 samples, 0.07%)</title><rect x="413.5" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.07%)</title><rect x="413.5" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (45 samples, 0.07%)</title><rect x="413.5" y="435.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="416.5" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (55 samples, 0.09%)</title><rect x="414.3" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.3" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (55 samples, 0.09%)</title><rect x="414.3" y="451.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="417.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (72 samples, 0.11%)</title><rect x="415.3" y="499.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (72 samples, 0.11%)</title><rect x="415.3" y="483.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="418.3" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (57 samples, 0.09%)</title><rect x="416.7" y="563.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.7" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (57 samples, 0.09%)</title><rect x="416.7" y="547.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="419.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (88 samples, 0.14%)</title><rect x="417.7" y="563.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (88 samples, 0.14%)</title><rect x="417.7" y="547.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="420.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (28 samples, 0.04%)</title><rect x="419.3" y="595.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="422.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (661 samples, 1.02%)</title><rect x="419.8" y="595.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.8" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (661 samples, 1.02%)</title><rect x="419.8" y="579.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.8" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (601 samples, 0.93%)</title><rect x="419.8" y="563.0" width="11.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.8" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (601 samples, 0.93%)</title><rect x="419.8" y="547.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.8" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (601 samples, 0.93%)</title><rect x="419.8" y="531.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.8" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (145 samples, 0.22%)</title><rect x="419.8" y="515.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="422.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (174 samples, 0.27%)</title><rect x="422.5" y="515.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.5" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (174 samples, 0.27%)</title><rect x="422.5" y="499.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="425.5" y="510.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.27%)</title><rect x="422.5" y="483.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="425.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (282 samples, 0.44%)</title><rect x="425.7" y="515.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (282 samples, 0.44%)</title><rect x="425.7" y="499.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (108 samples, 0.17%)</title><rect x="425.7" y="483.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="428.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (174 samples, 0.27%)</title><rect x="427.6" y="483.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.6" y="494.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.27%)</title><rect x="427.6" y="467.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="430.6" y="478.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (60 samples, 0.09%)</title><rect x="430.8" y="563.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="433.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (80 samples, 0.12%)</title><rect x="431.9" y="595.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.9" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (80 samples, 0.12%)</title><rect x="431.9" y="579.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="434.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (154 samples, 0.24%)</title><rect x="433.4" y="595.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.4" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (41 samples, 0.06%)</title><rect x="433.4" y="579.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="436.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (37 samples, 0.06%)</title><rect x="434.1" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="437.1" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.06%)</title><rect x="434.1" y="563.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="437.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (76 samples, 0.12%)</title><rect x="434.8" y="579.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.8" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (76 samples, 0.12%)</title><rect x="434.8" y="563.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="437.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (935 samples, 1.45%)</title><rect x="436.2" y="611.0" width="17.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (25 samples, 0.04%)</title><rect x="436.2" y="595.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="439.2" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.map (86 samples, 0.13%)</title><rect x="436.7" y="595.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$167/1412176863.apply (86 samples, 0.13%)</title><rect x="436.7" y="579.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="439.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (38 samples, 0.06%)</title><rect x="436.7" y="563.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="439.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (48 samples, 0.07%)</title><rect x="437.4" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (48 samples, 0.07%)</title><rect x="437.4" y="547.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="440.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (121 samples, 0.19%)</title><rect x="438.2" y="595.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="441.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (31 samples, 0.05%)</title><rect x="440.4" y="595.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (31 samples, 0.05%)</title><rect x="440.4" y="579.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="443.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (28 samples, 0.04%)</title><rect x="441.0" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.0" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (28 samples, 0.04%)</title><rect x="441.0" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.0" y="590.0"></text>
</g>
<g>
<title>java/util/Optional.of (28 samples, 0.04%)</title><rect x="441.0" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.0" y="574.0"></text>
</g>
<g>
<title>java.util.Optional (28 samples, 0.04%)</title><rect x="441.0" y="547.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="444.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (644 samples, 1.00%)</title><rect x="441.5" y="595.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (644 samples, 1.00%)</title><rect x="441.5" y="579.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Class[] (51 samples, 0.08%)</title><rect x="441.5" y="563.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="444.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (61 samples, 0.09%)</title><rect x="442.5" y="563.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="445.5" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (73 samples, 0.11%)</title><rect x="443.6" y="563.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="446.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (292 samples, 0.45%)</title><rect x="444.9" y="563.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (292 samples, 0.45%)</title><rect x="444.9" y="547.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.9" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (292 samples, 0.45%)</title><rect x="444.9" y="531.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.9" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (292 samples, 0.45%)</title><rect x="444.9" y="515.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.9" y="526.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (292 samples, 0.45%)</title><rect x="444.9" y="499.0" width="5.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="447.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (88 samples, 0.14%)</title><rect x="450.3" y="563.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (88 samples, 0.14%)</title><rect x="450.3" y="547.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (24 samples, 0.04%)</title><rect x="450.3" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (24 samples, 0.04%)</title><rect x="450.3" y="515.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="453.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (64 samples, 0.10%)</title><rect x="450.7" y="531.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (64 samples, 0.10%)</title><rect x="450.7" y="515.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="453.7" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (79 samples, 0.12%)</title><rect x="451.9" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.9" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (79 samples, 0.12%)</title><rect x="451.9" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.9" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (79 samples, 0.12%)</title><rect x="451.9" y="531.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="454.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (448 samples, 0.69%)</title><rect x="453.3" y="611.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (87 samples, 0.13%)</title><rect x="453.3" y="595.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (43 samples, 0.07%)</title><rect x="453.3" y="579.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="456.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (44 samples, 0.07%)</title><rect x="454.1" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (44 samples, 0.07%)</title><rect x="454.1" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (43 samples, 0.07%)</title><rect x="454.1" y="547.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="457.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.10%)</title><rect x="454.9" y="595.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="457.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (295 samples, 0.46%)</title><rect x="456.1" y="595.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.07%)</title><rect x="456.1" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.07%)</title><rect x="456.1" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1084020713.get$Lambda (26 samples, 0.04%)</title><rect x="456.1" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$178 (26 samples, 0.04%)</title><rect x="456.1" y="531.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="459.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1615536830.get$Lambda (19 samples, 0.03%)</title><rect x="456.6" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$185 (19 samples, 0.03%)</title><rect x="456.6" y="531.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="459.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (250 samples, 0.39%)</title><rect x="456.9" y="579.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (250 samples, 0.39%)</title><rect x="456.9" y="563.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (142 samples, 0.22%)</title><rect x="456.9" y="547.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="459.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.17%)</title><rect x="459.5" y="547.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.17%)</title><rect x="459.5" y="531.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.17%)</title><rect x="459.5" y="515.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="462.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$114/1531818127.handleLocalResponse (64 samples, 0.10%)</title><rect x="461.5" y="675.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$8 (64 samples, 0.10%)</title><rect x="461.5" y="659.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (64 samples, 0.10%)</title><rect x="461.5" y="643.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.03%)</title><rect x="461.5" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.03%)</title><rect x="461.5" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$137/382080611.get$Lambda (21 samples, 0.03%)</title><rect x="461.5" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.5" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$137 (21 samples, 0.03%)</title><rect x="461.5" y="579.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="464.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (43 samples, 0.07%)</title><rect x="461.9" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (43 samples, 0.07%)</title><rect x="461.9" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (20 samples, 0.03%)</title><rect x="461.9" y="595.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="464.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (23 samples, 0.04%)</title><rect x="462.3" y="595.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="465.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$126/1476074584.requestBuild (1,982 samples, 3.07%)</title><rect x="462.7" y="675.0" width="36.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.7" y="686.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$9 (1,982 samples, 3.07%)</title><rect x="462.7" y="659.0" width="36.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.7" y="670.0">ru/..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (54 samples, 0.08%)</title><rect x="462.7" y="643.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (54 samples, 0.08%)</title><rect x="462.7" y="627.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="465.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (744 samples, 1.15%)</title><rect x="463.7" y="643.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (57 samples, 0.09%)</title><rect x="463.7" y="627.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="466.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (687 samples, 1.07%)</title><rect x="464.7" y="627.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.7" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (639 samples, 0.99%)</title><rect x="464.7" y="611.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.7" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (639 samples, 0.99%)</title><rect x="464.7" y="595.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.7" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (35 samples, 0.05%)</title><rect x="464.7" y="579.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="467.7" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.05%)</title><rect x="465.3" y="579.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="468.3" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (67 samples, 0.10%)</title><rect x="465.9" y="579.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="468.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (20 samples, 0.03%)</title><rect x="467.2" y="579.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="470.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.10%)</title><rect x="467.5" y="579.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.10%)</title><rect x="467.5" y="563.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.get$Lambda (67 samples, 0.10%)</title><rect x="467.5" y="547.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.5" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$157 (67 samples, 0.10%)</title><rect x="467.5" y="531.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="470.5" y="542.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (65 samples, 0.10%)</title><rect x="468.8" y="579.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.8" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (65 samples, 0.10%)</title><rect x="468.8" y="563.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="471.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (269 samples, 0.42%)</title><rect x="469.9" y="579.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (269 samples, 0.42%)</title><rect x="469.9" y="563.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (269 samples, 0.42%)</title><rect x="469.9" y="547.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (105 samples, 0.16%)</title><rect x="469.9" y="531.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (105 samples, 0.16%)</title><rect x="469.9" y="515.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (105 samples, 0.16%)</title><rect x="469.9" y="499.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.16%)</title><rect x="469.9" y="483.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.16%)</title><rect x="469.9" y="467.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.16%)</title><rect x="469.9" y="451.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.16%)</title><rect x="469.9" y="435.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (105 samples, 0.16%)</title><rect x="469.9" y="419.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (105 samples, 0.16%)</title><rect x="469.9" y="403.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="472.9" y="414.0"></text>
</g>
<g>
<title>java/util/List.copyOf (79 samples, 0.12%)</title><rect x="471.9" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.9" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (79 samples, 0.12%)</title><rect x="471.9" y="515.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (37 samples, 0.06%)</title><rect x="471.9" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (37 samples, 0.06%)</title><rect x="471.9" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.06%)</title><rect x="471.9" y="467.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="474.9" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (42 samples, 0.07%)</title><rect x="472.5" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.5" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (42 samples, 0.07%)</title><rect x="472.5" y="483.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="475.5" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (85 samples, 0.13%)</title><rect x="473.3" y="531.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (85 samples, 0.13%)</title><rect x="473.3" y="515.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="476.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (84 samples, 0.13%)</title><rect x="474.9" y="579.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (84 samples, 0.13%)</title><rect x="474.9" y="563.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="477.9" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (48 samples, 0.07%)</title><rect x="476.4" y="611.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.4" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (48 samples, 0.07%)</title><rect x="476.4" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.4" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (48 samples, 0.07%)</title><rect x="476.4" y="579.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="479.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (1,184 samples, 1.84%)</title><rect x="477.3" y="643.0" width="21.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.3" y="654.0">r..</text>
</g>
<g>
<title>java.net.URI (154 samples, 0.24%)</title><rect x="477.3" y="627.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="480.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (172 samples, 0.27%)</title><rect x="480.1" y="627.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (172 samples, 0.27%)</title><rect x="480.1" y="611.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (172 samples, 0.27%)</title><rect x="480.1" y="595.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (172 samples, 0.27%)</title><rect x="480.1" y="579.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (50 samples, 0.08%)</title><rect x="480.1" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.08%)</title><rect x="480.1" y="547.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="483.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (122 samples, 0.19%)</title><rect x="481.0" y="563.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (122 samples, 0.19%)</title><rect x="481.0" y="547.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.0" y="558.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.19%)</title><rect x="481.0" y="531.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="484.0" y="542.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (549 samples, 0.85%)</title><rect x="483.2" y="627.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.2" y="638.0"></text>
</g>
<g>
<title>java.net.URI$Parser (58 samples, 0.09%)</title><rect x="483.2" y="611.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="486.2" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (491 samples, 0.76%)</title><rect x="484.3" y="611.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (91 samples, 0.14%)</title><rect x="484.3" y="595.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (91 samples, 0.14%)</title><rect x="484.3" y="579.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.07%)</title><rect x="484.3" y="563.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="487.3" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (49 samples, 0.08%)</title><rect x="485.1" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.1" y="574.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.08%)</title><rect x="485.1" y="547.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="488.1" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (400 samples, 0.62%)</title><rect x="486.0" y="595.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (189 samples, 0.29%)</title><rect x="486.0" y="579.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (189 samples, 0.29%)</title><rect x="486.0" y="563.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.10%)</title><rect x="486.0" y="547.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="489.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (124 samples, 0.19%)</title><rect x="487.2" y="547.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.2" y="558.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.19%)</title><rect x="487.2" y="531.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="490.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (211 samples, 0.33%)</title><rect x="489.4" y="579.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (111 samples, 0.17%)</title><rect x="489.4" y="563.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (111 samples, 0.17%)</title><rect x="489.4" y="547.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.08%)</title><rect x="489.4" y="531.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="492.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (61 samples, 0.09%)</title><rect x="490.3" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.3" y="542.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.09%)</title><rect x="490.3" y="515.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="493.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (100 samples, 0.16%)</title><rect x="491.5" y="563.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.5" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (100 samples, 0.16%)</title><rect x="491.5" y="547.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (100 samples, 0.16%)</title><rect x="491.5" y="531.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (100 samples, 0.16%)</title><rect x="491.5" y="515.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.05%)</title><rect x="491.5" y="499.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="494.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.10%)</title><rect x="492.1" y="499.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.1" y="510.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.10%)</title><rect x="492.1" y="483.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="495.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (101 samples, 0.16%)</title><rect x="493.3" y="627.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (101 samples, 0.16%)</title><rect x="493.3" y="611.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (25 samples, 0.04%)</title><rect x="493.3" y="595.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="496.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (76 samples, 0.12%)</title><rect x="493.7" y="595.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.7" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (76 samples, 0.12%)</title><rect x="493.7" y="579.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="496.7" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (38 samples, 0.06%)</title><rect x="495.1" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.1" y="638.0"></text>
</g>
<g>
<title>java/time/Duration.create (38 samples, 0.06%)</title><rect x="495.1" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.1" y="622.0"></text>
</g>
<g>
<title>java.time.Duration (38 samples, 0.06%)</title><rect x="495.1" y="595.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="498.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (170 samples, 0.26%)</title><rect x="495.8" y="627.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (170 samples, 0.26%)</title><rect x="495.8" y="611.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (170 samples, 0.26%)</title><rect x="495.8" y="595.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.8" y="606.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (170 samples, 0.26%)</title><rect x="495.8" y="579.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (86 samples, 0.13%)</title><rect x="495.8" y="563.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (86 samples, 0.13%)</title><rect x="495.8" y="547.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="498.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$150/874905175.apply (84 samples, 0.13%)</title><rect x="497.4" y="563.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (84 samples, 0.13%)</title><rect x="497.4" y="547.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.4" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (40 samples, 0.06%)</title><rect x="497.4" y="531.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="500.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (44 samples, 0.07%)</title><rect x="498.1" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.07%)</title><rect x="498.1" y="515.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="501.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (414 samples, 0.64%)</title><rect x="498.9" y="691.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.03%)</title><rect x="498.9" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.03%)</title><rect x="498.9" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$203/366038914.get$Lambda (19 samples, 0.03%)</title><rect x="498.9" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.9" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncApiControllerImpl$$Lambda$203 (19 samples, 0.03%)</title><rect x="498.9" y="627.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="501.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (50 samples, 0.08%)</title><rect x="499.3" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (50 samples, 0.08%)</title><rect x="499.3" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.05%)</title><rect x="499.3" y="643.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="502.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (19 samples, 0.03%)</title><rect x="499.9" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (19 samples, 0.03%)</title><rect x="499.9" y="627.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="502.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (345 samples, 0.53%)</title><rect x="500.2" y="675.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="503.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (25 samples, 0.04%)</title><rect x="500.2" y="659.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="503.2" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (28 samples, 0.04%)</title><rect x="500.7" y="659.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="503.7" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (20 samples, 0.03%)</title><rect x="501.2" y="659.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="504.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (243 samples, 0.38%)</title><rect x="501.5" y="659.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$201/847124037.accept (243 samples, 0.38%)</title><rect x="501.5" y="643.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (243 samples, 0.38%)</title><rect x="501.5" y="627.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (102 samples, 0.16%)</title><rect x="501.5" y="611.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (102 samples, 0.16%)</title><rect x="501.5" y="595.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.get$Lambda (102 samples, 0.16%)</title><rect x="501.5" y="579.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.5" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.MergeUtils$$Lambda$202 (102 samples, 0.16%)</title><rect x="501.5" y="563.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="504.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (141 samples, 0.22%)</title><rect x="503.4" y="611.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (141 samples, 0.22%)</title><rect x="503.4" y="595.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (62 samples, 0.10%)</title><rect x="503.4" y="579.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="506.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (17 samples, 0.03%)</title><rect x="504.5" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (17 samples, 0.03%)</title><rect x="504.5" y="563.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="507.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (14 samples, 0.02%)</title><rect x="504.8" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.accept (14 samples, 0.02%)</title><rect x="504.8" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (14 samples, 0.02%)</title><rect x="504.8" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (14 samples, 0.02%)</title><rect x="504.8" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.02%)</title><rect x="504.8" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.02%)</title><rect x="504.8" y="499.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="507.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.07%)</title><rect x="505.1" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.07%)</title><rect x="505.1" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.07%)</title><rect x="505.1" y="547.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="508.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (29 samples, 0.04%)</title><rect x="506.0" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.0" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.02%)</title><rect x="506.0" y="643.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="509.0" y="654.0"></text>
</g>
<g>
<title>java.lang.Object (14 samples, 0.02%)</title><rect x="506.3" y="643.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="509.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (127 samples, 0.20%)</title><rect x="506.5" y="707.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (127 samples, 0.20%)</title><rect x="506.5" y="691.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (127 samples, 0.20%)</title><rect x="506.5" y="675.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (127 samples, 0.20%)</title><rect x="506.5" y="659.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (127 samples, 0.20%)</title><rect x="506.5" y="643.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.5" y="654.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.20%)</title><rect x="506.5" y="627.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="509.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (8,446 samples, 13.09%)</title><rect x="508.8" y="803.0" width="154.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.8" y="814.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (8,446 samples, 13.09%)</title><rect x="508.8" y="787.0" width="154.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.8" y="798.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (8,446 samples, 13.09%)</title><rect x="508.8" y="771.0" width="154.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.8" y="782.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (8,446 samples, 13.09%)</title><rect x="508.8" y="755.0" width="154.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.8" y="766.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (8,446 samples, 13.09%)</title><rect x="508.8" y="739.0" width="154.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.8" y="750.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (8,426 samples, 13.06%)</title><rect x="508.8" y="723.0" width="154.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="511.8" y="734.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (8,426 samples, 13.06%)</title><rect x="508.8" y="707.0" width="154.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.8" y="718.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,734 samples, 4.24%)</title><rect x="508.8" y="691.0" width="50.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.8" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,734 samples, 4.24%)</title><rect x="508.8" y="675.0" width="50.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.8" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,734 samples, 4.24%)</title><rect x="508.8" y="659.0" width="50.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.8" y="670.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.accept (2,721 samples, 4.22%)</title><rect x="508.8" y="643.0" width="49.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.8" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (2,721 samples, 4.22%)</title><rect x="508.8" y="627.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.8" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (1,377 samples, 2.13%)</title><rect x="508.8" y="611.0" width="25.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.8" y="622.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,377 samples, 2.13%)</title><rect x="508.8" y="595.0" width="25.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.8" y="606.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,377 samples, 2.13%)</title><rect x="508.8" y="579.0" width="25.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.8" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (972 samples, 1.51%)</title><rect x="508.8" y="563.0" width="17.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (972 samples, 1.51%)</title><rect x="508.8" y="547.0" width="17.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.8" y="558.0"></text>
</g>
<g>
<title>byte[] (959 samples, 1.49%)</title><rect x="508.8" y="531.0" width="17.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="511.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (405 samples, 0.63%)</title><rect x="526.6" y="563.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.6" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (405 samples, 0.63%)</title><rect x="526.6" y="547.0" width="7.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="529.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (1,344 samples, 2.08%)</title><rect x="534.0" y="611.0" width="24.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.0" y="622.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (288 samples, 0.45%)</title><rect x="534.0" y="595.0" width="5.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="537.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,056 samples, 1.64%)</title><rect x="539.3" y="595.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.3" y="606.0"></text>
</g>
<g>
<title>byte[] (449 samples, 0.70%)</title><rect x="539.3" y="579.0" width="8.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="542.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (342 samples, 0.53%)</title><rect x="547.5" y="579.0" width="6.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="550.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (265 samples, 0.41%)</title><rect x="553.8" y="579.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="556.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$137/382080611.get (5,692 samples, 8.83%)</title><rect x="558.9" y="691.0" width="104.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.9" y="702.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$put$12 (5,692 samples, 8.83%)</title><rect x="558.9" y="675.0" width="104.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.9" y="686.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (861 samples, 1.33%)</title><rect x="558.9" y="659.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (861 samples, 1.33%)</title><rect x="558.9" y="643.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.9" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (861 samples, 1.33%)</title><rect x="558.9" y="627.0" width="15.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="561.9" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ResponseBuilder (568 samples, 0.88%)</title><rect x="574.6" y="659.0" width="10.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="577.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (2,641 samples, 4.09%)</title><rect x="585.0" y="659.0" width="48.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.0" y="670.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (96 samples, 0.15%)</title><rect x="585.0" y="643.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="588.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (96 samples, 0.15%)</title><rect x="585.0" y="627.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="588.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (96 samples, 0.15%)</title><rect x="585.0" y="611.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.0" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (82 samples, 0.13%)</title><rect x="585.0" y="595.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.0" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (82 samples, 0.13%)</title><rect x="585.0" y="579.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.0" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (41 samples, 0.06%)</title><rect x="585.0" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.0" y="574.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (41 samples, 0.06%)</title><rect x="585.0" y="547.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="588.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (41 samples, 0.06%)</title><rect x="585.7" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (41 samples, 0.06%)</title><rect x="585.7" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (41 samples, 0.06%)</title><rect x="585.7" y="531.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="588.7" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (14 samples, 0.02%)</title><rect x="586.5" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.5" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (14 samples, 0.02%)</title><rect x="586.5" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.5" y="590.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (14 samples, 0.02%)</title><rect x="586.5" y="563.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="589.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (2,545 samples, 3.95%)</title><rect x="586.8" y="643.0" width="46.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.8" y="654.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,769 samples, 2.74%)</title><rect x="586.8" y="627.0" width="32.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.8" y="638.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,769 samples, 2.74%)</title><rect x="586.8" y="611.0" width="32.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="589.8" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (368 samples, 0.57%)</title><rect x="619.1" y="627.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (368 samples, 0.57%)</title><rect x="619.1" y="611.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (123 samples, 0.19%)</title><rect x="619.1" y="595.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="622.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (245 samples, 0.38%)</title><rect x="621.4" y="595.0" width="4.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="624.4" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (408 samples, 0.63%)</title><rect x="625.9" y="627.0" width="7.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="628.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (1,622 samples, 2.51%)</title><rect x="633.3" y="659.0" width="29.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.3" y="670.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (693 samples, 1.07%)</title><rect x="633.3" y="643.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (693 samples, 1.07%)</title><rect x="633.3" y="627.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (693 samples, 1.07%)</title><rect x="633.3" y="611.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.3" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (693 samples, 1.07%)</title><rect x="633.3" y="595.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.3" y="606.0"></text>
</g>
<g>
<title>byte[] (693 samples, 1.07%)</title><rect x="633.3" y="579.0" width="12.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="636.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (929 samples, 1.44%)</title><rect x="646.0" y="643.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (929 samples, 1.44%)</title><rect x="646.0" y="627.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.0" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (929 samples, 1.44%)</title><rect x="646.0" y="611.0" width="17.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="649.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (20 samples, 0.03%)</title><rect x="663.0" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (20 samples, 0.03%)</title><rect x="663.0" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (20 samples, 0.03%)</title><rect x="663.0" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (20 samples, 0.03%)</title><rect x="663.0" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20 samples, 0.03%)</title><rect x="663.0" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (19 samples, 0.03%)</title><rect x="663.0" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.03%)</title><rect x="663.0" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 0.02%)</title><rect x="663.0" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (15 samples, 0.02%)</title><rect x="663.0" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (15 samples, 0.02%)</title><rect x="663.0" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (15 samples, 0.02%)</title><rect x="663.0" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.02%)</title><rect x="663.0" y="547.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="666.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (779 samples, 1.21%)</title><rect x="663.4" y="803.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.03%)</title><rect x="663.4" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.03%)</title><rect x="663.4" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2015781843.linkToTargetMethod (18 samples, 0.03%)</title><rect x="663.7" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.03%)</title><rect x="663.7" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$452/1862861862.get$Lambda (18 samples, 0.03%)</title><rect x="663.7" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.7" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$452 (18 samples, 0.03%)</title><rect x="663.7" y="739.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="666.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (169 samples, 0.26%)</title><rect x="664.0" y="787.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$453/1260814613.accept (140 samples, 0.22%)</title><rect x="664.0" y="771.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (140 samples, 0.22%)</title><rect x="664.0" y="755.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (140 samples, 0.22%)</title><rect x="664.0" y="739.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (140 samples, 0.22%)</title><rect x="664.0" y="723.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (140 samples, 0.22%)</title><rect x="664.0" y="707.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (140 samples, 0.22%)</title><rect x="664.0" y="691.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (140 samples, 0.22%)</title><rect x="664.0" y="675.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (140 samples, 0.22%)</title><rect x="664.0" y="659.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (140 samples, 0.22%)</title><rect x="664.0" y="643.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (140 samples, 0.22%)</title><rect x="664.0" y="627.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (140 samples, 0.22%)</title><rect x="664.0" y="611.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (140 samples, 0.22%)</title><rect x="664.0" y="595.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (33 samples, 0.05%)</title><rect x="664.0" y="579.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (33 samples, 0.05%)</title><rect x="664.0" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (33 samples, 0.05%)</title><rect x="664.0" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (16 samples, 0.02%)</title><rect x="664.0" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (16 samples, 0.02%)</title><rect x="664.0" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="667.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (16 samples, 0.02%)</title><rect x="664.0" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (16 samples, 0.02%)</title><rect x="664.0" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="667.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.02%)</title><rect x="664.0" y="467.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="667.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.03%)</title><rect x="664.3" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.03%)</title><rect x="664.3" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.03%)</title><rect x="664.3" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.03%)</title><rect x="664.3" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.03%)</title><rect x="664.3" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (17 samples, 0.03%)</title><rect x="664.3" y="451.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="667.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (98 samples, 0.15%)</title><rect x="664.8" y="579.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (49 samples, 0.08%)</title><rect x="664.8" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (38 samples, 0.06%)</title><rect x="664.8" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.8" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.06%)</title><rect x="664.8" y="531.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="667.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (49 samples, 0.08%)</title><rect x="665.7" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$266/696326643.get (49 samples, 0.08%)</title><rect x="665.7" y="547.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (49 samples, 0.08%)</title><rect x="665.7" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (49 samples, 0.08%)</title><rect x="665.7" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (49 samples, 0.08%)</title><rect x="665.7" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.7" y="510.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.07%)</title><rect x="665.8" y="483.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="668.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$456/1562675777.accept (29 samples, 0.04%)</title><rect x="666.6" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (29 samples, 0.04%)</title><rect x="666.6" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$452/1862861862.run (29 samples, 0.04%)</title><rect x="666.6" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (29 samples, 0.04%)</title><rect x="666.6" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (29 samples, 0.04%)</title><rect x="666.6" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (29 samples, 0.04%)</title><rect x="666.6" y="691.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (29 samples, 0.04%)</title><rect x="666.6" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.6" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (29 samples, 0.04%)</title><rect x="666.6" y="659.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="669.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (70 samples, 0.11%)</title><rect x="667.1" y="787.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.1" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (70 samples, 0.11%)</title><rect x="667.1" y="771.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="670.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (28 samples, 0.04%)</title><rect x="668.4" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (16 samples, 0.02%)</title><rect x="668.6" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.6" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (16 samples, 0.02%)</title><rect x="668.6" y="755.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="671.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (121 samples, 0.19%)</title><rect x="668.9" y="787.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$286/1250923022.run (53 samples, 0.08%)</title><rect x="668.9" y="771.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (53 samples, 0.08%)</title><rect x="668.9" y="755.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (53 samples, 0.08%)</title><rect x="668.9" y="739.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (53 samples, 0.08%)</title><rect x="668.9" y="723.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (53 samples, 0.08%)</title><rect x="668.9" y="707.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (53 samples, 0.08%)</title><rect x="668.9" y="691.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (53 samples, 0.08%)</title><rect x="668.9" y="675.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (53 samples, 0.08%)</title><rect x="668.9" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (53 samples, 0.08%)</title><rect x="668.9" y="643.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (53 samples, 0.08%)</title><rect x="668.9" y="627.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (35 samples, 0.05%)</title><rect x="668.9" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (35 samples, 0.05%)</title><rect x="668.9" y="595.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (35 samples, 0.05%)</title><rect x="668.9" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/694452085.linkToTargetMethod (25 samples, 0.04%)</title><rect x="668.9" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/680712932.invoke (25 samples, 0.04%)</title><rect x="668.9" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.04%)</title><rect x="668.9" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.04%)</title><rect x="668.9" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.04%)</title><rect x="668.9" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.9" y="510.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.04%)</title><rect x="668.9" y="483.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="671.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (18 samples, 0.03%)</title><rect x="669.5" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.03%)</title><rect x="669.5" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.03%)</title><rect x="669.5" y="579.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 0.03%)</title><rect x="669.5" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.03%)</title><rect x="669.5" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.03%)</title><rect x="669.5" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (17 samples, 0.03%)</title><rect x="669.5" y="515.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="672.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$301/890062922.run (68 samples, 0.11%)</title><rect x="669.9" y="771.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (68 samples, 0.11%)</title><rect x="669.9" y="755.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.04%)</title><rect x="669.9" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.04%)</title><rect x="669.9" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$470/1679529773.get$Lambda (26 samples, 0.04%)</title><rect x="669.9" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.9" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$470 (26 samples, 0.04%)</title><rect x="669.9" y="691.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="672.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (42 samples, 0.07%)</title><rect x="670.3" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (42 samples, 0.07%)</title><rect x="670.3" y="723.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (42 samples, 0.07%)</title><rect x="670.3" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (41 samples, 0.06%)</title><rect x="670.3" y="691.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="673.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (168 samples, 0.26%)</title><rect x="671.1" y="787.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.1" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (53 samples, 0.08%)</title><rect x="671.1" y="771.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.1" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (53 samples, 0.08%)</title><rect x="671.1" y="755.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.1" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (53 samples, 0.08%)</title><rect x="671.1" y="739.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (53 samples, 0.08%)</title><rect x="671.1" y="723.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.1" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (53 samples, 0.08%)</title><rect x="671.1" y="707.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="674.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (115 samples, 0.18%)</title><rect x="672.1" y="771.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.04%)</title><rect x="672.1" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.04%)</title><rect x="672.1" y="739.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$622/396849249.get$Lambda (26 samples, 0.04%)</title><rect x="672.1" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.1" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$622 (26 samples, 0.04%)</title><rect x="672.1" y="707.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="675.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (89 samples, 0.14%)</title><rect x="672.6" y="755.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.6" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.06%)</title><rect x="672.6" y="739.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="675.6" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (52 samples, 0.08%)</title><rect x="673.2" y="739.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (52 samples, 0.08%)</title><rect x="673.2" y="723.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.2" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (52 samples, 0.08%)</title><rect x="673.2" y="707.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="676.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (105 samples, 0.16%)</title><rect x="674.2" y="787.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.2" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (60 samples, 0.09%)</title><rect x="674.3" y="771.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (28 samples, 0.04%)</title><rect x="674.3" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (28 samples, 0.04%)</title><rect x="674.3" y="739.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="677.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (32 samples, 0.05%)</title><rect x="674.8" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.8" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (32 samples, 0.05%)</title><rect x="674.8" y="739.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="677.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (38 samples, 0.06%)</title><rect x="675.4" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.4" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (38 samples, 0.06%)</title><rect x="675.4" y="755.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="678.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (52 samples, 0.08%)</title><rect x="676.1" y="787.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (52 samples, 0.08%)</title><rect x="676.1" y="771.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (52 samples, 0.08%)</title><rect x="676.1" y="755.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (52 samples, 0.08%)</title><rect x="676.1" y="739.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (23 samples, 0.04%)</title><rect x="676.1" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.1" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (23 samples, 0.04%)</title><rect x="676.1" y="707.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="679.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (29 samples, 0.04%)</title><rect x="676.5" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (29 samples, 0.04%)</title><rect x="676.5" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (29 samples, 0.04%)</title><rect x="676.5" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (29 samples, 0.04%)</title><rect x="676.5" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (29 samples, 0.04%)</title><rect x="676.5" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.5" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (29 samples, 0.04%)</title><rect x="676.5" y="643.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="679.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (14 samples, 0.02%)</title><rect x="677.1" y="787.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (14 samples, 0.02%)</title><rect x="677.1" y="771.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (14 samples, 0.02%)</title><rect x="677.1" y="755.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (14 samples, 0.02%)</title><rect x="677.1" y="739.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.02%)</title><rect x="677.1" y="723.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.1" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.02%)</title><rect x="677.1" y="707.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="680.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (16 samples, 0.02%)</title><rect x="677.3" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (16 samples, 0.02%)</title><rect x="677.3" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (16 samples, 0.02%)</title><rect x="677.3" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (16 samples, 0.02%)</title><rect x="677.3" y="739.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="680.3" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (28,007 samples, 43.42%)</title><rect x="677.6" y="803.0" width="512.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.6" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,223 samples, 1.90%)</title><rect x="677.6" y="787.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.6" y="798.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,223 samples, 1.90%)</title><rect x="677.6" y="771.0" width="22.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="680.6" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (26,784 samples, 41.53%)</title><rect x="700.0" y="787.0" width="490.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.0" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (26,784 samples, 41.53%)</title><rect x="700.0" y="771.0" width="490.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.0" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (26,784 samples, 41.53%)</title><rect x="700.0" y="755.0" width="490.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.0" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,917 samples, 6.07%)</title><rect x="700.0" y="739.0" width="71.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.0" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,917 samples, 6.07%)</title><rect x="700.0" y="723.0" width="71.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.0" y="734.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (2,335 samples, 3.62%)</title><rect x="700.0" y="707.0" width="42.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.0" y="718.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,417 samples, 2.20%)</title><rect x="700.0" y="691.0" width="25.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.0" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,417 samples, 2.20%)</title><rect x="700.0" y="675.0" width="25.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.0" y="686.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,417 samples, 2.20%)</title><rect x="700.0" y="659.0" width="25.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.0" y="670.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,417 samples, 2.20%)</title><rect x="700.0" y="643.0" width="25.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.0" y="654.0">j..</text>
</g>
<g>
<title>java.lang.String (598 samples, 0.93%)</title><rect x="700.0" y="627.0" width="10.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="703.0" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (819 samples, 1.27%)</title><rect x="710.9" y="627.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.9" y="638.0"></text>
</g>
<g>
<title>byte[] (819 samples, 1.27%)</title><rect x="710.9" y="611.0" width="15.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="713.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (918 samples, 1.42%)</title><rect x="725.9" y="691.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (918 samples, 1.42%)</title><rect x="725.9" y="675.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1457384287.linkToTargetMethod (894 samples, 1.39%)</title><rect x="725.9" y="659.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (894 samples, 1.39%)</title><rect x="725.9" y="643.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.get$Lambda (894 samples, 1.39%)</title><rect x="725.9" y="627.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="728.9" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$111 (894 samples, 1.39%)</title><rect x="725.9" y="611.0" width="16.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="728.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (24 samples, 0.04%)</title><rect x="742.3" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.02%)</title><rect x="742.4" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,582 samples, 2.45%)</title><rect x="742.7" y="707.0" width="28.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.7" y="718.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (1,582 samples, 2.45%)</title><rect x="742.7" y="691.0" width="28.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.7" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,582 samples, 2.45%)</title><rect x="742.7" y="675.0" width="28.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.7" y="686.0">ja..</text>
</g>
<g>
<title>java.lang.String (668 samples, 1.04%)</title><rect x="742.7" y="659.0" width="12.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="745.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (914 samples, 1.42%)</title><rect x="754.9" y="659.0" width="16.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.9" y="670.0"></text>
</g>
<g>
<title>byte[] (914 samples, 1.42%)</title><rect x="754.9" y="643.0" width="16.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="757.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8,383 samples, 13.00%)</title><rect x="771.6" y="739.0" width="153.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.6" y="750.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one.nio.http.Request (1,175 samples, 1.82%)</title><rect x="771.6" y="723.0" width="21.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="774.6" y="734.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,331 samples, 3.61%)</title><rect x="793.1" y="723.0" width="42.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.1" y="734.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (1,889 samples, 2.93%)</title><rect x="793.1" y="707.0" width="34.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="796.1" y="718.0">ja..</text>
</g>
<g>
<title>java.lang.String[] (442 samples, 0.69%)</title><rect x="827.7" y="707.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="830.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,877 samples, 7.56%)</title><rect x="835.8" y="723.0" width="89.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.8" y="734.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,877 samples, 7.56%)</title><rect x="835.8" y="707.0" width="89.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.8" y="718.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (2,694 samples, 4.18%)</title><rect x="835.8" y="691.0" width="49.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="838.8" y="702.0">char[]</text>
</g>
<g>
<title>char[] (220 samples, 0.34%)</title><rect x="885.1" y="691.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="888.1" y="702.0"></text>
</g>
<g>
<title>java.lang.String (518 samples, 0.80%)</title><rect x="889.1" y="691.0" width="9.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="892.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,445 samples, 2.24%)</title><rect x="898.6" y="691.0" width="26.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.6" y="702.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,445 samples, 2.24%)</title><rect x="898.6" y="675.0" width="26.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.6" y="686.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,445 samples, 2.24%)</title><rect x="898.6" y="659.0" width="26.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.6" y="670.0">j..</text>
</g>
<g>
<title>byte[] (1,445 samples, 2.24%)</title><rect x="898.6" y="643.0" width="26.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="901.6" y="654.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (946 samples, 1.47%)</title><rect x="925.0" y="739.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="928.0" y="750.0"></text>
</g>
<g>
<title>byte[] (946 samples, 1.47%)</title><rect x="925.0" y="723.0" width="17.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="928.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,270 samples, 1.97%)</title><rect x="942.3" y="739.0" width="23.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="945.3" y="750.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,270 samples, 1.97%)</title><rect x="942.3" y="723.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.3" y="734.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,270 samples, 1.97%)</title><rect x="942.3" y="707.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.3" y="718.0">j..</text>
</g>
<g>
<title>java.lang.String (571 samples, 0.89%)</title><rect x="942.3" y="691.0" width="10.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="945.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (699 samples, 1.08%)</title><rect x="952.8" y="691.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.8" y="702.0"></text>
</g>
<g>
<title>byte[] (699 samples, 1.08%)</title><rect x="952.8" y="675.0" width="12.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="955.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,268 samples, 19.02%)</title><rect x="965.6" y="739.0" width="224.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.6" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,268 samples, 19.02%)</title><rect x="965.6" y="723.0" width="224.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.6" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (5,114 samples, 7.93%)</title><rect x="965.6" y="707.0" width="93.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="968.6" y="718.0">char[]</text>
</g>
<g>
<title>char[] (763 samples, 1.18%)</title><rect x="1059.1" y="707.0" width="14.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1062.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (2,220 samples, 3.44%)</title><rect x="1073.1" y="707.0" width="40.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1076.1" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,171 samples, 6.47%)</title><rect x="1113.7" y="707.0" width="76.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1116.7" y="718.0">java/lan..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,171 samples, 6.47%)</title><rect x="1113.7" y="691.0" width="76.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.7" y="702.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,171 samples, 6.47%)</title><rect x="1113.7" y="675.0" width="76.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1116.7" y="686.0">java/lan..</text>
</g>
<g>
<title>byte[] (4,158 samples, 6.45%)</title><rect x="1113.7" y="659.0" width="76.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1116.7" y="670.0">byte[]</text>
</g>
</g>
</svg>
