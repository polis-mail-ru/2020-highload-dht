<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (191,644 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (130,477 samples, 68.08%)</title><rect x="10.0" y="563.0" width="803.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (130,477 samples, 68.08%)</title><rect x="10.0" y="547.0" width="803.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (130,477 samples, 68.08%)</title><rect x="10.0" y="531.0" width="803.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (55,492 samples, 28.96%)</title><rect x="10.0" y="515.0" width="341.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncSu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (55,492 samples, 28.96%)</title><rect x="10.0" y="499.0" width="341.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.postCom..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (55,492 samples, 28.96%)</title><rect x="10.0" y="483.0" width="341.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableFuture$UniComp..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1084020713.apply (55,473 samples, 28.95%)</title><rect x="10.1" y="467.0" width="341.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.1" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$17..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (55,473 samples, 28.95%)</title><rect x="10.1" y="451.0" width="341.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.1" y="462.0">jdk/internal/net/http/MultiExchange.lambda$res..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (55,473 samples, 28.95%)</title><rect x="10.1" y="435.0" width="341.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.1" y="446.0">jdk/internal/net/http/MultiExchange.responseAs..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (37,195 samples, 19.41%)</title><rect x="10.1" y="419.0" width="229.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.1" y="430.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (37,195 samples, 19.41%)</title><rect x="10.1" y="403.0" width="229.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.1" y="414.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (37,195 samples, 19.41%)</title><rect x="10.1" y="387.0" width="229.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.1" y="398.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (36,882 samples, 19.25%)</title><rect x="10.1" y="371.0" width="227.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.1" y="382.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (36,882 samples, 19.25%)</title><rect x="10.1" y="355.0" width="227.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.1" y="366.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (36,882 samples, 19.25%)</title><rect x="10.1" y="339.0" width="227.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.1" y="350.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1315053200.apply (36,882 samples, 19.25%)</title><rect x="10.1" y="323.0" width="227.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.1" y="334.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (36,882 samples, 19.25%)</title><rect x="10.1" y="307.0" width="227.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.1" y="318.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (36,882 samples, 19.25%)</title><rect x="10.1" y="291.0" width="227.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.1" y="302.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/868767352.apply (36,882 samples, 19.25%)</title><rect x="10.1" y="275.0" width="227.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.1" y="286.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (36,882 samples, 19.25%)</title><rect x="10.1" y="259.0" width="227.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.1" y="270.0">jdk/internal/net/http/Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (36,882 samples, 19.25%)</title><rect x="10.1" y="243.0" width="227.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.1" y="254.0">jdk/internal/net/http/Http1Exc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (36,867 samples, 19.24%)</title><rect x="10.1" y="227.0" width="227.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.1" y="238.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (36,867 samples, 19.24%)</title><rect x="10.1" y="211.0" width="227.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.1" y="222.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$424/1323568008.apply (36,867 samples, 19.24%)</title><rect x="10.1" y="195.0" width="227.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.1" y="206.0">jdk/internal/net/http/Http1Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (36,867 samples, 19.24%)</title><rect x="10.1" y="179.0" width="227.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.1" y="190.0">jdk/internal/net/http/Http1Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (36,867 samples, 19.24%)</title><rect x="10.1" y="163.0" width="227.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.1" y="174.0">jdk/internal/net/http/Http1Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (36,867 samples, 19.24%)</title><rect x="10.1" y="147.0" width="227.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.1" y="158.0">jdk/internal/net/http/SocketTu..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5,985 samples, 3.12%)</title><rect x="10.1" y="131.0" width="36.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.1" y="142.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5,985 samples, 3.12%)</title><rect x="10.1" y="115.0" width="36.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.1" y="126.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5,985 samples, 3.12%)</title><rect x="10.1" y="99.0" width="36.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.1" y="110.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5,985 samples, 3.12%)</title><rect x="10.1" y="83.0" width="36.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.1" y="94.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,985 samples, 3.12%)</title><rect x="10.1" y="67.0" width="36.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.1" y="78.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,601 samples, 1.88%)</title><rect x="10.1" y="51.0" width="22.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="13.1" y="62.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,384 samples, 1.24%)</title><rect x="32.3" y="51.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.3" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (2,384 samples, 1.24%)</title><rect x="32.3" y="35.0" width="14.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="35.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30,882 samples, 16.11%)</title><rect x="47.0" y="131.0" width="190.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.0" y="142.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (30,882 samples, 16.11%)</title><rect x="47.0" y="115.0" width="190.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.0" y="126.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (30,867 samples, 16.11%)</title><rect x="47.0" y="99.0" width="190.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.0" y="110.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (30,867 samples, 16.11%)</title><rect x="47.0" y="83.0" width="190.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.0" y="94.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (30,867 samples, 16.11%)</title><rect x="47.0" y="67.0" width="190.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.0" y="78.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (26,129 samples, 13.63%)</title><rect x="47.0" y="51.0" width="160.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="50.0" y="62.0">jdk.internal.net.htt..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4,738 samples, 2.47%)</title><rect x="207.9" y="51.0" width="29.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.9" y="62.0">su..</text>
</g>
<g>
<title>java.lang.Object (4,738 samples, 2.47%)</title><rect x="207.9" y="35.0" width="29.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="210.9" y="46.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (313 samples, 0.16%)</title><rect x="237.2" y="371.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (313 samples, 0.16%)</title><rect x="237.2" y="355.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (313 samples, 0.16%)</title><rect x="237.2" y="339.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (313 samples, 0.16%)</title><rect x="237.2" y="323.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (312 samples, 0.16%)</title><rect x="237.2" y="307.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (312 samples, 0.16%)</title><rect x="237.2" y="291.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (312 samples, 0.16%)</title><rect x="237.2" y="275.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="240.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (18,243 samples, 9.52%)</title><rect x="239.1" y="419.0" width="112.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.1" y="430.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (11,777 samples, 6.15%)</title><rect x="239.1" y="403.0" width="72.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="242.1" y="414.0">jdk.inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (6,466 samples, 3.37%)</title><rect x="311.6" y="403.0" width="39.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.6" y="414.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6,466 samples, 3.37%)</title><rect x="311.6" y="387.0" width="39.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.6" y="398.0">sun..</text>
</g>
<g>
<title>java.lang.Object (6,466 samples, 3.37%)</title><rect x="311.6" y="371.0" width="39.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="314.6" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14,984 samples, 7.82%)</title><rect x="351.7" y="515.0" width="92.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.7" y="526.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,765 samples, 0.92%)</title><rect x="351.7" y="499.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (580 samples, 0.30%)</title><rect x="351.7" y="483.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (580 samples, 0.30%)</title><rect x="351.7" y="467.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (580 samples, 0.30%)</title><rect x="351.7" y="451.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (580 samples, 0.30%)</title><rect x="351.7" y="435.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (580 samples, 0.30%)</title><rect x="351.7" y="419.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="354.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (580 samples, 0.30%)</title><rect x="351.7" y="403.0" width="3.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="354.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,185 samples, 0.62%)</title><rect x="355.3" y="483.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="358.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,185 samples, 0.62%)</title><rect x="355.3" y="467.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,185 samples, 0.62%)</title><rect x="355.3" y="451.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,185 samples, 0.62%)</title><rect x="355.3" y="435.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,185 samples, 0.62%)</title><rect x="355.3" y="419.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,185 samples, 0.62%)</title><rect x="355.3" y="403.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,185 samples, 0.62%)</title><rect x="355.3" y="387.0" width="7.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="358.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (13,219 samples, 6.90%)</title><rect x="362.6" y="499.0" width="81.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.6" y="510.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,541 samples, 1.33%)</title><rect x="362.6" y="483.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,541 samples, 1.33%)</title><rect x="362.6" y="467.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,541 samples, 1.33%)</title><rect x="362.6" y="451.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,541 samples, 1.33%)</title><rect x="362.6" y="435.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,541 samples, 1.33%)</title><rect x="362.6" y="419.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,541 samples, 1.33%)</title><rect x="362.6" y="403.0" width="15.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="365.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (10,678 samples, 5.57%)</title><rect x="378.2" y="483.0" width="65.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="381.2" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (10,678 samples, 5.57%)</title><rect x="378.2" y="467.0" width="65.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="381.2" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (10,678 samples, 5.57%)</title><rect x="378.2" y="451.0" width="65.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.2" y="462.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10,678 samples, 5.57%)</title><rect x="378.2" y="435.0" width="65.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.2" y="446.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10,678 samples, 5.57%)</title><rect x="378.2" y="419.0" width="65.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.2" y="430.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10,678 samples, 5.57%)</title><rect x="378.2" y="403.0" width="65.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.2" y="414.0">jdk/int..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (10,678 samples, 5.57%)</title><rect x="378.2" y="387.0" width="65.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="381.2" y="398.0">java.ut..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (59,518 samples, 31.06%)</title><rect x="444.0" y="515.0" width="366.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.0" y="526.0">jdk/internal/net/http/common/SequentialScheduler$S..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (59,518 samples, 31.06%)</title><rect x="444.0" y="499.0" width="366.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="447.0" y="510.0">jdk/internal/net/http/common/SequentialScheduler$C..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (28,386 samples, 14.81%)</title><rect x="444.0" y="483.0" width="174.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.0" y="494.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (28,386 samples, 14.81%)</title><rect x="444.0" y="467.0" width="174.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="447.0" y="478.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (28,386 samples, 14.81%)</title><rect x="444.0" y="451.0" width="174.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.0" y="462.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (26,281 samples, 13.71%)</title><rect x="444.0" y="435.0" width="161.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.0" y="446.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (26,281 samples, 13.71%)</title><rect x="444.0" y="419.0" width="161.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="447.0" y="430.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (26,281 samples, 13.71%)</title><rect x="444.0" y="403.0" width="161.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="447.0" y="414.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (26,281 samples, 13.71%)</title><rect x="444.0" y="387.0" width="161.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.0" y="398.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (26,281 samples, 13.71%)</title><rect x="444.0" y="371.0" width="161.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.0" y="382.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (26,281 samples, 13.71%)</title><rect x="444.0" y="355.0" width="161.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.0" y="366.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (26,271 samples, 13.71%)</title><rect x="444.0" y="339.0" width="161.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.0" y="350.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (26,271 samples, 13.71%)</title><rect x="444.0" y="323.0" width="161.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.0" y="334.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (26,271 samples, 13.71%)</title><rect x="444.0" y="307.0" width="161.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="447.0" y="318.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (24,463 samples, 12.76%)</title><rect x="444.0" y="291.0" width="150.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="447.0" y="302.0">jdk.internal.net.ht..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,808 samples, 0.94%)</title><rect x="594.6" y="291.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (1,808 samples, 0.94%)</title><rect x="594.6" y="275.0" width="11.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="597.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,105 samples, 1.10%)</title><rect x="605.8" y="435.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,105 samples, 1.10%)</title><rect x="605.8" y="419.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,105 samples, 1.10%)</title><rect x="605.8" y="403.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,105 samples, 1.10%)</title><rect x="605.8" y="387.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,105 samples, 1.10%)</title><rect x="605.8" y="371.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,105 samples, 1.10%)</title><rect x="605.8" y="355.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,105 samples, 1.10%)</title><rect x="605.8" y="339.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,105 samples, 1.10%)</title><rect x="605.8" y="323.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,105 samples, 1.10%)</title><rect x="605.8" y="307.0" width="12.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,105 samples, 1.10%)</title><rect x="605.8" y="291.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,105 samples, 1.10%)</title><rect x="605.8" y="275.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,105 samples, 1.10%)</title><rect x="605.8" y="259.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,105 samples, 1.10%)</title><rect x="605.8" y="243.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (52 samples, 0.03%)</title><rect x="605.8" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/491272286.apply (52 samples, 0.03%)</title><rect x="605.8" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (52 samples, 0.03%)</title><rect x="605.8" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (52 samples, 0.03%)</title><rect x="605.8" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (52 samples, 0.03%)</title><rect x="605.8" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (52 samples, 0.03%)</title><rect x="605.8" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (52 samples, 0.03%)</title><rect x="605.8" y="131.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="608.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2,053 samples, 1.07%)</title><rect x="606.1" y="227.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,053 samples, 1.07%)</title><rect x="606.1" y="211.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/80373017.apply (2,053 samples, 1.07%)</title><rect x="606.1" y="195.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (2,053 samples, 1.07%)</title><rect x="606.1" y="179.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (2,053 samples, 1.07%)</title><rect x="606.1" y="163.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (2,053 samples, 1.07%)</title><rect x="606.1" y="147.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (2,053 samples, 1.07%)</title><rect x="606.1" y="131.0" width="12.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="609.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (31,132 samples, 16.24%)</title><rect x="618.7" y="483.0" width="191.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.7" y="494.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (31,132 samples, 16.24%)</title><rect x="618.7" y="467.0" width="191.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.7" y="478.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (31,132 samples, 16.24%)</title><rect x="618.7" y="451.0" width="191.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.7" y="462.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (31,132 samples, 16.24%)</title><rect x="618.7" y="435.0" width="191.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.7" y="446.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (31,132 samples, 16.24%)</title><rect x="618.7" y="419.0" width="191.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.7" y="430.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (31,083 samples, 16.22%)</title><rect x="618.7" y="403.0" width="191.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.7" y="414.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (31,083 samples, 16.22%)</title><rect x="618.7" y="387.0" width="191.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.7" y="398.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (31,083 samples, 16.22%)</title><rect x="618.7" y="371.0" width="191.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="621.7" y="382.0">jdk/internal/net/http/Res..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/706069328.run (31,083 samples, 16.22%)</title><rect x="618.7" y="355.0" width="191.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.7" y="366.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (31,083 samples, 16.22%)</title><rect x="618.7" y="339.0" width="191.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.7" y="350.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (31,083 samples, 16.22%)</title><rect x="618.7" y="323.0" width="191.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.7" y="334.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (31,083 samples, 16.22%)</title><rect x="618.7" y="307.0" width="191.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.7" y="318.0">jdk/internal/net/http/Con..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (31,083 samples, 16.22%)</title><rect x="618.7" y="291.0" width="191.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.7" y="302.0">jdk/internal/net/http/Con..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (567 samples, 0.30%)</title><rect x="618.7" y="275.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="621.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (30,516 samples, 15.92%)</title><rect x="622.2" y="275.0" width="187.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.2" y="286.0">jdk/internal/net/http/Co..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (30,516 samples, 15.92%)</title><rect x="622.2" y="259.0" width="187.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.2" y="270.0">jdk/internal/net/http/So..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (6,034 samples, 3.15%)</title><rect x="622.2" y="243.0" width="37.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.2" y="254.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6,034 samples, 3.15%)</title><rect x="622.2" y="227.0" width="37.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.2" y="238.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6,034 samples, 3.15%)</title><rect x="622.2" y="211.0" width="37.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.2" y="222.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6,034 samples, 3.15%)</title><rect x="622.2" y="195.0" width="37.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.2" y="206.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6,034 samples, 3.15%)</title><rect x="622.2" y="179.0" width="37.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.2" y="190.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,485 samples, 2.34%)</title><rect x="622.2" y="163.0" width="27.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="625.2" y="174.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,549 samples, 0.81%)</title><rect x="649.8" y="163.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,549 samples, 0.81%)</title><rect x="649.8" y="147.0" width="9.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="652.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (24,482 samples, 12.77%)</title><rect x="659.4" y="243.0" width="150.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.4" y="254.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (24,482 samples, 12.77%)</title><rect x="659.4" y="227.0" width="150.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.4" y="238.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (24,482 samples, 12.77%)</title><rect x="659.4" y="211.0" width="150.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.4" y="222.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (24,482 samples, 12.77%)</title><rect x="659.4" y="195.0" width="150.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.4" y="206.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24,482 samples, 12.77%)</title><rect x="659.4" y="179.0" width="150.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.4" y="190.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (23,131 samples, 12.07%)</title><rect x="659.4" y="163.0" width="142.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="662.4" y="174.0">jdk.internal.net.h..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,351 samples, 0.70%)</title><rect x="801.8" y="163.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,351 samples, 0.70%)</title><rect x="801.8" y="147.0" width="8.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="804.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (49 samples, 0.03%)</title><rect x="810.1" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (49 samples, 0.03%)</title><rect x="810.1" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (49 samples, 0.03%)</title><rect x="810.1" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (49 samples, 0.03%)</title><rect x="810.1" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (49 samples, 0.03%)</title><rect x="810.1" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (49 samples, 0.03%)</title><rect x="810.1" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (49 samples, 0.03%)</title><rect x="810.1" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (49 samples, 0.03%)</title><rect x="810.1" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 0.03%)</title><rect x="810.1" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (49 samples, 0.03%)</title><rect x="810.1" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (49 samples, 0.03%)</title><rect x="810.1" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (49 samples, 0.03%)</title><rect x="810.1" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (49 samples, 0.03%)</title><rect x="810.1" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (44 samples, 0.02%)</title><rect x="810.1" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (44 samples, 0.02%)</title><rect x="810.1" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/80373017.apply (44 samples, 0.02%)</title><rect x="810.1" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (44 samples, 0.02%)</title><rect x="810.1" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (44 samples, 0.02%)</title><rect x="810.1" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (44 samples, 0.02%)</title><rect x="810.1" y="115.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.1" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (44 samples, 0.02%)</title><rect x="810.1" y="99.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="813.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.run (481 samples, 0.25%)</title><rect x="810.4" y="515.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (481 samples, 0.25%)</title><rect x="810.4" y="499.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (481 samples, 0.25%)</title><rect x="810.4" y="483.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="813.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (481 samples, 0.25%)</title><rect x="810.4" y="467.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (481 samples, 0.25%)</title><rect x="810.4" y="451.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (481 samples, 0.25%)</title><rect x="810.4" y="435.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (481 samples, 0.25%)</title><rect x="810.4" y="419.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (481 samples, 0.25%)</title><rect x="810.4" y="403.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (481 samples, 0.25%)</title><rect x="810.4" y="387.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (481 samples, 0.25%)</title><rect x="810.4" y="371.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (481 samples, 0.25%)</title><rect x="810.4" y="355.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (481 samples, 0.25%)</title><rect x="810.4" y="339.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (481 samples, 0.25%)</title><rect x="810.4" y="323.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (307 samples, 0.16%)</title><rect x="810.4" y="307.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (307 samples, 0.16%)</title><rect x="810.4" y="291.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (307 samples, 0.16%)</title><rect x="810.4" y="275.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (307 samples, 0.16%)</title><rect x="810.4" y="259.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (307 samples, 0.16%)</title><rect x="810.4" y="243.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (307 samples, 0.16%)</title><rect x="810.4" y="227.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (307 samples, 0.16%)</title><rect x="810.4" y="211.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (307 samples, 0.16%)</title><rect x="810.4" y="195.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="813.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (174 samples, 0.09%)</title><rect x="812.3" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (174 samples, 0.09%)</title><rect x="812.3" y="291.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (174 samples, 0.09%)</title><rect x="812.3" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (174 samples, 0.09%)</title><rect x="812.3" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (174 samples, 0.09%)</title><rect x="812.3" y="243.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (174 samples, 0.09%)</title><rect x="812.3" y="227.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (174 samples, 0.09%)</title><rect x="812.3" y="211.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="815.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (695 samples, 0.36%)</title><rect x="813.4" y="563.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (695 samples, 0.36%)</title><rect x="813.4" y="547.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (695 samples, 0.36%)</title><rect x="813.4" y="531.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (695 samples, 0.36%)</title><rect x="813.4" y="515.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (695 samples, 0.36%)</title><rect x="813.4" y="499.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (674 samples, 0.35%)</title><rect x="813.5" y="483.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (674 samples, 0.35%)</title><rect x="813.5" y="467.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (674 samples, 0.35%)</title><rect x="813.5" y="451.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (674 samples, 0.35%)</title><rect x="813.5" y="435.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (674 samples, 0.35%)</title><rect x="813.5" y="419.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (674 samples, 0.35%)</title><rect x="813.5" y="403.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (674 samples, 0.35%)</title><rect x="813.5" y="387.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (674 samples, 0.35%)</title><rect x="813.5" y="371.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (674 samples, 0.35%)</title><rect x="813.5" y="355.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (674 samples, 0.35%)</title><rect x="813.5" y="339.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="816.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (674 samples, 0.35%)</title><rect x="813.5" y="323.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (674 samples, 0.35%)</title><rect x="813.5" y="307.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (674 samples, 0.35%)</title><rect x="813.5" y="291.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (674 samples, 0.35%)</title><rect x="813.5" y="275.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (674 samples, 0.35%)</title><rect x="813.5" y="259.0" width="4.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="816.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (59,735 samples, 31.17%)</title><rect x="817.7" y="563.0" width="367.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.7" y="574.0">jdk/internal/net/http/HttpClientImpl$SelectorManag..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (425 samples, 0.22%)</title><rect x="817.7" y="547.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$453/1260814613.accept (425 samples, 0.22%)</title><rect x="817.7" y="531.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (425 samples, 0.22%)</title><rect x="817.7" y="515.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (425 samples, 0.22%)</title><rect x="817.7" y="499.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (425 samples, 0.22%)</title><rect x="817.7" y="483.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (425 samples, 0.22%)</title><rect x="817.7" y="467.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (425 samples, 0.22%)</title><rect x="817.7" y="451.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (425 samples, 0.22%)</title><rect x="817.7" y="435.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (425 samples, 0.22%)</title><rect x="817.7" y="419.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (425 samples, 0.22%)</title><rect x="817.7" y="403.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (425 samples, 0.22%)</title><rect x="817.7" y="387.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (425 samples, 0.22%)</title><rect x="817.7" y="371.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (425 samples, 0.22%)</title><rect x="817.7" y="355.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (425 samples, 0.22%)</title><rect x="817.7" y="339.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (425 samples, 0.22%)</title><rect x="817.7" y="323.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (425 samples, 0.22%)</title><rect x="817.7" y="307.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (425 samples, 0.22%)</title><rect x="817.7" y="291.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (425 samples, 0.22%)</title><rect x="817.7" y="275.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (425 samples, 0.22%)</title><rect x="817.7" y="259.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (425 samples, 0.22%)</title><rect x="817.7" y="243.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (425 samples, 0.22%)</title><rect x="817.7" y="227.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (420 samples, 0.22%)</title><rect x="817.7" y="211.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (420 samples, 0.22%)</title><rect x="817.7" y="195.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (420 samples, 0.22%)</title><rect x="817.7" y="179.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (420 samples, 0.22%)</title><rect x="817.7" y="163.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (420 samples, 0.22%)</title><rect x="817.7" y="147.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (420 samples, 0.22%)</title><rect x="817.7" y="131.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (420 samples, 0.22%)</title><rect x="817.7" y="115.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.7" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (420 samples, 0.22%)</title><rect x="817.7" y="99.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="820.7" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (41,936 samples, 21.88%)</title><rect x="820.3" y="547.0" width="258.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="823.3" y="558.0">jdk.internal.net.http.HttpClientIm..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,055 samples, 0.55%)</title><rect x="1078.5" y="547.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$286/1250923022.run (360 samples, 0.19%)</title><rect x="1078.5" y="531.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (360 samples, 0.19%)</title><rect x="1078.5" y="515.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1081.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (360 samples, 0.19%)</title><rect x="1078.5" y="499.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1081.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (360 samples, 0.19%)</title><rect x="1078.5" y="483.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (360 samples, 0.19%)</title><rect x="1078.5" y="467.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (360 samples, 0.19%)</title><rect x="1078.5" y="451.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (360 samples, 0.19%)</title><rect x="1078.5" y="435.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (360 samples, 0.19%)</title><rect x="1078.5" y="419.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (360 samples, 0.19%)</title><rect x="1078.5" y="403.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (360 samples, 0.19%)</title><rect x="1078.5" y="387.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1081.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (360 samples, 0.19%)</title><rect x="1078.5" y="371.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (360 samples, 0.19%)</title><rect x="1078.5" y="355.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (360 samples, 0.19%)</title><rect x="1078.5" y="339.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (360 samples, 0.19%)</title><rect x="1078.5" y="323.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1081.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (360 samples, 0.19%)</title><rect x="1078.5" y="307.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (360 samples, 0.19%)</title><rect x="1078.5" y="291.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (347 samples, 0.18%)</title><rect x="1078.5" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (347 samples, 0.18%)</title><rect x="1078.5" y="259.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (347 samples, 0.18%)</title><rect x="1078.5" y="243.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1081.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (347 samples, 0.18%)</title><rect x="1078.5" y="227.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (347 samples, 0.18%)</title><rect x="1078.5" y="211.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (347 samples, 0.18%)</title><rect x="1078.5" y="195.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1081.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (347 samples, 0.18%)</title><rect x="1078.5" y="179.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1081.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (347 samples, 0.18%)</title><rect x="1078.5" y="163.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1081.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$301/890062922.run (695 samples, 0.36%)</title><rect x="1080.7" y="531.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (695 samples, 0.36%)</title><rect x="1080.7" y="515.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (695 samples, 0.36%)</title><rect x="1080.7" y="499.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (695 samples, 0.36%)</title><rect x="1080.7" y="483.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (695 samples, 0.36%)</title><rect x="1080.7" y="467.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (668 samples, 0.35%)</title><rect x="1080.7" y="451.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (668 samples, 0.35%)</title><rect x="1080.7" y="435.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (668 samples, 0.35%)</title><rect x="1080.7" y="419.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (668 samples, 0.35%)</title><rect x="1080.7" y="403.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (668 samples, 0.35%)</title><rect x="1080.7" y="387.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (668 samples, 0.35%)</title><rect x="1080.7" y="371.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (668 samples, 0.35%)</title><rect x="1080.7" y="355.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (668 samples, 0.35%)</title><rect x="1080.7" y="339.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1083.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (445 samples, 0.23%)</title><rect x="1085.0" y="547.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1088.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (445 samples, 0.23%)</title><rect x="1085.0" y="531.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1088.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (445 samples, 0.23%)</title><rect x="1085.0" y="515.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1088.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (13,549 samples, 7.07%)</title><rect x="1087.7" y="547.0" width="83.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.7" y="558.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (13,549 samples, 7.07%)</title><rect x="1087.7" y="531.0" width="83.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1090.7" y="542.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2,273 samples, 1.19%)</title><rect x="1171.1" y="547.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1174.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2,273 samples, 1.19%)</title><rect x="1171.1" y="531.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (2,273 samples, 1.19%)</title><rect x="1171.1" y="515.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2,273 samples, 1.19%)</title><rect x="1171.1" y="499.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1174.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (2,273 samples, 1.19%)</title><rect x="1171.1" y="483.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1174.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (2,273 samples, 1.19%)</title><rect x="1171.1" y="467.0" width="14.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1174.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (52 samples, 0.03%)</title><rect x="1185.1" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (52 samples, 0.03%)</title><rect x="1185.1" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (52 samples, 0.03%)</title><rect x="1185.1" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (52 samples, 0.03%)</title><rect x="1185.1" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (52 samples, 0.03%)</title><rect x="1185.1" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (52 samples, 0.03%)</title><rect x="1185.1" y="467.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1188.1" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (737 samples, 0.38%)</title><rect x="1185.5" y="563.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (737 samples, 0.38%)</title><rect x="1185.5" y="547.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (737 samples, 0.38%)</title><rect x="1185.5" y="531.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (737 samples, 0.38%)</title><rect x="1185.5" y="515.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (737 samples, 0.38%)</title><rect x="1185.5" y="499.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (737 samples, 0.38%)</title><rect x="1185.5" y="483.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.5" y="494.0"></text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (737 samples, 0.38%)</title><rect x="1185.5" y="467.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (737 samples, 0.38%)</title><rect x="1185.5" y="451.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (737 samples, 0.38%)</title><rect x="1185.5" y="435.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (737 samples, 0.38%)</title><rect x="1185.5" y="419.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (718 samples, 0.37%)</title><rect x="1185.6" y="403.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (717 samples, 0.37%)</title><rect x="1185.6" y="387.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (717 samples, 0.37%)</title><rect x="1185.6" y="371.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (717 samples, 0.37%)</title><rect x="1185.6" y="355.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (717 samples, 0.37%)</title><rect x="1185.6" y="339.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (717 samples, 0.37%)</title><rect x="1185.6" y="323.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (717 samples, 0.37%)</title><rect x="1185.6" y="307.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (717 samples, 0.37%)</title><rect x="1185.6" y="291.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (717 samples, 0.37%)</title><rect x="1185.6" y="275.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1188.6" y="286.0"></text>
</g>
</g>
</svg>
