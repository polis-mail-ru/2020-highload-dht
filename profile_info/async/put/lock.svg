<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (34,434 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (23,793 samples, 69.10%)</title><rect x="10.0" y="563.0" width="815.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (23,793 samples, 69.10%)</title><rect x="10.0" y="547.0" width="815.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (23,793 samples, 69.10%)</title><rect x="10.0" y="531.0" width="815.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9,652 samples, 28.03%)</title><rect x="10.0" y="515.0" width="330.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncS..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,652 samples, 28.03%)</title><rect x="10.0" y="499.0" width="330.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.postCo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9,642 samples, 28.00%)</title><rect x="10.0" y="483.0" width="330.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableFuture$UniCom..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/1728467356.apply (9,642 samples, 28.00%)</title><rect x="10.0" y="467.0" width="330.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$2..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (9,642 samples, 28.00%)</title><rect x="10.0" y="451.0" width="330.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/MultiExchange.lambda$re..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (9,642 samples, 28.00%)</title><rect x="10.0" y="435.0" width="330.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/MultiExchange.responseA..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (6,069 samples, 17.63%)</title><rect x="10.0" y="419.0" width="208.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (6,069 samples, 17.63%)</title><rect x="10.0" y="403.0" width="208.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (6,069 samples, 17.63%)</title><rect x="10.0" y="387.0" width="208.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6,051 samples, 17.57%)</title><rect x="10.0" y="371.0" width="207.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6,051 samples, 17.57%)</title><rect x="10.0" y="355.0" width="207.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6,051 samples, 17.57%)</title><rect x="10.0" y="339.0" width="207.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1197842853.apply (6,051 samples, 17.57%)</title><rect x="10.0" y="323.0" width="207.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (6,051 samples, 17.57%)</title><rect x="10.0" y="307.0" width="207.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6,051 samples, 17.57%)</title><rect x="10.0" y="291.0" width="207.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.apply (6,051 samples, 17.57%)</title><rect x="10.0" y="275.0" width="207.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (6,051 samples, 17.57%)</title><rect x="10.0" y="259.0" width="207.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (6,051 samples, 17.57%)</title><rect x="10.0" y="243.0" width="207.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6,051 samples, 17.57%)</title><rect x="10.0" y="227.0" width="207.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6,051 samples, 17.57%)</title><rect x="10.0" y="211.0" width="207.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$380/136395083.apply (6,051 samples, 17.57%)</title><rect x="10.0" y="195.0" width="207.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6,051 samples, 17.57%)</title><rect x="10.0" y="179.0" width="207.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (6,051 samples, 17.57%)</title><rect x="10.0" y="163.0" width="207.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (6,051 samples, 17.57%)</title><rect x="10.0" y="147.0" width="207.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (953 samples, 2.77%)</title><rect x="10.0" y="131.0" width="32.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="142.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (953 samples, 2.77%)</title><rect x="10.0" y="115.0" width="32.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="126.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (953 samples, 2.77%)</title><rect x="10.0" y="99.0" width="32.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="110.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (953 samples, 2.77%)</title><rect x="10.0" y="83.0" width="32.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="94.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (953 samples, 2.77%)</title><rect x="10.0" y="67.0" width="32.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="78.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (554 samples, 1.61%)</title><rect x="10.0" y="51.0" width="19.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (399 samples, 1.16%)</title><rect x="29.0" y="51.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.0" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (399 samples, 1.16%)</title><rect x="29.0" y="35.0" width="13.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="32.0" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (5,098 samples, 14.81%)</title><rect x="42.7" y="131.0" width="174.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.7" y="142.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (5,098 samples, 14.81%)</title><rect x="42.7" y="115.0" width="174.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.7" y="126.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5,098 samples, 14.81%)</title><rect x="42.7" y="99.0" width="174.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.7" y="110.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5,098 samples, 14.81%)</title><rect x="42.7" y="83.0" width="174.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.7" y="94.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,098 samples, 14.81%)</title><rect x="42.7" y="67.0" width="174.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.7" y="78.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,145 samples, 12.04%)</title><rect x="42.7" y="51.0" width="142.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="45.7" y="62.0">jdk.internal.net.h..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (953 samples, 2.77%)</title><rect x="184.7" y="51.0" width="32.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.7" y="62.0">su..</text>
</g>
<g>
<title>java.lang.Object (953 samples, 2.77%)</title><rect x="184.7" y="35.0" width="32.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="187.7" y="46.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (18 samples, 0.05%)</title><rect x="217.4" y="371.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (18 samples, 0.05%)</title><rect x="217.4" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (18 samples, 0.05%)</title><rect x="217.4" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (18 samples, 0.05%)</title><rect x="217.4" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (18 samples, 0.05%)</title><rect x="217.4" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (18 samples, 0.05%)</title><rect x="217.4" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (18 samples, 0.05%)</title><rect x="217.4" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="220.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (3,573 samples, 10.38%)</title><rect x="218.0" y="419.0" width="122.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.0" y="430.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (2,339 samples, 6.79%)</title><rect x="218.0" y="403.0" width="80.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="221.0" y="414.0">jdk.inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (1,234 samples, 3.58%)</title><rect x="298.1" y="403.0" width="42.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.1" y="414.0">jdk/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,234 samples, 3.58%)</title><rect x="298.1" y="387.0" width="42.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.1" y="398.0">sun/..</text>
</g>
<g>
<title>java.lang.Object (1,234 samples, 3.58%)</title><rect x="298.1" y="371.0" width="42.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="301.1" y="382.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.03%)</title><rect x="340.4" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.03%)</title><rect x="340.4" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.accept (10 samples, 0.03%)</title><rect x="340.4" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (10 samples, 0.03%)</title><rect x="340.4" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (10 samples, 0.03%)</title><rect x="340.4" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.03%)</title><rect x="340.4" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.4" y="414.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (10 samples, 0.03%)</title><rect x="340.4" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="343.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (48 samples, 0.14%)</title><rect x="340.8" y="515.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (48 samples, 0.14%)</title><rect x="340.8" y="499.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (48 samples, 0.14%)</title><rect x="340.8" y="483.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 0.14%)</title><rect x="340.8" y="467.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (48 samples, 0.14%)</title><rect x="340.8" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (48 samples, 0.14%)</title><rect x="340.8" y="435.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.accept (48 samples, 0.14%)</title><rect x="340.8" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (48 samples, 0.14%)</title><rect x="340.8" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (48 samples, 0.14%)</title><rect x="340.8" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 0.14%)</title><rect x="340.8" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (48 samples, 0.14%)</title><rect x="340.8" y="355.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (48 samples, 0.14%)</title><rect x="340.8" y="339.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (48 samples, 0.14%)</title><rect x="340.8" y="323.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (48 samples, 0.14%)</title><rect x="340.8" y="307.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (48 samples, 0.14%)</title><rect x="340.8" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (48 samples, 0.14%)</title><rect x="340.8" y="275.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (48 samples, 0.14%)</title><rect x="340.8" y="259.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (48 samples, 0.14%)</title><rect x="340.8" y="243.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (48 samples, 0.14%)</title><rect x="340.8" y="227.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (48 samples, 0.14%)</title><rect x="340.8" y="211.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (48 samples, 0.14%)</title><rect x="340.8" y="195.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (48 samples, 0.14%)</title><rect x="340.8" y="179.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="343.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,413 samples, 9.91%)</title><rect x="342.4" y="515.0" width="117.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.4" y="526.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (903 samples, 2.62%)</title><rect x="342.4" y="499.0" width="30.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.4" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (269 samples, 0.78%)</title><rect x="342.4" y="483.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (269 samples, 0.78%)</title><rect x="342.4" y="467.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (269 samples, 0.78%)</title><rect x="342.4" y="451.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (269 samples, 0.78%)</title><rect x="342.4" y="435.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (269 samples, 0.78%)</title><rect x="342.4" y="419.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (269 samples, 0.78%)</title><rect x="342.4" y="403.0" width="9.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="345.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (634 samples, 1.84%)</title><rect x="351.6" y="483.0" width="21.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.6" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (634 samples, 1.84%)</title><rect x="351.6" y="467.0" width="21.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.6" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (634 samples, 1.84%)</title><rect x="351.6" y="451.0" width="21.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="354.6" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (634 samples, 1.84%)</title><rect x="351.6" y="435.0" width="21.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.6" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (634 samples, 1.84%)</title><rect x="351.6" y="419.0" width="21.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.6" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (634 samples, 1.84%)</title><rect x="351.6" y="403.0" width="21.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.6" y="414.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (634 samples, 1.84%)</title><rect x="351.6" y="387.0" width="21.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="354.6" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2,510 samples, 7.29%)</title><rect x="373.3" y="499.0" width="86.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.3" y="510.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (439 samples, 1.27%)</title><rect x="373.3" y="483.0" width="15.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (439 samples, 1.27%)</title><rect x="373.3" y="467.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="376.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (439 samples, 1.27%)</title><rect x="373.3" y="451.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (439 samples, 1.27%)</title><rect x="373.3" y="435.0" width="15.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (439 samples, 1.27%)</title><rect x="373.3" y="419.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (439 samples, 1.27%)</title><rect x="373.3" y="403.0" width="15.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="376.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,071 samples, 6.01%)</title><rect x="388.4" y="483.0" width="71.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.4" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,071 samples, 6.01%)</title><rect x="388.4" y="467.0" width="71.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.4" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,071 samples, 6.01%)</title><rect x="388.4" y="451.0" width="71.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.4" y="462.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,071 samples, 6.01%)</title><rect x="388.4" y="435.0" width="71.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.4" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,071 samples, 6.01%)</title><rect x="388.4" y="419.0" width="71.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.4" y="430.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,071 samples, 6.01%)</title><rect x="388.4" y="403.0" width="71.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.4" y="414.0">jdk/inte..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,071 samples, 6.01%)</title><rect x="388.4" y="387.0" width="71.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="391.4" y="398.0">java.uti..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10,503 samples, 30.50%)</title><rect x="459.4" y="515.0" width="359.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.4" y="526.0">jdk/internal/net/http/common/SequentialScheduler$..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10,503 samples, 30.50%)</title><rect x="459.4" y="499.0" width="359.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.4" y="510.0">jdk/internal/net/http/common/SequentialScheduler$..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,935 samples, 14.33%)</title><rect x="459.4" y="483.0" width="169.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.4" y="494.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (4,935 samples, 14.33%)</title><rect x="459.4" y="467.0" width="169.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.4" y="478.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4,935 samples, 14.33%)</title><rect x="459.4" y="451.0" width="169.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.4" y="462.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (4,405 samples, 12.79%)</title><rect x="459.4" y="435.0" width="150.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.4" y="446.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (4,405 samples, 12.79%)</title><rect x="459.4" y="419.0" width="150.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.4" y="430.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4,405 samples, 12.79%)</title><rect x="459.4" y="403.0" width="150.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.4" y="414.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4,405 samples, 12.79%)</title><rect x="459.4" y="387.0" width="150.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.4" y="398.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4,405 samples, 12.79%)</title><rect x="459.4" y="371.0" width="150.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.4" y="382.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4,405 samples, 12.79%)</title><rect x="459.4" y="355.0" width="150.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.4" y="366.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4,405 samples, 12.79%)</title><rect x="459.4" y="339.0" width="150.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.4" y="350.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4,405 samples, 12.79%)</title><rect x="459.4" y="323.0" width="150.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.4" y="334.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4,405 samples, 12.79%)</title><rect x="459.4" y="307.0" width="150.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.4" y="318.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,986 samples, 11.58%)</title><rect x="459.4" y="291.0" width="136.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="462.4" y="302.0">jdk.internal.net...</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (419 samples, 1.22%)</title><rect x="596.0" y="291.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.0" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (419 samples, 1.22%)</title><rect x="596.0" y="275.0" width="14.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="599.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (530 samples, 1.54%)</title><rect x="610.3" y="435.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (530 samples, 1.54%)</title><rect x="610.3" y="419.0" width="18.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (530 samples, 1.54%)</title><rect x="610.3" y="403.0" width="18.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (530 samples, 1.54%)</title><rect x="610.3" y="387.0" width="18.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (530 samples, 1.54%)</title><rect x="610.3" y="371.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (530 samples, 1.54%)</title><rect x="610.3" y="355.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (530 samples, 1.54%)</title><rect x="610.3" y="339.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (530 samples, 1.54%)</title><rect x="610.3" y="323.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (530 samples, 1.54%)</title><rect x="610.3" y="307.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (530 samples, 1.54%)</title><rect x="610.3" y="291.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (530 samples, 1.54%)</title><rect x="610.3" y="275.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (530 samples, 1.54%)</title><rect x="610.3" y="259.0" width="18.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (530 samples, 1.54%)</title><rect x="610.3" y="243.0" width="18.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10 samples, 0.03%)</title><rect x="610.3" y="227.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$384/1609426679.apply (10 samples, 0.03%)</title><rect x="610.3" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (10 samples, 0.03%)</title><rect x="610.3" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (10 samples, 0.03%)</title><rect x="610.3" y="179.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (10 samples, 0.03%)</title><rect x="610.3" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (10 samples, 0.03%)</title><rect x="610.3" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (10 samples, 0.03%)</title><rect x="610.3" y="131.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="613.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (520 samples, 1.51%)</title><rect x="610.7" y="227.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (520 samples, 1.51%)</title><rect x="610.7" y="211.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$385/1826212424.apply (520 samples, 1.51%)</title><rect x="610.7" y="195.0" width="17.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (520 samples, 1.51%)</title><rect x="610.7" y="179.0" width="17.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (520 samples, 1.51%)</title><rect x="610.7" y="163.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (520 samples, 1.51%)</title><rect x="610.7" y="147.0" width="17.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (520 samples, 1.51%)</title><rect x="610.7" y="131.0" width="17.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="613.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5,568 samples, 16.17%)</title><rect x="628.5" y="483.0" width="190.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.5" y="494.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,568 samples, 16.17%)</title><rect x="628.5" y="467.0" width="190.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.5" y="478.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,568 samples, 16.17%)</title><rect x="628.5" y="451.0" width="190.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.5" y="462.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (5,568 samples, 16.17%)</title><rect x="628.5" y="435.0" width="190.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.5" y="446.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,568 samples, 16.17%)</title><rect x="628.5" y="419.0" width="190.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.5" y="430.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5,561 samples, 16.15%)</title><rect x="628.5" y="403.0" width="190.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.5" y="414.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (5,561 samples, 16.15%)</title><rect x="628.5" y="387.0" width="190.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.5" y="398.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5,561 samples, 16.15%)</title><rect x="628.5" y="371.0" width="190.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.5" y="382.0">jdk/internal/net/http/Res..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1005240389.run (5,561 samples, 16.15%)</title><rect x="628.5" y="355.0" width="190.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.5" y="366.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5,561 samples, 16.15%)</title><rect x="628.5" y="339.0" width="190.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.5" y="350.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5,561 samples, 16.15%)</title><rect x="628.5" y="323.0" width="190.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.5" y="334.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,561 samples, 16.15%)</title><rect x="628.5" y="307.0" width="190.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.5" y="318.0">jdk/internal/net/http/Con..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,561 samples, 16.15%)</title><rect x="628.5" y="291.0" width="190.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.5" y="302.0">jdk/internal/net/http/Con..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (175 samples, 0.51%)</title><rect x="628.5" y="275.0" width="6.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="631.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (5,386 samples, 15.64%)</title><rect x="634.5" y="275.0" width="184.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.5" y="286.0">jdk/internal/net/http/Co..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5,386 samples, 15.64%)</title><rect x="634.5" y="259.0" width="184.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.5" y="270.0">jdk/internal/net/http/So..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (904 samples, 2.63%)</title><rect x="634.5" y="243.0" width="31.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.5" y="254.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (904 samples, 2.63%)</title><rect x="634.5" y="227.0" width="31.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.5" y="238.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (904 samples, 2.63%)</title><rect x="634.5" y="211.0" width="31.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.5" y="222.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (904 samples, 2.63%)</title><rect x="634.5" y="195.0" width="31.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.5" y="206.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (904 samples, 2.63%)</title><rect x="634.5" y="179.0" width="31.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.5" y="190.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (638 samples, 1.85%)</title><rect x="634.5" y="163.0" width="21.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="637.5" y="174.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (266 samples, 0.77%)</title><rect x="656.3" y="163.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (266 samples, 0.77%)</title><rect x="656.3" y="147.0" width="9.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="659.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4,482 samples, 13.02%)</title><rect x="665.5" y="243.0" width="153.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.5" y="254.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4,482 samples, 13.02%)</title><rect x="665.5" y="227.0" width="153.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.5" y="238.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4,482 samples, 13.02%)</title><rect x="665.5" y="211.0" width="153.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.5" y="222.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4,482 samples, 13.02%)</title><rect x="665.5" y="195.0" width="153.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.5" y="206.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4,482 samples, 13.02%)</title><rect x="665.5" y="179.0" width="153.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.5" y="190.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,199 samples, 12.19%)</title><rect x="665.5" y="163.0" width="143.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="668.5" y="174.0">jdk.internal.net.h..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (283 samples, 0.82%)</title><rect x="809.3" y="163.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (283 samples, 0.82%)</title><rect x="809.3" y="147.0" width="9.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="812.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.run (177 samples, 0.51%)</title><rect x="819.3" y="515.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (177 samples, 0.51%)</title><rect x="819.3" y="499.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (48 samples, 0.14%)</title><rect x="819.3" y="483.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (48 samples, 0.14%)</title><rect x="819.3" y="467.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (48 samples, 0.14%)</title><rect x="819.3" y="451.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (48 samples, 0.14%)</title><rect x="819.3" y="435.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (48 samples, 0.14%)</title><rect x="819.3" y="419.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (48 samples, 0.14%)</title><rect x="819.3" y="403.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (48 samples, 0.14%)</title><rect x="819.3" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (48 samples, 0.14%)</title><rect x="819.3" y="371.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (48 samples, 0.14%)</title><rect x="819.3" y="355.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (48 samples, 0.14%)</title><rect x="819.3" y="339.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (48 samples, 0.14%)</title><rect x="819.3" y="323.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (48 samples, 0.14%)</title><rect x="819.3" y="307.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (48 samples, 0.14%)</title><rect x="819.3" y="291.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (48 samples, 0.14%)</title><rect x="819.3" y="275.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="822.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (129 samples, 0.37%)</title><rect x="820.9" y="483.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (129 samples, 0.37%)</title><rect x="820.9" y="467.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (129 samples, 0.37%)</title><rect x="820.9" y="451.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (45 samples, 0.13%)</title><rect x="820.9" y="435.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (45 samples, 0.13%)</title><rect x="820.9" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (45 samples, 0.13%)</title><rect x="820.9" y="403.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (45 samples, 0.13%)</title><rect x="820.9" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (45 samples, 0.13%)</title><rect x="820.9" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (45 samples, 0.13%)</title><rect x="820.9" y="355.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (45 samples, 0.13%)</title><rect x="820.9" y="339.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (45 samples, 0.13%)</title><rect x="820.9" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (33 samples, 0.10%)</title><rect x="820.9" y="307.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (33 samples, 0.10%)</title><rect x="820.9" y="291.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (33 samples, 0.10%)</title><rect x="820.9" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (33 samples, 0.10%)</title><rect x="820.9" y="259.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (33 samples, 0.10%)</title><rect x="820.9" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 0.10%)</title><rect x="820.9" y="227.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 0.10%)</title><rect x="820.9" y="211.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.9" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (33 samples, 0.10%)</title><rect x="820.9" y="195.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="823.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (12 samples, 0.03%)</title><rect x="822.1" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (12 samples, 0.03%)</title><rect x="822.1" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.03%)</title><rect x="822.1" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.03%)</title><rect x="822.1" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.03%)</title><rect x="822.1" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.03%)</title><rect x="822.1" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12 samples, 0.03%)</title><rect x="822.1" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="825.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$125/121225284.handleLocalResponse (84 samples, 0.24%)</title><rect x="822.5" y="435.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$8 (84 samples, 0.24%)</title><rect x="822.5" y="419.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (84 samples, 0.24%)</title><rect x="822.5" y="403.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (84 samples, 0.24%)</title><rect x="822.5" y="387.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (84 samples, 0.24%)</title><rect x="822.5" y="371.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (84 samples, 0.24%)</title><rect x="822.5" y="355.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (84 samples, 0.24%)</title><rect x="822.5" y="339.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (84 samples, 0.24%)</title><rect x="822.5" y="323.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (84 samples, 0.24%)</title><rect x="822.5" y="307.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (84 samples, 0.24%)</title><rect x="822.5" y="291.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (84 samples, 0.24%)</title><rect x="822.5" y="275.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (84 samples, 0.24%)</title><rect x="822.5" y="259.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (84 samples, 0.24%)</title><rect x="822.5" y="243.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (84 samples, 0.24%)</title><rect x="822.5" y="227.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="825.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (194 samples, 0.56%)</title><rect x="825.3" y="563.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (194 samples, 0.56%)</title><rect x="825.3" y="547.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (194 samples, 0.56%)</title><rect x="825.3" y="531.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (194 samples, 0.56%)</title><rect x="825.3" y="515.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (194 samples, 0.56%)</title><rect x="825.3" y="499.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (194 samples, 0.56%)</title><rect x="825.3" y="483.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (194 samples, 0.56%)</title><rect x="825.3" y="467.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (194 samples, 0.56%)</title><rect x="825.3" y="451.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (194 samples, 0.56%)</title><rect x="825.3" y="435.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (194 samples, 0.56%)</title><rect x="825.3" y="419.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (194 samples, 0.56%)</title><rect x="825.3" y="403.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (194 samples, 0.56%)</title><rect x="825.3" y="387.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (194 samples, 0.56%)</title><rect x="825.3" y="371.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (194 samples, 0.56%)</title><rect x="825.3" y="355.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (194 samples, 0.56%)</title><rect x="825.3" y="339.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (194 samples, 0.56%)</title><rect x="825.3" y="323.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (194 samples, 0.56%)</title><rect x="825.3" y="307.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (194 samples, 0.56%)</title><rect x="825.3" y="291.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (194 samples, 0.56%)</title><rect x="825.3" y="275.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (194 samples, 0.56%)</title><rect x="825.3" y="259.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="828.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (10,233 samples, 29.72%)</title><rect x="832.0" y="563.0" width="350.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.0" y="574.0">jdk/internal/net/http/HttpClientImpl$SelectorMan..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (91 samples, 0.26%)</title><rect x="832.0" y="547.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$389/894063145.accept (91 samples, 0.26%)</title><rect x="832.0" y="531.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (91 samples, 0.26%)</title><rect x="832.0" y="515.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (91 samples, 0.26%)</title><rect x="832.0" y="499.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (91 samples, 0.26%)</title><rect x="832.0" y="483.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (91 samples, 0.26%)</title><rect x="832.0" y="467.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (91 samples, 0.26%)</title><rect x="832.0" y="451.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 0.26%)</title><rect x="832.0" y="435.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 0.26%)</title><rect x="832.0" y="419.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (91 samples, 0.26%)</title><rect x="832.0" y="403.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (91 samples, 0.26%)</title><rect x="832.0" y="387.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (91 samples, 0.26%)</title><rect x="832.0" y="371.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (91 samples, 0.26%)</title><rect x="832.0" y="355.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (91 samples, 0.26%)</title><rect x="832.0" y="339.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (91 samples, 0.26%)</title><rect x="832.0" y="323.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (91 samples, 0.26%)</title><rect x="832.0" y="307.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 0.26%)</title><rect x="832.0" y="291.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 0.26%)</title><rect x="832.0" y="275.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (91 samples, 0.26%)</title><rect x="832.0" y="259.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (91 samples, 0.26%)</title><rect x="832.0" y="243.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (91 samples, 0.26%)</title><rect x="832.0" y="227.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (91 samples, 0.26%)</title><rect x="832.0" y="211.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (91 samples, 0.26%)</title><rect x="832.0" y="195.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (91 samples, 0.26%)</title><rect x="832.0" y="179.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (91 samples, 0.26%)</title><rect x="832.0" y="163.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (91 samples, 0.26%)</title><rect x="832.0" y="147.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (91 samples, 0.26%)</title><rect x="832.0" y="131.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (91 samples, 0.26%)</title><rect x="832.0" y="115.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.0" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (91 samples, 0.26%)</title><rect x="832.0" y="99.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="835.0" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (7,045 samples, 20.46%)</title><rect x="835.1" y="547.0" width="241.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="838.1" y="558.0">jdk.internal.net.http.HttpClient..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (199 samples, 0.58%)</title><rect x="1076.5" y="547.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1079.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$292/1483596319.run (65 samples, 0.19%)</title><rect x="1076.5" y="531.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (65 samples, 0.19%)</title><rect x="1076.5" y="515.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.19%)</title><rect x="1076.5" y="499.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.19%)</title><rect x="1076.5" y="483.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (65 samples, 0.19%)</title><rect x="1076.5" y="467.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (65 samples, 0.19%)</title><rect x="1076.5" y="451.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (65 samples, 0.19%)</title><rect x="1076.5" y="435.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1079.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (65 samples, 0.19%)</title><rect x="1076.5" y="419.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (65 samples, 0.19%)</title><rect x="1076.5" y="403.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (65 samples, 0.19%)</title><rect x="1076.5" y="387.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1079.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (65 samples, 0.19%)</title><rect x="1076.5" y="371.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.19%)</title><rect x="1076.5" y="355.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1079.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 0.19%)</title><rect x="1076.5" y="339.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (65 samples, 0.19%)</title><rect x="1076.5" y="323.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (65 samples, 0.19%)</title><rect x="1076.5" y="307.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (65 samples, 0.19%)</title><rect x="1076.5" y="291.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (63 samples, 0.18%)</title><rect x="1076.5" y="275.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1079.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (63 samples, 0.18%)</title><rect x="1076.5" y="259.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (63 samples, 0.18%)</title><rect x="1076.5" y="243.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (63 samples, 0.18%)</title><rect x="1076.5" y="227.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (63 samples, 0.18%)</title><rect x="1076.5" y="211.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1079.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (63 samples, 0.18%)</title><rect x="1076.5" y="195.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (63 samples, 0.18%)</title><rect x="1076.5" y="179.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (63 samples, 0.18%)</title><rect x="1076.5" y="163.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1079.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$302/1986808666.run (134 samples, 0.39%)</title><rect x="1078.8" y="531.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (134 samples, 0.39%)</title><rect x="1078.8" y="515.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (134 samples, 0.39%)</title><rect x="1078.8" y="499.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (134 samples, 0.39%)</title><rect x="1078.8" y="483.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (134 samples, 0.39%)</title><rect x="1078.8" y="467.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (133 samples, 0.39%)</title><rect x="1078.8" y="451.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (133 samples, 0.39%)</title><rect x="1078.8" y="435.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1081.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (133 samples, 0.39%)</title><rect x="1078.8" y="419.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (133 samples, 0.39%)</title><rect x="1078.8" y="403.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (133 samples, 0.39%)</title><rect x="1078.8" y="387.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (133 samples, 0.39%)</title><rect x="1078.8" y="371.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1081.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (133 samples, 0.39%)</title><rect x="1078.8" y="355.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1081.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (133 samples, 0.39%)</title><rect x="1078.8" y="339.0" width="4.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1081.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (123 samples, 0.36%)</title><rect x="1083.4" y="547.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (123 samples, 0.36%)</title><rect x="1083.4" y="531.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (123 samples, 0.36%)</title><rect x="1083.4" y="515.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1086.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (2,384 samples, 6.92%)</title><rect x="1087.6" y="547.0" width="81.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.6" y="558.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (2,384 samples, 6.92%)</title><rect x="1087.6" y="531.0" width="81.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1090.6" y="542.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (380 samples, 1.10%)</title><rect x="1169.3" y="547.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1172.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (380 samples, 1.10%)</title><rect x="1169.3" y="531.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (380 samples, 1.10%)</title><rect x="1169.3" y="515.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (380 samples, 1.10%)</title><rect x="1169.3" y="499.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1172.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (380 samples, 1.10%)</title><rect x="1169.3" y="483.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (380 samples, 1.10%)</title><rect x="1169.3" y="467.0" width="13.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1172.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (11 samples, 0.03%)</title><rect x="1182.3" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11 samples, 0.03%)</title><rect x="1182.3" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11 samples, 0.03%)</title><rect x="1182.3" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1185.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (11 samples, 0.03%)</title><rect x="1182.3" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (11 samples, 0.03%)</title><rect x="1182.3" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (11 samples, 0.03%)</title><rect x="1182.3" y="467.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1185.3" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (214 samples, 0.62%)</title><rect x="1182.7" y="563.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (214 samples, 0.62%)</title><rect x="1182.7" y="547.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (214 samples, 0.62%)</title><rect x="1182.7" y="531.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (214 samples, 0.62%)</title><rect x="1182.7" y="515.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (214 samples, 0.62%)</title><rect x="1182.7" y="499.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (214 samples, 0.62%)</title><rect x="1182.7" y="483.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.7" y="494.0"></text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (214 samples, 0.62%)</title><rect x="1182.7" y="467.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (214 samples, 0.62%)</title><rect x="1182.7" y="451.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (214 samples, 0.62%)</title><rect x="1182.7" y="435.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (214 samples, 0.62%)</title><rect x="1182.7" y="419.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (214 samples, 0.62%)</title><rect x="1182.7" y="403.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (214 samples, 0.62%)</title><rect x="1182.7" y="387.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (214 samples, 0.62%)</title><rect x="1182.7" y="371.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (214 samples, 0.62%)</title><rect x="1182.7" y="355.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (214 samples, 0.62%)</title><rect x="1182.7" y="339.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (214 samples, 0.62%)</title><rect x="1182.7" y="323.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (214 samples, 0.62%)</title><rect x="1182.7" y="307.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (214 samples, 0.62%)</title><rect x="1182.7" y="291.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (214 samples, 0.62%)</title><rect x="1182.7" y="275.0" width="7.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1185.7" y="286.0"></text>
</g>
</g>
</svg>
