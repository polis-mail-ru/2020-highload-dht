<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (227,797 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (164,521 samples, 72.22%)</title><rect x="10.0" y="563.0" width="852.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (164,521 samples, 72.22%)</title><rect x="10.0" y="547.0" width="852.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (164,521 samples, 72.22%)</title><rect x="10.0" y="531.0" width="852.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (61,758 samples, 27.11%)</title><rect x="10.0" y="515.0" width="319.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$Asyn..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (61,758 samples, 27.11%)</title><rect x="10.0" y="499.0" width="319.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.post..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (61,200 samples, 26.87%)</title><rect x="10.0" y="483.0" width="317.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableFuture$UniC..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/741792946.apply (61,200 samples, 26.87%)</title><rect x="10.0" y="467.0" width="317.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (61,200 samples, 26.87%)</title><rect x="10.0" y="451.0" width="317.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/MultiExchange.lambda$..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (61,200 samples, 26.87%)</title><rect x="10.0" y="435.0" width="317.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/MultiExchange.respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (42,058 samples, 18.46%)</title><rect x="10.0" y="419.0" width="217.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net/http/Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (42,058 samples, 18.46%)</title><rect x="10.0" y="403.0" width="217.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (42,058 samples, 18.46%)</title><rect x="10.0" y="387.0" width="217.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Exchang..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (40,117 samples, 17.61%)</title><rect x="10.0" y="371.0" width="207.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (40,117 samples, 17.61%)</title><rect x="10.0" y="355.0" width="207.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (40,117 samples, 17.61%)</title><rect x="10.0" y="339.0" width="207.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$369/2088470337.apply (40,117 samples, 17.61%)</title><rect x="10.0" y="323.0" width="207.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (40,117 samples, 17.61%)</title><rect x="10.0" y="307.0" width="207.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (40,117 samples, 17.61%)</title><rect x="10.0" y="291.0" width="207.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/704007913.apply (40,117 samples, 17.61%)</title><rect x="10.0" y="275.0" width="207.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (40,117 samples, 17.61%)</title><rect x="10.0" y="259.0" width="207.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (40,117 samples, 17.61%)</title><rect x="10.0" y="243.0" width="207.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (40,117 samples, 17.61%)</title><rect x="10.0" y="227.0" width="207.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (40,117 samples, 17.61%)</title><rect x="10.0" y="211.0" width="207.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/719435531.apply (40,117 samples, 17.61%)</title><rect x="10.0" y="195.0" width="207.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (40,117 samples, 17.61%)</title><rect x="10.0" y="179.0" width="207.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (40,117 samples, 17.61%)</title><rect x="10.0" y="163.0" width="207.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (40,117 samples, 17.61%)</title><rect x="10.0" y="147.0" width="207.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5,972 samples, 2.62%)</title><rect x="10.0" y="131.0" width="30.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="142.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5,972 samples, 2.62%)</title><rect x="10.0" y="115.0" width="30.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="126.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5,972 samples, 2.62%)</title><rect x="10.0" y="99.0" width="30.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="110.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5,972 samples, 2.62%)</title><rect x="10.0" y="83.0" width="30.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="94.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,972 samples, 2.62%)</title><rect x="10.0" y="67.0" width="30.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="78.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,773 samples, 1.66%)</title><rect x="10.0" y="51.0" width="19.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,199 samples, 0.97%)</title><rect x="29.5" y="51.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.5" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (2,199 samples, 0.97%)</title><rect x="29.5" y="35.0" width="11.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="32.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (34,145 samples, 14.99%)</title><rect x="40.9" y="131.0" width="176.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.9" y="142.0">jdk/internal/net/http/S..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (34,145 samples, 14.99%)</title><rect x="40.9" y="115.0" width="176.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.9" y="126.0">jdk/internal/net/http/S..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (34,145 samples, 14.99%)</title><rect x="40.9" y="99.0" width="176.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.9" y="110.0">jdk/internal/net/http/S..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (34,145 samples, 14.99%)</title><rect x="40.9" y="83.0" width="176.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.9" y="94.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (34,145 samples, 14.99%)</title><rect x="40.9" y="67.0" width="176.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.9" y="78.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (29,679 samples, 13.03%)</title><rect x="40.9" y="51.0" width="153.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="43.9" y="62.0">jdk.internal.net.ht..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4,466 samples, 1.96%)</title><rect x="194.7" y="51.0" width="23.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.7" y="62.0">s..</text>
</g>
<g>
<title>java.lang.Object (4,466 samples, 1.96%)</title><rect x="194.7" y="35.0" width="23.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="197.7" y="46.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,941 samples, 0.85%)</title><rect x="217.8" y="371.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,941 samples, 0.85%)</title><rect x="217.8" y="355.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,941 samples, 0.85%)</title><rect x="217.8" y="339.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,941 samples, 0.85%)</title><rect x="217.8" y="323.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,941 samples, 0.85%)</title><rect x="217.8" y="307.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1,941 samples, 0.85%)</title><rect x="217.8" y="291.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,941 samples, 0.85%)</title><rect x="217.8" y="275.0" width="10.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="220.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (19,114 samples, 8.39%)</title><rect x="227.9" y="419.0" width="99.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.9" y="430.0">jdk/internal..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (11,755 samples, 5.16%)</title><rect x="227.9" y="403.0" width="60.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="230.9" y="414.0">jdk.in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (7,359 samples, 3.23%)</title><rect x="288.8" y="403.0" width="38.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.8" y="414.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (7,359 samples, 3.23%)</title><rect x="288.8" y="387.0" width="38.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="291.8" y="398.0">sun..</text>
</g>
<g>
<title>java.lang.Object (7,359 samples, 3.23%)</title><rect x="288.8" y="371.0" width="38.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="291.8" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (558 samples, 0.24%)</title><rect x="327.0" y="483.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (558 samples, 0.24%)</title><rect x="327.0" y="467.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (526 samples, 0.23%)</title><rect x="327.0" y="451.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (526 samples, 0.23%)</title><rect x="327.0" y="435.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (526 samples, 0.23%)</title><rect x="327.0" y="419.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (526 samples, 0.23%)</title><rect x="327.0" y="403.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (526 samples, 0.23%)</title><rect x="327.0" y="387.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (526 samples, 0.23%)</title><rect x="327.0" y="371.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (526 samples, 0.23%)</title><rect x="327.0" y="355.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (526 samples, 0.23%)</title><rect x="327.0" y="339.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (526 samples, 0.23%)</title><rect x="327.0" y="323.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (526 samples, 0.23%)</title><rect x="327.0" y="307.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="330.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,816 samples, 0.80%)</title><rect x="329.9" y="515.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,033 samples, 0.45%)</title><rect x="329.9" y="499.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,033 samples, 0.45%)</title><rect x="329.9" y="483.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,033 samples, 0.45%)</title><rect x="329.9" y="467.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,033 samples, 0.45%)</title><rect x="329.9" y="451.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,033 samples, 0.45%)</title><rect x="329.9" y="435.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,033 samples, 0.45%)</title><rect x="329.9" y="419.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,033 samples, 0.45%)</title><rect x="329.9" y="403.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,033 samples, 0.45%)</title><rect x="329.9" y="387.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,033 samples, 0.45%)</title><rect x="329.9" y="371.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,033 samples, 0.45%)</title><rect x="329.9" y="355.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,033 samples, 0.45%)</title><rect x="329.9" y="339.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,033 samples, 0.45%)</title><rect x="329.9" y="323.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,033 samples, 0.45%)</title><rect x="329.9" y="307.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,033 samples, 0.45%)</title><rect x="329.9" y="291.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,033 samples, 0.45%)</title><rect x="329.9" y="275.0" width="5.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="332.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (783 samples, 0.34%)</title><rect x="335.3" y="499.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (783 samples, 0.34%)</title><rect x="335.3" y="483.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$230/1479809634.accept (783 samples, 0.34%)</title><rect x="335.3" y="467.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (783 samples, 0.34%)</title><rect x="335.3" y="451.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (783 samples, 0.34%)</title><rect x="335.3" y="435.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (783 samples, 0.34%)</title><rect x="335.3" y="419.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (783 samples, 0.34%)</title><rect x="335.3" y="403.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (783 samples, 0.34%)</title><rect x="335.3" y="387.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (783 samples, 0.34%)</title><rect x="335.3" y="371.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (783 samples, 0.34%)</title><rect x="335.3" y="355.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (783 samples, 0.34%)</title><rect x="335.3" y="339.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (783 samples, 0.34%)</title><rect x="335.3" y="323.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (783 samples, 0.34%)</title><rect x="335.3" y="307.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (783 samples, 0.34%)</title><rect x="335.3" y="291.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (783 samples, 0.34%)</title><rect x="335.3" y="275.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (783 samples, 0.34%)</title><rect x="335.3" y="259.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (783 samples, 0.34%)</title><rect x="335.3" y="243.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (783 samples, 0.34%)</title><rect x="335.3" y="227.0" width="4.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="338.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27,487 samples, 12.07%)</title><rect x="339.3" y="515.0" width="142.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.3" y="526.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (11,570 samples, 5.08%)</title><rect x="339.3" y="499.0" width="59.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.3" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3,090 samples, 1.36%)</title><rect x="339.3" y="483.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3,090 samples, 1.36%)</title><rect x="339.3" y="467.0" width="16.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3,090 samples, 1.36%)</title><rect x="339.3" y="451.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3,090 samples, 1.36%)</title><rect x="339.3" y="435.0" width="16.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3,090 samples, 1.36%)</title><rect x="339.3" y="419.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (3,090 samples, 1.36%)</title><rect x="339.3" y="403.0" width="16.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="342.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (8,480 samples, 3.72%)</title><rect x="355.3" y="483.0" width="43.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.3" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (8,480 samples, 3.72%)</title><rect x="355.3" y="467.0" width="43.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.3" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (8,480 samples, 3.72%)</title><rect x="355.3" y="451.0" width="43.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.3" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8,480 samples, 3.72%)</title><rect x="355.3" y="435.0" width="43.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.3" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8,480 samples, 3.72%)</title><rect x="355.3" y="419.0" width="43.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.3" y="430.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8,480 samples, 3.72%)</title><rect x="355.3" y="403.0" width="43.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.3" y="414.0">jdk/..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (8,480 samples, 3.72%)</title><rect x="355.3" y="387.0" width="43.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="358.3" y="398.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (15,917 samples, 6.99%)</title><rect x="399.2" y="499.0" width="82.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.2" y="510.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3,204 samples, 1.41%)</title><rect x="399.2" y="483.0" width="16.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3,204 samples, 1.41%)</title><rect x="399.2" y="467.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3,204 samples, 1.41%)</title><rect x="399.2" y="451.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3,204 samples, 1.41%)</title><rect x="399.2" y="435.0" width="16.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3,204 samples, 1.41%)</title><rect x="399.2" y="419.0" width="16.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (3,204 samples, 1.41%)</title><rect x="399.2" y="403.0" width="16.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="402.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (12,713 samples, 5.58%)</title><rect x="415.8" y="483.0" width="65.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.8" y="494.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (12,713 samples, 5.58%)</title><rect x="415.8" y="467.0" width="65.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.8" y="478.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (12,713 samples, 5.58%)</title><rect x="415.8" y="451.0" width="65.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.8" y="462.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12,713 samples, 5.58%)</title><rect x="415.8" y="435.0" width="65.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.8" y="446.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12,713 samples, 5.58%)</title><rect x="415.8" y="419.0" width="65.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.8" y="430.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12,713 samples, 5.58%)</title><rect x="415.8" y="403.0" width="65.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.8" y="414.0">jdk/int..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12,713 samples, 5.58%)</title><rect x="415.8" y="387.0" width="65.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="418.8" y="398.0">java.ut..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (69,728 samples, 30.61%)</title><rect x="481.7" y="515.0" width="361.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.7" y="526.0">jdk/internal/net/http/common/SequentialScheduler$..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (69,728 samples, 30.61%)</title><rect x="481.7" y="499.0" width="361.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.7" y="510.0">jdk/internal/net/http/common/SequentialScheduler$..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (34,424 samples, 15.11%)</title><rect x="481.7" y="483.0" width="178.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.7" y="494.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (34,424 samples, 15.11%)</title><rect x="481.7" y="467.0" width="178.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.7" y="478.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (34,424 samples, 15.11%)</title><rect x="481.7" y="451.0" width="178.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.7" y="462.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (31,490 samples, 13.82%)</title><rect x="481.7" y="435.0" width="163.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.7" y="446.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (31,490 samples, 13.82%)</title><rect x="481.7" y="419.0" width="163.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.7" y="430.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (31,490 samples, 13.82%)</title><rect x="481.7" y="403.0" width="163.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.7" y="414.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (31,490 samples, 13.82%)</title><rect x="481.7" y="387.0" width="163.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.7" y="398.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (31,490 samples, 13.82%)</title><rect x="481.7" y="371.0" width="163.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.7" y="382.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (31,490 samples, 13.82%)</title><rect x="481.7" y="355.0" width="163.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.7" y="366.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (31,490 samples, 13.82%)</title><rect x="481.7" y="339.0" width="163.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.7" y="350.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (31,490 samples, 13.82%)</title><rect x="481.7" y="323.0" width="163.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.7" y="334.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (31,490 samples, 13.82%)</title><rect x="481.7" y="307.0" width="163.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.7" y="318.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (29,385 samples, 12.90%)</title><rect x="481.7" y="291.0" width="152.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="484.7" y="302.0">jdk.internal.net.ht..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,105 samples, 0.92%)</title><rect x="633.9" y="291.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.9" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (2,105 samples, 0.92%)</title><rect x="633.9" y="275.0" width="10.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="636.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,934 samples, 1.29%)</title><rect x="644.8" y="435.0" width="15.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,934 samples, 1.29%)</title><rect x="644.8" y="419.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,934 samples, 1.29%)</title><rect x="644.8" y="403.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,934 samples, 1.29%)</title><rect x="644.8" y="387.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,934 samples, 1.29%)</title><rect x="644.8" y="371.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,934 samples, 1.29%)</title><rect x="644.8" y="355.0" width="15.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,934 samples, 1.29%)</title><rect x="644.8" y="339.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,934 samples, 1.29%)</title><rect x="644.8" y="323.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,934 samples, 1.29%)</title><rect x="644.8" y="307.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,934 samples, 1.29%)</title><rect x="644.8" y="291.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,934 samples, 1.29%)</title><rect x="644.8" y="275.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,934 samples, 1.29%)</title><rect x="644.8" y="259.0" width="15.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,934 samples, 1.29%)</title><rect x="644.8" y="243.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2,902 samples, 1.27%)</title><rect x="645.0" y="227.0" width="15.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,902 samples, 1.27%)</title><rect x="645.0" y="211.0" width="15.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1523195787.apply (2,902 samples, 1.27%)</title><rect x="645.0" y="195.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (2,902 samples, 1.27%)</title><rect x="645.0" y="179.0" width="15.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (2,902 samples, 1.27%)</title><rect x="645.0" y="163.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (2,902 samples, 1.27%)</title><rect x="645.0" y="147.0" width="15.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (2,902 samples, 1.27%)</title><rect x="645.0" y="131.0" width="15.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="648.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (35,304 samples, 15.50%)</title><rect x="660.0" y="483.0" width="182.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.0" y="494.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (35,304 samples, 15.50%)</title><rect x="660.0" y="467.0" width="182.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.0" y="478.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (35,304 samples, 15.50%)</title><rect x="660.0" y="451.0" width="182.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.0" y="462.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (35,304 samples, 15.50%)</title><rect x="660.0" y="435.0" width="182.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.0" y="446.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (35,304 samples, 15.50%)</title><rect x="660.0" y="419.0" width="182.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.0" y="430.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (35,230 samples, 15.47%)</title><rect x="660.0" y="403.0" width="182.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.0" y="414.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (35,230 samples, 15.47%)</title><rect x="660.0" y="387.0" width="182.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.0" y="398.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (35,230 samples, 15.47%)</title><rect x="660.0" y="371.0" width="182.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.0" y="382.0">jdk/internal/net/http/Re..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/106021012.run (35,230 samples, 15.47%)</title><rect x="660.0" y="355.0" width="182.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="663.0" y="366.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (35,230 samples, 15.47%)</title><rect x="660.0" y="339.0" width="182.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.0" y="350.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (35,230 samples, 15.47%)</title><rect x="660.0" y="323.0" width="182.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.0" y="334.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (35,230 samples, 15.47%)</title><rect x="660.0" y="307.0" width="182.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.0" y="318.0">jdk/internal/net/http/Co..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (35,230 samples, 15.47%)</title><rect x="660.0" y="291.0" width="182.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.0" y="302.0">jdk/internal/net/http/Co..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,919 samples, 1.28%)</title><rect x="660.0" y="275.0" width="15.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="663.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (32,311 samples, 14.18%)</title><rect x="675.1" y="275.0" width="167.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.1" y="286.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (32,311 samples, 14.18%)</title><rect x="675.1" y="259.0" width="167.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.1" y="270.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5,633 samples, 2.47%)</title><rect x="675.1" y="243.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.1" y="254.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5,633 samples, 2.47%)</title><rect x="675.1" y="227.0" width="29.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.1" y="238.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5,633 samples, 2.47%)</title><rect x="675.1" y="211.0" width="29.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.1" y="222.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5,633 samples, 2.47%)</title><rect x="675.1" y="195.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.1" y="206.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,633 samples, 2.47%)</title><rect x="675.1" y="179.0" width="29.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.1" y="190.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,041 samples, 1.77%)</title><rect x="675.1" y="163.0" width="21.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="678.1" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,592 samples, 0.70%)</title><rect x="696.1" y="163.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.1" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,592 samples, 0.70%)</title><rect x="696.1" y="147.0" width="8.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="699.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26,678 samples, 11.71%)</title><rect x="704.3" y="243.0" width="138.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.3" y="254.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26,678 samples, 11.71%)</title><rect x="704.3" y="227.0" width="138.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.3" y="238.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (26,678 samples, 11.71%)</title><rect x="704.3" y="211.0" width="138.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.3" y="222.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (26,678 samples, 11.71%)</title><rect x="704.3" y="195.0" width="138.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.3" y="206.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (26,678 samples, 11.71%)</title><rect x="704.3" y="179.0" width="138.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.3" y="190.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (25,008 samples, 10.98%)</title><rect x="704.3" y="163.0" width="129.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="707.3" y="174.0">jdk.internal.net..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,670 samples, 0.73%)</title><rect x="833.9" y="163.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (1,670 samples, 0.73%)</title><rect x="833.9" y="147.0" width="8.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="836.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (74 samples, 0.03%)</title><rect x="842.5" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (74 samples, 0.03%)</title><rect x="842.5" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (74 samples, 0.03%)</title><rect x="842.5" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (74 samples, 0.03%)</title><rect x="842.5" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (74 samples, 0.03%)</title><rect x="842.5" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (74 samples, 0.03%)</title><rect x="842.5" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (74 samples, 0.03%)</title><rect x="842.5" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (74 samples, 0.03%)</title><rect x="842.5" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (74 samples, 0.03%)</title><rect x="842.5" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (74 samples, 0.03%)</title><rect x="842.5" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (74 samples, 0.03%)</title><rect x="842.5" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (74 samples, 0.03%)</title><rect x="842.5" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (74 samples, 0.03%)</title><rect x="842.5" y="211.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (73 samples, 0.03%)</title><rect x="842.5" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (73 samples, 0.03%)</title><rect x="842.5" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1523195787.apply (73 samples, 0.03%)</title><rect x="842.5" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (73 samples, 0.03%)</title><rect x="842.5" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (73 samples, 0.03%)</title><rect x="842.5" y="131.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (73 samples, 0.03%)</title><rect x="842.5" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.5" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (73 samples, 0.03%)</title><rect x="842.5" y="99.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="845.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/637964804.run (3,732 samples, 1.64%)</title><rect x="842.9" y="515.0" width="19.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (3,732 samples, 1.64%)</title><rect x="842.9" y="499.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (341 samples, 0.15%)</title><rect x="842.9" y="483.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (341 samples, 0.15%)</title><rect x="842.9" y="467.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (341 samples, 0.15%)</title><rect x="842.9" y="451.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="845.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (341 samples, 0.15%)</title><rect x="842.9" y="435.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="845.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (341 samples, 0.15%)</title><rect x="842.9" y="419.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (341 samples, 0.15%)</title><rect x="842.9" y="403.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="845.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (341 samples, 0.15%)</title><rect x="842.9" y="387.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (341 samples, 0.15%)</title><rect x="842.9" y="371.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (341 samples, 0.15%)</title><rect x="842.9" y="355.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (341 samples, 0.15%)</title><rect x="842.9" y="339.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="845.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (341 samples, 0.15%)</title><rect x="842.9" y="323.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (341 samples, 0.15%)</title><rect x="842.9" y="307.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (341 samples, 0.15%)</title><rect x="842.9" y="291.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (341 samples, 0.15%)</title><rect x="842.9" y="275.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="845.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (3,391 samples, 1.49%)</title><rect x="844.7" y="483.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (3,390 samples, 1.49%)</title><rect x="844.7" y="467.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (2,087 samples, 0.92%)</title><rect x="844.7" y="451.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (618 samples, 0.27%)</title><rect x="844.7" y="435.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (618 samples, 0.27%)</title><rect x="844.7" y="419.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (618 samples, 0.27%)</title><rect x="844.7" y="403.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (618 samples, 0.27%)</title><rect x="844.7" y="387.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (618 samples, 0.27%)</title><rect x="844.7" y="371.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (618 samples, 0.27%)</title><rect x="844.7" y="355.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (618 samples, 0.27%)</title><rect x="844.7" y="339.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (618 samples, 0.27%)</title><rect x="844.7" y="323.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (557 samples, 0.24%)</title><rect x="844.7" y="307.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (557 samples, 0.24%)</title><rect x="844.7" y="291.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (557 samples, 0.24%)</title><rect x="844.7" y="275.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (557 samples, 0.24%)</title><rect x="844.7" y="259.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (557 samples, 0.24%)</title><rect x="844.7" y="243.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (557 samples, 0.24%)</title><rect x="844.7" y="227.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (557 samples, 0.24%)</title><rect x="844.7" y="211.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="847.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (557 samples, 0.24%)</title><rect x="844.7" y="195.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="847.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (61 samples, 0.03%)</title><rect x="847.6" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (61 samples, 0.03%)</title><rect x="847.6" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (61 samples, 0.03%)</title><rect x="847.6" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (61 samples, 0.03%)</title><rect x="847.6" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (61 samples, 0.03%)</title><rect x="847.6" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (61 samples, 0.03%)</title><rect x="847.6" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (61 samples, 0.03%)</title><rect x="847.6" y="211.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="850.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$114/599301499.handleLocalResponse (1,469 samples, 0.64%)</title><rect x="847.9" y="435.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$7 (1,469 samples, 0.64%)</title><rect x="847.9" y="419.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (1,469 samples, 0.64%)</title><rect x="847.9" y="403.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,469 samples, 0.64%)</title><rect x="847.9" y="387.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,469 samples, 0.64%)</title><rect x="847.9" y="371.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,469 samples, 0.64%)</title><rect x="847.9" y="355.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,469 samples, 0.64%)</title><rect x="847.9" y="339.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,469 samples, 0.64%)</title><rect x="847.9" y="323.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,469 samples, 0.64%)</title><rect x="847.9" y="307.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,469 samples, 0.64%)</title><rect x="847.9" y="291.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,469 samples, 0.64%)</title><rect x="847.9" y="275.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,469 samples, 0.64%)</title><rect x="847.9" y="259.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,469 samples, 0.64%)</title><rect x="847.9" y="243.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.9" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,469 samples, 0.64%)</title><rect x="847.9" y="227.0" width="7.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="850.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (1,303 samples, 0.57%)</title><rect x="855.5" y="451.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (1,303 samples, 0.57%)</title><rect x="855.5" y="435.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,303 samples, 0.57%)</title><rect x="855.5" y="419.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$224/1601412013.accept (1,303 samples, 0.57%)</title><rect x="855.5" y="403.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (1,303 samples, 0.57%)</title><rect x="855.5" y="387.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,303 samples, 0.57%)</title><rect x="855.5" y="371.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,303 samples, 0.57%)</title><rect x="855.5" y="355.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="858.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,294 samples, 0.57%)</title><rect x="855.5" y="339.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,294 samples, 0.57%)</title><rect x="855.5" y="323.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="858.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,294 samples, 0.57%)</title><rect x="855.5" y="307.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,294 samples, 0.57%)</title><rect x="855.5" y="291.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,294 samples, 0.57%)</title><rect x="855.5" y="275.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,294 samples, 0.57%)</title><rect x="855.5" y="259.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,294 samples, 0.57%)</title><rect x="855.5" y="243.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,294 samples, 0.57%)</title><rect x="855.5" y="227.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,294 samples, 0.57%)</title><rect x="855.5" y="211.0" width="6.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="858.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,775 samples, 0.78%)</title><rect x="862.2" y="563.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,775 samples, 0.78%)</title><rect x="862.2" y="547.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,775 samples, 0.78%)</title><rect x="862.2" y="531.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,775 samples, 0.78%)</title><rect x="862.2" y="515.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,775 samples, 0.78%)</title><rect x="862.2" y="499.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,775 samples, 0.78%)</title><rect x="862.2" y="483.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,775 samples, 0.78%)</title><rect x="862.2" y="467.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,775 samples, 0.78%)</title><rect x="862.2" y="451.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,775 samples, 0.78%)</title><rect x="862.2" y="435.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,775 samples, 0.78%)</title><rect x="862.2" y="419.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,775 samples, 0.78%)</title><rect x="862.2" y="403.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,775 samples, 0.78%)</title><rect x="862.2" y="387.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="865.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,775 samples, 0.78%)</title><rect x="862.2" y="371.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,775 samples, 0.78%)</title><rect x="862.2" y="355.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,775 samples, 0.78%)</title><rect x="862.2" y="339.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,775 samples, 0.78%)</title><rect x="862.2" y="323.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,775 samples, 0.78%)</title><rect x="862.2" y="307.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,775 samples, 0.78%)</title><rect x="862.2" y="291.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,775 samples, 0.78%)</title><rect x="862.2" y="275.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,775 samples, 0.78%)</title><rect x="862.2" y="259.0" width="9.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="865.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (59,639 samples, 26.18%)</title><rect x="871.4" y="563.0" width="309.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.4" y="574.0">jdk/internal/net/http/HttpClientImpl$Selec..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (841 samples, 0.37%)</title><rect x="871.4" y="547.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="874.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$449/992417271.accept (841 samples, 0.37%)</title><rect x="871.4" y="531.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (841 samples, 0.37%)</title><rect x="871.4" y="515.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (841 samples, 0.37%)</title><rect x="871.4" y="499.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (841 samples, 0.37%)</title><rect x="871.4" y="483.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="874.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (841 samples, 0.37%)</title><rect x="871.4" y="467.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="874.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (841 samples, 0.37%)</title><rect x="871.4" y="451.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (841 samples, 0.37%)</title><rect x="871.4" y="435.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (841 samples, 0.37%)</title><rect x="871.4" y="419.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="874.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (841 samples, 0.37%)</title><rect x="871.4" y="403.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="874.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (841 samples, 0.37%)</title><rect x="871.4" y="387.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (841 samples, 0.37%)</title><rect x="871.4" y="371.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="874.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (841 samples, 0.37%)</title><rect x="871.4" y="355.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (841 samples, 0.37%)</title><rect x="871.4" y="339.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (841 samples, 0.37%)</title><rect x="871.4" y="323.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (841 samples, 0.37%)</title><rect x="871.4" y="307.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="874.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (841 samples, 0.37%)</title><rect x="871.4" y="291.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="874.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (841 samples, 0.37%)</title><rect x="871.4" y="275.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (841 samples, 0.37%)</title><rect x="871.4" y="259.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="874.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (841 samples, 0.37%)</title><rect x="871.4" y="243.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (841 samples, 0.37%)</title><rect x="871.4" y="227.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (834 samples, 0.37%)</title><rect x="871.4" y="211.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="874.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (834 samples, 0.37%)</title><rect x="871.4" y="195.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (834 samples, 0.37%)</title><rect x="871.4" y="179.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (834 samples, 0.37%)</title><rect x="871.4" y="163.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (834 samples, 0.37%)</title><rect x="871.4" y="147.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (834 samples, 0.37%)</title><rect x="871.4" y="131.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="874.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (834 samples, 0.37%)</title><rect x="871.4" y="115.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (834 samples, 0.37%)</title><rect x="871.4" y="99.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="874.4" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (40,433 samples, 17.75%)</title><rect x="875.8" y="547.0" width="209.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="878.8" y="558.0">jdk.internal.net.http.HttpC..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,149 samples, 0.50%)</title><rect x="1085.2" y="547.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1088.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1523868633.run (467 samples, 0.21%)</title><rect x="1085.2" y="531.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (467 samples, 0.21%)</title><rect x="1085.2" y="515.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (467 samples, 0.21%)</title><rect x="1085.2" y="499.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1088.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (467 samples, 0.21%)</title><rect x="1085.2" y="483.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (467 samples, 0.21%)</title><rect x="1085.2" y="467.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (467 samples, 0.21%)</title><rect x="1085.2" y="451.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (467 samples, 0.21%)</title><rect x="1085.2" y="435.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (467 samples, 0.21%)</title><rect x="1085.2" y="419.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (467 samples, 0.21%)</title><rect x="1085.2" y="403.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (467 samples, 0.21%)</title><rect x="1085.2" y="387.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1088.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (467 samples, 0.21%)</title><rect x="1085.2" y="371.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (467 samples, 0.21%)</title><rect x="1085.2" y="355.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1088.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (467 samples, 0.21%)</title><rect x="1085.2" y="339.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1088.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (467 samples, 0.21%)</title><rect x="1085.2" y="323.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1088.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (467 samples, 0.21%)</title><rect x="1085.2" y="307.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1088.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (467 samples, 0.21%)</title><rect x="1085.2" y="291.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (457 samples, 0.20%)</title><rect x="1085.2" y="275.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1088.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (457 samples, 0.20%)</title><rect x="1085.2" y="259.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1088.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (457 samples, 0.20%)</title><rect x="1085.2" y="243.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1088.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (457 samples, 0.20%)</title><rect x="1085.2" y="227.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1088.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (457 samples, 0.20%)</title><rect x="1085.2" y="211.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1088.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (457 samples, 0.20%)</title><rect x="1085.2" y="195.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1088.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (457 samples, 0.20%)</title><rect x="1085.2" y="179.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (457 samples, 0.20%)</title><rect x="1085.2" y="163.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1088.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$320/1685040699.run (682 samples, 0.30%)</title><rect x="1087.6" y="531.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (682 samples, 0.30%)</title><rect x="1087.6" y="515.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (682 samples, 0.30%)</title><rect x="1087.6" y="499.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (682 samples, 0.30%)</title><rect x="1087.6" y="483.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (682 samples, 0.30%)</title><rect x="1087.6" y="467.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (666 samples, 0.29%)</title><rect x="1087.6" y="451.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (666 samples, 0.29%)</title><rect x="1087.6" y="435.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (666 samples, 0.29%)</title><rect x="1087.6" y="419.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (666 samples, 0.29%)</title><rect x="1087.6" y="403.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (666 samples, 0.29%)</title><rect x="1087.6" y="387.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1090.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (666 samples, 0.29%)</title><rect x="1087.6" y="371.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (666 samples, 0.29%)</title><rect x="1087.6" y="355.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (666 samples, 0.29%)</title><rect x="1087.6" y="339.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1090.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,432 samples, 1.07%)</title><rect x="1091.2" y="547.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,432 samples, 1.07%)</title><rect x="1091.2" y="531.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,432 samples, 1.07%)</title><rect x="1091.2" y="515.0" width="12.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1094.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (12,472 samples, 5.48%)</title><rect x="1103.8" y="547.0" width="64.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.8" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (12,472 samples, 5.48%)</title><rect x="1103.8" y="531.0" width="64.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1106.8" y="542.0">jdk.int..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2,243 samples, 0.98%)</title><rect x="1168.4" y="547.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2,243 samples, 0.98%)</title><rect x="1168.4" y="531.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1171.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (2,243 samples, 0.98%)</title><rect x="1168.4" y="515.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2,243 samples, 0.98%)</title><rect x="1168.4" y="499.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (2,243 samples, 0.98%)</title><rect x="1168.4" y="483.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.4" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (2,243 samples, 0.98%)</title><rect x="1168.4" y="467.0" width="11.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1171.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (69 samples, 0.03%)</title><rect x="1180.0" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1183.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (69 samples, 0.03%)</title><rect x="1180.0" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (69 samples, 0.03%)</title><rect x="1180.0" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (69 samples, 0.03%)</title><rect x="1180.0" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (69 samples, 0.03%)</title><rect x="1180.0" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (69 samples, 0.03%)</title><rect x="1180.0" y="467.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1183.0" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,862 samples, 0.82%)</title><rect x="1180.4" y="563.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,862 samples, 0.82%)</title><rect x="1180.4" y="547.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,862 samples, 0.82%)</title><rect x="1180.4" y="531.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,862 samples, 0.82%)</title><rect x="1180.4" y="515.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,862 samples, 0.82%)</title><rect x="1180.4" y="499.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,862 samples, 0.82%)</title><rect x="1180.4" y="483.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1183.4" y="494.0"></text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (1,862 samples, 0.82%)</title><rect x="1180.4" y="467.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (1,862 samples, 0.82%)</title><rect x="1180.4" y="451.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (1,862 samples, 0.82%)</title><rect x="1180.4" y="435.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (1,862 samples, 0.82%)</title><rect x="1180.4" y="419.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,862 samples, 0.82%)</title><rect x="1180.4" y="403.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1183.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,862 samples, 0.82%)</title><rect x="1180.4" y="387.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,862 samples, 0.82%)</title><rect x="1180.4" y="371.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,862 samples, 0.82%)</title><rect x="1180.4" y="355.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,862 samples, 0.82%)</title><rect x="1180.4" y="339.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1183.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,862 samples, 0.82%)</title><rect x="1180.4" y="323.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,862 samples, 0.82%)</title><rect x="1180.4" y="307.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,862 samples, 0.82%)</title><rect x="1180.4" y="291.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,862 samples, 0.82%)</title><rect x="1180.4" y="275.0" width="9.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1183.4" y="286.0"></text>
</g>
</g>
</svg>
