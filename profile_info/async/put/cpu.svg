<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1461"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1461"> </text>
<g id="frames">
<g>
<title>all (4,289 samples, 100.00%)</title><rect x="10.0" y="1427.0" width="1180.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="13.0" y="1438.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="10.0" y="1411.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="1422.0"></text>
</g>
<g>
<title>edge_order(CFGEdge**, CFGEdge**) (1 samples, 0.02%)</title><rect x="10.3" y="1395.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.3" y="1406.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (62 samples, 1.45%)</title><rect x="10.6" y="1411.0" width="17.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.6" y="1422.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (59 samples, 1.38%)</title><rect x="11.4" y="1395.0" width="16.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.4" y="1406.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.02%)</title><rect x="11.4" y="1379.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.4" y="1390.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (57 samples, 1.33%)</title><rect x="11.7" y="1379.0" width="15.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.7" y="1390.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="13.3" y="1363.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.3" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (46 samples, 1.07%)</title><rect x="14.1" y="1363.0" width="12.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.1" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (11 samples, 0.26%)</title><rect x="15.5" y="1347.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.5" y="1358.0"></text>
</g>
<g>
<title>SpinPause (16 samples, 0.37%)</title><rect x="18.5" y="1347.0" width="4.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="21.5" y="1358.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (10 samples, 0.23%)</title><rect x="22.9" y="1347.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="25.9" y="1358.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.02%)</title><rect x="25.7" y="1347.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="28.7" y="1358.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="26.0" y="1347.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="29.0" y="1358.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.05%)</title><rect x="26.2" y="1347.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="29.2" y="1358.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="26.8" y="1363.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="29.8" y="1374.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.02%)</title><rect x="27.1" y="1363.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.1" y="1374.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="27.3" y="1379.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.3" y="1390.0"></text>
</g>
<g>
<title>[no_Java_frame] (5 samples, 0.12%)</title><rect x="27.6" y="1411.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="30.6" y="1422.0"></text>
</g>
<g>
<title>[not_walkable_Java] (12 samples, 0.28%)</title><rect x="29.0" y="1411.0" width="3.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="32.0" y="1422.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="29.0" y="1395.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="32.0" y="1406.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.05%)</title><rect x="29.3" y="1395.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.3" y="1406.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.16%)</title><rect x="29.8" y="1395.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="32.8" y="1406.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.14%)</title><rect x="30.1" y="1379.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="33.1" y="1390.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="30.1" y="1363.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="33.1" y="1374.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="30.4" y="1363.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="33.4" y="1374.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.02%)</title><rect x="30.4" y="1347.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="33.4" y="1358.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.09%)</title><rect x="30.6" y="1363.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="33.6" y="1374.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="31.2" y="1347.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="34.2" y="1358.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.05%)</title><rect x="31.2" y="1331.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="34.2" y="1342.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="31.7" y="1395.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="34.7" y="1406.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.02%)</title><rect x="32.0" y="1395.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="35.0" y="1406.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.44%)</title><rect x="32.3" y="1411.0" width="5.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="35.3" y="1422.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (3 samples, 0.07%)</title><rect x="32.3" y="1395.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="35.3" y="1406.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="33.1" y="1395.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="36.1" y="1406.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="33.4" y="1395.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="36.4" y="1406.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.05%)</title><rect x="33.7" y="1395.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="36.7" y="1406.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (12 samples, 0.28%)</title><rect x="34.2" y="1395.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="37.2" y="1406.0"></text>
</g>
<g>
<title>[unknown_Java] (27 samples, 0.63%)</title><rect x="37.5" y="1411.0" width="7.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="40.5" y="1422.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="37.5" y="1395.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="40.5" y="1406.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.02%)</title><rect x="37.5" y="1379.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="40.5" y="1390.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="37.8" y="1395.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="40.8" y="1406.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="37.8" y="1379.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.8" y="1390.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="38.1" y="1395.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="41.1" y="1406.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.02%)</title><rect x="38.1" y="1379.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="41.1" y="1390.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.02%)</title><rect x="38.3" y="1395.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="41.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="38.6" y="1395.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="41.6" y="1406.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="38.6" y="1379.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="41.6" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.30%)</title><rect x="38.9" y="1395.0" width="3.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="41.9" y="1406.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.12%)</title><rect x="42.5" y="1395.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="45.5" y="1406.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="43.3" y="1379.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="46.3" y="1390.0"></text>
</g>
<g>
<title>sha256_implCompress (4 samples, 0.09%)</title><rect x="43.8" y="1395.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="46.8" y="1406.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="44.9" y="1411.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="47.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,107 samples, 72.44%)</title><rect x="45.5" y="1411.0" width="854.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.5" y="1422.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,107 samples, 72.44%)</title><rect x="45.5" y="1395.0" width="854.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.5" y="1406.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,107 samples, 72.44%)</title><rect x="45.5" y="1379.0" width="854.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.5" y="1390.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (682 samples, 15.90%)</title><rect x="45.5" y="1363.0" width="187.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.5" y="1374.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (514 samples, 11.98%)</title><rect x="45.5" y="1347.0" width="141.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.5" y="1358.0">java/util/concurre..</text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="47.1" y="1331.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="50.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (441 samples, 10.28%)</title><rect x="48.0" y="1331.0" width="121.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.0" y="1342.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="48.2" y="1315.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/741792946.apply (2 samples, 0.05%)</title><rect x="48.5" y="1299.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$181/741792946.apply (437 samples, 10.19%)</title><rect x="49.1" y="1315.0" width="120.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.1" y="1326.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (437 samples, 10.19%)</title><rect x="49.1" y="1299.0" width="120.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.1" y="1310.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (437 samples, 10.19%)</title><rect x="49.1" y="1283.0" width="120.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.1" y="1294.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.02%)</title><rect x="49.1" y="1267.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.02%)</title><rect x="49.1" y="1251.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="49.1" y="1235.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="49.3" y="1267.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="49.3" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="49.3" y="1235.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="49.3" y="1219.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (366 samples, 8.53%)</title><rect x="49.6" y="1267.0" width="100.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.6" y="1278.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (366 samples, 8.53%)</title><rect x="49.6" y="1251.0" width="100.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.6" y="1262.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (366 samples, 8.53%)</title><rect x="49.6" y="1235.0" width="100.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.6" y="1246.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (229 samples, 5.34%)</title><rect x="49.6" y="1219.0" width="63.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.6" y="1230.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (229 samples, 5.34%)</title><rect x="49.6" y="1203.0" width="63.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.6" y="1214.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (225 samples, 5.25%)</title><rect x="49.6" y="1187.0" width="61.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.6" y="1198.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$369/2088470337.apply (225 samples, 5.25%)</title><rect x="49.6" y="1171.0" width="61.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.6" y="1182.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.07%)</title><rect x="49.6" y="1155.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (222 samples, 5.18%)</title><rect x="50.4" y="1155.0" width="61.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.4" y="1166.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (222 samples, 5.18%)</title><rect x="50.4" y="1139.0" width="61.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.4" y="1150.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/704007913.apply (222 samples, 5.18%)</title><rect x="50.4" y="1123.0" width="61.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.4" y="1134.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (222 samples, 5.18%)</title><rect x="50.4" y="1107.0" width="61.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.4" y="1118.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5 samples, 0.12%)</title><rect x="50.4" y="1091.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5 samples, 0.12%)</title><rect x="50.4" y="1075.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5 samples, 0.12%)</title><rect x="50.4" y="1059.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$439/1214099568.apply (1 samples, 0.02%)</title><rect x="51.3" y="1043.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.02%)</title><rect x="51.3" y="1027.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.02%)</title><rect x="51.3" y="1011.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/1245067522.apply (1 samples, 0.02%)</title><rect x="51.3" y="995.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.02%)</title><rect x="51.3" y="979.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.02%)</title><rect x="51.3" y="963.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.02%)</title><rect x="51.3" y="947.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.02%)</title><rect x="51.3" y="931.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.02%)</title><rect x="51.3" y="915.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$479/249029434.accept (1 samples, 0.02%)</title><rect x="51.3" y="899.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1 samples, 0.02%)</title><rect x="51.3" y="883.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.02%)</title><rect x="51.3" y="867.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.02%)</title><rect x="51.3" y="851.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.02%)</title><rect x="51.3" y="835.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="51.3" y="819.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="51.3" y="803.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="51.3" y="787.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="51.3" y="771.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="51.3" y="755.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="51.3" y="739.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="51.3" y="723.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="51.3" y="707.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="51.3" y="691.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="51.3" y="675.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="51.3" y="659.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="51.3" y="643.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="51.3" y="627.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.02%)</title><rect x="51.3" y="611.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.02%)</title><rect x="51.3" y="595.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1 samples, 0.02%)</title><rect x="51.3" y="579.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (1 samples, 0.02%)</title><rect x="51.3" y="563.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.02%)</title><rect x="51.3" y="547.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (1 samples, 0.02%)</title><rect x="51.3" y="531.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateHead (1 samples, 0.02%)</title><rect x="51.3" y="515.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.02%)</title><rect x="51.5" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="51.8" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="51.8" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="52.1" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="52.1" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (215 samples, 5.01%)</title><rect x="52.4" y="1091.0" width="59.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.4" y="1102.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.07%)</title><rect x="53.2" y="1075.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.07%)</title><rect x="53.2" y="1059.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (172 samples, 4.01%)</title><rect x="54.0" y="1075.0" width="47.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.0" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (172 samples, 4.01%)</title><rect x="54.0" y="1059.0" width="47.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.0" y="1070.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (6 samples, 0.14%)</title><rect x="54.3" y="1043.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/719435531.apply (1 samples, 0.02%)</title><rect x="54.8" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$438/1095477642.apply (3 samples, 0.07%)</title><rect x="55.1" y="1027.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$436/719435531.apply (163 samples, 3.80%)</title><rect x="55.9" y="1043.0" width="44.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.9" y="1054.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (163 samples, 3.80%)</title><rect x="55.9" y="1027.0" width="44.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.9" y="1038.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="56.2" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.09%)</title><rect x="56.5" y="1011.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.09%)</title><rect x="56.5" y="995.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.09%)</title><rect x="56.5" y="979.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.09%)</title><rect x="56.5" y="963.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.05%)</title><rect x="57.0" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.05%)</title><rect x="57.0" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.05%)</title><rect x="57.0" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (1 samples, 0.02%)</title><rect x="57.3" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.02%)</title><rect x="57.3" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (46 samples, 1.07%)</title><rect x="57.6" y="1011.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (46 samples, 1.07%)</title><rect x="57.6" y="995.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.6" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="58.7" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="61.7" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="58.7" y="963.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="61.7" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="58.7" y="947.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="61.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (17 samples, 0.40%)</title><rect x="59.0" y="979.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (17 samples, 0.40%)</title><rect x="59.0" y="963.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (17 samples, 0.40%)</title><rect x="59.0" y="947.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17 samples, 0.40%)</title><rect x="59.0" y="931.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.40%)</title><rect x="59.0" y="915.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.0" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="59.0" y="899.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="62.0" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="59.0" y="883.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="62.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.07%)</title><rect x="59.0" y="867.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="62.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="59.0" y="851.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="62.0" y="862.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="59.2" y="851.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="62.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (14 samples, 0.33%)</title><rect x="59.8" y="899.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.05%)</title><rect x="63.1" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (24 samples, 0.56%)</title><rect x="63.6" y="979.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (24 samples, 0.56%)</title><rect x="63.6" y="963.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (23 samples, 0.54%)</title><rect x="63.6" y="947.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (23 samples, 0.54%)</title><rect x="63.6" y="931.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (23 samples, 0.54%)</title><rect x="63.6" y="915.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.6" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.14%)</title><rect x="63.6" y="899.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="66.6" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="63.6" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="66.6" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.12%)</title><rect x="63.9" y="883.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="66.9" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.09%)</title><rect x="64.2" y="867.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="67.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="64.2" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="67.2" y="862.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.07%)</title><rect x="64.5" y="851.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="67.5" y="862.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.02%)</title><rect x="65.3" y="899.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="68.3" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="65.6" y="899.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.6" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="65.6" y="883.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.6" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="65.6" y="867.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.6" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="65.6" y="851.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.6" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="65.6" y="835.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (15 samples, 0.35%)</title><rect x="65.8" y="899.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.8" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="67.5" y="883.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="70.5" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="67.8" y="883.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="70.8" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="67.8" y="867.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="70.8" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.07%)</title><rect x="67.8" y="851.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="70.8" y="862.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.07%)</title><rect x="67.8" y="835.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="70.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.12%)</title><rect x="68.6" y="883.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.6" y="894.0"></text>
</g>
<g>
<title>__libc_write (5 samples, 0.12%)</title><rect x="68.6" y="867.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="71.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="70.0" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (111 samples, 2.59%)</title><rect x="70.3" y="1011.0" width="30.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.3" y="1022.0">jd..</text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.33%)</title><rect x="70.3" y="995.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (14 samples, 0.33%)</title><rect x="70.3" y="979.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (14 samples, 0.33%)</title><rect x="70.3" y="963.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.3" y="974.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="73.3" y="947.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="76.3" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.05%)</title><rect x="74.1" y="995.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.05%)</title><rect x="74.1" y="979.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.1" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.05%)</title><rect x="74.1" y="963.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (69 samples, 1.61%)</title><rect x="74.7" y="995.0" width="18.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.7" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.05%)</title><rect x="74.7" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (7 samples, 0.16%)</title><rect x="75.2" y="979.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.2" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.16%)</title><rect x="75.2" y="963.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.2" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (7 samples, 0.16%)</title><rect x="75.2" y="947.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.2" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.16%)</title><rect x="75.2" y="931.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.16%)</title><rect x="75.2" y="915.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.2" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.16%)</title><rect x="75.2" y="899.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.12%)</title><rect x="75.8" y="883.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.12%)</title><rect x="75.8" y="867.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.12%)</title><rect x="75.8" y="851.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (27 samples, 0.63%)</title><rect x="77.1" y="979.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.07%)</title><rect x="80.4" y="963.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.4" y="974.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="80.4" y="947.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.4" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.07%)</title><rect x="80.4" y="931.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.4" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="81.0" y="915.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="84.0" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.07%)</title><rect x="81.3" y="963.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.3" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.07%)</title><rect x="81.3" y="947.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.3" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.07%)</title><rect x="81.3" y="931.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.3" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.07%)</title><rect x="81.3" y="915.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.3" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.07%)</title><rect x="81.3" y="899.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.3" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.07%)</title><rect x="81.3" y="883.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.3" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (4 samples, 0.09%)</title><rect x="82.1" y="963.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.1" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (4 samples, 0.09%)</title><rect x="82.1" y="947.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.1" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (4 samples, 0.09%)</title><rect x="82.1" y="931.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.1" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.09%)</title><rect x="82.1" y="915.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.1" y="926.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$454/669478227.test (3 samples, 0.07%)</title><rect x="83.2" y="963.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.2" y="974.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3 samples, 0.07%)</title><rect x="83.2" y="947.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/324457684.test (3 samples, 0.07%)</title><rect x="83.2" y="931.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.07%)</title><rect x="83.2" y="915.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.2" y="926.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1810899357.test (3 samples, 0.07%)</title><rect x="83.2" y="899.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.2" y="910.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.07%)</title><rect x="83.2" y="883.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/594427726.test (3 samples, 0.07%)</title><rect x="83.2" y="867.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.07%)</title><rect x="83.2" y="851.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="83.2" y="835.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="83.2" y="819.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="83.2" y="803.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.2" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="84.0" y="963.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="87.0" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="84.3" y="963.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="87.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (33 samples, 0.77%)</title><rect x="84.6" y="979.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.6" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (33 samples, 0.77%)</title><rect x="84.6" y="963.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (33 samples, 0.77%)</title><rect x="84.6" y="947.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.6" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (33 samples, 0.77%)</title><rect x="84.6" y="931.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (28 samples, 0.65%)</title><rect x="85.7" y="915.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.7" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (28 samples, 0.65%)</title><rect x="85.7" y="899.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.7" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (14 samples, 0.33%)</title><rect x="86.5" y="883.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.5" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (12 samples, 0.28%)</title><rect x="87.0" y="867.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.0" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (9 samples, 0.21%)</title><rect x="87.9" y="851.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.trim (8 samples, 0.19%)</title><rect x="88.1" y="835.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (8 samples, 0.19%)</title><rect x="88.1" y="819.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.1" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="89.0" y="803.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="92.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/960733886.test (4 samples, 0.09%)</title><rect x="89.2" y="803.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.23%)</title><rect x="90.3" y="883.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.09%)</title><rect x="91.2" y="867.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.09%)</title><rect x="91.2" y="851.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.09%)</title><rect x="91.2" y="835.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.2" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.07%)</title><rect x="92.3" y="867.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.3" y="878.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="93.1" y="883.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="96.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.02%)</title><rect x="93.4" y="915.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (9 samples, 0.21%)</title><rect x="93.6" y="995.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (9 samples, 0.21%)</title><rect x="93.6" y="979.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (9 samples, 0.21%)</title><rect x="93.6" y="963.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="95.6" y="947.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.6" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="95.6" y="931.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.6" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="95.8" y="947.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="98.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="96.1" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (16 samples, 0.37%)</title><rect x="96.4" y="995.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.4" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.28%)</title><rect x="96.9" y="979.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="97.8" y="963.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="97.8" y="947.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.07%)</title><rect x="97.8" y="931.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.8" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="98.6" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.6" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.12%)</title><rect x="98.9" y="963.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.9" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="100.2" y="979.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="103.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$438/1095477642.apply (1 samples, 0.02%)</title><rect x="100.8" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="101.1" y="1043.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="101.1" y="1027.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (1 samples, 0.02%)</title><rect x="101.3" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (36 samples, 0.84%)</title><rect x="101.6" y="1075.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (35 samples, 0.82%)</title><rect x="101.9" y="1059.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.79%)</title><rect x="102.2" y="1043.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.79%)</title><rect x="102.2" y="1027.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (21 samples, 0.49%)</title><rect x="105.7" y="1011.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (21 samples, 0.49%)</title><rect x="105.7" y="995.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="105.7" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="105.7" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="105.7" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="105.7" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="105.7" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="105.7" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (14 samples, 0.33%)</title><rect x="106.0" y="979.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (12 samples, 0.28%)</title><rect x="106.6" y="963.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10 samples, 0.23%)</title><rect x="107.1" y="947.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (3 samples, 0.07%)</title><rect x="107.4" y="931.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.07%)</title><rect x="107.4" y="915.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.02%)</title><rect x="108.2" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.12%)</title><rect x="108.5" y="931.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.09%)</title><rect x="108.5" y="915.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.02%)</title><rect x="109.6" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.02%)</title><rect x="109.6" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="109.6" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="109.6" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6 samples, 0.14%)</title><rect x="109.9" y="979.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="110.1" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.09%)</title><rect x="110.4" y="963.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.09%)</title><rect x="110.4" y="947.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.09%)</title><rect x="111.5" y="1187.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.12%)</title><rect x="112.6" y="1219.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.09%)</title><rect x="112.9" y="1203.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.09%)</title><rect x="112.9" y="1187.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.9" y="1198.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="113.2" y="1171.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="116.2" y="1182.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$31/1197365356.apply (1 samples, 0.02%)</title><rect x="113.7" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (132 samples, 3.08%)</title><rect x="114.0" y="1219.0" width="36.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.0" y="1230.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.09%)</title><rect x="114.8" y="1203.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.09%)</title><rect x="114.8" y="1187.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="115.4" y="1171.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.4" y="1182.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="115.4" y="1155.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="118.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1092332279.apply (1 samples, 0.02%)</title><rect x="115.6" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.02%)</title><rect x="115.6" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="115.6" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="115.6" y="1123.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="115.6" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.09%)</title><rect x="115.9" y="1203.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.09%)</title><rect x="115.9" y="1187.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.9" y="1198.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="116.5" y="1171.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="119.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (121 samples, 2.82%)</title><rect x="117.0" y="1203.0" width="33.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.0" y="1214.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (121 samples, 2.82%)</title><rect x="117.0" y="1187.0" width="33.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.0" y="1198.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (121 samples, 2.82%)</title><rect x="117.0" y="1171.0" width="33.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.0" y="1182.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (20 samples, 0.47%)</title><rect x="118.4" y="1155.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (2 samples, 0.05%)</title><rect x="122.0" y="1139.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.07%)</title><rect x="122.5" y="1139.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.05%)</title><rect x="123.4" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1 samples, 0.02%)</title><rect x="123.9" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (31 samples, 0.72%)</title><rect x="124.2" y="1155.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (30 samples, 0.70%)</title><rect x="124.2" y="1139.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.2" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.09%)</title><rect x="124.7" y="1123.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="127.7" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.09%)</title><rect x="124.7" y="1107.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="127.7" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.09%)</title><rect x="124.7" y="1091.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="127.7" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.07%)</title><rect x="125.0" y="1075.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="128.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (24 samples, 0.56%)</title><rect x="125.8" y="1123.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.8" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.16%)</title><rect x="125.8" y="1107.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.09%)</title><rect x="125.8" y="1091.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (4 samples, 0.09%)</title><rect x="125.8" y="1075.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.8" y="1086.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.02%)</title><rect x="125.8" y="1059.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.8" y="1070.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.07%)</title><rect x="126.1" y="1059.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.1" y="1070.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.07%)</title><rect x="126.1" y="1043.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.1" y="1054.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.07%)</title><rect x="126.1" y="1027.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.1" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.07%)</title><rect x="126.9" y="1091.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (3 samples, 0.07%)</title><rect x="126.9" y="1075.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.9" y="1086.0"></text>
</g>
<g>
<title>java/util/Objects.hash (3 samples, 0.07%)</title><rect x="126.9" y="1059.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.9" y="1070.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="126.9" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.9" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.05%)</title><rect x="127.2" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (17 samples, 0.40%)</title><rect x="127.8" y="1107.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.8" y="1118.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.07%)</title><rect x="127.8" y="1091.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.8" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.07%)</title><rect x="127.8" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.8" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (3 samples, 0.07%)</title><rect x="127.8" y="1059.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.8" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.05%)</title><rect x="128.6" y="1091.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.6" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (11 samples, 0.26%)</title><rect x="129.1" y="1091.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.1" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlink (2 samples, 0.05%)</title><rect x="131.6" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.6" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.02%)</title><rect x="132.2" y="1091.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.02%)</title><rect x="132.4" y="1139.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.02%)</title><rect x="132.4" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (64 samples, 1.49%)</title><rect x="132.7" y="1155.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.7" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (60 samples, 1.40%)</title><rect x="133.8" y="1139.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.8" y="1150.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (44 samples, 1.03%)</title><rect x="133.8" y="1123.0" width="12.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="136.8" y="1134.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="135.2" y="1107.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="138.2" y="1118.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.02%)</title><rect x="135.5" y="1107.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="138.5" y="1118.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.16%)</title><rect x="135.7" y="1107.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="138.7" y="1118.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="136.0" y="1091.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="139.0" y="1102.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.02%)</title><rect x="136.3" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="139.3" y="1102.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="136.3" y="1075.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="139.3" y="1086.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (2 samples, 0.05%)</title><rect x="136.6" y="1091.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="139.6" y="1102.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.05%)</title><rect x="137.1" y="1091.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="140.1" y="1102.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.05%)</title><rect x="137.7" y="1107.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="140.7" y="1118.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="138.2" y="1107.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="141.2" y="1118.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="138.5" y="1107.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="141.5" y="1118.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="138.8" y="1107.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="141.8" y="1118.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.05%)</title><rect x="139.3" y="1107.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="142.3" y="1118.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (11 samples, 0.26%)</title><rect x="139.9" y="1107.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="142.9" y="1118.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.23%)</title><rect x="139.9" y="1091.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="142.9" y="1102.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.16%)</title><rect x="140.1" y="1075.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="143.1" y="1086.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="141.5" y="1059.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="144.5" y="1070.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.05%)</title><rect x="142.1" y="1075.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="145.1" y="1086.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="142.6" y="1091.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="145.6" y="1102.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.26%)</title><rect x="142.9" y="1107.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="145.9" y="1118.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="143.2" y="1091.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="146.2" y="1102.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.12%)</title><rect x="143.4" y="1091.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="146.4" y="1102.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.07%)</title><rect x="144.0" y="1075.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="147.0" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.09%)</title><rect x="144.8" y="1091.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="147.8" y="1102.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.07%)</title><rect x="145.1" y="1075.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="148.1" y="1086.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.07%)</title><rect x="145.1" y="1059.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="148.1" y="1070.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.07%)</title><rect x="145.1" y="1043.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="148.1" y="1054.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.07%)</title><rect x="145.9" y="1123.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="148.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$241/940228546.run (12 samples, 0.28%)</title><rect x="146.7" y="1123.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (12 samples, 0.28%)</title><rect x="146.7" y="1107.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.7" y="1118.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.05%)</title><rect x="146.7" y="1091.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.7" y="1102.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (10 samples, 0.23%)</title><rect x="147.3" y="1091.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.3" y="1102.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (10 samples, 0.23%)</title><rect x="147.3" y="1075.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.3" y="1086.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.23%)</title><rect x="147.3" y="1059.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.3" y="1070.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (9 samples, 0.21%)</title><rect x="147.6" y="1043.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="150.6" y="1054.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (5 samples, 0.12%)</title><rect x="148.7" y="1027.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="148.9" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="148.9" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="148.9" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="149.2" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.02%)</title><rect x="149.2" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (2 samples, 0.05%)</title><rect x="149.5" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="149.8" y="995.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="149.8" y="979.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.8" y="990.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="149.8" y="963.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="152.8" y="974.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="150.0" y="1123.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="153.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (43 samples, 1.00%)</title><rect x="150.3" y="1267.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.3" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="150.6" y="1251.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="153.6" y="1262.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="150.6" y="1235.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="153.6" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.07%)</title><rect x="150.6" y="1219.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="153.6" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="150.6" y="1203.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="153.6" y="1214.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="150.9" y="1203.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="153.9" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (16 samples, 0.37%)</title><rect x="151.4" y="1251.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.4" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.28%)</title><rect x="152.5" y="1235.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.5" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="153.9" y="1219.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="156.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="154.2" y="1219.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="154.2" y="1203.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="154.2" y="1187.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.02%)</title><rect x="154.4" y="1171.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.4" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="154.7" y="1219.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (3 samples, 0.07%)</title><rect x="155.0" y="1219.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (23 samples, 0.54%)</title><rect x="155.8" y="1251.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (23 samples, 0.54%)</title><rect x="155.8" y="1235.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.8" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="158.0" y="1219.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="161.0" y="1230.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="158.0" y="1203.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="161.0" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="158.3" y="1203.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="161.3" y="1214.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.02%)</title><rect x="158.3" y="1187.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="161.3" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="158.6" y="1187.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="161.6" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="158.8" y="1219.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.8" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (11 samples, 0.26%)</title><rect x="159.1" y="1219.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.1" y="1230.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="159.7" y="1203.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="162.7" y="1214.0"></text>
</g>
<g>
<title>__libc_write (8 samples, 0.19%)</title><rect x="159.9" y="1203.0" width="2.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="162.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (5 samples, 0.12%)</title><rect x="162.1" y="1267.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.1" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="163.2" y="1251.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="166.2" y="1262.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="163.2" y="1235.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="166.2" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="163.2" y="1219.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="166.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (14 samples, 0.33%)</title><rect x="163.5" y="1267.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (13 samples, 0.30%)</title><rect x="163.8" y="1251.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.8" y="1262.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.02%)</title><rect x="164.1" y="1235.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (3 samples, 0.07%)</title><rect x="164.3" y="1235.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.3" y="1246.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (3 samples, 0.07%)</title><rect x="164.3" y="1219.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.3" y="1230.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.07%)</title><rect x="164.3" y="1203.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.3" y="1214.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.07%)</title><rect x="164.3" y="1187.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.3" y="1198.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="164.3" y="1171.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.3" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.02%)</title><rect x="164.3" y="1155.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.3" y="1166.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (2 samples, 0.05%)</title><rect x="164.6" y="1171.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.6" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList.isPositionIndex (2 samples, 0.05%)</title><rect x="164.6" y="1155.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (8 samples, 0.19%)</title><rect x="165.2" y="1235.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.2" y="1246.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (5 samples, 0.12%)</title><rect x="166.0" y="1219.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.0" y="1230.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.02%)</title><rect x="166.0" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.0" y="1214.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.02%)</title><rect x="166.0" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.02%)</title><rect x="166.0" y="1171.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.02%)</title><rect x="166.0" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.0" y="1166.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (4 samples, 0.09%)</title><rect x="166.3" y="1203.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (4 samples, 0.09%)</title><rect x="166.3" y="1187.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.3" y="1198.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="166.3" y="1171.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="169.3" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="166.8" y="1171.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="169.8" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.02%)</title><rect x="167.1" y="1171.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="170.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (7 samples, 0.16%)</title><rect x="167.4" y="1267.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (7 samples, 0.16%)</title><rect x="167.4" y="1251.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (7 samples, 0.16%)</title><rect x="167.4" y="1235.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.4" y="1246.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.16%)</title><rect x="167.4" y="1219.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.4" y="1230.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.16%)</title><rect x="167.4" y="1203.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.07%)</title><rect x="168.5" y="1187.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.5" y="1198.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="168.7" y="1171.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="171.7" y="1182.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="168.7" y="1155.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="171.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (58 samples, 1.35%)</title><rect x="169.3" y="1331.0" width="16.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="169.6" y="1315.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="169.6" y="1299.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="169.6" y="1283.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (56 samples, 1.31%)</title><rect x="169.8" y="1315.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.8" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.12%)</title><rect x="169.8" y="1299.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="170.4" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="170.4" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.4" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$528/67792651.accept (2 samples, 0.05%)</title><rect x="170.7" y="1283.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.7" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$528/67792651.accept (51 samples, 1.19%)</title><rect x="171.2" y="1299.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.2" y="1310.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.05%)</title><rect x="171.2" y="1283.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.2" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (49 samples, 1.14%)</title><rect x="171.8" y="1283.0" width="13.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.8" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (48 samples, 1.12%)</title><rect x="171.8" y="1267.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.8" y="1278.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="172.0" y="1251.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="175.0" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (46 samples, 1.07%)</title><rect x="172.3" y="1251.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="172.9" y="1235.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="172.9" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="172.9" y="1203.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.9" y="1214.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.02%)</title><rect x="173.4" y="1187.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="176.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (38 samples, 0.89%)</title><rect x="173.7" y="1235.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.7" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.30%)</title><rect x="174.2" y="1219.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="177.0" y="1203.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.0" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="177.0" y="1187.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="180.0" y="1198.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="177.0" y="1171.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="180.0" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="177.0" y="1155.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="180.0" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="177.0" y="1139.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="180.0" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="177.0" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="180.0" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="177.3" y="1187.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="180.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="177.5" y="1203.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="177.5" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="177.5" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="177.5" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="177.5" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.54%)</title><rect x="177.8" y="1219.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.54%)</title><rect x="177.8" y="1203.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="177.8" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.02%)</title><rect x="178.1" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (21 samples, 0.49%)</title><rect x="178.4" y="1187.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (21 samples, 0.49%)</title><rect x="178.4" y="1171.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.4" y="1182.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.16%)</title><rect x="178.9" y="1155.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="181.9" y="1166.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="179.8" y="1139.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="182.8" y="1150.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.07%)</title><rect x="180.0" y="1139.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="183.0" y="1150.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="180.3" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="183.3" y="1134.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="180.6" y="1123.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="183.6" y="1134.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="180.6" y="1107.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="183.6" y="1118.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="180.9" y="1155.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="183.9" y="1166.0"></text>
</g>
<g>
<title>__send (10 samples, 0.23%)</title><rect x="181.1" y="1155.0" width="2.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="184.1" y="1166.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.02%)</title><rect x="183.9" y="1155.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="186.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="184.2" y="1235.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="184.7" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="184.7" y="1203.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.7" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ResponseBuilder.getResponse (1 samples, 0.02%)</title><rect x="185.0" y="1267.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.0" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="185.0" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.0" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="185.0" y="1235.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="188.0" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="185.0" y="1219.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="188.0" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="185.0" y="1203.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="188.0" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="185.0" y="1187.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="188.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.02%)</title><rect x="185.3" y="1331.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="185.3" y="1315.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="185.3" y="1299.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="185.3" y="1283.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="185.3" y="1267.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.02%)</title><rect x="185.3" y="1251.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="188.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="185.3" y="1235.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1 samples, 0.02%)</title><rect x="185.3" y="1219.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$193/1622429746.get (2 samples, 0.05%)</title><rect x="185.5" y="1331.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.5" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$125/631303880.get (1 samples, 0.02%)</title><rect x="186.1" y="1331.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.1" y="1342.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="186.4" y="1331.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="189.4" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$125/631303880.get (168 samples, 3.92%)</title><rect x="186.9" y="1347.0" width="46.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.9" y="1358.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$put$10 (168 samples, 3.92%)</title><rect x="186.9" y="1331.0" width="46.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.9" y="1342.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (168 samples, 3.92%)</title><rect x="186.9" y="1315.0" width="46.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.9" y="1326.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (168 samples, 3.92%)</title><rect x="186.9" y="1299.0" width="46.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.9" y="1310.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="186.9" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.9" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="186.9" y="1267.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="189.9" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="186.9" y="1251.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="189.9" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="186.9" y="1235.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="189.9" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="186.9" y="1219.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="189.9" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="186.9" y="1203.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="189.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.containsKey (95 samples, 2.21%)</title><rect x="187.2" y="1283.0" width="26.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.2" y="1294.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doGet (92 samples, 2.15%)</title><rect x="188.0" y="1267.0" width="25.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.0" y="1278.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="189.1" y="1251.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (87 samples, 2.03%)</title><rect x="189.4" y="1251.0" width="23.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.4" y="1262.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.84%)</title><rect x="203.4" y="1235.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.4" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.84%)</title><rect x="203.4" y="1219.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.4" y="1230.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.30%)</title><rect x="203.4" y="1203.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.4" y="1214.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (23 samples, 0.54%)</title><rect x="207.0" y="1203.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.0" y="1214.0"></text>
</g>
<g>
<title>vectorizedMismatch (8 samples, 0.19%)</title><rect x="211.1" y="1187.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="214.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (72 samples, 1.68%)</title><rect x="213.3" y="1283.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="213.9" y="1267.0" width="0.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="216.9" y="1278.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="213.9" y="1251.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="216.9" y="1262.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="214.1" y="1267.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="217.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doGet (1 samples, 0.02%)</title><rect x="214.7" y="1267.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (65 samples, 1.52%)</title><rect x="215.0" y="1267.0" width="17.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.0" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="219.4" y="1251.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.02%)</title><rect x="219.6" y="1251.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.02%)</title><rect x="219.6" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.09%)</title><rect x="219.9" y="1251.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.09%)</title><rect x="219.9" y="1235.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="220.7" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="220.7" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="220.7" y="1187.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="220.7" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (43 samples, 1.00%)</title><rect x="221.0" y="1251.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.0" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.98%)</title><rect x="221.3" y="1235.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.3" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.98%)</title><rect x="221.3" y="1219.0" width="11.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.3" y="1230.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.37%)</title><rect x="221.3" y="1203.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.3" y="1214.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (26 samples, 0.61%)</title><rect x="225.7" y="1203.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.7" y="1214.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.07%)</title><rect x="232.0" y="1187.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="235.0" y="1198.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="232.8" y="1267.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="235.8" y="1278.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="232.8" y="1251.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="235.8" y="1262.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="232.8" y="1235.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="235.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (73 samples, 1.70%)</title><rect x="233.1" y="1363.0" width="20.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.1" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17 samples, 0.40%)</title><rect x="233.1" y="1347.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (17 samples, 0.40%)</title><rect x="233.1" y="1331.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.40%)</title><rect x="233.1" y="1315.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (17 samples, 0.40%)</title><rect x="233.1" y="1299.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.05%)</title><rect x="233.1" y="1283.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.05%)</title><rect x="233.1" y="1267.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="233.1" y="1251.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (15 samples, 0.35%)</title><rect x="233.7" y="1283.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.35%)</title><rect x="233.7" y="1267.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.07%)</title><rect x="233.7" y="1251.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.28%)</title><rect x="234.5" y="1251.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (11 samples, 0.26%)</title><rect x="234.5" y="1235.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.09%)</title><rect x="234.5" y="1219.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.09%)</title><rect x="234.5" y="1203.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.09%)</title><rect x="234.5" y="1187.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.09%)</title><rect x="234.5" y="1171.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.09%)</title><rect x="234.5" y="1155.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="235.6" y="1219.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="235.6" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="235.6" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="235.6" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="235.6" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.14%)</title><rect x="235.9" y="1219.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.14%)</title><rect x="235.9" y="1203.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.14%)</title><rect x="235.9" y="1187.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.14%)</title><rect x="235.9" y="1171.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="235.9" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.12%)</title><rect x="236.2" y="1155.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.2" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="236.2" y="1139.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="239.2" y="1150.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="236.2" y="1123.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="239.2" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.09%)</title><rect x="236.4" y="1139.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="239.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="237.5" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="237.5" y="1219.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="237.5" y="1203.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="237.5" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="237.5" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (56 samples, 1.31%)</title><rect x="237.8" y="1347.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.09%)</title><rect x="237.8" y="1331.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.09%)</title><rect x="237.8" y="1315.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.8" y="1326.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="238.4" y="1299.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="241.4" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$230/1479809634.accept (1 samples, 0.02%)</title><rect x="238.6" y="1299.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (52 samples, 1.21%)</title><rect x="238.9" y="1331.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.9" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$235/2044206769.accept (41 samples, 0.96%)</title><rect x="239.2" y="1315.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.2" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$13 (41 samples, 0.96%)</title><rect x="239.2" y="1299.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.2" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (37 samples, 0.86%)</title><rect x="239.2" y="1283.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.2" y="1294.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (37 samples, 0.86%)</title><rect x="239.2" y="1267.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.12%)</title><rect x="239.2" y="1251.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.12%)</title><rect x="239.2" y="1235.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.12%)</title><rect x="239.2" y="1219.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.2" y="1230.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.02%)</title><rect x="239.5" y="1203.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="242.5" y="1214.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="239.7" y="1203.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="242.7" y="1214.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="239.7" y="1187.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="242.7" y="1198.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="240.0" y="1187.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="243.0" y="1198.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="240.0" y="1171.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="243.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (28 samples, 0.65%)</title><rect x="240.6" y="1251.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.6" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="240.6" y="1235.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.6" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.14%)</title><rect x="240.8" y="1235.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.8" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="242.2" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="242.2" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="245.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="242.2" y="1187.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="242.2" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="242.2" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.49%)</title><rect x="242.5" y="1235.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.49%)</title><rect x="242.5" y="1219.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="242.8" y="1203.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (19 samples, 0.44%)</title><rect x="243.0" y="1203.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (19 samples, 0.44%)</title><rect x="243.0" y="1187.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.0" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.19%)</title><rect x="243.3" y="1171.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="246.3" y="1182.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="243.6" y="1155.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="246.6" y="1166.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="244.1" y="1155.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="247.1" y="1166.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.09%)</title><rect x="244.4" y="1155.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="247.4" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.07%)</title><rect x="244.7" y="1139.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="247.7" y="1150.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="245.2" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="248.2" y="1134.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="245.5" y="1171.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="248.5" y="1182.0"></text>
</g>
<g>
<title>__send (8 samples, 0.19%)</title><rect x="245.8" y="1171.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="248.8" y="1182.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="248.0" y="1171.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="251.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.09%)</title><rect x="248.3" y="1251.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="249.1" y="1235.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="249.1" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.1" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$220/655598435.mergeResponse (4 samples, 0.09%)</title><rect x="249.4" y="1283.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.4" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$9 (4 samples, 0.09%)</title><rect x="249.4" y="1267.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.4" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergePutDeleteResponseBuilders (4 samples, 0.09%)</title><rect x="249.4" y="1251.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.4" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.getStatusCodeFromStatus (2 samples, 0.05%)</title><rect x="249.9" y="1235.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="249.9" y="1219.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="249.9" y="1203.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.9" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$230/1479809634.accept (10 samples, 0.23%)</title><rect x="250.5" y="1315.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.5" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (10 samples, 0.23%)</title><rect x="250.5" y="1299.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.23%)</title><rect x="250.5" y="1283.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.23%)</title><rect x="250.5" y="1267.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.09%)</title><rect x="252.1" y="1251.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.09%)</title><rect x="252.1" y="1235.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.09%)</title><rect x="252.1" y="1219.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.09%)</title><rect x="252.1" y="1203.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.09%)</title><rect x="252.1" y="1187.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.05%)</title><rect x="252.1" y="1171.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="252.1" y="1155.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="252.1" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.05%)</title><rect x="252.1" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.05%)</title><rect x="252.1" y="1107.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="252.7" y="1171.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="252.7" y="1155.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="252.7" y="1139.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="252.7" y="1123.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="252.7" y="1107.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="252.7" y="1091.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.7" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="252.7" y="1075.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="255.7" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="252.7" y="1059.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="255.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="252.9" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="252.9" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="252.9" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="252.9" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="252.9" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="252.9" y="1091.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="255.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (46 samples, 1.07%)</title><rect x="253.2" y="1363.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (46 samples, 1.07%)</title><rect x="253.2" y="1347.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (46 samples, 1.07%)</title><rect x="253.2" y="1331.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.02%)</title><rect x="254.9" y="1315.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (39 samples, 0.91%)</title><rect x="255.1" y="1315.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.1" y="1326.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.26%)</title><rect x="258.4" y="1299.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="261.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5 samples, 0.12%)</title><rect x="261.5" y="1299.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="264.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.07%)</title><rect x="262.8" y="1299.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.05%)</title><rect x="263.7" y="1299.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.7" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/637964804.run (6 samples, 0.14%)</title><rect x="264.2" y="1299.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,128 samples, 26.30%)</title><rect x="265.9" y="1363.0" width="310.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.9" y="1374.0">java/util/concurrent/ThreadPoolExecutor.ge..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (576 samples, 13.43%)</title><rect x="271.6" y="1347.0" width="158.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.6" y="1358.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (482 samples, 11.24%)</title><rect x="275.5" y="1331.0" width="132.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.5" y="1342.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.05%)</title><rect x="277.4" y="1315.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.4" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.02%)</title><rect x="277.4" y="1299.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="280.4" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="277.7" y="1299.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="280.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.02%)</title><rect x="278.0" y="1315.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="278.0" y="1299.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="278.0" y="1283.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (38 samples, 0.89%)</title><rect x="278.2" y="1315.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (38 samples, 0.89%)</title><rect x="278.2" y="1299.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 0.89%)</title><rect x="278.2" y="1283.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="288.1" y="1267.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.1" y="1278.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="288.1" y="1251.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="291.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="288.4" y="1251.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="291.4" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="288.4" y="1235.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="291.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (95 samples, 2.21%)</title><rect x="288.7" y="1315.0" width="26.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.7" y="1326.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (95 samples, 2.21%)</title><rect x="288.7" y="1299.0" width="26.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.7" y="1310.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (79 samples, 1.84%)</title><rect x="292.3" y="1283.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.3" y="1294.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (79 samples, 1.84%)</title><rect x="292.3" y="1267.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.3" y="1278.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (75 samples, 1.75%)</title><rect x="293.4" y="1251.0" width="20.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.4" y="1262.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.05%)</title><rect x="293.7" y="1235.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="296.7" y="1246.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="294.2" y="1235.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="297.2" y="1246.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="294.8" y="1235.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="297.8" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Unpark (39 samples, 0.91%)</title><rect x="295.3" y="1235.0" width="10.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="298.3" y="1246.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="295.9" y="1219.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="298.9" y="1230.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="296.4" y="1219.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="299.4" y="1230.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="296.7" y="1219.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="299.7" y="1230.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (12 samples, 0.28%)</title><rect x="297.0" y="1219.0" width="3.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="300.0" y="1230.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="300.3" y="1219.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="303.3" y="1230.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="300.8" y="1219.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="303.8" y="1230.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.07%)</title><rect x="301.1" y="1219.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="304.1" y="1230.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="301.9" y="1219.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="304.9" y="1230.0"></text>
</g>
<g>
<title>pthread_mutex_lock (14 samples, 0.33%)</title><rect x="302.2" y="1219.0" width="3.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="305.2" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_signal (28 samples, 0.65%)</title><rect x="306.0" y="1235.0" width="7.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="309.0" y="1246.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="313.7" y="1235.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="316.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.07%)</title><rect x="314.0" y="1283.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (13 samples, 0.30%)</title><rect x="314.8" y="1315.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.8" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (13 samples, 0.30%)</title><rect x="314.8" y="1299.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="318.1" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (326 samples, 7.60%)</title><rect x="318.4" y="1315.0" width="89.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.4" y="1326.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (326 samples, 7.60%)</title><rect x="318.4" y="1299.0" width="89.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.4" y="1310.0">jdk/intern..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.09%)</title><rect x="322.0" y="1283.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="325.0" y="1294.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="323.1" y="1283.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="326.1" y="1294.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="323.6" y="1283.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="326.6" y="1294.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.05%)</title><rect x="323.9" y="1283.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="326.9" y="1294.0"></text>
</g>
<g>
<title>Unsafe_Park (175 samples, 4.08%)</title><rect x="324.5" y="1283.0" width="48.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="327.5" y="1294.0">Unsa..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (5 samples, 0.12%)</title><rect x="326.4" y="1267.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="329.4" y="1278.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (9 samples, 0.21%)</title><rect x="327.8" y="1267.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="330.8" y="1278.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="330.2" y="1267.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="333.2" y="1278.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="330.5" y="1267.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="333.5" y="1278.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (56 samples, 1.31%)</title><rect x="330.8" y="1267.0" width="15.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="333.8" y="1278.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="339.0" y="1251.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="342.0" y="1262.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="339.3" y="1251.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="342.3" y="1262.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (11 samples, 0.26%)</title><rect x="339.6" y="1251.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="342.6" y="1262.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.05%)</title><rect x="342.1" y="1235.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="345.1" y="1246.0"></text>
</g>
<g>
<title>Monitor::unlock() (4 samples, 0.09%)</title><rect x="342.6" y="1251.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="345.6" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.19%)</title><rect x="343.7" y="1251.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="346.7" y="1262.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="345.9" y="1251.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="348.9" y="1262.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="346.2" y="1267.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="349.2" y="1278.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.14%)</title><rect x="346.5" y="1267.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="349.5" y="1278.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.05%)</title><rect x="348.1" y="1267.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="351.1" y="1278.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="348.7" y="1267.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="351.7" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="349.2" y="1267.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="352.2" y="1278.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (71 samples, 1.66%)</title><rect x="349.5" y="1267.0" width="19.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="352.5" y="1278.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.05%)</title><rect x="369.0" y="1267.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="372.0" y="1278.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (9 samples, 0.21%)</title><rect x="369.6" y="1267.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="372.6" y="1278.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="372.1" y="1267.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="375.1" y="1278.0"></text>
</g>
<g>
<title>pthread_cond_wait@plt (1 samples, 0.02%)</title><rect x="372.3" y="1267.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="375.3" y="1278.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 2.96%)</title><rect x="372.6" y="1283.0" width="35.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="375.6" y="1294.0">[u..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (9 samples, 0.21%)</title><rect x="372.6" y="1267.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="375.6" y="1278.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.12%)</title><rect x="375.1" y="1267.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="378.1" y="1278.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="376.5" y="1267.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="379.5" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_wait (100 samples, 2.33%)</title><rect x="376.7" y="1267.0" width="27.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="379.7" y="1278.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.14%)</title><rect x="404.3" y="1267.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="407.3" y="1278.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="405.9" y="1267.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="408.9" y="1278.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.05%)</title><rect x="406.2" y="1267.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="409.2" y="1278.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.07%)</title><rect x="406.7" y="1267.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="409.7" y="1278.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="407.6" y="1283.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="410.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (8 samples, 0.19%)</title><rect x="408.1" y="1331.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (8 samples, 0.19%)</title><rect x="408.1" y="1315.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (8 samples, 0.19%)</title><rect x="408.1" y="1299.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="408.1" y="1283.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.14%)</title><rect x="408.4" y="1283.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.14%)</title><rect x="408.4" y="1267.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="411.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.14%)</title><rect x="408.4" y="1251.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.4" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="408.7" y="1235.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="411.7" y="1246.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="408.7" y="1219.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="411.7" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="408.7" y="1203.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="411.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="409.2" y="1235.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="412.2" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="409.2" y="1219.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="412.2" y="1230.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="409.8" y="1219.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="412.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="410.0" y="1283.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (72 samples, 1.68%)</title><rect x="410.3" y="1331.0" width="19.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (72 samples, 1.68%)</title><rect x="410.3" y="1315.0" width="19.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (72 samples, 1.68%)</title><rect x="410.3" y="1299.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (72 samples, 1.68%)</title><rect x="410.3" y="1283.0" width="19.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.05%)</title><rect x="415.0" y="1267.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="418.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (53 samples, 1.24%)</title><rect x="415.5" y="1267.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.5" y="1278.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="416.1" y="1251.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="419.1" y="1262.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="416.4" y="1251.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="419.4" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Unpark (25 samples, 0.58%)</title><rect x="416.6" y="1251.0" width="6.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="419.6" y="1262.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="416.9" y="1235.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="419.9" y="1246.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="417.5" y="1235.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="420.5" y="1246.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (5 samples, 0.12%)</title><rect x="417.7" y="1235.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="420.7" y="1246.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="419.1" y="1235.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="422.1" y="1246.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.14%)</title><rect x="419.4" y="1235.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="422.4" y="1246.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="420.5" y="1219.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="423.5" y="1230.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="420.8" y="1219.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="423.8" y="1230.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="421.0" y="1235.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="424.0" y="1246.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.07%)</title><rect x="421.6" y="1235.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="424.6" y="1246.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="422.4" y="1235.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="425.4" y="1246.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="423.0" y="1235.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="426.0" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_signal (23 samples, 0.54%)</title><rect x="423.5" y="1251.0" width="6.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="426.5" y="1262.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="429.8" y="1251.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="432.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="430.1" y="1347.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="430.1" y="1331.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.1" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$528/67792651.accept (1 samples, 0.02%)</title><rect x="430.1" y="1315.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.1" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (1 samples, 0.02%)</title><rect x="430.1" y="1299.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.1" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (1 samples, 0.02%)</title><rect x="430.1" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="430.1" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (530 samples, 12.36%)</title><rect x="430.4" y="1347.0" width="145.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.4" y="1358.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (403 samples, 9.40%)</title><rect x="430.7" y="1331.0" width="110.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.7" y="1342.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.02%)</title><rect x="430.9" y="1315.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.9" y="1326.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="430.9" y="1299.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="433.9" y="1310.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.02%)</title><rect x="430.9" y="1283.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="433.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.02%)</title><rect x="431.2" y="1315.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="431.2" y="1299.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="431.2" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (33 samples, 0.77%)</title><rect x="431.5" y="1315.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (33 samples, 0.77%)</title><rect x="431.5" y="1299.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 0.77%)</title><rect x="431.5" y="1283.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.09%)</title><rect x="439.5" y="1267.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.5" y="1278.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="439.5" y="1251.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="442.5" y="1262.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="439.5" y="1235.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="442.5" y="1246.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="439.7" y="1219.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="442.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="440.0" y="1251.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="443.0" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="440.0" y="1235.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="443.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (87 samples, 2.03%)</title><rect x="440.6" y="1315.0" width="23.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.6" y="1326.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (87 samples, 2.03%)</title><rect x="440.6" y="1299.0" width="23.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.6" y="1310.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (68 samples, 1.59%)</title><rect x="444.4" y="1283.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (68 samples, 1.59%)</title><rect x="444.4" y="1267.0" width="18.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (64 samples, 1.49%)</title><rect x="445.5" y="1251.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.5" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Unpark (40 samples, 0.93%)</title><rect x="446.1" y="1235.0" width="11.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="449.1" y="1246.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="446.9" y="1219.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="449.9" y="1230.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="447.4" y="1219.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="450.4" y="1230.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.09%)</title><rect x="447.7" y="1219.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="450.7" y="1230.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.05%)</title><rect x="448.8" y="1219.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="451.8" y="1230.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.12%)</title><rect x="449.4" y="1219.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="452.4" y="1230.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.21%)</title><rect x="450.7" y="1219.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="453.7" y="1230.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="452.9" y="1203.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="455.9" y="1214.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="453.2" y="1219.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="456.2" y="1230.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="453.8" y="1219.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="456.8" y="1230.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="454.0" y="1219.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="457.0" y="1230.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.07%)</title><rect x="454.3" y="1219.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="457.3" y="1230.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.07%)</title><rect x="455.1" y="1219.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="458.1" y="1230.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.09%)</title><rect x="456.0" y="1219.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="459.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="457.1" y="1235.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="460.1" y="1246.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.05%)</title><rect x="457.1" y="1219.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="460.1" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.40%)</title><rect x="457.6" y="1235.0" width="4.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="460.6" y="1246.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (3 samples, 0.07%)</title><rect x="462.3" y="1235.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="465.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (5 samples, 0.12%)</title><rect x="463.1" y="1283.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (14 samples, 0.33%)</title><rect x="464.5" y="1315.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (14 samples, 0.33%)</title><rect x="464.5" y="1299.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (265 samples, 6.18%)</title><rect x="468.4" y="1315.0" width="72.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.4" y="1326.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (262 samples, 6.11%)</title><rect x="469.2" y="1299.0" width="72.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.2" y="1310.0">jdk/inte..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="470.6" y="1283.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="473.6" y="1294.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.07%)</title><rect x="470.8" y="1283.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="473.8" y="1294.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="471.7" y="1283.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="474.7" y="1294.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="472.2" y="1283.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="475.2" y="1294.0"></text>
</g>
<g>
<title>Unsafe_Park (129 samples, 3.01%)</title><rect x="472.5" y="1283.0" width="35.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="475.5" y="1294.0">Uns..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (6 samples, 0.14%)</title><rect x="473.6" y="1267.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="476.6" y="1278.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="475.2" y="1267.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="478.2" y="1278.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="475.5" y="1267.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="478.5" y="1278.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="475.8" y="1267.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="478.8" y="1278.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (31 samples, 0.72%)</title><rect x="476.1" y="1267.0" width="8.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="479.1" y="1278.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.16%)</title><rect x="481.0" y="1251.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="484.0" y="1262.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="482.7" y="1235.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="485.7" y="1246.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.05%)</title><rect x="482.9" y="1251.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="485.9" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.09%)</title><rect x="483.5" y="1251.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="486.5" y="1262.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.16%)</title><rect x="484.6" y="1267.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="487.6" y="1278.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (3 samples, 0.07%)</title><rect x="486.5" y="1267.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="489.5" y="1278.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.09%)</title><rect x="487.3" y="1267.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="490.3" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="488.4" y="1267.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="491.4" y="1278.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (56 samples, 1.31%)</title><rect x="488.7" y="1267.0" width="15.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="491.7" y="1278.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (5 samples, 0.12%)</title><rect x="504.1" y="1267.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="507.1" y="1278.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (6 samples, 0.14%)</title><rect x="505.5" y="1267.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="508.5" y="1278.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.07%)</title><rect x="507.1" y="1267.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="510.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 2.70%)</title><rect x="508.0" y="1283.0" width="31.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="511.0" y="1294.0">[u..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (5 samples, 0.12%)</title><rect x="508.0" y="1267.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="511.0" y="1278.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="509.3" y="1267.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="512.3" y="1278.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.05%)</title><rect x="509.9" y="1267.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="512.9" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_wait (96 samples, 2.24%)</title><rect x="510.4" y="1267.0" width="26.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="513.4" y="1278.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.12%)</title><rect x="536.9" y="1267.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="539.9" y="1278.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="538.2" y="1267.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="541.2" y="1278.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.07%)</title><rect x="538.8" y="1267.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="541.8" y="1278.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="539.6" y="1267.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="542.6" y="1278.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.12%)</title><rect x="539.9" y="1283.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="542.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="541.3" y="1315.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (62 samples, 1.45%)</title><rect x="541.5" y="1331.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (62 samples, 1.45%)</title><rect x="541.5" y="1315.0" width="17.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (52 samples, 1.21%)</title><rect x="543.2" y="1299.0" width="14.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (34 samples, 0.79%)</title><rect x="543.5" y="1283.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.05%)</title><rect x="547.3" y="1267.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="547.6" y="1251.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (6 samples, 0.14%)</title><rect x="547.9" y="1267.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (6 samples, 0.14%)</title><rect x="547.9" y="1251.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (6 samples, 0.14%)</title><rect x="547.9" y="1235.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (12 samples, 0.28%)</title><rect x="549.5" y="1267.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (12 samples, 0.28%)</title><rect x="549.5" y="1251.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (7 samples, 0.16%)</title><rect x="550.1" y="1235.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.07%)</title><rect x="552.0" y="1235.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (16 samples, 0.37%)</title><rect x="552.8" y="1283.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.33%)</title><rect x="553.4" y="1267.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.33%)</title><rect x="553.4" y="1251.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.4" y="1262.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="553.4" y="1235.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="556.4" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.16%)</title><rect x="553.6" y="1235.0" width="2.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="556.6" y="1246.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="553.9" y="1219.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="556.9" y="1230.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="554.2" y="1203.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="557.2" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.09%)</title><rect x="554.5" y="1219.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="557.5" y="1230.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.12%)</title><rect x="555.6" y="1235.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="558.6" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.12%)</title><rect x="555.6" y="1219.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="558.6" y="1230.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="556.9" y="1235.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="559.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.02%)</title><rect x="557.2" y="1283.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.09%)</title><rect x="557.5" y="1299.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.09%)</title><rect x="557.5" y="1283.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (64 samples, 1.49%)</title><rect x="558.6" y="1331.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (64 samples, 1.49%)</title><rect x="558.6" y="1315.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (64 samples, 1.49%)</title><rect x="558.6" y="1299.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (64 samples, 1.49%)</title><rect x="558.6" y="1283.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (64 samples, 1.49%)</title><rect x="558.6" y="1267.0" width="17.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.6" y="1278.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="558.6" y="1251.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="561.6" y="1262.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="558.9" y="1251.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="561.9" y="1262.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="559.1" y="1251.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="562.1" y="1262.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="559.4" y="1251.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="562.4" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Unpark (37 samples, 0.86%)</title><rect x="559.7" y="1251.0" width="10.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="562.7" y="1262.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="560.8" y="1235.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="563.8" y="1246.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.05%)</title><rect x="561.3" y="1235.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="564.3" y="1246.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="561.9" y="1235.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="564.9" y="1246.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (10 samples, 0.23%)</title><rect x="562.4" y="1235.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="565.4" y="1246.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="565.2" y="1235.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="568.2" y="1246.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="565.5" y="1235.0" width="0.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="568.5" y="1246.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.07%)</title><rect x="565.7" y="1235.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="568.7" y="1246.0"></text>
</g>
<g>
<title>pthread_mutex_lock (12 samples, 0.28%)</title><rect x="566.6" y="1235.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="569.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="569.9" y="1251.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="572.9" y="1262.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.05%)</title><rect x="569.9" y="1235.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="572.9" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.47%)</title><rect x="570.4" y="1251.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="573.4" y="1262.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="575.9" y="1251.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="578.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$462/1898580517.run (170 samples, 3.96%)</title><rect x="576.2" y="1363.0" width="46.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.2" y="1374.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (170 samples, 3.96%)</title><rect x="576.2" y="1347.0" width="46.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="579.2" y="1358.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (170 samples, 3.96%)</title><rect x="576.2" y="1331.0" width="46.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.2" y="1342.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (159 samples, 3.71%)</title><rect x="579.0" y="1315.0" width="43.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.0" y="1326.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 3.71%)</title><rect x="579.0" y="1299.0" width="43.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.0" y="1310.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 3.71%)</title><rect x="579.0" y="1283.0" width="43.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.0" y="1294.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (158 samples, 3.68%)</title><rect x="579.2" y="1267.0" width="43.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.2" y="1278.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (157 samples, 3.66%)</title><rect x="579.5" y="1251.0" width="43.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.5" y="1262.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (157 samples, 3.66%)</title><rect x="579.5" y="1235.0" width="43.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.5" y="1246.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (155 samples, 3.61%)</title><rect x="579.5" y="1219.0" width="42.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.5" y="1230.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (2 samples, 0.05%)</title><rect x="579.5" y="1203.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (153 samples, 3.57%)</title><rect x="580.1" y="1203.0" width="42.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="583.1" y="1214.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (71 samples, 1.66%)</title><rect x="580.6" y="1187.0" width="19.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (57 samples, 1.33%)</title><rect x="580.9" y="1171.0" width="15.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (57 samples, 1.33%)</title><rect x="580.9" y="1155.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (54 samples, 1.26%)</title><rect x="581.4" y="1139.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (54 samples, 1.26%)</title><rect x="581.4" y="1123.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (12 samples, 0.28%)</title><rect x="581.4" y="1107.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.14%)</title><rect x="582.0" y="1091.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.0" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="582.3" y="1075.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="585.3" y="1086.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$31/1197365356.apply (2 samples, 0.05%)</title><rect x="582.8" y="1075.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$484/1129193864.apply (1 samples, 0.02%)</title><rect x="583.4" y="1075.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$484/1129193864.apply (4 samples, 0.09%)</title><rect x="583.6" y="1091.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.09%)</title><rect x="583.6" y="1075.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.09%)</title><rect x="583.6" y="1059.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.07%)</title><rect x="583.9" y="1043.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.07%)</title><rect x="583.9" y="1027.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.07%)</title><rect x="583.9" y="1011.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (40 samples, 0.93%)</title><rect x="584.7" y="1107.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (38 samples, 0.89%)</title><rect x="585.3" y="1091.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="588.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="585.3" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="588.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$439/1214099568.apply (2 samples, 0.05%)</title><rect x="585.6" y="1059.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$439/1214099568.apply (35 samples, 0.82%)</title><rect x="586.1" y="1075.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (35 samples, 0.82%)</title><rect x="586.1" y="1059.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="589.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (35 samples, 0.82%)</title><rect x="586.1" y="1043.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/1245067522.apply (35 samples, 0.82%)</title><rect x="586.1" y="1027.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (35 samples, 0.82%)</title><rect x="586.1" y="1011.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.12%)</title><rect x="586.1" y="995.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.09%)</title><rect x="586.4" y="979.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.09%)</title><rect x="586.4" y="963.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.09%)</title><rect x="586.4" y="947.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (30 samples, 0.70%)</title><rect x="587.5" y="995.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (13 samples, 0.30%)</title><rect x="588.0" y="979.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (13 samples, 0.30%)</title><rect x="588.0" y="963.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (13 samples, 0.30%)</title><rect x="588.0" y="947.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$471/263178148.accept (3 samples, 0.07%)</title><rect x="588.0" y="931.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.02%)</title><rect x="588.6" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.02%)</title><rect x="588.6" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.02%)</title><rect x="588.6" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="588.6" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$479/249029434.accept (10 samples, 0.23%)</title><rect x="588.9" y="931.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (10 samples, 0.23%)</title><rect x="588.9" y="915.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (10 samples, 0.23%)</title><rect x="588.9" y="899.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (10 samples, 0.23%)</title><rect x="588.9" y="883.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (10 samples, 0.23%)</title><rect x="588.9" y="867.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.23%)</title><rect x="588.9" y="851.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.23%)</title><rect x="588.9" y="835.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.21%)</title><rect x="589.1" y="819.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.21%)</title><rect x="589.1" y="803.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.07%)</title><rect x="589.1" y="787.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (1 samples, 0.02%)</title><rect x="589.1" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="589.1" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="589.1" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="589.1" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="589.4" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="589.4" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="589.4" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="589.4" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="589.4" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.02%)</title><rect x="589.7" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.02%)</title><rect x="589.7" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6 samples, 0.14%)</title><rect x="590.0" y="787.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (10 samples, 0.23%)</title><rect x="591.6" y="979.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (9 samples, 0.21%)</title><rect x="591.9" y="963.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (4 samples, 0.09%)</title><rect x="591.9" y="947.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="592.2" y="931.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (1 samples, 0.02%)</title><rect x="592.2" y="915.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="595.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="592.2" y="899.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="592.2" y="883.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="592.2" y="867.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (2 samples, 0.05%)</title><rect x="592.4" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (5 samples, 0.12%)</title><rect x="593.0" y="947.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (5 samples, 0.12%)</title><rect x="594.4" y="979.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="595.7" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="595.7" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="595.7" y="1075.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.7" y="1086.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="596.0" y="1107.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="599.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.02%)</title><rect x="596.3" y="1139.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (10 samples, 0.23%)</title><rect x="596.6" y="1171.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (7 samples, 0.16%)</title><rect x="597.4" y="1155.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (4 samples, 0.09%)</title><rect x="597.4" y="1139.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (3 samples, 0.07%)</title><rect x="598.5" y="1139.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.07%)</title><rect x="599.3" y="1171.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$502/671420084.run (2 samples, 0.05%)</title><rect x="599.6" y="1155.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.05%)</title><rect x="599.6" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (2 samples, 0.05%)</title><rect x="599.6" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (2 samples, 0.05%)</title><rect x="599.6" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="599.6" y="1091.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="599.6" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.05%)</title><rect x="600.1" y="1187.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.05%)</title><rect x="600.1" y="1171.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.05%)</title><rect x="600.1" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (78 samples, 1.82%)</title><rect x="600.7" y="1187.0" width="21.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.7" y="1198.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (78 samples, 1.82%)</title><rect x="600.7" y="1171.0" width="21.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.7" y="1182.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (78 samples, 1.82%)</title><rect x="600.7" y="1155.0" width="21.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.7" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (3 samples, 0.07%)</title><rect x="601.5" y="1139.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (72 samples, 1.68%)</title><rect x="602.3" y="1139.0" width="19.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$494/565247082.run (3 samples, 0.07%)</title><rect x="602.3" y="1123.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.07%)</title><rect x="602.3" y="1107.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.05%)</title><rect x="602.6" y="1091.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.02%)</title><rect x="602.9" y="1075.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (69 samples, 1.61%)</title><rect x="603.2" y="1123.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (59 samples, 1.38%)</title><rect x="603.2" y="1107.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (59 samples, 1.38%)</title><rect x="603.2" y="1091.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.07%)</title><rect x="603.2" y="1075.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.07%)</title><rect x="603.2" y="1059.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.07%)</title><rect x="603.2" y="1043.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.07%)</title><rect x="603.2" y="1027.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.2" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (56 samples, 1.31%)</title><rect x="604.0" y="1075.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.0" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (52 samples, 1.21%)</title><rect x="605.1" y="1059.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (12 samples, 0.28%)</title><rect x="605.1" y="1043.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (12 samples, 0.28%)</title><rect x="605.1" y="1027.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (12 samples, 0.28%)</title><rect x="605.1" y="1011.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.1" y="1022.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="607.8" y="995.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="610.8" y="1006.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="608.1" y="995.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="611.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (40 samples, 0.93%)</title><rect x="608.4" y="1043.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (40 samples, 0.93%)</title><rect x="608.4" y="1027.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.4" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.12%)</title><rect x="610.3" y="1011.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="613.3" y="1022.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (2 samples, 0.05%)</title><rect x="611.7" y="1011.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="614.7" y="1022.0"></text>
</g>
<g>
<title>writev (26 samples, 0.61%)</title><rect x="612.2" y="1011.0" width="7.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="615.2" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (10 samples, 0.23%)</title><rect x="619.4" y="1107.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.4" y="1118.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.05%)</title><rect x="621.3" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.3" y="1102.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.02%)</title><rect x="621.6" y="1075.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.02%)</title><rect x="621.9" y="1091.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.05%)</title><rect x="622.1" y="1219.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.02%)</title><rect x="622.7" y="1315.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (664 samples, 15.48%)</title><rect x="623.0" y="1363.0" width="182.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.0" y="1374.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (663 samples, 15.46%)</title><rect x="623.2" y="1347.0" width="182.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.2" y="1358.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="624.1" y="1331.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="624.1" y="1315.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="624.1" y="1299.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="624.1" y="1283.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="624.1" y="1267.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="624.1" y="1251.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (324 samples, 7.55%)</title><rect x="624.3" y="1331.0" width="89.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.3" y="1342.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (321 samples, 7.48%)</title><rect x="625.2" y="1315.0" width="88.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.2" y="1326.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (318 samples, 7.41%)</title><rect x="626.0" y="1299.0" width="87.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.0" y="1310.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.02%)</title><rect x="626.3" y="1283.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.02%)</title><rect x="626.3" y="1267.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.remove (3 samples, 0.07%)</title><rect x="626.5" y="1283.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (34 samples, 0.79%)</title><rect x="627.4" y="1283.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (34 samples, 0.79%)</title><rect x="627.4" y="1267.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (34 samples, 0.79%)</title><rect x="627.4" y="1251.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (34 samples, 0.79%)</title><rect x="627.4" y="1235.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (33 samples, 0.77%)</title><rect x="627.6" y="1219.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (29 samples, 0.68%)</title><rect x="628.8" y="1203.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (29 samples, 0.68%)</title><rect x="628.8" y="1187.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (26 samples, 0.61%)</title><rect x="629.6" y="1171.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.02%)</title><rect x="629.6" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.6" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="629.6" y="1139.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="632.6" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="629.6" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="632.6" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="629.6" y="1107.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="632.6" y="1118.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="629.6" y="1091.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="632.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (25 samples, 0.58%)</title><rect x="629.9" y="1155.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.9" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.09%)</title><rect x="631.8" y="1139.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="634.8" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.09%)</title><rect x="631.8" y="1123.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="634.8" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.09%)</title><rect x="631.8" y="1107.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="634.8" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="632.1" y="1091.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="635.1" y="1102.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="632.3" y="1091.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="635.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (14 samples, 0.33%)</title><rect x="632.9" y="1139.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.9" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="634.8" y="1123.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="637.8" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="634.8" y="1107.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="637.8" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="634.8" y="1091.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="637.8" y="1102.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="634.8" y="1075.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="637.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.12%)</title><rect x="635.4" y="1123.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.4" y="1134.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.09%)</title><rect x="635.6" y="1107.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="638.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.07%)</title><rect x="636.7" y="1283.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="636.7" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="636.7" y="1251.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$400/490244969.get$Lambda (1 samples, 0.02%)</title><rect x="636.7" y="1235.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.05%)</title><rect x="637.0" y="1267.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.05%)</title><rect x="637.6" y="1283.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (7 samples, 0.16%)</title><rect x="638.1" y="1283.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (7 samples, 0.16%)</title><rect x="638.1" y="1267.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.05%)</title><rect x="639.5" y="1251.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (267 samples, 6.23%)</title><rect x="640.0" y="1283.0" width="73.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.0" y="1294.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (267 samples, 6.23%)</title><rect x="640.0" y="1267.0" width="73.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.0" y="1278.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (267 samples, 6.23%)</title><rect x="640.0" y="1251.0" width="73.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.0" y="1262.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (267 samples, 6.23%)</title><rect x="640.0" y="1235.0" width="73.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.0" y="1246.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (148 samples, 3.45%)</title><rect x="640.0" y="1219.0" width="40.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.0" y="1230.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (148 samples, 3.45%)</title><rect x="640.0" y="1203.0" width="40.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.0" y="1214.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (147 samples, 3.43%)</title><rect x="640.3" y="1187.0" width="40.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.3" y="1198.0">jav..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="640.9" y="1171.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="643.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (142 samples, 3.31%)</title><rect x="641.1" y="1171.0" width="39.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.1" y="1182.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (142 samples, 3.31%)</title><rect x="641.1" y="1155.0" width="39.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.1" y="1166.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (142 samples, 3.31%)</title><rect x="641.1" y="1139.0" width="39.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.1" y="1150.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (133 samples, 3.10%)</title><rect x="641.1" y="1123.0" width="36.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.1" y="1134.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (125 samples, 2.91%)</title><rect x="641.4" y="1107.0" width="34.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.4" y="1118.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (125 samples, 2.91%)</title><rect x="641.4" y="1091.0" width="34.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.4" y="1102.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (102 samples, 2.38%)</title><rect x="642.0" y="1075.0" width="28.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.0" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (14 samples, 0.33%)</title><rect x="642.8" y="1059.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.8" y="1070.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.09%)</title><rect x="643.6" y="1043.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="646.6" y="1054.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$31/1197365356.apply (1 samples, 0.02%)</title><rect x="644.7" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1057916871.apply (3 samples, 0.07%)</title><rect x="645.0" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/2133978669.apply (3 samples, 0.07%)</title><rect x="645.8" y="1043.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$191/1057916871.apply (63 samples, 1.47%)</title><rect x="646.6" y="1059.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (63 samples, 1.47%)</title><rect x="646.6" y="1043.0" width="17.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4 samples, 0.09%)</title><rect x="646.6" y="1027.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="649.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.09%)</title><rect x="646.6" y="1011.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (59 samples, 1.38%)</title><rect x="647.7" y="1027.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="647.7" y="1011.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="648.0" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (56 samples, 1.31%)</title><rect x="648.6" y="1011.0" width="15.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (53 samples, 1.24%)</title><rect x="649.1" y="995.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.1" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (20 samples, 0.47%)</title><rect x="649.4" y="979.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="652.4" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.07%)</title><rect x="649.4" y="963.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.4" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.07%)</title><rect x="649.4" y="947.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.4" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.07%)</title><rect x="649.4" y="931.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.4" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.07%)</title><rect x="649.4" y="915.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.4" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.07%)</title><rect x="649.4" y="899.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="649.9" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="649.9" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="649.9" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (17 samples, 0.40%)</title><rect x="650.2" y="963.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.2" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.37%)</title><rect x="650.5" y="947.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (16 samples, 0.37%)</title><rect x="650.5" y="931.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (15 samples, 0.35%)</title><rect x="650.8" y="915.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.19%)</title><rect x="650.8" y="899.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (7 samples, 0.16%)</title><rect x="651.0" y="883.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (7 samples, 0.16%)</title><rect x="651.0" y="867.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.0" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (6 samples, 0.14%)</title><rect x="651.3" y="851.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (6 samples, 0.14%)</title><rect x="651.3" y="835.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.3" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$546/1409960794.applyAsLong (6 samples, 0.14%)</title><rect x="651.3" y="819.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (6 samples, 0.14%)</title><rect x="651.3" y="803.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.05%)</title><rect x="651.9" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="651.9" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (2 samples, 0.05%)</title><rect x="652.4" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.16%)</title><rect x="653.0" y="899.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.0" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.02%)</title><rect x="654.6" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.6" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="654.6" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="654.6" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="654.9" y="979.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="654.9" y="963.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (29 samples, 0.68%)</title><rect x="655.7" y="979.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$558/902590235.run (29 samples, 0.68%)</title><rect x="655.7" y="963.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (29 samples, 0.68%)</title><rect x="655.7" y="947.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.09%)</title><rect x="655.7" y="931.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="656.3" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (11 samples, 0.26%)</title><rect x="656.8" y="931.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.02%)</title><rect x="657.1" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.02%)</title><rect x="657.1" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="657.1" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.21%)</title><rect x="657.4" y="915.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.21%)</title><rect x="657.4" y="899.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="659.6" y="883.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (14 samples, 0.33%)</title><rect x="659.8" y="931.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (14 samples, 0.33%)</title><rect x="659.8" y="915.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.8" y="926.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (11 samples, 0.26%)</title><rect x="659.8" y="899.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.8" y="910.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (3 samples, 0.07%)</title><rect x="659.8" y="883.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.8" y="894.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (8 samples, 0.19%)</title><rect x="660.7" y="883.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.7" y="894.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (8 samples, 0.19%)</title><rect x="660.7" y="867.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.7" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="661.2" y="851.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="664.2" y="862.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.12%)</title><rect x="661.5" y="851.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="664.5" y="862.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (3 samples, 0.07%)</title><rect x="662.0" y="835.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="665.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="662.9" y="899.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="662.9" y="883.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="663.1" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/PutDeleteBodyHandler.apply (1 samples, 0.02%)</title><rect x="663.7" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/2133978669.apply (22 samples, 0.51%)</title><rect x="664.0" y="1059.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (22 samples, 0.51%)</title><rect x="664.0" y="1043.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (20 samples, 0.47%)</title><rect x="664.5" y="1027.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.5" y="1038.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.02%)</title><rect x="665.9" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.9" y="1022.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="665.9" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.9" y="1006.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="665.9" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="668.9" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.02%)</title><rect x="665.9" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (12 samples, 0.28%)</title><rect x="666.2" y="1011.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (12 samples, 0.28%)</title><rect x="666.2" y="995.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.2" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (11 samples, 0.26%)</title><rect x="666.4" y="979.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.4" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (4 samples, 0.09%)</title><rect x="666.7" y="963.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.7" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (4 samples, 0.09%)</title><rect x="666.7" y="947.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.7" y="958.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (4 samples, 0.09%)</title><rect x="666.7" y="931.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.7" y="942.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (4 samples, 0.09%)</title><rect x="666.7" y="915.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.7" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.14%)</title><rect x="667.8" y="963.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.8" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (6 samples, 0.14%)</title><rect x="667.8" y="947.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.8" y="958.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.05%)</title><rect x="668.1" y="931.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="671.1" y="942.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="668.1" y="915.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="671.1" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="668.4" y="915.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="671.4" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="668.6" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="671.6" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (2 samples, 0.05%)</title><rect x="668.9" y="931.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="671.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (2 samples, 0.05%)</title><rect x="669.5" y="1011.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (16 samples, 0.37%)</title><rect x="670.0" y="1075.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15 samples, 0.35%)</title><rect x="670.3" y="1059.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="670.3" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.3" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="670.6" y="1027.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="673.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$442/1523195787.apply (13 samples, 0.30%)</title><rect x="670.8" y="1043.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (13 samples, 0.30%)</title><rect x="670.8" y="1027.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (9 samples, 0.21%)</title><rect x="670.8" y="1011.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (9 samples, 0.21%)</title><rect x="670.8" y="995.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.8" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="671.1" y="979.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="674.1" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="671.1" y="963.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="674.1" y="974.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="671.1" y="947.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="674.1" y="958.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (7 samples, 0.16%)</title><rect x="671.4" y="979.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.4" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (7 samples, 0.16%)</title><rect x="671.4" y="963.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.4" y="974.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="671.4" y="947.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="674.4" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.02%)</title><rect x="671.9" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.9" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.07%)</title><rect x="672.2" y="947.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="675.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.02%)</title><rect x="673.0" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.09%)</title><rect x="673.3" y="1011.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.07%)</title><rect x="673.6" y="995.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.07%)</title><rect x="673.6" y="979.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.02%)</title><rect x="674.1" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.09%)</title><rect x="674.4" y="1075.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.07%)</title><rect x="674.7" y="1059.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.07%)</title><rect x="674.7" y="1043.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.7" y="1054.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="675.5" y="1075.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="678.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$519/1406514091.apply (7 samples, 0.16%)</title><rect x="675.8" y="1107.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (7 samples, 0.16%)</title><rect x="675.8" y="1091.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (7 samples, 0.16%)</title><rect x="675.8" y="1075.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.14%)</title><rect x="675.8" y="1059.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.14%)</title><rect x="675.8" y="1043.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.14%)</title><rect x="675.8" y="1027.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="677.4" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (1 samples, 0.02%)</title><rect x="677.4" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9 samples, 0.21%)</title><rect x="677.7" y="1123.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.09%)</title><rect x="677.7" y="1107.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.12%)</title><rect x="678.8" y="1107.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.8" y="1118.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="679.1" y="1091.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="682.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$519/1406514091.apply (3 samples, 0.07%)</title><rect x="679.4" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="680.2" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="683.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (114 samples, 2.66%)</title><rect x="680.7" y="1219.0" width="31.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.7" y="1230.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="682.7" y="1203.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (4 samples, 0.09%)</title><rect x="682.9" y="1203.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (17 samples, 0.40%)</title><rect x="684.0" y="1203.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.28%)</title><rect x="685.4" y="1187.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.28%)</title><rect x="685.4" y="1171.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.4" y="1182.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="688.5" y="1155.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="691.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (15 samples, 0.35%)</title><rect x="688.7" y="1203.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13 samples, 0.30%)</title><rect x="689.3" y="1187.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (13 samples, 0.30%)</title><rect x="689.3" y="1171.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.3" y="1182.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="692.3" y="1155.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="695.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (3 samples, 0.07%)</title><rect x="692.9" y="1203.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.9" y="1214.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="693.1" y="1187.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="696.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (22 samples, 0.51%)</title><rect x="693.7" y="1203.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.7" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (22 samples, 0.51%)</title><rect x="693.7" y="1187.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.7" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (22 samples, 0.51%)</title><rect x="693.7" y="1171.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.7" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="694.5" y="1155.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="697.5" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="694.5" y="1139.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="697.5" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="694.5" y="1123.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="697.5" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="694.5" y="1107.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="697.5" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="694.5" y="1091.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="697.5" y="1102.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="694.5" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="697.5" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="694.8" y="1155.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="697.8" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (17 samples, 0.40%)</title><rect x="695.1" y="1155.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.1" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (15 samples, 0.35%)</title><rect x="695.6" y="1139.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.6" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.28%)</title><rect x="696.4" y="1123.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.4" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.09%)</title><rect x="696.7" y="1107.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.7" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (3 samples, 0.07%)</title><rect x="697.0" y="1091.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.0" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.07%)</title><rect x="697.0" y="1075.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.07%)</title><rect x="697.0" y="1059.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.07%)</title><rect x="697.0" y="1043.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.0" y="1054.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="697.0" y="1027.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="700.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/960733886.test (1 samples, 0.02%)</title><rect x="697.5" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.5" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.16%)</title><rect x="697.8" y="1107.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.14%)</title><rect x="698.1" y="1091.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.14%)</title><rect x="698.1" y="1075.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.14%)</title><rect x="698.1" y="1059.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (45 samples, 1.05%)</title><rect x="699.7" y="1203.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="699.7" y="1187.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="699.7" y="1171.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="699.7" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.7" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="699.7" y="1139.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="700.0" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="700.0" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="703.0" y="1182.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="700.0" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.0" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="700.0" y="1139.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="703.0" y="1150.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="700.0" y="1123.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="703.0" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="700.0" y="1107.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="703.0" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="700.0" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="703.0" y="1102.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="700.0" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="703.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (43 samples, 1.00%)</title><rect x="700.3" y="1187.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.19%)</title><rect x="700.3" y="1171.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.19%)</title><rect x="700.3" y="1155.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.19%)</title><rect x="700.3" y="1139.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.3" y="1150.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="702.2" y="1123.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="705.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="702.5" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="702.5" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.5" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="702.5" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.5" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="702.5" y="1123.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="705.5" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="702.5" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="705.5" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="702.5" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="705.5" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="702.5" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="705.5" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="702.5" y="1059.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="705.5" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="702.5" y="1043.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="705.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (12 samples, 0.28%)</title><rect x="702.8" y="1171.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (6 samples, 0.14%)</title><rect x="704.1" y="1155.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.1" y="1166.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="705.8" y="1155.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="708.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.trim (8 samples, 0.19%)</title><rect x="706.1" y="1171.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (8 samples, 0.19%)</title><rect x="706.1" y="1155.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.1" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="708.0" y="1139.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="708.3" y="1171.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.3" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="708.5" y="1171.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.5" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="708.5" y="1155.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.5" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="708.5" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.5" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="708.5" y="1123.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.5" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="708.5" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.02%)</title><rect x="708.5" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.5" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (12 samples, 0.28%)</title><rect x="708.8" y="1171.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.8" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.07%)</title><rect x="709.4" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="709.9" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="709.9" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.09%)</title><rect x="710.2" y="1155.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$532/205363253.apply (3 samples, 0.07%)</title><rect x="711.3" y="1155.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (3 samples, 0.07%)</title><rect x="711.3" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.07%)</title><rect x="711.3" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$384/137700567.accept (5 samples, 0.12%)</title><rect x="712.1" y="1219.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (4 samples, 0.09%)</title><rect x="712.4" y="1203.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.05%)</title><rect x="712.9" y="1187.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (335 samples, 7.81%)</title><rect x="713.5" y="1331.0" width="92.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="716.5" y="1342.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (334 samples, 7.79%)</title><rect x="713.8" y="1315.0" width="91.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.8" y="1326.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (330 samples, 7.69%)</title><rect x="713.8" y="1299.0" width="90.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.8" y="1310.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$341/145997440.run (325 samples, 7.58%)</title><rect x="715.1" y="1283.0" width="89.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.1" y="1294.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (325 samples, 7.58%)</title><rect x="715.1" y="1267.0" width="89.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.1" y="1278.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (2 samples, 0.05%)</title><rect x="715.1" y="1251.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.05%)</title><rect x="715.1" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (319 samples, 7.44%)</title><rect x="715.7" y="1251.0" width="87.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.7" y="1262.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (317 samples, 7.39%)</title><rect x="715.7" y="1235.0" width="87.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.7" y="1246.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (312 samples, 7.27%)</title><rect x="717.1" y="1219.0" width="85.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.1" y="1230.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/106021012.run (222 samples, 5.18%)</title><rect x="717.1" y="1203.0" width="61.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.1" y="1214.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (222 samples, 5.18%)</title><rect x="717.1" y="1187.0" width="61.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.1" y="1198.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (222 samples, 5.18%)</title><rect x="717.1" y="1171.0" width="61.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.1" y="1182.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (12 samples, 0.28%)</title><rect x="717.1" y="1155.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.1" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (8 samples, 0.19%)</title><rect x="717.1" y="1139.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.1" y="1150.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (8 samples, 0.19%)</title><rect x="717.1" y="1123.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.1" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (8 samples, 0.19%)</title><rect x="717.1" y="1107.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.1" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.19%)</title><rect x="717.1" y="1091.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.1" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (8 samples, 0.19%)</title><rect x="717.1" y="1075.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.16%)</title><rect x="717.3" y="1059.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (7 samples, 0.16%)</title><rect x="717.3" y="1043.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.12%)</title><rect x="717.9" y="1027.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.02%)</title><rect x="719.0" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.0" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (4 samples, 0.09%)</title><rect x="719.3" y="1139.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.3" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.09%)</title><rect x="719.3" y="1123.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.3" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.09%)</title><rect x="719.3" y="1107.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.09%)</title><rect x="719.3" y="1091.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.3" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.07%)</title><rect x="719.3" y="1075.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (3 samples, 0.07%)</title><rect x="719.3" y="1059.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.3" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="719.8" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.8" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="720.1" y="1075.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (207 samples, 4.83%)</title><rect x="720.4" y="1155.0" width="56.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.4" y="1166.0">jdk/in..</text>
</g>
<g>
<title>java/time/Instant.now (8 samples, 0.19%)</title><rect x="720.4" y="1139.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.4" y="1150.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (8 samples, 0.19%)</title><rect x="720.4" y="1123.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.09%)</title><rect x="721.5" y="1107.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.5" y="1118.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.09%)</title><rect x="721.5" y="1091.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="724.5" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="721.5" y="1075.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="724.5" y="1086.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.02%)</title><rect x="722.0" y="1075.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="725.0" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.02%)</title><rect x="722.3" y="1075.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="725.3" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="722.3" y="1059.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="725.3" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="722.3" y="1043.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="725.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (199 samples, 4.64%)</title><rect x="722.6" y="1139.0" width="54.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.6" y="1150.0">jdk/i..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.28%)</title><rect x="723.9" y="1123.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="726.9" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="723.9" y="1107.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="726.9" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.26%)</title><rect x="724.2" y="1107.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="727.2" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.26%)</title><rect x="724.2" y="1091.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="727.2" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.12%)</title><rect x="724.5" y="1075.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="727.5" y="1086.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.12%)</title><rect x="725.9" y="1075.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="728.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (135 samples, 3.15%)</title><rect x="727.2" y="1123.0" width="37.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.2" y="1134.0">jdk..</text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (9 samples, 0.21%)</title><rect x="761.9" y="1107.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (6 samples, 0.14%)</title><rect x="764.4" y="1123.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.4" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.14%)</title><rect x="764.4" y="1107.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.14%)</title><rect x="764.4" y="1091.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (5 samples, 0.12%)</title><rect x="764.7" y="1075.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.7" y="1086.0"></text>
</g>
<g>
<title>java/util/Objects.equals (5 samples, 0.12%)</title><rect x="764.7" y="1059.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.7" y="1070.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (5 samples, 0.12%)</title><rect x="764.7" y="1043.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.7" y="1054.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (5 samples, 0.12%)</title><rect x="764.7" y="1027.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (41 samples, 0.96%)</title><rect x="766.0" y="1123.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.02%)</title><rect x="766.3" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.02%)</title><rect x="766.3" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="766.3" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="766.3" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="766.3" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.3" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="766.3" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.3" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="766.3" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.3" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="766.3" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.3" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="766.3" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.3" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="766.3" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (39 samples, 0.91%)</title><rect x="766.6" y="1107.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (12 samples, 0.28%)</title><rect x="766.6" y="1091.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (12 samples, 0.28%)</title><rect x="766.6" y="1075.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (12 samples, 0.28%)</title><rect x="766.6" y="1059.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.16%)</title><rect x="766.6" y="1043.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.16%)</title><rect x="766.6" y="1027.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.6" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="766.6" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="769.6" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="766.6" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="769.6" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="766.6" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="769.6" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="766.6" y="963.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="769.6" y="974.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.02%)</title><rect x="766.9" y="1011.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="769.9" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="767.1" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.1" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="767.1" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.1" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="767.1" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.1" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="767.1" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.1" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="767.1" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.09%)</title><rect x="767.4" y="1011.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="768.2" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.2" y="1006.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.02%)</title><rect x="768.2" y="979.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="771.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (5 samples, 0.12%)</title><rect x="768.5" y="1043.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.reset (4 samples, 0.09%)</title><rect x="768.8" y="1027.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.8" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="769.6" y="1011.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="772.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.02%)</title><rect x="769.9" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.02%)</title><rect x="769.9" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="769.9" y="1059.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="769.9" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="769.9" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="772.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.02%)</title><rect x="769.9" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="769.9" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26 samples, 0.61%)</title><rect x="770.2" y="1091.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26 samples, 0.61%)</title><rect x="770.2" y="1075.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (25 samples, 0.58%)</title><rect x="770.2" y="1059.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (24 samples, 0.56%)</title><rect x="770.2" y="1043.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 0.56%)</title><rect x="770.2" y="1027.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.2" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="770.7" y="1011.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="773.7" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="770.7" y="995.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="773.7" y="1006.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="770.7" y="979.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="773.7" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (21 samples, 0.49%)</title><rect x="771.0" y="1011.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.0" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="772.6" y="995.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="775.6" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="772.6" y="979.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="775.6" y="990.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="772.6" y="963.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="775.6" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="772.9" y="963.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="775.9" y="974.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="773.2" y="947.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="776.2" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (12 samples, 0.28%)</title><rect x="773.5" y="995.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.5" y="1006.0"></text>
</g>
<g>
<title>__libc_write (11 samples, 0.26%)</title><rect x="773.5" y="979.0" width="3.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="776.5" y="990.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="776.5" y="979.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="779.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.02%)</title><rect x="776.8" y="1043.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.8" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="776.8" y="1027.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="779.8" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="776.8" y="1011.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="779.8" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="776.8" y="995.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="779.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (1 samples, 0.02%)</title><rect x="777.0" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.02%)</title><rect x="777.0" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.07%)</title><rect x="777.3" y="1155.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.02%)</title><rect x="777.9" y="1139.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$573/1624205294.accept (11 samples, 0.26%)</title><rect x="778.1" y="1203.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (11 samples, 0.26%)</title><rect x="778.1" y="1187.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (11 samples, 0.26%)</title><rect x="778.1" y="1171.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.21%)</title><rect x="778.1" y="1155.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.21%)</title><rect x="778.1" y="1139.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.19%)</title><rect x="778.1" y="1123.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.16%)</title><rect x="778.4" y="1107.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="778.4" y="1091.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/2146705485.accept (2 samples, 0.05%)</title><rect x="778.7" y="1075.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/2146705485.accept (1 samples, 0.02%)</title><rect x="779.2" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.02%)</title><rect x="779.2" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.02%)</title><rect x="779.2" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.02%)</title><rect x="779.2" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.02%)</title><rect x="779.2" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$595/1364654810.accept (3 samples, 0.07%)</title><rect x="779.5" y="1091.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (3 samples, 0.07%)</title><rect x="779.5" y="1075.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (3 samples, 0.07%)</title><rect x="779.5" y="1059.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.5" y="1070.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (3 samples, 0.07%)</title><rect x="779.5" y="1043.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.5" y="1054.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="780.3" y="1123.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="783.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$392/998733248.accept (2 samples, 0.05%)</title><rect x="780.6" y="1155.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.02%)</title><rect x="780.9" y="1139.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (78 samples, 1.82%)</title><rect x="781.2" y="1203.0" width="21.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="784.2" y="1214.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (78 samples, 1.82%)</title><rect x="781.2" y="1187.0" width="21.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.2" y="1198.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (78 samples, 1.82%)</title><rect x="781.2" y="1171.0" width="21.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.2" y="1182.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (78 samples, 1.82%)</title><rect x="781.2" y="1155.0" width="21.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.2" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (78 samples, 1.82%)</title><rect x="781.2" y="1139.0" width="21.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.2" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (76 samples, 1.77%)</title><rect x="781.4" y="1123.0" width="21.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (75 samples, 1.75%)</title><rect x="781.7" y="1107.0" width="20.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="784.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.12%)</title><rect x="781.7" y="1091.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.7" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="781.7" y="1075.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="784.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$608/356097117.accept (3 samples, 0.07%)</title><rect x="782.3" y="1075.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="785.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$608/356097117.accept (70 samples, 1.63%)</title><rect x="783.1" y="1091.0" width="19.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (66 samples, 1.54%)</title><rect x="784.2" y="1075.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (66 samples, 1.54%)</title><rect x="784.2" y="1059.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (66 samples, 1.54%)</title><rect x="784.2" y="1043.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.19%)</title><rect x="784.2" y="1027.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$619/314910917.apply (5 samples, 0.12%)</title><rect x="785.0" y="1011.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (5 samples, 0.12%)</title><rect x="785.0" y="995.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="788.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="786.4" y="1027.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="786.4" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="786.4" y="995.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (57 samples, 1.33%)</title><rect x="786.7" y="1027.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="787.2" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="787.2" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.2" y="1006.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="787.2" y="979.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="790.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (54 samples, 1.26%)</title><rect x="787.5" y="1011.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (50 samples, 1.17%)</title><rect x="787.5" y="995.0" width="13.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.5" y="1006.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="788.0" y="979.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="791.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (39 samples, 0.91%)</title><rect x="788.6" y="979.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (39 samples, 0.91%)</title><rect x="788.6" y="963.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (39 samples, 0.91%)</title><rect x="788.6" y="947.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (39 samples, 0.91%)</title><rect x="788.6" y="931.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (39 samples, 0.91%)</title><rect x="788.6" y="915.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.84%)</title><rect x="789.4" y="899.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.4" y="910.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.05%)</title><rect x="789.4" y="883.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="792.4" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.30%)</title><rect x="790.0" y="883.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="793.0" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="790.2" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="793.2" y="878.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="790.5" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="793.5" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="790.8" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="793.8" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.09%)</title><rect x="791.1" y="867.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="794.1" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.12%)</title><rect x="792.2" y="867.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="795.2" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.47%)</title><rect x="793.5" y="883.0" width="5.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="796.5" y="894.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="799.1" y="883.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="802.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.07%)</title><rect x="799.3" y="979.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$613/1259413759.accept (2 samples, 0.05%)</title><rect x="800.2" y="979.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="803.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$196/1405076149.accept (2 samples, 0.05%)</title><rect x="800.7" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$616/762811245.accept (2 samples, 0.05%)</title><rect x="801.3" y="995.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (2 samples, 0.05%)</title><rect x="801.3" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$196/1405076149.accept (2 samples, 0.05%)</title><rect x="801.8" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (2 samples, 0.05%)</title><rect x="801.8" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.05%)</title><rect x="801.8" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.02%)</title><rect x="802.1" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="802.4" y="1123.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="802.6" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="802.6" y="1187.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.05%)</title><rect x="802.9" y="1235.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.05%)</title><rect x="802.9" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="802.9" y="1203.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="802.9" y="1187.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (4 samples, 0.09%)</title><rect x="803.5" y="1251.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4 samples, 0.09%)</title><rect x="803.5" y="1235.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.05%)</title><rect x="804.0" y="1219.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.09%)</title><rect x="804.6" y="1299.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.6" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/637964804.run (344 samples, 8.02%)</title><rect x="805.7" y="1363.0" width="94.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.7" y="1374.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (344 samples, 8.02%)</title><rect x="805.7" y="1347.0" width="94.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.7" y="1358.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.44%)</title><rect x="805.7" y="1331.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.28%)</title><rect x="807.3" y="1315.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.28%)</title><rect x="807.3" y="1299.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.3" y="1310.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="809.5" y="1283.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="812.5" y="1294.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="809.8" y="1283.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="812.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="810.6" y="1315.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="810.6" y="1299.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.6" y="1310.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="810.6" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.6" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="810.6" y="1267.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="813.6" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (40 samples, 0.93%)</title><rect x="810.9" y="1331.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.9" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (40 samples, 0.93%)</title><rect x="810.9" y="1315.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.9" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (4 samples, 0.09%)</title><rect x="810.9" y="1299.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.09%)</title><rect x="810.9" y="1283.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.07%)</title><rect x="810.9" y="1267.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="811.4" y="1251.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.4" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="811.4" y="1235.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="814.4" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="811.4" y="1219.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="814.4" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="811.4" y="1203.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="814.4" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="811.4" y="1187.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="814.4" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="811.4" y="1171.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="814.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="811.7" y="1267.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.7" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (36 samples, 0.84%)</title><rect x="812.0" y="1299.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="812.0" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="812.0" y="1267.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.0" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$125/631303880.get$Lambda (1 samples, 0.02%)</title><rect x="812.0" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (35 samples, 0.82%)</title><rect x="812.3" y="1283.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (35 samples, 0.82%)</title><rect x="812.3" y="1267.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 0.75%)</title><rect x="812.8" y="1251.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (32 samples, 0.75%)</title><rect x="812.8" y="1235.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.14%)</title><rect x="813.1" y="1219.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.14%)</title><rect x="813.1" y="1203.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.14%)</title><rect x="813.1" y="1187.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.14%)</title><rect x="813.1" y="1171.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (6 samples, 0.14%)</title><rect x="813.1" y="1155.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="814.7" y="1219.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="814.7" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="814.7" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="814.7" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="814.7" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="814.7" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.56%)</title><rect x="815.0" y="1219.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.56%)</title><rect x="815.0" y="1203.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.56%)</title><rect x="815.0" y="1187.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.56%)</title><rect x="815.0" y="1171.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="815.0" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.54%)</title><rect x="815.3" y="1155.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.3" y="1166.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="815.6" y="1139.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="818.6" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.35%)</title><rect x="815.8" y="1139.0" width="4.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="818.8" y="1150.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="816.4" y="1123.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="819.4" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.05%)</title><rect x="816.9" y="1123.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="819.9" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="817.5" y="1123.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="820.5" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="818.0" y="1123.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="821.0" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="818.9" y="1123.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="821.9" y="1134.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.07%)</title><rect x="819.1" y="1123.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="822.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="820.0" y="1139.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="823.0" y="1150.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="820.0" y="1123.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="823.0" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.12%)</title><rect x="820.2" y="1139.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="823.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (1 samples, 0.02%)</title><rect x="821.6" y="1251.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.6" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (285 samples, 6.64%)</title><rect x="821.9" y="1331.0" width="78.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.9" y="1342.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (54 samples, 1.26%)</title><rect x="822.2" y="1315.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="825.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="823.5" y="1299.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.5" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1 samples, 0.02%)</title><rect x="823.8" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="826.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isCancelled (1 samples, 0.02%)</title><rect x="824.1" y="1299.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.1" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (23 samples, 0.54%)</title><rect x="824.4" y="1299.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.4" y="1310.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (6 samples, 0.14%)</title><rect x="824.4" y="1283.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.4" y="1294.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (6 samples, 0.14%)</title><rect x="824.4" y="1267.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.4" y="1278.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (6 samples, 0.14%)</title><rect x="824.4" y="1251.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="827.4" y="1262.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (6 samples, 0.14%)</title><rect x="824.4" y="1235.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.4" y="1246.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (4 samples, 0.09%)</title><rect x="824.9" y="1219.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.9" y="1230.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig (3 samples, 0.07%)</title><rect x="824.9" y="1203.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.9" y="1214.0"></text>
</g>
<g>
<title>sha256_implCompress (1 samples, 0.02%)</title><rect x="825.2" y="1187.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="828.2" y="1198.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (1 samples, 0.02%)</title><rect x="825.5" y="1187.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.5" y="1198.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (1 samples, 0.02%)</title><rect x="825.7" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.7" y="1214.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (1 samples, 0.02%)</title><rect x="825.7" y="1187.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.7" y="1198.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (12 samples, 0.28%)</title><rect x="826.0" y="1283.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.0" y="1294.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (12 samples, 0.28%)</title><rect x="826.0" y="1267.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.0" y="1278.0"></text>
</g>
<g>
<title>java/security/Security.getSpiClass (2 samples, 0.05%)</title><rect x="826.0" y="1251.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="826.0" y="1235.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.0" y="1246.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (10 samples, 0.23%)</title><rect x="826.6" y="1251.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.6" y="1262.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (3 samples, 0.07%)</title><rect x="826.6" y="1235.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.6" y="1246.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (3 samples, 0.07%)</title><rect x="826.6" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.6" y="1230.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (3 samples, 0.07%)</title><rect x="826.6" y="1203.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.07%)</title><rect x="826.6" y="1187.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (3 samples, 0.07%)</title><rect x="826.6" y="1171.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (3 samples, 0.07%)</title><rect x="826.6" y="1155.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (3 samples, 0.07%)</title><rect x="826.6" y="1139.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="829.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (3 samples, 0.07%)</title><rect x="826.6" y="1123.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.6" y="1134.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (7 samples, 0.16%)</title><rect x="827.4" y="1235.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.4" y="1246.0"></text>
</g>
<g>
<title>java/security/Provider.getService (5 samples, 0.12%)</title><rect x="827.9" y="1219.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.9" y="1230.0"></text>
</g>
<g>
<title>java/security/Provider.ensureLegacyParsed (1 samples, 0.02%)</title><rect x="827.9" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="828.2" y="1203.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.isEmpty (2 samples, 0.05%)</title><rect x="828.8" y="1203.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.sumCount (2 samples, 0.05%)</title><rect x="828.8" y="1187.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="829.0" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.0" y="1182.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (5 samples, 0.12%)</title><rect x="829.3" y="1283.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.3" y="1294.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineUpdate (5 samples, 0.12%)</title><rect x="829.3" y="1267.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.3" y="1278.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (2 samples, 0.05%)</title><rect x="830.1" y="1251.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.1" y="1262.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="830.1" y="1235.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="833.1" y="1246.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="830.4" y="1235.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="833.4" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (23 samples, 0.54%)</title><rect x="830.7" y="1299.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="833.7" y="1310.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.02%)</title><rect x="831.0" y="1283.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.0" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.02%)</title><rect x="831.0" y="1267.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.0" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.02%)</title><rect x="831.0" y="1251.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.0" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (1 samples, 0.02%)</title><rect x="831.0" y="1235.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.0" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="831.0" y="1219.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.0" y="1230.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (4 samples, 0.09%)</title><rect x="831.2" y="1283.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.2" y="1294.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (4 samples, 0.09%)</title><rect x="831.2" y="1267.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.2" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (4 samples, 0.09%)</title><rect x="831.2" y="1251.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.2" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (3 samples, 0.07%)</title><rect x="831.5" y="1235.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.5" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (3 samples, 0.07%)</title><rect x="831.5" y="1219.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.5" y="1230.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="832.1" y="1203.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="835.1" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (1 samples, 0.02%)</title><rect x="832.3" y="1283.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.3" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.02%)</title><rect x="832.3" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.3" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="832.3" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.3" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (2 samples, 0.05%)</title><rect x="832.6" y="1283.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.6" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.05%)</title><rect x="832.6" y="1267.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.6" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (14 samples, 0.33%)</title><rect x="833.2" y="1283.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.2" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.26%)</title><rect x="834.0" y="1267.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.0" y="1278.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="834.3" y="1251.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="837.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="834.8" y="1251.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="834.8" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="834.8" y="1219.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.02%)</title><rect x="835.1" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.02%)</title><rect x="835.4" y="1251.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.4" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="835.6" y="1251.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.6" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.07%)</title><rect x="836.2" y="1251.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.2" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (230 samples, 5.36%)</title><rect x="837.0" y="1315.0" width="63.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.0" y="1326.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (216 samples, 5.04%)</title><rect x="837.6" y="1299.0" width="59.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.6" y="1310.0">ru/mai..</text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="837.8" y="1283.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.8" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="837.8" y="1267.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.8" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="837.8" y="1251.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.8" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="837.8" y="1235.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.8" y="1246.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="837.8" y="1219.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.8" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.02%)</title><rect x="838.7" y="1283.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.7" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="838.7" y="1267.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.7" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.02%)</title><rect x="838.7" y="1251.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.7" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.02%)</title><rect x="838.7" y="1235.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (137 samples, 3.19%)</title><rect x="838.9" y="1283.0" width="37.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.9" y="1294.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (137 samples, 3.19%)</title><rect x="838.9" y="1267.0" width="37.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.9" y="1278.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (136 samples, 3.17%)</title><rect x="839.2" y="1251.0" width="37.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.2" y="1262.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (136 samples, 3.17%)</title><rect x="839.2" y="1235.0" width="37.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.2" y="1246.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.05%)</title><rect x="839.8" y="1219.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="839.8" y="1203.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (98 samples, 2.28%)</title><rect x="840.3" y="1219.0" width="27.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.3" y="1230.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (12 samples, 0.28%)</title><rect x="840.3" y="1203.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.3" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.14%)</title><rect x="840.3" y="1187.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.3" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.14%)</title><rect x="840.3" y="1171.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.3" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.14%)</title><rect x="840.3" y="1155.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.3" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.14%)</title><rect x="840.3" y="1139.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.3" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.14%)</title><rect x="840.3" y="1123.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="843.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="841.1" y="1107.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="841.1" y="1091.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.07%)</title><rect x="841.1" y="1075.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.1" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.14%)</title><rect x="842.0" y="1187.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.0" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.12%)</title><rect x="842.2" y="1171.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.2" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.07%)</title><rect x="842.2" y="1155.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.2" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.07%)</title><rect x="842.2" y="1139.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.2" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.05%)</title><rect x="842.2" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="845.2" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="842.2" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.2" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="842.2" y="1091.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="842.5" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.5" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.02%)</title><rect x="842.5" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.5" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="842.8" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.8" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.05%)</title><rect x="843.1" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.1" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.05%)</title><rect x="843.1" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.1" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="843.1" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.1" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="843.1" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.1" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14 samples, 0.33%)</title><rect x="843.6" y="1203.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.6" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14 samples, 0.33%)</title><rect x="843.6" y="1187.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.6" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (13 samples, 0.30%)</title><rect x="843.9" y="1171.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.9" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.30%)</title><rect x="843.9" y="1155.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.9" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (13 samples, 0.30%)</title><rect x="843.9" y="1139.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.9" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.30%)</title><rect x="843.9" y="1123.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (11 samples, 0.26%)</title><rect x="843.9" y="1107.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.9" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (10 samples, 0.23%)</title><rect x="843.9" y="1091.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.9" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (10 samples, 0.23%)</title><rect x="843.9" y="1075.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.14%)</title><rect x="843.9" y="1059.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.14%)</title><rect x="843.9" y="1043.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.9" y="1054.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="844.7" y="1027.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="847.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/360207322.test (4 samples, 0.09%)</title><rect x="845.5" y="1059.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (4 samples, 0.09%)</title><rect x="845.5" y="1043.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.05%)</title><rect x="845.5" y="1027.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (2 samples, 0.05%)</title><rect x="846.1" y="1027.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.1" y="1038.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.02%)</title><rect x="846.6" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="846.9" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="846.9" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.9" y="1102.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.02%)</title><rect x="846.9" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.9" y="1086.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="847.2" y="1107.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="850.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (69 samples, 1.61%)</title><rect x="847.5" y="1203.0" width="19.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.5" y="1214.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (69 samples, 1.61%)</title><rect x="847.5" y="1187.0" width="19.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="847.5" y="1171.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="847.5" y="1155.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="847.5" y="1139.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="848.3" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="848.3" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.3" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (65 samples, 1.52%)</title><rect x="848.6" y="1171.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.6" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="848.8" y="1155.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="851.8" y="1166.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (43 samples, 1.00%)</title><rect x="849.1" y="1155.0" width="11.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="852.1" y="1166.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="849.9" y="1139.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="852.9" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.05%)</title><rect x="850.2" y="1139.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="853.2" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (2 samples, 0.05%)</title><rect x="850.2" y="1123.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="853.2" y="1134.0"></text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.02%)</title><rect x="850.8" y="1139.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="853.8" y="1150.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.19%)</title><rect x="851.0" y="1139.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="854.0" y="1150.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="851.3" y="1123.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="854.3" y="1134.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.02%)</title><rect x="851.6" y="1123.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="854.6" y="1134.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.12%)</title><rect x="851.9" y="1123.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="854.9" y="1134.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.05%)</title><rect x="852.4" y="1107.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="855.4" y="1118.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="853.0" y="1107.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="856.0" y="1118.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="853.3" y="1139.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="856.3" y="1150.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="853.5" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="856.5" y="1150.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.02%)</title><rect x="853.8" y="1139.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="856.8" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (3 samples, 0.07%)</title><rect x="854.1" y="1139.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="857.1" y="1150.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (9 samples, 0.21%)</title><rect x="854.9" y="1139.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="857.9" y="1150.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="854.9" y="1123.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="857.9" y="1134.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.14%)</title><rect x="855.2" y="1123.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="858.2" y="1134.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.07%)</title><rect x="855.2" y="1107.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="858.2" y="1118.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="855.7" y="1091.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="858.7" y="1102.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="856.0" y="1107.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="859.0" y="1118.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.05%)</title><rect x="856.3" y="1107.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="859.3" y="1118.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.05%)</title><rect x="856.8" y="1123.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="859.8" y="1134.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (13 samples, 0.30%)</title><rect x="857.4" y="1139.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="860.4" y="1150.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.12%)</title><rect x="858.8" y="1123.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="861.8" y="1134.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.07%)</title><rect x="859.3" y="1107.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="862.3" y="1118.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.07%)</title><rect x="860.1" y="1123.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="863.1" y="1134.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.07%)</title><rect x="860.1" y="1107.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="863.1" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="860.1" y="1091.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="863.1" y="1102.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="860.1" y="1075.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="863.1" y="1086.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="860.7" y="1091.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="863.7" y="1102.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.02%)</title><rect x="861.0" y="1155.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="864.0" y="1166.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.02%)</title><rect x="861.2" y="1155.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="864.2" y="1166.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.02%)</title><rect x="861.5" y="1155.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="864.5" y="1166.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="861.8" y="1155.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="864.8" y="1166.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (16 samples, 0.37%)</title><rect x="862.1" y="1155.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="865.1" y="1166.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (14 samples, 0.33%)</title><rect x="862.6" y="1139.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="863.2" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="863.2" y="1107.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="863.2" y="1091.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="866.2" y="1102.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (9 samples, 0.21%)</title><rect x="864.0" y="1123.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (5 samples, 0.12%)</title><rect x="864.0" y="1107.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.0" y="1118.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.12%)</title><rect x="864.0" y="1091.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.0" y="1102.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.12%)</title><rect x="864.0" y="1075.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.12%)</title><rect x="864.0" y="1059.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.07%)</title><rect x="864.5" y="1043.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.07%)</title><rect x="864.5" y="1027.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="867.5" y="1038.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.09%)</title><rect x="865.4" y="1107.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.09%)</title><rect x="865.4" y="1091.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="868.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.09%)</title><rect x="865.4" y="1075.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.09%)</title><rect x="865.4" y="1059.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.4" y="1070.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="866.2" y="1043.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="869.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.07%)</title><rect x="866.5" y="1203.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.5" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="866.7" y="1187.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.7" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="866.7" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="869.7" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="866.7" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.7" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="866.7" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.7" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="866.7" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.7" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="867.0" y="1187.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="870.0" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="867.0" y="1171.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="870.0" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="867.0" y="1155.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="870.0" y="1166.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="867.0" y="1139.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="870.0" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="867.0" y="1123.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="870.0" y="1134.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="867.0" y="1107.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="870.0" y="1118.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="867.0" y="1091.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="870.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (17 samples, 0.40%)</title><rect x="867.3" y="1219.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="870.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (2 samples, 0.05%)</title><rect x="867.8" y="1203.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="870.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (13 samples, 0.30%)</title><rect x="868.4" y="1203.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="871.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (12 samples, 0.28%)</title><rect x="868.7" y="1187.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.07%)</title><rect x="868.9" y="1171.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (3 samples, 0.07%)</title><rect x="868.9" y="1155.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="871.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (3 samples, 0.07%)</title><rect x="868.9" y="1139.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="871.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (3 samples, 0.07%)</title><rect x="868.9" y="1123.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (3 samples, 0.07%)</title><rect x="868.9" y="1107.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="871.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (6 samples, 0.14%)</title><rect x="869.8" y="1171.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.05%)</title><rect x="870.9" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.05%)</title><rect x="870.9" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="873.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.05%)</title><rect x="870.9" y="1123.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.05%)</title><rect x="870.9" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (1 samples, 0.02%)</title><rect x="871.4" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.4" y="1182.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="871.7" y="1171.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="874.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (17 samples, 0.40%)</title><rect x="872.0" y="1219.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (15 samples, 0.35%)</title><rect x="872.0" y="1203.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.35%)</title><rect x="872.0" y="1187.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="872.0" y="1171.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.02%)</title><rect x="872.0" y="1155.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.33%)</title><rect x="872.2" y="1171.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.23%)</title><rect x="872.2" y="1155.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="872.2" y="1139.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="872.5" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="872.5" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.16%)</title><rect x="873.1" y="1139.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.16%)</title><rect x="873.1" y="1123.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.16%)</title><rect x="873.1" y="1107.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.16%)</title><rect x="873.1" y="1091.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.16%)</title><rect x="873.1" y="1075.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.1" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="873.1" y="1059.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="876.1" y="1070.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="873.1" y="1043.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="876.1" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.12%)</title><rect x="873.6" y="1059.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="876.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.09%)</title><rect x="875.0" y="1155.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="878.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.09%)</title><rect x="875.0" y="1139.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.09%)</title><rect x="875.0" y="1123.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.09%)</title><rect x="875.0" y="1107.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.05%)</title><rect x="876.1" y="1203.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="879.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="876.1" y="1187.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="876.4" y="1171.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="879.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="876.4" y="1155.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="879.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="876.4" y="1139.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.removeLocal (3 samples, 0.07%)</title><rect x="876.6" y="1283.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.6" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (3 samples, 0.07%)</title><rect x="876.6" y="1267.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="879.6" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.02%)</title><rect x="877.2" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.2" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.02%)</title><rect x="877.2" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="880.2" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$114/599301499.handleLocalResponse (13 samples, 0.30%)</title><rect x="877.5" y="1283.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="880.5" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$7 (13 samples, 0.30%)</title><rect x="877.5" y="1267.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.5" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (13 samples, 0.30%)</title><rect x="877.5" y="1251.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (13 samples, 0.30%)</title><rect x="877.5" y="1235.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="880.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (13 samples, 0.30%)</title><rect x="877.5" y="1219.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.30%)</title><rect x="877.5" y="1203.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (12 samples, 0.28%)</title><rect x="877.5" y="1187.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.09%)</title><rect x="877.7" y="1171.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.09%)</title><rect x="877.7" y="1155.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.09%)</title><rect x="877.7" y="1139.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.09%)</title><rect x="877.7" y="1123.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="880.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.09%)</title><rect x="877.7" y="1107.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="880.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="878.8" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="878.8" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="878.8" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="878.8" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="878.8" y="1107.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.14%)</title><rect x="879.1" y="1171.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="882.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.14%)</title><rect x="879.1" y="1155.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.14%)</title><rect x="879.1" y="1139.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.14%)</title><rect x="879.1" y="1123.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.14%)</title><rect x="879.1" y="1107.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.1" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="879.1" y="1091.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="882.1" y="1102.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="879.1" y="1075.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="882.1" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.12%)</title><rect x="879.4" y="1091.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="882.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="880.8" y="1187.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="883.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="880.8" y="1171.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="880.8" y="1155.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="880.8" y="1139.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="880.8" y="1123.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$119/692123147.requestBuild (58 samples, 1.35%)</title><rect x="881.0" y="1283.0" width="16.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.0" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$8 (58 samples, 1.35%)</title><rect x="881.0" y="1267.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (12 samples, 0.28%)</title><rect x="881.0" y="1251.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (12 samples, 0.28%)</title><rect x="881.0" y="1235.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="884.0" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.28%)</title><rect x="881.0" y="1219.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.0" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.26%)</title><rect x="881.3" y="1203.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.3" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.16%)</title><rect x="882.4" y="1187.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.4" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$141/1757337625.accept (5 samples, 0.12%)</title><rect x="883.0" y="1171.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.0" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.12%)</title><rect x="883.0" y="1155.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.0" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.09%)</title><rect x="883.0" y="1139.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.0" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$147/136542916.accept (3 samples, 0.07%)</title><rect x="883.2" y="1123.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="886.2" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="883.5" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/875917495.test (2 samples, 0.05%)</title><rect x="883.5" y="1091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.05%)</title><rect x="883.5" y="1075.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.5" y="1086.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.05%)</title><rect x="883.5" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="886.5" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.05%)</title><rect x="883.5" y="1043.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.5" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.05%)</title><rect x="883.5" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.5" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.05%)</title><rect x="883.5" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.5" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="883.5" y="995.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="886.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="883.5" y="979.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="886.5" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="883.5" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.5" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="883.5" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="886.5" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="884.1" y="1139.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="884.1" y="1123.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="884.1" y="1107.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="884.1" y="1091.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (46 samples, 1.07%)</title><rect x="884.3" y="1251.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.3" y="1262.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (35 samples, 0.82%)</title><rect x="884.3" y="1235.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.3" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (30 samples, 0.70%)</title><rect x="885.4" y="1219.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.4" y="1230.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (1 samples, 0.02%)</title><rect x="885.7" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.7" y="1214.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.02%)</title><rect x="885.7" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="888.7" y="1198.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="885.7" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.7" y="1182.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (28 samples, 0.65%)</title><rect x="886.0" y="1203.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.0" y="1214.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (6 samples, 0.14%)</title><rect x="886.0" y="1187.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.0" y="1198.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.14%)</title><rect x="886.0" y="1171.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.0" y="1182.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="887.4" y="1155.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.4" y="1166.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (22 samples, 0.51%)</title><rect x="887.6" y="1187.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.6" y="1198.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (9 samples, 0.21%)</title><rect x="888.5" y="1171.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.5" y="1182.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.07%)</title><rect x="888.7" y="1155.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.7" y="1166.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.07%)</title><rect x="888.7" y="1139.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.7" y="1150.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (4 samples, 0.09%)</title><rect x="889.6" y="1155.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="892.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="890.1" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="890.1" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.1" y="1134.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (1 samples, 0.02%)</title><rect x="890.7" y="1155.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.7" y="1166.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (1 samples, 0.02%)</title><rect x="890.7" y="1139.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="893.7" y="1150.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="890.7" y="1123.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.7" y="1134.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (10 samples, 0.23%)</title><rect x="890.9" y="1171.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.12%)</title><rect x="891.2" y="1155.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.09%)</title><rect x="892.6" y="1155.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.09%)</title><rect x="892.6" y="1139.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="895.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.09%)</title><rect x="892.6" y="1123.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="895.6" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="893.7" y="1219.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="896.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (8 samples, 0.19%)</title><rect x="894.0" y="1235.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (8 samples, 0.19%)</title><rect x="894.0" y="1219.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (2 samples, 0.05%)</title><rect x="894.0" y="1203.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/875917495.test (2 samples, 0.05%)</title><rect x="894.0" y="1187.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.05%)</title><rect x="894.0" y="1171.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.0" y="1182.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.05%)</title><rect x="894.0" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.0" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.05%)</title><rect x="894.0" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.0" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.05%)</title><rect x="894.0" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.0" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.05%)</title><rect x="894.0" y="1107.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.0" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="894.0" y="1091.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (6 samples, 0.14%)</title><rect x="894.5" y="1203.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.5" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="894.5" y="1187.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.5" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="894.5" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.5" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="894.5" y="1155.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.5" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="894.5" y="1139.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.5" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="894.5" y="1123.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.5" y="1134.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (4 samples, 0.09%)</title><rect x="895.1" y="1187.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.1" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.05%)</title><rect x="895.1" y="1171.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.1" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.05%)</title><rect x="895.1" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.1" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="895.1" y="1139.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.1" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="895.6" y="1171.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="895.6" y="1155.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="895.6" y="1139.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="895.6" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.07%)</title><rect x="896.2" y="1235.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.07%)</title><rect x="896.2" y="1219.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (3 samples, 0.07%)</title><rect x="896.2" y="1203.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.07%)</title><rect x="896.2" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.07%)</title><rect x="896.2" y="1171.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.2" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (12 samples, 0.28%)</title><rect x="897.0" y="1299.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.07%)</title><rect x="897.0" y="1283.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="897.3" y="1267.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.3" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (9 samples, 0.21%)</title><rect x="897.8" y="1283.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.8" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.21%)</title><rect x="897.8" y="1267.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.8" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$224/1601412013.accept (9 samples, 0.21%)</title><rect x="897.8" y="1251.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.8" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (9 samples, 0.21%)</title><rect x="897.8" y="1235.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (9 samples, 0.21%)</title><rect x="897.8" y="1219.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.19%)</title><rect x="898.1" y="1203.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.14%)</title><rect x="898.6" y="1187.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.14%)</title><rect x="898.6" y="1171.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="898.6" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="898.6" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="898.6" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="898.6" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="898.6" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="898.6" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.6" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="898.6" y="1059.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="901.6" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="898.6" y="1043.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="901.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.12%)</title><rect x="898.9" y="1155.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.12%)</title><rect x="898.9" y="1139.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.12%)</title><rect x="898.9" y="1123.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.12%)</title><rect x="898.9" y="1107.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.12%)</title><rect x="898.9" y="1091.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.9" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="898.9" y="1075.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="901.9" y="1086.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="898.9" y="1059.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="901.9" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.09%)</title><rect x="899.2" y="1075.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="902.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (125 samples, 2.91%)</title><rect x="900.3" y="1411.0" width="34.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.3" y="1422.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (125 samples, 2.91%)</title><rect x="900.3" y="1395.0" width="34.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.3" y="1406.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (58 samples, 1.35%)</title><rect x="901.7" y="1379.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.7" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (53 samples, 1.24%)</title><rect x="903.0" y="1363.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (53 samples, 1.24%)</title><rect x="903.0" y="1347.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (53 samples, 1.24%)</title><rect x="903.0" y="1331.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (53 samples, 1.24%)</title><rect x="903.0" y="1315.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (34 samples, 0.79%)</title><rect x="903.0" y="1299.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34 samples, 0.79%)</title><rect x="903.0" y="1283.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (28 samples, 0.65%)</title><rect x="904.7" y="1267.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (24 samples, 0.56%)</title><rect x="905.0" y="1251.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="905.0" y="1235.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.54%)</title><rect x="905.2" y="1235.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (22 samples, 0.51%)</title><rect x="905.2" y="1219.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.05%)</title><rect x="906.3" y="1203.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="906.3" y="1187.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="906.3" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.05%)</title><rect x="906.3" y="1155.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.05%)</title><rect x="906.3" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="906.9" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="906.9" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="906.9" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="906.9" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="906.9" y="1139.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="906.9" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="906.9" y="1107.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="909.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="906.9" y="1091.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="909.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.35%)</title><rect x="907.2" y="1203.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.35%)</title><rect x="907.2" y="1187.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.35%)</title><rect x="907.2" y="1171.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.35%)</title><rect x="907.2" y="1155.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.33%)</title><rect x="907.4" y="1139.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.4" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.19%)</title><rect x="907.4" y="1123.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="910.4" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="908.0" y="1107.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="911.0" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="908.3" y="1107.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="911.3" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="908.8" y="1107.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="911.8" y="1118.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.05%)</title><rect x="909.1" y="1107.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="912.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.14%)</title><rect x="909.7" y="1123.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="912.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="911.3" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="911.3" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="911.3" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="911.3" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="911.3" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="911.6" y="1251.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (19 samples, 0.44%)</title><rect x="912.4" y="1299.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.51%)</title><rect x="917.6" y="1379.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.40%)</title><rect x="919.0" y="1363.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.0" y="1374.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="919.0" y="1347.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="922.0" y="1358.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.23%)</title><rect x="919.3" y="1347.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="922.3" y="1358.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="919.3" y="1331.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="922.3" y="1342.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="919.6" y="1315.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="922.6" y="1326.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="919.8" y="1331.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="922.8" y="1342.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="920.1" y="1331.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="923.1" y="1342.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (6 samples, 0.14%)</title><rect x="920.4" y="1331.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="923.4" y="1342.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.12%)</title><rect x="922.0" y="1347.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="925.0" y="1358.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.12%)</title><rect x="922.0" y="1331.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="925.0" y="1342.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="923.4" y="1347.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="926.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (37 samples, 0.86%)</title><rect x="923.7" y="1379.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="926.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (35 samples, 0.82%)</title><rect x="924.2" y="1363.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.2" y="1374.0"></text>
</g>
<g>
<title>Unsafe_Park (20 samples, 0.47%)</title><rect x="924.2" y="1347.0" width="5.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="927.2" y="1358.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="924.2" y="1331.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="927.2" y="1342.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.23%)</title><rect x="924.5" y="1331.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="927.5" y="1342.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.05%)</title><rect x="926.2" y="1315.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="929.2" y="1326.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.05%)</title><rect x="926.7" y="1315.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="929.7" y="1326.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="927.0" y="1299.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="930.0" y="1310.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="927.3" y="1331.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="930.3" y="1342.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="927.5" y="1331.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="930.5" y="1342.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.09%)</title><rect x="927.8" y="1331.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="930.8" y="1342.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="928.9" y="1331.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="931.9" y="1342.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="929.5" y="1331.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="932.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.35%)</title><rect x="929.7" y="1347.0" width="4.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="932.7" y="1358.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="929.7" y="1331.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="932.7" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (14 samples, 0.33%)</title><rect x="930.0" y="1331.0" width="3.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="933.0" y="1342.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="933.9" y="1379.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="936.9" y="1390.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="934.4" y="1363.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="937.4" y="1374.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="934.4" y="1347.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="937.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (480 samples, 11.19%)</title><rect x="934.7" y="1411.0" width="132.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.7" y="1422.0">jdk/internal/net..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.42%)</title><rect x="938.8" y="1395.0" width="5.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="941.8" y="1406.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="938.8" y="1379.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="941.8" y="1390.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.40%)</title><rect x="939.1" y="1379.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="942.1" y="1390.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="939.1" y="1363.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="942.1" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="939.4" y="1363.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="942.4" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (15 samples, 0.35%)</title><rect x="939.6" y="1363.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="942.6" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="939.6" y="1347.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="942.6" y="1358.0"></text>
</g>
<g>
<title>SpinPause (14 samples, 0.33%)</title><rect x="939.9" y="1347.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="942.9" y="1358.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="943.8" y="1395.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="946.8" y="1406.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.05%)</title><rect x="943.8" y="1379.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="946.8" y="1390.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="944.0" y="1363.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="947.0" y="1374.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.02%)</title><rect x="944.3" y="1395.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="947.3" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (18 samples, 0.42%)</title><rect x="944.6" y="1395.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.6" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (17 samples, 0.40%)</title><rect x="944.9" y="1379.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="947.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.05%)</title><rect x="949.0" y="1363.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.0" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (12 samples, 0.28%)</title><rect x="949.5" y="1395.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.02%)</title><rect x="952.6" y="1379.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.6" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (97 samples, 2.26%)</title><rect x="952.8" y="1395.0" width="26.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="955.8" y="1406.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$449/992417271.accept (92 samples, 2.15%)</title><rect x="953.4" y="1379.0" width="25.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.4" y="1390.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (92 samples, 2.15%)</title><rect x="953.4" y="1363.0" width="25.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="956.4" y="1374.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (92 samples, 2.15%)</title><rect x="953.4" y="1347.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="956.4" y="1358.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (92 samples, 2.15%)</title><rect x="953.4" y="1331.0" width="25.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="956.4" y="1342.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (92 samples, 2.15%)</title><rect x="953.4" y="1315.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.4" y="1326.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.14%)</title><rect x="953.4" y="1299.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.09%)</title><rect x="953.9" y="1283.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="956.9" y="1294.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (3 samples, 0.07%)</title><rect x="953.9" y="1267.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="956.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.02%)</title><rect x="954.8" y="1267.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (86 samples, 2.01%)</title><rect x="955.0" y="1299.0" width="23.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="958.0" y="1310.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (86 samples, 2.01%)</title><rect x="955.0" y="1283.0" width="23.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="958.0" y="1294.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (86 samples, 2.01%)</title><rect x="955.0" y="1267.0" width="23.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.0" y="1278.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (86 samples, 2.01%)</title><rect x="955.0" y="1251.0" width="23.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.0" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (86 samples, 2.01%)</title><rect x="955.0" y="1235.0" width="23.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.0" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (82 samples, 1.91%)</title><rect x="955.3" y="1219.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.3" y="1230.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (82 samples, 1.91%)</title><rect x="955.3" y="1203.0" width="22.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="958.3" y="1214.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (29 samples, 0.68%)</title><rect x="955.3" y="1187.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="958.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (27 samples, 0.63%)</title><rect x="955.9" y="1171.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.9" y="1182.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.05%)</title><rect x="955.9" y="1155.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="958.9" y="1166.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (2 samples, 0.05%)</title><rect x="955.9" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="955.9" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="958.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (25 samples, 0.58%)</title><rect x="956.4" y="1155.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 0.58%)</title><rect x="956.4" y="1139.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="959.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 0.58%)</title><rect x="956.4" y="1123.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="959.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 0.54%)</title><rect x="957.0" y="1107.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.54%)</title><rect x="957.0" y="1091.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (23 samples, 0.54%)</title><rect x="957.0" y="1075.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (21 samples, 0.49%)</title><rect x="957.0" y="1059.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="960.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.14%)</title><rect x="957.0" y="1043.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.12%)</title><rect x="957.0" y="1027.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="960.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="957.0" y="1011.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="957.0" y="995.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="957.0" y="979.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="957.0" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.0" y="974.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="957.0" y="947.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="960.0" y="958.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="957.0" y="931.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="960.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="957.2" y="947.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="960.2" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="957.2" y="931.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="960.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.07%)</title><rect x="957.5" y="1011.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.07%)</title><rect x="957.5" y="995.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.07%)</title><rect x="957.5" y="979.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="958.3" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.35%)</title><rect x="958.6" y="1043.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.35%)</title><rect x="958.6" y="1027.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.35%)</title><rect x="958.6" y="1011.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.35%)</title><rect x="958.6" y="995.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.35%)</title><rect x="958.6" y="979.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.6" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="958.9" y="963.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="961.9" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.14%)</title><rect x="959.2" y="963.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="962.2" y="974.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="959.2" y="947.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="962.2" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="959.4" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="962.4" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="959.7" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="962.7" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.07%)</title><rect x="960.0" y="947.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="963.0" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.16%)</title><rect x="960.8" y="963.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="963.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="962.7" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="962.7" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="965.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="962.7" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="962.7" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.05%)</title><rect x="963.3" y="1187.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.12%)</title><rect x="963.8" y="1187.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.12%)</title><rect x="963.8" y="1171.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.09%)</title><rect x="963.8" y="1155.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.07%)</title><rect x="964.1" y="1139.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.07%)</title><rect x="964.1" y="1123.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.1" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.07%)</title><rect x="964.1" y="1107.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.1" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.07%)</title><rect x="964.1" y="1091.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.07%)</title><rect x="964.1" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="964.9" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="964.9" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.9" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="964.9" y="1123.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.9" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="964.9" y="1107.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.9" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="964.9" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.9" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="964.9" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.9" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="964.9" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (43 samples, 1.00%)</title><rect x="965.2" y="1187.0" width="11.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.02%)</title><rect x="966.3" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$264/213652655.get (1 samples, 0.02%)</title><rect x="966.3" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1 samples, 0.02%)</title><rect x="966.3" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="969.3" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="966.3" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.3" y="1134.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="966.3" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.3" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (38 samples, 0.89%)</title><rect x="966.6" y="1171.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="966.6" y="1155.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="966.6" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.07%)</title><rect x="966.9" y="1155.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.07%)</title><rect x="966.9" y="1139.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.07%)</title><rect x="966.9" y="1123.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="969.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.07%)</title><rect x="966.9" y="1107.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.9" y="1118.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.02%)</title><rect x="967.4" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 0.79%)</title><rect x="967.7" y="1155.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.7" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 0.79%)</title><rect x="967.7" y="1139.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.7" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.09%)</title><rect x="967.7" y="1123.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.7" y="1134.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.09%)</title><rect x="967.7" y="1107.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.7" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="968.3" y="1091.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="971.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (30 samples, 0.70%)</title><rect x="968.8" y="1123.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.8" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (30 samples, 0.70%)</title><rect x="968.8" y="1107.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (22 samples, 0.51%)</title><rect x="971.0" y="1091.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.0" y="1102.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.02%)</title><rect x="971.6" y="1075.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="974.6" y="1086.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="971.8" y="1075.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="974.8" y="1086.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="972.4" y="1075.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="975.4" y="1086.0"></text>
</g>
<g>
<title>__read (16 samples, 0.37%)</title><rect x="972.7" y="1075.0" width="4.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="975.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.02%)</title><rect x="977.1" y="1187.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="980.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.05%)</title><rect x="977.3" y="1187.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="980.3" y="1198.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.05%)</title><rect x="977.3" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.3" y="1182.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (2 samples, 0.05%)</title><rect x="977.3" y="1155.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.07%)</title><rect x="977.9" y="1219.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$452/1901706323.accept (3 samples, 0.07%)</title><rect x="978.7" y="1379.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.07%)</title><rect x="978.7" y="1363.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$448/1963952344.run (3 samples, 0.07%)</title><rect x="978.7" y="1347.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.07%)</title><rect x="978.7" y="1331.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.07%)</title><rect x="978.7" y="1315.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.7" y="1326.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.02%)</title><rect x="979.0" y="1299.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.0" y="1310.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="979.3" y="1299.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.3" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="979.3" y="1283.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="982.3" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="979.3" y="1267.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.3" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="979.3" y="1251.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.3" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.05%)</title><rect x="979.5" y="1395.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.5" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.05%)</title><rect x="979.5" y="1379.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="982.5" y="1390.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="980.1" y="1395.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.1" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="980.4" y="1395.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.4" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (8 samples, 0.19%)</title><rect x="980.6" y="1395.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.6" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.14%)</title><rect x="981.2" y="1379.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="984.2" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (6 samples, 0.14%)</title><rect x="981.2" y="1363.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.2" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (6 samples, 0.14%)</title><rect x="981.2" y="1347.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.2" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.14%)</title><rect x="981.2" y="1331.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.2" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.12%)</title><rect x="981.2" y="1315.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.2" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (3 samples, 0.07%)</title><rect x="981.5" y="1299.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.5" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.07%)</title><rect x="981.5" y="1283.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.5" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.02%)</title><rect x="982.0" y="1267.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="985.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$444/922607877.accept (1 samples, 0.02%)</title><rect x="982.0" y="1251.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.0" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="982.0" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.0" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="982.0" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.0" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="982.0" y="1203.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.0" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="982.0" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.0" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="982.0" y="1171.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.0" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.02%)</title><rect x="982.3" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="985.3" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="982.6" y="1315.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (66 samples, 1.54%)</title><rect x="982.8" y="1395.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.8" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$301/1523868633.run (47 samples, 1.10%)</title><rect x="982.8" y="1379.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (47 samples, 1.10%)</title><rect x="982.8" y="1363.0" width="13.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (4 samples, 0.09%)</title><rect x="982.8" y="1347.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="985.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (4 samples, 0.09%)</title><rect x="982.8" y="1331.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="985.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 1.00%)</title><rect x="983.9" y="1347.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="986.9" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 1.00%)</title><rect x="983.9" y="1331.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (42 samples, 0.98%)</title><rect x="984.2" y="1315.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (40 samples, 0.93%)</title><rect x="984.8" y="1299.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="987.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$283/637420944.run (39 samples, 0.91%)</title><rect x="985.0" y="1283.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (39 samples, 0.91%)</title><rect x="985.0" y="1267.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (38 samples, 0.89%)</title><rect x="985.0" y="1251.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (31 samples, 0.72%)</title><rect x="987.0" y="1235.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.07%)</title><rect x="987.2" y="1219.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.07%)</title><rect x="987.2" y="1203.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.07%)</title><rect x="987.2" y="1187.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="990.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.07%)</title><rect x="987.2" y="1171.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.07%)</title><rect x="987.2" y="1155.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.07%)</title><rect x="987.2" y="1139.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.07%)</title><rect x="987.2" y="1123.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.02%)</title><rect x="987.2" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="990.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.05%)</title><rect x="987.5" y="1107.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.05%)</title><rect x="987.5" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (27 samples, 0.63%)</title><rect x="988.1" y="1219.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="991.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.37%)</title><rect x="991.1" y="1203.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.37%)</title><rect x="991.1" y="1187.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.35%)</title><rect x="991.4" y="1171.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.33%)</title><rect x="991.4" y="1155.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.05%)</title><rect x="991.4" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.05%)</title><rect x="991.4" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.28%)</title><rect x="991.9" y="1139.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.16%)</title><rect x="991.9" y="1123.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="991.9" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="991.9" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="991.9" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="992.2" y="1075.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="995.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="992.2" y="1059.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="995.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="992.2" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.12%)</title><rect x="992.5" y="1107.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.12%)</title><rect x="992.5" y="1091.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.12%)</title><rect x="992.5" y="1075.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.12%)</title><rect x="992.5" y="1059.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.12%)</title><rect x="992.5" y="1043.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.5" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.12%)</title><rect x="992.5" y="1027.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="995.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.12%)</title><rect x="993.8" y="1123.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.12%)</title><rect x="993.8" y="1107.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="996.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.12%)</title><rect x="993.8" y="1091.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.12%)</title><rect x="993.8" y="1075.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="995.2" y="1155.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="995.2" y="1139.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1 samples, 0.02%)</title><rect x="995.5" y="1251.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.02%)</title><rect x="995.5" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$320/1685040699.run (19 samples, 0.44%)</title><rect x="995.8" y="1379.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (19 samples, 0.44%)</title><rect x="995.8" y="1363.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.44%)</title><rect x="995.8" y="1347.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.42%)</title><rect x="996.0" y="1331.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="996.0" y="1315.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="996.0" y="1299.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="996.0" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="996.0" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="999.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="996.0" y="1251.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="999.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="996.0" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.40%)</title><rect x="996.3" y="1315.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.26%)</title><rect x="996.3" y="1299.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.12%)</title><rect x="996.3" y="1283.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="999.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.12%)</title><rect x="996.3" y="1267.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="999.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="996.3" y="1251.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="996.3" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="996.3" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="996.3" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.3" y="1214.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="996.3" y="1187.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="999.3" y="1198.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="996.3" y="1171.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="999.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.02%)</title><rect x="996.6" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="996.9" y="1251.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="999.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.02%)</title><rect x="996.9" y="1235.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="996.9" y="1219.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="999.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="996.9" y="1203.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="999.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="996.9" y="1187.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.05%)</title><rect x="997.1" y="1251.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.05%)</title><rect x="997.1" y="1235.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.05%)</title><rect x="997.1" y="1219.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.14%)</title><rect x="997.7" y="1283.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1000.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.14%)</title><rect x="997.7" y="1267.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.14%)</title><rect x="997.7" y="1251.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.14%)</title><rect x="997.7" y="1235.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.14%)</title><rect x="997.7" y="1219.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1000.7" y="1230.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.07%)</title><rect x="997.7" y="1203.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1000.7" y="1214.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="997.7" y="1187.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1000.7" y="1198.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="998.2" y="1187.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1001.2" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.07%)</title><rect x="998.5" y="1203.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1001.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.14%)</title><rect x="999.3" y="1299.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.14%)</title><rect x="999.3" y="1283.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.14%)</title><rect x="999.3" y="1267.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.14%)</title><rect x="999.3" y="1251.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (55 samples, 1.28%)</title><rect x="1001.0" y="1395.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.0" y="1406.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.07%)</title><rect x="1001.0" y="1379.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.0" y="1390.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.07%)</title><rect x="1001.0" y="1363.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1004.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="1001.3" y="1347.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.3" y="1358.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="1001.3" y="1331.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1004.3" y="1342.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.02%)</title><rect x="1001.5" y="1315.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1004.5" y="1326.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="1001.5" y="1299.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1004.5" y="1310.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1001.5" y="1283.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1004.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="1001.8" y="1379.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (51 samples, 1.19%)</title><rect x="1002.1" y="1379.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.1" y="1390.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="1005.1" y="1363.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1008.1" y="1374.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (31 samples, 0.72%)</title><rect x="1005.4" y="1363.0" width="8.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1008.4" y="1374.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (31 samples, 0.72%)</title><rect x="1005.4" y="1347.0" width="8.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1008.4" y="1358.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (30 samples, 0.70%)</title><rect x="1005.4" y="1331.0" width="8.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1008.4" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (17 samples, 0.40%)</title><rect x="1005.4" y="1315.0" width="4.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1008.4" y="1326.0"></text>
</g>
<g>
<title>SpinPause (13 samples, 0.30%)</title><rect x="1010.1" y="1315.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1013.1" y="1326.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.02%)</title><rect x="1013.6" y="1331.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1016.6" y="1342.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.02%)</title><rect x="1013.6" y="1315.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1016.6" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.19%)</title><rect x="1013.9" y="1363.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.9" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.14%)</title><rect x="1016.1" y="1395.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1019.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.09%)</title><rect x="1016.7" y="1379.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1019.7" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.09%)</title><rect x="1016.7" y="1363.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1019.7" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.09%)</title><rect x="1016.7" y="1347.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1019.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (33 samples, 0.77%)</title><rect x="1017.8" y="1395.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.8" y="1406.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.16%)</title><rect x="1018.0" y="1379.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1021.0" y="1390.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.16%)</title><rect x="1018.0" y="1363.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1021.0" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.16%)</title><rect x="1018.0" y="1347.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1021.0" y="1358.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="1018.3" y="1331.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1021.3" y="1342.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.12%)</title><rect x="1018.6" y="1331.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1021.6" y="1342.0"></text>
</g>
<g>
<title>java/time/Instant.now (15 samples, 0.35%)</title><rect x="1020.0" y="1379.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.0" y="1390.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (15 samples, 0.35%)</title><rect x="1020.0" y="1363.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1023.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (12 samples, 0.28%)</title><rect x="1020.8" y="1347.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.8" y="1358.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (8 samples, 0.19%)</title><rect x="1021.3" y="1331.0" width="2.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1024.3" y="1342.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="1021.9" y="1315.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1024.9" y="1326.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.07%)</title><rect x="1022.7" y="1315.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1025.7" y="1326.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="1022.7" y="1299.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1025.7" y="1310.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="1023.0" y="1283.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1026.0" y="1294.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.05%)</title><rect x="1023.6" y="1331.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1026.6" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (3 samples, 0.07%)</title><rect x="1024.1" y="1379.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.1" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.07%)</title><rect x="1024.1" y="1363.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.1" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.07%)</title><rect x="1024.1" y="1347.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.1" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (2 samples, 0.05%)</title><rect x="1024.9" y="1379.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.9" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1024.9" y="1363.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1027.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1024.9" y="1347.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1027.9" y="1358.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="1024.9" y="1331.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1027.9" y="1342.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.02%)</title><rect x="1025.2" y="1363.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1028.2" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (5 samples, 0.12%)</title><rect x="1025.5" y="1379.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.5" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5 samples, 0.12%)</title><rect x="1025.5" y="1363.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.5" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.09%)</title><rect x="1025.8" y="1347.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1028.8" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.09%)</title><rect x="1025.8" y="1331.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1028.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="1026.6" y="1315.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.6" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (110 samples, 2.56%)</title><rect x="1026.9" y="1395.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.9" y="1406.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (110 samples, 2.56%)</title><rect x="1026.9" y="1379.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.9" y="1390.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (104 samples, 2.42%)</title><rect x="1027.1" y="1363.0" width="28.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.1" y="1374.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (39 samples, 0.91%)</title><rect x="1027.1" y="1347.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.1" y="1358.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="1028.0" y="1331.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1031.0" y="1342.0"></text>
</g>
<g>
<title>epoll_wait (34 samples, 0.79%)</title><rect x="1028.5" y="1331.0" width="9.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1031.5" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (53 samples, 1.24%)</title><rect x="1037.9" y="1347.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.9" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.28%)</title><rect x="1037.9" y="1331.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.9" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (12 samples, 0.28%)</title><rect x="1037.9" y="1315.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.9" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (32 samples, 0.75%)</title><rect x="1041.2" y="1331.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1044.2" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (31 samples, 0.72%)</title><rect x="1041.4" y="1315.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.4" y="1326.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.02%)</title><rect x="1041.7" y="1299.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1044.7" y="1310.0"></text>
</g>
<g>
<title>__read (29 samples, 0.68%)</title><rect x="1042.0" y="1299.0" width="8.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1045.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.21%)</title><rect x="1050.0" y="1331.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.0" y="1342.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.12%)</title><rect x="1050.5" y="1315.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1053.5" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.12%)</title><rect x="1050.5" y="1299.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.5" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.12%)</title><rect x="1050.5" y="1283.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.5" y="1294.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="1051.6" y="1267.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1054.6" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.05%)</title><rect x="1051.9" y="1315.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.9" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.05%)</title><rect x="1051.9" y="1299.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1054.9" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="1051.9" y="1283.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1054.9" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (10 samples, 0.23%)</title><rect x="1052.4" y="1347.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.4" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (10 samples, 0.23%)</title><rect x="1052.4" y="1331.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.4" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.02%)</title><rect x="1054.9" y="1315.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.9" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.05%)</title><rect x="1055.2" y="1347.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1058.2" y="1358.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.02%)</title><rect x="1055.5" y="1331.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.5" y="1342.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="1055.5" y="1315.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1058.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="1055.5" y="1299.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="1055.5" y="1283.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1058.5" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.02%)</title><rect x="1055.7" y="1363.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1058.7" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.02%)</title><rect x="1055.7" y="1347.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.7" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (4 samples, 0.09%)</title><rect x="1056.0" y="1363.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1059.0" y="1374.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.isOpen (4 samples, 0.09%)</title><rect x="1056.0" y="1347.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (4 samples, 0.09%)</title><rect x="1056.0" y="1331.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.0" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (11 samples, 0.26%)</title><rect x="1057.1" y="1395.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.1" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (10 samples, 0.23%)</title><rect x="1057.4" y="1379.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.4" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (10 samples, 0.23%)</title><rect x="1057.4" y="1363.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.4" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (6 samples, 0.14%)</title><rect x="1057.4" y="1347.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1060.4" y="1358.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.14%)</title><rect x="1057.4" y="1331.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1060.4" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.07%)</title><rect x="1059.0" y="1347.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.0" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="1059.0" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.0" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="1059.0" y="1315.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (2 samples, 0.05%)</title><rect x="1059.0" y="1299.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1 samples, 0.02%)</title><rect x="1059.6" y="1331.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1062.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.02%)</title><rect x="1059.6" y="1315.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.6" y="1326.0"></text>
</g>
<g>
<title>__read (1 samples, 0.02%)</title><rect x="1059.6" y="1299.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1062.6" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.02%)</title><rect x="1059.9" y="1347.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1062.9" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (8 samples, 0.19%)</title><rect x="1060.1" y="1395.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (6 samples, 0.14%)</title><rect x="1060.7" y="1379.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1063.7" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (6 samples, 0.14%)</title><rect x="1060.7" y="1363.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.7" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (16 samples, 0.37%)</title><rect x="1062.3" y="1395.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.3" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (14 samples, 0.33%)</title><rect x="1062.6" y="1379.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1065.6" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.09%)</title><rect x="1065.4" y="1363.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1068.4" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1065.4" y="1347.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1068.4" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1065.4" y="1331.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1068.4" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.02%)</title><rect x="1066.5" y="1379.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.5" y="1390.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (323 samples, 7.53%)</title><rect x="1066.7" y="1411.0" width="88.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.7" y="1422.0">one/nio/se..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="1067.3" y="1395.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1070.3" y="1406.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.05%)</title><rect x="1067.6" y="1395.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.6" y="1406.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (79 samples, 1.84%)</title><rect x="1068.1" y="1395.0" width="21.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.1" y="1406.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1071.1" y="1379.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1074.1" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1071.1" y="1363.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1074.1" y="1374.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1071.1" y="1347.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1074.1" y="1358.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1071.1" y="1331.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1074.1" y="1342.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="1071.1" y="1315.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1074.1" y="1326.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="1071.1" y="1299.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1074.1" y="1310.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (67 samples, 1.56%)</title><rect x="1071.4" y="1379.0" width="18.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.4" y="1390.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.19%)</title><rect x="1075.3" y="1363.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1078.3" y="1374.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.07%)</title><rect x="1077.5" y="1363.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1080.5" y="1374.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.14%)</title><rect x="1078.3" y="1363.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1081.3" y="1374.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="1079.4" y="1347.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1082.4" y="1358.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="1079.4" y="1331.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1082.4" y="1342.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="1080.0" y="1363.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1083.0" y="1374.0"></text>
</g>
<g>
<title>epoll_wait (35 samples, 0.82%)</title><rect x="1080.2" y="1363.0" width="9.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1083.2" y="1374.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (235 samples, 5.48%)</title><rect x="1089.9" y="1395.0" width="64.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.9" y="1406.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (222 samples, 5.18%)</title><rect x="1093.4" y="1379.0" width="61.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.4" y="1390.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (156 samples, 3.64%)</title><rect x="1093.4" y="1363.0" width="43.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.4" y="1374.0">one/..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (2 samples, 0.05%)</title><rect x="1099.2" y="1347.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.2" y="1358.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1099.8" y="1347.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1102.8" y="1358.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (78 samples, 1.82%)</title><rect x="1100.3" y="1347.0" width="21.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.3" y="1358.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (78 samples, 1.82%)</title><rect x="1100.3" y="1331.0" width="21.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1103.3" y="1342.0">o..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (67 samples, 1.56%)</title><rect x="1100.3" y="1315.0" width="18.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1103.3" y="1326.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.09%)</title><rect x="1100.3" y="1299.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1101.1" y="1283.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1104.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1101.1" y="1267.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1104.1" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (13 samples, 0.30%)</title><rect x="1101.4" y="1299.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1104.4" y="1310.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.30%)</title><rect x="1101.4" y="1283.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1102.5" y="1267.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="1102.5" y="1251.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1105.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="1103.1" y="1267.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="1103.1" y="1251.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.1" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1103.9" y="1235.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1106.9" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1103.9" y="1219.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1106.9" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1103.9" y="1203.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1106.9" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1103.9" y="1187.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1106.9" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1103.9" y="1171.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1106.9" y="1182.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="1103.9" y="1155.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.9" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1104.2" y="1235.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1107.2" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1104.2" y="1219.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1107.2" y="1230.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1104.2" y="1203.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.2" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1104.2" y="1187.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1107.2" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1104.2" y="1171.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1107.2" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1104.2" y="1155.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1107.2" y="1166.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1104.2" y="1139.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1107.2" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="1104.2" y="1123.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.2" y="1134.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="1104.2" y="1107.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1107.2" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.02%)</title><rect x="1104.2" y="1091.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1107.2" y="1102.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.02%)</title><rect x="1104.2" y="1075.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1107.2" y="1086.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.02%)</title><rect x="1104.2" y="1059.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="1104.4" y="1267.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1107.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1104.4" y="1251.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1107.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1104.4" y="1235.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1107.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="1104.4" y="1219.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.4" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (50 samples, 1.17%)</title><rect x="1105.0" y="1299.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1108.0" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (50 samples, 1.17%)</title><rect x="1105.0" y="1283.0" width="13.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1108.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1762000431.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1105.0" y="1267.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1108.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1105.0" y="1251.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.0" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/637964804.get$Lambda (2 samples, 0.05%)</title><rect x="1105.0" y="1235.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="1105.0" y="1219.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.0" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (48 samples, 1.12%)</title><rect x="1105.5" y="1267.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 1.07%)</title><rect x="1106.1" y="1251.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1109.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (45 samples, 1.05%)</title><rect x="1106.1" y="1235.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1109.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (7 samples, 0.16%)</title><rect x="1106.4" y="1219.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1109.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.16%)</title><rect x="1106.4" y="1203.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.16%)</title><rect x="1106.4" y="1187.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.16%)</title><rect x="1106.4" y="1171.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (7 samples, 0.16%)</title><rect x="1106.4" y="1155.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.09%)</title><rect x="1108.3" y="1219.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.09%)</title><rect x="1108.3" y="1203.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.09%)</title><rect x="1108.3" y="1187.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.09%)</title><rect x="1108.3" y="1171.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.09%)</title><rect x="1108.3" y="1155.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="1108.8" y="1139.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1111.8" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="1108.8" y="1123.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1111.8" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1108.8" y="1107.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1111.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1109.1" y="1123.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1112.1" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1109.1" y="1107.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1112.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (33 samples, 0.77%)</title><rect x="1109.4" y="1219.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 0.77%)</title><rect x="1109.4" y="1203.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 0.77%)</title><rect x="1109.4" y="1187.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 0.77%)</title><rect x="1109.4" y="1171.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1112.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="1109.7" y="1155.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.72%)</title><rect x="1109.9" y="1155.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.9" y="1166.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1109.9" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1112.9" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (17 samples, 0.40%)</title><rect x="1110.2" y="1139.0" width="4.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1113.2" y="1150.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.05%)</title><rect x="1111.0" y="1123.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1114.0" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1111.6" y="1123.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1114.6" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="1111.9" y="1123.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1114.9" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="1112.4" y="1123.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.4" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1113.2" y="1123.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1116.2" y="1134.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="1113.5" y="1123.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1116.5" y="1134.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.09%)</title><rect x="1113.8" y="1123.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1116.8" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.26%)</title><rect x="1114.9" y="1139.0" width="3.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1117.9" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1117.9" y="1139.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1120.9" y="1150.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="1118.2" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1121.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="1118.5" y="1235.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="1118.5" y="1219.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1121.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="1118.5" y="1203.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="1118.5" y="1187.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="1118.5" y="1171.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.21%)</title><rect x="1118.7" y="1315.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.7" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.21%)</title><rect x="1118.7" y="1299.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.7" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="1118.7" y="1283.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.7" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.16%)</title><rect x="1119.3" y="1283.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.16%)</title><rect x="1119.3" y="1267.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.16%)</title><rect x="1119.3" y="1251.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.3" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.05%)</title><rect x="1121.2" y="1315.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="1121.2" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1121.2" y="1283.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.2" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1121.2" y="1267.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.2" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1121.2" y="1251.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.2" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1121.2" y="1235.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1124.2" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1121.2" y="1219.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.2" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1121.2" y="1203.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.2" y="1214.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1121.2" y="1187.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1124.2" y="1198.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="1121.2" y="1171.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1124.2" y="1182.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1121.5" y="1267.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.5" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1121.5" y="1251.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1124.5" y="1262.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1121.5" y="1235.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1124.5" y="1246.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1121.5" y="1219.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.5" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1121.5" y="1203.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1124.5" y="1214.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="1121.5" y="1187.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1124.5" y="1198.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.02%)</title><rect x="1121.5" y="1171.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1124.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 0.44%)</title><rect x="1121.8" y="1347.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.8" y="1358.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1122.6" y="1331.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1125.6" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1122.6" y="1315.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1125.6" y="1326.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1122.6" y="1299.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.6" y="1310.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1122.6" y="1283.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1125.6" y="1294.0"></text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (2 samples, 0.05%)</title><rect x="1122.9" y="1331.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.9" y="1342.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="1123.4" y="1331.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1126.4" y="1342.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1124.2" y="1331.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.12%)</title><rect x="1124.2" y="1315.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.12%)</title><rect x="1124.2" y="1299.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.12%)</title><rect x="1124.2" y="1283.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1127.2" y="1294.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="1125.6" y="1331.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.6" y="1342.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="1125.6" y="1315.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.6" y="1326.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1125.6" y="1299.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1128.6" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1125.6" y="1283.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1128.6" y="1294.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1125.6" y="1267.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1128.6" y="1278.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1125.6" y="1251.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.6" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1125.6" y="1235.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1128.6" y="1246.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1125.6" y="1219.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.6" y="1230.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.02%)</title><rect x="1125.6" y="1203.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1128.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1125.9" y="1299.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1125.9" y="1283.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="1125.9" y="1267.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.9" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1125.9" y="1251.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.9" y="1262.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.07%)</title><rect x="1126.2" y="1331.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.2" y="1342.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (29 samples, 0.68%)</title><rect x="1127.0" y="1347.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.16%)</title><rect x="1132.8" y="1331.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1135.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.14%)</title><rect x="1133.0" y="1315.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1134.7" y="1331.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1134.7" y="1315.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1137.7" y="1326.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1134.7" y="1299.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1137.7" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1134.7" y="1283.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1137.7" y="1294.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1134.7" y="1267.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.7" y="1278.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1134.7" y="1251.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.7" y="1262.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="1134.7" y="1235.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1137.7" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.12%)</title><rect x="1135.0" y="1347.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.0" y="1358.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.12%)</title><rect x="1135.0" y="1331.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.0" y="1342.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="1135.0" y="1315.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.0" y="1326.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1135.0" y="1299.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.0" y="1310.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1135.0" y="1283.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.0" y="1294.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1135.0" y="1267.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.0" y="1278.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="1135.0" y="1251.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.0" y="1262.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.02%)</title><rect x="1135.3" y="1251.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1135.5" y="1315.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1135.5" y="1299.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.07%)</title><rect x="1135.5" y="1283.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.5" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="1135.5" y="1267.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.5" y="1278.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1135.8" y="1251.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1138.8" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1135.8" y="1235.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.8" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1136.1" y="1219.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1139.1" y="1230.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1136.1" y="1203.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1139.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.02%)</title><rect x="1136.4" y="1363.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.4" y="1374.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (65 samples, 1.52%)</title><rect x="1136.6" y="1363.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.6" y="1374.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (64 samples, 1.49%)</title><rect x="1136.9" y="1347.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1139.9" y="1358.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (32 samples, 0.75%)</title><rect x="1138.6" y="1331.0" width="8.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1141.6" y="1342.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.09%)</title><rect x="1139.4" y="1315.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1142.4" y="1326.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1140.5" y="1315.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1143.5" y="1326.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="1140.8" y="1315.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1143.8" y="1326.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.14%)</title><rect x="1141.0" y="1315.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1144.0" y="1326.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.35%)</title><rect x="1142.7" y="1315.0" width="4.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1145.7" y="1326.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="1143.2" y="1299.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.2" y="1310.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1143.8" y="1299.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1146.8" y="1310.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.07%)</title><rect x="1144.1" y="1299.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.1" y="1310.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.16%)</title><rect x="1144.9" y="1299.0" width="1.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1147.9" y="1310.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.09%)</title><rect x="1145.7" y="1283.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.7" y="1294.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.05%)</title><rect x="1146.8" y="1315.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1149.8" y="1326.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="1147.4" y="1331.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1150.4" y="1342.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="1147.9" y="1331.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1150.9" y="1342.0"></text>
</g>
<g>
<title>recv (23 samples, 0.54%)</title><rect x="1148.2" y="1331.0" width="6.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1151.2" y="1342.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.09%)</title><rect x="1154.5" y="1395.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.5" y="1406.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1154.8" y="1379.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1157.8" y="1390.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="1155.1" y="1379.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1158.1" y="1390.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="1155.1" y="1363.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1158.1" y="1374.0"></text>
</g>
<g>
<title>start_thread (125 samples, 2.91%)</title><rect x="1155.6" y="1411.0" width="34.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1158.6" y="1422.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (125 samples, 2.91%)</title><rect x="1155.6" y="1395.0" width="34.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1158.6" y="1406.0">th..</text>
</g>
<g>
<title>Thread::call_run() (125 samples, 2.91%)</title><rect x="1155.6" y="1379.0" width="34.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.6" y="1390.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (89 samples, 2.08%)</title><rect x="1155.6" y="1363.0" width="24.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.6" y="1374.0">G..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (89 samples, 2.08%)</title><rect x="1155.6" y="1347.0" width="24.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.6" y="1358.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.14%)</title><rect x="1155.6" y="1331.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.6" y="1342.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.07%)</title><rect x="1156.4" y="1315.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.4" y="1326.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="1156.4" y="1299.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1159.4" y="1310.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.05%)</title><rect x="1156.7" y="1299.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.7" y="1310.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1157.0" y="1283.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.0" y="1294.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (82 samples, 1.91%)</title><rect x="1157.3" y="1331.0" width="22.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.3" y="1342.0">G..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (82 samples, 1.91%)</title><rect x="1157.3" y="1315.0" width="22.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.3" y="1326.0">G..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (82 samples, 1.91%)</title><rect x="1157.3" y="1299.0" width="22.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.3" y="1310.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (82 samples, 1.91%)</title><rect x="1157.3" y="1283.0" width="22.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.3" y="1294.0">D..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (81 samples, 1.89%)</title><rect x="1157.3" y="1267.0" width="22.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.3" y="1278.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1157.5" y="1251.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.5" y="1262.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (76 samples, 1.77%)</title><rect x="1157.8" y="1251.0" width="20.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.8" y="1262.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (55 samples, 1.28%)</title><rect x="1163.6" y="1235.0" width="15.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.6" y="1246.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (16 samples, 0.37%)</title><rect x="1174.3" y="1219.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.3" y="1230.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (3 samples, 0.07%)</title><rect x="1178.7" y="1251.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.7" y="1262.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.07%)</title><rect x="1178.7" y="1235.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.7" y="1246.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.02%)</title><rect x="1179.0" y="1219.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.0" y="1230.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1179.3" y="1219.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.3" y="1230.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (1 samples, 0.02%)</title><rect x="1179.5" y="1267.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.5" y="1278.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1179.8" y="1331.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.8" y="1342.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="1179.8" y="1315.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.8" y="1326.0"></text>
</g>
<g>
<title>G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker() (1 samples, 0.02%)</title><rect x="1179.8" y="1299.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.8" y="1310.0"></text>
</g>
<g>
<title>CompositeElapsedCounterSource::now() (1 samples, 0.02%)</title><rect x="1179.8" y="1283.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.8" y="1294.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.02%)</title><rect x="1179.8" y="1267.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.8" y="1278.0"></text>
</g>
<g>
<title>JavaThread::run() (35 samples, 0.82%)</title><rect x="1180.1" y="1363.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.1" y="1374.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (33 samples, 0.77%)</title><rect x="1180.1" y="1347.0" width="9.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.1" y="1358.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (33 samples, 0.77%)</title><rect x="1180.1" y="1331.0" width="9.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.1" y="1342.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (32 samples, 0.75%)</title><rect x="1180.1" y="1315.0" width="8.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.1" y="1326.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (32 samples, 0.75%)</title><rect x="1180.1" y="1299.0" width="8.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.1" y="1310.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (18 samples, 0.42%)</title><rect x="1180.1" y="1283.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.1" y="1294.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.02%)</title><rect x="1180.1" y="1267.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.1" y="1278.0"></text>
</g>
<g>
<title>indOffset32Oper::scale() const (1 samples, 0.02%)</title><rect x="1180.1" y="1251.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.1" y="1262.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.09%)</title><rect x="1180.4" y="1267.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.4" y="1278.0"></text>
</g>
<g>
<title>AddPNode::Opcode() const (1 samples, 0.02%)</title><rect x="1180.4" y="1251.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.4" y="1262.0"></text>
</g>
<g>
<title>Arena::destruct_contents() (1 samples, 0.02%)</title><rect x="1180.6" y="1251.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.6" y="1262.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1180.6" y="1235.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1183.6" y="1246.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.02%)</title><rect x="1180.9" y="1251.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.9" y="1262.0"></text>
</g>
<g>
<title>Matcher::is_bmi_pattern(Node*, Node*) [clone .part.132] (1 samples, 0.02%)</title><rect x="1180.9" y="1235.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.9" y="1246.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.02%)</title><rect x="1181.2" y="1251.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.2" y="1262.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.02%)</title><rect x="1181.2" y="1235.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.2" y="1246.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.02%)</title><rect x="1181.5" y="1267.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.5" y="1278.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.02%)</title><rect x="1181.5" y="1251.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.5" y="1262.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.02%)</title><rect x="1181.5" y="1235.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.5" y="1246.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (1 samples, 0.02%)</title><rect x="1181.5" y="1219.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.5" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (12 samples, 0.28%)</title><rect x="1181.7" y="1267.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.7" y="1278.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.02%)</title><rect x="1181.7" y="1251.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.7" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.02%)</title><rect x="1182.0" y="1251.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.0" y="1262.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.02%)</title><rect x="1182.0" y="1235.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.0" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.02%)</title><rect x="1182.3" y="1251.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.3" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.09%)</title><rect x="1182.6" y="1251.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.6" y="1262.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.02%)</title><rect x="1182.8" y="1235.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.8" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.05%)</title><rect x="1183.1" y="1235.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.1" y="1246.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1183.4" y="1219.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.4" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.02%)</title><rect x="1183.7" y="1251.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.7" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.02%)</title><rect x="1183.7" y="1235.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.7" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (1 samples, 0.02%)</title><rect x="1183.9" y="1251.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.9" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.02%)</title><rect x="1184.2" y="1251.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.2" y="1262.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.02%)</title><rect x="1184.5" y="1251.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.5" y="1262.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.02%)</title><rect x="1184.8" y="1251.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.8" y="1262.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1184.8" y="1235.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.8" y="1246.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="1184.8" y="1219.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.8" y="1230.0"></text>
</g>
<g>
<title>Compile::Optimize() (7 samples, 0.16%)</title><rect x="1185.0" y="1283.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.0" y="1294.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.02%)</title><rect x="1185.0" y="1267.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.0" y="1278.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.02%)</title><rect x="1185.0" y="1251.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.0" y="1262.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.02%)</title><rect x="1185.0" y="1235.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.0" y="1246.0"></text>
</g>
<g>
<title>ProjNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1185.0" y="1219.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.0" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.07%)</title><rect x="1185.3" y="1267.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.3" y="1278.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.02%)</title><rect x="1185.3" y="1251.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.3" y="1262.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.02%)</title><rect x="1185.6" y="1251.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.6" y="1262.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.02%)</title><rect x="1185.9" y="1251.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.9" y="1262.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.02%)</title><rect x="1185.9" y="1235.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.9" y="1246.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.02%)</title><rect x="1185.9" y="1219.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.9" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.07%)</title><rect x="1186.1" y="1267.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.1" y="1278.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.07%)</title><rect x="1186.1" y="1251.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.1" y="1262.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.05%)</title><rect x="1186.1" y="1235.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.1" y="1246.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.05%)</title><rect x="1186.1" y="1219.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.1" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.05%)</title><rect x="1186.1" y="1203.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.1" y="1214.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (2 samples, 0.05%)</title><rect x="1186.1" y="1187.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.1" y="1198.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1186.7" y="1235.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.7" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (1 samples, 0.02%)</title><rect x="1186.7" y="1219.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.7" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.7" y="1203.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.7" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.7" y="1187.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.7" y="1198.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.02%)</title><rect x="1186.7" y="1171.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.7" y="1182.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1186.7" y="1155.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.7" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.16%)</title><rect x="1187.0" y="1283.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.16%)</title><rect x="1187.0" y="1267.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.0" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.16%)</title><rect x="1187.0" y="1251.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.0" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.16%)</title><rect x="1187.0" y="1235.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.0" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.16%)</title><rect x="1187.0" y="1219.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="1230.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.16%)</title><rect x="1187.0" y="1203.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.0" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.16%)</title><rect x="1187.0" y="1187.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.0" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.16%)</title><rect x="1187.0" y="1171.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.0" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.16%)</title><rect x="1187.0" y="1155.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.0" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.16%)</title><rect x="1187.0" y="1139.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.16%)</title><rect x="1187.0" y="1123.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.0" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.16%)</title><rect x="1187.0" y="1107.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.0" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1187.0" y="1091.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.0" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1187.0" y="1075.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1187.0" y="1059.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.0" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1187.0" y="1043.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.0" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1187.0" y="1027.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.0" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1187.0" y="1011.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.0" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1187.0" y="995.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.0" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1187.0" y="979.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1187.0" y="963.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1187.0" y="947.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1187.0" y="931.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1187.0" y="915.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.0" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1187.0" y="899.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.0" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1187.0" y="883.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1187.0" y="867.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1187.0" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1187.0" y="835.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1187.0" y="819.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1187.0" y="803.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1187.0" y="787.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1187.0" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1187.0" y="755.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1187.0" y="739.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1187.0" y="723.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.0" y="734.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1187.0" y="707.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.0" y="718.0"></text>
</g>
<g>
<title>InlineTree::find_subtree_from_root(InlineTree*, JVMState*, ciMethod*) (1 samples, 0.02%)</title><rect x="1187.0" y="691.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.0" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.2" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.2" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.2" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.2" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.2" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.2" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1187.2" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1187.2" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.2" y="622.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1187.2" y="595.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.2" y="606.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1187.2" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.2" y="590.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1187.2" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.2" y="574.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.02%)</title><rect x="1187.2" y="547.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.2" y="558.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1187.2" y="531.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.2" y="542.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1187.2" y="515.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.2" y="526.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1187.2" y="499.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.2" y="510.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1187.2" y="483.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.2" y="494.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1187.5" y="1091.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.5" y="1102.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1187.5" y="1075.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.5" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.12%)</title><rect x="1187.5" y="1059.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.12%)</title><rect x="1187.5" y="1043.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.12%)</title><rect x="1187.5" y="1027.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.12%)</title><rect x="1187.5" y="1011.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.12%)</title><rect x="1187.5" y="995.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.5" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1187.5" y="979.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.5" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.09%)</title><rect x="1187.5" y="963.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.09%)</title><rect x="1187.5" y="947.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.09%)</title><rect x="1187.5" y="931.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.09%)</title><rect x="1187.5" y="915.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="1187.5" y="899.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.5" y="910.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1187.5" y="883.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.5" y="894.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1187.5" y="867.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.5" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1187.5" y="851.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.5" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.09%)</title><rect x="1187.5" y="835.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.5" y="846.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.02%)</title><rect x="1187.5" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.5" y="830.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1187.5" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.5" y="814.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1187.5" y="787.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.5" y="798.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.5" y="771.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.5" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.5" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.5" y="766.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1187.5" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1187.8" y="819.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1187.8" y="803.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1187.8" y="787.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="1187.8" y="771.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1187.8" y="755.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.8" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1187.8" y="739.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1187.8" y="723.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1187.8" y="707.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1187.8" y="691.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="1187.8" y="675.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.8" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.8" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.8" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.8" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.8" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.8" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="579.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="563.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.8" y="574.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1187.8" y="547.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.8" y="558.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1187.8" y="531.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.8" y="542.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1187.8" y="515.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.8" y="526.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1187.8" y="499.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.8" y="510.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="483.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.8" y="494.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="467.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.8" y="478.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1187.8" y="451.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.8" y="462.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="435.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.8" y="446.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="419.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.8" y="430.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.242] (1 samples, 0.02%)</title><rect x="1187.8" y="403.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.8" y="414.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.02%)</title><rect x="1187.8" y="387.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="398.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.02%)</title><rect x="1187.8" y="371.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.8" y="382.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.02%)</title><rect x="1187.8" y="355.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.8" y="366.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_boxed_value_offset(int) const (1 samples, 0.02%)</title><rect x="1187.8" y="339.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.8" y="350.0"></text>
</g>
<g>
<title>SystemDictionary::box_klass_type(Klass*) (1 samples, 0.02%)</title><rect x="1187.8" y="323.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.8" y="334.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1188.1" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1188.1" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.1" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1188.1" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1188.1" y="611.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1188.1" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1188.1" y="579.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1188.1" y="563.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.1" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1188.1" y="547.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.1" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1188.1" y="531.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1188.1" y="515.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1188.1" y="499.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1188.1" y="483.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1188.1" y="467.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1188.1" y="451.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.1" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1188.1" y="435.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.1" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1188.1" y="419.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1188.1" y="403.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1188.1" y="387.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1188.1" y="371.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1188.1" y="355.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1188.1" y="339.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1188.1" y="323.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1188.1" y="307.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1188.1" y="291.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="275.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="286.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="259.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.1" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="243.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.1" y="227.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.1" y="211.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.1" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.1" y="195.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.1" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.1" y="179.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="190.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="163.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="174.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.1" y="147.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="158.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.1" y="131.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="142.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.1" y="115.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.1" y="126.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.1" y="99.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="110.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.1" y="83.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.1" y="94.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.1" y="67.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="78.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_arguments_for_speculation(ciMethod*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1188.1" y="51.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="62.0"></text>
</g>
<g>
<title>ProfileData::is_VirtualCallTypeData() const (1 samples, 0.02%)</title><rect x="1188.1" y="35.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="46.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1188.3" y="275.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.3" y="286.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1188.3" y="259.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.3" y="270.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1188.3" y="243.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.3" y="254.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1188.3" y="227.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.3" y="238.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1188.3" y="211.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.3" y="222.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1188.3" y="195.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.3" y="206.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1188.3" y="179.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.3" y="190.0"></text>
</g>
<g>
<title>MergeMemNode::memory_at(unsigned int) const (1 samples, 0.02%)</title><rect x="1188.3" y="163.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.3" y="174.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.6" y="979.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.6" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.6" y="963.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.6" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.6" y="931.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.6" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.6" y="899.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.6" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.6" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.6" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.6" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.6" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.6" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.6" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.6" y="803.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.6" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.6" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.6" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.6" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.6" y="755.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.6" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.6" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.6" y="707.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1188.6" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.6" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1188.6" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.6" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.6" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1188.6" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1188.6" y="627.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1188.6" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1188.6" y="595.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1188.6" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.6" y="590.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1188.6" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.6" y="574.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1188.6" y="547.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.6" y="558.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1188.6" y="531.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.6" y="542.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.02%)</title><rect x="1188.6" y="515.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.6" y="526.0"></text>
</g>
<g>
<title>PhaseTransform::intcon(int) (1 samples, 0.02%)</title><rect x="1188.6" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.6" y="510.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.02%)</title><rect x="1188.6" y="483.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.6" y="494.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1188.9" y="1315.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.9" y="1326.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1188.9" y="1299.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.9" y="1310.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.02%)</title><rect x="1188.9" y="1283.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.9" y="1294.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.02%)</title><rect x="1188.9" y="1267.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.9" y="1278.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.02%)</title><rect x="1188.9" y="1251.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.9" y="1262.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.02%)</title><rect x="1188.9" y="1235.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="1246.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.02%)</title><rect x="1188.9" y="1219.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.9" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.02%)</title><rect x="1188.9" y="1203.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.9" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1188.9" y="1187.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.9" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1188.9" y="1171.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.9" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1188.9" y="1155.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.9" y="1166.0"></text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.02%)</title><rect x="1188.9" y="1139.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.9" y="1150.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (1 samples, 0.02%)</title><rect x="1189.2" y="1347.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.2" y="1358.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.02%)</title><rect x="1189.2" y="1331.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.2" y="1342.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.02%)</title><rect x="1189.2" y="1315.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.2" y="1326.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (1 samples, 0.02%)</title><rect x="1189.2" y="1299.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.2" y="1310.0"></text>
</g>
<g>
<title>CompiledMethod::clear_ic_callsites() (1 samples, 0.02%)</title><rect x="1189.2" y="1283.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.2" y="1294.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="1189.4" y="1347.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.4" y="1358.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.02%)</title><rect x="1189.4" y="1331.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.4" y="1342.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.02%)</title><rect x="1189.4" y="1315.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="1326.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.02%)</title><rect x="1189.4" y="1299.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1192.4" y="1310.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.02%)</title><rect x="1189.4" y="1283.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="1294.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.02%)</title><rect x="1189.4" y="1267.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="1278.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="1363.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.7" y="1374.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.02%)</title><rect x="1189.7" y="1347.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.7" y="1358.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.02%)</title><rect x="1189.7" y="1331.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.7" y="1342.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1189.7" y="1315.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.7" y="1326.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1189.7" y="1299.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.7" y="1310.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1189.7" y="1283.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.7" y="1294.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.02%)</title><rect x="1189.7" y="1267.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="1278.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.02%)</title><rect x="1189.7" y="1251.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.7" y="1262.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.02%)</title><rect x="1189.7" y="1235.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="1246.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (1 samples, 0.02%)</title><rect x="1189.7" y="1219.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.7" y="1230.0"></text>
</g>
</g>
</svg>
