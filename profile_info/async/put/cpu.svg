<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1301"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1301"> </text>
<g id="frames">
<g>
<title>all (4,153 samples, 100.00%)</title><rect x="10.0" y="1267.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="1278.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (64 samples, 1.54%)</title><rect x="10.0" y="1251.0" width="18.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="1262.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (60 samples, 1.44%)</title><rect x="11.1" y="1235.0" width="17.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.1" y="1246.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="11.1" y="1219.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.1" y="1230.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="11.4" y="1219.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.4" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.02%)</title><rect x="11.7" y="1219.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.7" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (56 samples, 1.35%)</title><rect x="12.0" y="1219.0" width="15.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.0" y="1230.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="13.1" y="1203.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.1" y="1214.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="13.7" y="1187.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.7" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (48 samples, 1.16%)</title><rect x="14.0" y="1203.0" width="13.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.0" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.17%)</title><rect x="16.0" y="1187.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="19.0" y="1198.0"></text>
</g>
<g>
<title>SpinPause (18 samples, 0.43%)</title><rect x="18.0" y="1187.0" width="5.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="21.0" y="1198.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (8 samples, 0.19%)</title><rect x="23.1" y="1187.0" width="2.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="26.1" y="1198.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (2 samples, 0.05%)</title><rect x="25.3" y="1187.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="28.3" y="1198.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.07%)</title><rect x="25.9" y="1187.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="28.9" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="26.2" y="1171.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="29.2" y="1182.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="26.8" y="1187.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="29.8" y="1198.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="27.0" y="1187.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="30.0" y="1198.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="27.3" y="1187.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="30.3" y="1198.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="27.6" y="1203.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="30.6" y="1214.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="27.9" y="1219.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="30.9" y="1230.0"></text>
</g>
<g>
<title>[not_walkable_Java] (10 samples, 0.24%)</title><rect x="28.2" y="1251.0" width="2.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="31.2" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.17%)</title><rect x="28.2" y="1235.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="31.2" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.14%)</title><rect x="28.5" y="1219.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="31.5" y="1230.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="28.5" y="1203.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="31.5" y="1214.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="28.8" y="1203.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.8" y="1214.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.07%)</title><rect x="28.8" y="1187.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="31.8" y="1198.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="29.3" y="1171.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.3" y="1182.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="29.6" y="1203.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.6" y="1214.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="29.6" y="1187.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.6" y="1198.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="29.6" y="1171.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.6" y="1182.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="29.6" y="1155.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.6" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="30.2" y="1235.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="33.2" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.02%)</title><rect x="30.7" y="1235.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="33.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.58%)</title><rect x="31.0" y="1251.0" width="6.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="34.0" y="1262.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (4 samples, 0.10%)</title><rect x="31.0" y="1235.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="34.0" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="32.2" y="1235.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="35.2" y="1246.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="32.2" y="1219.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="35.2" y="1230.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="32.2" y="1203.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="35.2" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.10%)</title><rect x="32.4" y="1235.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="35.4" y="1246.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.05%)</title><rect x="33.6" y="1235.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="36.6" y="1246.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="34.2" y="1235.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="37.2" y="1246.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (12 samples, 0.29%)</title><rect x="34.4" y="1235.0" width="3.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="37.4" y="1246.0"></text>
</g>
<g>
<title>[unknown_Java] (17 samples, 0.41%)</title><rect x="37.8" y="1251.0" width="4.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="40.8" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="37.8" y="1235.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="40.8" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.02%)</title><rect x="37.8" y="1219.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="40.8" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.07%)</title><rect x="38.1" y="1235.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="41.1" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.19%)</title><rect x="39.0" y="1235.0" width="2.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="42.0" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="41.3" y="1235.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="44.3" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="41.3" y="1219.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="44.3" y="1230.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="41.3" y="1203.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="44.3" y="1214.0"></text>
</g>
<g>
<title>sha256_implCompress (3 samples, 0.07%)</title><rect x="41.8" y="1235.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="44.8" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="42.7" y="1251.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="45.7" y="1262.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="42.7" y="1235.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="45.7" y="1246.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="42.7" y="1219.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="45.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,592 samples, 62.41%)</title><rect x="43.0" y="1251.0" width="736.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.0" y="1262.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,592 samples, 62.41%)</title><rect x="43.0" y="1235.0" width="736.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.0" y="1246.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,592 samples, 62.41%)</title><rect x="43.0" y="1219.0" width="736.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.0" y="1230.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (441 samples, 10.62%)</title><rect x="45.8" y="1203.0" width="125.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.8" y="1214.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (438 samples, 10.55%)</title><rect x="46.7" y="1187.0" width="124.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.7" y="1198.0">java/util/concu..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="46.9" y="1171.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="49.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (435 samples, 10.47%)</title><rect x="47.2" y="1171.0" width="123.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.2" y="1182.0">java/util/concu..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="48.1" y="1155.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="51.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="48.4" y="1155.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.02%)</title><rect x="48.4" y="1139.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="48.4" y="1123.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="48.4" y="1107.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1084020713.apply (430 samples, 10.35%)</title><rect x="48.6" y="1155.0" width="122.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.6" y="1166.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (430 samples, 10.35%)</title><rect x="48.6" y="1139.0" width="122.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.6" y="1150.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (430 samples, 10.35%)</title><rect x="48.6" y="1123.0" width="122.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.6" y="1134.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.02%)</title><rect x="48.9" y="1107.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.02%)</title><rect x="48.9" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="48.9" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.10%)</title><rect x="49.2" y="1107.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.10%)</title><rect x="49.2" y="1091.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="49.8" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (354 samples, 8.52%)</title><rect x="50.3" y="1107.0" width="100.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.3" y="1118.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (354 samples, 8.52%)</title><rect x="50.3" y="1091.0" width="100.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.3" y="1102.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (354 samples, 8.52%)</title><rect x="50.3" y="1075.0" width="100.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.3" y="1086.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (207 samples, 4.98%)</title><rect x="50.6" y="1059.0" width="58.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.6" y="1070.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (206 samples, 4.96%)</title><rect x="50.9" y="1043.0" width="58.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.9" y="1054.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (200 samples, 4.82%)</title><rect x="50.9" y="1027.0" width="56.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.9" y="1038.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1315053200.apply (200 samples, 4.82%)</title><rect x="50.9" y="1011.0" width="56.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.9" y="1022.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.02%)</title><rect x="50.9" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (199 samples, 4.79%)</title><rect x="51.2" y="995.0" width="56.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.2" y="1006.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (199 samples, 4.79%)</title><rect x="51.2" y="979.0" width="56.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.2" y="990.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/925206735.apply (1 samples, 0.02%)</title><rect x="51.2" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.02%)</title><rect x="51.2" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.02%)</title><rect x="51.2" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.02%)</title><rect x="51.2" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.02%)</title><rect x="51.2" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1 samples, 0.02%)</title><rect x="51.2" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="51.2" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (1 samples, 0.02%)</title><rect x="51.2" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="51.2" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="51.2" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/868767352.apply (198 samples, 4.77%)</title><rect x="51.5" y="963.0" width="56.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.5" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (198 samples, 4.77%)</title><rect x="51.5" y="947.0" width="56.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.5" y="958.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.07%)</title><rect x="51.8" y="931.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.07%)</title><rect x="51.8" y="915.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="52.1" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (194 samples, 4.67%)</title><rect x="52.6" y="931.0" width="55.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.6" y="942.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (174 samples, 4.19%)</title><rect x="53.2" y="915.0" width="49.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.2" y="926.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (174 samples, 4.19%)</title><rect x="53.2" y="899.0" width="49.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.2" y="910.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (6 samples, 0.14%)</title><rect x="54.6" y="883.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.6" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="54.9" y="867.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="57.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$430/2029056860.apply (4 samples, 0.10%)</title><rect x="55.2" y="867.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$424/1323568008.apply (162 samples, 3.90%)</title><rect x="56.3" y="883.0" width="46.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.3" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (162 samples, 3.90%)</title><rect x="56.3" y="867.0" width="46.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.3" y="878.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="56.6" y="851.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="56.6" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="56.9" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.24%)</title><rect x="57.5" y="851.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.24%)</title><rect x="57.5" y="835.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2 samples, 0.05%)</title><rect x="58.6" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.10%)</title><rect x="59.2" y="819.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.10%)</title><rect x="59.2" y="803.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="59.2" y="787.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.07%)</title><rect x="59.4" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.07%)</title><rect x="59.4" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.05%)</title><rect x="59.4" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.05%)</title><rect x="59.4" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="59.4" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="59.4" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.05%)</title><rect x="59.4" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.05%)</title><rect x="59.4" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.05%)</title><rect x="59.4" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.4" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.05%)</title><rect x="59.4" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.05%)</title><rect x="59.4" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="59.4" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="59.4" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.05%)</title><rect x="59.4" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.05%)</title><rect x="59.4" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.4" y="574.0"></text>
</g>
<g>
<title>writev (2 samples, 0.05%)</title><rect x="59.4" y="547.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="62.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="60.0" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (40 samples, 0.96%)</title><rect x="60.3" y="851.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (40 samples, 0.96%)</title><rect x="60.3" y="835.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (8 samples, 0.19%)</title><rect x="60.3" y="819.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (8 samples, 0.19%)</title><rect x="60.3" y="803.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (8 samples, 0.19%)</title><rect x="60.3" y="787.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8 samples, 0.19%)</title><rect x="60.3" y="771.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 0.19%)</title><rect x="60.3" y="755.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.3" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="61.1" y="739.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="64.1" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="61.1" y="723.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="64.1" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="61.1" y="707.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="64.1" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.05%)</title><rect x="61.1" y="691.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="64.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.07%)</title><rect x="61.7" y="739.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.7" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="62.0" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="65.0" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="62.0" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="65.0" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="62.0" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="65.0" y="702.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="62.0" y="675.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="65.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="62.3" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.3" y="734.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.02%)</title><rect x="62.3" y="707.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="65.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (32 samples, 0.77%)</title><rect x="62.6" y="819.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (32 samples, 0.77%)</title><rect x="62.6" y="803.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (29 samples, 0.70%)</title><rect x="62.6" y="787.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (27 samples, 0.65%)</title><rect x="62.6" y="771.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (27 samples, 0.65%)</title><rect x="62.6" y="755.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.6" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.19%)</title><rect x="63.4" y="739.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="66.4" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.19%)</title><rect x="63.4" y="723.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="66.4" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.17%)</title><rect x="63.4" y="707.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="66.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.05%)</title><rect x="63.7" y="691.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="66.7" y="702.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.10%)</title><rect x="64.3" y="691.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="67.3" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.02%)</title><rect x="65.4" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="68.4" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="65.4" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="68.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.39%)</title><rect x="65.7" y="739.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.7" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="67.4" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="70.4" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="67.4" y="707.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="70.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.07%)</title><rect x="67.4" y="691.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="70.4" y="702.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.07%)</title><rect x="67.4" y="675.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="70.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (7 samples, 0.17%)</title><rect x="68.2" y="723.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.2" y="734.0"></text>
</g>
<g>
<title>__libc_write (7 samples, 0.17%)</title><rect x="68.2" y="707.0" width="2.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="71.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (2 samples, 0.05%)</title><rect x="70.2" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.2" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="70.2" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="73.2" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="70.2" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="73.2" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="70.2" y="723.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="73.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="70.5" y="755.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="73.5" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="70.5" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="73.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="70.8" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (2 samples, 0.05%)</title><rect x="71.1" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.05%)</title><rect x="71.1" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="71.1" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="71.1" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (108 samples, 2.60%)</title><rect x="71.7" y="851.0" width="30.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.7" y="862.0">jd..</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.19%)</title><rect x="71.7" y="835.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.19%)</title><rect x="71.7" y="819.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (8 samples, 0.19%)</title><rect x="71.7" y="803.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="73.9" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.9" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="73.9" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.9" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.02%)</title><rect x="73.9" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (77 samples, 1.85%)</title><rect x="74.2" y="835.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.2" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (9 samples, 0.22%)</title><rect x="74.2" y="819.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.2" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (9 samples, 0.22%)</title><rect x="74.2" y="803.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.2" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (9 samples, 0.22%)</title><rect x="74.2" y="787.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (9 samples, 0.22%)</title><rect x="74.2" y="771.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (9 samples, 0.22%)</title><rect x="74.2" y="755.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.17%)</title><rect x="74.8" y="739.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.10%)</title><rect x="75.6" y="723.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.10%)</title><rect x="75.6" y="707.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.10%)</title><rect x="75.6" y="691.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (28 samples, 0.67%)</title><rect x="76.8" y="819.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.07%)</title><rect x="79.0" y="803.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.0" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="79.0" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.0" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.07%)</title><rect x="79.0" y="771.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="79.6" y="755.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="82.6" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.05%)</title><rect x="79.9" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.9" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.05%)</title><rect x="79.9" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.9" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.05%)</title><rect x="79.9" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.9" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.05%)</title><rect x="79.9" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.05%)</title><rect x="79.9" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.9" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.05%)</title><rect x="79.9" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.9" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (3 samples, 0.07%)</title><rect x="80.5" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.5" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (3 samples, 0.07%)</title><rect x="80.5" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (3 samples, 0.07%)</title><rect x="80.5" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.07%)</title><rect x="80.5" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.5" y="766.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$466/1134579550.test (10 samples, 0.24%)</title><rect x="81.3" y="803.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.3" y="814.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (9 samples, 0.22%)</title><rect x="81.6" y="787.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1442191055.test (5 samples, 0.12%)</title><rect x="82.7" y="771.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5 samples, 0.12%)</title><rect x="82.7" y="755.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.7" y="766.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1019298652.test (5 samples, 0.12%)</title><rect x="82.7" y="739.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.7" y="750.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5 samples, 0.12%)</title><rect x="82.7" y="723.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/119290689.test (5 samples, 0.12%)</title><rect x="82.7" y="707.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5 samples, 0.12%)</title><rect x="82.7" y="691.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.12%)</title><rect x="82.7" y="675.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.12%)</title><rect x="82.7" y="659.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.12%)</title><rect x="82.7" y="643.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.7" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="83.6" y="627.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="86.6" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="84.2" y="803.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="87.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (40 samples, 0.96%)</title><rect x="84.7" y="819.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.7" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (40 samples, 0.96%)</title><rect x="84.7" y="803.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.7" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (39 samples, 0.94%)</title><rect x="85.0" y="787.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.0" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="85.9" y="771.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="88.9" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (35 samples, 0.84%)</title><rect x="86.1" y="771.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.1" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (31 samples, 0.75%)</title><rect x="86.7" y="755.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.7" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (31 samples, 0.75%)</title><rect x="86.7" y="739.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (14 samples, 0.34%)</title><rect x="87.0" y="723.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.0" y="734.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.12%)</title><rect x="88.7" y="707.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="91.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/681008168.test (3 samples, 0.07%)</title><rect x="90.1" y="707.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.17%)</title><rect x="91.0" y="723.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.0" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (4 samples, 0.10%)</title><rect x="91.8" y="707.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.8" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.10%)</title><rect x="91.8" y="691.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.8" y="702.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.02%)</title><rect x="93.0" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.0" y="734.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.02%)</title><rect x="93.0" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.02%)</title><rect x="93.0" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="93.0" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.0" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="93.0" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="96.0" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.02%)</title><rect x="93.0" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="96.0" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="93.0" y="627.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="96.0" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="93.0" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="96.0" y="622.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="93.0" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="96.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.19%)</title><rect x="93.3" y="723.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="93.8" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="93.8" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="93.8" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.8" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.10%)</title><rect x="94.4" y="707.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.05%)</title><rect x="95.5" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.5" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (2 samples, 0.05%)</title><rect x="95.5" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (8 samples, 0.19%)</title><rect x="96.1" y="835.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (8 samples, 0.19%)</title><rect x="96.1" y="819.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="96.1" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.02%)</title><rect x="96.1" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1782580546.invoke (1 samples, 0.02%)</title><rect x="96.1" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="96.1" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="96.1" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="96.1" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.1" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="96.1" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="99.1" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="96.1" y="691.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="99.1" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="96.1" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="99.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (7 samples, 0.17%)</title><rect x="96.4" y="803.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.4" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="97.8" y="787.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="100.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.02%)</title><rect x="98.1" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (14 samples, 0.34%)</title><rect x="98.4" y="835.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.4" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.22%)</title><rect x="99.8" y="819.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="100.9" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="100.9" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="100.9" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.9" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.07%)</title><rect x="101.5" y="803.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$430/2029056860.apply (1 samples, 0.02%)</title><rect x="102.3" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (17 samples, 0.41%)</title><rect x="102.6" y="915.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (17 samples, 0.41%)</title><rect x="102.6" y="899.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.12%)</title><rect x="103.2" y="883.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.12%)</title><rect x="103.2" y="867.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.24%)</title><rect x="104.6" y="883.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.24%)</title><rect x="104.6" y="867.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.24%)</title><rect x="104.6" y="851.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.24%)</title><rect x="104.6" y="835.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.19%)</title><rect x="104.6" y="819.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (8 samples, 0.19%)</title><rect x="104.6" y="803.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8 samples, 0.19%)</title><rect x="104.6" y="787.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.12%)</title><rect x="104.9" y="771.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="104.9" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="104.9" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.02%)</title><rect x="104.9" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.9" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="104.9" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="107.9" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="104.9" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.9" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="104.9" y="675.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="107.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="104.9" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="107.9" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="104.9" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="107.9" y="654.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="104.9" y="627.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.02%)</title><rect x="105.2" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="105.2" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/706069328.run (1 samples, 0.02%)</title><rect x="105.2" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.02%)</title><rect x="105.2" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="105.2" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.2" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.02%)</title><rect x="105.2" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.02%)</title><rect x="105.2" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.07%)</title><rect x="105.5" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.07%)</title><rect x="105.5" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="105.5" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.05%)</title><rect x="106.3" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.02%)</title><rect x="106.6" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.02%)</title><rect x="106.6" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.02%)</title><rect x="106.6" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (1 samples, 0.02%)</title><rect x="106.6" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.05%)</title><rect x="106.9" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="107.2" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="107.2" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.02%)</title><rect x="107.5" y="915.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (6 samples, 0.14%)</title><rect x="107.7" y="1027.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$361/1315053200.apply (1 samples, 0.02%)</title><rect x="109.2" y="1011.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="109.4" y="1059.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="109.4" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="109.7" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.7" y="1038.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="109.7" y="1011.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="112.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (144 samples, 3.47%)</title><rect x="110.0" y="1059.0" width="40.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.0" y="1070.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.10%)</title><rect x="110.6" y="1043.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.10%)</title><rect x="110.6" y="1027.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="110.9" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/975015434.apply (2 samples, 0.05%)</title><rect x="110.9" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$351/975015434.apply (1 samples, 0.02%)</title><rect x="111.4" y="1011.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.02%)</title><rect x="111.4" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="111.4" y="979.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="111.4" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="111.4" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.24%)</title><rect x="111.7" y="1043.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.24%)</title><rect x="111.7" y="1027.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (3 samples, 0.07%)</title><rect x="112.3" y="1011.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (3 samples, 0.07%)</title><rect x="112.3" y="995.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.3" y="1006.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="112.3" y="979.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="115.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="113.1" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$343/982574544.accept (1 samples, 0.02%)</title><rect x="113.4" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.02%)</title><rect x="113.4" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.07%)</title><rect x="113.7" y="1011.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.07%)</title><rect x="113.7" y="995.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="114.3" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="114.3" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (128 samples, 3.08%)</title><rect x="114.6" y="1043.0" width="36.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.6" y="1054.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (128 samples, 3.08%)</title><rect x="114.6" y="1027.0" width="36.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.6" y="1038.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (127 samples, 3.06%)</title><rect x="114.6" y="1011.0" width="36.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.6" y="1022.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (9 samples, 0.22%)</title><rect x="114.8" y="995.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.8" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="116.3" y="979.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="119.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.02%)</title><rect x="116.5" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="116.8" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.02%)</title><rect x="117.1" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (6 samples, 0.14%)</title><rect x="117.4" y="995.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.14%)</title><rect x="117.4" y="979.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.14%)</title><rect x="117.4" y="963.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (6 samples, 0.14%)</title><rect x="117.4" y="947.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (6 samples, 0.14%)</title><rect x="117.4" y="931.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (6 samples, 0.14%)</title><rect x="117.4" y="915.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.4" y="926.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (6 samples, 0.14%)</title><rect x="117.4" y="899.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (18 samples, 0.43%)</title><rect x="119.1" y="995.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (17 samples, 0.41%)</title><rect x="119.4" y="979.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="122.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (17 samples, 0.41%)</title><rect x="119.4" y="963.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.19%)</title><rect x="120.0" y="947.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.14%)</title><rect x="120.0" y="931.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.07%)</title><rect x="120.8" y="915.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.8" y="926.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.07%)</title><rect x="120.8" y="899.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.8" y="910.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.07%)</title><rect x="120.8" y="883.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.8" y="894.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.07%)</title><rect x="120.8" y="867.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="121.7" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.05%)</title><rect x="121.7" y="915.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.7" y="926.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (2 samples, 0.05%)</title><rect x="121.7" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (7 samples, 0.17%)</title><rect x="122.2" y="947.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.2" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (7 samples, 0.17%)</title><rect x="122.2" y="931.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.2" y="942.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (7 samples, 0.17%)</title><rect x="122.2" y="915.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.2" y="926.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (7 samples, 0.17%)</title><rect x="122.2" y="899.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.2" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (7 samples, 0.17%)</title><rect x="122.2" y="883.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (93 samples, 2.24%)</title><rect x="124.2" y="995.0" width="26.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.2" y="1006.0">j..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (85 samples, 2.05%)</title><rect x="126.5" y="979.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.5" y="990.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="126.5" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="129.5" y="974.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.02%)</title><rect x="126.8" y="963.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="129.8" y="974.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (64 samples, 1.54%)</title><rect x="127.1" y="963.0" width="18.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="130.1" y="974.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (3 samples, 0.07%)</title><rect x="128.5" y="947.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="131.5" y="958.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="129.3" y="947.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="132.3" y="958.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (2 samples, 0.05%)</title><rect x="129.6" y="947.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="132.6" y="958.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.05%)</title><rect x="130.2" y="947.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="133.2" y="958.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="130.8" y="947.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="133.8" y="958.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.02%)</title><rect x="131.0" y="947.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="134.0" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.02%)</title><rect x="131.3" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="134.3" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.07%)</title><rect x="131.6" y="947.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="134.6" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (3 samples, 0.07%)</title><rect x="131.6" y="931.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="134.6" y="942.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.05%)</title><rect x="132.5" y="947.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="135.5" y="958.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (13 samples, 0.31%)</title><rect x="133.0" y="947.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="136.0" y="958.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.02%)</title><rect x="133.9" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="136.9" y="942.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="134.2" y="931.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="137.2" y="942.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.07%)</title><rect x="134.4" y="931.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="137.4" y="942.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="135.0" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="138.0" y="926.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (2 samples, 0.05%)</title><rect x="135.3" y="931.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="138.3" y="942.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="135.9" y="931.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="138.9" y="942.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.05%)</title><rect x="136.2" y="931.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="139.2" y="942.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="136.7" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="139.7" y="958.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="137.0" y="947.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="140.0" y="958.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (3 samples, 0.07%)</title><rect x="137.6" y="947.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="140.6" y="958.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="138.4" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="141.4" y="958.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="138.7" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="141.7" y="958.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (11 samples, 0.26%)</title><rect x="139.0" y="947.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="142.0" y="958.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="139.6" y="931.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="142.6" y="942.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (7 samples, 0.17%)</title><rect x="139.8" y="931.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="142.8" y="942.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.10%)</title><rect x="139.8" y="915.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="142.8" y="926.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="140.7" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="143.7" y="910.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="141.0" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="144.0" y="926.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.05%)</title><rect x="141.3" y="915.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="144.3" y="926.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="141.8" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="144.8" y="942.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.26%)</title><rect x="142.1" y="947.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="145.1" y="958.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.10%)</title><rect x="142.7" y="931.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="145.7" y="942.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="143.5" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="146.5" y="926.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="143.8" y="931.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="146.8" y="942.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.05%)</title><rect x="144.1" y="931.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="147.1" y="942.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="144.7" y="931.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="147.7" y="942.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="145.0" y="915.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="148.0" y="926.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="145.0" y="899.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="148.0" y="910.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="145.0" y="883.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="148.0" y="894.0"></text>
</g>
<g>
<title>JVM_DoPrivileged@plt (1 samples, 0.02%)</title><rect x="145.2" y="963.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="148.2" y="974.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.02%)</title><rect x="145.5" y="963.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="148.5" y="974.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.02%)</title><rect x="145.8" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="148.8" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.02%)</title><rect x="146.1" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="149.1" y="974.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.07%)</title><rect x="146.4" y="963.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="149.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$244/1029230441.run (10 samples, 0.24%)</title><rect x="147.2" y="963.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (10 samples, 0.24%)</title><rect x="147.2" y="947.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.2" y="958.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.02%)</title><rect x="147.2" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.2" y="942.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (9 samples, 0.22%)</title><rect x="147.5" y="931.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.5" y="942.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (9 samples, 0.22%)</title><rect x="147.5" y="915.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.5" y="926.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (9 samples, 0.22%)</title><rect x="147.5" y="899.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.5" y="910.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (9 samples, 0.22%)</title><rect x="147.5" y="883.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="147.5" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.5" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="147.5" y="851.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.5" y="862.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.02%)</title><rect x="147.5" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.02%)</title><rect x="147.8" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.8" y="878.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.02%)</title><rect x="147.8" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.8" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (7 samples, 0.17%)</title><rect x="148.1" y="867.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (5 samples, 0.12%)</title><rect x="148.7" y="851.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.7" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="148.7" y="835.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="151.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (2 samples, 0.05%)</title><rect x="148.9" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="148.9" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.02%)</title><rect x="149.2" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.02%)</title><rect x="149.2" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.2" y="798.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.05%)</title><rect x="149.5" y="835.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="152.5" y="846.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.05%)</title><rect x="150.1" y="963.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="153.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="150.6" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (39 samples, 0.94%)</title><rect x="150.9" y="1107.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.9" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.12%)</title><rect x="152.1" y="1091.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="155.1" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.12%)</title><rect x="152.1" y="1075.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="155.1" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.10%)</title><rect x="152.1" y="1059.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="155.1" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.05%)</title><rect x="152.1" y="1043.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="155.1" y="1054.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="152.6" y="1043.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="155.6" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.02%)</title><rect x="153.2" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="156.2" y="1070.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="153.2" y="1043.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="156.2" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (19 samples, 0.46%)</title><rect x="153.5" y="1091.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.5" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.26%)</title><rect x="155.8" y="1075.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.8" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="156.3" y="1059.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="159.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="156.6" y="1059.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="156.6" y="1043.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="156.6" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.6" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="157.2" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.2" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.12%)</title><rect x="157.5" y="1059.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (11 samples, 0.26%)</title><rect x="158.9" y="1091.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.9" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.26%)</title><rect x="158.9" y="1075.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.9" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="159.2" y="1059.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="162.2" y="1070.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="159.2" y="1043.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="162.2" y="1054.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="159.2" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="162.2" y="1038.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="159.5" y="1027.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="162.5" y="1038.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="159.7" y="1011.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="162.7" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (7 samples, 0.17%)</title><rect x="160.0" y="1059.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.0" y="1070.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.10%)</title><rect x="160.3" y="1043.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="163.3" y="1054.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="161.4" y="1043.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="164.4" y="1054.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="161.7" y="1043.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="164.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (6 samples, 0.14%)</title><rect x="162.0" y="1107.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.0" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.12%)</title><rect x="162.3" y="1091.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="165.3" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (3 samples, 0.07%)</title><rect x="162.3" y="1075.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="165.3" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.05%)</title><rect x="163.1" y="1075.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="166.1" y="1086.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="163.1" y="1059.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="166.1" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="163.4" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="166.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (17 samples, 0.41%)</title><rect x="163.7" y="1107.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.02%)</title><rect x="163.7" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (11 samples, 0.26%)</title><rect x="164.0" y="1091.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.02%)</title><rect x="165.1" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.14%)</title><rect x="165.4" y="1075.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.4" y="1086.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (4 samples, 0.10%)</title><rect x="166.0" y="1059.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.0" y="1070.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.02%)</title><rect x="166.0" y="1043.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.0" y="1054.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.02%)</title><rect x="166.0" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.02%)</title><rect x="166.0" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.02%)</title><rect x="166.0" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.0" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.07%)</title><rect x="166.3" y="1043.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.07%)</title><rect x="166.3" y="1027.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.3" y="1038.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.05%)</title><rect x="166.3" y="1011.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="169.3" y="1022.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="166.3" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="169.3" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="166.6" y="995.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="169.6" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.02%)</title><rect x="166.8" y="1011.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="169.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (5 samples, 0.12%)</title><rect x="167.1" y="1091.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (8 samples, 0.19%)</title><rect x="168.5" y="1107.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (8 samples, 0.19%)</title><rect x="168.5" y="1091.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (8 samples, 0.19%)</title><rect x="168.5" y="1075.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.5" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.now (8 samples, 0.19%)</title><rect x="168.5" y="1059.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.5" y="1070.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (8 samples, 0.19%)</title><rect x="168.5" y="1043.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.12%)</title><rect x="169.4" y="1027.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.4" y="1038.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.10%)</title><rect x="169.4" y="1011.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="172.4" y="1022.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="169.7" y="995.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="172.7" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.05%)</title><rect x="170.0" y="995.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="173.0" y="1006.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="170.0" y="979.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="173.0" y="990.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="170.3" y="979.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="173.3" y="990.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="170.3" y="963.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="173.3" y="974.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.02%)</title><rect x="170.5" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="173.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$190/1128368024.get (1 samples, 0.02%)</title><rect x="170.8" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (74 samples, 1.78%)</title><rect x="171.1" y="1203.0" width="21.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.1" y="1214.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (74 samples, 1.78%)</title><rect x="171.1" y="1187.0" width="21.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="174.1" y="1198.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (4 samples, 0.10%)</title><rect x="172.0" y="1171.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.10%)</title><rect x="172.0" y="1155.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.10%)</title><rect x="172.0" y="1139.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.0" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="172.2" y="1123.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="175.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$197/1087660786.apply (2 samples, 0.05%)</title><rect x="172.5" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (67 samples, 1.61%)</title><rect x="173.1" y="1171.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (65 samples, 1.57%)</title><rect x="173.7" y="1155.0" width="18.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (65 samples, 1.57%)</title><rect x="173.7" y="1139.0" width="18.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (63 samples, 1.52%)</title><rect x="174.2" y="1123.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.17%)</title><rect x="174.2" y="1107.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (7 samples, 0.17%)</title><rect x="174.2" y="1091.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.accept (5 samples, 0.12%)</title><rect x="174.8" y="1075.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="177.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.accept (56 samples, 1.35%)</title><rect x="176.2" y="1107.0" width="15.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (56 samples, 1.35%)</title><rect x="176.2" y="1091.0" width="15.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (54 samples, 1.30%)</title><rect x="176.2" y="1075.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (54 samples, 1.30%)</title><rect x="176.2" y="1059.0" width="15.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (50 samples, 1.20%)</title><rect x="177.1" y="1043.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (50 samples, 1.20%)</title><rect x="177.1" y="1027.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="177.1" y="1011.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.07%)</title><rect x="177.1" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$203/366038914.accept (2 samples, 0.05%)</title><rect x="177.4" y="979.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$203/366038914.accept (47 samples, 1.13%)</title><rect x="177.9" y="1011.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$15 (47 samples, 1.13%)</title><rect x="177.9" y="995.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (31 samples, 0.75%)</title><rect x="177.9" y="979.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.9" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (31 samples, 0.75%)</title><rect x="177.9" y="963.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.14%)</title><rect x="177.9" y="947.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.14%)</title><rect x="177.9" y="931.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.14%)</title><rect x="177.9" y="915.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="178.2" y="899.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="181.2" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="178.2" y="883.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="181.2" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="178.8" y="899.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="181.8" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="178.8" y="883.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="181.8" y="894.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="179.1" y="883.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="182.1" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="179.3" y="867.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="182.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (23 samples, 0.55%)</title><rect x="179.6" y="947.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.14%)</title><rect x="179.6" y="931.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.6" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="180.8" y="915.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.8" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="180.8" y="899.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="183.8" y="910.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="180.8" y="883.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="183.8" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="180.8" y="867.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="183.8" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="180.8" y="851.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="183.8" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="180.8" y="835.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="183.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="181.0" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="181.0" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="181.0" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="181.0" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="181.0" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.41%)</title><rect x="181.3" y="931.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.41%)</title><rect x="181.3" y="915.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.3" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (16 samples, 0.39%)</title><rect x="181.6" y="899.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (16 samples, 0.39%)</title><rect x="181.6" y="883.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.6" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.14%)</title><rect x="182.2" y="867.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="185.2" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="182.5" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="185.5" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="182.8" y="851.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="185.8" y="862.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="183.0" y="851.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="186.0" y="862.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.02%)</title><rect x="183.6" y="851.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="186.6" y="862.0"></text>
</g>
<g>
<title>__send (8 samples, 0.19%)</title><rect x="183.9" y="867.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="186.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="186.2" y="947.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="186.4" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="186.4" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$200/1835347556.mergeResponse (16 samples, 0.39%)</title><rect x="186.7" y="979.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$11 (16 samples, 0.39%)</title><rect x="186.7" y="963.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.7" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (12 samples, 0.29%)</title><rect x="187.3" y="947.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.3" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.29%)</title><rect x="187.3" y="931.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.3" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (1 samples, 0.02%)</title><rect x="187.3" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.3" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.02%)</title><rect x="187.3" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.3" y="910.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.02%)</title><rect x="187.3" y="883.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (11 samples, 0.26%)</title><rect x="187.6" y="915.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.6" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.26%)</title><rect x="187.6" y="899.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="190.6" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (10 samples, 0.24%)</title><rect x="187.6" y="883.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.6" y="894.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (8 samples, 0.19%)</title><rect x="187.6" y="867.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.19%)</title><rect x="187.6" y="851.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.02%)</title><rect x="188.2" y="835.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1 samples, 0.02%)</title><rect x="188.4" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$624/36709845.apply (4 samples, 0.10%)</title><rect x="188.7" y="835.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$10 (4 samples, 0.10%)</title><rect x="188.7" y="819.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.7" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="189.6" y="803.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="192.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.05%)</title><rect x="189.9" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.9" y="878.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="189.9" y="851.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="192.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="190.4" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1 samples, 0.02%)</title><rect x="190.4" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="190.4" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="190.4" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.4" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (2 samples, 0.05%)</title><rect x="190.7" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.7" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (2 samples, 0.05%)</title><rect x="190.7" y="931.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.7" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (2 samples, 0.05%)</title><rect x="190.7" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.7" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.05%)</title><rect x="190.7" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.7" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.05%)</title><rect x="190.7" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (1 samples, 0.02%)</title><rect x="191.0" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.0" y="878.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="191.3" y="1043.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="194.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (2 samples, 0.05%)</title><rect x="191.6" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (31 samples, 0.75%)</title><rect x="192.1" y="1203.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (31 samples, 0.75%)</title><rect x="192.1" y="1187.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.75%)</title><rect x="192.1" y="1171.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 0.75%)</title><rect x="192.1" y="1155.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.1" y="1166.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.24%)</title><rect x="193.5" y="1139.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="196.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.05%)</title><rect x="196.4" y="1139.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.05%)</title><rect x="197.0" y="1139.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.10%)</title><rect x="197.5" y="1139.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.5" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.run (8 samples, 0.19%)</title><rect x="198.7" y="1139.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (867 samples, 20.88%)</title><rect x="200.9" y="1203.0" width="246.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.9" y="1214.0">java/util/concurrent/ThreadPoolEx..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (265 samples, 6.38%)</title><rect x="205.5" y="1187.0" width="75.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.5" y="1198.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (3 samples, 0.07%)</title><rect x="212.3" y="1171.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="215.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.07%)</title><rect x="212.3" y="1155.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.07%)</title><rect x="212.3" y="1139.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.07%)</title><rect x="212.3" y="1123.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (195 samples, 4.70%)</title><rect x="213.2" y="1171.0" width="55.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.2" y="1182.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="215.1" y="1155.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="215.1" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="215.1" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="215.4" y="1107.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="215.4" y="1091.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="218.4" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="215.4" y="1075.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="218.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (23 samples, 0.55%)</title><rect x="215.7" y="1155.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 0.55%)</title><rect x="215.7" y="1139.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.07%)</title><rect x="221.4" y="1123.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.07%)</title><rect x="221.4" y="1107.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="221.7" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.7" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="221.7" y="1075.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="224.7" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="222.0" y="1059.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="225.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (162 samples, 3.90%)</title><rect x="222.2" y="1155.0" width="46.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.2" y="1166.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (162 samples, 3.90%)</title><rect x="222.2" y="1139.0" width="46.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.2" y="1150.0">jdk/..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="222.8" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="225.8" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (92 samples, 2.22%)</title><rect x="223.1" y="1123.0" width="26.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="226.1" y="1134.0">U..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="224.2" y="1107.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="227.2" y="1118.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.07%)</title><rect x="224.5" y="1107.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="227.5" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (21 samples, 0.51%)</title><rect x="225.4" y="1107.0" width="5.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="228.4" y="1118.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.14%)</title><rect x="227.6" y="1091.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="230.6" y="1102.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="229.1" y="1075.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="232.1" y="1086.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.17%)</title><rect x="229.3" y="1091.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="232.3" y="1102.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="231.3" y="1107.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="234.3" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.17%)</title><rect x="231.6" y="1107.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="234.6" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (5 samples, 0.12%)</title><rect x="233.6" y="1107.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="236.6" y="1118.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="235.0" y="1107.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="238.0" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="235.3" y="1107.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="238.3" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (39 samples, 0.94%)</title><rect x="235.6" y="1107.0" width="11.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="238.6" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="246.7" y="1107.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="249.7" y="1118.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (8 samples, 0.19%)</title><rect x="247.0" y="1107.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="250.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.47%)</title><rect x="249.2" y="1123.0" width="17.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="252.2" y="1134.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (5 samples, 0.12%)</title><rect x="249.2" y="1107.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="252.2" y="1118.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="250.7" y="1107.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="253.7" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (46 samples, 1.11%)</title><rect x="251.2" y="1107.0" width="13.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="254.2" y="1118.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.10%)</title><rect x="264.3" y="1107.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="267.3" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.07%)</title><rect x="265.4" y="1107.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="268.4" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="266.3" y="1107.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="269.3" y="1118.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (6 samples, 0.14%)</title><rect x="266.6" y="1123.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="269.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="268.3" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.07%)</title><rect x="268.6" y="1171.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.07%)</title><rect x="268.6" y="1155.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.07%)</title><rect x="268.6" y="1139.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.07%)</title><rect x="268.6" y="1123.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.07%)</title><rect x="268.6" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="268.6" y="1091.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.6" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.05%)</title><rect x="268.6" y="1075.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="271.6" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="268.6" y="1059.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="271.6" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="268.6" y="1043.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="271.6" y="1054.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="268.8" y="1059.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="271.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="269.1" y="1075.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="272.1" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="269.1" y="1059.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="272.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (40 samples, 0.96%)</title><rect x="269.4" y="1171.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (40 samples, 0.96%)</title><rect x="269.4" y="1155.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (40 samples, 0.96%)</title><rect x="269.4" y="1139.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (40 samples, 0.96%)</title><rect x="269.4" y="1123.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.75%)</title><rect x="272.0" y="1107.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.0" y="1118.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="272.5" y="1091.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="275.5" y="1102.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="272.8" y="1091.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="275.8" y="1102.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="273.1" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="276.1" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.36%)</title><rect x="273.4" y="1091.0" width="4.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="276.4" y="1102.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="273.7" y="1075.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="276.7" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.05%)</title><rect x="274.2" y="1075.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="277.2" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="274.8" y="1075.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="277.8" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="275.1" y="1075.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="278.1" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.05%)</title><rect x="275.7" y="1075.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="278.7" y="1086.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.07%)</title><rect x="276.2" y="1075.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="279.2" y="1086.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="277.1" y="1075.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="280.1" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.26%)</title><rect x="277.7" y="1091.0" width="3.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="280.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (586 samples, 14.11%)</title><rect x="280.8" y="1187.0" width="166.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.8" y="1198.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (397 samples, 9.56%)</title><rect x="291.9" y="1171.0" width="112.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.9" y="1182.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.14%)</title><rect x="294.4" y="1155.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.14%)</title><rect x="294.4" y="1139.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="297.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.14%)</title><rect x="294.4" y="1123.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.12%)</title><rect x="294.7" y="1107.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.7" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.12%)</title><rect x="294.7" y="1091.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="297.7" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="294.7" y="1075.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="297.7" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="295.0" y="1075.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="298.0" y="1086.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="295.8" y="1075.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="298.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (114 samples, 2.75%)</title><rect x="296.1" y="1155.0" width="32.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="299.1" y="1166.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (114 samples, 2.75%)</title><rect x="296.1" y="1139.0" width="32.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.1" y="1150.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (90 samples, 2.17%)</title><rect x="301.5" y="1123.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.5" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (90 samples, 2.17%)</title><rect x="301.5" y="1107.0" width="25.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.5" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (4 samples, 0.10%)</title><rect x="302.1" y="1091.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (84 samples, 2.02%)</title><rect x="303.2" y="1091.0" width="23.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.2" y="1102.0">j..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="303.2" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="306.2" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="303.5" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="306.5" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="303.8" y="1075.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="306.8" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="304.1" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="307.1" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Unpark (46 samples, 1.11%)</title><rect x="304.4" y="1075.0" width="13.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="307.4" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.10%)</title><rect x="306.6" y="1059.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="309.6" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (3 samples, 0.07%)</title><rect x="307.8" y="1059.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="310.8" y="1070.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.07%)</title><rect x="308.6" y="1059.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="311.6" y="1070.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.19%)</title><rect x="309.5" y="1059.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="312.5" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="311.5" y="1043.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="314.5" y="1054.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="311.7" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="314.7" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="312.0" y="1059.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="315.0" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="312.9" y="1059.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="315.9" y="1070.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.07%)</title><rect x="313.2" y="1059.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="316.2" y="1070.0"></text>
</g>
<g>
<title>pthread_mutex_lock (12 samples, 0.29%)</title><rect x="314.0" y="1059.0" width="3.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="317.0" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.75%)</title><rect x="317.4" y="1075.0" width="8.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="320.4" y="1086.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="326.2" y="1075.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="329.2" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.05%)</title><rect x="326.5" y="1075.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="329.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (5 samples, 0.12%)</title><rect x="327.1" y="1123.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.02%)</title><rect x="328.5" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.02%)</title><rect x="328.5" y="1139.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (263 samples, 6.33%)</title><rect x="328.8" y="1155.0" width="74.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.8" y="1166.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (263 samples, 6.33%)</title><rect x="328.8" y="1139.0" width="74.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.8" y="1150.0">jdk/inte..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.05%)</title><rect x="330.5" y="1123.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="333.5" y="1134.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.07%)</title><rect x="331.1" y="1123.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="334.1" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="331.9" y="1123.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="334.9" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="332.2" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="335.2" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (137 samples, 3.30%)</title><rect x="332.5" y="1123.0" width="38.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="335.5" y="1134.0">Uns..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.05%)</title><rect x="334.5" y="1107.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="337.5" y="1118.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.10%)</title><rect x="335.0" y="1107.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="338.0" y="1118.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="336.2" y="1107.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="339.2" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (46 samples, 1.11%)</title><rect x="336.5" y="1107.0" width="13.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="339.5" y="1118.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="343.3" y="1091.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="346.3" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (10 samples, 0.24%)</title><rect x="343.6" y="1091.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="346.6" y="1102.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="346.1" y="1075.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="349.1" y="1086.0"></text>
</g>
<g>
<title>Monitor::unlock() (5 samples, 0.12%)</title><rect x="346.4" y="1091.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="349.4" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.14%)</title><rect x="347.8" y="1091.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="350.8" y="1102.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="349.5" y="1107.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="352.5" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.17%)</title><rect x="349.8" y="1107.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="352.8" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (3 samples, 0.07%)</title><rect x="351.8" y="1107.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="354.8" y="1118.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="352.7" y="1107.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="355.7" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="352.9" y="1107.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="355.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (56 samples, 1.35%)</title><rect x="353.2" y="1107.0" width="15.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="356.2" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="369.1" y="1107.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="372.1" y="1118.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.12%)</title><rect x="369.4" y="1107.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="372.4" y="1118.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="370.8" y="1107.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="373.8" y="1118.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.02%)</title><rect x="371.1" y="1107.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="374.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 2.60%)</title><rect x="371.4" y="1123.0" width="30.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="374.4" y="1134.0">[u..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (6 samples, 0.14%)</title><rect x="371.4" y="1107.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="374.4" y="1118.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.10%)</title><rect x="373.1" y="1107.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="376.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="374.3" y="1107.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="377.3" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (83 samples, 2.00%)</title><rect x="374.5" y="1107.0" width="23.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="377.5" y="1118.0">_..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.14%)</title><rect x="398.1" y="1107.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="401.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="399.8" y="1107.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="402.8" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (5 samples, 0.12%)</title><rect x="400.1" y="1107.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="403.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="401.5" y="1107.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="404.5" y="1118.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="401.8" y="1107.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="404.8" y="1118.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.12%)</title><rect x="402.1" y="1123.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="405.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.10%)</title><rect x="403.5" y="1155.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (33 samples, 0.79%)</title><rect x="404.7" y="1171.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="407.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (33 samples, 0.79%)</title><rect x="404.7" y="1155.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (33 samples, 0.79%)</title><rect x="404.7" y="1139.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (19 samples, 0.46%)</title><rect x="414.0" y="1171.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (19 samples, 0.46%)</title><rect x="414.0" y="1155.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (19 samples, 0.46%)</title><rect x="414.0" y="1139.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="416.0" y="1123.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (11 samples, 0.26%)</title><rect x="416.3" y="1123.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.26%)</title><rect x="416.3" y="1107.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.26%)</title><rect x="416.3" y="1091.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.3" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.22%)</title><rect x="416.3" y="1075.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="419.3" y="1086.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="416.6" y="1059.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="419.6" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="416.9" y="1059.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="419.9" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="417.2" y="1043.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="420.2" y="1054.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="417.4" y="1059.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="420.4" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="417.7" y="1059.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="420.7" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="418.0" y="1059.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="421.0" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="418.6" y="1059.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="421.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="418.9" y="1075.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="421.9" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="418.9" y="1059.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="421.9" y="1070.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="419.2" y="1059.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="422.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (98 samples, 2.36%)</title><rect x="419.4" y="1171.0" width="27.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.4" y="1182.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (98 samples, 2.36%)</title><rect x="419.4" y="1155.0" width="27.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.4" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (98 samples, 2.36%)</title><rect x="419.4" y="1139.0" width="27.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.4" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (97 samples, 2.34%)</title><rect x="419.4" y="1123.0" width="27.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.4" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (87 samples, 2.09%)</title><rect x="422.3" y="1107.0" width="24.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="425.3" y="1118.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.05%)</title><rect x="422.8" y="1091.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="425.8" y="1102.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="423.4" y="1091.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="426.4" y="1102.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="424.0" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="427.0" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (46 samples, 1.11%)</title><rect x="424.3" y="1091.0" width="13.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="427.3" y="1102.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="425.4" y="1075.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="428.4" y="1086.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="426.0" y="1075.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="429.0" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (9 samples, 0.22%)</title><rect x="426.3" y="1075.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="429.3" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.07%)</title><rect x="428.8" y="1075.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="431.8" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.19%)</title><rect x="429.7" y="1075.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="432.7" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="431.9" y="1075.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="434.9" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="432.5" y="1075.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="435.5" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.05%)</title><rect x="432.8" y="1075.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="435.8" y="1086.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="433.4" y="1075.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="436.4" y="1086.0"></text>
</g>
<g>
<title>pthread_mutex_lock (12 samples, 0.29%)</title><rect x="433.9" y="1075.0" width="3.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="436.9" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.75%)</title><rect x="437.3" y="1091.0" width="8.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="440.3" y="1102.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (3 samples, 0.07%)</title><rect x="446.1" y="1091.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="449.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="447.0" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$470/1679529773.run (206 samples, 4.96%)</title><rect x="447.3" y="1203.0" width="58.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.3" y="1214.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (206 samples, 4.96%)</title><rect x="447.3" y="1187.0" width="58.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.3" y="1198.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (205 samples, 4.94%)</title><rect x="447.6" y="1171.0" width="58.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.6" y="1182.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (198 samples, 4.77%)</title><rect x="449.6" y="1155.0" width="56.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.6" y="1166.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (198 samples, 4.77%)</title><rect x="449.6" y="1139.0" width="56.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.6" y="1150.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (198 samples, 4.77%)</title><rect x="449.6" y="1123.0" width="56.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.6" y="1134.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (196 samples, 4.72%)</title><rect x="449.6" y="1107.0" width="55.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.6" y="1118.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="449.6" y="1091.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (3 samples, 0.07%)</title><rect x="449.6" y="1075.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (3 samples, 0.07%)</title><rect x="449.6" y="1059.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.6" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="449.6" y="1043.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="452.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.05%)</title><rect x="449.8" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (193 samples, 4.65%)</title><rect x="450.4" y="1091.0" width="54.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.4" y="1102.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (193 samples, 4.65%)</title><rect x="450.4" y="1075.0" width="54.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.4" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="450.7" y="1059.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="450.7" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="450.7" y="1027.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="450.7" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="450.7" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="450.7" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="450.7" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (191 samples, 4.60%)</title><rect x="451.0" y="1059.0" width="54.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.0" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (190 samples, 4.58%)</title><rect x="451.3" y="1043.0" width="53.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.3" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (94 samples, 2.26%)</title><rect x="452.7" y="1027.0" width="26.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.7" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (79 samples, 1.90%)</title><rect x="454.1" y="1011.0" width="22.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.1" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.07%)</title><rect x="455.5" y="995.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (71 samples, 1.71%)</title><rect x="456.4" y="995.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (68 samples, 1.64%)</title><rect x="456.4" y="979.0" width="19.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (68 samples, 1.64%)</title><rect x="456.4" y="963.0" width="19.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="459.4" y="974.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="457.5" y="947.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="460.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13 samples, 0.31%)</title><rect x="458.4" y="947.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.4" y="958.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="458.9" y="931.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="461.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="459.5" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="459.5" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="459.8" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.8" y="942.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$31/1197365356.apply (1 samples, 0.02%)</title><rect x="460.1" y="931.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$503/474007538.apply (6 samples, 0.14%)</title><rect x="460.3" y="931.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5 samples, 0.12%)</title><rect x="460.6" y="915.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5 samples, 0.12%)</title><rect x="460.6" y="899.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (5 samples, 0.12%)</title><rect x="460.6" y="883.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.12%)</title><rect x="460.6" y="867.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.12%)</title><rect x="460.6" y="851.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (37 samples, 0.89%)</title><rect x="462.1" y="947.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (34 samples, 0.82%)</title><rect x="462.9" y="931.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="462.9" y="915.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.07%)</title><rect x="462.9" y="899.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$435/1932218312.apply (1 samples, 0.02%)</title><rect x="463.5" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$435/1932218312.apply (31 samples, 0.75%)</title><rect x="463.8" y="915.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.05%)</title><rect x="463.8" y="899.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (29 samples, 0.70%)</title><rect x="464.3" y="899.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (29 samples, 0.70%)</title><rect x="464.3" y="883.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$207/925206735.apply (26 samples, 0.63%)</title><rect x="464.3" y="867.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (26 samples, 0.63%)</title><rect x="464.3" y="851.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="464.6" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="464.6" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="464.6" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (23 samples, 0.55%)</title><rect x="465.2" y="835.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (20 samples, 0.48%)</title><rect x="465.2" y="819.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (14 samples, 0.34%)</title><rect x="466.9" y="803.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (14 samples, 0.34%)</title><rect x="466.9" y="787.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$486/406708749.accept (1 samples, 0.02%)</title><rect x="466.9" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.02%)</title><rect x="466.9" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.02%)</title><rect x="466.9" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.02%)</title><rect x="466.9" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="466.9" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="466.9" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$497/908126266.accept (13 samples, 0.31%)</title><rect x="467.2" y="771.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (13 samples, 0.31%)</title><rect x="467.2" y="755.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (13 samples, 0.31%)</title><rect x="467.2" y="739.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (13 samples, 0.31%)</title><rect x="467.2" y="723.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (13 samples, 0.31%)</title><rect x="467.2" y="707.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.31%)</title><rect x="467.2" y="691.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.31%)</title><rect x="467.2" y="675.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.17%)</title><rect x="468.9" y="659.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.17%)</title><rect x="468.9" y="643.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (7 samples, 0.17%)</title><rect x="468.9" y="627.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (3 samples, 0.07%)</title><rect x="468.9" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.07%)</title><rect x="468.9" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.07%)</title><rect x="468.9" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="468.9" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.10%)</title><rect x="469.7" y="611.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.10%)</title><rect x="469.7" y="595.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.7" y="606.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.05%)</title><rect x="469.7" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="470.3" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="470.3" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="470.3" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="473.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="470.6" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (3 samples, 0.07%)</title><rect x="470.9" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (3 samples, 0.07%)</title><rect x="470.9" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (3 samples, 0.07%)</title><rect x="470.9" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.9" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="470.9" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.9" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="470.9" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.9" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="470.9" y="739.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.9" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="470.9" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.9" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="470.9" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$211/868767352.apply (3 samples, 0.07%)</title><rect x="471.7" y="867.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3 samples, 0.07%)</title><rect x="471.7" y="851.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (3 samples, 0.07%)</title><rect x="471.7" y="835.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (3 samples, 0.07%)</title><rect x="471.7" y="819.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.07%)</title><rect x="471.7" y="803.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.07%)</title><rect x="471.7" y="787.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.07%)</title><rect x="471.7" y="771.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.05%)</title><rect x="472.6" y="947.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.02%)</title><rect x="472.9" y="931.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.02%)</title><rect x="472.9" y="915.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$478/966811203.get (1 samples, 0.02%)</title><rect x="473.1" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$518/2112924215.get (3 samples, 0.07%)</title><rect x="473.4" y="947.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.4" y="958.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.12%)</title><rect x="474.3" y="947.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="477.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="475.7" y="979.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (3 samples, 0.07%)</title><rect x="475.7" y="963.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (3 samples, 0.07%)</title><rect x="475.7" y="947.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.7" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="475.7" y="931.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="478.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.05%)</title><rect x="476.0" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (5 samples, 0.12%)</title><rect x="476.5" y="1011.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.07%)</title><rect x="477.1" y="995.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.05%)</title><rect x="477.4" y="979.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (2 samples, 0.05%)</title><rect x="477.4" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.12%)</title><rect x="478.0" y="1011.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.12%)</title><rect x="478.0" y="995.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (5 samples, 0.12%)</title><rect x="478.0" y="979.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (5 samples, 0.12%)</title><rect x="478.0" y="963.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.0" y="974.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="478.0" y="947.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="481.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$515/2000702015.run (4 samples, 0.10%)</title><rect x="478.2" y="947.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.05%)</title><rect x="479.4" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.05%)</title><rect x="479.4" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.05%)</title><rect x="479.4" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (89 samples, 2.14%)</title><rect x="480.0" y="1027.0" width="25.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.0" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (89 samples, 2.14%)</title><rect x="480.0" y="1011.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.0" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (89 samples, 2.14%)</title><rect x="480.0" y="995.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.0" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (83 samples, 2.00%)</title><rect x="481.7" y="979.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.7" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$510/1796891645.run (4 samples, 0.10%)</title><rect x="481.9" y="963.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (4 samples, 0.10%)</title><rect x="481.9" y="947.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3 samples, 0.07%)</title><rect x="482.2" y="931.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (2 samples, 0.05%)</title><rect x="482.5" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="482.5" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="482.5" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (78 samples, 1.88%)</title><rect x="483.1" y="963.0" width="22.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.1" y="974.0">j..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (72 samples, 1.73%)</title><rect x="483.1" y="947.0" width="20.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (72 samples, 1.73%)</title><rect x="483.1" y="931.0" width="20.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="483.4" y="915.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="483.4" y="899.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.10%)</title><rect x="483.6" y="915.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.10%)</title><rect x="483.6" y="899.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.10%)</title><rect x="483.6" y="883.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.10%)</title><rect x="483.6" y="867.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.6" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (66 samples, 1.59%)</title><rect x="484.8" y="915.0" width="18.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.8" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (65 samples, 1.57%)</title><rect x="485.1" y="899.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (18 samples, 0.43%)</title><rect x="485.1" y="883.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (18 samples, 0.43%)</title><rect x="485.1" y="867.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (18 samples, 0.43%)</title><rect x="485.1" y="851.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (47 samples, 1.13%)</title><rect x="490.2" y="883.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.2" y="894.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="492.2" y="867.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="495.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (39 samples, 0.94%)</title><rect x="492.5" y="867.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.5" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="493.9" y="851.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="496.9" y="862.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (2 samples, 0.05%)</title><rect x="494.7" y="851.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="497.7" y="862.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="495.0" y="835.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="498.0" y="846.0"></text>
</g>
<g>
<title>convertLongReturnVal (1 samples, 0.02%)</title><rect x="495.3" y="851.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="498.3" y="862.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="495.6" y="851.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="498.6" y="862.0"></text>
</g>
<g>
<title>writev (27 samples, 0.65%)</title><rect x="495.9" y="851.0" width="7.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="498.9" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.14%)</title><rect x="503.5" y="947.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.5" y="958.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="504.4" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="507.4" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="504.4" y="915.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="507.4" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="504.4" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="507.4" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="504.4" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="507.4" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="504.4" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="507.4" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="504.4" y="851.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="507.4" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="504.4" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="507.4" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="504.4" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="507.4" y="830.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="504.4" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="507.4" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.02%)</title><rect x="504.4" y="787.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="507.4" y="798.0"></text>
</g>
<g>
<title>HeapRegionTracer::send_region_type_change(unsigned int, G1HeapRegionTraceType::Type, G1HeapRegionTraceType::Type, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="504.4" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="507.4" y="782.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.02%)</title><rect x="504.7" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.02%)</title><rect x="505.0" y="931.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.05%)</title><rect x="505.2" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="505.2" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (611 samples, 14.71%)</title><rect x="505.8" y="1203.0" width="173.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.8" y="1214.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="505.8" y="1187.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="508.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (609 samples, 14.66%)</title><rect x="506.4" y="1187.0" width="173.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.4" y="1198.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="506.9" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="506.9" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="506.9" y="1139.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="506.9" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="506.9" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="506.9" y="1091.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="506.9" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (329 samples, 7.92%)</title><rect x="507.2" y="1171.0" width="93.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.2" y="1182.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (327 samples, 7.87%)</title><rect x="507.8" y="1155.0" width="92.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.8" y="1166.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (326 samples, 7.85%)</title><rect x="508.1" y="1139.0" width="92.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.1" y="1150.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (37 samples, 0.89%)</title><rect x="508.4" y="1123.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (37 samples, 0.89%)</title><rect x="508.4" y="1107.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (37 samples, 0.89%)</title><rect x="508.4" y="1091.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (37 samples, 0.89%)</title><rect x="508.4" y="1075.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (37 samples, 0.89%)</title><rect x="508.4" y="1059.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (37 samples, 0.89%)</title><rect x="508.4" y="1043.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (36 samples, 0.87%)</title><rect x="508.7" y="1027.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (36 samples, 0.87%)</title><rect x="508.7" y="1011.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="511.7" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="510.6" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="513.6" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="510.9" y="995.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="513.9" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.07%)</title><rect x="510.9" y="979.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="513.9" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (3 samples, 0.07%)</title><rect x="510.9" y="963.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="513.9" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.02%)</title><rect x="511.8" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.02%)</title><rect x="511.8" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.8" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="511.8" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 0.58%)</title><rect x="512.1" y="995.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.1" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.19%)</title><rect x="512.3" y="979.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="515.3" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.17%)</title><rect x="512.6" y="963.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="515.6" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.14%)</title><rect x="512.9" y="947.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="515.9" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (4 samples, 0.10%)</title><rect x="512.9" y="931.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="515.9" y="942.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="514.1" y="931.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="517.1" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (15 samples, 0.36%)</title><rect x="514.6" y="979.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.6" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="515.8" y="963.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="518.8" y="974.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="515.8" y="947.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="518.8" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="516.0" y="947.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="519.0" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="516.0" y="931.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="519.0" y="942.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="516.3" y="915.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="519.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (8 samples, 0.19%)</title><rect x="516.6" y="963.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.6" y="974.0"></text>
</g>
<g>
<title>__libc_write (7 samples, 0.17%)</title><rect x="516.6" y="947.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="519.6" y="958.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="518.6" y="947.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="521.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="518.9" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.02%)</title><rect x="518.9" y="1107.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="518.9" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/706069328.run (1 samples, 0.02%)</title><rect x="518.9" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.02%)</title><rect x="518.9" y="1059.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="518.9" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="518.9" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="518.9" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.02%)</title><rect x="518.9" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="518.9" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="521.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="518.9" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="518.9" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (4 samples, 0.10%)</title><rect x="519.2" y="1123.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.subscription (1 samples, 0.02%)</title><rect x="520.0" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (283 samples, 6.81%)</title><rect x="520.3" y="1123.0" width="80.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.3" y="1134.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.07%)</title><rect x="520.9" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (3 samples, 0.07%)</title><rect x="520.9" y="1091.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="520.9" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.02%)</title><rect x="521.2" y="1075.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.2" y="1086.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="521.4" y="1075.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="524.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (276 samples, 6.65%)</title><rect x="521.7" y="1107.0" width="78.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.7" y="1118.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (276 samples, 6.65%)</title><rect x="521.7" y="1091.0" width="78.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.7" y="1102.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (276 samples, 6.65%)</title><rect x="521.7" y="1075.0" width="78.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.7" y="1086.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (168 samples, 4.05%)</title><rect x="522.0" y="1059.0" width="47.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.0" y="1070.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="522.0" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="522.0" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="522.0" y="1011.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.0" y="1022.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="522.0" y="995.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="525.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (167 samples, 4.02%)</title><rect x="522.3" y="1043.0" width="47.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.3" y="1054.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="522.9" y="1027.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="522.9" y="1011.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (164 samples, 3.95%)</title><rect x="523.1" y="1027.0" width="46.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.1" y="1038.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (161 samples, 3.88%)</title><rect x="523.1" y="1011.0" width="45.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.1" y="1022.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (161 samples, 3.88%)</title><rect x="523.1" y="995.0" width="45.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.1" y="1006.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (157 samples, 3.78%)</title><rect x="523.1" y="979.0" width="44.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.1" y="990.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (157 samples, 3.78%)</title><rect x="523.1" y="963.0" width="44.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.1" y="974.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (16 samples, 0.39%)</title><rect x="523.1" y="947.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.1" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (16 samples, 0.39%)</title><rect x="523.1" y="931.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.1" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (16 samples, 0.39%)</title><rect x="523.1" y="915.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.1" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="525.4" y="899.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="528.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$522/1200579297.apply (6 samples, 0.14%)</title><rect x="526.0" y="899.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (131 samples, 3.15%)</title><rect x="527.7" y="947.0" width="37.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="530.7" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (131 samples, 3.15%)</title><rect x="527.7" y="931.0" width="37.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.7" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (108 samples, 2.60%)</title><rect x="528.0" y="915.0" width="30.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.0" y="926.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="528.5" y="899.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="531.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="528.8" y="899.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.05%)</title><rect x="528.8" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.02%)</title><rect x="529.4" y="899.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.02%)</title><rect x="529.4" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.4" y="894.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$31/1197365356.apply (1 samples, 0.02%)</title><rect x="529.7" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1615536830.apply (75 samples, 1.81%)</title><rect x="530.0" y="899.0" width="21.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.0" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (75 samples, 1.81%)</title><rect x="530.0" y="883.0" width="21.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.0" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.02%)</title><rect x="530.0" y="867.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.02%)</title><rect x="530.0" y="851.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (74 samples, 1.78%)</title><rect x="530.2" y="867.0" width="21.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.2" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (74 samples, 1.78%)</title><rect x="530.2" y="851.0" width="21.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.2" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (71 samples, 1.71%)</title><rect x="530.5" y="835.0" width="20.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.5" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (24 samples, 0.58%)</title><rect x="532.2" y="819.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.2" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.12%)</title><rect x="532.2" y="803.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.2" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.12%)</title><rect x="532.2" y="787.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.12%)</title><rect x="532.2" y="771.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.12%)</title><rect x="532.2" y="755.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.12%)</title><rect x="532.2" y="739.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="532.8" y="723.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="532.8" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.07%)</title><rect x="532.8" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.8" y="702.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.05%)</title><rect x="533.7" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.7" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.05%)</title><rect x="533.7" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="536.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.05%)</title><rect x="533.7" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (17 samples, 0.41%)</title><rect x="534.2" y="803.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.41%)</title><rect x="534.2" y="787.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (17 samples, 0.41%)</title><rect x="534.2" y="771.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.2" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (1 samples, 0.02%)</title><rect x="535.9" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.24%)</title><rect x="536.2" y="755.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.17%)</title><rect x="536.8" y="739.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.8" y="750.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (3 samples, 0.07%)</title><rect x="536.8" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.07%)</title><rect x="536.8" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.8" y="718.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="537.3" y="691.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="540.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.10%)</title><rect x="537.6" y="723.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.10%)</title><rect x="537.6" y="707.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="538.8" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="539.1" y="819.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="539.1" y="803.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="539.1" y="787.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="539.1" y="771.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="539.1" y="755.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="539.1" y="739.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="539.1" y="723.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (40 samples, 0.96%)</title><rect x="539.3" y="819.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="539.6" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (2 samples, 0.05%)</title><rect x="539.6" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.05%)</title><rect x="539.6" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.6" y="782.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="539.6" y="755.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="542.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$559/1235714752.run (1 samples, 0.02%)</title><rect x="539.9" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$559/1235714752.run (37 samples, 0.89%)</title><rect x="540.2" y="803.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (37 samples, 0.89%)</title><rect x="540.2" y="787.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="541.3" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="541.3" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="541.6" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="541.6" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.6" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="541.9" y="771.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="544.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (8 samples, 0.19%)</title><rect x="542.5" y="771.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.05%)</title><rect x="542.5" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.05%)</title><rect x="542.5" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.05%)</title><rect x="542.5" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="545.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.14%)</title><rect x="543.0" y="755.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.14%)</title><rect x="543.0" y="739.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.02%)</title><rect x="544.5" y="723.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (17 samples, 0.41%)</title><rect x="544.7" y="771.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (17 samples, 0.41%)</title><rect x="544.7" y="755.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="545.0" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="545.0" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$594/353462104.get$Lambda (2 samples, 0.05%)</title><rect x="545.0" y="707.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.0" y="718.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.05%)</title><rect x="545.0" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.0" y="702.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (10 samples, 0.24%)</title><rect x="545.6" y="739.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.6" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (8 samples, 0.19%)</title><rect x="546.2" y="723.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.2" y="734.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (7 samples, 0.17%)</title><rect x="546.4" y="707.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.4" y="718.0"></text>
</g>
<g>
<title>JVM_IHashCode (6 samples, 0.14%)</title><rect x="546.4" y="691.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="549.4" y="702.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="546.4" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="549.4" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (4 samples, 0.10%)</title><rect x="546.7" y="675.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="549.7" y="686.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.05%)</title><rect x="547.0" y="659.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="550.0" y="670.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="547.6" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="550.6" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="547.9" y="675.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="550.9" y="686.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (1 samples, 0.02%)</title><rect x="548.1" y="691.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="551.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.10%)</title><rect x="548.4" y="739.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.10%)</title><rect x="548.4" y="723.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="549.0" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="549.0" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="549.0" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="549.3" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="549.3" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (4 samples, 0.10%)</title><rect x="549.6" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.6" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="550.4" y="755.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="553.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/PutDeleteBodyHandler.apply (2 samples, 0.05%)</title><rect x="550.7" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/RejectedExecutionException.&lt;init&gt; (2 samples, 0.05%)</title><rect x="550.7" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$441/491272286.apply (26 samples, 0.63%)</title><rect x="551.3" y="899.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (24 samples, 0.58%)</title><rect x="551.8" y="883.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (23 samples, 0.55%)</title><rect x="551.8" y="867.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (13 samples, 0.31%)</title><rect x="554.4" y="851.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (12 samples, 0.29%)</title><rect x="554.7" y="835.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.7" y="846.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (11 samples, 0.26%)</title><rect x="555.0" y="819.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.0" y="830.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (5 samples, 0.12%)</title><rect x="555.0" y="803.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.0" y="814.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (5 samples, 0.12%)</title><rect x="555.0" y="787.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.05%)</title><rect x="555.0" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.0" y="782.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (3 samples, 0.07%)</title><rect x="555.5" y="771.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (3 samples, 0.07%)</title><rect x="555.5" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.5" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.14%)</title><rect x="556.4" y="803.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (6 samples, 0.14%)</title><rect x="556.4" y="787.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.4" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="556.4" y="771.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="559.4" y="782.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.05%)</title><rect x="557.0" y="771.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="560.0" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.02%)</title><rect x="557.2" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="560.2" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.05%)</title><rect x="557.5" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="560.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (1 samples, 0.02%)</title><rect x="558.1" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="558.4" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="558.4" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="558.4" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (12 samples, 0.29%)</title><rect x="558.7" y="915.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="558.9" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.24%)</title><rect x="559.2" y="899.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="559.2" y="883.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.07%)</title><rect x="559.2" y="867.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.2" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="559.2" y="851.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="562.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/80373017.apply (2 samples, 0.05%)</title><rect x="559.5" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$445/80373017.apply (7 samples, 0.17%)</title><rect x="560.1" y="883.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7 samples, 0.17%)</title><rect x="560.1" y="867.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="563.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (6 samples, 0.14%)</title><rect x="560.1" y="851.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (6 samples, 0.14%)</title><rect x="560.1" y="835.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.1" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="560.1" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="563.1" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="560.1" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="563.1" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="560.1" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="563.1" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="560.1" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="563.1" y="782.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (5 samples, 0.12%)</title><rect x="560.4" y="819.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.4" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (5 samples, 0.12%)</title><rect x="560.4" y="803.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.02%)</title><rect x="560.4" y="787.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.07%)</title><rect x="560.6" y="787.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.02%)</title><rect x="561.2" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.02%)</title><rect x="561.5" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="561.8" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="561.8" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="561.8" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (8 samples, 0.19%)</title><rect x="562.1" y="915.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (5 samples, 0.12%)</title><rect x="562.4" y="899.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.4" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="562.4" y="883.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="562.4" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (2 samples, 0.05%)</title><rect x="563.2" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.05%)</title><rect x="563.8" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.8" y="910.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="564.3" y="915.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="567.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$522/1200579297.apply (10 samples, 0.24%)</title><rect x="564.9" y="947.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (10 samples, 0.24%)</title><rect x="564.9" y="931.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.02%)</title><rect x="564.9" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (9 samples, 0.22%)</title><rect x="565.2" y="915.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.12%)</title><rect x="565.2" y="899.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.12%)</title><rect x="565.2" y="883.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.12%)</title><rect x="565.2" y="867.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (4 samples, 0.10%)</title><rect x="566.6" y="899.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.6" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (3 samples, 0.07%)</title><rect x="566.9" y="883.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureOpen (1 samples, 0.02%)</title><rect x="567.5" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.5" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.02%)</title><rect x="567.5" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.10%)</title><rect x="567.8" y="979.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="567.8" y="963.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (3 samples, 0.07%)</title><rect x="568.0" y="963.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="571.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (3 samples, 0.07%)</title><rect x="568.0" y="947.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.0" y="958.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="568.0" y="931.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="571.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (3 samples, 0.07%)</title><rect x="568.9" y="1011.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="568.9" y="995.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="568.9" y="979.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="569.2" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.05%)</title><rect x="569.7" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (102 samples, 2.46%)</title><rect x="570.3" y="1059.0" width="29.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.3" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.02%)</title><rect x="571.7" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (9 samples, 0.22%)</title><rect x="572.0" y="1043.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.12%)</title><rect x="572.0" y="1027.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.12%)</title><rect x="572.0" y="1011.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.07%)</title><rect x="572.6" y="995.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.6" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="572.9" y="979.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.9" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.10%)</title><rect x="573.4" y="1027.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.4" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.05%)</title><rect x="574.0" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (13 samples, 0.31%)</title><rect x="574.6" y="1043.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.24%)</title><rect x="575.4" y="1027.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.24%)</title><rect x="575.4" y="1011.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (12 samples, 0.29%)</title><rect x="578.3" y="1043.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.10%)</title><rect x="579.4" y="1027.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.10%)</title><rect x="579.4" y="1011.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.10%)</title><rect x="579.4" y="995.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.4" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="580.3" y="979.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="583.3" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.10%)</title><rect x="580.5" y="1027.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.02%)</title><rect x="581.4" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (4 samples, 0.10%)</title><rect x="581.7" y="1043.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.7" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="581.7" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="584.7" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="581.7" y="1011.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="584.7" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="581.7" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="584.7" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="581.7" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="584.7" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="581.7" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="584.7" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.05%)</title><rect x="582.0" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.05%)</title><rect x="582.0" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.02%)</title><rect x="582.2" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="582.5" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="585.5" y="1038.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="582.5" y="1011.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="585.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (25 samples, 0.60%)</title><rect x="582.8" y="1043.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.8" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 0.55%)</title><rect x="583.4" y="1027.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.4" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 0.55%)</title><rect x="583.4" y="1011.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.4" y="1022.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="584.5" y="995.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="587.5" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (16 samples, 0.39%)</title><rect x="585.4" y="995.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.4" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (12 samples, 0.29%)</title><rect x="586.5" y="979.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.5" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.29%)</title><rect x="586.5" y="963.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.5" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.12%)</title><rect x="587.1" y="947.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.1" y="958.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="587.1" y="931.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="590.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/681008168.test (3 samples, 0.07%)</title><rect x="587.6" y="931.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.6" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.07%)</title><rect x="588.5" y="947.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.5" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (2 samples, 0.05%)</title><rect x="588.8" y="931.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="588.8" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="589.3" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="589.3" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="589.3" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="589.3" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.3" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="589.6" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (33 samples, 0.79%)</title><rect x="589.9" y="1043.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="589.9" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="589.9" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="589.9" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.02%)</title><rect x="589.9" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (32 samples, 0.77%)</title><rect x="590.2" y="1027.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.19%)</title><rect x="590.2" y="1011.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.19%)</title><rect x="590.2" y="995.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.19%)</title><rect x="590.2" y="979.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.2" y="990.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="592.2" y="963.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="595.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (8 samples, 0.19%)</title><rect x="592.5" y="1011.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.07%)</title><rect x="593.6" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.6" y="1006.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="594.5" y="995.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="597.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.17%)</title><rect x="594.7" y="1011.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.17%)</title><rect x="594.7" y="995.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="596.4" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="596.7" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.7" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (8 samples, 0.19%)</title><rect x="597.0" y="1011.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="597.6" y="995.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="597.9" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="597.9" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.02%)</title><rect x="598.2" y="995.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$534/2041148455.apply (3 samples, 0.07%)</title><rect x="598.4" y="995.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (3 samples, 0.07%)</title><rect x="598.4" y="979.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.07%)</title><rect x="598.4" y="963.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$378/7833235.accept (3 samples, 0.07%)</title><rect x="599.3" y="1059.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (3 samples, 0.07%)</title><rect x="599.3" y="1043.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.05%)</title><rect x="600.1" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.02%)</title><rect x="600.4" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.02%)</title><rect x="600.4" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (277 samples, 6.67%)</title><rect x="600.7" y="1171.0" width="78.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.7" y="1182.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (276 samples, 6.65%)</title><rect x="601.0" y="1155.0" width="78.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.0" y="1166.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (275 samples, 6.62%)</title><rect x="601.0" y="1139.0" width="78.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.0" y="1150.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/756189365.run (275 samples, 6.62%)</title><rect x="601.0" y="1123.0" width="78.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.0" y="1134.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (274 samples, 6.60%)</title><rect x="601.3" y="1107.0" width="77.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.3" y="1118.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (266 samples, 6.41%)</title><rect x="601.3" y="1091.0" width="75.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.3" y="1102.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (264 samples, 6.36%)</title><rect x="601.3" y="1075.0" width="75.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.3" y="1086.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (264 samples, 6.36%)</title><rect x="601.3" y="1059.0" width="75.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.3" y="1070.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$567/706069328.run (178 samples, 4.29%)</title><rect x="601.3" y="1043.0" width="50.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.3" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (178 samples, 4.29%)</title><rect x="601.3" y="1027.0" width="50.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.3" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (178 samples, 4.29%)</title><rect x="601.3" y="1011.0" width="50.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.3" y="1022.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (19 samples, 0.46%)</title><rect x="601.3" y="995.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.3" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (11 samples, 0.26%)</title><rect x="601.3" y="979.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.3" y="990.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (11 samples, 0.26%)</title><rect x="601.3" y="963.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.3" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (11 samples, 0.26%)</title><rect x="601.3" y="947.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.3" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (11 samples, 0.26%)</title><rect x="601.3" y="931.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.3" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (11 samples, 0.26%)</title><rect x="601.3" y="915.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (11 samples, 0.26%)</title><rect x="601.3" y="899.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (11 samples, 0.26%)</title><rect x="601.3" y="883.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (11 samples, 0.26%)</title><rect x="601.3" y="867.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.14%)</title><rect x="602.7" y="851.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.7" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.14%)</title><rect x="602.7" y="835.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.7" y="846.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.05%)</title><rect x="603.8" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.8" y="830.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.07%)</title><rect x="604.4" y="979.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.4" y="990.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.07%)</title><rect x="604.4" y="963.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (3 samples, 0.07%)</title><rect x="604.4" y="947.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.4" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.12%)</title><rect x="605.3" y="979.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.3" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.10%)</title><rect x="605.5" y="963.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.5" y="974.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.10%)</title><rect x="605.5" y="947.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.10%)</title><rect x="605.5" y="931.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.05%)</title><rect x="605.5" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.05%)</title><rect x="605.5" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.05%)</title><rect x="605.5" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.5" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.05%)</title><rect x="605.5" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.5" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.checkAbstractListModCount (1 samples, 0.02%)</title><rect x="605.5" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.02%)</title><rect x="605.8" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.8" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$547/32013420.applyAsLong (1 samples, 0.02%)</title><rect x="605.8" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.8" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="606.1" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (158 samples, 3.80%)</title><rect x="606.7" y="995.0" width="44.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.7" y="1006.0">jdk/..</text>
</g>
<g>
<title>java/time/Instant.now (8 samples, 0.19%)</title><rect x="606.7" y="979.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.7" y="990.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (8 samples, 0.19%)</title><rect x="606.7" y="963.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.10%)</title><rect x="607.8" y="947.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.8" y="958.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.07%)</title><rect x="608.1" y="931.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="611.1" y="942.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="608.7" y="915.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="611.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (150 samples, 3.61%)</title><rect x="609.0" y="979.0" width="42.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.0" y="990.0">jdk/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.29%)</title><rect x="610.7" y="963.0" width="3.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="613.7" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.26%)</title><rect x="610.9" y="947.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="613.9" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.26%)</title><rect x="610.9" y="931.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="613.9" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.17%)</title><rect x="610.9" y="915.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="613.9" y="926.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.10%)</title><rect x="612.9" y="915.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="615.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.02%)</title><rect x="614.1" y="963.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (71 samples, 1.71%)</title><rect x="614.3" y="963.0" width="20.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.3" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.02%)</title><rect x="628.0" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="631.0" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="628.0" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="631.0" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.02%)</title><rect x="628.0" y="915.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="631.0" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.02%)</title><rect x="628.0" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="631.0" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::extract_attached_method(vframeStream&amp;) (1 samples, 0.02%)</title><rect x="628.0" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="631.0" y="894.0"></text>
</g>
<g>
<title>CompiledMethod::attached_method_before_pc(unsigned char*) (1 samples, 0.02%)</title><rect x="628.0" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="631.0" y="878.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.02%)</title><rect x="628.0" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="631.0" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (1 samples, 0.02%)</title><rect x="628.3" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.3" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (1 samples, 0.02%)</title><rect x="628.3" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.02%)</title><rect x="628.3" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.3" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.plus (7 samples, 0.17%)</title><rect x="628.6" y="947.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.6" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (7 samples, 0.17%)</title><rect x="628.6" y="931.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.6" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.plus (7 samples, 0.17%)</title><rect x="628.6" y="915.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.6" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="630.3" y="899.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.3" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.02%)</title><rect x="630.3" y="883.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.3" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (8 samples, 0.19%)</title><rect x="630.5" y="947.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.5" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.02%)</title><rect x="632.8" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.8" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.12%)</title><rect x="633.1" y="947.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="636.1" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="634.2" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (8 samples, 0.19%)</title><rect x="634.5" y="963.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.19%)</title><rect x="634.5" y="947.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.14%)</title><rect x="634.5" y="931.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="636.2" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.05%)</title><rect x="636.2" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.2" y="926.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.05%)</title><rect x="636.2" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.2" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.05%)</title><rect x="636.2" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (52 samples, 1.25%)</title><rect x="636.8" y="963.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (52 samples, 1.25%)</title><rect x="636.8" y="947.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (21 samples, 0.51%)</title><rect x="636.8" y="931.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (21 samples, 0.51%)</title><rect x="636.8" y="915.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (21 samples, 0.51%)</title><rect x="636.8" y="899.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (18 samples, 0.43%)</title><rect x="637.1" y="883.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (18 samples, 0.43%)</title><rect x="637.1" y="867.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.1" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="637.9" y="851.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="640.9" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="637.9" y="835.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="640.9" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="637.9" y="819.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="640.9" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="638.2" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="641.2" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.02%)</title><rect x="638.5" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="641.5" y="830.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="638.5" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="641.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (12 samples, 0.29%)</title><rect x="638.8" y="851.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="641.8" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="641.1" y="835.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="644.1" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="641.1" y="819.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="644.1" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="641.1" y="803.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="644.1" y="814.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="641.1" y="787.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="644.1" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.02%)</title><rect x="641.6" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="644.6" y="814.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.02%)</title><rect x="641.6" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="644.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="641.9" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.9" y="846.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.02%)</title><rect x="641.9" y="819.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="644.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.05%)</title><rect x="642.2" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (31 samples, 0.75%)</title><rect x="642.8" y="931.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (31 samples, 0.75%)</title><rect x="642.8" y="915.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (28 samples, 0.67%)</title><rect x="643.3" y="899.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (24 samples, 0.58%)</title><rect x="643.6" y="883.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 0.58%)</title><rect x="643.6" y="867.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.6" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.10%)</title><rect x="643.6" y="851.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="646.6" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.10%)</title><rect x="643.6" y="835.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="646.6" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.07%)</title><rect x="643.6" y="819.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="646.6" y="830.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="643.9" y="803.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="646.9" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.02%)</title><rect x="644.5" y="819.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="647.5" y="830.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="644.5" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="647.5" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (20 samples, 0.48%)</title><rect x="644.8" y="851.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.8" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="648.2" y="835.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="651.2" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="648.2" y="819.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="651.2" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="648.2" y="803.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="651.2" y="814.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="648.2" y="787.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="651.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (7 samples, 0.17%)</title><rect x="648.4" y="835.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.4" y="846.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.10%)</title><rect x="648.7" y="819.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="651.7" y="830.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="649.9" y="819.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="652.9" y="830.0"></text>
</g>
<g>
<title>write@plt (1 samples, 0.02%)</title><rect x="650.1" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="653.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (3 samples, 0.07%)</title><rect x="650.4" y="883.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.4" y="894.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="650.7" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="653.7" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="651.0" y="867.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="654.0" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="651.0" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="654.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="651.0" y="835.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="654.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.02%)</title><rect x="651.3" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.02%)</title><rect x="651.6" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.02%)</title><rect x="651.6" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$576/272680000.accept (13 samples, 0.31%)</title><rect x="651.9" y="1043.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (13 samples, 0.31%)</title><rect x="651.9" y="1027.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (13 samples, 0.31%)</title><rect x="651.9" y="1011.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.29%)</title><rect x="651.9" y="995.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.29%)</title><rect x="651.9" y="979.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.17%)</title><rect x="653.0" y="963.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="653.3" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.12%)</title><rect x="653.6" y="947.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.10%)</title><rect x="653.6" y="931.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.10%)</title><rect x="653.6" y="915.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.6" y="926.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="653.6" y="899.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="656.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$586/805615386.accept (2 samples, 0.05%)</title><rect x="653.8" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$594/353462104.accept (1 samples, 0.02%)</title><rect x="654.4" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$594/353462104.accept (1 samples, 0.02%)</title><rect x="654.7" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (1 samples, 0.02%)</title><rect x="654.7" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (1 samples, 0.02%)</title><rect x="654.7" y="899.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.7" y="910.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.02%)</title><rect x="654.7" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.7" y="894.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (1 samples, 0.02%)</title><rect x="654.7" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.7" y="878.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="655.0" y="963.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="658.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$385/209516650.accept (1 samples, 0.02%)</title><rect x="655.3" y="995.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.02%)</title><rect x="655.3" y="979.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.02%)</title><rect x="655.3" y="963.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (71 samples, 1.71%)</title><rect x="655.5" y="1043.0" width="20.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.02%)</title><rect x="655.5" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (70 samples, 1.69%)</title><rect x="655.8" y="1027.0" width="19.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (70 samples, 1.69%)</title><rect x="655.8" y="1011.0" width="19.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (70 samples, 1.69%)</title><rect x="655.8" y="995.0" width="19.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (70 samples, 1.69%)</title><rect x="655.8" y="979.0" width="19.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (67 samples, 1.61%)</title><rect x="656.4" y="963.0" width="19.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (67 samples, 1.61%)</title><rect x="656.4" y="947.0" width="19.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.14%)</title><rect x="656.4" y="931.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.14%)</title><rect x="656.4" y="915.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.4" y="926.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="657.0" y="899.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="660.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$599/1916045487.accept (3 samples, 0.07%)</title><rect x="657.3" y="899.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$599/1916045487.accept (61 samples, 1.47%)</title><rect x="658.1" y="931.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (61 samples, 1.47%)</title><rect x="658.1" y="915.0" width="17.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (61 samples, 1.47%)</title><rect x="658.1" y="899.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (61 samples, 1.47%)</title><rect x="658.1" y="883.0" width="17.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.12%)</title><rect x="658.4" y="867.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.02%)</title><rect x="658.4" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="658.4" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="658.4" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$611/845309973.apply (1 samples, 0.02%)</title><rect x="658.4" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$611/845309973.apply (4 samples, 0.10%)</title><rect x="658.7" y="851.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (4 samples, 0.10%)</title><rect x="658.7" y="835.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (3 samples, 0.07%)</title><rect x="659.0" y="819.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.0" y="830.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (3 samples, 0.07%)</title><rect x="659.0" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.0" y="814.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.07%)</title><rect x="659.0" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (55 samples, 1.32%)</title><rect x="659.8" y="867.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="660.1" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (53 samples, 1.28%)</title><rect x="660.4" y="851.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (48 samples, 1.16%)</title><rect x="660.4" y="835.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (38 samples, 0.92%)</title><rect x="660.7" y="819.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (38 samples, 0.92%)</title><rect x="660.7" y="803.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (38 samples, 0.92%)</title><rect x="660.7" y="787.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (38 samples, 0.92%)</title><rect x="660.7" y="771.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 0.92%)</title><rect x="660.7" y="755.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (32 samples, 0.77%)</title><rect x="662.4" y="739.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.4" y="750.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="662.7" y="723.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="665.7" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="662.9" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="665.9" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.31%)</title><rect x="663.2" y="723.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="666.2" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (3 samples, 0.07%)</title><rect x="663.8" y="707.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="666.8" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="664.6" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="667.6" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="664.9" y="707.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="667.9" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="665.5" y="707.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="668.5" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.05%)</title><rect x="665.8" y="707.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="668.8" y="718.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="666.3" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="669.3" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="666.6" y="707.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="669.6" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.36%)</title><rect x="666.9" y="723.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="669.9" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="671.2" y="723.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="674.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (9 samples, 0.22%)</title><rect x="671.5" y="819.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.5" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="672.0" y="803.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="675.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$610/945156481.accept (3 samples, 0.07%)</title><rect x="672.3" y="803.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$605/652245410.accept (1 samples, 0.02%)</title><rect x="673.2" y="803.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$193/281304560.accept (2 samples, 0.05%)</title><rect x="673.4" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$610/945156481.accept (2 samples, 0.05%)</title><rect x="674.0" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (1 samples, 0.02%)</title><rect x="674.3" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$193/281304560.accept (3 samples, 0.07%)</title><rect x="674.6" y="835.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (3 samples, 0.07%)</title><rect x="674.6" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (3 samples, 0.07%)</title><rect x="674.6" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (3 samples, 0.07%)</title><rect x="674.6" y="787.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.6" y="798.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="675.4" y="963.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="678.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (2 samples, 0.05%)</title><rect x="675.7" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onSubscribe (2 samples, 0.05%)</title><rect x="675.7" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.05%)</title><rect x="675.7" y="1011.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="675.7" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.05%)</title><rect x="676.3" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.05%)</title><rect x="676.3" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="676.3" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.02%)</title><rect x="676.9" y="1091.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (7 samples, 0.17%)</title><rect x="677.1" y="1091.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.07%)</title><rect x="677.1" y="1075.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (2 samples, 0.05%)</title><rect x="677.4" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.02%)</title><rect x="677.7" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (1 samples, 0.02%)</title><rect x="677.7" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4 samples, 0.10%)</title><rect x="678.0" y="1075.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.10%)</title><rect x="678.0" y="1059.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.10%)</title><rect x="678.0" y="1043.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="678.6" y="1027.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="678.6" y="1011.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="678.6" y="995.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="678.8" y="1027.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="679.1" y="1139.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.1" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.run (352 samples, 8.48%)</title><rect x="679.4" y="1203.0" width="100.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.4" y="1214.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (350 samples, 8.43%)</title><rect x="680.0" y="1187.0" width="99.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.0" y="1198.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.39%)</title><rect x="680.6" y="1171.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.22%)</title><rect x="682.0" y="1155.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.22%)</title><rect x="682.0" y="1139.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.0" y="1150.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="684.2" y="1123.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="687.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="684.5" y="1155.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="684.5" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.5" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="684.8" y="1123.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="687.8" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="684.8" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="687.8" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="684.8" y="1091.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="687.8" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="684.8" y="1075.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="687.8" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="684.8" y="1059.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="687.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (41 samples, 0.99%)</title><rect x="685.1" y="1171.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.1" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (41 samples, 0.99%)</title><rect x="685.1" y="1155.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.1" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (6 samples, 0.14%)</title><rect x="685.1" y="1139.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="688.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.14%)</title><rect x="685.1" y="1123.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.14%)</title><rect x="685.1" y="1107.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.14%)</title><rect x="685.1" y="1091.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.accept (6 samples, 0.14%)</title><rect x="685.1" y="1075.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (6 samples, 0.14%)</title><rect x="685.1" y="1059.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (6 samples, 0.14%)</title><rect x="685.1" y="1043.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.14%)</title><rect x="685.1" y="1027.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.14%)</title><rect x="685.1" y="1011.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.07%)</title><rect x="685.1" y="995.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="688.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.07%)</title><rect x="685.9" y="995.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.07%)</title><rect x="685.9" y="979.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.9" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.07%)</title><rect x="685.9" y="963.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.9" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.07%)</title><rect x="685.9" y="947.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.9" y="958.0"></text>
</g>
<g>
<title>__send (1 samples, 0.02%)</title><rect x="686.5" y="931.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="689.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (35 samples, 0.84%)</title><rect x="686.8" y="1139.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (35 samples, 0.84%)</title><rect x="686.8" y="1123.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (35 samples, 0.84%)</title><rect x="686.8" y="1107.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.8" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.07%)</title><rect x="686.8" y="1091.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="689.8" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.07%)</title><rect x="686.8" y="1075.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="689.8" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="686.8" y="1059.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="689.8" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="686.8" y="1043.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="689.8" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="686.8" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="689.8" y="1038.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="687.1" y="1027.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="690.1" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="687.4" y="1059.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="690.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (32 samples, 0.77%)</title><rect x="687.7" y="1091.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (32 samples, 0.77%)</title><rect x="687.7" y="1075.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (32 samples, 0.77%)</title><rect x="687.7" y="1059.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (32 samples, 0.77%)</title><rect x="687.7" y="1043.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (32 samples, 0.77%)</title><rect x="687.7" y="1027.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.55%)</title><rect x="690.2" y="1011.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.2" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="690.2" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="693.2" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.24%)</title><rect x="690.5" y="995.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="693.5" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="690.5" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="693.5" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="690.8" y="979.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="693.8" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="691.1" y="979.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="694.1" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="691.6" y="979.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="694.6" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="692.2" y="979.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="695.2" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.07%)</title><rect x="692.5" y="979.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="695.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="693.3" y="995.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="696.3" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="693.3" y="979.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="696.3" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.26%)</title><rect x="693.6" y="995.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="696.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (291 samples, 7.01%)</title><rect x="696.7" y="1171.0" width="82.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.7" y="1182.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (43 samples, 1.04%)</title><rect x="696.7" y="1155.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.05%)</title><rect x="697.0" y="1139.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.0" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="697.6" y="1139.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.6" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="697.6" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.6" y="1134.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="697.9" y="1107.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="700.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (26 samples, 0.63%)</title><rect x="698.2" y="1139.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.2" y="1150.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (2 samples, 0.05%)</title><rect x="698.5" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.5" y="1134.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (2 samples, 0.05%)</title><rect x="698.5" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.5" y="1118.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (2 samples, 0.05%)</title><rect x="698.5" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.5" y="1102.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (1 samples, 0.02%)</title><rect x="698.7" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.7" y="1086.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (1 samples, 0.02%)</title><rect x="698.7" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.7" y="1070.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig (1 samples, 0.02%)</title><rect x="698.7" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.7" y="1054.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (22 samples, 0.53%)</title><rect x="699.0" y="1123.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.0" y="1134.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (22 samples, 0.53%)</title><rect x="699.0" y="1107.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.0" y="1118.0"></text>
</g>
<g>
<title>java/security/Security.getSpiClass (4 samples, 0.10%)</title><rect x="699.0" y="1091.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="699.9" y="1075.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.9" y="1086.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (18 samples, 0.43%)</title><rect x="700.2" y="1091.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.2" y="1102.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (11 samples, 0.26%)</title><rect x="700.2" y="1075.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.2" y="1086.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (9 samples, 0.22%)</title><rect x="700.2" y="1059.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.2" y="1070.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (7 samples, 0.17%)</title><rect x="700.4" y="1043.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.05%)</title><rect x="700.4" y="1027.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.05%)</title><rect x="700.4" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/Class.arrayContentsEq (2 samples, 0.05%)</title><rect x="700.4" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (5 samples, 0.12%)</title><rect x="701.0" y="1027.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (3 samples, 0.07%)</title><rect x="701.0" y="1011.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (3 samples, 0.07%)</title><rect x="701.0" y="995.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (3 samples, 0.07%)</title><rect x="701.0" y="979.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (3 samples, 0.07%)</title><rect x="701.0" y="963.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (1 samples, 0.02%)</title><rect x="701.6" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.6" y="958.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.02%)</title><rect x="701.6" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.02%)</title><rect x="701.6" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.02%)</title><rect x="701.6" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (1 samples, 0.02%)</title><rect x="701.6" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.05%)</title><rect x="701.9" y="1011.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.05%)</title><rect x="701.9" y="995.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.9" y="1006.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="701.9" y="979.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="704.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="702.4" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="702.4" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.4" y="1038.0"></text>
</g>
<g>
<title>java/security/Provider.getService (2 samples, 0.05%)</title><rect x="702.7" y="1059.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.7" y="1070.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (7 samples, 0.17%)</title><rect x="703.3" y="1075.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.3" y="1086.0"></text>
</g>
<g>
<title>java/security/Provider.getService (6 samples, 0.14%)</title><rect x="703.3" y="1059.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.3" y="1070.0"></text>
</g>
<g>
<title>java/security/Provider.ensureLegacyParsed (1 samples, 0.02%)</title><rect x="703.3" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.12%)</title><rect x="703.6" y="1043.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.6" y="1054.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getProvider (1 samples, 0.02%)</title><rect x="705.0" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.0" y="1070.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (1 samples, 0.02%)</title><rect x="705.3" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (12 samples, 0.29%)</title><rect x="705.6" y="1139.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.6" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.07%)</title><rect x="705.6" y="1123.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.6" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.07%)</title><rect x="705.6" y="1107.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.6" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.05%)</title><rect x="705.8" y="1091.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.8" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (1 samples, 0.02%)</title><rect x="706.1" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.1" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.02%)</title><rect x="706.1" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.1" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="706.1" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="706.1" y="1027.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="706.1" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="706.1" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="706.1" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.1" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (1 samples, 0.02%)</title><rect x="706.4" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.4" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.02%)</title><rect x="706.4" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.4" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.values (1 samples, 0.02%)</title><rect x="706.7" y="1123.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.7" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (7 samples, 0.17%)</title><rect x="707.0" y="1123.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.0" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.17%)</title><rect x="707.0" y="1107.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="707.3" y="1091.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="707.3" y="1075.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="707.3" y="1059.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.02%)</title><rect x="707.3" y="1043.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.05%)</title><rect x="707.5" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.02%)</title><rect x="707.8" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.8" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="708.1" y="1091.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.1" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="708.7" y="1091.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (240 samples, 5.78%)</title><rect x="709.0" y="1155.0" width="68.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.0" y="1166.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="709.0" y="1139.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="709.0" y="1123.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$114/1531818127.get$Lambda (1 samples, 0.02%)</title><rect x="709.0" y="1107.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$114/1531818127.&lt;init&gt; (1 samples, 0.02%)</title><rect x="709.0" y="1091.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.0" y="1102.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.02%)</title><rect x="709.0" y="1075.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="712.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (233 samples, 5.61%)</title><rect x="709.2" y="1139.0" width="66.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.2" y="1150.0">ru/mail..</text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.05%)</title><rect x="709.5" y="1123.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.5" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.05%)</title><rect x="709.5" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.05%)</title><rect x="709.5" y="1091.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.5" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (3 samples, 0.07%)</title><rect x="710.1" y="1123.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.1" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.07%)</title><rect x="710.1" y="1107.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.1" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.07%)</title><rect x="710.1" y="1091.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.1" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.07%)</title><rect x="710.1" y="1075.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.02%)</title><rect x="711.0" y="1123.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.02%)</title><rect x="711.0" y="1107.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="711.0" y="1091.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="711.0" y="1075.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.0" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="711.0" y="1059.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="714.0" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="711.0" y="1043.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="714.0" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="711.0" y="1027.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="714.0" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="711.0" y="1011.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="714.0" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="711.0" y="995.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="714.0" y="1006.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="711.0" y="979.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="714.0" y="990.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="711.0" y="963.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="714.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (131 samples, 3.15%)</title><rect x="711.2" y="1123.0" width="37.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.2" y="1134.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (131 samples, 3.15%)</title><rect x="711.2" y="1107.0" width="37.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.2" y="1118.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (131 samples, 3.15%)</title><rect x="711.2" y="1091.0" width="37.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.2" y="1102.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (131 samples, 3.15%)</title><rect x="711.2" y="1075.0" width="37.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.2" y="1086.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.02%)</title><rect x="711.8" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="711.8" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="711.8" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="711.8" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (84 samples, 2.02%)</title><rect x="712.1" y="1059.0" width="23.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.1" y="1070.0">j..</text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="712.1" y="1043.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="712.4" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.4" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (15 samples, 0.36%)</title><rect x="712.7" y="1043.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.7" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.05%)</title><rect x="712.7" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.7" y="1038.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.05%)</title><rect x="712.7" y="1011.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.7" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.05%)</title><rect x="712.7" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.7" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.05%)</title><rect x="712.7" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="712.7" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.7" y="974.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.10%)</title><rect x="713.2" y="1027.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.2" y="1038.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.07%)</title><rect x="713.2" y="1011.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.2" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="714.1" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.1" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.02%)</title><rect x="714.1" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.1" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (9 samples, 0.22%)</title><rect x="714.4" y="1027.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.4" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.19%)</title><rect x="714.6" y="1011.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.6" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (8 samples, 0.19%)</title><rect x="714.6" y="995.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.6" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.12%)</title><rect x="715.5" y="979.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.5" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="716.6" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.26%)</title><rect x="716.9" y="1043.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.9" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.26%)</title><rect x="716.9" y="1027.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.9" y="1038.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="716.9" y="1011.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="719.9" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (10 samples, 0.24%)</title><rect x="717.2" y="1011.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.2" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.22%)</title><rect x="717.5" y="995.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.5" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (9 samples, 0.22%)</title><rect x="717.5" y="979.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.5" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.22%)</title><rect x="717.5" y="963.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.5" y="974.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.17%)</title><rect x="717.8" y="947.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.8" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (7 samples, 0.17%)</title><rect x="717.8" y="931.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (7 samples, 0.17%)</title><rect x="717.8" y="915.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.10%)</title><rect x="717.8" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.10%)</title><rect x="717.8" y="883.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.8" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="718.9" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.9" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="718.9" y="883.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="718.9" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.9" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="718.9" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.9" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="718.9" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="718.9" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="721.9" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.02%)</title><rect x="718.9" y="803.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="721.9" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="718.9" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="721.9" y="798.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="718.9" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="721.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/875917495.test (2 samples, 0.05%)</title><rect x="719.2" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.05%)</title><rect x="719.2" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/960733886.test (2 samples, 0.05%)</title><rect x="719.2" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.05%)</title><rect x="719.2" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.2" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.05%)</title><rect x="719.2" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.2" y="846.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.05%)</title><rect x="719.2" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.2" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.05%)</title><rect x="719.2" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.05%)</title><rect x="719.2" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="719.2" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="719.5" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="719.5" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="719.5" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="719.8" y="947.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="719.8" y="931.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="719.8" y="915.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="719.8" y="899.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (55 samples, 1.32%)</title><rect x="720.0" y="1043.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.0" y="1054.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (55 samples, 1.32%)</title><rect x="720.0" y="1027.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="720.0" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="720.0" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="720.0" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="720.3" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="723.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="720.3" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.3" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (53 samples, 1.28%)</title><rect x="720.6" y="1011.0" width="15.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.6" y="1022.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (41 samples, 0.99%)</title><rect x="720.6" y="995.0" width="11.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="723.6" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (4 samples, 0.10%)</title><rect x="721.5" y="979.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="724.5" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (4 samples, 0.10%)</title><rect x="721.5" y="963.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="724.5" y="974.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.02%)</title><rect x="722.6" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="725.6" y="990.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.17%)</title><rect x="722.9" y="979.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="725.9" y="990.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (3 samples, 0.07%)</title><rect x="723.2" y="963.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="726.2" y="974.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="724.0" y="963.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="727.0" y="974.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.05%)</title><rect x="724.3" y="963.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="727.3" y="974.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="724.9" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="727.9" y="990.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="725.2" y="979.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="728.2" y="990.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.05%)</title><rect x="725.7" y="979.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="728.7" y="990.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="726.3" y="979.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="729.3" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (3 samples, 0.07%)</title><rect x="726.6" y="979.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="729.6" y="990.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.02%)</title><rect x="727.4" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="730.4" y="990.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (10 samples, 0.24%)</title><rect x="727.7" y="979.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="730.7" y="990.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.24%)</title><rect x="727.7" y="963.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="730.7" y="974.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.17%)</title><rect x="727.7" y="947.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="730.7" y="958.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="729.1" y="931.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="732.1" y="942.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="729.7" y="947.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="732.7" y="958.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.05%)</title><rect x="730.0" y="947.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="733.0" y="958.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.14%)</title><rect x="730.6" y="979.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="733.6" y="990.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="730.8" y="963.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="733.8" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.07%)</title><rect x="731.4" y="963.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="734.4" y="974.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="731.7" y="947.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="734.7" y="958.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="732.0" y="931.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="735.0" y="942.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="732.0" y="915.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="735.0" y="926.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.07%)</title><rect x="732.3" y="995.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="735.3" y="1006.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.22%)</title><rect x="733.1" y="995.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.1" y="1006.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.22%)</title><rect x="733.1" y="979.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.10%)</title><rect x="733.4" y="963.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="733.4" y="947.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.10%)</title><rect x="733.4" y="931.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.4" y="942.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (4 samples, 0.10%)</title><rect x="734.5" y="963.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.5" y="974.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.07%)</title><rect x="734.5" y="947.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.5" y="958.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.07%)</title><rect x="734.5" y="931.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.5" y="942.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.07%)</title><rect x="734.5" y="915.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.07%)</title><rect x="734.5" y="899.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="735.1" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="735.1" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.1" y="878.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="735.4" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="735.4" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.02%)</title><rect x="735.7" y="1043.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.7" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="735.7" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.7" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="735.7" y="1011.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="738.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (25 samples, 0.60%)</title><rect x="736.0" y="1059.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (25 samples, 0.60%)</title><rect x="736.0" y="1043.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (25 samples, 0.60%)</title><rect x="736.0" y="1027.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (7 samples, 0.17%)</title><rect x="737.4" y="1011.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (5 samples, 0.12%)</title><rect x="737.7" y="995.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Class.arrayContentsEq (5 samples, 0.12%)</title><rect x="737.7" y="979.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1 samples, 0.02%)</title><rect x="739.1" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1 samples, 0.02%)</title><rect x="739.1" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.1" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1 samples, 0.02%)</title><rect x="739.1" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.1" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="739.1" y="947.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="742.1" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="739.1" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="742.1" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="739.1" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="742.1" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="739.1" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="742.1" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="739.1" y="883.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="742.1" y="894.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="739.1" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="742.1" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (11 samples, 0.26%)</title><rect x="739.4" y="1011.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (6 samples, 0.14%)</title><rect x="740.2" y="995.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="743.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.02%)</title><rect x="741.1" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.1" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.05%)</title><rect x="741.4" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.4" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.05%)</title><rect x="741.4" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.05%)</title><rect x="741.4" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (1 samples, 0.02%)</title><rect x="741.6" y="931.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.02%)</title><rect x="741.6" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.02%)</title><rect x="741.6" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.02%)</title><rect x="741.6" y="883.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (1 samples, 0.02%)</title><rect x="741.6" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.05%)</title><rect x="741.9" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="744.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (1 samples, 0.02%)</title><rect x="742.2" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor10.newInstance (1 samples, 0.02%)</title><rect x="742.5" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (1 samples, 0.02%)</title><rect x="742.8" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (19 samples, 0.46%)</title><rect x="743.1" y="1059.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (13 samples, 0.31%)</title><rect x="743.1" y="1043.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.31%)</title><rect x="743.1" y="1027.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="743.3" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.26%)</title><rect x="743.6" y="1011.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.14%)</title><rect x="744.2" y="995.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="744.2" y="979.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="744.2" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="744.2" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.12%)</title><rect x="744.5" y="979.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.12%)</title><rect x="744.5" y="963.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.10%)</title><rect x="744.5" y="947.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.10%)</title><rect x="744.5" y="931.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.10%)</title><rect x="744.5" y="915.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.5" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="744.5" y="899.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="747.5" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="744.5" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="747.5" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="744.8" y="883.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="747.8" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="745.0" y="899.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="748.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="745.6" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="745.6" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="745.9" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="745.9" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="746.2" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="746.2" y="979.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="746.2" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (6 samples, 0.14%)</title><rect x="746.8" y="1043.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.10%)</title><rect x="747.0" y="1027.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.10%)</title><rect x="747.0" y="1011.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="747.6" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.02%)</title><rect x="748.2" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.2" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.removeLocal (2 samples, 0.05%)</title><rect x="748.5" y="1123.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.5" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (2 samples, 0.05%)</title><rect x="748.5" y="1107.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (2 samples, 0.05%)</title><rect x="748.5" y="1091.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.5" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="748.5" y="1075.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="751.5" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.02%)</title><rect x="748.7" y="1075.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$114/1531818127.handleLocalResponse (15 samples, 0.36%)</title><rect x="749.0" y="1123.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$8 (15 samples, 0.36%)</title><rect x="749.0" y="1107.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (15 samples, 0.36%)</title><rect x="749.0" y="1091.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="752.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (15 samples, 0.36%)</title><rect x="749.0" y="1075.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (13 samples, 0.31%)</title><rect x="749.6" y="1059.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.31%)</title><rect x="749.6" y="1043.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (13 samples, 0.31%)</title><rect x="749.6" y="1027.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (13 samples, 0.31%)</title><rect x="749.6" y="1011.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (13 samples, 0.31%)</title><rect x="749.6" y="995.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.31%)</title><rect x="749.6" y="979.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.29%)</title><rect x="749.9" y="963.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.9" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="749.9" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="752.9" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.10%)</title><rect x="750.2" y="947.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="753.2" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="750.7" y="931.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="753.7" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="751.0" y="931.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="754.0" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.14%)</title><rect x="751.3" y="947.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="754.3" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="753.0" y="947.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="756.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$126/1476074584.requestBuild (78 samples, 1.88%)</title><rect x="753.3" y="1123.0" width="22.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.3" y="1134.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$9 (78 samples, 1.88%)</title><rect x="753.3" y="1107.0" width="22.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.3" y="1118.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (25 samples, 0.60%)</title><rect x="753.3" y="1091.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (25 samples, 0.60%)</title><rect x="753.3" y="1075.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.3" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (25 samples, 0.60%)</title><rect x="753.3" y="1059.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.3" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (22 samples, 0.53%)</title><rect x="754.1" y="1043.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.1" y="1054.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="755.0" y="1027.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="758.0" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (17 samples, 0.41%)</title><rect x="755.6" y="1027.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.6" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (10 samples, 0.24%)</title><rect x="756.4" y="1011.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.4" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.22%)</title><rect x="756.7" y="995.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.7" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (6 samples, 0.14%)</title><rect x="757.0" y="979.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.0" y="990.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="757.3" y="963.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="760.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/960733886.test (2 samples, 0.05%)</title><rect x="758.1" y="963.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.1" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="758.7" y="979.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.7" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$159/1373714853.accept (2 samples, 0.05%)</title><rect x="758.7" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.7" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="758.7" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/960733886.test (1 samples, 0.02%)</title><rect x="759.0" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.02%)</title><rect x="759.0" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.0" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.02%)</title><rect x="759.0" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.0" y="910.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.02%)</title><rect x="759.0" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.0" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="759.0" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.0" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="759.0" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.0" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="759.0" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.0" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.10%)</title><rect x="759.3" y="1011.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.3" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$157/354566481.accept (4 samples, 0.10%)</title><rect x="759.3" y="995.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (53 samples, 1.28%)</title><rect x="760.4" y="1091.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.4" y="1102.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (41 samples, 0.99%)</title><rect x="760.4" y="1075.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.4" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (41 samples, 0.99%)</title><rect x="760.4" y="1059.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.4" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (4 samples, 0.10%)</title><rect x="761.0" y="1043.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.0" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.10%)</title><rect x="761.0" y="1027.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.0" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.10%)</title><rect x="761.0" y="1011.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.0" y="1022.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="761.8" y="995.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="764.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (34 samples, 0.82%)</title><rect x="762.1" y="1043.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.1" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (11 samples, 0.26%)</title><rect x="762.1" y="1027.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.1" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (11 samples, 0.26%)</title><rect x="762.1" y="1011.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.1" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.02%)</title><rect x="764.7" y="995.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.7" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="764.9" y="995.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="767.9" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (23 samples, 0.55%)</title><rect x="765.2" y="1027.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="765.2" y="1011.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="765.2" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.2" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (13 samples, 0.31%)</title><rect x="765.8" y="1011.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.07%)</title><rect x="765.8" y="995.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.07%)</title><rect x="765.8" y="979.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.8" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (7 samples, 0.17%)</title><rect x="766.6" y="995.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="766.6" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="766.6" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.6" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.12%)</title><rect x="767.2" y="979.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.2" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (3 samples, 0.07%)</title><rect x="768.6" y="995.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.6" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (3 samples, 0.07%)</title><rect x="768.6" y="979.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.6" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.07%)</title><rect x="768.6" y="963.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.6" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.19%)</title><rect x="769.5" y="1011.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.5" y="1022.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="771.8" y="1043.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="774.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (9 samples, 0.22%)</title><rect x="772.0" y="1075.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (9 samples, 0.22%)</title><rect x="772.0" y="1059.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (6 samples, 0.14%)</title><rect x="772.0" y="1043.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/960733886.test (6 samples, 0.14%)</title><rect x="772.0" y="1027.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (6 samples, 0.14%)</title><rect x="772.0" y="1011.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.0" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (6 samples, 0.14%)</title><rect x="772.0" y="995.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.0" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.14%)</title><rect x="772.0" y="979.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.0" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (6 samples, 0.14%)</title><rect x="772.0" y="963.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.0" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.14%)</title><rect x="772.0" y="947.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.0" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.14%)</title><rect x="772.0" y="931.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.12%)</title><rect x="772.3" y="915.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.12%)</title><rect x="772.3" y="899.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.3" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.12%)</title><rect x="772.3" y="883.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.07%)</title><rect x="773.7" y="1043.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.7" y="1054.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.07%)</title><rect x="773.7" y="1027.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.7" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.02%)</title><rect x="773.7" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.7" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="773.7" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.7" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="773.7" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="773.7" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="773.7" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="773.7" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.7" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="773.7" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.7" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="774.0" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="774.0" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="774.0" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="774.0" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.0" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="774.3" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.07%)</title><rect x="774.6" y="1075.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.07%)</title><rect x="774.6" y="1059.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (3 samples, 0.07%)</title><rect x="774.6" y="1043.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.07%)</title><rect x="774.6" y="1027.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.05%)</title><rect x="774.6" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.6" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1 samples, 0.02%)</title><rect x="775.2" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (6 samples, 0.14%)</title><rect x="775.5" y="1139.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.5" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (6 samples, 0.14%)</title><rect x="775.5" y="1123.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.5" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.14%)</title><rect x="775.5" y="1107.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.5" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$201/847124037.accept (6 samples, 0.14%)</title><rect x="775.5" y="1091.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (6 samples, 0.14%)</title><rect x="775.5" y="1075.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="775.5" y="1059.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="775.5" y="1043.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.get$Lambda (1 samples, 0.02%)</title><rect x="775.5" y="1027.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.12%)</title><rect x="775.7" y="1059.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.07%)</title><rect x="776.3" y="1043.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.07%)</title><rect x="776.3" y="1027.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$202/1359175112.accept (3 samples, 0.07%)</title><rect x="776.3" y="1011.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (3 samples, 0.07%)</title><rect x="776.3" y="995.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="776.6" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="776.6" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.02%)</title><rect x="776.9" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (8 samples, 0.19%)</title><rect x="777.2" y="1155.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="777.2" y="1139.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="777.2" y="1123.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.05%)</title><rect x="777.4" y="1123.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.05%)</title><rect x="777.4" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="777.4" y="1091.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.4" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="777.4" y="1075.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="780.4" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="777.4" y="1059.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="780.4" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="777.4" y="1043.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="780.4" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="777.4" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="780.4" y="1038.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="777.4" y="1011.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="780.4" y="1022.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="777.7" y="1027.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="780.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="778.0" y="1139.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.0" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="778.0" y="1123.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.0" y="1134.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="778.0" y="1107.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="778.0" y="1091.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="778.0" y="1075.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.07%)</title><rect x="778.0" y="1059.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.0" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="778.9" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="779.1" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.1" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="779.1" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="779.4" y="1251.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="779.4" y="1235.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="779.4" y="1219.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="779.4" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="779.4" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="779.4" y="1171.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.02%)</title><rect x="779.4" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="779.4" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="779.4" y="1123.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="779.4" y="1107.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (532 samples, 12.81%)</title><rect x="779.7" y="1251.0" width="151.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.7" y="1262.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (532 samples, 12.81%)</title><rect x="779.7" y="1235.0" width="151.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.7" y="1246.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (340 samples, 8.19%)</title><rect x="780.3" y="1219.0" width="96.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.3" y="1230.0">java/util/c..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (2 samples, 0.05%)</title><rect x="781.4" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (2 samples, 0.05%)</title><rect x="781.4" y="1187.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.4" y="1198.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="781.7" y="1171.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="784.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.02%)</title><rect x="782.0" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (1 samples, 0.02%)</title><rect x="782.0" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (324 samples, 7.80%)</title><rect x="782.3" y="1203.0" width="92.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.3" y="1214.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (3 samples, 0.07%)</title><rect x="791.9" y="1187.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (2 samples, 0.05%)</title><rect x="792.8" y="1187.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (285 samples, 6.86%)</title><rect x="793.4" y="1187.0" width="80.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.4" y="1198.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (235 samples, 5.66%)</title><rect x="793.9" y="1171.0" width="66.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.9" y="1182.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (235 samples, 5.66%)</title><rect x="793.9" y="1155.0" width="66.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.9" y="1166.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 1.54%)</title><rect x="794.5" y="1139.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (61 samples, 1.47%)</title><rect x="794.8" y="1123.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (59 samples, 1.42%)</title><rect x="795.3" y="1107.0" width="16.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.12%)</title><rect x="795.3" y="1091.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.12%)</title><rect x="795.3" y="1075.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.3" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="796.2" y="1059.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="799.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$531/586274306.accept (54 samples, 1.30%)</title><rect x="796.8" y="1091.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (54 samples, 1.30%)</title><rect x="796.8" y="1075.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (54 samples, 1.30%)</title><rect x="796.8" y="1059.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.8" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="796.8" y="1043.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="799.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (53 samples, 1.28%)</title><rect x="797.0" y="1043.0" width="15.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="797.9" y="1027.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="797.9" y="1011.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="797.9" y="995.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.9" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="798.2" y="979.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="801.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 1.11%)</title><rect x="798.8" y="1027.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.39%)</title><rect x="798.8" y="1011.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.10%)</title><rect x="802.2" y="995.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="802.2" y="979.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.2" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="802.2" y="963.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="802.2" y="947.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.10%)</title><rect x="802.2" y="931.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.2" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="803.0" y="915.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="806.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (30 samples, 0.72%)</title><rect x="803.3" y="1011.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (30 samples, 0.72%)</title><rect x="803.3" y="995.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (30 samples, 0.72%)</title><rect x="803.3" y="979.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (30 samples, 0.72%)</title><rect x="803.3" y="963.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.3" y="974.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (15 samples, 0.36%)</title><rect x="803.6" y="947.0" width="4.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="806.6" y="958.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="804.4" y="931.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="807.4" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="804.7" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="807.7" y="942.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="805.0" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="808.0" y="942.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.17%)</title><rect x="805.3" y="931.0" width="2.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="808.3" y="942.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="805.9" y="915.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="808.9" y="926.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="806.1" y="915.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="809.1" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="806.4" y="915.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="809.4" y="926.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.05%)</title><rect x="806.7" y="915.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="809.7" y="926.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.05%)</title><rect x="807.3" y="931.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="810.3" y="942.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="807.8" y="947.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="810.8" y="958.0"></text>
</g>
<g>
<title>__send (9 samples, 0.22%)</title><rect x="808.1" y="947.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="811.1" y="958.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="810.7" y="947.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="813.7" y="958.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.05%)</title><rect x="811.3" y="947.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="814.3" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="811.8" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.8" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$137/382080611.get (2 samples, 0.05%)</title><rect x="812.1" y="1123.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$137/382080611.get (169 samples, 4.07%)</title><rect x="812.7" y="1139.0" width="48.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.7" y="1150.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$put$12 (169 samples, 4.07%)</title><rect x="812.7" y="1123.0" width="48.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.7" y="1134.0">ru/m..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="812.7" y="1107.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="815.7" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="812.7" y="1091.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="815.7" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="812.7" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="815.7" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="812.7" y="1059.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="815.7" y="1070.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.02%)</title><rect x="812.7" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="815.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (167 samples, 4.02%)</title><rect x="813.0" y="1107.0" width="47.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.0" y="1118.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.05%)</title><rect x="818.1" y="1091.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.05%)</title><rect x="818.1" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.05%)</title><rect x="818.1" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 0.05%)</title><rect x="818.1" y="1043.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (1 samples, 0.02%)</title><rect x="818.4" y="1027.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.4" y="1038.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="818.6" y="1091.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="821.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (145 samples, 3.49%)</title><rect x="819.2" y="1091.0" width="41.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.2" y="1102.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="819.2" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.02%)</title><rect x="819.2" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.containsKey (76 samples, 1.83%)</title><rect x="819.5" y="1075.0" width="21.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.5" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doGet (76 samples, 1.83%)</title><rect x="819.5" y="1059.0" width="21.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.5" y="1070.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.07%)</title><rect x="828.3" y="1043.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (42 samples, 1.01%)</title><rect x="829.2" y="1043.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.2" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (41 samples, 0.99%)</title><rect x="829.4" y="1027.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.4" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (23 samples, 0.55%)</title><rect x="834.6" y="1011.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.19%)</title><rect x="835.7" y="995.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.7" y="1006.0"></text>
</g>
<g>
<title>vectorizedMismatch (8 samples, 0.19%)</title><rect x="835.7" y="979.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="838.7" y="990.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.19%)</title><rect x="838.0" y="995.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.07%)</title><rect x="839.4" y="979.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.4" y="990.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="839.9" y="963.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.9" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.07%)</title><rect x="840.2" y="995.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.05%)</title><rect x="840.5" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (68 samples, 1.64%)</title><rect x="841.1" y="1075.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.1" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="842.8" y="1059.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="845.8" y="1070.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.02%)</title><rect x="843.4" y="1059.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="846.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (54 samples, 1.30%)</title><rect x="843.6" y="1059.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.6" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="846.5" y="1043.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="849.5" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="846.5" y="1027.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="849.5" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="846.5" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="849.5" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="846.5" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="849.5" y="1006.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="846.5" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="849.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="846.8" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="846.8" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.8" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="847.1" y="1043.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (2 samples, 0.05%)</title><rect x="847.3" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.02%)</title><rect x="847.6" y="1027.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64$Cell.cas (1 samples, 0.02%)</title><rect x="847.6" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.02%)</title><rect x="847.6" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="847.6" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (9 samples, 0.22%)</title><rect x="847.9" y="1043.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="849.0" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.10%)</title><rect x="849.3" y="1027.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.10%)</title><rect x="849.3" y="1011.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.10%)</title><rect x="849.3" y="995.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="849.3" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.3" y="990.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.05%)</title><rect x="849.3" y="963.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="852.3" y="974.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.05%)</title><rect x="849.9" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.9" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="850.2" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.2" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="850.2" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (30 samples, 0.72%)</title><rect x="850.5" y="1043.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (29 samples, 0.70%)</title><rect x="850.7" y="1027.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.60%)</title><rect x="851.9" y="1011.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.9" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (13 samples, 0.31%)</title><rect x="852.2" y="995.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.2" y="1006.0"></text>
</g>
<g>
<title>vectorizedMismatch (13 samples, 0.31%)</title><rect x="852.2" y="979.0" width="3.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="855.2" y="990.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.24%)</title><rect x="855.9" y="995.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.10%)</title><rect x="857.6" y="979.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.6" y="990.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="858.1" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.1" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="858.4" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.4" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="858.7" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.7" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.12%)</title><rect x="859.0" y="1059.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="862.0" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="859.0" y="1043.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="862.0" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.10%)</title><rect x="859.3" y="1043.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="862.3" y="1054.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="859.6" y="1027.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="862.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (1 samples, 0.02%)</title><rect x="860.4" y="1107.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="860.4" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="860.4" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="860.4" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.4" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="860.4" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.4" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="860.4" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="863.4" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="860.4" y="1011.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="863.4" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="860.4" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="863.4" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="860.4" y="979.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="863.4" y="990.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="860.4" y="963.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="863.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (48 samples, 1.16%)</title><rect x="860.7" y="1171.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (48 samples, 1.16%)</title><rect x="860.7" y="1155.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (43 samples, 1.04%)</title><rect x="860.7" y="1139.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (43 samples, 1.04%)</title><rect x="860.7" y="1123.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="863.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (39 samples, 0.94%)</title><rect x="861.3" y="1107.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (31 samples, 0.75%)</title><rect x="861.5" y="1091.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (31 samples, 0.75%)</title><rect x="861.5" y="1075.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (24 samples, 0.58%)</title><rect x="861.5" y="1059.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="864.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="861.8" y="1043.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="861.8" y="1027.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="864.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.51%)</title><rect x="862.4" y="1043.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="865.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.51%)</title><rect x="862.4" y="1027.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.51%)</title><rect x="862.4" y="1011.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.43%)</title><rect x="863.2" y="995.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.43%)</title><rect x="863.2" y="979.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.2" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="863.2" y="963.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="866.2" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="863.5" y="963.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="866.5" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.19%)</title><rect x="864.1" y="963.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="867.1" y="974.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="865.0" y="947.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="868.0" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="865.2" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="868.2" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="865.5" y="947.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="868.5" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.17%)</title><rect x="866.4" y="963.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="869.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.05%)</title><rect x="868.4" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="871.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="868.6" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="871.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (5 samples, 0.12%)</title><rect x="868.9" y="1059.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.&lt;init&gt; (4 samples, 0.10%)</title><rect x="868.9" y="1043.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.02%)</title><rect x="870.1" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="873.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (7 samples, 0.17%)</title><rect x="870.4" y="1091.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (7 samples, 0.17%)</title><rect x="870.4" y="1075.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (7 samples, 0.17%)</title><rect x="870.4" y="1059.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.4" y="1070.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.10%)</title><rect x="870.4" y="1043.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="873.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="871.5" y="1043.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.5" y="1054.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="872.3" y="1107.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="875.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.12%)</title><rect x="872.9" y="1139.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.22%)</title><rect x="874.3" y="1203.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.22%)</title><rect x="874.3" y="1187.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.22%)</title><rect x="874.3" y="1171.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.3" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.10%)</title><rect x="874.3" y="1155.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="877.3" y="1166.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="874.3" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="877.3" y="1150.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="874.6" y="1139.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="877.6" y="1150.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="874.9" y="1139.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="877.9" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="875.2" y="1139.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="878.2" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.12%)</title><rect x="875.5" y="1155.0" width="1.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="878.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (98 samples, 2.36%)</title><rect x="876.9" y="1219.0" width="27.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.9" y="1230.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (95 samples, 2.29%)</title><rect x="877.7" y="1203.0" width="27.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.7" y="1214.0">j..</text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.07%)</title><rect x="879.4" y="1187.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="882.4" y="1198.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="880.3" y="1187.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="883.3" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="880.6" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="883.6" y="1198.0"></text>
</g>
<g>
<title>Unsafe_Park (48 samples, 1.16%)</title><rect x="880.9" y="1187.0" width="13.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="883.9" y="1198.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 0.31%)</title><rect x="882.3" y="1171.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="885.3" y="1182.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.05%)</title><rect x="883.7" y="1155.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="886.7" y="1166.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="884.0" y="1139.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="887.0" y="1150.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.07%)</title><rect x="884.3" y="1155.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="887.3" y="1166.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="885.1" y="1155.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="888.1" y="1166.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="886.0" y="1171.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="889.0" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.05%)</title><rect x="886.8" y="1171.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="889.8" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (17 samples, 0.41%)</title><rect x="887.4" y="1171.0" width="4.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="890.4" y="1182.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="892.2" y="1171.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="895.2" y="1182.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.05%)</title><rect x="892.5" y="1171.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="895.5" y="1182.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.10%)</title><rect x="893.1" y="1171.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="896.1" y="1182.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="894.2" y="1171.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="897.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.87%)</title><rect x="894.5" y="1187.0" width="10.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="897.5" y="1198.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (3 samples, 0.07%)</title><rect x="894.5" y="1171.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="897.5" y="1182.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.10%)</title><rect x="895.4" y="1171.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="898.4" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_wait (26 samples, 0.63%)</title><rect x="896.5" y="1171.0" width="7.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="899.5" y="1182.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="903.9" y="1171.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="906.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (92 samples, 2.22%)</title><rect x="904.7" y="1219.0" width="26.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.7" y="1230.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 1.49%)</title><rect x="913.3" y="1203.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.3" y="1214.0"></text>
</g>
<g>
<title>Unsafe_Park (40 samples, 0.96%)</title><rect x="913.3" y="1187.0" width="11.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="916.3" y="1198.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.05%)</title><rect x="913.3" y="1171.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="916.3" y="1182.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (14 samples, 0.34%)</title><rect x="913.8" y="1171.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="916.8" y="1182.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.14%)</title><rect x="915.0" y="1155.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="918.0" y="1166.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.05%)</title><rect x="916.1" y="1139.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="919.1" y="1150.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="916.7" y="1155.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="919.7" y="1166.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (3 samples, 0.07%)</title><rect x="916.9" y="1155.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="919.9" y="1166.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="917.8" y="1171.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="920.8" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.02%)</title><rect x="918.1" y="1171.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="921.1" y="1182.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="918.4" y="1171.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="921.4" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (18 samples, 0.43%)</title><rect x="918.9" y="1171.0" width="5.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="921.9" y="1182.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="924.1" y="1171.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="927.1" y="1182.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="924.3" y="1171.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="927.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.53%)</title><rect x="924.6" y="1187.0" width="6.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="927.6" y="1198.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="924.6" y="1171.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="927.6" y="1182.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="925.2" y="1171.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="928.2" y="1182.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="925.5" y="1171.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="928.5" y="1182.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="925.8" y="1171.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="928.8" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="926.0" y="1171.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="929.0" y="1182.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="926.3" y="1171.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="929.3" y="1182.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (15 samples, 0.36%)</title><rect x="926.6" y="1171.0" width="4.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="929.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (414 samples, 9.97%)</title><rect x="930.9" y="1251.0" width="117.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="933.9" y="1262.0">jdk/internal/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.24%)</title><rect x="934.6" y="1235.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="937.6" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.24%)</title><rect x="934.6" y="1219.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="937.6" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.24%)</title><rect x="934.6" y="1203.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="937.6" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.05%)</title><rect x="934.8" y="1187.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="937.8" y="1198.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.17%)</title><rect x="935.4" y="1187.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="938.4" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="937.4" y="1235.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="940.4" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.05%)</title><rect x="937.4" y="1219.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="940.4" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.02%)</title><rect x="937.4" y="1203.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="940.4" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="937.4" y="1187.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="940.4" y="1198.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.02%)</title><rect x="937.7" y="1203.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="940.7" y="1214.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (30 samples, 0.72%)</title><rect x="938.0" y="1235.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.0" y="1246.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (30 samples, 0.72%)</title><rect x="938.0" y="1219.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="941.0" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.12%)</title><rect x="946.5" y="1235.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="949.5" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (57 samples, 1.37%)</title><rect x="947.9" y="1235.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$453/1260814613.accept (53 samples, 1.28%)</title><rect x="948.2" y="1219.0" width="15.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (53 samples, 1.28%)</title><rect x="948.2" y="1203.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (53 samples, 1.28%)</title><rect x="948.2" y="1187.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (53 samples, 1.28%)</title><rect x="948.2" y="1171.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (53 samples, 1.28%)</title><rect x="948.2" y="1155.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.07%)</title><rect x="948.2" y="1139.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.05%)</title><rect x="948.5" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="948.8" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.02%)</title><rect x="948.8" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.02%)</title><rect x="948.8" y="1075.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (50 samples, 1.20%)</title><rect x="949.1" y="1139.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (50 samples, 1.20%)</title><rect x="949.1" y="1123.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="952.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (50 samples, 1.20%)</title><rect x="949.1" y="1107.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (50 samples, 1.20%)</title><rect x="949.1" y="1091.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (50 samples, 1.20%)</title><rect x="949.1" y="1075.0" width="14.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (48 samples, 1.16%)</title><rect x="949.3" y="1059.0" width="13.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="952.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (48 samples, 1.16%)</title><rect x="949.3" y="1043.0" width="13.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.46%)</title><rect x="949.3" y="1027.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.46%)</title><rect x="949.3" y="1011.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (19 samples, 0.46%)</title><rect x="949.3" y="995.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.43%)</title><rect x="949.6" y="979.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.43%)</title><rect x="949.6" y="963.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 0.43%)</title><rect x="949.6" y="947.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.43%)</title><rect x="949.6" y="931.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.43%)</title><rect x="949.6" y="915.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.31%)</title><rect x="949.6" y="899.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="949.6" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="949.6" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="949.6" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="949.9" y="883.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="949.9" y="867.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="950.5" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="950.5" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="950.5" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="950.5" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.5" y="814.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="950.5" y="787.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="953.5" y="798.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="950.5" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="953.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.22%)</title><rect x="950.8" y="883.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.22%)</title><rect x="950.8" y="867.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.22%)</title><rect x="950.8" y="851.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.22%)</title><rect x="950.8" y="835.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.22%)</title><rect x="950.8" y="819.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.8" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="951.0" y="803.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="954.0" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.10%)</title><rect x="951.6" y="803.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="954.6" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="952.2" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="955.2" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="952.5" y="787.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="955.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="952.7" y="803.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="955.7" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="953.0" y="803.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="956.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.10%)</title><rect x="953.3" y="899.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.10%)</title><rect x="953.3" y="883.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="956.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="954.5" y="899.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="954.5" y="883.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="954.5" y="867.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.02%)</title><rect x="954.7" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.02%)</title><rect x="954.7" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.02%)</title><rect x="954.7" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.02%)</title><rect x="954.7" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (28 samples, 0.67%)</title><rect x="955.0" y="1027.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (2 samples, 0.05%)</title><rect x="955.0" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="955.0" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="958.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="955.0" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="955.0" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="958.0" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="955.3" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="955.3" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.3" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="955.3" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.3" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (26 samples, 0.63%)</title><rect x="955.6" y="1011.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="958.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="955.6" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="958.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="955.6" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.6" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.60%)</title><rect x="955.9" y="995.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.9" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.60%)</title><rect x="955.9" y="979.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.9" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (21 samples, 0.51%)</title><rect x="955.9" y="963.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (21 samples, 0.51%)</title><rect x="955.9" y="947.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="958.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (21 samples, 0.51%)</title><rect x="955.9" y="931.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.9" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="956.4" y="915.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="959.4" y="926.0"></text>
</g>
<g>
<title>__read (17 samples, 0.41%)</title><rect x="956.7" y="915.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="959.7" y="926.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="961.6" y="915.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="964.6" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.10%)</title><rect x="961.8" y="963.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.8" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="961.8" y="947.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="964.8" y="958.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="962.4" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="965.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="962.7" y="947.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="963.0" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$456/1562675777.accept (3 samples, 0.07%)</title><rect x="963.3" y="1219.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.07%)</title><rect x="963.3" y="1203.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$452/1862861862.run (3 samples, 0.07%)</title><rect x="963.3" y="1187.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.07%)</title><rect x="963.3" y="1171.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.07%)</title><rect x="963.3" y="1155.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.3" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="964.1" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.1" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (12 samples, 0.29%)</title><rect x="964.4" y="1235.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.4" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.29%)</title><rect x="964.4" y="1219.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.4" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.characteristics (1 samples, 0.02%)</title><rect x="965.3" y="1203.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.3" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (8 samples, 0.19%)</title><rect x="965.5" y="1203.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.5" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (8 samples, 0.19%)</title><rect x="965.5" y="1187.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.5" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.19%)</title><rect x="965.5" y="1171.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.5" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.14%)</title><rect x="965.8" y="1155.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.8" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (4 samples, 0.10%)</title><rect x="965.8" y="1139.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.8" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.07%)</title><rect x="966.1" y="1123.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.1" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (3 samples, 0.07%)</title><rect x="966.1" y="1107.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$451/1366943540.accept (1 samples, 0.02%)</title><rect x="966.7" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.7" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="966.7" y="1075.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.7" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="966.7" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.7" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="966.7" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.7" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="966.7" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.7" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="966.7" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.7" y="1022.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="967.0" y="1139.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.0" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.02%)</title><rect x="967.0" y="1123.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.0" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="967.2" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.2" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="967.2" y="1123.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="970.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="967.5" y="1155.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (61 samples, 1.47%)</title><rect x="967.8" y="1235.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$286/1250923022.run (41 samples, 0.99%)</title><rect x="967.8" y="1219.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (41 samples, 0.99%)</title><rect x="967.8" y="1203.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.96%)</title><rect x="968.1" y="1187.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.96%)</title><rect x="968.1" y="1171.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (37 samples, 0.89%)</title><rect x="968.9" y="1155.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (36 samples, 0.87%)</title><rect x="969.2" y="1139.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="972.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/227468773.run (29 samples, 0.70%)</title><rect x="970.1" y="1123.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (28 samples, 0.67%)</title><rect x="970.4" y="1107.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (28 samples, 0.67%)</title><rect x="970.4" y="1091.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (26 samples, 0.63%)</title><rect x="970.9" y="1075.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (4 samples, 0.10%)</title><rect x="971.2" y="1059.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="974.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4 samples, 0.10%)</title><rect x="971.2" y="1043.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4 samples, 0.10%)</title><rect x="971.2" y="1027.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.10%)</title><rect x="971.2" y="1011.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.10%)</title><rect x="971.2" y="995.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.10%)</title><rect x="971.2" y="979.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.10%)</title><rect x="971.2" y="963.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.10%)</title><rect x="971.2" y="947.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.2" y="958.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (2 samples, 0.05%)</title><rect x="971.2" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.2" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="971.2" y="915.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="974.2" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.05%)</title><rect x="971.8" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.8" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.05%)</title><rect x="971.8" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.05%)</title><rect x="971.8" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (21 samples, 0.51%)</title><rect x="972.4" y="1059.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 0.51%)</title><rect x="972.4" y="1043.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="975.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.29%)</title><rect x="974.9" y="1027.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.24%)</title><rect x="975.5" y="1011.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="978.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.24%)</title><rect x="975.5" y="995.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.05%)</title><rect x="975.5" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="978.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.19%)</title><rect x="976.0" y="979.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="979.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.12%)</title><rect x="976.0" y="963.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="979.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="976.0" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="979.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="976.0" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="976.0" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="979.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="976.3" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="976.3" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="976.3" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="979.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="976.3" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="976.3" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="976.3" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.3" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="976.3" y="851.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="979.3" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="976.3" y="835.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="979.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.07%)</title><rect x="976.6" y="947.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.07%)</title><rect x="976.6" y="931.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.07%)</title><rect x="976.6" y="915.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="976.9" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="976.9" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.9" y="894.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="976.9" y="867.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="979.9" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="977.2" y="867.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="980.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.07%)</title><rect x="977.5" y="963.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="980.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.07%)</title><rect x="977.5" y="947.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="980.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.07%)</title><rect x="977.5" y="931.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="980.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.10%)</title><rect x="978.3" y="1123.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.02%)</title><rect x="979.2" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$301/890062922.run (20 samples, 0.48%)</title><rect x="979.5" y="1219.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (20 samples, 0.48%)</title><rect x="979.5" y="1203.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.46%)</title><rect x="979.7" y="1187.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.46%)</title><rect x="979.7" y="1171.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="982.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.43%)</title><rect x="980.0" y="1155.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.29%)</title><rect x="980.0" y="1139.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="980.0" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="980.0" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="980.0" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="980.3" y="1123.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="980.3" y="1107.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="980.3" y="1091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="980.3" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="983.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="980.3" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="980.3" y="1043.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.3" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="980.3" y="1027.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="983.3" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="980.3" y="1011.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="983.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="980.6" y="1027.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="983.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="980.6" y="1011.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="983.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.22%)</title><rect x="980.9" y="1123.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.22%)</title><rect x="980.9" y="1107.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.22%)</title><rect x="980.9" y="1091.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.19%)</title><rect x="981.2" y="1075.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.19%)</title><rect x="981.2" y="1059.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.2" y="1070.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="981.2" y="1043.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="984.2" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.12%)</title><rect x="981.4" y="1043.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="984.4" y="1054.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="981.7" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="984.7" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="982.0" y="1027.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="985.0" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="982.3" y="1027.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="985.3" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="982.6" y="1027.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="985.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="982.9" y="1043.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="985.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="983.4" y="1139.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="983.4" y="1123.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.07%)</title><rect x="984.3" y="1139.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.07%)</title><rect x="984.3" y="1123.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.07%)</title><rect x="984.3" y="1107.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (29 samples, 0.70%)</title><rect x="985.1" y="1235.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.1" y="1246.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.24%)</title><rect x="985.1" y="1219.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.1" y="1230.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.24%)</title><rect x="985.1" y="1203.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="988.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.14%)</title><rect x="986.0" y="1187.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.0" y="1198.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.10%)</title><rect x="986.6" y="1171.0" width="1.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="989.6" y="1182.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="986.6" y="1155.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="989.6" y="1166.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.05%)</title><rect x="987.1" y="1155.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="990.1" y="1166.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="987.1" y="1139.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="990.1" y="1150.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="987.1" y="1123.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="990.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.02%)</title><rect x="987.7" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="988.0" y="1219.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (18 samples, 0.43%)</title><rect x="988.3" y="1219.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.3" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.26%)</title><rect x="989.1" y="1203.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="992.1" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.26%)</title><rect x="989.1" y="1187.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="992.1" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.26%)</title><rect x="989.1" y="1171.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="992.1" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (8 samples, 0.19%)</title><rect x="989.4" y="1155.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="992.4" y="1166.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="991.7" y="1155.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="994.7" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.07%)</title><rect x="992.2" y="1203.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1 samples, 0.02%)</title><rect x="993.1" y="1203.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="996.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (4 samples, 0.10%)</title><rect x="993.4" y="1235.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="996.4" y="1246.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.10%)</title><rect x="993.4" y="1219.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.4" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.10%)</title><rect x="993.4" y="1203.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.4" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (4 samples, 0.10%)</title><rect x="993.4" y="1187.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (7 samples, 0.17%)</title><rect x="994.5" y="1235.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.5" y="1246.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (2 samples, 0.05%)</title><rect x="994.8" y="1219.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="997.8" y="1230.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.05%)</title><rect x="994.8" y="1203.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.8" y="1214.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.10%)</title><rect x="995.4" y="1219.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.4" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.10%)</title><rect x="995.4" y="1203.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.4" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.10%)</title><rect x="995.4" y="1187.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (31 samples, 0.75%)</title><rect x="996.5" y="1235.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.5" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.17%)</title><rect x="997.9" y="1219.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1000.9" y="1230.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.14%)</title><rect x="998.2" y="1203.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1001.2" y="1214.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="998.2" y="1187.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1001.2" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.12%)</title><rect x="998.5" y="1187.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1001.5" y="1198.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.10%)</title><rect x="998.8" y="1171.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1001.8" y="1182.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.22%)</title><rect x="999.9" y="1219.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1002.9" y="1230.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.22%)</title><rect x="999.9" y="1203.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (9 samples, 0.22%)</title><rect x="999.9" y="1187.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1002.9" y="1198.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.12%)</title><rect x="1001.1" y="1171.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1004.1" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="1002.5" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.5" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.02%)</title><rect x="1002.5" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.5" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="1002.5" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.5" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (2 samples, 0.05%)</title><rect x="1002.8" y="1219.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.8" y="1230.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (2 samples, 0.05%)</title><rect x="1002.8" y="1203.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1005.8" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (7 samples, 0.17%)</title><rect x="1003.3" y="1219.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.3" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (7 samples, 0.17%)</title><rect x="1003.3" y="1203.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.3" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (7 samples, 0.17%)</title><rect x="1003.3" y="1187.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.3" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (7 samples, 0.17%)</title><rect x="1003.3" y="1171.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="1005.0" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1008.0" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (132 samples, 3.18%)</title><rect x="1005.3" y="1235.0" width="37.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1008.3" y="1246.0">sun..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.05%)</title><rect x="1005.3" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1008.3" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (130 samples, 3.13%)</title><rect x="1005.9" y="1219.0" width="36.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.9" y="1230.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (130 samples, 3.13%)</title><rect x="1005.9" y="1203.0" width="36.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.9" y="1214.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (45 samples, 1.08%)</title><rect x="1006.5" y="1187.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.5" y="1198.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.05%)</title><rect x="1007.6" y="1171.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1010.6" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (39 samples, 0.94%)</title><rect x="1008.2" y="1171.0" width="11.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1011.2" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (60 samples, 1.44%)</title><rect x="1019.2" y="1187.0" width="17.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1022.2" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.22%)</title><rect x="1019.2" y="1171.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.2" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.22%)</title><rect x="1019.2" y="1155.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1022.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.02%)</title><rect x="1021.5" y="1139.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.5" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (37 samples, 0.89%)</title><rect x="1021.8" y="1171.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.8" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="1022.1" y="1155.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1025.1" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="1022.1" y="1139.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1025.1" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="1022.1" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1025.1" y="1134.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1022.1" y="1107.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1025.1" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (35 samples, 0.84%)</title><rect x="1022.4" y="1155.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1025.4" y="1166.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="1023.5" y="1139.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1026.5" y="1150.0"></text>
</g>
<g>
<title>__read (29 samples, 0.70%)</title><rect x="1024.1" y="1139.0" width="8.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1027.1" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (14 samples, 0.34%)</title><rect x="1032.3" y="1171.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.3" y="1182.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.22%)</title><rect x="1032.6" y="1155.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.6" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.22%)</title><rect x="1032.6" y="1139.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.6" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.22%)</title><rect x="1032.6" y="1123.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.6" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (3 samples, 0.07%)</title><rect x="1032.9" y="1107.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.9" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.05%)</title><rect x="1033.7" y="1107.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.7" y="1118.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.07%)</title><rect x="1034.3" y="1107.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1037.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (4 samples, 0.10%)</title><rect x="1035.1" y="1155.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.1" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (4 samples, 0.10%)</title><rect x="1035.1" y="1139.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.1" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.10%)</title><rect x="1035.1" y="1123.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.1" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (11 samples, 0.26%)</title><rect x="1036.3" y="1187.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="1036.3" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.3" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (2 samples, 0.05%)</title><rect x="1036.6" y="1171.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.6" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (3 samples, 0.07%)</title><rect x="1037.1" y="1171.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1040.1" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="1037.1" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1040.1" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="1037.1" y="1139.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1040.1" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.05%)</title><rect x="1037.4" y="1155.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.4" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateInterestOps (5 samples, 0.12%)</title><rect x="1038.0" y="1171.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.0" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (5 samples, 0.12%)</title><rect x="1039.4" y="1187.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.4" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (5 samples, 0.12%)</title><rect x="1039.4" y="1171.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.05%)</title><rect x="1039.7" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1042.7" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.05%)</title><rect x="1040.3" y="1155.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.05%)</title><rect x="1040.3" y="1139.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.05%)</title><rect x="1040.3" y="1123.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.3" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (7 samples, 0.17%)</title><rect x="1040.8" y="1187.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.8" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.05%)</title><rect x="1042.3" y="1171.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.3" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (7 samples, 0.17%)</title><rect x="1042.8" y="1235.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (6 samples, 0.14%)</title><rect x="1043.1" y="1219.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.1" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (6 samples, 0.14%)</title><rect x="1043.1" y="1203.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.1" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (5 samples, 0.12%)</title><rect x="1043.1" y="1187.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.1" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.12%)</title><rect x="1043.1" y="1171.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1046.1" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.02%)</title><rect x="1044.5" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.5" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.02%)</title><rect x="1044.5" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.5" y="1182.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.02%)</title><rect x="1044.5" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.5" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.02%)</title><rect x="1044.5" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.5" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="1044.5" y="1123.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (5 samples, 0.12%)</title><rect x="1044.8" y="1235.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1047.8" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (4 samples, 0.10%)</title><rect x="1045.1" y="1219.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.1" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (4 samples, 0.10%)</title><rect x="1045.1" y="1203.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.1" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (8 samples, 0.19%)</title><rect x="1046.2" y="1235.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.2" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.19%)</title><rect x="1046.2" y="1219.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.2" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.05%)</title><rect x="1047.9" y="1203.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.9" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1047.9" y="1187.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.9" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1047.9" y="1171.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1050.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (349 samples, 8.40%)</title><rect x="1048.5" y="1251.0" width="99.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.5" y="1262.0">one/nio/serv..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1050.5" y="1235.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1053.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1050.5" y="1219.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1053.5" y="1230.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="1050.5" y="1203.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.5" y="1214.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.12%)</title><rect x="1050.8" y="1235.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1053.8" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.05%)</title><rect x="1052.2" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.2" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (80 samples, 1.93%)</title><rect x="1052.8" y="1235.0" width="22.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.8" y="1246.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="1055.6" y="1219.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1058.6" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="1055.6" y="1203.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1058.6" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="1055.6" y="1187.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1058.6" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1055.6" y="1171.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1058.6" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1055.6" y="1155.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1058.6" y="1166.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.02%)</title><rect x="1055.6" y="1139.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1058.6" y="1150.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1055.9" y="1171.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1058.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1056.2" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (1 samples, 0.02%)</title><rect x="1056.2" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (67 samples, 1.61%)</title><rect x="1056.5" y="1219.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.5" y="1230.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="1058.7" y="1203.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1061.7" y="1214.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.07%)</title><rect x="1059.0" y="1203.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1062.0" y="1214.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (12 samples, 0.29%)</title><rect x="1059.9" y="1203.0" width="3.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1062.9" y="1214.0"></text>
</g>
<g>
<title>clock_gettime (14 samples, 0.34%)</title><rect x="1063.3" y="1203.0" width="4.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1066.3" y="1214.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="1066.4" y="1187.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1069.4" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="1067.0" y="1187.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1070.0" y="1198.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1067.0" y="1171.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1070.0" y="1182.0"></text>
</g>
<g>
<title>clock_gettime@plt (2 samples, 0.05%)</title><rect x="1067.3" y="1203.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1070.3" y="1214.0"></text>
</g>
<g>
<title>epoll_wait (26 samples, 0.63%)</title><rect x="1067.8" y="1203.0" width="7.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1070.8" y="1214.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.02%)</title><rect x="1075.2" y="1203.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1078.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (253 samples, 6.09%)</title><rect x="1075.5" y="1235.0" width="71.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1078.5" y="1246.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (244 samples, 5.88%)</title><rect x="1078.1" y="1219.0" width="69.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.1" y="1230.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (181 samples, 4.36%)</title><rect x="1078.6" y="1203.0" width="51.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.6" y="1214.0">one/n..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (1 samples, 0.02%)</title><rect x="1083.2" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.2" y="1198.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="1083.5" y="1187.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1086.5" y="1198.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1084.0" y="1187.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1087.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (87 samples, 2.09%)</title><rect x="1084.3" y="1187.0" width="24.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.3" y="1198.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (87 samples, 2.09%)</title><rect x="1084.3" y="1171.0" width="24.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.3" y="1182.0">o..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (74 samples, 1.78%)</title><rect x="1084.3" y="1155.0" width="21.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1087.3" y="1166.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="1084.3" y="1139.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1084.3" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1087.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1084.3" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.19%)</title><rect x="1084.6" y="1139.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.19%)</title><rect x="1084.6" y="1123.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1084.9" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1084.9" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="1085.2" y="1107.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1088.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="1085.2" y="1091.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.07%)</title><rect x="1085.2" y="1075.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1088.2" y="1086.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1086.0" y="1107.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1089.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="1086.3" y="1107.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1089.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1086.6" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1086.6" y="1075.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1086.6" y="1059.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1089.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (65 samples, 1.57%)</title><rect x="1086.9" y="1139.0" width="18.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.9" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (65 samples, 1.57%)</title><rect x="1086.9" y="1123.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1457384287.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1087.7" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1087.7" y="1091.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$111/1390573019.get$Lambda (2 samples, 0.05%)</title><rect x="1087.7" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (60 samples, 1.44%)</title><rect x="1088.3" y="1107.0" width="17.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (58 samples, 1.40%)</title><rect x="1088.8" y="1091.0" width="16.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1091.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (49 samples, 1.18%)</title><rect x="1089.4" y="1075.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.22%)</title><rect x="1089.4" y="1059.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.22%)</title><rect x="1089.4" y="1043.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="1091.4" y="1027.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="1091.4" y="1011.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1094.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="1091.4" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1094.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="1091.4" y="979.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.4" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="1091.4" y="963.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1094.4" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1091.4" y="947.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1094.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1091.7" y="963.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1094.7" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1091.7" y="947.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1094.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (40 samples, 0.96%)</title><rect x="1092.0" y="1059.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1095.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (40 samples, 0.96%)</title><rect x="1092.0" y="1043.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (40 samples, 0.96%)</title><rect x="1092.0" y="1027.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (39 samples, 0.94%)</title><rect x="1092.3" y="1011.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (39 samples, 0.94%)</title><rect x="1092.3" y="995.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.3" y="1006.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.05%)</title><rect x="1092.5" y="979.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1095.5" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="1093.1" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1096.1" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.43%)</title><rect x="1093.4" y="979.0" width="5.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1096.4" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="1093.7" y="963.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1096.7" y="974.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.05%)</title><rect x="1094.0" y="963.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1097.0" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="1094.5" y="963.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1097.5" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="1095.1" y="963.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.1" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1096.0" y="963.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1099.0" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="1096.2" y="963.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1099.2" y="974.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="1096.5" y="963.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1099.5" y="974.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.10%)</title><rect x="1097.1" y="963.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1100.1" y="974.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="1098.2" y="963.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1101.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1098.5" y="979.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1101.5" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.02%)</title><rect x="1098.5" y="963.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1101.5" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.34%)</title><rect x="1098.8" y="979.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1101.8" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="1102.8" y="979.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1105.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (7 samples, 0.17%)</title><rect x="1103.3" y="1075.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.&lt;init&gt; (7 samples, 0.17%)</title><rect x="1103.3" y="1059.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.26%)</title><rect x="1105.3" y="1155.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.3" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.26%)</title><rect x="1105.3" y="1139.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.3" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="1105.3" y="1123.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.19%)</title><rect x="1106.2" y="1123.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1109.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.19%)</title><rect x="1106.2" y="1107.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1109.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (8 samples, 0.19%)</title><rect x="1106.2" y="1091.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.2" y="1102.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1107.9" y="1075.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1110.9" y="1086.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1108.2" y="1075.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1111.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.05%)</title><rect x="1108.5" y="1155.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="1108.5" y="1139.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1108.5" y="1123.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.5" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1108.5" y="1107.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1111.5" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1108.5" y="1091.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1111.5" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1108.5" y="1075.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1111.5" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1108.5" y="1059.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.5" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1108.5" y="1043.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1111.5" y="1054.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="1108.5" y="1027.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1111.5" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1108.7" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.7" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1108.7" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1111.7" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1108.7" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1111.7" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1108.7" y="1059.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1111.7" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1108.7" y="1043.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1111.7" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1108.7" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1111.7" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1108.7" y="1011.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1111.7" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="1108.7" y="995.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1111.7" y="1006.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="1108.7" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1111.7" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="1108.7" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1111.7" y="974.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1108.7" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1111.7" y="958.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.02%)</title><rect x="1108.7" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1111.7" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (29 samples, 0.70%)</title><rect x="1109.0" y="1187.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 0.43%)</title><rect x="1109.3" y="1171.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.43%)</title><rect x="1109.3" y="1155.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.43%)</title><rect x="1109.3" y="1139.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (18 samples, 0.43%)</title><rect x="1109.3" y="1123.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.3" y="1134.0"></text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (6 samples, 0.14%)</title><rect x="1112.7" y="1107.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.12%)</title><rect x="1114.4" y="1171.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.12%)</title><rect x="1114.4" y="1155.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.4" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.12%)</title><rect x="1114.4" y="1139.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1117.4" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1114.7" y="1123.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1117.7" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.07%)</title><rect x="1115.0" y="1123.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1118.0" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1115.0" y="1107.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1118.0" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1115.0" y="1091.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1118.0" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1115.0" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1118.0" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="1115.0" y="1059.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1118.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1115.3" y="1107.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1118.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.12%)</title><rect x="1115.8" y="1171.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.02%)</title><rect x="1117.3" y="1187.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.3" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1117.3" y="1171.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1120.3" y="1182.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1117.3" y="1155.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1120.3" y="1166.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1117.3" y="1139.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1120.3" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1117.3" y="1123.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1120.3" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1117.3" y="1107.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1120.3" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1117.3" y="1091.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1120.3" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="1117.3" y="1075.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1120.3" y="1086.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="1117.3" y="1059.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1120.3" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.02%)</title><rect x="1117.3" y="1043.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1120.3" y="1054.0"></text>
</g>
<g>
<title>HeapRegion::report_region_type_change(G1HeapRegionTraceType::Type) (1 samples, 0.02%)</title><rect x="1117.3" y="1027.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1120.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (37 samples, 0.89%)</title><rect x="1117.5" y="1187.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.14%)</title><rect x="1125.8" y="1171.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.14%)</title><rect x="1125.8" y="1155.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1127.2" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1127.2" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="1127.2" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="1127.5" y="1171.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1127.5" y="1155.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.5" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1127.5" y="1139.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1130.5" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1127.8" y="1139.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.8" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1127.8" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.8" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1127.8" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1130.8" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1127.8" y="1091.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1130.8" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1127.8" y="1075.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.8" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="1127.8" y="1059.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.17%)</title><rect x="1128.1" y="1187.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.17%)</title><rect x="1128.1" y="1171.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.1" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.07%)</title><rect x="1128.1" y="1155.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1131.1" y="1166.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.07%)</title><rect x="1128.1" y="1139.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.1" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.07%)</title><rect x="1128.1" y="1123.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.1" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="1128.1" y="1107.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1131.1" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.07%)</title><rect x="1128.1" y="1091.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.1" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1128.1" y="1075.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1131.1" y="1086.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.05%)</title><rect x="1128.3" y="1075.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1131.3" y="1086.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1128.6" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.6" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.07%)</title><rect x="1128.9" y="1155.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.9" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="1128.9" y="1139.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1131.9" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="1128.9" y="1123.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1131.9" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1128.9" y="1107.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.9" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1128.9" y="1091.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1131.9" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="1128.9" y="1075.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.9" y="1086.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1129.2" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1132.2" y="1102.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.02%)</title><rect x="1129.5" y="1139.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1129.8" y="1155.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1129.8" y="1139.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="1129.8" y="1123.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.8" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1129.8" y="1107.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1132.8" y="1118.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1129.8" y="1091.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.8" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1129.8" y="1075.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1132.8" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1129.8" y="1059.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1132.8" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1129.8" y="1043.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1132.8" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1129.8" y="1027.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.02%)</title><rect x="1130.0" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (60 samples, 1.44%)</title><rect x="1130.3" y="1203.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (55 samples, 1.32%)</title><rect x="1131.8" y="1187.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1134.8" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (29 samples, 0.70%)</title><rect x="1133.7" y="1171.0" width="8.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1136.7" y="1182.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.14%)</title><rect x="1134.0" y="1155.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1137.0" y="1166.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="1135.7" y="1155.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.7" y="1166.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="1136.3" y="1155.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1139.3" y="1166.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="1136.9" y="1155.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.9" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.10%)</title><rect x="1137.2" y="1155.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1140.2" y="1166.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.24%)</title><rect x="1138.3" y="1155.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1141.3" y="1166.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.05%)</title><rect x="1138.6" y="1139.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.6" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="1139.1" y="1139.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.1" y="1150.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.14%)</title><rect x="1139.4" y="1139.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1142.4" y="1150.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.07%)</title><rect x="1140.3" y="1123.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.3" y="1134.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.07%)</title><rect x="1141.1" y="1155.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.1" y="1166.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1142.0" y="1171.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1145.0" y="1182.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1142.3" y="1171.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1145.3" y="1182.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.07%)</title><rect x="1142.5" y="1171.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1145.5" y="1182.0"></text>
</g>
<g>
<title>recv (12 samples, 0.29%)</title><rect x="1143.4" y="1171.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1146.4" y="1182.0"></text>
</g>
<g>
<title>recv@plt (2 samples, 0.05%)</title><rect x="1146.8" y="1171.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1149.8" y="1182.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="1147.4" y="1235.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.4" y="1246.0"></text>
</g>
<g>
<title>start_thread (149 samples, 3.59%)</title><rect x="1147.7" y="1251.0" width="42.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1150.7" y="1262.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (149 samples, 3.59%)</title><rect x="1147.7" y="1235.0" width="42.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1150.7" y="1246.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (149 samples, 3.59%)</title><rect x="1147.7" y="1219.0" width="42.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.7" y="1230.0">Thre..</text>
</g>
<g>
<title>GangWorker::loop() (98 samples, 2.36%)</title><rect x="1147.7" y="1203.0" width="27.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.7" y="1214.0">G..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (98 samples, 2.36%)</title><rect x="1147.7" y="1187.0" width="27.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.7" y="1198.0">G..</text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (89 samples, 2.14%)</title><rect x="1147.7" y="1171.0" width="25.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1150.7" y="1182.0">G..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (89 samples, 2.14%)</title><rect x="1147.7" y="1155.0" width="25.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.7" y="1166.0">G..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (89 samples, 2.14%)</title><rect x="1147.7" y="1139.0" width="25.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.7" y="1150.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (89 samples, 2.14%)</title><rect x="1147.7" y="1123.0" width="25.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.7" y="1134.0">D..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (89 samples, 2.14%)</title><rect x="1147.7" y="1107.0" width="25.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.7" y="1118.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1147.7" y="1091.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.7" y="1102.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (85 samples, 2.05%)</title><rect x="1147.9" y="1091.0" width="24.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.9" y="1102.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (57 samples, 1.37%)</title><rect x="1155.6" y="1075.0" width="16.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.6" y="1086.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.02%)</title><rect x="1166.4" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.4" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (18 samples, 0.43%)</title><rect x="1166.7" y="1059.0" width="5.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.7" y="1070.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.02%)</title><rect x="1171.5" y="1043.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.5" y="1054.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1171.8" y="1075.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.8" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (3 samples, 0.07%)</title><rect x="1172.1" y="1091.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.1" y="1102.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.07%)</title><rect x="1172.1" y="1075.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.1" y="1086.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.02%)</title><rect x="1172.7" y="1059.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.7" y="1070.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (9 samples, 0.22%)</title><rect x="1173.0" y="1171.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.0" y="1182.0"></text>
</g>
<g>
<title>G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker() (1 samples, 0.02%)</title><rect x="1173.0" y="1155.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.0" y="1166.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (6 samples, 0.14%)</title><rect x="1173.2" y="1155.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.2" y="1166.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (6 samples, 0.14%)</title><rect x="1173.2" y="1139.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.2" y="1150.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (5 samples, 0.12%)</title><rect x="1173.5" y="1123.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.5" y="1134.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.02%)</title><rect x="1173.5" y="1107.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.5" y="1118.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.02%)</title><rect x="1173.5" y="1091.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.5" y="1102.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (1 samples, 0.02%)</title><rect x="1173.8" y="1107.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.8" y="1118.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.02%)</title><rect x="1173.8" y="1091.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.8" y="1102.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (1 samples, 0.02%)</title><rect x="1174.1" y="1107.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.1" y="1118.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (1 samples, 0.02%)</title><rect x="1174.1" y="1091.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.1" y="1102.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(unsigned int*) (1 samples, 0.02%)</title><rect x="1174.1" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.1" y="1086.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1174.1" y="1059.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.1" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1174.1" y="1043.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.1" y="1054.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1174.4" y="1107.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.4" y="1118.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="1174.4" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.4" y="1102.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1174.4" y="1075.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.4" y="1086.0"></text>
</g>
<g>
<title>metadata_Relocation::fix_metadata_relocation() (1 samples, 0.02%)</title><rect x="1174.7" y="1107.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.7" y="1118.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="1174.9" y="1155.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.9" y="1166.0"></text>
</g>
<g>
<title>Management::oops_do(OopClosure*) (1 samples, 0.02%)</title><rect x="1174.9" y="1139.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.9" y="1150.0"></text>
</g>
<g>
<title>MemoryService::oops_do(OopClosure*) (1 samples, 0.02%)</title><rect x="1174.9" y="1123.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.9" y="1134.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.02%)</title><rect x="1174.9" y="1107.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.9" y="1118.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.02%)</title><rect x="1175.2" y="1155.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.2" y="1166.0"></text>
</g>
<g>
<title>JavaThread::run() (50 samples, 1.20%)</title><rect x="1175.5" y="1203.0" width="14.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.5" y="1214.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (50 samples, 1.20%)</title><rect x="1175.5" y="1187.0" width="14.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.5" y="1198.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (50 samples, 1.20%)</title><rect x="1175.5" y="1171.0" width="14.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.5" y="1182.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (50 samples, 1.20%)</title><rect x="1175.5" y="1155.0" width="14.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.5" y="1166.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (50 samples, 1.20%)</title><rect x="1175.5" y="1139.0" width="14.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.5" y="1150.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (24 samples, 0.58%)</title><rect x="1175.5" y="1123.0" width="6.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.5" y="1134.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.02%)</title><rect x="1175.5" y="1107.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.5" y="1118.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.02%)</title><rect x="1175.5" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.5" y="1102.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.05%)</title><rect x="1175.8" y="1107.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.8" y="1118.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.05%)</title><rect x="1175.8" y="1091.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.8" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.02%)</title><rect x="1176.4" y="1107.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.4" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.02%)</title><rect x="1176.4" y="1091.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.4" y="1102.0"></text>
</g>
<g>
<title>UniverseOper::clone() const (1 samples, 0.02%)</title><rect x="1176.4" y="1075.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.4" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.02%)</title><rect x="1176.6" y="1107.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.6" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.02%)</title><rect x="1176.6" y="1091.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.6" y="1102.0"></text>
</g>
<g>
<title>addL_rReg_immNode::ideal_Opcode() const (1 samples, 0.02%)</title><rect x="1176.6" y="1075.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.6" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (18 samples, 0.43%)</title><rect x="1176.9" y="1107.0" width="5.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.9" y="1118.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.02%)</title><rect x="1176.9" y="1091.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.9" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.02%)</title><rect x="1177.2" y="1091.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.2" y="1102.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.02%)</title><rect x="1177.2" y="1075.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.2" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1177.2" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.2" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.05%)</title><rect x="1177.5" y="1091.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.5" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (2 samples, 0.05%)</title><rect x="1177.5" y="1075.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.5" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.02%)</title><rect x="1177.8" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.8" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.12%)</title><rect x="1178.1" y="1091.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.1" y="1102.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.02%)</title><rect x="1178.1" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.1" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.02%)</title><rect x="1178.4" y="1075.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.4" y="1086.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.02%)</title><rect x="1178.4" y="1059.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.4" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.02%)</title><rect x="1178.6" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.6" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1178.6" y="1059.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.6" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.05%)</title><rect x="1178.9" y="1075.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.9" y="1086.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="1179.2" y="1059.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.2" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.05%)</title><rect x="1179.5" y="1091.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.5" y="1102.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.02%)</title><rect x="1179.8" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.8" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (2 samples, 0.05%)</title><rect x="1180.1" y="1091.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.1" y="1102.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.05%)</title><rect x="1180.1" y="1075.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.1" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.05%)</title><rect x="1180.6" y="1091.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.6" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.02%)</title><rect x="1181.2" y="1091.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.2" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.05%)</title><rect x="1181.5" y="1091.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.5" y="1102.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (1 samples, 0.02%)</title><rect x="1182.0" y="1107.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.0" y="1118.0"></text>
</g>
<g>
<title>Compile::Optimize() (17 samples, 0.41%)</title><rect x="1182.3" y="1123.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.3" y="1134.0"></text>
</g>
<g>
<title>CastPPNode::Opcode() const (1 samples, 0.02%)</title><rect x="1182.3" y="1107.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.3" y="1118.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (2 samples, 0.05%)</title><rect x="1182.6" y="1107.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.6" y="1118.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (2 samples, 0.05%)</title><rect x="1182.6" y="1091.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.6" y="1102.0"></text>
</g>
<g>
<title>BoolNode::Opcode() const (1 samples, 0.02%)</title><rect x="1182.6" y="1075.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.6" y="1086.0"></text>
</g>
<g>
<title>ThreadLocalNode::Opcode() const (1 samples, 0.02%)</title><rect x="1182.9" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.9" y="1086.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.07%)</title><rect x="1183.2" y="1107.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.2" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.07%)</title><rect x="1183.2" y="1091.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.2" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.02%)</title><rect x="1183.2" y="1075.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.2" y="1086.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.02%)</title><rect x="1183.2" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.2" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.02%)</title><rect x="1183.5" y="1075.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.5" y="1086.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.02%)</title><rect x="1183.7" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.7" y="1086.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.02%)</title><rect x="1184.0" y="1107.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.0" y="1118.0"></text>
</g>
<g>
<title>LoadNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1184.0" y="1091.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.0" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 0.14%)</title><rect x="1184.3" y="1107.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.3" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.02%)</title><rect x="1184.3" y="1091.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.3" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.07%)</title><rect x="1184.6" y="1091.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.02%)</title><rect x="1185.2" y="1075.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.2" y="1086.0"></text>
</g>
<g>
<title>PhiNode::adr_type() const (1 samples, 0.02%)</title><rect x="1185.2" y="1059.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.2" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.02%)</title><rect x="1185.5" y="1091.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.5" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.02%)</title><rect x="1185.5" y="1075.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.5" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1185.5" y="1059.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.5" y="1070.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.02%)</title><rect x="1185.5" y="1043.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.02%)</title><rect x="1185.7" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.7" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="1185.7" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.7" y="1086.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1185.7" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.10%)</title><rect x="1186.0" y="1107.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.07%)</title><rect x="1186.0" y="1091.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.0" y="1102.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1186.3" y="1075.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="1086.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.02%)</title><rect x="1186.3" y="1059.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.3" y="1070.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1186.6" y="1075.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.6" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (1 samples, 0.02%)</title><rect x="1186.6" y="1059.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.6" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.6" y="1043.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.6" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.6" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="1038.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.02%)</title><rect x="1186.6" y="1011.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.6" y="1022.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1186.6" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.6" y="1006.0"></text>
</g>
<g>
<title>PhiNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1186.9" y="1091.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.9" y="1102.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.02%)</title><rect x="1187.2" y="1123.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.2" y="1134.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.02%)</title><rect x="1187.4" y="1123.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.4" y="1134.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.02%)</title><rect x="1187.4" y="1107.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.4" y="1118.0"></text>
</g>
<g>
<title>DictI::operator++() (1 samples, 0.02%)</title><rect x="1187.4" y="1091.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.4" y="1102.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.17%)</title><rect x="1187.7" y="1123.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.7" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.17%)</title><rect x="1187.7" y="1107.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.17%)</title><rect x="1187.7" y="1091.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.17%)</title><rect x="1187.7" y="1075.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.17%)</title><rect x="1187.7" y="1059.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.7" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.17%)</title><rect x="1187.7" y="1043.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.14%)</title><rect x="1187.7" y="1027.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.7" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.14%)</title><rect x="1187.7" y="1011.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.14%)</title><rect x="1187.7" y="995.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.14%)</title><rect x="1187.7" y="979.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.14%)</title><rect x="1187.7" y="963.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.14%)</title><rect x="1187.7" y="947.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.7" y="958.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1187.7" y="931.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="942.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1187.7" y="915.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.7" y="926.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1187.7" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.7" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1187.7" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.7" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1187.7" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.7" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1187.7" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.7" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1187.7" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1187.7" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1187.7" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="814.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1187.7" y="787.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.7" y="798.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.7" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.7" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1187.7" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1187.7" y="723.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1187.7" y="707.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1187.7" y="691.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1187.7" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.7" y="686.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="1187.7" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.7" y="670.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="1187.7" y="643.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1190.7" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1188.0" y="931.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.0" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.12%)</title><rect x="1188.0" y="915.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.12%)</title><rect x="1188.0" y="899.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.12%)</title><rect x="1188.0" y="883.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.12%)</title><rect x="1188.0" y="867.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.12%)</title><rect x="1188.0" y="851.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.0" y="862.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.05%)</title><rect x="1188.0" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.0" y="846.0"></text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.02%)</title><rect x="1188.0" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.0" y="830.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1188.3" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.3" y="830.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1188.3" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1188.3" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.3" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1188.3" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.3" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1188.3" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.3" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1188.3" y="739.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1188.3" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1188.3" y="707.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.3" y="718.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1188.3" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.3" y="702.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1188.3" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.3" y="686.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1188.3" y="659.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="670.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1188.3" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.3" y="654.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1188.3" y="627.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.3" y="638.0"></text>
</g>
<g>
<title>Method::invocation_count() (1 samples, 0.02%)</title><rect x="1188.3" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.3" y="622.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_arguments_for_speculation(ciMethod*, Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1188.6" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.6" y="846.0"></text>
</g>
<g>
<title>ciMethod::argument_profiled_type(int, int, ciKlass*&amp;, ProfilePtrKind&amp;) (1 samples, 0.02%)</title><rect x="1188.6" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.6" y="830.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.02%)</title><rect x="1188.6" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.6" y="814.0"></text>
</g>
<g>
<title>ciMethodData::data_at(int) (1 samples, 0.02%)</title><rect x="1188.6" y="787.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.6" y="798.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1188.6" y="771.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.6" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1188.9" y="835.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1188.9" y="819.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1188.9" y="803.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1188.9" y="787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1188.9" y="771.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1188.9" y="755.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.9" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1188.9" y="739.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.9" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1188.9" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.9" y="734.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.02%)</title><rect x="1188.9" y="707.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.9" y="718.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1188.9" y="691.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="702.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.02%)</title><rect x="1188.9" y="675.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.1" y="707.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.1" y="691.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.1" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.1" y="659.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.1" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.1" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.1" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.1" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.1" y="611.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.1" y="595.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.1" y="579.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.1" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.1" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.1" y="547.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.1" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.1" y="531.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_method_entry() (1 samples, 0.02%)</title><rect x="1189.1" y="515.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.1" y="526.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.02%)</title><rect x="1189.1" y="499.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.1" y="510.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.02%)</title><rect x="1189.1" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="494.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.02%)</title><rect x="1189.1" y="467.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.4" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.4" y="979.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.4" y="963.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.4" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.4" y="947.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.4" y="931.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.4" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.4" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.4" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.4" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="787.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.4" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.4" y="755.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.4" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.4" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.4" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.4" y="659.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.4" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.4" y="627.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="611.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="595.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.4" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.4" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.4" y="547.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.4" y="531.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.4" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="515.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="499.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.4" y="483.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.4" y="467.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.4" y="451.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.4" y="435.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="446.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="419.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="403.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="387.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.4" y="371.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.4" y="355.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.4" y="339.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.4" y="323.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="307.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.4" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="291.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.4" y="275.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.4" y="259.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.4" y="243.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.4" y="227.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.4" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="211.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="195.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.4" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1189.4" y="179.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1189.4" y="163.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.4" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1189.4" y="147.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.4" y="158.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1189.4" y="131.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="142.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1189.4" y="115.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.4" y="126.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1189.4" y="99.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.4" y="110.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.02%)</title><rect x="1189.4" y="83.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="94.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1189.4" y="67.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="78.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.02%)</title><rect x="1189.4" y="51.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="62.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.02%)</title><rect x="1189.4" y="35.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="46.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="1203.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.7" y="1214.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.02%)</title><rect x="1189.7" y="1187.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="1198.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.02%)</title><rect x="1189.7" y="1171.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.7" y="1182.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1189.7" y="1155.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.7" y="1166.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1189.7" y="1139.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.7" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1189.7" y="1123.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.7" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::pre_evacuate_collection_set() (1 samples, 0.02%)</title><rect x="1189.7" y="1107.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="1118.0"></text>
</g>
<g>
<title>G1RemSet::prepare_for_oops_into_collection_set_do() (1 samples, 0.02%)</title><rect x="1189.7" y="1091.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.7" y="1102.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::concatenate_logs() (1 samples, 0.02%)</title><rect x="1189.7" y="1075.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.7" y="1086.0"></text>
</g>
<g>
<title>PtrQueue::flush_impl() (1 samples, 0.02%)</title><rect x="1189.7" y="1059.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.7" y="1070.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="1189.7" y="1043.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.7" y="1054.0"></text>
</g>
</g>
</svg>
