<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="837"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="837"> </text>
<g id="frames">
<g>
<title>all (953 samples, 100.00%)</title><rect x="10.0" y="803.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="814.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 1.89%)</title><rect x="10.0" y="787.0" width="22.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="798.0">S..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (18 samples, 1.89%)</title><rect x="10.0" y="771.0" width="22.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="782.0">O..</text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.21%)</title><rect x="10.0" y="755.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (16 samples, 1.68%)</title><rect x="12.5" y="755.0" width="19.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.5" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.10%)</title><rect x="13.7" y="739.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.7" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (14 samples, 1.47%)</title><rect x="15.0" y="739.0" width="17.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="18.0" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.10%)</title><rect x="19.9" y="723.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="22.9" y="734.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.31%)</title><rect x="21.1" y="723.0" width="3.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="24.1" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.21%)</title><rect x="24.9" y="723.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="27.9" y="734.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.21%)</title><rect x="27.3" y="723.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.3" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.21%)</title><rect x="29.8" y="723.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="32.8" y="734.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.21%)</title><rect x="32.3" y="787.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="35.3" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.21%)</title><rect x="32.3" y="771.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="35.3" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.21%)</title><rect x="32.3" y="755.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="35.3" y="766.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.21%)</title><rect x="32.3" y="739.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="35.3" y="750.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.10%)</title><rect x="32.3" y="723.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="35.3" y="734.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="33.5" y="723.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="36.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.42%)</title><rect x="34.8" y="787.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="37.8" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.21%)</title><rect x="34.8" y="771.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="37.8" y="782.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (2 samples, 0.21%)</title><rect x="37.2" y="771.0" width="2.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="40.2" y="782.0"></text>
</g>
<g>
<title>[unknown_Java] (8 samples, 0.84%)</title><rect x="39.7" y="787.0" width="9.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="42.7" y="798.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.10%)</title><rect x="39.7" y="771.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="42.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.42%)</title><rect x="41.0" y="771.0" width="4.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="44.0" y="782.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.10%)</title><rect x="45.9" y="771.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="48.9" y="782.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.10%)</title><rect x="45.9" y="755.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="48.9" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.10%)</title><rect x="45.9" y="739.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="48.9" y="750.0"></text>
</g>
<g>
<title>sha256_implCompress (2 samples, 0.21%)</title><rect x="47.1" y="771.0" width="2.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="50.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (700 samples, 73.45%)</title><rect x="49.6" y="787.0" width="866.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.6" y="798.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (700 samples, 73.45%)</title><rect x="49.6" y="771.0" width="866.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.6" y="782.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (700 samples, 73.45%)</title><rect x="49.6" y="755.0" width="866.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.6" y="766.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (155 samples, 16.26%)</title><rect x="49.6" y="739.0" width="191.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.6" y="750.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (124 samples, 13.01%)</title><rect x="49.6" y="723.0" width="153.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.6" y="734.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (98 samples, 10.28%)</title><rect x="53.3" y="707.0" width="121.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.3" y="718.0">java/util/concu..</text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="53.3" y="691.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="56.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$200/1728467356.apply (97 samples, 10.18%)</title><rect x="54.6" y="691.0" width="120.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.6" y="702.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (97 samples, 10.18%)</title><rect x="54.6" y="675.0" width="120.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.6" y="686.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (97 samples, 10.18%)</title><rect x="54.6" y="659.0" width="120.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.6" y="670.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (85 samples, 8.92%)</title><rect x="54.6" y="643.0" width="105.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.6" y="654.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (85 samples, 8.92%)</title><rect x="54.6" y="627.0" width="105.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.6" y="638.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (85 samples, 8.92%)</title><rect x="54.6" y="611.0" width="105.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.6" y="622.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (49 samples, 5.14%)</title><rect x="55.8" y="595.0" width="60.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.8" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (49 samples, 5.14%)</title><rect x="55.8" y="579.0" width="60.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.8" y="590.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (49 samples, 5.14%)</title><rect x="55.8" y="563.0" width="60.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.8" y="574.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$334/1197842853.apply (49 samples, 5.14%)</title><rect x="55.8" y="547.0" width="60.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.8" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (49 samples, 5.14%)</title><rect x="55.8" y="531.0" width="60.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.8" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (49 samples, 5.14%)</title><rect x="55.8" y="515.0" width="60.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.8" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$230/101889293.apply (49 samples, 5.14%)</title><rect x="55.8" y="499.0" width="60.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.8" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (49 samples, 5.14%)</title><rect x="55.8" y="483.0" width="60.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.8" y="494.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (48 samples, 5.04%)</title><rect x="57.1" y="467.0" width="59.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="478.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (41 samples, 4.30%)</title><rect x="58.3" y="451.0" width="50.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.3" y="462.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (41 samples, 4.30%)</title><rect x="58.3" y="435.0" width="50.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.3" y="446.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.10%)</title><rect x="58.3" y="419.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$380/136395083.apply (40 samples, 4.20%)</title><rect x="59.5" y="419.0" width="49.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.5" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (40 samples, 4.20%)</title><rect x="59.5" y="403.0" width="49.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.5" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.21%)</title><rect x="60.8" y="387.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.21%)</title><rect x="60.8" y="371.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.21%)</title><rect x="60.8" y="355.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.10%)</title><rect x="63.2" y="387.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.10%)</title><rect x="63.2" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.10%)</title><rect x="63.2" y="355.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.10%)</title><rect x="63.2" y="339.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.10%)</title><rect x="63.2" y="323.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.10%)</title><rect x="63.2" y="307.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.10%)</title><rect x="63.2" y="291.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.10%)</title><rect x="63.2" y="275.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.10%)</title><rect x="63.2" y="259.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.10%)</title><rect x="63.2" y="243.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.10%)</title><rect x="63.2" y="227.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (15 samples, 1.57%)</title><rect x="64.5" y="387.0" width="18.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (15 samples, 1.57%)</title><rect x="64.5" y="371.0" width="18.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5 samples, 0.52%)</title><rect x="64.5" y="355.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.52%)</title><rect x="64.5" y="339.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.52%)</title><rect x="64.5" y="323.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.52%)</title><rect x="64.5" y="307.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.52%)</title><rect x="64.5" y="291.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.42%)</title><rect x="65.7" y="275.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.7" y="286.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.10%)</title><rect x="69.4" y="259.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="72.4" y="270.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.10%)</title><rect x="69.4" y="243.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="72.4" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.10%)</title><rect x="69.4" y="227.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="72.4" y="238.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.10%)</title><rect x="69.4" y="211.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="72.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (10 samples, 1.05%)</title><rect x="70.7" y="355.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (10 samples, 1.05%)</title><rect x="70.7" y="339.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (10 samples, 1.05%)</title><rect x="70.7" y="323.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9 samples, 0.94%)</title><rect x="70.7" y="307.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9 samples, 0.94%)</title><rect x="70.7" y="291.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.7" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.21%)</title><rect x="71.9" y="275.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="74.9" y="286.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.21%)</title><rect x="71.9" y="259.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="74.9" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.10%)</title><rect x="71.9" y="243.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="74.9" y="254.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.10%)</title><rect x="71.9" y="227.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="74.9" y="238.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.10%)</title><rect x="73.1" y="243.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="76.1" y="254.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.10%)</title><rect x="73.1" y="227.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="76.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.63%)</title><rect x="74.4" y="275.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.10%)</title><rect x="80.6" y="259.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.6" y="270.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.10%)</title><rect x="80.6" y="243.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="83.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.10%)</title><rect x="81.8" y="307.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (21 samples, 2.20%)</title><rect x="83.1" y="387.0" width="26.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.1" y="398.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.10%)</title><rect x="83.1" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.10%)</title><rect x="83.1" y="355.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1 samples, 0.10%)</title><rect x="83.1" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (17 samples, 1.78%)</title><rect x="84.3" y="371.0" width="21.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.3" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (1 samples, 0.10%)</title><rect x="84.3" y="355.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.3" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.10%)</title><rect x="84.3" y="339.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.3" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.10%)</title><rect x="84.3" y="323.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.3" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.10%)</title><rect x="84.3" y="307.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.10%)</title><rect x="84.3" y="291.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.10%)</title><rect x="84.3" y="275.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (9 samples, 0.94%)</title><rect x="85.5" y="355.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.5" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.10%)</title><rect x="91.7" y="339.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.7" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.10%)</title><rect x="91.7" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.10%)</title><rect x="91.7" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.10%)</title><rect x="91.7" y="291.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.7" y="302.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$403/621187221.test (2 samples, 0.21%)</title><rect x="93.0" y="339.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.0" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2 samples, 0.21%)</title><rect x="93.0" y="323.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/1687662712.test (1 samples, 0.10%)</title><rect x="94.2" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.10%)</title><rect x="94.2" y="291.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.2" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$72/1778081847.test (1 samples, 0.10%)</title><rect x="94.2" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.2" y="286.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.10%)</title><rect x="94.2" y="259.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$71/231786897.test (1 samples, 0.10%)</title><rect x="94.2" y="243.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.10%)</title><rect x="94.2" y="227.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.10%)</title><rect x="94.2" y="211.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.10%)</title><rect x="94.2" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.10%)</title><rect x="94.2" y="179.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.2" y="190.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="95.4" y="339.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="98.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (7 samples, 0.73%)</title><rect x="96.7" y="355.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.73%)</title><rect x="96.7" y="339.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.7" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.73%)</title><rect x="96.7" y="323.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (7 samples, 0.73%)</title><rect x="96.7" y="307.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.7" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (7 samples, 0.73%)</title><rect x="96.7" y="291.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.7" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.73%)</title><rect x="96.7" y="275.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.42%)</title><rect x="100.4" y="259.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.10%)</title><rect x="100.4" y="243.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.10%)</title><rect x="100.4" y="227.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.10%)</title><rect x="100.4" y="211.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.4" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.31%)</title><rect x="101.6" y="243.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.31%)</title><rect x="105.3" y="371.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.21%)</title><rect x="106.6" y="355.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.21%)</title><rect x="106.6" y="339.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.6" y="350.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.21%)</title><rect x="106.6" y="323.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.21%)</title><rect x="106.6" y="307.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (5 samples, 0.52%)</title><rect x="109.1" y="451.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.52%)</title><rect x="109.1" y="435.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.21%)</title><rect x="109.1" y="419.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.21%)</title><rect x="109.1" y="403.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.31%)</title><rect x="111.5" y="419.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.31%)</title><rect x="111.5" y="403.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.31%)</title><rect x="111.5" y="387.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.31%)</title><rect x="111.5" y="371.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.10%)</title><rect x="111.5" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.10%)</title><rect x="111.5" y="339.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.21%)</title><rect x="112.8" y="355.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (2 samples, 0.21%)</title><rect x="112.8" y="339.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.21%)</title><rect x="112.8" y="323.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.10%)</title><rect x="112.8" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.10%)</title><rect x="112.8" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.10%)</title><rect x="112.8" y="275.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.10%)</title><rect x="114.0" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.10%)</title><rect x="114.0" y="291.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.10%)</title><rect x="114.0" y="275.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.10%)</title><rect x="115.2" y="451.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (35 samples, 3.67%)</title><rect x="116.5" y="595.0" width="43.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.5" y="606.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.31%)</title><rect x="117.7" y="579.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.31%)</title><rect x="117.7" y="563.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.31%)</title><rect x="117.7" y="547.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$331/981882798.apply (2 samples, 0.21%)</title><rect x="119.0" y="531.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.10%)</title><rect x="121.4" y="579.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.10%)</title><rect x="121.4" y="563.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.10%)</title><rect x="121.4" y="547.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.4" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="121.4" y="531.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="124.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (30 samples, 3.15%)</title><rect x="122.7" y="579.0" width="37.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.7" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (30 samples, 3.15%)</title><rect x="122.7" y="563.0" width="37.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.7" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (29 samples, 3.04%)</title><rect x="122.7" y="547.0" width="35.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.7" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1 samples, 0.10%)</title><rect x="123.9" y="531.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.10%)</title><rect x="123.9" y="515.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.21%)</title><rect x="125.2" y="531.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.21%)</title><rect x="125.2" y="515.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.21%)</title><rect x="125.2" y="499.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.21%)</title><rect x="125.2" y="483.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.21%)</title><rect x="125.2" y="467.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.21%)</title><rect x="125.2" y="451.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.2" y="462.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (2 samples, 0.21%)</title><rect x="125.2" y="435.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (9 samples, 0.94%)</title><rect x="127.6" y="531.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (8 samples, 0.84%)</title><rect x="127.6" y="515.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.6" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.10%)</title><rect x="127.6" y="499.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="130.6" y="510.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.10%)</title><rect x="127.6" y="483.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="130.6" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.10%)</title><rect x="127.6" y="467.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="130.6" y="478.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.10%)</title><rect x="127.6" y="451.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="130.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (7 samples, 0.73%)</title><rect x="128.9" y="499.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.9" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.21%)</title><rect x="128.9" y="483.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.10%)</title><rect x="128.9" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.10%)</title><rect x="128.9" y="451.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.9" y="462.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.10%)</title><rect x="128.9" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.9" y="446.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.10%)</title><rect x="128.9" y="419.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.9" y="430.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.10%)</title><rect x="128.9" y="403.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.9" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.10%)</title><rect x="130.1" y="467.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.10%)</title><rect x="130.1" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.1" y="462.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.10%)</title><rect x="130.1" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.10%)</title><rect x="130.1" y="419.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.10%)</title><rect x="130.1" y="403.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (5 samples, 0.52%)</title><rect x="131.3" y="483.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.10%)</title><rect x="137.5" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (16 samples, 1.68%)</title><rect x="138.8" y="531.0" width="19.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.8" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 1.57%)</title><rect x="140.0" y="515.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.0" y="526.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (10 samples, 1.05%)</title><rect x="141.2" y="499.0" width="12.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="144.2" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.10%)</title><rect x="142.5" y="483.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="145.5" y="494.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.21%)</title><rect x="143.7" y="483.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="146.7" y="494.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.10%)</title><rect x="143.7" y="467.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="146.7" y="478.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.10%)</title><rect x="145.0" y="467.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="148.0" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.10%)</title><rect x="146.2" y="483.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="149.2" y="494.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.10%)</title><rect x="147.4" y="483.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="150.4" y="494.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.21%)</title><rect x="148.7" y="483.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="151.7" y="494.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.21%)</title><rect x="148.7" y="467.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="151.7" y="478.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.21%)</title><rect x="148.7" y="451.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="151.7" y="462.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.21%)</title><rect x="151.2" y="483.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="154.2" y="494.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.10%)</title><rect x="152.4" y="467.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="155.4" y="478.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.10%)</title><rect x="152.4" y="451.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="155.4" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.10%)</title><rect x="153.6" y="499.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="156.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$248/502041341.run (3 samples, 0.31%)</title><rect x="154.9" y="499.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2 samples, 0.21%)</title><rect x="156.1" y="483.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.1" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2 samples, 0.21%)</title><rect x="156.1" y="467.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.1" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.21%)</title><rect x="156.1" y="451.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.1" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.21%)</title><rect x="156.1" y="435.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.1" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.21%)</title><rect x="156.1" y="419.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.1" y="430.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.10%)</title><rect x="157.3" y="403.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.10%)</title><rect x="157.3" y="387.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.10%)</title><rect x="157.3" y="371.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="157.3" y="355.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.10%)</title><rect x="157.3" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.10%)</title><rect x="157.3" y="323.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.10%)</title><rect x="158.6" y="547.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.10%)</title><rect x="158.6" y="531.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.10%)</title><rect x="158.6" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (8 samples, 0.84%)</title><rect x="159.8" y="643.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.8" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.10%)</title><rect x="159.8" y="627.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="162.8" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.10%)</title><rect x="159.8" y="611.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="162.8" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.10%)</title><rect x="159.8" y="595.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="162.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (4 samples, 0.42%)</title><rect x="161.1" y="627.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.21%)</title><rect x="163.5" y="611.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.21%)</title><rect x="163.5" y="595.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (3 samples, 0.31%)</title><rect x="166.0" y="627.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.31%)</title><rect x="166.0" y="611.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.21%)</title><rect x="167.3" y="595.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.3" y="606.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.21%)</title><rect x="167.3" y="579.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="170.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (3 samples, 0.31%)</title><rect x="169.7" y="643.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (2 samples, 0.21%)</title><rect x="171.0" y="627.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.21%)</title><rect x="171.0" y="611.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.0" y="622.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.21%)</title><rect x="171.0" y="595.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.0" y="606.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.21%)</title><rect x="171.0" y="579.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1 samples, 0.10%)</title><rect x="173.4" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1 samples, 0.10%)</title><rect x="173.4" y="627.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (1 samples, 0.10%)</title><rect x="173.4" y="611.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.4" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.10%)</title><rect x="173.4" y="595.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.4" y="606.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.10%)</title><rect x="173.4" y="579.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.10%)</title><rect x="173.4" y="563.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.4" y="574.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.10%)</title><rect x="173.4" y="547.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="176.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (22 samples, 2.31%)</title><rect x="174.7" y="707.0" width="27.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.7" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (20 samples, 2.10%)</title><rect x="177.2" y="691.0" width="24.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.2" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.10%)</title><rect x="177.2" y="675.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.accept (1 samples, 0.10%)</title><rect x="177.2" y="659.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils$$Lambda$448/590182500.accept (19 samples, 1.99%)</title><rect x="178.4" y="675.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="181.4" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.lambda$sendResponse$0 (19 samples, 1.99%)</title><rect x="178.4" y="659.0" width="23.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.4" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (19 samples, 1.99%)</title><rect x="178.4" y="643.0" width="23.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.4" y="654.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 1.99%)</title><rect x="178.4" y="627.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.4" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 1.78%)</title><rect x="178.4" y="611.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.4" y="622.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.31%)</title><rect x="178.4" y="595.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.21%)</title><rect x="179.6" y="579.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.21%)</title><rect x="179.6" y="563.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.21%)</title><rect x="179.6" y="547.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 1.47%)</title><rect x="182.1" y="595.0" width="17.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 1.47%)</title><rect x="182.1" y="579.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.10%)</title><rect x="182.1" y="563.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (13 samples, 1.36%)</title><rect x="183.3" y="563.0" width="16.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (13 samples, 1.36%)</title><rect x="183.3" y="547.0" width="16.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.3" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.21%)</title><rect x="187.1" y="531.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="190.1" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.21%)</title><rect x="187.1" y="515.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="190.1" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.10%)</title><rect x="188.3" y="499.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="191.3" y="510.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.10%)</title><rect x="188.3" y="483.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="191.3" y="494.0"></text>
</g>
<g>
<title>__send (8 samples, 0.84%)</title><rect x="189.5" y="531.0" width="9.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="192.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.21%)</title><rect x="199.4" y="611.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$155/2091524807.get (1 samples, 0.10%)</title><rect x="201.9" y="707.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$155/2091524807.get (31 samples, 3.25%)</title><rect x="203.2" y="723.0" width="38.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.2" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$put$12 (31 samples, 3.25%)</title><rect x="203.2" y="707.0" width="38.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.2" y="718.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (30 samples, 3.15%)</title><rect x="203.2" y="691.0" width="37.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.2" y="702.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (29 samples, 3.04%)</title><rect x="204.4" y="675.0" width="35.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.4" y="686.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.containsKey (18 samples, 1.89%)</title><rect x="204.4" y="659.0" width="22.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.4" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doGet (18 samples, 1.89%)</title><rect x="204.4" y="643.0" width="22.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.4" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.94%)</title><rect x="215.5" y="627.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.94%)</title><rect x="215.5" y="611.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.94%)</title><rect x="215.5" y="595.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.5" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.94%)</title><rect x="215.5" y="579.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (11 samples, 1.15%)</title><rect x="226.7" y="659.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.7" y="670.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.21%)</title><rect x="229.2" y="643.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="232.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (7 samples, 0.73%)</title><rect x="231.6" y="643.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.52%)</title><rect x="234.1" y="627.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.52%)</title><rect x="234.1" y="611.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.52%)</title><rect x="234.1" y="595.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.1" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.52%)</title><rect x="234.1" y="579.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (1 samples, 0.10%)</title><rect x="240.3" y="691.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.10%)</title><rect x="240.3" y="675.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.10%)</title><rect x="240.3" y="659.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.10%)</title><rect x="240.3" y="643.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.10%)</title><rect x="240.3" y="627.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.3" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.10%)</title><rect x="240.3" y="611.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="243.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (15 samples, 1.57%)</title><rect x="241.5" y="739.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.10%)</title><rect x="241.5" y="723.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.10%)</title><rect x="241.5" y="707.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.10%)</title><rect x="241.5" y="691.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.5" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="241.5" y="675.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="244.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (14 samples, 1.47%)</title><rect x="242.8" y="723.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.10%)</title><rect x="242.8" y="707.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.10%)</title><rect x="242.8" y="691.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13 samples, 1.36%)</title><rect x="244.0" y="707.0" width="16.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$226/1373714853.accept (13 samples, 1.36%)</title><rect x="244.0" y="691.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$mergeAndSendResponse$15 (13 samples, 1.36%)</title><rect x="244.0" y="675.0" width="16.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (6 samples, 0.63%)</title><rect x="244.0" y="659.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.63%)</title><rect x="244.0" y="643.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.42%)</title><rect x="245.3" y="627.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.10%)</title><rect x="246.5" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.10%)</title><rect x="246.5" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.10%)</title><rect x="246.5" y="579.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.10%)</title><rect x="246.5" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.21%)</title><rect x="247.7" y="611.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.21%)</title><rect x="247.7" y="595.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.21%)</title><rect x="247.7" y="579.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.21%)</title><rect x="247.7" y="563.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.7" y="574.0"></text>
</g>
<g>
<title>__send (2 samples, 0.21%)</title><rect x="247.7" y="547.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="250.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.10%)</title><rect x="250.2" y="627.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$218/1944842503.mergeResponse (7 samples, 0.73%)</title><rect x="251.4" y="659.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="254.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$11 (7 samples, 0.73%)</title><rect x="251.4" y="643.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (7 samples, 0.73%)</title><rect x="251.4" y="627.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.73%)</title><rect x="251.4" y="611.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 0.42%)</title><rect x="255.2" y="595.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.42%)</title><rect x="255.2" y="579.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.42%)</title><rect x="255.2" y="563.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.2" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (4 samples, 0.42%)</title><rect x="255.2" y="547.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.42%)</title><rect x="255.2" y="531.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (3 samples, 0.31%)</title><rect x="256.4" y="515.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$535/703303253.accept (3 samples, 0.31%)</title><rect x="256.4" y="499.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.31%)</title><rect x="256.4" y="483.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.31%)</title><rect x="256.4" y="467.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.31%)</title><rect x="256.4" y="451.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.31%)</title><rect x="256.4" y="435.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.31%)</title><rect x="256.4" y="419.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.4" y="430.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="258.9" y="403.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="261.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (8 samples, 0.84%)</title><rect x="260.1" y="739.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.84%)</title><rect x="260.1" y="723.0" width="9.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.84%)</title><rect x="260.1" y="707.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.84%)</title><rect x="260.1" y="691.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.1" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="262.6" y="675.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="265.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.10%)</title><rect x="263.8" y="675.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$407/438359882.run (1 samples, 0.10%)</title><rect x="265.1" y="675.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.21%)</title><rect x="266.3" y="675.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.run (1 samples, 0.10%)</title><rect x="268.8" y="675.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (247 samples, 25.92%)</title><rect x="270.0" y="739.0" width="305.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.0" y="750.0">java/util/concurrent/ThreadPoolExecutor.g..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (120 samples, 12.59%)</title><rect x="272.5" y="723.0" width="148.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.5" y="734.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (105 samples, 11.02%)</title><rect x="277.5" y="707.0" width="130.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.5" y="718.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.10%)</title><rect x="279.9" y="691.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.9" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.10%)</title><rect x="279.9" y="675.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="282.9" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.10%)</title><rect x="279.9" y="659.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="282.9" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.10%)</title><rect x="279.9" y="643.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="282.9" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.10%)</title><rect x="279.9" y="627.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="282.9" y="638.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.10%)</title><rect x="279.9" y="611.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="282.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (17 samples, 1.78%)</title><rect x="281.2" y="691.0" width="21.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.2" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 1.78%)</title><rect x="281.2" y="675.0" width="21.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.2" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 1.47%)</title><rect x="284.9" y="659.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 1.47%)</title><rect x="284.9" y="643.0" width="17.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 1.47%)</title><rect x="284.9" y="627.0" width="17.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.9" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.10%)</title><rect x="284.9" y="611.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="287.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.84%)</title><rect x="286.1" y="611.0" width="9.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="289.1" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.10%)</title><rect x="286.1" y="595.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="289.1" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.42%)</title><rect x="287.4" y="595.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="290.4" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.10%)</title><rect x="292.3" y="595.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="295.3" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.10%)</title><rect x="293.5" y="595.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="296.5" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.10%)</title><rect x="294.8" y="595.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="297.8" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.52%)</title><rect x="296.0" y="611.0" width="6.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="299.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (85 samples, 8.92%)</title><rect x="302.2" y="691.0" width="105.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.2" y="702.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.21%)</title><rect x="304.7" y="675.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (81 samples, 8.50%)</title><rect x="307.2" y="675.0" width="100.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.2" y="686.0">jdk/internal..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.10%)</title><rect x="312.1" y="659.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="315.1" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.10%)</title><rect x="313.4" y="659.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="316.4" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (47 samples, 4.93%)</title><rect x="314.6" y="659.0" width="58.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="317.6" y="670.0">Unsafe..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.10%)</title><rect x="317.1" y="643.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="320.1" y="654.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.31%)</title><rect x="318.3" y="643.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="321.3" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.10%)</title><rect x="320.8" y="627.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="323.8" y="638.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.10%)</title><rect x="322.0" y="643.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="325.0" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 1.57%)</title><rect x="323.3" y="643.0" width="18.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="326.3" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.63%)</title><rect x="333.2" y="627.0" width="7.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="336.2" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.21%)</title><rect x="338.1" y="611.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="341.1" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.10%)</title><rect x="340.6" y="627.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="343.6" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.21%)</title><rect x="341.8" y="643.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="344.8" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.10%)</title><rect x="344.3" y="643.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="347.3" y="654.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.21%)</title><rect x="345.6" y="643.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="348.6" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.10%)</title><rect x="348.0" y="643.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="351.0" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (17 samples, 1.78%)</title><rect x="349.3" y="643.0" width="21.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="352.3" y="654.0">_..</text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.21%)</title><rect x="370.3" y="643.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="373.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 2.94%)</title><rect x="372.8" y="659.0" width="34.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="375.8" y="670.0">[u..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (5 samples, 0.52%)</title><rect x="372.8" y="643.0" width="6.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="375.8" y="654.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.10%)</title><rect x="379.0" y="643.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="382.0" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (14 samples, 1.47%)</title><rect x="380.2" y="643.0" width="17.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="383.2" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.52%)</title><rect x="397.6" y="643.0" width="6.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="400.6" y="654.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.21%)</title><rect x="403.7" y="643.0" width="2.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="406.7" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.10%)</title><rect x="406.2" y="643.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="409.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.21%)</title><rect x="407.5" y="707.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.21%)</title><rect x="407.5" y="691.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.21%)</title><rect x="407.5" y="675.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="410.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.21%)</title><rect x="407.5" y="659.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.21%)</title><rect x="407.5" y="643.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.21%)</title><rect x="407.5" y="627.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.5" y="638.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.10%)</title><rect x="407.5" y="611.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="410.5" y="622.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.10%)</title><rect x="407.5" y="595.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="410.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="408.7" y="611.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="411.7" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.10%)</title><rect x="408.7" y="595.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="411.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.94%)</title><rect x="409.9" y="707.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.94%)</title><rect x="409.9" y="691.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.94%)</title><rect x="409.9" y="675.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.94%)</title><rect x="409.9" y="659.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.73%)</title><rect x="412.4" y="643.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.4" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.52%)</title><rect x="412.4" y="627.0" width="6.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="415.4" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.10%)</title><rect x="412.4" y="611.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="415.4" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.21%)</title><rect x="413.7" y="611.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="416.7" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.10%)</title><rect x="416.1" y="611.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="419.1" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.10%)</title><rect x="417.4" y="611.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="420.4" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.21%)</title><rect x="418.6" y="627.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="421.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (125 samples, 13.12%)</title><rect x="421.1" y="723.0" width="154.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.1" y="734.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (97 samples, 10.18%)</title><rect x="426.0" y="707.0" width="120.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.0" y="718.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.10%)</title><rect x="428.5" y="691.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.10%)</title><rect x="428.5" y="675.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.10%)</title><rect x="428.5" y="659.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="431.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (21 samples, 2.20%)</title><rect x="429.7" y="691.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.7" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 2.20%)</title><rect x="429.7" y="675.0" width="26.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.7" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 1.57%)</title><rect x="434.7" y="659.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 1.57%)</title><rect x="434.7" y="643.0" width="18.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="437.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.10%)</title><rect x="434.7" y="627.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 1.47%)</title><rect x="435.9" y="627.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.9" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.94%)</title><rect x="435.9" y="611.0" width="11.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="438.9" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.10%)</title><rect x="435.9" y="595.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="438.9" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.21%)</title><rect x="437.2" y="595.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="440.2" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.10%)</title><rect x="439.7" y="595.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="442.7" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.10%)</title><rect x="440.9" y="595.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="443.9" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.10%)</title><rect x="442.1" y="595.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="445.1" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.31%)</title><rect x="443.4" y="595.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="446.4" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.52%)</title><rect x="447.1" y="611.0" width="6.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="450.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.21%)</title><rect x="453.3" y="659.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (73 samples, 7.66%)</title><rect x="455.8" y="691.0" width="90.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.8" y="702.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (71 samples, 7.45%)</title><rect x="457.0" y="675.0" width="87.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.0" y="686.0">jdk/intern..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.10%)</title><rect x="458.2" y="659.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="461.2" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.10%)</title><rect x="459.5" y="659.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="462.5" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (45 samples, 4.72%)</title><rect x="460.7" y="659.0" width="55.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="463.7" y="670.0">Unsaf..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.21%)</title><rect x="463.2" y="643.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="466.2" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 1.36%)</title><rect x="465.7" y="643.0" width="16.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="468.7" y="654.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.10%)</title><rect x="468.1" y="627.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="471.1" y="638.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.52%)</title><rect x="469.4" y="627.0" width="6.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="472.4" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.21%)</title><rect x="473.1" y="611.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="476.1" y="622.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.10%)</title><rect x="475.6" y="627.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="478.6" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.42%)</title><rect x="476.8" y="627.0" width="5.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="479.8" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.10%)</title><rect x="481.8" y="643.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="484.8" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.10%)</title><rect x="483.0" y="643.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="486.0" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (24 samples, 2.52%)</title><rect x="484.2" y="643.0" width="29.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="487.2" y="654.0">__..</text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.10%)</title><rect x="513.9" y="643.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="516.9" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.10%)</title><rect x="515.2" y="643.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="518.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 2.41%)</title><rect x="516.4" y="659.0" width="28.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="519.4" y="670.0">[u..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.10%)</title><rect x="516.4" y="643.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="519.4" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (16 samples, 1.68%)</title><rect x="517.7" y="643.0" width="19.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="520.7" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.42%)</title><rect x="537.5" y="643.0" width="4.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="540.5" y="654.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.10%)</title><rect x="542.4" y="643.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="545.4" y="654.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.10%)</title><rect x="543.7" y="643.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="546.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.10%)</title><rect x="544.9" y="675.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.52%)</title><rect x="546.1" y="707.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.52%)</title><rect x="546.1" y="691.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.52%)</title><rect x="546.1" y="675.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.52%)</title><rect x="546.1" y="659.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.52%)</title><rect x="546.1" y="643.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.31%)</title><rect x="548.6" y="627.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.6" y="638.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.10%)</title><rect x="548.6" y="611.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="551.6" y="622.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.10%)</title><rect x="548.6" y="595.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="551.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.21%)</title><rect x="549.9" y="611.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="552.9" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.10%)</title><rect x="549.9" y="595.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="552.9" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.10%)</title><rect x="551.1" y="595.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="554.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 1.99%)</title><rect x="552.3" y="707.0" width="23.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.3" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 1.99%)</title><rect x="552.3" y="691.0" width="23.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.3" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 1.99%)</title><rect x="552.3" y="675.0" width="23.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.3" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 1.99%)</title><rect x="552.3" y="659.0" width="23.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.3" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 1.78%)</title><rect x="554.8" y="643.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.8" y="654.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.10%)</title><rect x="554.8" y="627.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="557.8" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 1.15%)</title><rect x="556.0" y="627.0" width="13.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="559.0" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.10%)</title><rect x="558.5" y="611.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="561.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.10%)</title><rect x="559.8" y="611.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="562.8" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.21%)</title><rect x="561.0" y="611.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="564.0" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.31%)</title><rect x="563.5" y="611.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="566.5" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.10%)</title><rect x="567.2" y="611.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="570.2" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.10%)</title><rect x="568.4" y="611.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="571.4" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.52%)</title><rect x="569.7" y="627.0" width="6.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="572.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$407/438359882.run (42 samples, 4.41%)</title><rect x="575.9" y="739.0" width="52.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.9" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (42 samples, 4.41%)</title><rect x="575.9" y="723.0" width="52.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.9" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (42 samples, 4.41%)</title><rect x="575.9" y="707.0" width="52.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.9" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (39 samples, 4.09%)</title><rect x="579.6" y="691.0" width="48.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.6" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 4.09%)</title><rect x="579.6" y="675.0" width="48.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.6" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 4.09%)</title><rect x="579.6" y="659.0" width="48.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.6" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (35 samples, 3.67%)</title><rect x="582.0" y="643.0" width="43.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.0" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (35 samples, 3.67%)</title><rect x="582.0" y="627.0" width="43.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.0" y="638.0">jdk/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="582.0" y="611.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="585.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (34 samples, 3.57%)</title><rect x="583.3" y="611.0" width="42.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.3" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (34 samples, 3.57%)</title><rect x="583.3" y="595.0" width="42.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.3" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (34 samples, 3.57%)</title><rect x="583.3" y="579.0" width="42.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.3" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (22 samples, 2.31%)</title><rect x="583.3" y="563.0" width="27.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.3" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (18 samples, 1.89%)</title><rect x="583.3" y="547.0" width="22.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.3" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 1.89%)</title><rect x="583.3" y="531.0" width="22.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.3" y="542.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="583.3" y="515.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="586.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (17 samples, 1.78%)</title><rect x="584.5" y="515.0" width="21.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.5" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 1.68%)</title><rect x="585.8" y="499.0" width="19.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.8" y="510.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="585.8" y="483.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="588.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.21%)</title><rect x="587.0" y="483.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$433/725906402.apply (2 samples, 0.21%)</title><rect x="587.0" y="467.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1 samples, 0.10%)</title><rect x="588.2" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1 samples, 0.10%)</title><rect x="588.2" y="435.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.10%)</title><rect x="588.2" y="419.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.10%)</title><rect x="588.2" y="403.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.10%)</title><rect x="588.2" y="387.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (13 samples, 1.36%)</title><rect x="589.5" y="483.0" width="16.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 1.15%)</title><rect x="592.0" y="467.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.31%)</title><rect x="592.0" y="451.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.31%)</title><rect x="592.0" y="435.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.0" y="446.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.21%)</title><rect x="593.2" y="419.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="596.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$383/847257842.apply (8 samples, 0.84%)</title><rect x="595.7" y="451.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (8 samples, 0.84%)</title><rect x="595.7" y="435.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (8 samples, 0.84%)</title><rect x="595.7" y="419.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$229/148200039.apply (8 samples, 0.84%)</title><rect x="595.7" y="403.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (8 samples, 0.84%)</title><rect x="595.7" y="387.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.10%)</title><rect x="595.7" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.10%)</title><rect x="595.7" y="355.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.10%)</title><rect x="595.7" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (7 samples, 0.73%)</title><rect x="596.9" y="371.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (5 samples, 0.52%)</title><rect x="596.9" y="355.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (5 samples, 0.52%)</title><rect x="596.9" y="339.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (4 samples, 0.42%)</title><rect x="598.1" y="323.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$417/607985568.accept (1 samples, 0.10%)</title><rect x="598.1" y="307.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.10%)</title><rect x="598.1" y="291.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.10%)</title><rect x="598.1" y="275.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.10%)</title><rect x="598.1" y="259.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.10%)</title><rect x="598.1" y="243.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.10%)</title><rect x="598.1" y="227.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$426/706282661.accept (3 samples, 0.31%)</title><rect x="599.4" y="307.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (3 samples, 0.31%)</title><rect x="599.4" y="291.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (3 samples, 0.31%)</title><rect x="599.4" y="275.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (3 samples, 0.31%)</title><rect x="599.4" y="259.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (3 samples, 0.31%)</title><rect x="599.4" y="243.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.31%)</title><rect x="599.4" y="227.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.31%)</title><rect x="599.4" y="211.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.31%)</title><rect x="599.4" y="195.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.31%)</title><rect x="599.4" y="179.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.31%)</title><rect x="599.4" y="163.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.21%)</title><rect x="600.6" y="147.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.21%)</title><rect x="600.6" y="131.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.21%)</title><rect x="600.6" y="115.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.21%)</title><rect x="600.6" y="99.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.21%)</title><rect x="600.6" y="83.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.21%)</title><rect x="600.6" y="67.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (2 samples, 0.21%)</title><rect x="603.1" y="355.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (2 samples, 0.21%)</title><rect x="603.1" y="339.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (2 samples, 0.21%)</title><rect x="603.1" y="323.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.31%)</title><rect x="605.6" y="547.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.31%)</title><rect x="605.6" y="531.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (2 samples, 0.21%)</title><rect x="605.6" y="515.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.10%)</title><rect x="608.0" y="515.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.10%)</title><rect x="609.3" y="547.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$438/1608475639.run (1 samples, 0.10%)</title><rect x="609.3" y="531.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.10%)</title><rect x="609.3" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.10%)</title><rect x="609.3" y="499.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.10%)</title><rect x="609.3" y="483.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.10%)</title><rect x="609.3" y="467.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.10%)</title><rect x="609.3" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (12 samples, 1.26%)</title><rect x="610.5" y="563.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (12 samples, 1.26%)</title><rect x="610.5" y="547.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (12 samples, 1.26%)</title><rect x="610.5" y="531.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (10 samples, 1.05%)</title><rect x="613.0" y="515.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$437/1879671514.run (1 samples, 0.10%)</title><rect x="613.0" y="499.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1 samples, 0.10%)</title><rect x="613.0" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.10%)</title><rect x="613.0" y="467.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (9 samples, 0.94%)</title><rect x="614.2" y="499.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.2" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (8 samples, 0.84%)</title><rect x="614.2" y="483.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (8 samples, 0.84%)</title><rect x="614.2" y="467.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (8 samples, 0.84%)</title><rect x="614.2" y="451.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="617.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title><rect x="614.2" y="435.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (7 samples, 0.73%)</title><rect x="615.5" y="435.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.5" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.21%)</title><rect x="615.5" y="419.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.5" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.21%)</title><rect x="615.5" y="403.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (2 samples, 0.21%)</title><rect x="615.5" y="387.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (5 samples, 0.52%)</title><rect x="618.0" y="419.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (5 samples, 0.52%)</title><rect x="618.0" y="403.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.0" y="414.0"></text>
</g>
<g>
<title>writev (4 samples, 0.42%)</title><rect x="619.2" y="387.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="622.2" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.10%)</title><rect x="624.1" y="483.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.21%)</title><rect x="625.4" y="643.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.21%)</title><rect x="625.4" y="627.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (142 samples, 14.90%)</title><rect x="627.9" y="739.0" width="175.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.9" y="750.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (141 samples, 14.80%)</title><rect x="629.1" y="723.0" width="174.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.1" y="734.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (89 samples, 9.34%)</title><rect x="629.1" y="707.0" width="110.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.1" y="718.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (87 samples, 9.13%)</title><rect x="631.6" y="691.0" width="107.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.6" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (87 samples, 9.13%)</title><rect x="631.6" y="675.0" width="107.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.6" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.10%)</title><rect x="631.6" y="659.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.10%)</title><rect x="631.6" y="643.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.remove (1 samples, 0.10%)</title><rect x="632.8" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (13 samples, 1.36%)</title><rect x="634.1" y="659.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (13 samples, 1.36%)</title><rect x="634.1" y="643.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (13 samples, 1.36%)</title><rect x="634.1" y="627.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (13 samples, 1.36%)</title><rect x="634.1" y="611.0" width="16.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1437941060.linkToTargetMethod (1 samples, 0.10%)</title><rect x="634.1" y="595.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/225344427.invoke (1 samples, 0.10%)</title><rect x="634.1" y="579.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/476800120.invoke (1 samples, 0.10%)</title><rect x="634.1" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title><rect x="634.1" y="547.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.10%)</title><rect x="634.1" y="531.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.10%)</title><rect x="634.1" y="515.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (12 samples, 1.26%)</title><rect x="635.3" y="595.0" width="14.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.10%)</title><rect x="635.3" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title><rect x="635.3" y="563.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$408/1005179682.get$Lambda (1 samples, 0.10%)</title><rect x="635.3" y="547.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.3" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="635.3" y="531.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="638.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (11 samples, 1.15%)</title><rect x="636.5" y="579.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (10 samples, 1.05%)</title><rect x="637.8" y="563.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (9 samples, 0.94%)</title><rect x="639.0" y="547.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.10%)</title><rect x="639.0" y="531.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 0.84%)</title><rect x="640.2" y="531.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.2" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.21%)</title><rect x="641.5" y="515.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="644.5" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.21%)</title><rect x="641.5" y="499.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="644.5" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.21%)</title><rect x="641.5" y="483.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="644.5" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.10%)</title><rect x="641.5" y="467.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="644.5" y="478.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.10%)</title><rect x="642.7" y="467.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="645.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.52%)</title><rect x="644.0" y="515.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.0" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.10%)</title><rect x="646.4" y="499.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="649.4" y="510.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.10%)</title><rect x="646.4" y="483.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="649.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.21%)</title><rect x="647.7" y="499.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.7" y="510.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.10%)</title><rect x="647.7" y="483.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="650.7" y="494.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.10%)</title><rect x="648.9" y="483.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="651.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.10%)</title><rect x="650.1" y="659.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.10%)</title><rect x="650.1" y="643.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (71 samples, 7.45%)</title><rect x="651.4" y="659.0" width="87.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.4" y="670.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (71 samples, 7.45%)</title><rect x="651.4" y="643.0" width="87.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.4" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (71 samples, 7.45%)</title><rect x="651.4" y="627.0" width="87.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.4" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (71 samples, 7.45%)</title><rect x="651.4" y="611.0" width="87.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.4" y="622.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (51 samples, 5.35%)</title><rect x="651.4" y="595.0" width="63.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.4" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 5.35%)</title><rect x="651.4" y="579.0" width="63.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.4" y="590.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (49 samples, 5.14%)</title><rect x="653.9" y="563.0" width="60.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.9" y="574.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (49 samples, 5.14%)</title><rect x="653.9" y="547.0" width="60.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.9" y="558.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 5.04%)</title><rect x="655.1" y="531.0" width="59.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.1" y="542.0">jdk/in..</text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="656.3" y="515.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="659.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (46 samples, 4.83%)</title><rect x="657.6" y="515.0" width="56.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.6" y="526.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (45 samples, 4.72%)</title><rect x="658.8" y="499.0" width="55.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.8" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (39 samples, 4.09%)</title><rect x="658.8" y="483.0" width="48.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.8" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (39 samples, 4.09%)</title><rect x="658.8" y="467.0" width="48.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.8" y="478.0">java..</text>
</g>
<g>
<title>itable stub (2 samples, 0.21%)</title><rect x="658.8" y="451.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="661.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (30 samples, 3.15%)</title><rect x="661.3" y="451.0" width="37.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.3" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.10%)</title><rect x="662.5" y="435.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.10%)</title><rect x="662.5" y="419.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$209/1479888648.apply (27 samples, 2.83%)</title><rect x="663.8" y="435.0" width="33.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.8" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (25 samples, 2.62%)</title><rect x="666.2" y="419.0" width="31.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.2" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (25 samples, 2.62%)</title><rect x="666.2" y="403.0" width="31.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.2" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (25 samples, 2.62%)</title><rect x="666.2" y="387.0" width="31.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.2" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (23 samples, 2.41%)</title><rect x="668.7" y="371.0" width="28.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.7" y="382.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (7 samples, 0.73%)</title><rect x="671.2" y="355.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.21%)</title><rect x="671.2" y="339.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.2" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.21%)</title><rect x="671.2" y="323.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.21%)</title><rect x="671.2" y="307.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.21%)</title><rect x="671.2" y="291.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="674.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.21%)</title><rect x="671.2" y="275.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.10%)</title><rect x="672.4" y="259.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.10%)</title><rect x="672.4" y="243.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.10%)</title><rect x="672.4" y="227.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.4" y="238.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.10%)</title><rect x="673.7" y="339.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.10%)</title><rect x="673.7" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.10%)</title><rect x="673.7" y="307.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (4 samples, 0.42%)</title><rect x="674.9" y="339.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.42%)</title><rect x="674.9" y="323.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.42%)</title><rect x="674.9" y="307.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.42%)</title><rect x="674.9" y="291.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.31%)</title><rect x="676.1" y="275.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.1" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.10%)</title><rect x="676.1" y="259.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.1" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (1 samples, 0.10%)</title><rect x="676.1" y="243.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.21%)</title><rect x="677.4" y="259.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.21%)</title><rect x="677.4" y="243.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.4" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.21%)</title><rect x="677.4" y="227.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (2 samples, 0.21%)</title><rect x="677.4" y="211.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$451/838032436.applyAsLong (1 samples, 0.10%)</title><rect x="678.6" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.6" y="206.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.10%)</title><rect x="678.6" y="179.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.6" y="190.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.10%)</title><rect x="678.6" y="163.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.21%)</title><rect x="679.9" y="355.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.21%)</title><rect x="679.9" y="339.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.21%)</title><rect x="679.9" y="323.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.10%)</title><rect x="679.9" y="307.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.10%)</title><rect x="681.1" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.10%)</title><rect x="681.1" y="291.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.1" y="302.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.10%)</title><rect x="681.1" y="275.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="684.1" y="286.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.10%)</title><rect x="681.1" y="259.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="684.1" y="270.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.10%)</title><rect x="681.1" y="243.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="684.1" y="254.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.10%)</title><rect x="681.1" y="227.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="684.1" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.10%)</title><rect x="681.1" y="211.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="684.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.10%)</title><rect x="682.3" y="355.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 1.15%)</title><rect x="683.6" y="355.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$465/1751998761.run (11 samples, 1.15%)</title><rect x="683.6" y="339.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (11 samples, 1.15%)</title><rect x="683.6" y="323.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.10%)</title><rect x="683.6" y="307.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.10%)</title><rect x="683.6" y="291.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.10%)</title><rect x="683.6" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.52%)</title><rect x="684.8" y="307.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="687.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.52%)</title><rect x="684.8" y="291.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.52%)</title><rect x="684.8" y="275.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (5 samples, 0.52%)</title><rect x="691.0" y="307.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.10%)</title><rect x="691.0" y="291.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (4 samples, 0.42%)</title><rect x="692.2" y="291.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.2" y="302.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (4 samples, 0.42%)</title><rect x="692.2" y="275.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.2" y="286.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (4 samples, 0.42%)</title><rect x="692.2" y="259.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.2" y="270.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (4 samples, 0.42%)</title><rect x="692.2" y="243.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.2" y="254.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.10%)</title><rect x="693.5" y="227.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="696.5" y="238.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.21%)</title><rect x="694.7" y="227.0" width="2.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="697.7" y="238.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.10%)</title><rect x="694.7" y="211.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="697.7" y="222.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.10%)</title><rect x="696.0" y="211.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="699.0" y="222.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.10%)</title><rect x="696.0" y="195.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="699.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$384/1609426679.apply (1 samples, 0.10%)</title><rect x="697.2" y="435.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.10%)</title><rect x="697.2" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.10%)</title><rect x="697.2" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.10%)</title><rect x="697.2" y="387.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.10%)</title><rect x="697.2" y="371.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5 samples, 0.52%)</title><rect x="698.4" y="451.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.42%)</title><rect x="699.7" y="435.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$385/1826212424.apply (4 samples, 0.42%)</title><rect x="699.7" y="419.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (4 samples, 0.42%)</title><rect x="699.7" y="403.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (3 samples, 0.31%)</title><rect x="699.7" y="387.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (3 samples, 0.31%)</title><rect x="699.7" y="371.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (3 samples, 0.31%)</title><rect x="699.7" y="355.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (3 samples, 0.31%)</title><rect x="699.7" y="339.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (2 samples, 0.21%)</title><rect x="699.7" y="323.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (1 samples, 0.10%)</title><rect x="700.9" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.leftOf (1 samples, 0.10%)</title><rect x="700.9" y="291.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.9" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.10%)</title><rect x="702.2" y="323.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.10%)</title><rect x="703.4" y="387.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.10%)</title><rect x="703.4" y="371.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.10%)</title><rect x="703.4" y="355.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.10%)</title><rect x="704.6" y="451.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.10%)</title><rect x="704.6" y="435.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.10%)</title><rect x="704.6" y="419.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.6" y="430.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="705.9" y="451.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="708.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$445/279938722.apply (6 samples, 0.63%)</title><rect x="707.1" y="483.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (6 samples, 0.63%)</title><rect x="707.1" y="467.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (6 samples, 0.63%)</title><rect x="707.1" y="451.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.42%)</title><rect x="707.1" y="435.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.42%)</title><rect x="707.1" y="419.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.42%)</title><rect x="707.1" y="403.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.21%)</title><rect x="712.1" y="435.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (1 samples, 0.10%)</title><rect x="713.3" y="419.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (20 samples, 2.10%)</title><rect x="714.5" y="595.0" width="24.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.5" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (2 samples, 0.21%)</title><rect x="717.0" y="579.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3 samples, 0.31%)</title><rect x="719.5" y="579.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.31%)</title><rect x="719.5" y="563.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.31%)</title><rect x="719.5" y="547.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (3 samples, 0.31%)</title><rect x="723.2" y="579.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.31%)</title><rect x="723.2" y="563.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.31%)</title><rect x="723.2" y="547.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.2" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.21%)</title><rect x="724.4" y="531.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.4" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="725.7" y="515.0" width="1.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="728.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (5 samples, 0.52%)</title><rect x="726.9" y="579.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.52%)</title><rect x="726.9" y="563.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.52%)</title><rect x="726.9" y="547.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.9" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (5 samples, 0.52%)</title><rect x="726.9" y="531.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (5 samples, 0.52%)</title><rect x="726.9" y="515.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.52%)</title><rect x="726.9" y="499.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.10%)</title><rect x="729.4" y="483.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/119290689.test (1 samples, 0.10%)</title><rect x="729.4" y="467.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.4" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.21%)</title><rect x="730.6" y="483.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.10%)</title><rect x="730.6" y="467.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.10%)</title><rect x="730.6" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.10%)</title><rect x="730.6" y="435.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.6" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.10%)</title><rect x="731.9" y="467.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="734.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (5 samples, 0.52%)</title><rect x="733.1" y="579.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (4 samples, 0.42%)</title><rect x="734.3" y="563.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.31%)</title><rect x="734.3" y="547.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.10%)</title><rect x="735.6" y="531.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.6" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="736.8" y="531.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="739.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.10%)</title><rect x="738.1" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.10%)</title><rect x="738.1" y="531.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.10%)</title><rect x="738.1" y="515.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.10%)</title><rect x="738.1" y="499.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.10%)</title><rect x="738.1" y="483.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (52 samples, 5.46%)</title><rect x="739.3" y="707.0" width="64.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.3" y="718.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (49 samples, 5.14%)</title><rect x="743.0" y="691.0" width="60.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.0" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (49 samples, 5.14%)</title><rect x="743.0" y="675.0" width="60.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.0" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$319/694205487.run (49 samples, 5.14%)</title><rect x="743.0" y="659.0" width="60.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.0" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (49 samples, 5.14%)</title><rect x="743.0" y="643.0" width="60.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.0" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (48 samples, 5.04%)</title><rect x="743.0" y="627.0" width="59.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.0" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (47 samples, 4.93%)</title><rect x="744.2" y="611.0" width="58.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.2" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (47 samples, 4.93%)</title><rect x="744.2" y="595.0" width="58.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.2" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$473/1005240389.run (26 samples, 2.73%)</title><rect x="744.2" y="579.0" width="32.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.2" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (26 samples, 2.73%)</title><rect x="744.2" y="563.0" width="32.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.2" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (26 samples, 2.73%)</title><rect x="744.2" y="547.0" width="32.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.2" y="558.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.42%)</title><rect x="744.2" y="531.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.2" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.31%)</title><rect x="744.2" y="515.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.31%)</title><rect x="744.2" y="499.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (3 samples, 0.31%)</title><rect x="744.2" y="483.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.10%)</title><rect x="748.0" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.10%)</title><rect x="748.0" y="499.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.10%)</title><rect x="748.0" y="483.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (22 samples, 2.31%)</title><rect x="749.2" y="531.0" width="27.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.2" y="542.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.10%)</title><rect x="749.2" y="515.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.2" y="526.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.10%)</title><rect x="749.2" y="499.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.10%)</title><rect x="749.2" y="483.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.2" y="494.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.10%)</title><rect x="749.2" y="467.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="752.2" y="478.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.10%)</title><rect x="749.2" y="451.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="752.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (21 samples, 2.20%)</title><rect x="750.4" y="515.0" width="26.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.4" y="526.0">j..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.21%)</title><rect x="751.7" y="499.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="754.7" y="510.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.10%)</title><rect x="752.9" y="483.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="755.9" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.10%)</title><rect x="752.9" y="467.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="755.9" y="478.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.10%)</title><rect x="752.9" y="451.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="755.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (6 samples, 0.63%)</title><rect x="754.2" y="499.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.10%)</title><rect x="760.3" y="483.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.21%)</title><rect x="761.6" y="499.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.21%)</title><rect x="761.6" y="483.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.21%)</title><rect x="761.6" y="467.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.21%)</title><rect x="761.6" y="451.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="764.6" y="462.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.21%)</title><rect x="761.6" y="435.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.21%)</title><rect x="761.6" y="419.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.6" y="430.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.10%)</title><rect x="762.8" y="403.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.8" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (1 samples, 0.10%)</title><rect x="762.8" y="387.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.8" y="398.0"></text>
</g>
<g>
<title>java/net/Inet4Address.hashCode (1 samples, 0.10%)</title><rect x="762.8" y="371.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (9 samples, 0.94%)</title><rect x="764.1" y="499.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (8 samples, 0.84%)</title><rect x="765.3" y="483.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (3 samples, 0.31%)</title><rect x="765.3" y="467.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.31%)</title><rect x="765.3" y="451.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.31%)</title><rect x="765.3" y="435.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.21%)</title><rect x="765.3" y="419.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.21%)</title><rect x="765.3" y="403.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.3" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.21%)</title><rect x="765.3" y="387.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="768.3" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.21%)</title><rect x="765.3" y="371.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="768.3" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.21%)</title><rect x="765.3" y="355.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="768.3" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.21%)</title><rect x="765.3" y="339.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="768.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.10%)</title><rect x="767.8" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (5 samples, 0.52%)</title><rect x="769.0" y="467.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (5 samples, 0.52%)</title><rect x="769.0" y="451.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5 samples, 0.52%)</title><rect x="769.0" y="435.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.42%)</title><rect x="769.0" y="419.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.42%)</title><rect x="769.0" y="403.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.0" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.10%)</title><rect x="770.3" y="387.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="773.3" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.10%)</title><rect x="770.3" y="371.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="773.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.21%)</title><rect x="771.5" y="387.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.21%)</title><rect x="771.5" y="371.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.5" y="382.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.21%)</title><rect x="771.5" y="355.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="774.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.10%)</title><rect x="774.0" y="419.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.10%)</title><rect x="775.2" y="499.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$481/548427899.accept (5 samples, 0.52%)</title><rect x="776.4" y="579.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (5 samples, 0.52%)</title><rect x="776.4" y="563.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (5 samples, 0.52%)</title><rect x="776.4" y="547.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.52%)</title><rect x="776.4" y="531.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.52%)</title><rect x="776.4" y="515.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.31%)</title><rect x="778.9" y="499.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.31%)</title><rect x="778.9" y="483.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.21%)</title><rect x="778.9" y="467.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.10%)</title><rect x="780.2" y="451.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$495/1406044820.accept (1 samples, 0.10%)</title><rect x="781.4" y="467.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (1 samples, 0.10%)</title><rect x="781.4" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (1 samples, 0.10%)</title><rect x="781.4" y="435.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.4" y="446.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.10%)</title><rect x="781.4" y="419.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (16 samples, 1.68%)</title><rect x="782.6" y="579.0" width="19.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (16 samples, 1.68%)</title><rect x="782.6" y="563.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (16 samples, 1.68%)</title><rect x="782.6" y="547.0" width="19.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (16 samples, 1.68%)</title><rect x="782.6" y="531.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 1.68%)</title><rect x="782.6" y="515.0" width="19.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (16 samples, 1.68%)</title><rect x="782.6" y="499.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (16 samples, 1.68%)</title><rect x="782.6" y="483.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.21%)</title><rect x="782.6" y="467.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.6" y="478.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="782.6" y="451.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="785.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$501/514946210.accept (1 samples, 0.10%)</title><rect x="783.9" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$501/514946210.accept (14 samples, 1.47%)</title><rect x="785.1" y="467.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (14 samples, 1.47%)</title><rect x="785.1" y="451.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (14 samples, 1.47%)</title><rect x="785.1" y="435.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 1.47%)</title><rect x="785.1" y="419.0" width="17.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13 samples, 1.36%)</title><rect x="785.1" y="403.0" width="16.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.10%)</title><rect x="785.1" y="387.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.10%)</title><rect x="785.1" y="371.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.10%)</title><rect x="785.1" y="355.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 1.26%)</title><rect x="786.3" y="387.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 1.15%)</title><rect x="786.3" y="371.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (11 samples, 1.15%)</title><rect x="786.3" y="355.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (11 samples, 1.15%)</title><rect x="786.3" y="339.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (11 samples, 1.15%)</title><rect x="786.3" y="323.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (2 samples, 0.21%)</title><rect x="786.3" y="307.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.94%)</title><rect x="788.8" y="307.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.94%)</title><rect x="788.8" y="291.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.94%)</title><rect x="788.8" y="275.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.8" y="286.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.31%)</title><rect x="788.8" y="259.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="791.8" y="270.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.21%)</title><rect x="790.1" y="243.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="793.1" y="254.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.63%)</title><rect x="792.5" y="259.0" width="7.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="795.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$215/706182509.accept (1 samples, 0.10%)</title><rect x="800.0" y="371.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="803.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.10%)</title><rect x="800.0" y="355.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.10%)</title><rect x="800.0" y="339.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.10%)</title><rect x="800.0" y="323.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.0" y="334.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="801.2" y="403.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="804.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.10%)</title><rect x="802.4" y="627.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.10%)</title><rect x="802.4" y="611.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.run (77 samples, 8.08%)</title><rect x="803.7" y="739.0" width="95.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.7" y="750.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (77 samples, 8.08%)</title><rect x="803.7" y="723.0" width="95.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.7" y="734.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.21%)</title><rect x="803.7" y="707.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (7 samples, 0.73%)</title><rect x="806.2" y="707.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (7 samples, 0.73%)</title><rect x="806.2" y="691.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (7 samples, 0.73%)</title><rect x="806.2" y="675.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (7 samples, 0.73%)</title><rect x="806.2" y="659.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (7 samples, 0.73%)</title><rect x="806.2" y="643.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.73%)</title><rect x="806.2" y="627.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.73%)</title><rect x="806.2" y="611.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.10%)</title><rect x="807.4" y="595.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.10%)</title><rect x="807.4" y="579.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.10%)</title><rect x="807.4" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.10%)</title><rect x="807.4" y="547.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title><rect x="808.6" y="595.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.10%)</title><rect x="808.6" y="579.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.42%)</title><rect x="809.9" y="595.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.42%)</title><rect x="809.9" y="579.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.42%)</title><rect x="809.9" y="563.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.42%)</title><rect x="809.9" y="547.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.42%)</title><rect x="809.9" y="531.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.9" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.10%)</title><rect x="809.9" y="515.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="812.9" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.10%)</title><rect x="809.9" y="499.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="812.9" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.31%)</title><rect x="811.1" y="515.0" width="3.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="814.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (68 samples, 7.14%)</title><rect x="814.8" y="707.0" width="84.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.8" y="718.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (14 samples, 1.47%)</title><rect x="814.8" y="691.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (2 samples, 0.21%)</title><rect x="817.3" y="675.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.3" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (2 samples, 0.21%)</title><rect x="817.3" y="659.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="820.3" y="670.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (2 samples, 0.21%)</title><rect x="817.3" y="643.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.3" y="654.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (2 samples, 0.21%)</title><rect x="817.3" y="627.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.3" y="638.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (1 samples, 0.10%)</title><rect x="817.3" y="611.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.3" y="622.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (1 samples, 0.10%)</title><rect x="817.3" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.3" y="606.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (1 samples, 0.10%)</title><rect x="817.3" y="579.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.3" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.10%)</title><rect x="817.3" y="563.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.10%)</title><rect x="817.3" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.10%)</title><rect x="817.3" y="531.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.3" y="542.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (1 samples, 0.10%)</title><rect x="818.5" y="611.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.5" y="622.0"></text>
</g>
<g>
<title>java/security/Provider.getService (1 samples, 0.10%)</title><rect x="818.5" y="595.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.10%)</title><rect x="818.5" y="579.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (10 samples, 1.05%)</title><rect x="819.8" y="675.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.8" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (2 samples, 0.21%)</title><rect x="819.8" y="659.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (2 samples, 0.21%)</title><rect x="819.8" y="643.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (2 samples, 0.21%)</title><rect x="819.8" y="627.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.8" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (2 samples, 0.21%)</title><rect x="819.8" y="611.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.8" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.21%)</title><rect x="819.8" y="595.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.8" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.31%)</title><rect x="822.3" y="659.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.3" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.31%)</title><rect x="822.3" y="643.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (3 samples, 0.31%)</title><rect x="822.3" y="627.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.3" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (3 samples, 0.31%)</title><rect x="822.3" y="611.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (3 samples, 0.31%)</title><rect x="822.3" y="595.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.3" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.21%)</title><rect x="822.3" y="579.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.21%)</title><rect x="822.3" y="563.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.21%)</title><rect x="822.3" y="547.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.21%)</title><rect x="822.3" y="531.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (1 samples, 0.10%)</title><rect x="824.7" y="579.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (1 samples, 0.10%)</title><rect x="826.0" y="659.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.10%)</title><rect x="826.0" y="643.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (4 samples, 0.42%)</title><rect x="827.2" y="659.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.42%)</title><rect x="827.2" y="643.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.2" y="654.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.21%)</title><rect x="827.2" y="627.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="830.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.21%)</title><rect x="829.7" y="627.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.21%)</title><rect x="829.7" y="611.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.21%)</title><rect x="829.7" y="595.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (54 samples, 5.67%)</title><rect x="832.2" y="691.0" width="66.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.2" y="702.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.handleResponses (52 samples, 5.46%)</title><rect x="832.2" y="675.0" width="64.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.2" y="686.0">ru/mail..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (36 samples, 3.78%)</title><rect x="834.6" y="659.0" width="44.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.6" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (36 samples, 3.78%)</title><rect x="834.6" y="643.0" width="44.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.6" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (36 samples, 3.78%)</title><rect x="834.6" y="627.0" width="44.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.6" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (36 samples, 3.78%)</title><rect x="834.6" y="611.0" width="44.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.6" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (23 samples, 2.41%)</title><rect x="837.1" y="595.0" width="28.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.1" y="606.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.21%)</title><rect x="837.1" y="579.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.21%)</title><rect x="837.1" y="563.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.1" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2 samples, 0.21%)</title><rect x="837.1" y="547.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.21%)</title><rect x="837.1" y="531.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (2 samples, 0.21%)</title><rect x="837.1" y="515.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.21%)</title><rect x="837.1" y="499.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.21%)</title><rect x="837.1" y="483.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (2 samples, 0.21%)</title><rect x="837.1" y="467.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.21%)</title><rect x="837.1" y="451.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/1019298652.test (2 samples, 0.21%)</title><rect x="837.1" y="435.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.21%)</title><rect x="837.1" y="419.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/594427726.test (1 samples, 0.10%)</title><rect x="837.1" y="403.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.10%)</title><rect x="837.1" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.1" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.10%)</title><rect x="837.1" y="371.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.10%)</title><rect x="837.1" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.1" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.10%)</title><rect x="837.1" y="339.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.10%)</title><rect x="837.1" y="323.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.10%)</title><rect x="837.1" y="307.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (1 samples, 0.10%)</title><rect x="838.4" y="403.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.10%)</title><rect x="839.6" y="579.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.10%)</title><rect x="839.6" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (20 samples, 2.10%)</title><rect x="840.8" y="579.0" width="24.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.8" y="590.0">j..</text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (20 samples, 2.10%)</title><rect x="840.8" y="563.0" width="24.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.8" y="574.0">s..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 2.10%)</title><rect x="840.8" y="547.0" width="24.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.8" y="558.0">j..</text>
</g>
<g>
<title>JVM_DoPrivileged (14 samples, 1.47%)</title><rect x="840.8" y="531.0" width="17.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="843.8" y="542.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.10%)</title><rect x="844.5" y="515.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="847.5" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.10%)</title><rect x="844.5" y="499.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="847.5" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.21%)</title><rect x="845.8" y="515.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="848.8" y="526.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.10%)</title><rect x="847.0" y="499.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="850.0" y="510.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.42%)</title><rect x="848.3" y="515.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="851.3" y="526.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.10%)</title><rect x="848.3" y="499.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="851.3" y="510.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.31%)</title><rect x="849.5" y="499.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="852.5" y="510.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.31%)</title><rect x="849.5" y="483.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="852.5" y="494.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.42%)</title><rect x="853.2" y="515.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="856.2" y="526.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.10%)</title><rect x="856.9" y="499.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="859.9" y="510.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="856.9" y="483.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="859.9" y="494.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.10%)</title><rect x="858.2" y="531.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="861.2" y="542.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.10%)</title><rect x="859.4" y="531.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="862.4" y="542.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.10%)</title><rect x="860.6" y="531.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="863.6" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.21%)</title><rect x="861.9" y="531.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.9" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.21%)</title><rect x="861.9" y="515.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.21%)</title><rect x="861.9" y="499.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.21%)</title><rect x="861.9" y="483.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.21%)</title><rect x="861.9" y="467.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="864.9" y="478.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.10%)</title><rect x="864.4" y="531.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="867.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (8 samples, 0.84%)</title><rect x="865.6" y="595.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.10%)</title><rect x="868.1" y="579.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (5 samples, 0.52%)</title><rect x="869.3" y="579.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5 samples, 0.52%)</title><rect x="869.3" y="563.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.10%)</title><rect x="870.5" y="547.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.5" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.10%)</title><rect x="870.5" y="531.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (1 samples, 0.10%)</title><rect x="870.5" y="515.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.5" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.10%)</title><rect x="871.8" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="874.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor11.newInstance (1 samples, 0.10%)</title><rect x="873.0" y="547.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.0" y="558.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="874.3" y="547.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="877.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (3 samples, 0.31%)</title><rect x="875.5" y="595.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="878.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3 samples, 0.31%)</title><rect x="875.5" y="579.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.31%)</title><rect x="875.5" y="563.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.31%)</title><rect x="875.5" y="547.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.10%)</title><rect x="875.5" y="531.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.10%)</title><rect x="875.5" y="515.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.10%)</title><rect x="875.5" y="499.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.10%)</title><rect x="875.5" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.10%)</title><rect x="875.5" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.10%)</title><rect x="875.5" y="451.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.5" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.10%)</title><rect x="875.5" y="435.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="878.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title><rect x="876.7" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.10%)</title><rect x="876.7" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.10%)</title><rect x="878.0" y="531.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.10%)</title><rect x="878.0" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="881.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.10%)</title><rect x="878.0" y="499.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.10%)</title><rect x="878.0" y="483.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$125/121225284.handleLocalResponse (3 samples, 0.31%)</title><rect x="879.2" y="659.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="882.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$8 (3 samples, 0.31%)</title><rect x="879.2" y="643.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.put (3 samples, 0.31%)</title><rect x="879.2" y="627.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="882.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3 samples, 0.31%)</title><rect x="879.2" y="611.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3 samples, 0.31%)</title><rect x="879.2" y="595.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.31%)</title><rect x="879.2" y="579.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.31%)</title><rect x="879.2" y="563.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title><rect x="879.2" y="547.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.10%)</title><rect x="879.2" y="531.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.21%)</title><rect x="880.5" y="547.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.21%)</title><rect x="880.5" y="531.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.21%)</title><rect x="880.5" y="515.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.21%)</title><rect x="880.5" y="499.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.21%)</title><rect x="880.5" y="483.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.5" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.10%)</title><rect x="880.5" y="467.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="883.5" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.10%)</title><rect x="881.7" y="467.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="884.7" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.10%)</title><rect x="881.7" y="451.0" width="1.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="884.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl$$Lambda$141/122924094.requestBuild (11 samples, 1.15%)</title><rect x="882.9" y="659.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.lambda$handleResponses$9 (11 samples, 1.15%)</title><rect x="882.9" y="643.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="885.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (7 samples, 0.73%)</title><rect x="882.9" y="627.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (7 samples, 0.73%)</title><rect x="882.9" y="611.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.9" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.73%)</title><rect x="882.9" y="595.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="885.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.73%)</title><rect x="882.9" y="579.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.63%)</title><rect x="884.2" y="563.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$168/255956050.accept (5 samples, 0.52%)</title><rect x="885.4" y="547.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.52%)</title><rect x="885.4" y="531.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.31%)</title><rect x="886.6" y="515.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$177/767520810.accept (3 samples, 0.31%)</title><rect x="886.6" y="499.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.31%)</title><rect x="886.6" y="483.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.6" y="494.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="890.4" y="515.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="893.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.proxyRequestBuilder (4 samples, 0.42%)</title><rect x="891.6" y="627.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.6" y="638.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2 samples, 0.21%)</title><rect x="891.6" y="611.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.6" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2 samples, 0.21%)</title><rect x="891.6" y="595.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.6" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2 samples, 0.21%)</title><rect x="891.6" y="579.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.6" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.21%)</title><rect x="891.6" y="563.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.6" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.21%)</title><rect x="891.6" y="547.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.6" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.10%)</title><rect x="892.8" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2 samples, 0.21%)</title><rect x="894.1" y="611.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2 samples, 0.21%)</title><rect x="894.1" y="595.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (2 samples, 0.21%)</title><rect x="894.1" y="579.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.1" y="590.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2 samples, 0.21%)</title><rect x="894.1" y="563.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.10%)</title><rect x="895.3" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.10%)</title><rect x="895.3" y="531.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.10%)</title><rect x="895.3" y="515.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncApiControllerImpl.mergeAndSendResponse (2 samples, 0.21%)</title><rect x="896.5" y="675.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.collateFutures (2 samples, 0.21%)</title><rect x="896.5" y="659.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.21%)</title><rect x="896.5" y="643.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$219/330067305.accept (2 samples, 0.21%)</title><rect x="896.5" y="627.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$1 (2 samples, 0.21%)</title><rect x="896.5" y="611.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.10%)</title><rect x="896.5" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title><rect x="896.5" y="579.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.get$Lambda (1 samples, 0.10%)</title><rect x="896.5" y="563.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.10%)</title><rect x="897.8" y="595.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.10%)</title><rect x="897.8" y="579.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.10%)</title><rect x="897.8" y="563.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils$$Lambda$223/2003754419.accept (1 samples, 0.10%)</title><rect x="897.8" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.lambda$collateFutures$0 (1 samples, 0.10%)</title><rect x="897.8" y="531.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.8" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (14 samples, 1.47%)</title><rect x="899.0" y="739.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.0" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 1.47%)</title><rect x="899.0" y="723.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="902.0" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$580/1356497911.run (14 samples, 1.47%)</title><rect x="899.0" y="707.0" width="17.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.0" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (14 samples, 1.47%)</title><rect x="899.0" y="691.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.0" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (14 samples, 1.47%)</title><rect x="899.0" y="675.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.0" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (14 samples, 1.47%)</title><rect x="899.0" y="659.0" width="17.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.0" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (13 samples, 1.36%)</title><rect x="900.3" y="643.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.3" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 1.36%)</title><rect x="900.3" y="627.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.3" y="638.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.10%)</title><rect x="900.3" y="611.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="903.3" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.10%)</title><rect x="900.3" y="595.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="903.3" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.10%)</title><rect x="900.3" y="579.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="903.3" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (12 samples, 1.26%)</title><rect x="901.5" y="611.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.5" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (12 samples, 1.26%)</title><rect x="901.5" y="595.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.5" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (12 samples, 1.26%)</title><rect x="901.5" y="579.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.5" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.52%)</title><rect x="901.5" y="563.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.52%)</title><rect x="901.5" y="547.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (5 samples, 0.52%)</title><rect x="901.5" y="531.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.5" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (5 samples, 0.52%)</title><rect x="901.5" y="515.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.5" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (5 samples, 0.52%)</title><rect x="901.5" y="499.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.5" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (5 samples, 0.52%)</title><rect x="901.5" y="483.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.5" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (5 samples, 0.52%)</title><rect x="901.5" y="467.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.5" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (5 samples, 0.52%)</title><rect x="901.5" y="451.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.5" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (5 samples, 0.52%)</title><rect x="901.5" y="435.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.5" y="446.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (5 samples, 0.52%)</title><rect x="901.5" y="419.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.5" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (5 samples, 0.52%)</title><rect x="901.5" y="403.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.5" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (5 samples, 0.52%)</title><rect x="901.5" y="387.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.5" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (5 samples, 0.52%)</title><rect x="901.5" y="371.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.5" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.52%)</title><rect x="901.5" y="355.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.5" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.52%)</title><rect x="901.5" y="339.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.5" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.52%)</title><rect x="901.5" y="323.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.5" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.52%)</title><rect x="901.5" y="307.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.5" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.31%)</title><rect x="901.5" y="291.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.5" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (3 samples, 0.31%)</title><rect x="901.5" y="275.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.5" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.31%)</title><rect x="901.5" y="259.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.5" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 0.31%)</title><rect x="901.5" y="243.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.5" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.10%)</title><rect x="901.5" y="227.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.5" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.10%)</title><rect x="901.5" y="211.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.5" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.10%)</title><rect x="901.5" y="195.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.5" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.10%)</title><rect x="901.5" y="179.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.5" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.10%)</title><rect x="901.5" y="163.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.5" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.10%)</title><rect x="901.5" y="147.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.5" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.10%)</title><rect x="901.5" y="131.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.5" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.10%)</title><rect x="901.5" y="115.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.5" y="126.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.10%)</title><rect x="901.5" y="99.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.5" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.10%)</title><rect x="901.5" y="83.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="904.5" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.10%)</title><rect x="901.5" y="67.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.5" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.10%)</title><rect x="901.5" y="51.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.5" y="62.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.21%)</title><rect x="902.7" y="227.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.7" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.10%)</title><rect x="902.7" y="211.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.7" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.10%)</title><rect x="902.7" y="195.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.7" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.10%)</title><rect x="902.7" y="179.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.7" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.10%)</title><rect x="902.7" y="163.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.7" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1 samples, 0.10%)</title><rect x="904.0" y="211.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.10%)</title><rect x="904.0" y="195.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.10%)</title><rect x="904.0" y="179.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.10%)</title><rect x="904.0" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.0" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.21%)</title><rect x="905.2" y="291.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.2" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.21%)</title><rect x="905.2" y="275.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.21%)</title><rect x="905.2" y="259.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor8.invoke (2 samples, 0.21%)</title><rect x="905.2" y="243.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.2" y="254.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.21%)</title><rect x="905.2" y="227.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.2" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.21%)</title><rect x="905.2" y="211.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.21%)</title><rect x="905.2" y="195.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor50.invoke (2 samples, 0.21%)</title><rect x="905.2" y="179.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.2" y="190.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (2 samples, 0.21%)</title><rect x="905.2" y="163.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.2" y="174.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (2 samples, 0.21%)</title><rect x="905.2" y="147.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.2" y="158.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (2 samples, 0.21%)</title><rect x="905.2" y="131.0" width="2.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="908.2" y="142.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (2 samples, 0.21%)</title><rect x="905.2" y="115.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="908.2" y="126.0"></text>
</g>
<g>
<title>initialize_ThreadInfo_constructor_arguments(JavaCallArguments*, ThreadSnapshot*, Thread*) (2 samples, 0.21%)</title><rect x="905.2" y="99.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="908.2" y="110.0"></text>
</g>
<g>
<title>ThreadStackTrace::allocate_fill_stack_trace_element_array(Thread*) (2 samples, 0.21%)</title><rect x="905.2" y="83.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="908.2" y="94.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::create(methodHandle const&amp;, int, Thread*) (2 samples, 0.21%)</title><rect x="905.2" y="67.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="908.2" y="78.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (2 samples, 0.21%)</title><rect x="905.2" y="51.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="908.2" y="62.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.10%)</title><rect x="906.5" y="35.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="909.5" y="46.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (7 samples, 0.73%)</title><rect x="907.7" y="563.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (7 samples, 0.73%)</title><rect x="907.7" y="547.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.7" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.73%)</title><rect x="907.7" y="531.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.7" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (7 samples, 0.73%)</title><rect x="907.7" y="515.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.7" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.73%)</title><rect x="907.7" y="499.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (7 samples, 0.73%)</title><rect x="907.7" y="483.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.7" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (7 samples, 0.73%)</title><rect x="907.7" y="467.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (7 samples, 0.73%)</title><rect x="907.7" y="451.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.73%)</title><rect x="907.7" y="435.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (7 samples, 0.73%)</title><rect x="907.7" y="419.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (7 samples, 0.73%)</title><rect x="907.7" y="403.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.21%)</title><rect x="907.7" y="387.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.7" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.21%)</title><rect x="907.7" y="371.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="910.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.21%)</title><rect x="907.7" y="355.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.7" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.21%)</title><rect x="907.7" y="339.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.21%)</title><rect x="907.7" y="323.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.7" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.21%)</title><rect x="907.7" y="307.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.21%)</title><rect x="907.7" y="291.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (2 samples, 0.21%)</title><rect x="907.7" y="275.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.21%)</title><rect x="907.7" y="259.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.7" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.21%)</title><rect x="907.7" y="243.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.7" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.21%)</title><rect x="907.7" y="227.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.7" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.10%)</title><rect x="907.7" y="211.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.7" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.10%)</title><rect x="908.9" y="211.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.9" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.10%)</title><rect x="908.9" y="195.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.9" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.10%)</title><rect x="908.9" y="179.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.9" y="190.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.10%)</title><rect x="908.9" y="163.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="911.9" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (5 samples, 0.52%)</title><rect x="910.2" y="387.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.52%)</title><rect x="910.2" y="371.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.52%)</title><rect x="910.2" y="355.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (5 samples, 0.52%)</title><rect x="910.2" y="339.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (5 samples, 0.52%)</title><rect x="910.2" y="323.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.2" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.52%)</title><rect x="910.2" y="307.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.2" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.52%)</title><rect x="910.2" y="291.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.2" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.lookup (1 samples, 0.10%)</title><rect x="910.2" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.2" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.10%)</title><rect x="910.2" y="259.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.2" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3 samples, 0.31%)</title><rect x="911.4" y="275.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.4" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.10%)</title><rect x="911.4" y="259.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.4" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.insert (1 samples, 0.10%)</title><rect x="911.4" y="243.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.21%)</title><rect x="912.6" y="259.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.21%)</title><rect x="912.6" y="243.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="915.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.21%)</title><rect x="912.6" y="227.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.6" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.21%)</title><rect x="912.6" y="211.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.21%)</title><rect x="912.6" y="195.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.6" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.21%)</title><rect x="912.6" y="179.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.6" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.21%)</title><rect x="912.6" y="163.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.6" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.21%)</title><rect x="912.6" y="147.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.6" y="158.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.21%)</title><rect x="912.6" y="131.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.21%)</title><rect x="912.6" y="115.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (2 samples, 0.21%)</title><rect x="912.6" y="99.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.6" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.21%)</title><rect x="912.6" y="83.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.6" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.21%)</title><rect x="912.6" y="67.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.6" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.21%)</title><rect x="912.6" y="51.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.6" y="62.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.10%)</title><rect x="913.9" y="35.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.9" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.10%)</title><rect x="915.1" y="275.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.10%)</title><rect x="915.1" y="259.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="918.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (24 samples, 2.52%)</title><rect x="916.4" y="787.0" width="29.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.4" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (24 samples, 2.52%)</title><rect x="916.4" y="771.0" width="29.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.4" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (11 samples, 1.15%)</title><rect x="916.4" y="755.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (10 samples, 1.05%)</title><rect x="917.6" y="739.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (1 samples, 0.10%)</title><rect x="918.8" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (1 samples, 0.10%)</title><rect x="920.1" y="723.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (7 samples, 0.73%)</title><rect x="921.3" y="723.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (7 samples, 0.73%)</title><rect x="921.3" y="707.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.73%)</title><rect x="921.3" y="691.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="924.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.63%)</title><rect x="921.3" y="675.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="924.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.63%)</title><rect x="921.3" y="659.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.63%)</title><rect x="921.3" y="643.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.52%)</title><rect x="921.3" y="627.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.52%)</title><rect x="921.3" y="611.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.52%)</title><rect x="921.3" y="595.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.10%)</title><rect x="921.3" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.10%)</title><rect x="921.3" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.10%)</title><rect x="921.3" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="924.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.10%)</title><rect x="921.3" y="531.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title><rect x="922.5" y="579.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.10%)</title><rect x="922.5" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.10%)</title><rect x="922.5" y="547.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="925.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.10%)</title><rect x="922.5" y="531.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.10%)</title><rect x="922.5" y="515.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="925.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.10%)</title><rect x="922.5" y="499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.5" y="510.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.10%)</title><rect x="922.5" y="483.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="925.5" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.10%)</title><rect x="922.5" y="467.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="925.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.31%)</title><rect x="923.8" y="579.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.31%)</title><rect x="923.8" y="563.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="926.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.31%)</title><rect x="923.8" y="547.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="926.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.31%)</title><rect x="923.8" y="531.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="926.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.31%)</title><rect x="923.8" y="515.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="926.8" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.31%)</title><rect x="923.8" y="499.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="926.8" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.10%)</title><rect x="923.8" y="483.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="926.8" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.10%)</title><rect x="925.0" y="483.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="928.0" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.10%)</title><rect x="926.3" y="483.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="929.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.10%)</title><rect x="927.5" y="627.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.10%)</title><rect x="927.5" y="611.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="930.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.10%)</title><rect x="927.5" y="595.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.10%)</title><rect x="928.7" y="675.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.42%)</title><rect x="930.0" y="755.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.42%)</title><rect x="930.0" y="739.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.0" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.31%)</title><rect x="930.0" y="723.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="933.0" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.10%)</title><rect x="930.0" y="707.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="933.0" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.10%)</title><rect x="930.0" y="691.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="933.0" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.21%)</title><rect x="931.2" y="707.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="934.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="933.7" y="723.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="936.7" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.10%)</title><rect x="933.7" y="707.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="936.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (9 samples, 0.94%)</title><rect x="934.9" y="755.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.84%)</title><rect x="936.2" y="739.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="939.2" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.10%)</title><rect x="936.2" y="723.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="939.2" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.63%)</title><rect x="937.4" y="723.0" width="7.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="940.4" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.21%)</title><rect x="938.6" y="707.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="941.6" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.10%)</title><rect x="939.9" y="691.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="942.9" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.31%)</title><rect x="941.1" y="707.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="944.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="944.8" y="723.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="947.8" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.10%)</title><rect x="944.8" y="707.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="947.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (102 samples, 10.70%)</title><rect x="946.1" y="787.0" width="126.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.1" y="798.0">jdk/internal/net..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.10%)</title><rect x="953.5" y="771.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="956.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="954.7" y="771.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="957.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="954.7" y="755.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="957.7" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.10%)</title><rect x="954.7" y="739.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="957.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (3 samples, 0.31%)</title><rect x="956.0" y="771.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="959.0" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (16 samples, 1.68%)</title><rect x="959.7" y="771.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$389/894063145.accept (16 samples, 1.68%)</title><rect x="959.7" y="755.0" width="19.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (16 samples, 1.68%)</title><rect x="959.7" y="739.0" width="19.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (16 samples, 1.68%)</title><rect x="959.7" y="723.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (16 samples, 1.68%)</title><rect x="959.7" y="707.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="962.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (16 samples, 1.68%)</title><rect x="959.7" y="691.0" width="19.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.10%)</title><rect x="959.7" y="675.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.10%)</title><rect x="959.7" y="659.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.7" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.10%)</title><rect x="959.7" y="643.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (15 samples, 1.57%)</title><rect x="960.9" y="675.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 1.57%)</title><rect x="960.9" y="659.0" width="18.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 1.57%)</title><rect x="960.9" y="643.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13 samples, 1.36%)</title><rect x="963.4" y="627.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (13 samples, 1.36%)</title><rect x="963.4" y="611.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="966.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (13 samples, 1.36%)</title><rect x="963.4" y="595.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (13 samples, 1.36%)</title><rect x="963.4" y="579.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (6 samples, 0.63%)</title><rect x="965.9" y="563.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (6 samples, 0.63%)</title><rect x="965.9" y="547.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (6 samples, 0.63%)</title><rect x="965.9" y="531.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.63%)</title><rect x="965.9" y="515.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.63%)</title><rect x="965.9" y="499.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.52%)</title><rect x="967.1" y="483.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.52%)</title><rect x="967.1" y="467.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.21%)</title><rect x="967.1" y="451.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title><rect x="968.4" y="435.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="971.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.31%)</title><rect x="969.6" y="451.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.31%)</title><rect x="969.6" y="435.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.21%)</title><rect x="969.6" y="419.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.21%)</title><rect x="969.6" y="403.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.21%)</title><rect x="969.6" y="387.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.10%)</title><rect x="972.1" y="419.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.10%)</title><rect x="972.1" y="403.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="975.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.10%)</title><rect x="972.1" y="387.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.10%)</title><rect x="972.1" y="371.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="975.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.10%)</title><rect x="972.1" y="355.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.1" y="366.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.10%)</title><rect x="972.1" y="339.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="975.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.10%)</title><rect x="973.3" y="563.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (4 samples, 0.42%)</title><rect x="974.6" y="563.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="977.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (4 samples, 0.42%)</title><rect x="974.6" y="547.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="977.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.42%)</title><rect x="974.6" y="531.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.42%)</title><rect x="974.6" y="515.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.31%)</title><rect x="974.6" y="499.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="977.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (3 samples, 0.31%)</title><rect x="974.6" y="483.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (3 samples, 0.31%)</title><rect x="974.6" y="467.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.6" y="478.0"></text>
</g>
<g>
<title>__read (3 samples, 0.31%)</title><rect x="974.6" y="451.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="977.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.10%)</title><rect x="978.3" y="499.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.10%)</title><rect x="978.3" y="483.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.10%)</title><rect x="979.5" y="771.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.10%)</title><rect x="979.5" y="755.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.10%)</title><rect x="979.5" y="739.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.10%)</title><rect x="979.5" y="723.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="982.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.10%)</title><rect x="979.5" y="707.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="982.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.10%)</title><rect x="979.5" y="691.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.10%)</title><rect x="979.5" y="675.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.10%)</title><rect x="979.5" y="659.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (10 samples, 1.05%)</title><rect x="980.7" y="771.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="983.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$292/1483596319.run (8 samples, 0.84%)</title><rect x="980.7" y="755.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (8 samples, 0.84%)</title><rect x="980.7" y="739.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.84%)</title><rect x="980.7" y="723.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.84%)</title><rect x="980.7" y="707.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.63%)</title><rect x="983.2" y="691.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (6 samples, 0.63%)</title><rect x="983.2" y="675.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="986.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$281/1641897047.run (6 samples, 0.63%)</title><rect x="983.2" y="659.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (6 samples, 0.63%)</title><rect x="983.2" y="643.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (6 samples, 0.63%)</title><rect x="983.2" y="627.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (1 samples, 0.10%)</title><rect x="983.2" y="611.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (5 samples, 0.52%)</title><rect x="984.5" y="611.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="987.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.10%)</title><rect x="984.5" y="595.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.10%)</title><rect x="984.5" y="579.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="987.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.10%)</title><rect x="984.5" y="563.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.10%)</title><rect x="984.5" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.10%)</title><rect x="984.5" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="987.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.10%)</title><rect x="984.5" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="987.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.10%)</title><rect x="984.5" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.10%)</title><rect x="984.5" y="483.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.10%)</title><rect x="984.5" y="467.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="987.5" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.10%)</title><rect x="984.5" y="451.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (4 samples, 0.42%)</title><rect x="985.7" y="595.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.10%)</title><rect x="989.4" y="579.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.10%)</title><rect x="989.4" y="563.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.10%)</title><rect x="989.4" y="547.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="992.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.10%)</title><rect x="989.4" y="531.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.10%)</title><rect x="989.4" y="515.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$302/1986808666.run (2 samples, 0.21%)</title><rect x="990.7" y="755.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="993.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (2 samples, 0.21%)</title><rect x="990.7" y="739.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.10%)</title><rect x="991.9" y="723.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.10%)</title><rect x="991.9" y="707.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.10%)</title><rect x="991.9" y="691.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.10%)</title><rect x="991.9" y="675.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="994.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title><rect x="991.9" y="659.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.10%)</title><rect x="991.9" y="643.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5 samples, 0.52%)</title><rect x="993.1" y="771.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="996.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5 samples, 0.52%)</title><rect x="993.1" y="755.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.1" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.31%)</title><rect x="994.4" y="739.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="997.4" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.31%)</title><rect x="994.4" y="723.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="997.4" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.31%)</title><rect x="994.4" y="707.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="997.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.10%)</title><rect x="994.4" y="691.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="997.4" y="702.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.21%)</title><rect x="995.6" y="691.0" width="2.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="998.6" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.10%)</title><rect x="998.1" y="739.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1 samples, 0.10%)</title><rect x="999.3" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.3" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.10%)</title><rect x="999.3" y="755.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.10%)</title><rect x="999.3" y="739.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.10%)</title><rect x="999.3" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.characteristics (1 samples, 0.10%)</title><rect x="999.3" y="707.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.31%)</title><rect x="1000.6" y="771.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.21%)</title><rect x="1001.8" y="755.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.21%)</title><rect x="1001.8" y="739.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1004.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.10%)</title><rect x="1003.0" y="723.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (13 samples, 1.36%)</title><rect x="1004.3" y="771.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.3" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.31%)</title><rect x="1006.7" y="755.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.7" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.31%)</title><rect x="1006.7" y="739.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1009.7" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.21%)</title><rect x="1006.7" y="723.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1009.7" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.10%)</title><rect x="1006.7" y="707.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1009.7" y="718.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.10%)</title><rect x="1008.0" y="707.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1011.0" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.10%)</title><rect x="1009.2" y="723.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1012.2" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.52%)</title><rect x="1010.5" y="755.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1013.5" y="766.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.52%)</title><rect x="1010.5" y="739.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.52%)</title><rect x="1010.5" y="723.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.5" y="734.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.42%)</title><rect x="1011.7" y="707.0" width="5.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1014.7" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.10%)</title><rect x="1011.7" y="691.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1014.7" y="702.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.31%)</title><rect x="1012.9" y="691.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1015.9" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.10%)</title><rect x="1014.2" y="675.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1017.2" y="686.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.10%)</title><rect x="1015.4" y="675.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1018.4" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.until (1 samples, 0.10%)</title><rect x="1016.7" y="755.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1019.7" y="766.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.21%)</title><rect x="1017.9" y="755.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1020.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.21%)</title><rect x="1017.9" y="739.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.9" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.21%)</title><rect x="1017.9" y="723.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.9" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.21%)</title><rect x="1017.9" y="707.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1020.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (35 samples, 3.67%)</title><rect x="1020.4" y="771.0" width="43.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.4" y="782.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (35 samples, 3.67%)</title><rect x="1020.4" y="755.0" width="43.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.4" y="766.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (35 samples, 3.67%)</title><rect x="1020.4" y="739.0" width="43.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1023.4" y="750.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (9 samples, 0.94%)</title><rect x="1027.8" y="723.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.8" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.10%)</title><rect x="1030.3" y="707.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1033.3" y="718.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.10%)</title><rect x="1031.5" y="707.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1034.5" y="718.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.52%)</title><rect x="1032.7" y="707.0" width="6.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1035.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (14 samples, 1.47%)</title><rect x="1038.9" y="723.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1041.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.63%)</title><rect x="1038.9" y="707.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.63%)</title><rect x="1038.9" y="691.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.10%)</title><rect x="1045.1" y="675.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (5 samples, 0.52%)</title><rect x="1046.4" y="707.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (4 samples, 0.42%)</title><rect x="1047.6" y="691.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.6" y="702.0"></text>
</g>
<g>
<title>__read (4 samples, 0.42%)</title><rect x="1047.6" y="675.0" width="5.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1050.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.31%)</title><rect x="1052.6" y="707.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.21%)</title><rect x="1052.6" y="691.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.21%)</title><rect x="1052.6" y="675.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.21%)</title><rect x="1052.6" y="659.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.10%)</title><rect x="1055.0" y="691.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1058.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.10%)</title><rect x="1055.0" y="675.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1058.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.10%)</title><rect x="1055.0" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1058.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.10%)</title><rect x="1056.3" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (3 samples, 0.31%)</title><rect x="1057.5" y="723.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.5" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (3 samples, 0.31%)</title><rect x="1057.5" y="707.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.5" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.31%)</title><rect x="1057.5" y="691.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.5" y="702.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.31%)</title><rect x="1057.5" y="675.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.31%)</title><rect x="1057.5" y="659.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1060.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.21%)</title><rect x="1061.2" y="723.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (6 samples, 0.63%)</title><rect x="1063.7" y="771.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (6 samples, 0.63%)</title><rect x="1063.7" y="755.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (6 samples, 0.63%)</title><rect x="1063.7" y="739.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1066.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (3 samples, 0.31%)</title><rect x="1063.7" y="723.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.7" y="734.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.31%)</title><rect x="1063.7" y="707.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1066.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.31%)</title><rect x="1067.4" y="723.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.4" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.10%)</title><rect x="1067.4" y="707.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.10%)</title><rect x="1067.4" y="691.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1 samples, 0.10%)</title><rect x="1068.7" y="707.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.10%)</title><rect x="1068.7" y="691.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.7" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.10%)</title><rect x="1068.7" y="675.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1071.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.10%)</title><rect x="1069.9" y="707.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.10%)</title><rect x="1069.9" y="691.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.10%)</title><rect x="1069.9" y="675.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.10%)</title><rect x="1071.1" y="771.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1074.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.10%)</title><rect x="1071.1" y="755.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.10%)</title><rect x="1071.1" y="739.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.1" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (82 samples, 8.60%)</title><rect x="1072.4" y="787.0" width="101.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.4" y="798.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.10%)</title><rect x="1073.6" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (26 samples, 2.73%)</title><rect x="1074.8" y="771.0" width="32.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.8" y="782.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (20 samples, 2.10%)</title><rect x="1082.3" y="755.0" width="24.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.3" y="766.0">o..</text>
</g>
<g>
<title>clock_gettime (3 samples, 0.31%)</title><rect x="1086.0" y="739.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1089.0" y="750.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 1.47%)</title><rect x="1089.7" y="739.0" width="17.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1092.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (53 samples, 5.56%)</title><rect x="1107.0" y="771.0" width="65.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.0" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (52 samples, 5.46%)</title><rect x="1108.3" y="755.0" width="64.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.3" y="766.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (38 samples, 3.99%)</title><rect x="1108.3" y="739.0" width="47.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.3" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 2.52%)</title><rect x="1112.0" y="723.0" width="29.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.0" y="734.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 2.52%)</title><rect x="1112.0" y="707.0" width="29.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.0" y="718.0">on..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (22 samples, 2.31%)</title><rect x="1112.0" y="691.0" width="27.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.0" y="702.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.10%)</title><rect x="1112.0" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.42%)</title><rect x="1113.2" y="675.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1116.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.42%)</title><rect x="1113.2" y="659.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.10%)</title><rect x="1114.5" y="643.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.10%)</title><rect x="1114.5" y="627.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.10%)</title><rect x="1115.7" y="643.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.10%)</title><rect x="1115.7" y="627.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.7" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.10%)</title><rect x="1116.9" y="643.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/FullAsyncTopologyReplicaService.handleRequest (17 samples, 1.78%)</title><rect x="1118.2" y="675.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.2" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (17 samples, 1.78%)</title><rect x="1118.2" y="659.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.2" y="670.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/636786234.linkToTargetMethod (1 samples, 0.10%)</title><rect x="1118.2" y="643.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1121.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title><rect x="1118.2" y="627.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$112/566953691.get$Lambda (1 samples, 0.10%)</title><rect x="1118.2" y="611.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.10%)</title><rect x="1118.2" y="595.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (16 samples, 1.68%)</title><rect x="1119.4" y="643.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 1.68%)</title><rect x="1119.4" y="627.0" width="19.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 1.57%)</title><rect x="1119.4" y="611.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.21%)</title><rect x="1119.4" y="595.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.21%)</title><rect x="1119.4" y="579.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.21%)</title><rect x="1119.4" y="563.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.21%)</title><rect x="1119.4" y="547.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.10%)</title><rect x="1121.9" y="595.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 1.26%)</title><rect x="1123.1" y="595.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 1.26%)</title><rect x="1123.1" y="579.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 1.26%)</title><rect x="1123.1" y="563.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 1.26%)</title><rect x="1123.1" y="547.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 1.26%)</title><rect x="1123.1" y="531.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.1" y="542.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.10%)</title><rect x="1124.4" y="515.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1127.4" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.73%)</title><rect x="1125.6" y="515.0" width="8.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1128.6" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.10%)</title><rect x="1126.9" y="499.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1129.9" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.21%)</title><rect x="1128.1" y="499.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1131.1" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.10%)</title><rect x="1130.6" y="499.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.6" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.10%)</title><rect x="1131.8" y="499.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.8" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.10%)</title><rect x="1133.0" y="499.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1136.0" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.31%)</title><rect x="1134.3" y="515.0" width="3.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1137.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.10%)</title><rect x="1138.0" y="611.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1141.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.10%)</title><rect x="1138.0" y="595.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.10%)</title><rect x="1138.0" y="579.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.21%)</title><rect x="1139.2" y="691.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.21%)</title><rect x="1139.2" y="675.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.10%)</title><rect x="1139.2" y="659.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.10%)</title><rect x="1140.5" y="659.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.10%)</title><rect x="1140.5" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.10%)</title><rect x="1140.5" y="627.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.42%)</title><rect x="1141.7" y="723.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.42%)</title><rect x="1141.7" y="707.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.42%)</title><rect x="1141.7" y="691.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.42%)</title><rect x="1141.7" y="675.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.42%)</title><rect x="1141.7" y="659.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.63%)</title><rect x="1146.7" y="723.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.21%)</title><rect x="1150.4" y="707.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.21%)</title><rect x="1150.4" y="691.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.10%)</title><rect x="1152.9" y="707.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.10%)</title><rect x="1152.9" y="691.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.9" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.10%)</title><rect x="1152.9" y="675.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.9" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.10%)</title><rect x="1152.9" y="659.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.9" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.10%)</title><rect x="1152.9" y="643.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.9" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.10%)</title><rect x="1152.9" y="627.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.9" y="638.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.10%)</title><rect x="1152.9" y="611.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.10%)</title><rect x="1154.1" y="723.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.10%)</title><rect x="1154.1" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 1.47%)</title><rect x="1155.3" y="739.0" width="17.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 1.47%)</title><rect x="1155.3" y="723.0" width="17.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.3" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.63%)</title><rect x="1155.3" y="707.0" width="7.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1158.3" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.10%)</title><rect x="1155.3" y="691.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1158.3" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.21%)</title><rect x="1156.6" y="691.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.6" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.10%)</title><rect x="1159.0" y="691.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.0" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.21%)</title><rect x="1160.3" y="691.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1163.3" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.10%)</title><rect x="1160.3" y="675.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.3" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.10%)</title><rect x="1161.5" y="675.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1164.5" y="686.0"></text>
</g>
<g>
<title>recv (8 samples, 0.84%)</title><rect x="1162.8" y="707.0" width="9.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1165.8" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.10%)</title><rect x="1172.7" y="771.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.7" y="782.0"></text>
</g>
<g>
<title>start_thread (13 samples, 1.36%)</title><rect x="1173.9" y="787.0" width="16.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1176.9" y="798.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 1.36%)</title><rect x="1173.9" y="771.0" width="16.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1176.9" y="782.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 1.36%)</title><rect x="1173.9" y="755.0" width="16.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.9" y="766.0"></text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 1.05%)</title><rect x="1173.9" y="739.0" width="12.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.9" y="750.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 1.05%)</title><rect x="1173.9" y="723.0" width="12.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.9" y="734.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.63%)</title><rect x="1173.9" y="707.0" width="7.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.9" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 0.63%)</title><rect x="1173.9" y="691.0" width="7.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.9" y="702.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.42%)</title><rect x="1176.4" y="675.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.4" y="686.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.21%)</title><rect x="1178.9" y="659.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.9" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.42%)</title><rect x="1181.3" y="707.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.3" y="718.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.42%)</title><rect x="1181.3" y="691.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.3" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.42%)</title><rect x="1181.3" y="675.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.42%)</title><rect x="1181.3" y="659.0" width="5.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.3" y="670.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.42%)</title><rect x="1181.3" y="643.0" width="5.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.3" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.31%)</title><rect x="1181.3" y="627.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.3" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.10%)</title><rect x="1183.8" y="611.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.8" y="622.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (1 samples, 0.10%)</title><rect x="1185.0" y="627.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.0" y="638.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.10%)</title><rect x="1185.0" y="611.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="622.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.10%)</title><rect x="1185.0" y="595.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.0" y="606.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.21%)</title><rect x="1186.3" y="739.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.21%)</title><rect x="1186.3" y="723.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.3" y="734.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.21%)</title><rect x="1186.3" y="707.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="718.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.21%)</title><rect x="1186.3" y="691.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.3" y="702.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 0.21%)</title><rect x="1186.3" y="675.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.3" y="686.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.21%)</title><rect x="1186.3" y="659.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.3" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.21%)</title><rect x="1186.3" y="643.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.3" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.10%)</title><rect x="1186.3" y="627.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="638.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.10%)</title><rect x="1186.3" y="611.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.3" y="622.0"></text>
</g>
<g>
<title>VectorSet::operator&gt;&gt;=(unsigned int) (1 samples, 0.10%)</title><rect x="1186.3" y="595.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.3" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.10%)</title><rect x="1187.5" y="627.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.5" y="638.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.10%)</title><rect x="1187.5" y="611.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.5" y="622.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.10%)</title><rect x="1188.8" y="739.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.8" y="750.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.10%)</title><rect x="1188.8" y="723.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.8" y="734.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.10%)</title><rect x="1188.8" y="707.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.8" y="718.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.10%)</title><rect x="1188.8" y="691.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.8" y="702.0"></text>
</g>
<g>
<title>ThreadDumpResult::add_thread_snapshot(ThreadSnapshot*) (1 samples, 0.10%)</title><rect x="1188.8" y="675.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.8" y="686.0"></text>
</g>
</g>
</svg>
