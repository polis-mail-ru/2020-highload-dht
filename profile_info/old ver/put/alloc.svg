<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="517"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="517"> </text>
<g id="frames">
<g>
<title>all (6,105 samples, 100.00%)</title><rect x="10.0" y="483.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="494.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (4,272 samples, 69.98%)</title><rect x="10.0" y="467.0" width="825.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="478.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,272 samples, 69.98%)</title><rect x="10.0" y="451.0" width="825.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="462.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,272 samples, 69.98%)</title><rect x="10.0" y="435.0" width="825.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="446.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (52 samples, 0.85%)</title><rect x="10.0" y="419.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (52 samples, 0.85%)</title><rect x="10.0" y="403.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (52 samples, 0.85%)</title><rect x="10.0" y="387.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (52 samples, 0.85%)</title><rect x="10.0" y="371.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (52 samples, 0.85%)</title><rect x="10.0" y="355.0" width="10.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService$$Lambda$68/296703085.run (4,220 samples, 69.12%)</title><rect x="20.1" y="419.0" width="815.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.1" y="430.0">ru/mail/polis/service/re1nex/AsyncTopologyService$$Lambda$68/296703085.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.lambda$put$1 (4,220 samples, 69.12%)</title><rect x="20.1" y="403.0" width="815.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.1" y="414.0">ru/mail/polis/service/re1nex/AsyncTopologyService.lambda$put$1</text>
</g>
<g>
<title>one.nio.http.Response (21 samples, 0.34%)</title><rect x="20.1" y="387.0" width="4.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="23.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (109 samples, 1.79%)</title><rect x="24.1" y="387.0" width="21.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.1" y="398.0">o..</text>
</g>
<g>
<title>byte[] (45 samples, 0.74%)</title><rect x="24.1" y="371.0" width="8.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="27.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (37 samples, 0.61%)</title><rect x="32.8" y="371.0" width="7.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="35.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.44%)</title><rect x="40.0" y="371.0" width="5.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="43.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.primaryFor (566 samples, 9.27%)</title><rect x="45.2" y="387.0" width="109.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.2" y="398.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.primaryFor (566 samples, 9.27%)</title><rect x="45.2" y="371.0" width="109.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.2" y="382.0">ru/mail/polis..</text>
</g>
<g>
<title>byte[] (34 samples, 0.56%)</title><rect x="45.2" y="355.0" width="6.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="48.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (56 samples, 0.92%)</title><rect x="51.7" y="355.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Long (56 samples, 0.92%)</title><rect x="51.7" y="339.0" width="10.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="54.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (40 samples, 0.66%)</title><rect x="62.6" y="355.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (40 samples, 0.66%)</title><rect x="62.6" y="339.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (40 samples, 0.66%)</title><rect x="62.6" y="323.0" width="7.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="65.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (49 samples, 0.80%)</title><rect x="70.3" y="355.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.3" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (49 samples, 0.80%)</title><rect x="70.3" y="339.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.3" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (49 samples, 0.80%)</title><rect x="70.3" y="323.0" width="9.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="73.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (387 samples, 6.34%)</title><rect x="79.8" y="355.0" width="74.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.8" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/security/MessageDigest.digest (39 samples, 0.64%)</title><rect x="79.8" y="339.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.8" y="350.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (39 samples, 0.64%)</title><rect x="79.8" y="323.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.8" y="334.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (39 samples, 0.64%)</title><rect x="79.8" y="307.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.8" y="318.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.64%)</title><rect x="79.8" y="291.0" width="7.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="82.8" y="302.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (348 samples, 5.70%)</title><rect x="87.3" y="339.0" width="67.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.3" y="350.0">java/se..</text>
</g>
<g>
<title>java/security/Security.getImpl (348 samples, 5.70%)</title><rect x="87.3" y="323.0" width="67.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.3" y="334.0">java/se..</text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (348 samples, 5.70%)</title><rect x="87.3" y="307.0" width="67.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.3" y="318.0">sun/sec..</text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (320 samples, 5.24%)</title><rect x="87.3" y="291.0" width="61.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.3" y="302.0">sun/se..</text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (281 samples, 4.60%)</title><rect x="87.3" y="275.0" width="54.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.3" y="286.0">java/..</text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (281 samples, 4.60%)</title><rect x="87.3" y="259.0" width="54.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.3" y="270.0">java/..</text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (281 samples, 4.60%)</title><rect x="87.3" y="243.0" width="54.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.3" y="254.0">java/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (281 samples, 4.60%)</title><rect x="87.3" y="227.0" width="54.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.3" y="238.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (281 samples, 4.60%)</title><rect x="87.3" y="211.0" width="54.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.3" y="222.0">jdk/i..</text>
</g>
<g>
<title>sun.security.provider.MD5 (63 samples, 1.03%)</title><rect x="87.3" y="195.0" width="12.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="90.3" y="206.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (218 samples, 3.57%)</title><rect x="99.5" y="195.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.5" y="206.0">sun/..</text>
</g>
<g>
<title>int[] (128 samples, 2.10%)</title><rect x="99.5" y="179.0" width="24.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="102.5" y="190.0">i..</text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (90 samples, 1.47%)</title><rect x="124.2" y="179.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.2" y="190.0"></text>
</g>
<g>
<title>byte[] (90 samples, 1.47%)</title><rect x="124.2" y="163.0" width="17.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="127.2" y="174.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (39 samples, 0.64%)</title><rect x="141.6" y="275.0" width="7.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="144.6" y="286.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (28 samples, 0.46%)</title><rect x="149.2" y="291.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.2" y="302.0"></text>
</g>
<g>
<title>java/security/Provider.getService (28 samples, 0.46%)</title><rect x="149.2" y="275.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (28 samples, 0.46%)</title><rect x="149.2" y="259.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.2" y="270.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (28 samples, 0.46%)</title><rect x="149.2" y="243.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.46%)</title><rect x="149.2" y="227.0" width="5.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="152.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (159 samples, 2.60%)</title><rect x="154.6" y="387.0" width="30.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.6" y="398.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.05%)</title><rect x="154.6" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.05%)</title><rect x="154.6" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.05%)</title><rect x="154.6" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.6" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="154.6" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.05%)</title><rect x="154.6" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.03%)</title><rect x="154.6" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.6" y="302.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (2 samples, 0.03%)</title><rect x="154.6" y="275.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="157.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (156 samples, 2.56%)</title><rect x="155.2" y="371.0" width="30.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.2" y="382.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (106 samples, 1.74%)</title><rect x="155.2" y="355.0" width="20.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (106 samples, 1.74%)</title><rect x="155.2" y="339.0" width="20.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="158.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (20 samples, 0.33%)</title><rect x="175.6" y="355.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (20 samples, 0.33%)</title><rect x="175.6" y="339.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (6 samples, 0.10%)</title><rect x="175.6" y="323.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="178.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (14 samples, 0.23%)</title><rect x="176.8" y="323.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="179.8" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (30 samples, 0.49%)</title><rect x="179.5" y="355.0" width="5.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="182.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.proxy (3,092 samples, 50.65%)</title><rect x="185.3" y="387.0" width="597.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.3" y="398.0">ru/mail/polis/service/re1nex/ApiController.proxy</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="185.3" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/102617125.invoke (3 samples, 0.05%)</title><rect x="185.3" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="185.3" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="185.3" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="185.3" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="188.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,087 samples, 50.57%)</title><rect x="185.9" y="371.0" width="596.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.9" y="382.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,087 samples, 50.57%)</title><rect x="185.9" y="355.0" width="596.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.9" y="366.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (2 samples, 0.03%)</title><rect x="185.9" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="188.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (3,034 samples, 49.70%)</title><rect x="186.3" y="339.0" width="586.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.3" y="350.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (947 samples, 15.51%)</title><rect x="186.3" y="323.0" width="183.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="189.3" y="334.0">byte[]</text>
</g>
<g>
<title>byte[] (2,087 samples, 34.19%)</title><rect x="369.3" y="323.0" width="403.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="372.3" y="334.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (44 samples, 0.72%)</title><rect x="772.7" y="339.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.7" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (43 samples, 0.70%)</title><rect x="772.9" y="323.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 0.70%)</title><rect x="772.9" y="307.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 0.70%)</title><rect x="772.9" y="291.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.9" y="302.0"></text>
</g>
<g>
<title>char[] (41 samples, 0.67%)</title><rect x="772.9" y="275.0" width="7.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="775.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="780.8" y="275.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="783.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.05%)</title><rect x="781.2" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="781.2" y="323.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.2" y="334.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="781.2" y="307.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="784.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.05%)</title><rect x="781.8" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="781.8" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="781.8" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="781.8" y="291.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="784.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="782.6" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.03%)</title><rect x="782.6" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="782.6" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="782.6" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.6" y="334.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="782.6" y="307.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="785.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendResponse (174 samples, 2.85%)</title><rect x="782.9" y="387.0" width="33.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.9" y="398.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (174 samples, 2.85%)</title><rect x="782.9" y="371.0" width="33.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.9" y="382.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (174 samples, 2.85%)</title><rect x="782.9" y="355.0" width="33.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.9" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (116 samples, 1.90%)</title><rect x="782.9" y="339.0" width="22.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.9" y="350.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (116 samples, 1.90%)</title><rect x="782.9" y="323.0" width="22.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.9" y="334.0">o..</text>
</g>
<g>
<title>byte[] (116 samples, 1.90%)</title><rect x="782.9" y="307.0" width="22.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="785.9" y="318.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (58 samples, 0.95%)</title><rect x="805.4" y="339.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.4" y="350.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (58 samples, 0.95%)</title><rect x="805.4" y="323.0" width="11.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="808.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (99 samples, 1.62%)</title><rect x="816.6" y="387.0" width="19.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (57 samples, 0.93%)</title><rect x="816.6" y="371.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (57 samples, 0.93%)</title><rect x="816.6" y="355.0" width="11.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (57 samples, 0.93%)</title><rect x="816.6" y="339.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 0.93%)</title><rect x="816.6" y="323.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.6" y="334.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.93%)</title><rect x="816.6" y="307.0" width="11.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="819.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (42 samples, 0.69%)</title><rect x="827.6" y="371.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (42 samples, 0.69%)</title><rect x="827.6" y="355.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (42 samples, 0.69%)</title><rect x="827.6" y="339.0" width="8.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="830.6" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,833 samples, 30.02%)</title><rect x="835.7" y="467.0" width="354.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.7" y="478.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (62 samples, 1.02%)</title><rect x="835.7" y="451.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.7" y="462.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (62 samples, 1.02%)</title><rect x="835.7" y="435.0" width="12.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="838.7" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,771 samples, 29.01%)</title><rect x="847.7" y="451.0" width="342.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.7" y="462.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,771 samples, 29.01%)</title><rect x="847.7" y="435.0" width="342.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.7" y="446.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,771 samples, 29.01%)</title><rect x="847.7" y="419.0" width="342.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.7" y="430.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (306 samples, 5.01%)</title><rect x="847.7" y="403.0" width="59.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.7" y="414.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (306 samples, 5.01%)</title><rect x="847.7" y="387.0" width="59.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.7" y="398.0">one/ni..</text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (182 samples, 2.98%)</title><rect x="847.7" y="371.0" width="35.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.7" y="382.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (99 samples, 1.62%)</title><rect x="847.7" y="355.0" width="19.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (99 samples, 1.62%)</title><rect x="847.7" y="339.0" width="19.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (99 samples, 1.62%)</title><rect x="847.7" y="323.0" width="19.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (99 samples, 1.62%)</title><rect x="847.7" y="307.0" width="19.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.66%)</title><rect x="847.7" y="291.0" width="7.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="850.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.97%)</title><rect x="855.4" y="291.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.4" y="302.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.97%)</title><rect x="855.4" y="275.0" width="11.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="858.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.put (83 samples, 1.36%)</title><rect x="866.8" y="355.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 1.24%)</title><rect x="866.8" y="339.0" width="14.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 1.24%)</title><rect x="866.8" y="323.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService$$Lambda$68/296703085.get$Lambda (76 samples, 1.24%)</title><rect x="866.8" y="307.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="869.8" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncTopologyService$$Lambda$68 (76 samples, 1.24%)</title><rect x="866.8" y="291.0" width="14.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="869.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseAsyncService.executeTask (7 samples, 0.11%)</title><rect x="881.5" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.5" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (5 samples, 0.08%)</title><rect x="881.5" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.5" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (5 samples, 0.08%)</title><rect x="881.5" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.5" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5 samples, 0.08%)</title><rect x="881.5" y="291.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.5" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5 samples, 0.08%)</title><rect x="881.5" y="275.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.5" y="286.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5 samples, 0.08%)</title><rect x="881.5" y="259.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.5" y="270.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5 samples, 0.08%)</title><rect x="881.5" y="243.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.5" y="254.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5 samples, 0.08%)</title><rect x="881.5" y="227.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.5" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5 samples, 0.08%)</title><rect x="881.5" y="211.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.5" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5 samples, 0.08%)</title><rect x="881.5" y="195.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.5" y="206.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (5 samples, 0.08%)</title><rect x="881.5" y="179.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.5" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.07%)</title><rect x="881.5" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="884.5" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.07%)</title><rect x="881.5" y="147.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.5" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (3 samples, 0.05%)</title><rect x="881.5" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.5" y="142.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (3 samples, 0.05%)</title><rect x="881.5" y="115.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.5" y="126.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (3 samples, 0.05%)</title><rect x="881.5" y="99.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.5" y="110.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (3 samples, 0.05%)</title><rect x="881.5" y="83.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="884.5" y="94.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (3 samples, 0.05%)</title><rect x="881.5" y="67.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.5" y="78.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (3 samples, 0.05%)</title><rect x="881.5" y="51.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.5" y="62.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (3 samples, 0.05%)</title><rect x="881.5" y="35.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="884.5" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.03%)</title><rect x="882.5" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.03%)</title><rect x="882.5" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="882.5" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="882.5" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="882.5" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="885.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.03%)</title><rect x="882.5" y="243.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="885.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (124 samples, 2.03%)</title><rect x="882.9" y="371.0" width="23.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.9" y="382.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (124 samples, 2.03%)</title><rect x="882.9" y="355.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="885.9" y="366.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (124 samples, 2.03%)</title><rect x="882.9" y="339.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="885.9" y="350.0">j..</text>
</g>
<g>
<title>java.lang.String (57 samples, 0.93%)</title><rect x="882.9" y="323.0" width="11.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="885.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 1.10%)</title><rect x="893.9" y="323.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.9" y="334.0"></text>
</g>
<g>
<title>byte[] (67 samples, 1.10%)</title><rect x="893.9" y="307.0" width="12.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="896.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (574 samples, 9.40%)</title><rect x="906.8" y="403.0" width="111.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.8" y="414.0">one/nio/http/..</text>
</g>
<g>
<title>one.nio.http.Request (71 samples, 1.16%)</title><rect x="906.8" y="387.0" width="13.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="909.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (203 samples, 3.33%)</title><rect x="920.6" y="387.0" width="39.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.6" y="398.0">one..</text>
</g>
<g>
<title>java.lang.String[] (203 samples, 3.33%)</title><rect x="920.6" y="371.0" width="39.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="923.6" y="382.0">jav..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (300 samples, 4.91%)</title><rect x="959.8" y="387.0" width="58.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.8" y="398.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (300 samples, 4.91%)</title><rect x="959.8" y="371.0" width="58.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.8" y="382.0">one/ni..</text>
</g>
<g>
<title>char[] (179 samples, 2.93%)</title><rect x="959.8" y="355.0" width="34.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="962.8" y="366.0">ch..</text>
</g>
<g>
<title>java.lang.String (46 samples, 0.75%)</title><rect x="994.4" y="355.0" width="8.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="997.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (75 samples, 1.23%)</title><rect x="1003.3" y="355.0" width="14.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (75 samples, 1.23%)</title><rect x="1003.3" y="339.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (75 samples, 1.23%)</title><rect x="1003.3" y="323.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.3" y="334.0"></text>
</g>
<g>
<title>byte[] (75 samples, 1.23%)</title><rect x="1003.3" y="307.0" width="14.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1006.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (84 samples, 1.38%)</title><rect x="1017.8" y="403.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.8" y="414.0"></text>
</g>
<g>
<title>byte[] (84 samples, 1.38%)</title><rect x="1017.8" y="387.0" width="16.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1020.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (89 samples, 1.46%)</title><rect x="1034.0" y="403.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (89 samples, 1.46%)</title><rect x="1034.0" y="387.0" width="17.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (89 samples, 1.46%)</title><rect x="1034.0" y="371.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1037.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.56%)</title><rect x="1034.0" y="355.0" width="6.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1037.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.90%)</title><rect x="1040.6" y="355.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.6" y="366.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.90%)</title><rect x="1040.6" y="339.0" width="10.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1043.6" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (718 samples, 11.76%)</title><rect x="1051.2" y="403.0" width="138.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.2" y="414.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (718 samples, 11.76%)</title><rect x="1051.2" y="387.0" width="138.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.2" y="398.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (379 samples, 6.21%)</title><rect x="1051.2" y="371.0" width="73.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1054.2" y="382.0">char[]</text>
</g>
<g>
<title>java.lang.String (130 samples, 2.13%)</title><rect x="1124.5" y="371.0" width="25.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1127.5" y="382.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (209 samples, 3.42%)</title><rect x="1149.6" y="371.0" width="40.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1152.6" y="382.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (209 samples, 3.42%)</title><rect x="1149.6" y="355.0" width="40.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.6" y="366.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (209 samples, 3.42%)</title><rect x="1149.6" y="339.0" width="40.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.6" y="350.0">jav..</text>
</g>
<g>
<title>byte[] (209 samples, 3.42%)</title><rect x="1149.6" y="323.0" width="40.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1152.6" y="334.0">byt..</text>
</g>
</g>
</svg>
