<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="757"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="757"> </text>
<g id="frames">
<g>
<title>all (39,332 samples, 100.00%)</title><rect x="10.0" y="723.0" width="1180.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="734.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (29,587 samples, 75.22%)</title><rect x="10.1" y="707.0" width="887.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.1" y="718.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (12 samples, 0.03%)</title><rect x="10.1" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.1" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (12 samples, 0.03%)</title><rect x="10.1" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1795587816.linkToTargetMethod (12 samples, 0.03%)</title><rect x="10.1" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1516100839.invoke (12 samples, 0.03%)</title><rect x="10.1" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.03%)</title><rect x="10.1" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (29,575 samples, 75.19%)</title><rect x="10.4" y="691.0" width="887.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.4" y="702.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (29,575 samples, 75.19%)</title><rect x="10.4" y="675.0" width="887.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.4" y="686.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (543 samples, 1.38%)</title><rect x="10.4" y="659.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (543 samples, 1.38%)</title><rect x="10.4" y="643.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (531 samples, 1.35%)</title><rect x="10.4" y="627.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (531 samples, 1.35%)</title><rect x="10.4" y="611.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (531 samples, 1.35%)</title><rect x="10.4" y="595.0" width="16.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (12 samples, 0.03%)</title><rect x="26.4" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (12 samples, 0.03%)</title><rect x="26.4" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (12 samples, 0.03%)</title><rect x="26.4" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (12 samples, 0.03%)</title><rect x="26.4" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (12 samples, 0.03%)</title><rect x="26.4" y="563.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="29.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$66/1557764195.run (28,666 samples, 72.88%)</title><rect x="26.7" y="659.0" width="860.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.7" y="670.0">ru/mail/polis/service/re1nex/BaseService$$Lambda$66/1557764195.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (28,666 samples, 72.88%)</title><rect x="26.7" y="643.0" width="860.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.7" y="654.0">ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (708 samples, 1.80%)</title><rect x="26.7" y="627.0" width="21.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.7" y="638.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (708 samples, 1.80%)</title><rect x="26.7" y="611.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.7" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (708 samples, 1.80%)</title><rect x="26.7" y="595.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.7" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String (440 samples, 1.12%)</title><rect x="26.7" y="579.0" width="13.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="29.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (268 samples, 0.68%)</title><rect x="39.9" y="579.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.9" y="590.0"></text>
</g>
<g>
<title>byte[] (268 samples, 0.68%)</title><rect x="39.9" y="563.0" width="8.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="42.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (7,335 samples, 18.65%)</title><rect x="48.0" y="627.0" width="220.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.0" y="638.0">ru/mail/polis/service/re1nex/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.put (7,335 samples, 18.65%)</title><rect x="48.0" y="611.0" width="220.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.0" y="622.0">ru/mail/polis/service/re1nex/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.put (5,404 samples, 13.74%)</title><rect x="48.0" y="595.0" width="162.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.0" y="606.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (685 samples, 1.74%)</title><rect x="48.0" y="579.0" width="20.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (685 samples, 1.74%)</title><rect x="48.0" y="563.0" width="20.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.0" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (685 samples, 1.74%)</title><rect x="48.0" y="547.0" width="20.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="51.0" y="558.0"></text>
</g>
<g>
<title>one.nio.http.Response (361 samples, 0.92%)</title><rect x="68.5" y="579.0" width="10.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="71.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,447 samples, 3.68%)</title><rect x="79.3" y="579.0" width="43.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.3" y="590.0">one/..</text>
</g>
<g>
<title>byte[] (608 samples, 1.55%)</title><rect x="79.3" y="563.0" width="18.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="82.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (465 samples, 1.18%)</title><rect x="97.6" y="563.0" width="13.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="100.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (374 samples, 0.95%)</title><rect x="111.5" y="563.0" width="11.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="114.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (1,873 samples, 4.76%)</title><rect x="122.7" y="579.0" width="56.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.7" y="590.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (50 samples, 0.13%)</title><rect x="122.7" y="563.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (50 samples, 0.13%)</title><rect x="122.7" y="547.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (50 samples, 0.13%)</title><rect x="122.7" y="531.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.7" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (48 samples, 0.12%)</title><rect x="122.7" y="515.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.7" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (48 samples, 0.12%)</title><rect x="122.7" y="499.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.7" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (25 samples, 0.06%)</title><rect x="122.7" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.7" y="494.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (25 samples, 0.06%)</title><rect x="122.7" y="467.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="125.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (23 samples, 0.06%)</title><rect x="123.5" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (23 samples, 0.06%)</title><rect x="123.5" y="467.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (23 samples, 0.06%)</title><rect x="123.5" y="451.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="126.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (1,823 samples, 4.63%)</title><rect x="124.2" y="563.0" width="54.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.2" y="574.0">ru/ma..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,463 samples, 3.72%)</title><rect x="124.2" y="547.0" width="43.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.2" y="558.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,463 samples, 3.72%)</title><rect x="124.2" y="531.0" width="43.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="127.2" y="542.0">java..</text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (353 samples, 0.90%)</title><rect x="168.3" y="547.0" width="10.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="171.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (1,038 samples, 2.64%)</title><rect x="178.9" y="579.0" width="31.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.9" y="590.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (335 samples, 0.85%)</title><rect x="178.9" y="563.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (335 samples, 0.85%)</title><rect x="178.9" y="547.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (335 samples, 0.85%)</title><rect x="178.9" y="531.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (335 samples, 0.85%)</title><rect x="178.9" y="515.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.9" y="526.0"></text>
</g>
<g>
<title>byte[] (335 samples, 0.85%)</title><rect x="178.9" y="499.0" width="10.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="181.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (703 samples, 1.79%)</title><rect x="189.0" y="563.0" width="21.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.0" y="574.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (703 samples, 1.79%)</title><rect x="189.0" y="547.0" width="21.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.0" y="558.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (703 samples, 1.79%)</title><rect x="189.0" y="531.0" width="21.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="192.0" y="542.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (1,931 samples, 4.91%)</title><rect x="210.1" y="595.0" width="57.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.1" y="606.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,931 samples, 4.91%)</title><rect x="210.1" y="579.0" width="57.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.1" y="590.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,931 samples, 4.91%)</title><rect x="210.1" y="563.0" width="57.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.1" y="574.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,312 samples, 3.34%)</title><rect x="210.1" y="547.0" width="39.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.1" y="558.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,312 samples, 3.34%)</title><rect x="210.1" y="531.0" width="39.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.1" y="542.0">one..</text>
</g>
<g>
<title>byte[] (1,312 samples, 3.34%)</title><rect x="210.1" y="515.0" width="39.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="213.1" y="526.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (619 samples, 1.57%)</title><rect x="249.4" y="547.0" width="18.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.4" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (619 samples, 1.57%)</title><rect x="249.4" y="531.0" width="18.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="252.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.sendReplica (20,623 samples, 52.43%)</title><rect x="268.0" y="627.0" width="618.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="271.0" y="638.0">ru/mail/polis/service/re1nex/ApiControllerImpl.sendReplica</text>
</g>
<g>
<title>one.nio.http.Request (84 samples, 0.21%)</title><rect x="268.0" y="611.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="271.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (57 samples, 0.14%)</title><rect x="270.5" y="611.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (57 samples, 0.14%)</title><rect x="270.5" y="595.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="273.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (20,482 samples, 52.07%)</title><rect x="272.2" y="611.0" width="614.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.2" y="622.0">ru/mail/polis/service/re1nex/ApiController.sendReplica</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (1,456 samples, 3.70%)</title><rect x="272.2" y="595.0" width="43.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.2" y="606.0">ru/m..</text>
</g>
<g>
<title>byte[] (37 samples, 0.09%)</title><rect x="272.2" y="579.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="275.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (19 samples, 0.05%)</title><rect x="273.6" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (19 samples, 0.05%)</title><rect x="273.6" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.6" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (19 samples, 0.05%)</title><rect x="273.6" y="547.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="276.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (34 samples, 0.09%)</title><rect x="274.2" y="579.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.2" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (34 samples, 0.09%)</title><rect x="274.2" y="563.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="277.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (688 samples, 1.75%)</title><rect x="275.2" y="579.0" width="20.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.2" y="590.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (10 samples, 0.03%)</title><rect x="275.2" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.2" y="574.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (10 samples, 0.03%)</title><rect x="275.2" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.2" y="558.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (10 samples, 0.03%)</title><rect x="275.2" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.2" y="542.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="275.2" y="515.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="278.2" y="526.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (678 samples, 1.72%)</title><rect x="275.5" y="563.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.5" y="574.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (678 samples, 1.72%)</title><rect x="275.5" y="547.0" width="20.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.5" y="558.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (678 samples, 1.72%)</title><rect x="275.5" y="531.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.5" y="542.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (648 samples, 1.65%)</title><rect x="275.5" y="515.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.5" y="526.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (642 samples, 1.63%)</title><rect x="275.5" y="499.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.5" y="510.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (642 samples, 1.63%)</title><rect x="275.5" y="483.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Class[] (20 samples, 0.05%)</title><rect x="275.5" y="467.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="278.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.12%)</title><rect x="276.1" y="467.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="279.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (185 samples, 0.47%)</title><rect x="277.5" y="467.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (185 samples, 0.47%)</title><rect x="277.5" y="451.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.5" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (185 samples, 0.47%)</title><rect x="277.5" y="435.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.5" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (185 samples, 0.47%)</title><rect x="277.5" y="419.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.5" y="430.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (185 samples, 0.47%)</title><rect x="277.5" y="403.0" width="5.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="280.5" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (391 samples, 0.99%)</title><rect x="283.0" y="467.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (391 samples, 0.99%)</title><rect x="283.0" y="451.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (391 samples, 0.99%)</title><rect x="283.0" y="435.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.0" y="446.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (213 samples, 0.54%)</title><rect x="283.0" y="419.0" width="6.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="286.0" y="430.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (178 samples, 0.45%)</title><rect x="289.4" y="419.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.4" y="430.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (178 samples, 0.45%)</title><rect x="289.4" y="403.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.4" y="414.0"></text>
</g>
<g>
<title>int[] (89 samples, 0.23%)</title><rect x="289.4" y="387.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="292.4" y="398.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (89 samples, 0.23%)</title><rect x="292.1" y="387.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.1" y="398.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.23%)</title><rect x="292.1" y="371.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="295.1" y="382.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (30 samples, 0.08%)</title><rect x="294.9" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.9" y="526.0"></text>
</g>
<g>
<title>java/security/Provider.getService (30 samples, 0.08%)</title><rect x="294.9" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (30 samples, 0.08%)</title><rect x="294.9" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.9" y="494.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (30 samples, 0.08%)</title><rect x="294.9" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.08%)</title><rect x="294.9" y="451.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="297.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (670 samples, 1.70%)</title><rect x="295.8" y="579.0" width="20.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.8" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (246 samples, 0.63%)</title><rect x="295.8" y="563.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.8" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (51 samples, 0.13%)</title><rect x="295.8" y="547.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="298.8" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (195 samples, 0.50%)</title><rect x="297.3" y="547.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (120 samples, 0.31%)</title><rect x="297.3" y="531.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (120 samples, 0.31%)</title><rect x="297.3" y="515.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="300.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (75 samples, 0.19%)</title><rect x="300.9" y="531.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (75 samples, 0.19%)</title><rect x="300.9" y="515.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="303.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (37 samples, 0.09%)</title><rect x="303.3" y="563.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.3" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (37 samples, 0.09%)</title><rect x="303.3" y="547.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="306.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (383 samples, 0.97%)</title><rect x="304.4" y="563.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (383 samples, 0.97%)</title><rect x="304.4" y="547.0" width="11.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (383 samples, 0.97%)</title><rect x="304.4" y="531.0" width="11.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="307.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (18,999 samples, 48.30%)</title><rect x="315.9" y="595.0" width="570.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.9" y="606.0">ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.07%)</title><rect x="315.9" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.07%)</title><rect x="315.9" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl$$Lambda$80/1397497046.get$Lambda (26 samples, 0.07%)</title><rect x="315.9" y="547.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.9" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ApiControllerImpl$$Lambda$80 (26 samples, 0.07%)</title><rect x="315.9" y="531.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="318.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (18,836 samples, 47.89%)</title><rect x="316.7" y="579.0" width="565.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.7" y="590.0">ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses</text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.05%)</title><rect x="316.7" y="563.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="319.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (45 samples, 0.11%)</title><rect x="317.3" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (45 samples, 0.11%)</title><rect x="317.3" y="547.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (45 samples, 0.11%)</title><rect x="317.3" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (45 samples, 0.11%)</title><rect x="317.3" y="515.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.11%)</title><rect x="317.3" y="499.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (45 samples, 0.11%)</title><rect x="317.3" y="483.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="320.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (11 samples, 0.03%)</title><rect x="318.7" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (11 samples, 0.03%)</title><rect x="318.7" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (11 samples, 0.03%)</title><rect x="318.7" y="531.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="321.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl$$Lambda$80/1397497046.handleLocalResponse (259 samples, 0.66%)</title><rect x="319.0" y="563.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.lambda$handleResponses$2 (259 samples, 0.66%)</title><rect x="319.0" y="547.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.put (259 samples, 0.66%)</title><rect x="319.0" y="531.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 0.11%)</title><rect x="319.0" y="515.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 0.11%)</title><rect x="319.0" y="499.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.0" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 0.11%)</title><rect x="319.0" y="483.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="322.0" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Response (26 samples, 0.07%)</title><rect x="320.4" y="515.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="323.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (48 samples, 0.12%)</title><rect x="321.1" y="515.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.1" y="526.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.03%)</title><rect x="321.1" y="499.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="324.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.04%)</title><rect x="321.5" y="499.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="324.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.05%)</title><rect x="322.0" y="499.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="325.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (74 samples, 0.19%)</title><rect x="322.6" y="515.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (72 samples, 0.18%)</title><rect x="322.6" y="499.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (56 samples, 0.14%)</title><rect x="322.6" y="483.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.6" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56 samples, 0.14%)</title><rect x="322.6" y="467.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="325.6" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (16 samples, 0.04%)</title><rect x="324.3" y="483.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="327.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (66 samples, 0.17%)</title><rect x="324.8" y="515.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="327.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (22 samples, 0.06%)</title><rect x="324.8" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (22 samples, 0.06%)</title><rect x="324.8" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (22 samples, 0.06%)</title><rect x="324.8" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.06%)</title><rect x="324.8" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.8" y="462.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.06%)</title><rect x="324.8" y="435.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="327.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.11%)</title><rect x="325.5" y="499.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.11%)</title><rect x="325.5" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.5" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.11%)</title><rect x="325.5" y="467.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="328.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.proxy (18,500 samples, 47.04%)</title><rect x="326.8" y="563.0" width="555.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.8" y="574.0">ru/mail/polis/service/re1nex/ApiControllerImpl.proxy</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18,500 samples, 47.04%)</title><rect x="326.8" y="547.0" width="555.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.8" y="558.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18,500 samples, 47.04%)</title><rect x="326.8" y="531.0" width="555.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.8" y="542.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (121 samples, 0.31%)</title><rect x="326.8" y="515.0" width="3.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="329.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (17,625 samples, 44.81%)</title><rect x="330.4" y="515.0" width="528.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.4" y="526.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (3,679 samples, 9.35%)</title><rect x="330.4" y="499.0" width="110.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="333.4" y="510.0">byte[]</text>
</g>
<g>
<title>byte[] (13,946 samples, 35.46%)</title><rect x="440.8" y="499.0" width="418.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="443.8" y="510.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (485 samples, 1.23%)</title><rect x="859.2" y="515.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.11%)</title><rect x="859.4" y="499.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.11%)</title><rect x="859.4" y="483.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.06%)</title><rect x="859.4" y="467.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="862.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.05%)</title><rect x="860.0" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.0" y="478.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.05%)</title><rect x="860.0" y="451.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="863.0" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.06%)</title><rect x="860.7" y="499.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="863.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (358 samples, 0.91%)</title><rect x="861.3" y="499.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (358 samples, 0.91%)</title><rect x="861.3" y="483.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="864.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (358 samples, 0.91%)</title><rect x="861.3" y="467.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.3" y="478.0"></text>
</g>
<g>
<title>char[] (230 samples, 0.58%)</title><rect x="861.3" y="451.0" width="6.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="864.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.15%)</title><rect x="868.2" y="451.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="871.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (68 samples, 0.17%)</title><rect x="870.0" y="451.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (68 samples, 0.17%)</title><rect x="870.0" y="435.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (68 samples, 0.17%)</title><rect x="870.0" y="419.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="873.0" y="430.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.17%)</title><rect x="870.0" y="403.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="873.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (21 samples, 0.05%)</title><rect x="872.1" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.05%)</title><rect x="872.1" y="483.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="875.1" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (34 samples, 0.09%)</title><rect x="872.7" y="499.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.09%)</title><rect x="872.7" y="483.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.09%)</title><rect x="872.7" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.04%)</title><rect x="872.7" y="451.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="875.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.05%)</title><rect x="873.2" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.2" y="462.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.05%)</title><rect x="873.2" y="435.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="876.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (230 samples, 0.58%)</title><rect x="873.7" y="515.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.7" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (230 samples, 0.58%)</title><rect x="873.7" y="499.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.7" y="510.0"></text>
</g>
<g>
<title>byte[] (230 samples, 0.58%)</title><rect x="873.7" y="483.0" width="6.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="876.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (26 samples, 0.07%)</title><rect x="880.6" y="515.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.07%)</title><rect x="880.6" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.07%)</title><rect x="880.6" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="883.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.03%)</title><rect x="880.6" y="467.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="883.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.04%)</title><rect x="881.0" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.0" y="478.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.04%)</title><rect x="881.0" y="451.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="884.0" y="462.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (13 samples, 0.03%)</title><rect x="881.4" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.4" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (13 samples, 0.03%)</title><rect x="881.4" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (13 samples, 0.03%)</title><rect x="881.4" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (13 samples, 0.03%)</title><rect x="881.4" y="467.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="884.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (65 samples, 0.17%)</title><rect x="881.8" y="579.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (65 samples, 0.17%)</title><rect x="881.8" y="563.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="884.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (65 samples, 0.17%)</title><rect x="881.8" y="547.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (41 samples, 0.10%)</title><rect x="881.8" y="531.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (41 samples, 0.10%)</title><rect x="881.8" y="515.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.8" y="526.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.10%)</title><rect x="881.8" y="499.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="884.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (24 samples, 0.06%)</title><rect x="883.0" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.0" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (24 samples, 0.06%)</title><rect x="883.0" y="515.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="886.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergePutDeleteResponses (72 samples, 0.18%)</title><rect x="883.7" y="579.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="886.7" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.03%)</title><rect x="883.7" y="563.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="886.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (59 samples, 0.15%)</title><rect x="884.1" y="563.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.1" y="574.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.09%)</title><rect x="884.1" y="547.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="887.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.03%)</title><rect x="885.2" y="547.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="888.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="885.5" y="547.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="888.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (27 samples, 0.07%)</title><rect x="885.9" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (27 samples, 0.07%)</title><rect x="885.9" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (27 samples, 0.07%)</title><rect x="885.9" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (27 samples, 0.07%)</title><rect x="885.9" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.07%)</title><rect x="885.9" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.9" y="542.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.07%)</title><rect x="885.9" y="515.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="888.9" y="526.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (366 samples, 0.93%)</title><rect x="886.7" y="659.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.7" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (366 samples, 0.93%)</title><rect x="886.7" y="643.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.7" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$126/132876114.run (366 samples, 0.93%)</title><rect x="886.7" y="627.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.7" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (366 samples, 0.93%)</title><rect x="886.7" y="611.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.7" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (366 samples, 0.93%)</title><rect x="886.7" y="595.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.7" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (366 samples, 0.93%)</title><rect x="886.7" y="579.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.7" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (360 samples, 0.92%)</title><rect x="886.9" y="563.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.9" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (345 samples, 0.88%)</title><rect x="886.9" y="547.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.9" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (345 samples, 0.88%)</title><rect x="886.9" y="531.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.9" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (345 samples, 0.88%)</title><rect x="886.9" y="515.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.9" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (345 samples, 0.88%)</title><rect x="886.9" y="499.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (222 samples, 0.56%)</title><rect x="887.0" y="483.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="890.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (222 samples, 0.56%)</title><rect x="887.0" y="467.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor43.invoke (221 samples, 0.56%)</title><rect x="887.0" y="451.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.0" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (221 samples, 0.56%)</title><rect x="887.0" y="435.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.0" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (201 samples, 0.51%)</title><rect x="887.0" y="419.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.0" y="430.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (201 samples, 0.51%)</title><rect x="887.0" y="403.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.0" y="414.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (201 samples, 0.51%)</title><rect x="887.0" y="387.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.0" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (201 samples, 0.51%)</title><rect x="887.0" y="371.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.0" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (201 samples, 0.51%)</title><rect x="887.0" y="355.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.0" y="366.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (201 samples, 0.51%)</title><rect x="887.0" y="339.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.0" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (201 samples, 0.51%)</title><rect x="887.0" y="323.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.0" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (201 samples, 0.51%)</title><rect x="887.0" y="307.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.0" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (201 samples, 0.51%)</title><rect x="887.0" y="291.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.0" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (201 samples, 0.51%)</title><rect x="887.0" y="275.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.0" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (201 samples, 0.51%)</title><rect x="887.0" y="259.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.0" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (201 samples, 0.51%)</title><rect x="887.0" y="243.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.0" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (201 samples, 0.51%)</title><rect x="887.0" y="227.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.0" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (183 samples, 0.47%)</title><rect x="887.0" y="211.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.0" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (183 samples, 0.47%)</title><rect x="887.0" y="195.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.0" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (183 samples, 0.47%)</title><rect x="887.0" y="179.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.0" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (183 samples, 0.47%)</title><rect x="887.0" y="163.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.0" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (68 samples, 0.17%)</title><rect x="887.0" y="147.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.0" y="158.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (57 samples, 0.14%)</title><rect x="887.0" y="131.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.0" y="142.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (55 samples, 0.14%)</title><rect x="887.0" y="115.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.0" y="126.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (55 samples, 0.14%)</title><rect x="887.0" y="99.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.0" y="110.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (37 samples, 0.09%)</title><rect x="887.2" y="83.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.2" y="94.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (34 samples, 0.09%)</title><rect x="887.3" y="67.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.3" y="78.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.07%)</title><rect x="887.5" y="51.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.5" y="62.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (26 samples, 0.07%)</title><rect x="887.5" y="35.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="890.5" y="46.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (10 samples, 0.03%)</title><rect x="888.3" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.3" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.03%)</title><rect x="888.3" y="67.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="891.3" y="78.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (11 samples, 0.03%)</title><rect x="888.7" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.7" y="142.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (61 samples, 0.16%)</title><rect x="889.3" y="147.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.3" y="158.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (58 samples, 0.15%)</title><rect x="889.4" y="131.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="892.4" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (54 samples, 0.14%)</title><rect x="889.5" y="115.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.5" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (54 samples, 0.14%)</title><rect x="889.5" y="99.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="892.5" y="110.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (43 samples, 0.11%)</title><rect x="891.2" y="147.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.10%)</title><rect x="891.2" y="131.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="894.2" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (18 samples, 0.05%)</title><rect x="892.4" y="211.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="895.4" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 0.05%)</title><rect x="892.4" y="195.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="895.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 0.05%)</title><rect x="892.4" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="895.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor6.invoke (18 samples, 0.05%)</title><rect x="892.4" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.4" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (18 samples, 0.05%)</title><rect x="892.4" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="895.4" y="158.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 0.05%)</title><rect x="892.4" y="131.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 0.05%)</title><rect x="892.4" y="115.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor48.invoke (18 samples, 0.05%)</title><rect x="892.4" y="99.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="895.4" y="110.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (18 samples, 0.05%)</title><rect x="892.4" y="83.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.4" y="94.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (18 samples, 0.05%)</title><rect x="892.4" y="67.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.4" y="78.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (18 samples, 0.05%)</title><rect x="893.0" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.0" y="430.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (12 samples, 0.03%)</title><rect x="893.2" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.2" y="414.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (12 samples, 0.03%)</title><rect x="893.2" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.2" y="398.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (100 samples, 0.25%)</title><rect x="893.6" y="483.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (100 samples, 0.25%)</title><rect x="893.6" y="467.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.6" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (100 samples, 0.25%)</title><rect x="893.6" y="451.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="896.6" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (99 samples, 0.25%)</title><rect x="893.6" y="435.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.6" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (99 samples, 0.25%)</title><rect x="893.6" y="419.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.6" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (96 samples, 0.24%)</title><rect x="893.6" y="403.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (96 samples, 0.24%)</title><rect x="893.6" y="387.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="896.6" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (96 samples, 0.24%)</title><rect x="893.6" y="371.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.6" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (94 samples, 0.24%)</title><rect x="893.7" y="355.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.7" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (92 samples, 0.23%)</title><rect x="893.7" y="339.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (89 samples, 0.23%)</title><rect x="893.8" y="323.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (84 samples, 0.21%)</title><rect x="893.9" y="307.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.9" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (80 samples, 0.20%)</title><rect x="894.0" y="291.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (80 samples, 0.20%)</title><rect x="894.0" y="275.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor35.invoke (80 samples, 0.20%)</title><rect x="894.0" y="259.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (80 samples, 0.20%)</title><rect x="894.0" y="243.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.0" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (77 samples, 0.20%)</title><rect x="894.1" y="227.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (77 samples, 0.20%)</title><rect x="894.1" y="211.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.1" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (44 samples, 0.11%)</title><rect x="894.1" y="195.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (16 samples, 0.04%)</title><rect x="894.1" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.1" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (16 samples, 0.04%)</title><rect x="894.1" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.1" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.03%)</title><rect x="894.2" y="147.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="897.2" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (28 samples, 0.07%)</title><rect x="894.6" y="179.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.6" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (25 samples, 0.06%)</title><rect x="894.6" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.6" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (20 samples, 0.05%)</title><rect x="894.7" y="147.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.7" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (20 samples, 0.05%)</title><rect x="894.7" y="131.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.7" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (19 samples, 0.05%)</title><rect x="894.8" y="115.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="897.8" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (16 samples, 0.04%)</title><rect x="894.8" y="99.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.8" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (12 samples, 0.03%)</title><rect x="894.9" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.9" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (10 samples, 0.03%)</title><rect x="894.9" y="67.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.9" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (11 samples, 0.03%)</title><rect x="895.4" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.4" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (11 samples, 0.03%)</title><rect x="895.4" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.4" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (11 samples, 0.03%)</title><rect x="895.4" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.4" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (9 samples, 0.02%)</title><rect x="895.5" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.5" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (22 samples, 0.06%)</title><rect x="895.8" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.8" y="206.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (22 samples, 0.06%)</title><rect x="895.8" y="179.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="898.8" y="190.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (14 samples, 0.04%)</title><rect x="896.9" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.9" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (13 samples, 0.03%)</title><rect x="896.9" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.9" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (13 samples, 0.03%)</title><rect x="896.9" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.9" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (13 samples, 0.03%)</title><rect x="896.9" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.9" y="446.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (13 samples, 0.03%)</title><rect x="896.9" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (12 samples, 0.03%)</title><rect x="896.9" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.9" y="414.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (14 samples, 0.04%)</title><rect x="897.3" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.3" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (13 samples, 0.03%)</title><rect x="897.3" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.3" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (13 samples, 0.03%)</title><rect x="897.3" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="900.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (13 samples, 0.03%)</title><rect x="897.3" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (10 samples, 0.03%)</title><rect x="897.3" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.3" y="494.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,743 samples, 24.77%)</title><rect x="897.7" y="707.0" width="292.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.7" y="718.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (328 samples, 0.83%)</title><rect x="897.7" y="691.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.7" y="702.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (328 samples, 0.83%)</title><rect x="897.7" y="675.0" width="9.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="900.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9,415 samples, 23.94%)</title><rect x="907.5" y="691.0" width="282.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.5" y="702.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,415 samples, 23.94%)</title><rect x="907.5" y="675.0" width="282.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.5" y="686.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,415 samples, 23.94%)</title><rect x="907.5" y="659.0" width="282.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.5" y="670.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,736 samples, 4.41%)</title><rect x="907.5" y="643.0" width="52.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.5" y="654.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,736 samples, 4.41%)</title><rect x="907.5" y="627.0" width="52.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.5" y="638.0">one/n..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (1,039 samples, 2.64%)</title><rect x="907.5" y="611.0" width="31.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.5" y="622.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (582 samples, 1.48%)</title><rect x="907.5" y="595.0" width="17.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (582 samples, 1.48%)</title><rect x="907.5" y="579.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (582 samples, 1.48%)</title><rect x="907.5" y="563.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (582 samples, 1.48%)</title><rect x="907.5" y="547.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (302 samples, 0.77%)</title><rect x="907.5" y="531.0" width="9.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="910.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (280 samples, 0.71%)</title><rect x="916.6" y="531.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.6" y="542.0"></text>
</g>
<g>
<title>byte[] (280 samples, 0.71%)</title><rect x="916.6" y="515.0" width="8.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="919.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.handleRequest (457 samples, 1.16%)</title><rect x="925.0" y="595.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="928.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (457 samples, 1.16%)</title><rect x="925.0" y="579.0" width="13.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1491474208.linkToTargetMethod (410 samples, 1.04%)</title><rect x="925.0" y="563.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (410 samples, 1.04%)</title><rect x="925.0" y="547.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$66/1557764195.get$Lambda (410 samples, 1.04%)</title><rect x="925.0" y="531.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.0" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$66 (410 samples, 1.04%)</title><rect x="925.0" y="515.0" width="12.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="928.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (47 samples, 0.12%)</title><rect x="937.3" y="563.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.3" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (38 samples, 0.10%)</title><rect x="937.3" y="547.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.3" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (38 samples, 0.10%)</title><rect x="937.3" y="531.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="940.3" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (38 samples, 0.10%)</title><rect x="937.3" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.3" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (36 samples, 0.09%)</title><rect x="937.3" y="499.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.3" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (36 samples, 0.09%)</title><rect x="937.3" y="483.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="940.3" y="494.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (36 samples, 0.09%)</title><rect x="937.3" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="940.3" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (36 samples, 0.09%)</title><rect x="937.3" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.3" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (36 samples, 0.09%)</title><rect x="937.3" y="435.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="940.3" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (36 samples, 0.09%)</title><rect x="937.3" y="419.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.3" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (36 samples, 0.09%)</title><rect x="937.3" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="940.3" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (29 samples, 0.07%)</title><rect x="937.3" y="387.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.3" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (29 samples, 0.07%)</title><rect x="937.3" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.3" y="382.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (20 samples, 0.05%)</title><rect x="937.3" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.3" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (20 samples, 0.05%)</title><rect x="937.3" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="940.3" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (14 samples, 0.04%)</title><rect x="937.3" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="940.3" y="334.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (14 samples, 0.04%)</title><rect x="937.3" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="940.3" y="318.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (14 samples, 0.04%)</title><rect x="937.3" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="940.3" y="302.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (14 samples, 0.04%)</title><rect x="937.3" y="275.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (9 samples, 0.02%)</title><rect x="937.3" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (697 samples, 1.77%)</title><rect x="938.7" y="611.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (697 samples, 1.77%)</title><rect x="938.7" y="595.0" width="20.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (697 samples, 1.77%)</title><rect x="938.7" y="579.0" width="20.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.7" y="590.0"></text>
</g>
<g>
<title>java.lang.String (360 samples, 0.92%)</title><rect x="938.7" y="563.0" width="10.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="941.7" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (337 samples, 0.86%)</title><rect x="949.5" y="563.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="952.5" y="574.0"></text>
</g>
<g>
<title>byte[] (337 samples, 0.86%)</title><rect x="949.5" y="547.0" width="10.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="952.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,221 samples, 8.19%)</title><rect x="959.6" y="643.0" width="96.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.6" y="654.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (525 samples, 1.33%)</title><rect x="959.6" y="627.0" width="15.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="962.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,083 samples, 2.75%)</title><rect x="975.4" y="627.0" width="32.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="978.4" y="638.0">on..</text>
</g>
<g>
<title>java.lang.String[] (1,078 samples, 2.74%)</title><rect x="975.4" y="611.0" width="32.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="978.4" y="622.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,613 samples, 4.10%)</title><rect x="1007.9" y="627.0" width="48.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.9" y="638.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,613 samples, 4.10%)</title><rect x="1007.9" y="611.0" width="48.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.9" y="622.0">one/..</text>
</g>
<g>
<title>char[] (900 samples, 2.29%)</title><rect x="1007.9" y="595.0" width="27.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1010.9" y="606.0">c..</text>
</g>
<g>
<title>java.lang.String (282 samples, 0.72%)</title><rect x="1034.9" y="595.0" width="8.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1037.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (431 samples, 1.10%)</title><rect x="1043.3" y="595.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (431 samples, 1.10%)</title><rect x="1043.3" y="579.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (431 samples, 1.10%)</title><rect x="1043.3" y="563.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1046.3" y="574.0"></text>
</g>
<g>
<title>byte[] (431 samples, 1.10%)</title><rect x="1043.3" y="547.0" width="13.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1046.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (388 samples, 0.99%)</title><rect x="1056.3" y="643.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.3" y="654.0"></text>
</g>
<g>
<title>byte[] (388 samples, 0.99%)</title><rect x="1056.3" y="627.0" width="11.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1059.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (581 samples, 1.48%)</title><rect x="1067.9" y="643.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (581 samples, 1.48%)</title><rect x="1067.9" y="627.0" width="17.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (581 samples, 1.48%)</title><rect x="1067.9" y="611.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String (284 samples, 0.72%)</title><rect x="1067.9" y="595.0" width="8.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1070.9" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (297 samples, 0.76%)</title><rect x="1076.4" y="595.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.4" y="606.0"></text>
</g>
<g>
<title>byte[] (297 samples, 0.76%)</title><rect x="1076.4" y="579.0" width="8.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1079.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,489 samples, 8.87%)</title><rect x="1085.3" y="643.0" width="104.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.3" y="654.0">one/nio/util..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,489 samples, 8.87%)</title><rect x="1085.3" y="627.0" width="104.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.3" y="638.0">one/nio/util..</text>
</g>
<g>
<title>char[] (1,632 samples, 4.15%)</title><rect x="1085.3" y="611.0" width="49.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1088.3" y="622.0">char[]</text>
</g>
<g>
<title>java.lang.String (716 samples, 1.82%)</title><rect x="1134.3" y="611.0" width="21.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1137.3" y="622.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,141 samples, 2.90%)</title><rect x="1155.8" y="611.0" width="34.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.8" y="622.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,141 samples, 2.90%)</title><rect x="1155.8" y="595.0" width="34.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1158.8" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,141 samples, 2.90%)</title><rect x="1155.8" y="579.0" width="34.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.8" y="590.0">ja..</text>
</g>
<g>
<title>byte[] (1,141 samples, 2.90%)</title><rect x="1155.8" y="563.0" width="34.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1158.8" y="574.0">by..</text>
</g>
</g>
</svg>
