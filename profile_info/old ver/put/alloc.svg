<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="421"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="421"> </text>
<g id="frames">
<g>
<title>all (28,934 samples, 100.00%)</title><rect x="10.0" y="387.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="398.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (18,185 samples, 62.85%)</title><rect x="10.0" y="371.0" width="741.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18,185 samples, 62.85%)</title><rect x="10.0" y="355.0" width="741.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18,185 samples, 62.85%)</title><rect x="10.0" y="339.0" width="741.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (598 samples, 2.07%)</title><rect x="10.0" y="323.0" width="24.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (598 samples, 2.07%)</title><rect x="10.0" y="307.0" width="24.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (588 samples, 2.03%)</title><rect x="10.0" y="291.0" width="24.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="302.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (588 samples, 2.03%)</title><rect x="10.0" y="275.0" width="24.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="286.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (588 samples, 2.03%)</title><rect x="10.0" y="259.0" width="24.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.0" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (10 samples, 0.03%)</title><rect x="34.0" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (10 samples, 0.03%)</title><rect x="34.0" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (10 samples, 0.03%)</title><rect x="34.0" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (10 samples, 0.03%)</title><rect x="34.0" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (10 samples, 0.03%)</title><rect x="34.0" y="227.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="37.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$67/856457076.run (17,587 samples, 60.78%)</title><rect x="34.4" y="323.0" width="717.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.4" y="334.0">ru/mail/polis/service/re1nex/BaseService$$Lambda$67/856457076.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (17,587 samples, 60.78%)</title><rect x="34.4" y="307.0" width="717.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.4" y="318.0">ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (722 samples, 2.50%)</title><rect x="34.4" y="291.0" width="29.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.4" y="302.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (722 samples, 2.50%)</title><rect x="34.4" y="275.0" width="29.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.4" y="286.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (722 samples, 2.50%)</title><rect x="34.4" y="259.0" width="29.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.4" y="270.0">ja..</text>
</g>
<g>
<title>java.lang.String (460 samples, 1.59%)</title><rect x="34.4" y="243.0" width="18.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="37.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (262 samples, 0.91%)</title><rect x="53.1" y="243.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.1" y="254.0"></text>
</g>
<g>
<title>byte[] (262 samples, 0.91%)</title><rect x="53.1" y="227.0" width="10.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="56.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (8,569 samples, 29.62%)</title><rect x="63.8" y="291.0" width="349.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.8" y="302.0">ru/mail/polis/service/re1nex/ApiController.hand..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.put (8,569 samples, 29.62%)</title><rect x="63.8" y="275.0" width="349.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.8" y="286.0">ru/mail/polis/service/re1nex/ApiControllerImpl...</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.put (6,524 samples, 22.55%)</title><rect x="63.8" y="259.0" width="266.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.8" y="270.0">ru/mail/polis/service/re1nex/ApiCont..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (822 samples, 2.84%)</title><rect x="63.8" y="243.0" width="33.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.8" y="254.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (822 samples, 2.84%)</title><rect x="63.8" y="227.0" width="33.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.8" y="238.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (822 samples, 2.84%)</title><rect x="63.8" y="211.0" width="33.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="66.8" y="222.0">ja..</text>
</g>
<g>
<title>one.nio.http.Response (396 samples, 1.37%)</title><rect x="97.4" y="243.0" width="16.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="100.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,609 samples, 5.56%)</title><rect x="113.5" y="243.0" width="65.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.5" y="254.0">one/nio..</text>
</g>
<g>
<title>byte[] (681 samples, 2.35%)</title><rect x="113.5" y="227.0" width="27.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="116.5" y="238.0">b..</text>
</g>
<g>
<title>java.lang.String[] (543 samples, 1.88%)</title><rect x="141.3" y="227.0" width="22.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="144.3" y="238.0">j..</text>
</g>
<g>
<title>java.lang.String (385 samples, 1.33%)</title><rect x="163.4" y="227.0" width="15.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="166.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (2,424 samples, 8.38%)</title><rect x="179.1" y="243.0" width="98.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.1" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (78 samples, 0.27%)</title><rect x="179.1" y="227.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (78 samples, 0.27%)</title><rect x="179.1" y="211.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (78 samples, 0.27%)</title><rect x="179.1" y="195.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (74 samples, 0.26%)</title><rect x="179.1" y="179.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.1" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (74 samples, 0.26%)</title><rect x="179.1" y="163.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.1" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (52 samples, 0.18%)</title><rect x="179.1" y="147.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.1" y="158.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (52 samples, 0.18%)</title><rect x="179.1" y="131.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="182.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (22 samples, 0.08%)</title><rect x="181.2" y="147.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (22 samples, 0.08%)</title><rect x="181.2" y="131.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (22 samples, 0.08%)</title><rect x="181.2" y="115.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="184.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (2,346 samples, 8.11%)</title><rect x="182.3" y="227.0" width="95.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.3" y="238.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,653 samples, 5.71%)</title><rect x="182.3" y="211.0" width="67.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.3" y="222.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,653 samples, 5.71%)</title><rect x="182.3" y="195.0" width="67.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="185.3" y="206.0">java.ni..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (316 samples, 1.09%)</title><rect x="249.7" y="211.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (316 samples, 1.09%)</title><rect x="249.7" y="195.0" width="12.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (108 samples, 0.37%)</title><rect x="249.7" y="179.0" width="4.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="252.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (208 samples, 0.72%)</title><rect x="254.1" y="179.0" width="8.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="257.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (377 samples, 1.30%)</title><rect x="262.6" y="211.0" width="15.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="265.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (1,273 samples, 4.40%)</title><rect x="278.0" y="243.0" width="51.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.0" y="254.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (532 samples, 1.84%)</title><rect x="278.0" y="227.0" width="21.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.0" y="238.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (532 samples, 1.84%)</title><rect x="278.0" y="211.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.0" y="222.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (532 samples, 1.84%)</title><rect x="278.0" y="195.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.0" y="206.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (532 samples, 1.84%)</title><rect x="278.0" y="179.0" width="21.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.0" y="190.0">j..</text>
</g>
<g>
<title>byte[] (532 samples, 1.84%)</title><rect x="278.0" y="163.0" width="21.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="281.0" y="174.0">b..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (741 samples, 2.56%)</title><rect x="299.7" y="227.0" width="30.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.7" y="238.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (741 samples, 2.56%)</title><rect x="299.7" y="211.0" width="30.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.7" y="222.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (741 samples, 2.56%)</title><rect x="299.7" y="195.0" width="30.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="302.7" y="206.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (2,045 samples, 7.07%)</title><rect x="329.9" y="259.0" width="83.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.9" y="270.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,045 samples, 7.07%)</title><rect x="329.9" y="243.0" width="83.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.9" y="254.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,045 samples, 7.07%)</title><rect x="329.9" y="227.0" width="83.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.9" y="238.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,410 samples, 4.87%)</title><rect x="329.9" y="211.0" width="57.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.9" y="222.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,410 samples, 4.87%)</title><rect x="329.9" y="195.0" width="57.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.9" y="206.0">one/ni..</text>
</g>
<g>
<title>byte[] (1,408 samples, 4.87%)</title><rect x="329.9" y="179.0" width="57.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="332.9" y="190.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (635 samples, 2.19%)</title><rect x="387.4" y="211.0" width="25.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.4" y="222.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (635 samples, 2.19%)</title><rect x="387.4" y="195.0" width="25.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="390.4" y="206.0">o..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.sendReplica (8,296 samples, 28.67%)</title><rect x="413.3" y="291.0" width="338.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.3" y="302.0">ru/mail/polis/service/re1nex/ApiControllerImpl..</text>
</g>
<g>
<title>one.nio.http.Request (37 samples, 0.13%)</title><rect x="413.3" y="275.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="416.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.03%)</title><rect x="414.8" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.8" y="286.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.03%)</title><rect x="414.8" y="259.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="417.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (8,249 samples, 28.51%)</title><rect x="415.2" y="275.0" width="336.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.2" y="286.0">ru/mail/polis/service/re1nex/ApiController.sen..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (293 samples, 1.01%)</title><rect x="415.2" y="259.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (21 samples, 0.07%)</title><rect x="415.7" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="418.7" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (21 samples, 0.07%)</title><rect x="415.7" y="227.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.7" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (21 samples, 0.07%)</title><rect x="415.7" y="211.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="418.7" y="222.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (17 samples, 0.06%)</title><rect x="416.6" y="243.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.6" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (17 samples, 0.06%)</title><rect x="416.6" y="227.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="419.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (204 samples, 0.71%)</title><rect x="417.3" y="243.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.3" y="254.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (25 samples, 0.09%)</title><rect x="417.3" y="227.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.3" y="238.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (25 samples, 0.09%)</title><rect x="417.3" y="211.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.3" y="222.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (25 samples, 0.09%)</title><rect x="417.3" y="195.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.3" y="206.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.09%)</title><rect x="417.3" y="179.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="420.3" y="190.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (179 samples, 0.62%)</title><rect x="418.3" y="227.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.3" y="238.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (179 samples, 0.62%)</title><rect x="418.3" y="211.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.3" y="222.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (179 samples, 0.62%)</title><rect x="418.3" y="195.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.3" y="206.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (178 samples, 0.62%)</title><rect x="418.3" y="179.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.3" y="190.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (172 samples, 0.59%)</title><rect x="418.3" y="163.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.3" y="174.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (172 samples, 0.59%)</title><rect x="418.3" y="147.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.3" y="158.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (172 samples, 0.59%)</title><rect x="418.3" y="131.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (172 samples, 0.59%)</title><rect x="418.3" y="115.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (172 samples, 0.59%)</title><rect x="418.3" y="99.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.3" y="110.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (10 samples, 0.03%)</title><rect x="418.3" y="83.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="421.3" y="94.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (162 samples, 0.56%)</title><rect x="418.7" y="83.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.7" y="94.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (162 samples, 0.56%)</title><rect x="418.7" y="67.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.7" y="78.0"></text>
</g>
<g>
<title>int[] (139 samples, 0.48%)</title><rect x="418.7" y="51.0" width="5.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="421.7" y="62.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (23 samples, 0.08%)</title><rect x="424.4" y="51.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.4" y="62.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.08%)</title><rect x="424.4" y="35.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="427.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (38 samples, 0.13%)</title><rect x="425.6" y="243.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.6" y="254.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (20 samples, 0.07%)</title><rect x="425.6" y="227.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.6" y="238.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (16 samples, 0.06%)</title><rect x="425.8" y="211.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="428.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (11 samples, 0.04%)</title><rect x="426.0" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.0" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (11 samples, 0.04%)</title><rect x="426.0" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="429.0" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (13 samples, 0.04%)</title><rect x="426.6" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (13 samples, 0.04%)</title><rect x="426.6" y="211.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (13 samples, 0.04%)</title><rect x="426.6" y="195.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="429.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (7,955 samples, 27.49%)</title><rect x="427.2" y="259.0" width="324.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.2" y="270.0">ru/mail/polis/service/re1nex/ApiControllerIm..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (7,917 samples, 27.36%)</title><rect x="427.2" y="243.0" width="322.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.2" y="254.0">ru/mail/polis/service/re1nex/ApiControllerIm..</text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.02%)</title><rect x="427.2" y="227.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="430.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.07%)</title><rect x="427.5" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.5" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.07%)</title><rect x="427.5" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.07%)</title><rect x="427.5" y="195.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.5" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.07%)</title><rect x="427.5" y="179.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.07%)</title><rect x="427.5" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.07%)</title><rect x="427.5" y="147.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="430.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl$$Lambda$70/233955741.handleLocalResponse (139 samples, 0.48%)</title><rect x="428.6" y="227.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.lambda$handleResponses$2 (139 samples, 0.48%)</title><rect x="428.6" y="211.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="431.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.put (139 samples, 0.48%)</title><rect x="428.6" y="195.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.06%)</title><rect x="428.6" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.06%)</title><rect x="428.6" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.6" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.06%)</title><rect x="428.6" y="147.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="431.6" y="158.0"></text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.04%)</title><rect x="429.2" y="179.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="432.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (42 samples, 0.15%)</title><rect x="429.7" y="179.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.7" y="190.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="429.7" y="163.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="432.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.04%)</title><rect x="430.3" y="163.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="433.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.05%)</title><rect x="430.9" y="163.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="433.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (56 samples, 0.19%)</title><rect x="431.4" y="179.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (54 samples, 0.19%)</title><rect x="431.5" y="163.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (36 samples, 0.12%)</title><rect x="431.5" y="147.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.12%)</title><rect x="431.5" y="131.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="434.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.03%)</title><rect x="433.0" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.03%)</title><rect x="433.0" y="131.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.0" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (10 samples, 0.03%)</title><rect x="433.3" y="147.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="436.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (12 samples, 0.04%)</title><rect x="433.7" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="433.9" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="433.9" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="436.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.03%)</title><rect x="433.9" y="131.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="436.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.proxy (7,746 samples, 26.77%)</title><rect x="434.2" y="227.0" width="315.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.2" y="238.0">ru/mail/polis/service/re1nex/ApiControllerI..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (7,746 samples, 26.77%)</title><rect x="434.2" y="211.0" width="315.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.2" y="222.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (7,746 samples, 26.77%)</title><rect x="434.2" y="195.0" width="315.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.2" y="206.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (37 samples, 0.13%)</title><rect x="434.2" y="179.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="437.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (7,249 samples, 25.05%)</title><rect x="435.7" y="179.0" width="295.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.7" y="190.0">one/nio/http/HttpClient$ResponseReader.&lt;..</text>
</g>
<g>
<title>byte[] (3,408 samples, 11.78%)</title><rect x="435.7" y="163.0" width="139.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="438.7" y="174.0">byte[]</text>
</g>
<g>
<title>byte[] (3,841 samples, 13.28%)</title><rect x="574.7" y="163.0" width="156.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="577.7" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (351 samples, 1.21%)</title><rect x="731.4" y="179.0" width="14.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.08%)</title><rect x="731.6" y="163.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.08%)</title><rect x="731.6" y="147.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.06%)</title><rect x="731.6" y="131.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="734.6" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.04%)</title><rect x="732.5" y="163.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="735.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (274 samples, 0.95%)</title><rect x="733.0" y="163.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (274 samples, 0.95%)</title><rect x="733.0" y="147.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.0" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (274 samples, 0.95%)</title><rect x="733.0" y="131.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.0" y="142.0"></text>
</g>
<g>
<title>char[] (211 samples, 0.73%)</title><rect x="733.0" y="115.0" width="8.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="736.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.10%)</title><rect x="741.6" y="115.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="744.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.11%)</title><rect x="742.8" y="115.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.11%)</title><rect x="742.8" y="99.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.11%)</title><rect x="742.8" y="83.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.8" y="94.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.11%)</title><rect x="742.8" y="67.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="745.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.06%)</title><rect x="744.2" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.06%)</title><rect x="744.2" y="147.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="747.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (21 samples, 0.07%)</title><rect x="744.8" y="163.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.07%)</title><rect x="744.8" y="147.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.07%)</title><rect x="744.8" y="131.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.03%)</title><rect x="744.8" y="115.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="747.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.04%)</title><rect x="745.2" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.2" y="126.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="745.2" y="99.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="748.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (80 samples, 0.28%)</title><rect x="745.7" y="179.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.7" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (80 samples, 0.28%)</title><rect x="745.7" y="163.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="748.7" y="174.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.28%)</title><rect x="745.7" y="147.0" width="3.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="748.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (19 samples, 0.07%)</title><rect x="748.9" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.9" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.07%)</title><rect x="748.9" y="163.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.07%)</title><rect x="748.9" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.9" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.05%)</title><rect x="749.1" y="131.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.1" y="142.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="749.1" y="115.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="752.1" y="126.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (10 samples, 0.03%)</title><rect x="749.7" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.7" y="190.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (10 samples, 0.03%)</title><rect x="749.7" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.7" y="174.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (10 samples, 0.03%)</title><rect x="749.7" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.7" y="158.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (10 samples, 0.03%)</title><rect x="749.7" y="131.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="752.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (21 samples, 0.07%)</title><rect x="750.1" y="243.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (21 samples, 0.07%)</title><rect x="750.1" y="227.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (21 samples, 0.07%)</title><rect x="750.1" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.06%)</title><rect x="750.1" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 0.06%)</title><rect x="750.1" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.1" y="190.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.06%)</title><rect x="750.1" y="163.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="753.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergePutDeleteResponses (15 samples, 0.05%)</title><rect x="751.0" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.04%)</title><rect x="751.1" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.1" y="238.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="751.1" y="211.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="754.1" y="222.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10,749 samples, 37.15%)</title><rect x="751.6" y="371.0" width="438.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.6" y="382.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (540 samples, 1.87%)</title><rect x="751.6" y="355.0" width="22.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.6" y="366.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (540 samples, 1.87%)</title><rect x="751.6" y="339.0" width="22.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="754.6" y="350.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (10,209 samples, 35.28%)</title><rect x="773.7" y="355.0" width="416.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.7" y="366.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10,209 samples, 35.28%)</title><rect x="773.7" y="339.0" width="416.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.7" y="350.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10,209 samples, 35.28%)</title><rect x="773.7" y="323.0" width="416.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.7" y="334.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,825 samples, 6.31%)</title><rect x="773.7" y="307.0" width="74.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.7" y="318.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,825 samples, 6.31%)</title><rect x="773.7" y="291.0" width="74.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.7" y="302.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (1,134 samples, 3.92%)</title><rect x="773.7" y="275.0" width="46.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.7" y="286.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (700 samples, 2.42%)</title><rect x="773.7" y="259.0" width="28.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.7" y="270.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (700 samples, 2.42%)</title><rect x="773.7" y="243.0" width="28.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.7" y="254.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (700 samples, 2.42%)</title><rect x="773.7" y="227.0" width="28.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.7" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (700 samples, 2.42%)</title><rect x="773.7" y="211.0" width="28.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.7" y="222.0">ja..</text>
</g>
<g>
<title>java.lang.String (315 samples, 1.09%)</title><rect x="773.7" y="195.0" width="12.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="776.7" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (385 samples, 1.33%)</title><rect x="786.5" y="195.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.5" y="206.0"></text>
</g>
<g>
<title>byte[] (385 samples, 1.33%)</title><rect x="786.5" y="179.0" width="15.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="789.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.handleRequest (434 samples, 1.50%)</title><rect x="802.2" y="259.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (434 samples, 1.50%)</title><rect x="802.2" y="243.0" width="17.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/926150093.linkToTargetMethod (420 samples, 1.45%)</title><rect x="802.2" y="227.0" width="17.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (420 samples, 1.45%)</title><rect x="802.2" y="211.0" width="17.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="805.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$67/856457076.get$Lambda (420 samples, 1.45%)</title><rect x="802.2" y="195.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.2" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$67 (420 samples, 1.45%)</title><rect x="802.2" y="179.0" width="17.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="805.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (14 samples, 0.05%)</title><rect x="819.3" y="227.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.05%)</title><rect x="819.3" y="211.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 0.05%)</title><rect x="819.3" y="195.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.05%)</title><rect x="819.3" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.05%)</title><rect x="819.3" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (14 samples, 0.05%)</title><rect x="819.3" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (14 samples, 0.05%)</title><rect x="819.3" y="131.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="822.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (691 samples, 2.39%)</title><rect x="819.9" y="275.0" width="28.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.9" y="286.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (691 samples, 2.39%)</title><rect x="819.9" y="259.0" width="28.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.9" y="270.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (691 samples, 2.39%)</title><rect x="819.9" y="243.0" width="28.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.9" y="254.0">ja..</text>
</g>
<g>
<title>java.lang.String (312 samples, 1.08%)</title><rect x="819.9" y="227.0" width="12.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="822.9" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (379 samples, 1.31%)</title><rect x="832.6" y="227.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.6" y="238.0"></text>
</g>
<g>
<title>byte[] (379 samples, 1.31%)</title><rect x="832.6" y="211.0" width="15.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="835.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3,517 samples, 12.16%)</title><rect x="848.1" y="307.0" width="143.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.1" y="318.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one.nio.http.Request (548 samples, 1.89%)</title><rect x="848.1" y="291.0" width="22.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="851.1" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,187 samples, 4.10%)</title><rect x="870.4" y="291.0" width="48.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.4" y="302.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (1,187 samples, 4.10%)</title><rect x="870.4" y="275.0" width="48.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="873.4" y="286.0">java..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,782 samples, 6.16%)</title><rect x="918.8" y="291.0" width="72.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.8" y="302.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,782 samples, 6.16%)</title><rect x="918.8" y="275.0" width="72.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="921.8" y="286.0">one/nio/..</text>
</g>
<g>
<title>char[] (942 samples, 3.26%)</title><rect x="918.8" y="259.0" width="38.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="921.8" y="270.0">cha..</text>
</g>
<g>
<title>java.lang.String (291 samples, 1.01%)</title><rect x="957.3" y="259.0" width="11.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="960.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (549 samples, 1.90%)</title><rect x="969.1" y="259.0" width="22.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.1" y="270.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (549 samples, 1.90%)</title><rect x="969.1" y="243.0" width="22.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.1" y="254.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (549 samples, 1.90%)</title><rect x="969.1" y="227.0" width="22.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.1" y="238.0">j..</text>
</g>
<g>
<title>byte[] (549 samples, 1.90%)</title><rect x="969.1" y="211.0" width="22.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="972.1" y="222.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (490 samples, 1.69%)</title><rect x="991.5" y="307.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.5" y="318.0"></text>
</g>
<g>
<title>byte[] (490 samples, 1.69%)</title><rect x="991.5" y="291.0" width="20.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="994.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (583 samples, 2.01%)</title><rect x="1011.5" y="307.0" width="23.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.5" y="318.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (583 samples, 2.01%)</title><rect x="1011.5" y="291.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.5" y="302.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (583 samples, 2.01%)</title><rect x="1011.5" y="275.0" width="23.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.5" y="286.0">j..</text>
</g>
<g>
<title>java.lang.String (271 samples, 0.94%)</title><rect x="1011.5" y="259.0" width="11.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1014.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (312 samples, 1.08%)</title><rect x="1022.5" y="259.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.5" y="270.0"></text>
</g>
<g>
<title>byte[] (312 samples, 1.08%)</title><rect x="1022.5" y="243.0" width="12.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1025.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,794 samples, 13.11%)</title><rect x="1035.3" y="307.0" width="154.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.3" y="318.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,794 samples, 13.11%)</title><rect x="1035.3" y="291.0" width="154.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.3" y="302.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (1,800 samples, 6.22%)</title><rect x="1035.3" y="275.0" width="73.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1038.3" y="286.0">char[]</text>
</g>
<g>
<title>java.lang.String (711 samples, 2.46%)</title><rect x="1108.7" y="275.0" width="29.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1111.7" y="286.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,283 samples, 4.43%)</title><rect x="1137.7" y="275.0" width="52.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.7" y="286.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,283 samples, 4.43%)</title><rect x="1137.7" y="259.0" width="52.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.7" y="270.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,283 samples, 4.43%)</title><rect x="1137.7" y="243.0" width="52.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.7" y="254.0">java/..</text>
</g>
<g>
<title>byte[] (1,283 samples, 4.43%)</title><rect x="1137.7" y="227.0" width="52.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1140.7" y="238.0">byte[]</text>
</g>
</g>
</svg>
