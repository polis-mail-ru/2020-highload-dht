<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="885"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="885"> </text>
<g id="frames">
<g>
<title>all (1,629 samples, 100.00%)</title><rect x="10.0" y="851.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="862.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (648 samples, 39.78%)</title><rect x="10.0" y="835.0" width="469.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (8 samples, 0.49%)</title><rect x="10.0" y="819.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (8 samples, 0.49%)</title><rect x="10.0" y="803.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2119990771.linkToTargetMethod (8 samples, 0.49%)</title><rect x="10.0" y="787.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1288779495.invoke (8 samples, 0.49%)</title><rect x="10.0" y="771.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.49%)</title><rect x="10.0" y="755.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.18%)</title><rect x="10.0" y="739.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.18%)</title><rect x="10.0" y="723.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.31%)</title><rect x="12.2" y="739.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.31%)</title><rect x="12.2" y="723.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.2" y="734.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.31%)</title><rect x="12.2" y="707.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="15.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (640 samples, 39.29%)</title><rect x="15.8" y="819.0" width="463.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.8" y="830.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (640 samples, 39.29%)</title><rect x="15.8" y="803.0" width="463.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.8" y="814.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.55%)</title><rect x="15.8" y="787.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (9 samples, 0.55%)</title><rect x="15.8" y="771.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.55%)</title><rect x="15.8" y="755.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.55%)</title><rect x="15.8" y="739.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.8" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.55%)</title><rect x="15.8" y="723.0" width="6.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="18.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService$$Lambda$70/1531190364.run (546 samples, 33.52%)</title><rect x="22.3" y="787.0" width="395.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.3" y="798.0">ru/mail/polis/service/re1nex/AsyncTopologyService$$Lam..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.lambda$get$0 (546 samples, 33.52%)</title><rect x="22.3" y="771.0" width="395.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.3" y="782.0">ru/mail/polis/service/re1nex/AsyncTopologyService.lamb..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.primaryFor (172 samples, 10.56%)</title><rect x="22.3" y="755.0" width="124.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.3" y="766.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.primaryFor (172 samples, 10.56%)</title><rect x="22.3" y="739.0" width="124.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.3" y="750.0">ru/mail/polis/d..</text>
</g>
<g>
<title>byte[] (11 samples, 0.68%)</title><rect x="22.3" y="723.0" width="8.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="25.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (4 samples, 0.25%)</title><rect x="30.3" y="723.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.3" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (4 samples, 0.25%)</title><rect x="30.3" y="707.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="33.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (8 samples, 0.49%)</title><rect x="33.2" y="723.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (8 samples, 0.49%)</title><rect x="33.2" y="707.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.2" y="718.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (8 samples, 0.49%)</title><rect x="33.2" y="691.0" width="5.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="36.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (15 samples, 0.92%)</title><rect x="39.0" y="723.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (15 samples, 0.92%)</title><rect x="39.0" y="707.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.0" y="718.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (15 samples, 0.92%)</title><rect x="39.0" y="691.0" width="10.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="42.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (134 samples, 8.23%)</title><rect x="49.8" y="723.0" width="97.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.8" y="734.0">ru/mail/pol..</text>
</g>
<g>
<title>java/security/MessageDigest.digest (8 samples, 0.49%)</title><rect x="49.8" y="707.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.8" y="718.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (8 samples, 0.49%)</title><rect x="49.8" y="691.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.8" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (8 samples, 0.49%)</title><rect x="49.8" y="675.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.8" y="686.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.49%)</title><rect x="49.8" y="659.0" width="5.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="52.8" y="670.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (126 samples, 7.73%)</title><rect x="55.6" y="707.0" width="91.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.6" y="718.0">java/securi..</text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (4 samples, 0.25%)</title><rect x="55.6" y="691.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="58.6" y="702.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (122 samples, 7.49%)</title><rect x="58.5" y="691.0" width="88.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.5" y="702.0">java/secur..</text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (122 samples, 7.49%)</title><rect x="58.5" y="675.0" width="88.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.5" y="686.0">sun/securi..</text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (116 samples, 7.12%)</title><rect x="58.5" y="659.0" width="84.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.5" y="670.0">sun/securi..</text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (108 samples, 6.63%)</title><rect x="58.5" y="643.0" width="78.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.5" y="654.0">java/secu..</text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (108 samples, 6.63%)</title><rect x="58.5" y="627.0" width="78.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.5" y="638.0">java/secu..</text>
</g>
<g>
<title>java.lang.Class[] (1 samples, 0.06%)</title><rect x="58.5" y="611.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="61.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.25%)</title><rect x="59.3" y="611.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="62.3" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (25 samples, 1.53%)</title><rect x="62.2" y="611.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (25 samples, 1.53%)</title><rect x="62.2" y="595.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.2" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (25 samples, 1.53%)</title><rect x="62.2" y="579.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.2" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (25 samples, 1.53%)</title><rect x="62.2" y="563.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.2" y="574.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (25 samples, 1.53%)</title><rect x="62.2" y="547.0" width="18.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="65.2" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (78 samples, 4.79%)</title><rect x="80.3" y="611.0" width="56.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.3" y="622.0">java/l..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (78 samples, 4.79%)</title><rect x="80.3" y="595.0" width="56.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.3" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (78 samples, 4.79%)</title><rect x="80.3" y="579.0" width="56.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.3" y="590.0">jdk/in..</text>
</g>
<g>
<title>sun.security.provider.MD5 (19 samples, 1.17%)</title><rect x="80.3" y="563.0" width="13.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="83.3" y="574.0"></text>
</g>
<g>
<title>sun/security/provider/MD5.&lt;init&gt; (59 samples, 3.62%)</title><rect x="94.0" y="563.0" width="42.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.0" y="574.0">sun/..</text>
</g>
<g>
<title>int[] (29 samples, 1.78%)</title><rect x="94.0" y="547.0" width="21.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="97.0" y="558.0">i..</text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (30 samples, 1.84%)</title><rect x="115.0" y="547.0" width="21.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.0" y="558.0">s..</text>
</g>
<g>
<title>byte[] (30 samples, 1.84%)</title><rect x="115.0" y="531.0" width="21.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="118.0" y="542.0">b..</text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (8 samples, 0.49%)</title><rect x="136.8" y="643.0" width="5.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="139.8" y="654.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (6 samples, 0.37%)</title><rect x="142.6" y="659.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.6" y="670.0"></text>
</g>
<g>
<title>java/security/Provider.getService (6 samples, 0.37%)</title><rect x="142.6" y="643.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.37%)</title><rect x="142.6" y="627.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.6" y="638.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (6 samples, 0.37%)</title><rect x="142.6" y="611.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.37%)</title><rect x="142.6" y="595.0" width="4.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="145.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.getFromNode (345 samples, 21.18%)</title><rect x="146.9" y="755.0" width="249.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.9" y="766.0">ru/mail/polis/service/re1nex/Asyn..</text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.18%)</title><rect x="146.9" y="739.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="149.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (28 samples, 1.72%)</title><rect x="149.1" y="739.0" width="20.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.1" y="750.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.86%)</title><rect x="149.1" y="723.0" width="10.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="152.1" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.43%)</title><rect x="159.2" y="723.0" width="5.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="162.2" y="734.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.43%)</title><rect x="164.3" y="723.0" width="5.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="167.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (279 samples, 17.13%)</title><rect x="169.4" y="739.0" width="202.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.4" y="750.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (41 samples, 2.52%)</title><rect x="169.4" y="723.0" width="29.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.4" y="734.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (41 samples, 2.52%)</title><rect x="169.4" y="707.0" width="29.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.4" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (41 samples, 2.52%)</title><rect x="169.4" y="691.0" width="29.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.4" y="702.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (41 samples, 2.52%)</title><rect x="169.4" y="675.0" width="29.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.4" y="686.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (41 samples, 2.52%)</title><rect x="169.4" y="659.0" width="29.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.4" y="670.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.49%)</title><rect x="169.4" y="643.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.4" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8 samples, 0.49%)</title><rect x="169.4" y="627.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.4" y="638.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.49%)</title><rect x="169.4" y="611.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.49%)</title><rect x="169.4" y="595.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.49%)</title><rect x="169.4" y="579.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.49%)</title><rect x="169.4" y="563.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$105/1667663922.getAsBoolean (8 samples, 0.49%)</title><rect x="169.4" y="547.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.49%)</title><rect x="169.4" y="531.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.49%)</title><rect x="169.4" y="515.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.49%)</title><rect x="169.4" y="499.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$73/427443868.apply (8 samples, 0.49%)</title><rect x="169.4" y="483.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (8 samples, 0.49%)</title><rect x="169.4" y="467.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.4" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (8 samples, 0.49%)</title><rect x="169.4" y="451.0" width="5.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="172.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$120/917462711.apply (33 samples, 2.03%)</title><rect x="175.2" y="643.0" width="23.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.2" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (33 samples, 2.03%)</title><rect x="175.2" y="627.0" width="23.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.2" y="638.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 2.03%)</title><rect x="175.2" y="611.0" width="23.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.2" y="622.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 2.03%)</title><rect x="175.2" y="595.0" width="23.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="178.2" y="606.0">j..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (30 samples, 1.84%)</title><rect x="199.1" y="723.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.1" y="734.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (30 samples, 1.84%)</title><rect x="199.1" y="707.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.1" y="718.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$132/1997942840.apply (30 samples, 1.84%)</title><rect x="199.1" y="691.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.1" y="702.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$iterator$4 (30 samples, 1.84%)</title><rect x="199.1" y="675.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.1" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/Record.of (9 samples, 0.55%)</title><rect x="199.1" y="659.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.1" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (9 samples, 0.55%)</title><rect x="199.1" y="643.0" width="6.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="202.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (10 samples, 0.61%)</title><rect x="205.6" y="659.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.61%)</title><rect x="205.6" y="643.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.6" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (10 samples, 0.61%)</title><rect x="205.6" y="627.0" width="7.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="208.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Value.getData (11 samples, 0.68%)</title><rect x="212.8" y="659.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.68%)</title><rect x="212.8" y="643.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.8" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.68%)</title><rect x="212.8" y="627.0" width="8.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="215.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (12 samples, 0.74%)</title><rect x="220.8" y="723.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (12 samples, 0.74%)</title><rect x="220.8" y="707.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (12 samples, 0.74%)</title><rect x="220.8" y="691.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.8" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.74%)</title><rect x="220.8" y="675.0" width="8.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="223.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.iterator (196 samples, 12.03%)</title><rect x="229.5" y="723.0" width="142.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.5" y="734.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (8 samples, 0.49%)</title><rect x="229.5" y="707.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.5" y="718.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (8 samples, 0.49%)</title><rect x="229.5" y="691.0" width="5.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="232.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (4 samples, 0.25%)</title><rect x="235.3" y="707.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.3" y="718.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (4 samples, 0.25%)</title><rect x="235.3" y="691.0" width="2.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="238.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.12%)</title><rect x="238.2" y="707.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.12%)</title><rect x="238.2" y="691.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.12%)</title><rect x="238.2" y="675.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="238.2" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.12%)</title><rect x="238.2" y="643.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.06%)</title><rect x="238.2" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.2" y="638.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.06%)</title><rect x="238.2" y="611.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="241.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.06%)</title><rect x="238.9" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.06%)</title><rect x="238.9" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (1 samples, 0.06%)</title><rect x="238.9" y="595.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="241.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (182 samples, 11.17%)</title><rect x="239.6" y="707.0" width="131.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.6" y="718.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (56 samples, 3.44%)</title><rect x="239.6" y="691.0" width="40.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.6" y="702.0">com..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (2 samples, 0.12%)</title><rect x="239.6" y="675.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="242.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (54 samples, 3.31%)</title><rect x="241.1" y="675.0" width="39.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.1" y="686.0">com..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (2 samples, 0.12%)</title><rect x="241.1" y="659.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="244.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (7 samples, 0.43%)</title><rect x="242.5" y="659.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.5" y="670.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (7 samples, 0.43%)</title><rect x="242.5" y="643.0" width="5.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="245.5" y="654.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (5 samples, 0.31%)</title><rect x="247.6" y="659.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="250.6" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.31%)</title><rect x="251.2" y="659.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.2" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.31%)</title><rect x="251.2" y="643.0" width="3.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="254.2" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (35 samples, 2.15%)</title><rect x="254.8" y="659.0" width="25.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.8" y="670.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (35 samples, 2.15%)</title><rect x="254.8" y="643.0" width="25.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.8" y="654.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (35 samples, 2.15%)</title><rect x="254.8" y="627.0" width="25.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.8" y="638.0">j..</text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.25%)</title><rect x="254.8" y="611.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$105/1667663922.getAsBoolean (4 samples, 0.25%)</title><rect x="254.8" y="595.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.25%)</title><rect x="254.8" y="579.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.25%)</title><rect x="254.8" y="563.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4 samples, 0.25%)</title><rect x="254.8" y="547.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$73/427443868.apply (4 samples, 0.25%)</title><rect x="254.8" y="531.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (4 samples, 0.25%)</title><rect x="254.8" y="515.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.8" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (4 samples, 0.25%)</title><rect x="254.8" y="499.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="257.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (31 samples, 1.90%)</title><rect x="257.7" y="611.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.7" y="622.0">j..</text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (4 samples, 0.25%)</title><rect x="257.7" y="595.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="260.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.49%)</title><rect x="260.6" y="595.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.49%)</title><rect x="260.6" y="579.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$103/389664631.get$Lambda (4 samples, 0.25%)</title><rect x="260.6" y="563.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.6" y="574.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$103 (4 samples, 0.25%)</title><rect x="260.6" y="547.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="263.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$105/1667663922.get$Lambda (4 samples, 0.25%)</title><rect x="263.5" y="563.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.5" y="574.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$105 (4 samples, 0.25%)</title><rect x="263.5" y="547.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="266.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.18%)</title><rect x="266.4" y="595.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (3 samples, 0.18%)</title><rect x="266.4" y="579.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (3 samples, 0.18%)</title><rect x="266.4" y="563.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="269.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (16 samples, 0.98%)</title><rect x="268.6" y="595.0" width="11.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.6" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.98%)</title><rect x="268.6" y="579.0" width="11.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="271.6" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.43%)</title><rect x="280.2" y="691.0" width="5.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="283.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.31%)</title><rect x="285.3" y="691.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.31%)</title><rect x="285.3" y="675.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.3" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator (5 samples, 0.31%)</title><rect x="285.3" y="659.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="288.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (8 samples, 0.49%)</title><rect x="288.9" y="691.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.9" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.49%)</title><rect x="288.9" y="675.0" width="5.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="291.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (17 samples, 1.04%)</title><rect x="294.7" y="691.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.7" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (12 samples, 0.74%)</title><rect x="294.7" y="675.0" width="8.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="297.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.31%)</title><rect x="303.4" y="675.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.31%)</title><rect x="303.4" y="659.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.31%)</title><rect x="303.4" y="643.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.4" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (5 samples, 0.31%)</title><rect x="303.4" y="627.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.31%)</title><rect x="303.4" y="611.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.31%)</title><rect x="303.4" y="595.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.31%)</title><rect x="303.4" y="579.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$105/1667663922.getAsBoolean (5 samples, 0.31%)</title><rect x="303.4" y="563.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (5 samples, 0.31%)</title><rect x="303.4" y="547.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (5 samples, 0.31%)</title><rect x="303.4" y="531.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.31%)</title><rect x="303.4" y="515.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$73/427443868.apply (5 samples, 0.31%)</title><rect x="303.4" y="499.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (5 samples, 0.31%)</title><rect x="303.4" y="483.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.4" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (5 samples, 0.31%)</title><rect x="303.4" y="467.0" width="3.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="306.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (89 samples, 5.46%)</title><rect x="307.0" y="691.0" width="64.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.0" y="702.0">ru/mail..</text>
</g>
<g>
<title>java/util/Collection.stream (32 samples, 1.96%)</title><rect x="307.0" y="675.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.0" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (12 samples, 0.74%)</title><rect x="307.0" y="659.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (12 samples, 0.74%)</title><rect x="307.0" y="643.0" width="8.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="310.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (20 samples, 1.23%)</title><rect x="315.7" y="659.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (20 samples, 1.23%)</title><rect x="315.7" y="643.0" width="14.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="318.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (4 samples, 0.25%)</title><rect x="330.2" y="675.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (4 samples, 0.25%)</title><rect x="330.2" y="659.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="333.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.55%)</title><rect x="333.1" y="675.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.55%)</title><rect x="333.1" y="659.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (9 samples, 0.55%)</title><rect x="333.1" y="643.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (9 samples, 0.55%)</title><rect x="333.1" y="627.0" width="6.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="336.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (25 samples, 1.53%)</title><rect x="339.6" y="675.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.6" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (7 samples, 0.43%)</title><rect x="339.6" y="659.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.6" y="670.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (7 samples, 0.43%)</title><rect x="339.6" y="643.0" width="5.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="342.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (18 samples, 1.10%)</title><rect x="344.7" y="659.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.18%)</title><rect x="344.7" y="643.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.18%)</title><rect x="344.7" y="627.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$81/1308480358.get$Lambda (3 samples, 0.18%)</title><rect x="344.7" y="611.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.7" y="622.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$81 (3 samples, 0.18%)</title><rect x="344.7" y="595.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="347.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (15 samples, 0.92%)</title><rect x="346.8" y="643.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (15 samples, 0.92%)</title><rect x="346.8" y="627.0" width="10.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="349.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (19 samples, 1.17%)</title><rect x="357.7" y="675.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.7" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (19 samples, 1.17%)</title><rect x="357.7" y="659.0" width="13.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="360.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendResponse (30 samples, 1.84%)</title><rect x="371.5" y="739.0" width="21.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.5" y="750.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30 samples, 1.84%)</title><rect x="371.5" y="723.0" width="21.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.5" y="734.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (30 samples, 1.84%)</title><rect x="371.5" y="707.0" width="21.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.5" y="718.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 1.35%)</title><rect x="371.5" y="691.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (22 samples, 1.35%)</title><rect x="371.5" y="675.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.5" y="686.0"></text>
</g>
<g>
<title>byte[] (22 samples, 1.35%)</title><rect x="371.5" y="659.0" width="15.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="374.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.49%)</title><rect x="387.4" y="691.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.4" y="702.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.49%)</title><rect x="387.4" y="675.0" width="5.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="390.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (5 samples, 0.31%)</title><rect x="393.2" y="739.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.2" y="750.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.31%)</title><rect x="393.2" y="723.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="396.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (29 samples, 1.78%)</title><rect x="396.8" y="755.0" width="21.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.8" y="766.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.98%)</title><rect x="396.8" y="739.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.98%)</title><rect x="396.8" y="723.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.98%)</title><rect x="396.8" y="707.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.8" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.98%)</title><rect x="396.8" y="691.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.8" y="702.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.98%)</title><rect x="396.8" y="675.0" width="11.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="399.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.80%)</title><rect x="408.4" y="739.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="411.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.80%)</title><rect x="408.4" y="723.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.4" y="734.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.80%)</title><rect x="408.4" y="707.0" width="9.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="411.4" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (85 samples, 5.22%)</title><rect x="417.8" y="787.0" width="61.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.8" y="798.0">sun/rm..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (85 samples, 5.22%)</title><rect x="417.8" y="771.0" width="61.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.8" y="782.0">java/s..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$175/1451032207.run (85 samples, 5.22%)</title><rect x="417.8" y="755.0" width="61.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.8" y="766.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (85 samples, 5.22%)</title><rect x="417.8" y="739.0" width="61.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.8" y="750.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (85 samples, 5.22%)</title><rect x="417.8" y="723.0" width="61.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.8" y="734.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (85 samples, 5.22%)</title><rect x="417.8" y="707.0" width="61.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="420.8" y="718.0">sun/rm..</text>
</g>
<g>
<title>java.io.DataOutputStream (1 samples, 0.06%)</title><rect x="417.8" y="691.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="420.8" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (84 samples, 5.16%)</title><rect x="418.5" y="691.0" width="60.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.5" y="702.0">sun/rm..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (82 samples, 5.03%)</title><rect x="418.5" y="675.0" width="59.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.5" y="686.0">java/s..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (82 samples, 5.03%)</title><rect x="418.5" y="659.0" width="59.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.5" y="670.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (82 samples, 5.03%)</title><rect x="418.5" y="643.0" width="59.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.5" y="654.0">sun/rm..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (82 samples, 5.03%)</title><rect x="418.5" y="627.0" width="59.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.5" y="638.0">sun/rm..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (53 samples, 3.25%)</title><rect x="418.5" y="611.0" width="38.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.5" y="622.0">jav..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (53 samples, 3.25%)</title><rect x="418.5" y="595.0" width="38.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.5" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor42.invoke (53 samples, 3.25%)</title><rect x="418.5" y="579.0" width="38.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.5" y="590.0">jdk..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (53 samples, 3.25%)</title><rect x="418.5" y="563.0" width="38.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.5" y="574.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (51 samples, 3.13%)</title><rect x="418.5" y="547.0" width="37.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.5" y="558.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (51 samples, 3.13%)</title><rect x="418.5" y="531.0" width="37.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.5" y="542.0">jav..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (51 samples, 3.13%)</title><rect x="418.5" y="515.0" width="37.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.5" y="526.0">jav..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (51 samples, 3.13%)</title><rect x="418.5" y="499.0" width="37.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.5" y="510.0">com..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (51 samples, 3.13%)</title><rect x="418.5" y="483.0" width="37.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.5" y="494.0">com..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (1 samples, 0.06%)</title><rect x="418.5" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.5" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (1 samples, 0.06%)</title><rect x="418.5" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.5" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (1 samples, 0.06%)</title><rect x="418.5" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.5" y="446.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (1 samples, 0.06%)</title><rect x="418.5" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="418.5" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="418.5" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.5" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="418.5" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.5" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="418.5" y="355.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="421.5" y="366.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (50 samples, 3.07%)</title><rect x="419.3" y="467.0" width="36.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.3" y="478.0">jav..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (50 samples, 3.07%)</title><rect x="419.3" y="451.0" width="36.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.3" y="462.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (50 samples, 3.07%)</title><rect x="419.3" y="435.0" width="36.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.3" y="446.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (50 samples, 3.07%)</title><rect x="419.3" y="419.0" width="36.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.3" y="430.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (50 samples, 3.07%)</title><rect x="419.3" y="403.0" width="36.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.3" y="414.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (50 samples, 3.07%)</title><rect x="419.3" y="387.0" width="36.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.3" y="398.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (50 samples, 3.07%)</title><rect x="419.3" y="371.0" width="36.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.3" y="382.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (50 samples, 3.07%)</title><rect x="419.3" y="355.0" width="36.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.3" y="366.0">com..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (47 samples, 2.89%)</title><rect x="419.3" y="339.0" width="34.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.3" y="350.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (47 samples, 2.89%)</title><rect x="419.3" y="323.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.3" y="334.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (47 samples, 2.89%)</title><rect x="419.3" y="307.0" width="34.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.3" y="318.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (47 samples, 2.89%)</title><rect x="419.3" y="291.0" width="34.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.3" y="302.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (15 samples, 0.92%)</title><rect x="419.3" y="275.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.3" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (13 samples, 0.80%)</title><rect x="419.3" y="259.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.3" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (12 samples, 0.74%)</title><rect x="419.3" y="243.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.3" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (12 samples, 0.74%)</title><rect x="419.3" y="227.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.3" y="238.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 0.31%)</title><rect x="419.3" y="211.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.3" y="222.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (5 samples, 0.31%)</title><rect x="419.3" y="195.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.3" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.06%)</title><rect x="419.3" y="179.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="422.3" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.25%)</title><rect x="420.0" y="179.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.0" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.25%)</title><rect x="420.0" y="163.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="423.0" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (7 samples, 0.43%)</title><rect x="422.9" y="211.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.43%)</title><rect x="422.9" y="195.0" width="5.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="425.9" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.06%)</title><rect x="428.0" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.0" y="254.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (1 samples, 0.06%)</title><rect x="428.0" y="227.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="431.0" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 0.12%)</title><rect x="428.7" y="259.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.7" y="270.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.12%)</title><rect x="428.7" y="243.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.7" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.12%)</title><rect x="428.7" y="227.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.7" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.12%)</title><rect x="428.7" y="211.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="431.7" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.18%)</title><rect x="430.1" y="275.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="433.1" y="286.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (1 samples, 0.06%)</title><rect x="432.3" y="275.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="435.3" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (18 samples, 1.10%)</title><rect x="433.0" y="275.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.0" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (18 samples, 1.10%)</title><rect x="433.0" y="259.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (18 samples, 1.10%)</title><rect x="433.0" y="243.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.0" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 1.10%)</title><rect x="433.0" y="227.0" width="13.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="436.0" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (10 samples, 0.61%)</title><rect x="446.1" y="275.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.55%)</title><rect x="446.1" y="259.0" width="6.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="449.1" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="452.6" y="259.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="452.6" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor5.invoke (1 samples, 0.06%)</title><rect x="452.6" y="227.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.6" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.06%)</title><rect x="452.6" y="211.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.6" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="452.6" y="195.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="452.6" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor22.invoke (1 samples, 0.06%)</title><rect x="452.6" y="163.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.6" y="174.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.06%)</title><rect x="452.6" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.06%)</title><rect x="452.6" y="131.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="455.6" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (3 samples, 0.18%)</title><rect x="453.3" y="339.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.3" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.18%)</title><rect x="453.3" y="323.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.18%)</title><rect x="453.3" y="307.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor5.invoke (3 samples, 0.18%)</title><rect x="453.3" y="291.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.3" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (3 samples, 0.18%)</title><rect x="453.3" y="275.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.3" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.18%)</title><rect x="453.3" y="259.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.18%)</title><rect x="453.3" y="243.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor47.invoke (3 samples, 0.18%)</title><rect x="453.3" y="227.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.3" y="238.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (3 samples, 0.18%)</title><rect x="453.3" y="211.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.3" y="222.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (3 samples, 0.18%)</title><rect x="453.3" y="195.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.3" y="206.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (2 samples, 0.12%)</title><rect x="453.3" y="179.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="456.3" y="190.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (1 samples, 0.06%)</title><rect x="454.8" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.8" y="190.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (1 samples, 0.06%)</title><rect x="454.8" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="454.8" y="147.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.8" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.06%)</title><rect x="454.8" y="131.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/333683827.invoke (1 samples, 0.06%)</title><rect x="454.8" y="115.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="454.8" y="99.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.8" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.06%)</title><rect x="454.8" y="83.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.06%)</title><rect x="454.8" y="67.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.8" y="78.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="454.8" y="51.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="457.8" y="62.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (2 samples, 0.12%)</title><rect x="455.5" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.5" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (2 samples, 0.12%)</title><rect x="455.5" y="531.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.5" y="542.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (2 samples, 0.12%)</title><rect x="455.5" y="515.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.5" y="526.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (2 samples, 0.12%)</title><rect x="455.5" y="499.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.5" y="510.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (2 samples, 0.12%)</title><rect x="455.5" y="483.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (2 samples, 0.12%)</title><rect x="455.5" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (2 samples, 0.12%)</title><rect x="455.5" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.5" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="455.5" y="435.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="458.5" y="446.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="456.2" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.2" y="446.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.06%)</title><rect x="456.2" y="419.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="459.2" y="430.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (18 samples, 1.10%)</title><rect x="456.9" y="611.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (18 samples, 1.10%)</title><rect x="456.9" y="595.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 1.10%)</title><rect x="456.9" y="579.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (18 samples, 1.10%)</title><rect x="456.9" y="563.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 1.10%)</title><rect x="456.9" y="547.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (18 samples, 1.10%)</title><rect x="456.9" y="531.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (18 samples, 1.10%)</title><rect x="456.9" y="515.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="459.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (18 samples, 1.10%)</title><rect x="456.9" y="499.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 1.10%)</title><rect x="456.9" y="483.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (18 samples, 1.10%)</title><rect x="456.9" y="467.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.06%)</title><rect x="456.9" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.06%)</title><rect x="456.9" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.9" y="446.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.06%)</title><rect x="456.9" y="419.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="459.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (17 samples, 1.04%)</title><rect x="457.7" y="451.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="457.7" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="457.7" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="457.7" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="457.7" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.7" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.06%)</title><rect x="457.7" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.7" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="457.7" y="355.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="457.7" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor34.invoke (1 samples, 0.06%)</title><rect x="457.7" y="323.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.06%)</title><rect x="457.7" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.7" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.06%)</title><rect x="457.7" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.7" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="457.7" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.7" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="457.7" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.7" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="457.7" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.7" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="457.7" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.7" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="457.7" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.7" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.06%)</title><rect x="457.7" y="195.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.7" y="206.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.06%)</title><rect x="457.7" y="179.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="460.7" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (16 samples, 0.98%)</title><rect x="458.4" y="435.0" width="11.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.4" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (16 samples, 0.98%)</title><rect x="458.4" y="419.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (16 samples, 0.98%)</title><rect x="458.4" y="403.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor34.invoke (16 samples, 0.98%)</title><rect x="458.4" y="387.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (16 samples, 0.98%)</title><rect x="458.4" y="371.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.06%)</title><rect x="458.4" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.4" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="458.4" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="458.4" y="323.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="461.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (15 samples, 0.92%)</title><rect x="459.1" y="355.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (15 samples, 0.92%)</title><rect x="459.1" y="339.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.1" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (9 samples, 0.55%)</title><rect x="459.1" y="323.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.1" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.18%)</title><rect x="459.1" y="307.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.1" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (3 samples, 0.18%)</title><rect x="459.1" y="291.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.1" y="302.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.06%)</title><rect x="459.1" y="275.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="462.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.12%)</title><rect x="459.8" y="275.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="462.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.37%)</title><rect x="461.3" y="307.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 0.37%)</title><rect x="461.3" y="291.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.3" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (6 samples, 0.37%)</title><rect x="461.3" y="275.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.3" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (6 samples, 0.37%)</title><rect x="461.3" y="259.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.3" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="461.3" y="243.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="464.3" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.31%)</title><rect x="462.0" y="243.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.0" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.18%)</title><rect x="462.0" y="227.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.0" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.18%)</title><rect x="462.0" y="211.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.0" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.18%)</title><rect x="462.0" y="195.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.0" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.18%)</title><rect x="462.0" y="179.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.18%)</title><rect x="462.0" y="163.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor34.invoke (3 samples, 0.18%)</title><rect x="462.0" y="147.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.0" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.18%)</title><rect x="462.0" y="131.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.0" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.12%)</title><rect x="462.0" y="115.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.0" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.12%)</title><rect x="462.0" y="99.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.0" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (2 samples, 0.12%)</title><rect x="462.0" y="83.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.0" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.12%)</title><rect x="462.0" y="67.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.0" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.12%)</title><rect x="462.0" y="51.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.0" y="62.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.06%)</title><rect x="462.0" y="35.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="465.0" y="46.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.06%)</title><rect x="462.7" y="35.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="465.7" y="46.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.06%)</title><rect x="463.5" y="115.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.5" y="126.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.06%)</title><rect x="463.5" y="99.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="466.5" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.12%)</title><rect x="464.2" y="227.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.2" y="238.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.12%)</title><rect x="464.2" y="211.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="467.2" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="465.6" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.6" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="465.6" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.6" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="465.6" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.6" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="465.6" y="275.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="465.6" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="465.6" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.06%)</title><rect x="465.6" y="227.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.6" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="465.6" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="465.6" y="195.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor34.invoke (1 samples, 0.06%)</title><rect x="465.6" y="179.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.06%)</title><rect x="465.6" y="163.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.6" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.06%)</title><rect x="465.6" y="147.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.6" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="465.6" y="131.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.6" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.06%)</title><rect x="465.6" y="115.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.6" y="126.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.06%)</title><rect x="465.6" y="99.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="468.6" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (5 samples, 0.31%)</title><rect x="466.4" y="323.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.4" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (5 samples, 0.31%)</title><rect x="466.4" y="307.0" width="3.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="469.4" y="318.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (7 samples, 0.43%)</title><rect x="470.0" y="611.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.0" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (7 samples, 0.43%)</title><rect x="470.0" y="595.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (7 samples, 0.43%)</title><rect x="470.0" y="579.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (7 samples, 0.43%)</title><rect x="470.0" y="563.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.12%)</title><rect x="470.0" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.06%)</title><rect x="470.0" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="473.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.06%)</title><rect x="470.0" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.06%)</title><rect x="470.0" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.06%)</title><rect x="470.0" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (1 samples, 0.06%)</title><rect x="470.0" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.06%)</title><rect x="470.0" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.06%)</title><rect x="470.0" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="470.0" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.0" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="470.0" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.0" y="414.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="470.0" y="387.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="473.0" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.06%)</title><rect x="470.7" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.7" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.06%)</title><rect x="470.7" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.06%)</title><rect x="470.7" y="499.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="473.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (5 samples, 0.31%)</title><rect x="471.4" y="547.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.18%)</title><rect x="471.4" y="531.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.18%)</title><rect x="471.4" y="515.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.4" y="526.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.06%)</title><rect x="471.4" y="499.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="474.4" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.12%)</title><rect x="472.1" y="499.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.1" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.12%)</title><rect x="472.1" y="483.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="475.1" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (2 samples, 0.12%)</title><rect x="473.6" y="531.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (2 samples, 0.12%)</title><rect x="473.6" y="515.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (2 samples, 0.12%)</title><rect x="473.6" y="499.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.6" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$ClassDataSlot (1 samples, 0.06%)</title><rect x="473.6" y="483.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="476.6" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.06%)</title><rect x="474.3" y="483.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="477.3" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (4 samples, 0.25%)</title><rect x="475.0" y="611.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.0" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (4 samples, 0.25%)</title><rect x="475.0" y="595.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.0" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (4 samples, 0.25%)</title><rect x="475.0" y="579.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.0" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (4 samples, 0.25%)</title><rect x="475.0" y="563.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.0" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (4 samples, 0.25%)</title><rect x="475.0" y="547.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (4 samples, 0.25%)</title><rect x="475.0" y="531.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (4 samples, 0.25%)</title><rect x="475.0" y="515.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.0" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="475.0" y="499.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="478.0" y="510.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.12%)</title><rect x="476.5" y="499.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="479.5" y="510.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (2 samples, 0.12%)</title><rect x="477.9" y="675.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.9" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (2 samples, 0.12%)</title><rect x="477.9" y="659.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.9" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (2 samples, 0.12%)</title><rect x="477.9" y="643.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (2 samples, 0.12%)</title><rect x="477.9" y="627.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.9" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (2 samples, 0.12%)</title><rect x="477.9" y="611.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.9" y="622.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.12%)</title><rect x="477.9" y="595.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="480.9" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (981 samples, 60.22%)</title><rect x="479.4" y="835.0" width="710.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.4" y="846.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (42 samples, 2.58%)</title><rect x="479.4" y="819.0" width="30.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.4" y="830.0">on..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (42 samples, 2.58%)</title><rect x="479.4" y="803.0" width="30.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="482.4" y="814.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (939 samples, 57.64%)</title><rect x="509.8" y="819.0" width="680.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.8" y="830.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (939 samples, 57.64%)</title><rect x="509.8" y="803.0" width="680.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.8" y="814.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (939 samples, 57.64%)</title><rect x="509.8" y="787.0" width="680.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.8" y="798.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (267 samples, 16.39%)</title><rect x="509.8" y="771.0" width="193.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.8" y="782.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (267 samples, 16.39%)</title><rect x="509.8" y="755.0" width="193.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.8" y="766.0">one/nio/http/HttpServer.h..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (172 samples, 10.56%)</title><rect x="509.8" y="739.0" width="124.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.8" y="750.0">RequestHandler1..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (128 samples, 7.86%)</title><rect x="509.8" y="723.0" width="92.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.8" y="734.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (128 samples, 7.86%)</title><rect x="509.8" y="707.0" width="92.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.8" y="718.0">one/nio/htt..</text>
</g>
<g>
<title>java/lang/String.substring (128 samples, 7.86%)</title><rect x="509.8" y="691.0" width="92.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.8" y="702.0">java/lang/S..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (128 samples, 7.86%)</title><rect x="509.8" y="675.0" width="92.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.8" y="686.0">java/lang/S..</text>
</g>
<g>
<title>java.lang.String (53 samples, 3.25%)</title><rect x="509.8" y="659.0" width="38.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="512.8" y="670.0">jav..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 4.60%)</title><rect x="548.2" y="659.0" width="54.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.2" y="670.0">java/..</text>
</g>
<g>
<title>byte[] (75 samples, 4.60%)</title><rect x="548.2" y="643.0" width="54.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="551.2" y="654.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.get (44 samples, 2.70%)</title><rect x="602.5" y="723.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.5" y="734.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 2.52%)</title><rect x="602.5" y="707.0" width="29.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.5" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 2.52%)</title><rect x="602.5" y="691.0" width="29.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.5" y="702.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService$$Lambda$70/1531190364.get$Lambda (41 samples, 2.52%)</title><rect x="602.5" y="675.0" width="29.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.5" y="686.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncTopologyService$$Lambda$70 (41 samples, 2.52%)</title><rect x="602.5" y="659.0" width="29.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="605.5" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseAsyncService.executeTask (3 samples, 0.18%)</title><rect x="632.2" y="707.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.18%)</title><rect x="632.2" y="691.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.18%)</title><rect x="632.2" y="675.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.18%)</title><rect x="632.2" y="659.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.18%)</title><rect x="632.2" y="643.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.18%)</title><rect x="632.2" y="627.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.18%)</title><rect x="632.2" y="611.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="635.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (95 samples, 5.83%)</title><rect x="634.4" y="739.0" width="68.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.4" y="750.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.substring (95 samples, 5.83%)</title><rect x="634.4" y="723.0" width="68.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.4" y="734.0">java/la..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (95 samples, 5.83%)</title><rect x="634.4" y="707.0" width="68.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.4" y="718.0">java/la..</text>
</g>
<g>
<title>java.lang.String (39 samples, 2.39%)</title><rect x="634.4" y="691.0" width="28.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="637.4" y="702.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 3.44%)</title><rect x="662.7" y="691.0" width="40.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.7" y="702.0">jav..</text>
</g>
<g>
<title>byte[] (56 samples, 3.44%)</title><rect x="662.7" y="675.0" width="40.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="665.7" y="686.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (459 samples, 28.18%)</title><rect x="703.2" y="771.0" width="332.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.2" y="782.0">one/nio/http/HttpSession.parseRequest</text>
</g>
<g>
<title>one.nio.http.Request (65 samples, 3.99%)</title><rect x="703.2" y="755.0" width="47.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="706.2" y="766.0">one...</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (163 samples, 10.01%)</title><rect x="750.3" y="755.0" width="118.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.3" y="766.0">one/nio/http/R..</text>
</g>
<g>
<title>java.lang.String[] (163 samples, 10.01%)</title><rect x="750.3" y="739.0" width="118.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="753.3" y="750.0">java.lang.Stri..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (231 samples, 14.18%)</title><rect x="868.4" y="755.0" width="167.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.4" y="766.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (231 samples, 14.18%)</title><rect x="868.4" y="739.0" width="167.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.4" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (107 samples, 6.57%)</title><rect x="868.4" y="723.0" width="77.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="871.4" y="734.0">char[]</text>
</g>
<g>
<title>java.lang.String (49 samples, 3.01%)</title><rect x="945.9" y="723.0" width="35.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="948.9" y="734.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (75 samples, 4.60%)</title><rect x="981.4" y="723.0" width="54.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.4" y="734.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (75 samples, 4.60%)</title><rect x="981.4" y="707.0" width="54.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.4" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (75 samples, 4.60%)</title><rect x="981.4" y="691.0" width="54.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.4" y="702.0">java/..</text>
</g>
<g>
<title>byte[] (75 samples, 4.60%)</title><rect x="981.4" y="675.0" width="54.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="984.4" y="686.0">byte[]</text>
</g>
<g>
<title>one/nio/util/Utf8.read (213 samples, 13.08%)</title><rect x="1035.7" y="771.0" width="154.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.7" y="782.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (213 samples, 13.08%)</title><rect x="1035.7" y="755.0" width="154.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1038.7" y="766.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (105 samples, 6.45%)</title><rect x="1035.7" y="739.0" width="76.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1038.7" y="750.0">char[]</text>
</g>
<g>
<title>java.lang.String (42 samples, 2.58%)</title><rect x="1111.8" y="739.0" width="30.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1114.8" y="750.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (66 samples, 4.05%)</title><rect x="1142.2" y="739.0" width="47.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.2" y="750.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (66 samples, 4.05%)</title><rect x="1142.2" y="723.0" width="47.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.2" y="734.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (66 samples, 4.05%)</title><rect x="1142.2" y="707.0" width="47.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.2" y="718.0">java..</text>
</g>
<g>
<title>byte[] (66 samples, 4.05%)</title><rect x="1142.2" y="691.0" width="47.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1145.2" y="702.0">byte[]</text>
</g>
</g>
</svg>
