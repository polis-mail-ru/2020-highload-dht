<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (69,071 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (50,067 samples, 72.49%)</title><rect x="10.0" y="739.0" width="855.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (50,057 samples, 72.47%)</title><rect x="10.2" y="723.0" width="855.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.2" y="734.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (50,057 samples, 72.47%)</title><rect x="10.2" y="707.0" width="855.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.2" y="718.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (168 samples, 0.24%)</title><rect x="10.2" y="691.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (168 samples, 0.24%)</title><rect x="10.2" y="675.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (166 samples, 0.24%)</title><rect x="10.2" y="659.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (166 samples, 0.24%)</title><rect x="10.2" y="643.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (166 samples, 0.24%)</title><rect x="10.2" y="627.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$72/339857875.run (49,139 samples, 71.14%)</title><rect x="13.0" y="691.0" width="839.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.0" y="702.0">ru/mail/polis/service/re1nex/BaseService$$Lambda$72/339857875.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (49,139 samples, 71.14%)</title><rect x="13.0" y="675.0" width="839.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.0" y="686.0">ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (208 samples, 0.30%)</title><rect x="13.0" y="659.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (208 samples, 0.30%)</title><rect x="13.0" y="643.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (208 samples, 0.30%)</title><rect x="13.0" y="627.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (172 samples, 0.25%)</title><rect x="13.0" y="611.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="16.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.05%)</title><rect x="16.0" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.0" y="622.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.05%)</title><rect x="16.0" y="595.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="19.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (12,945 samples, 18.74%)</title><rect x="16.6" y="659.0" width="221.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.6" y="670.0">ru/mail/polis/service/re1nex/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.get (12,945 samples, 18.74%)</title><rect x="16.6" y="643.0" width="221.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.6" y="654.0">ru/mail/polis/service/re1nex/..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.get (12,638 samples, 18.30%)</title><rect x="16.6" y="627.0" width="215.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.6" y="638.0">ru/mail/polis/service/re1nex..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1113249484.linkToTargetMethod (150 samples, 0.22%)</title><rect x="16.6" y="611.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1754634617.invoke (150 samples, 0.22%)</title><rect x="16.6" y="595.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (150 samples, 0.22%)</title><rect x="16.6" y="579.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (61 samples, 0.09%)</title><rect x="16.6" y="563.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (61 samples, 0.09%)</title><rect x="16.6" y="547.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="19.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (89 samples, 0.13%)</title><rect x="17.6" y="563.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (89 samples, 0.13%)</title><rect x="17.6" y="547.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.6" y="558.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.13%)</title><rect x="17.6" y="531.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="20.6" y="542.0"></text>
</g>
<g>
<title>one.nio.http.Response (47 samples, 0.07%)</title><rect x="19.2" y="611.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="22.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (231 samples, 0.33%)</title><rect x="20.0" y="611.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.0" y="622.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.14%)</title><rect x="20.0" y="595.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="23.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (83 samples, 0.12%)</title><rect x="21.6" y="595.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="24.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.07%)</title><rect x="23.0" y="595.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="26.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (11,979 samples, 17.34%)</title><rect x="23.9" y="611.0" width="204.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.9" y="622.0">ru/mail/polis/dao/DAO.getVa..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,599 samples, 2.32%)</title><rect x="23.9" y="595.0" width="27.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.9" y="606.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,373 samples, 1.99%)</title><rect x="23.9" y="579.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.9" y="590.0">c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,373 samples, 1.99%)</title><rect x="23.9" y="563.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.9" y="574.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,373 samples, 1.99%)</title><rect x="23.9" y="547.0" width="23.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,373 samples, 1.99%)</title><rect x="23.9" y="531.0" width="23.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.9" y="542.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,373 samples, 1.99%)</title><rect x="23.9" y="515.0" width="23.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.9" y="526.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,373 samples, 1.99%)</title><rect x="23.9" y="499.0" width="23.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.9" y="510.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,373 samples, 1.99%)</title><rect x="23.9" y="483.0" width="23.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.9" y="494.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,280 samples, 1.85%)</title><rect x="23.9" y="467.0" width="21.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.9" y="478.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,280 samples, 1.85%)</title><rect x="23.9" y="451.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.9" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,280 samples, 1.85%)</title><rect x="23.9" y="435.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.9" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,280 samples, 1.85%)</title><rect x="23.9" y="419.0" width="21.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.9" y="430.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (512 samples, 0.74%)</title><rect x="23.9" y="403.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.9" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (331 samples, 0.48%)</title><rect x="23.9" y="387.0" width="5.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="26.9" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (181 samples, 0.26%)</title><rect x="29.6" y="387.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.6" y="398.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.26%)</title><rect x="29.6" y="371.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="32.6" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (58 samples, 0.08%)</title><rect x="32.7" y="403.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="35.7" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (50 samples, 0.07%)</title><rect x="33.6" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (169 samples, 0.24%)</title><rect x="34.5" y="403.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (169 samples, 0.24%)</title><rect x="34.5" y="387.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.5" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (110 samples, 0.16%)</title><rect x="34.5" y="371.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="37.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (59 samples, 0.09%)</title><rect x="36.4" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.4" y="382.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.09%)</title><rect x="36.4" y="355.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="39.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (491 samples, 0.71%)</title><rect x="37.4" y="403.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (323 samples, 0.47%)</title><rect x="37.4" y="387.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.4" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (202 samples, 0.29%)</title><rect x="37.4" y="371.0" width="3.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="40.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (121 samples, 0.18%)</title><rect x="40.8" y="371.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.8" y="382.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.18%)</title><rect x="40.8" y="355.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="43.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (168 samples, 0.24%)</title><rect x="42.9" y="387.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (168 samples, 0.24%)</title><rect x="42.9" y="371.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.9" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (109 samples, 0.16%)</title><rect x="42.9" y="355.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="45.9" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (59 samples, 0.09%)</title><rect x="44.8" y="355.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.8" y="366.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.09%)</title><rect x="44.8" y="339.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="47.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (93 samples, 0.13%)</title><rect x="45.8" y="467.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.8" y="478.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (93 samples, 0.13%)</title><rect x="45.8" y="451.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (93 samples, 0.13%)</title><rect x="45.8" y="435.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (93 samples, 0.13%)</title><rect x="45.8" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (93 samples, 0.13%)</title><rect x="45.8" y="403.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.8" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (93 samples, 0.13%)</title><rect x="45.8" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.8" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (93 samples, 0.13%)</title><rect x="45.8" y="371.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="48.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$119/1347879083.apply (226 samples, 0.33%)</title><rect x="47.4" y="579.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (226 samples, 0.33%)</title><rect x="47.4" y="563.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (226 samples, 0.33%)</title><rect x="47.4" y="547.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (226 samples, 0.33%)</title><rect x="47.4" y="531.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="50.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (104 samples, 0.15%)</title><rect x="51.2" y="595.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (104 samples, 0.15%)</title><rect x="51.2" y="579.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.2" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (104 samples, 0.15%)</title><rect x="51.2" y="563.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="54.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (10,276 samples, 14.88%)</title><rect x="53.0" y="595.0" width="175.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.0" y="606.0">ru/mail/polis/dao/re1ne..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,121 samples, 3.07%)</title><rect x="53.0" y="579.0" width="36.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.0" y="590.0">com..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (29 samples, 0.04%)</title><rect x="53.0" y="563.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="56.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,092 samples, 3.03%)</title><rect x="53.5" y="563.0" width="35.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.5" y="574.0">com..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (56 samples, 0.08%)</title><rect x="53.5" y="547.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="56.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (107 samples, 0.15%)</title><rect x="54.5" y="547.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.5" y="558.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (107 samples, 0.15%)</title><rect x="54.5" y="531.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="57.5" y="542.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (61 samples, 0.09%)</title><rect x="56.3" y="547.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="59.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (54 samples, 0.08%)</title><rect x="57.3" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.3" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.08%)</title><rect x="57.3" y="531.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="60.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,349 samples, 1.95%)</title><rect x="58.2" y="547.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.2" y="558.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,349 samples, 1.95%)</title><rect x="58.2" y="531.0" width="23.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.2" y="542.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,349 samples, 1.95%)</title><rect x="58.2" y="515.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,349 samples, 1.95%)</title><rect x="58.2" y="499.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.2" y="510.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,349 samples, 1.95%)</title><rect x="58.2" y="483.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.2" y="494.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,349 samples, 1.95%)</title><rect x="58.2" y="467.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.2" y="478.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,256 samples, 1.82%)</title><rect x="58.2" y="451.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.2" y="462.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,256 samples, 1.82%)</title><rect x="58.2" y="435.0" width="21.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.2" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,256 samples, 1.82%)</title><rect x="58.2" y="419.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.2" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,256 samples, 1.82%)</title><rect x="58.2" y="403.0" width="21.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.2" y="414.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (501 samples, 0.73%)</title><rect x="58.2" y="387.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.2" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (327 samples, 0.47%)</title><rect x="58.2" y="371.0" width="5.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="61.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (174 samples, 0.25%)</title><rect x="63.8" y="371.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.8" y="382.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.25%)</title><rect x="63.8" y="355.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="66.8" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (43 samples, 0.06%)</title><rect x="66.8" y="387.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="69.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (54 samples, 0.08%)</title><rect x="67.5" y="387.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="70.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (164 samples, 0.24%)</title><rect x="68.5" y="387.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (164 samples, 0.24%)</title><rect x="68.5" y="371.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.5" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (106 samples, 0.15%)</title><rect x="68.5" y="355.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="71.5" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (58 samples, 0.08%)</title><rect x="70.3" y="355.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.3" y="366.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.08%)</title><rect x="70.3" y="339.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="73.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (494 samples, 0.72%)</title><rect x="71.3" y="387.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (332 samples, 0.48%)</title><rect x="71.3" y="371.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.3" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (220 samples, 0.32%)</title><rect x="71.3" y="355.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="74.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (112 samples, 0.16%)</title><rect x="75.0" y="355.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.0" y="366.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.16%)</title><rect x="75.0" y="339.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="78.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (162 samples, 0.23%)</title><rect x="76.9" y="371.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (162 samples, 0.23%)</title><rect x="76.9" y="355.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.9" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (89 samples, 0.13%)</title><rect x="76.9" y="339.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="79.9" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (73 samples, 0.11%)</title><rect x="78.5" y="339.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.5" y="350.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.11%)</title><rect x="78.5" y="323.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="81.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (93 samples, 0.13%)</title><rect x="79.7" y="451.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (93 samples, 0.13%)</title><rect x="79.7" y="435.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (93 samples, 0.13%)</title><rect x="79.7" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (93 samples, 0.13%)</title><rect x="79.7" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (93 samples, 0.13%)</title><rect x="79.7" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (93 samples, 0.13%)</title><rect x="79.7" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (93 samples, 0.13%)</title><rect x="79.7" y="355.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="82.7" y="366.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (465 samples, 0.67%)</title><rect x="81.3" y="547.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (465 samples, 0.67%)</title><rect x="81.3" y="531.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (465 samples, 0.67%)</title><rect x="81.3" y="515.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (63 samples, 0.09%)</title><rect x="81.3" y="499.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/313632186.getAsBoolean (63 samples, 0.09%)</title><rect x="81.3" y="483.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (63 samples, 0.09%)</title><rect x="81.3" y="467.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (63 samples, 0.09%)</title><rect x="81.3" y="451.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (63 samples, 0.09%)</title><rect x="81.3" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$94/188886982.apply (63 samples, 0.09%)</title><rect x="81.3" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (63 samples, 0.09%)</title><rect x="81.3" y="403.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.3" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (63 samples, 0.09%)</title><rect x="81.3" y="387.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="84.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (402 samples, 0.58%)</title><rect x="82.4" y="499.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.4" y="510.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (77 samples, 0.11%)</title><rect x="82.4" y="483.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="85.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.12%)</title><rect x="83.7" y="483.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.12%)</title><rect x="83.7" y="467.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/1347405282.get$Lambda (43 samples, 0.06%)</title><rect x="83.7" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.7" y="462.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$96 (43 samples, 0.06%)</title><rect x="83.7" y="435.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="86.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/313632186.get$Lambda (37 samples, 0.05%)</title><rect x="84.4" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.4" y="462.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (37 samples, 0.05%)</title><rect x="84.4" y="435.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="87.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (55 samples, 0.08%)</title><rect x="85.0" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (55 samples, 0.08%)</title><rect x="85.0" y="467.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.0" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (55 samples, 0.08%)</title><rect x="85.0" y="451.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="88.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (190 samples, 0.28%)</title><rect x="86.0" y="483.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (190 samples, 0.28%)</title><rect x="86.0" y="467.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="89.0" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (44 samples, 0.06%)</title><rect x="89.2" y="579.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="92.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5,892 samples, 8.53%)</title><rect x="90.0" y="579.0" width="100.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.0" y="590.0">java/lang/It..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (70 samples, 0.10%)</title><rect x="90.0" y="563.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.0" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (70 samples, 0.10%)</title><rect x="90.0" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (70 samples, 0.10%)</title><rect x="90.0" y="531.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (70 samples, 0.10%)</title><rect x="90.0" y="515.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="93.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$106/182251096.accept (5,822 samples, 8.43%)</title><rect x="91.2" y="563.0" width="99.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.2" y="574.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$cellIterator$5 (5,822 samples, 8.43%)</title><rect x="91.2" y="547.0" width="99.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.2" y="558.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.iterator (5,822 samples, 8.43%)</title><rect x="91.2" y="531.0" width="99.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.2" y="542.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.SSTable$1 (136 samples, 0.20%)</title><rect x="91.2" y="515.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="94.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt; (5,686 samples, 8.23%)</title><rect x="93.5" y="515.0" width="97.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.5" y="526.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.binarySearch (5,686 samples, 8.23%)</title><rect x="93.5" y="499.0" width="97.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.5" y="510.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (5,686 samples, 8.23%)</title><rect x="93.5" y="483.0" width="97.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.5" y="494.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,734 samples, 5.41%)</title><rect x="93.5" y="467.0" width="63.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.5" y="478.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,513 samples, 3.64%)</title><rect x="93.5" y="451.0" width="42.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="96.5" y="462.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,221 samples, 1.77%)</title><rect x="136.4" y="451.0" width="20.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.4" y="462.0"></text>
</g>
<g>
<title>byte[] (1,221 samples, 1.77%)</title><rect x="136.4" y="435.0" width="20.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="139.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (1,952 samples, 2.83%)</title><rect x="157.3" y="467.0" width="33.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.3" y="478.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,952 samples, 2.83%)</title><rect x="157.3" y="451.0" width="33.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.3" y="462.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,261 samples, 1.83%)</title><rect x="157.3" y="435.0" width="21.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="160.3" y="446.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (691 samples, 1.00%)</title><rect x="178.8" y="435.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.8" y="446.0"></text>
</g>
<g>
<title>byte[] (691 samples, 1.00%)</title><rect x="178.8" y="419.0" width="11.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="181.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.07%)</title><rect x="190.6" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.07%)</title><rect x="190.6" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$106/182251096.get$Lambda (48 samples, 0.07%)</title><rect x="190.6" y="547.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.6" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$106 (48 samples, 0.07%)</title><rect x="190.6" y="531.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="193.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (75 samples, 0.11%)</title><rect x="191.5" y="579.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (75 samples, 0.11%)</title><rect x="191.5" y="563.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="194.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (64 samples, 0.09%)</title><rect x="192.7" y="579.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (64 samples, 0.09%)</title><rect x="192.7" y="563.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (64 samples, 0.09%)</title><rect x="192.7" y="547.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.7" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (64 samples, 0.09%)</title><rect x="192.7" y="531.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.7" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (64 samples, 0.09%)</title><rect x="192.7" y="515.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="195.7" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (31 samples, 0.04%)</title><rect x="192.7" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.7" y="510.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (31 samples, 0.04%)</title><rect x="192.7" y="483.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="195.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (33 samples, 0.05%)</title><rect x="193.3" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (33 samples, 0.05%)</title><rect x="193.3" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (33 samples, 0.05%)</title><rect x="193.3" y="467.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="196.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,353 samples, 1.96%)</title><rect x="193.8" y="579.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.8" y="590.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (51 samples, 0.07%)</title><rect x="193.8" y="563.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="196.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,302 samples, 1.89%)</title><rect x="194.7" y="563.0" width="22.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.7" y="574.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,302 samples, 1.89%)</title><rect x="194.7" y="547.0" width="22.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.7" y="558.0">c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,302 samples, 1.89%)</title><rect x="194.7" y="531.0" width="22.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.7" y="542.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,302 samples, 1.89%)</title><rect x="194.7" y="515.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.7" y="526.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,302 samples, 1.89%)</title><rect x="194.7" y="499.0" width="22.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.7" y="510.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,302 samples, 1.89%)</title><rect x="194.7" y="483.0" width="22.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.7" y="494.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,302 samples, 1.89%)</title><rect x="194.7" y="467.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.7" y="478.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,302 samples, 1.89%)</title><rect x="194.7" y="451.0" width="22.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.7" y="462.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,194 samples, 1.73%)</title><rect x="194.7" y="435.0" width="20.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,194 samples, 1.73%)</title><rect x="194.7" y="419.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,194 samples, 1.73%)</title><rect x="194.7" y="403.0" width="20.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,194 samples, 1.73%)</title><rect x="194.7" y="387.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (493 samples, 0.71%)</title><rect x="194.7" y="371.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (308 samples, 0.45%)</title><rect x="194.7" y="355.0" width="5.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="197.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (185 samples, 0.27%)</title><rect x="200.0" y="355.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.0" y="366.0"></text>
</g>
<g>
<title>byte[] (185 samples, 0.27%)</title><rect x="200.0" y="339.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="203.0" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (51 samples, 0.07%)</title><rect x="203.1" y="371.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="206.1" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (47 samples, 0.07%)</title><rect x="204.0" y="371.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="207.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (147 samples, 0.21%)</title><rect x="204.8" y="371.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (147 samples, 0.21%)</title><rect x="204.8" y="355.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (89 samples, 0.13%)</title><rect x="204.8" y="339.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="207.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (58 samples, 0.08%)</title><rect x="206.3" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.3" y="350.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.08%)</title><rect x="206.3" y="323.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="209.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (456 samples, 0.66%)</title><rect x="207.3" y="371.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.3" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (286 samples, 0.41%)</title><rect x="207.3" y="355.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.3" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (172 samples, 0.25%)</title><rect x="207.3" y="339.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="210.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (114 samples, 0.17%)</title><rect x="210.3" y="339.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.3" y="350.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.17%)</title><rect x="210.3" y="323.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="213.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (170 samples, 0.25%)</title><rect x="212.2" y="355.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (170 samples, 0.25%)</title><rect x="212.2" y="339.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.2" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (116 samples, 0.17%)</title><rect x="212.2" y="323.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="215.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (54 samples, 0.08%)</title><rect x="214.2" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.2" y="334.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.08%)</title><rect x="214.2" y="307.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="217.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (108 samples, 0.16%)</title><rect x="215.1" y="435.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.1" y="446.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (108 samples, 0.16%)</title><rect x="215.1" y="419.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (108 samples, 0.16%)</title><rect x="215.1" y="403.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (108 samples, 0.16%)</title><rect x="215.1" y="387.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (108 samples, 0.16%)</title><rect x="215.1" y="371.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (108 samples, 0.16%)</title><rect x="215.1" y="355.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.1" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (108 samples, 0.16%)</title><rect x="215.1" y="339.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="218.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (679 samples, 0.98%)</title><rect x="217.0" y="579.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.0" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (192 samples, 0.28%)</title><rect x="217.0" y="563.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (69 samples, 0.10%)</title><rect x="217.0" y="547.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (69 samples, 0.10%)</title><rect x="217.0" y="531.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="220.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (123 samples, 0.18%)</title><rect x="218.1" y="547.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.1" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (123 samples, 0.18%)</title><rect x="218.1" y="531.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="221.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (43 samples, 0.06%)</title><rect x="220.2" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (43 samples, 0.06%)</title><rect x="220.2" y="547.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="223.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (102 samples, 0.15%)</title><rect x="221.0" y="563.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (102 samples, 0.15%)</title><rect x="221.0" y="547.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (102 samples, 0.15%)</title><rect x="221.0" y="531.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (102 samples, 0.15%)</title><rect x="221.0" y="515.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="224.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (206 samples, 0.30%)</title><rect x="222.7" y="563.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.7" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (59 samples, 0.09%)</title><rect x="222.7" y="547.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="225.7" y="558.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (59 samples, 0.09%)</title><rect x="222.7" y="531.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="225.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (147 samples, 0.21%)</title><rect x="223.7" y="547.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.05%)</title><rect x="223.7" y="531.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.05%)</title><rect x="223.7" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$95/1221768642.get$Lambda (34 samples, 0.05%)</title><rect x="223.7" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.7" y="510.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$95 (34 samples, 0.05%)</title><rect x="223.7" y="483.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="226.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (113 samples, 0.16%)</title><rect x="224.3" y="531.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.3" y="542.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (113 samples, 0.16%)</title><rect x="224.3" y="515.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="227.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (136 samples, 0.20%)</title><rect x="226.2" y="563.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.2" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (136 samples, 0.20%)</title><rect x="226.2" y="547.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="229.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (68 samples, 0.10%)</title><rect x="228.6" y="611.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.6" y="622.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.10%)</title><rect x="228.6" y="595.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="231.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (163 samples, 0.24%)</title><rect x="229.7" y="611.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (63 samples, 0.09%)</title><rect x="229.7" y="595.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (63 samples, 0.09%)</title><rect x="229.7" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (63 samples, 0.09%)</title><rect x="229.7" y="563.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.7" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (63 samples, 0.09%)</title><rect x="229.7" y="547.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.7" y="558.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.09%)</title><rect x="229.7" y="531.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="232.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (100 samples, 0.14%)</title><rect x="230.8" y="595.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (100 samples, 0.14%)</title><rect x="230.8" y="579.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.8" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (100 samples, 0.14%)</title><rect x="230.8" y="563.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="233.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (307 samples, 0.44%)</title><rect x="232.5" y="627.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (307 samples, 0.44%)</title><rect x="232.5" y="611.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (307 samples, 0.44%)</title><rect x="232.5" y="595.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (223 samples, 0.32%)</title><rect x="232.5" y="579.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (223 samples, 0.32%)</title><rect x="232.5" y="563.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.5" y="574.0"></text>
</g>
<g>
<title>byte[] (223 samples, 0.32%)</title><rect x="232.5" y="547.0" width="3.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="235.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (84 samples, 0.12%)</title><rect x="236.3" y="579.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.3" y="590.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (84 samples, 0.12%)</title><rect x="236.3" y="563.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="239.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.sendReplica (35,986 samples, 52.10%)</title><rect x="237.7" y="659.0" width="614.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.7" y="670.0">ru/mail/polis/service/re1nex/ApiControllerImpl.sendReplica</text>
</g>
<g>
<title>one.nio.http.Request (1,635 samples, 2.37%)</title><rect x="237.7" y="643.0" width="28.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="240.7" y="654.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (182 samples, 0.26%)</title><rect x="265.7" y="643.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (182 samples, 0.26%)</title><rect x="265.7" y="627.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="268.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (34,169 samples, 49.47%)</title><rect x="268.8" y="643.0" width="583.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.8" y="654.0">ru/mail/polis/service/re1nex/ApiController.sendReplica</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (2,512 samples, 3.64%)</title><rect x="268.8" y="627.0" width="42.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.8" y="638.0">ru/m..</text>
</g>
<g>
<title>byte[] (49 samples, 0.07%)</title><rect x="268.8" y="611.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="271.8" y="622.0"></text>
</g>
<g>
<title>java.util.TreeSet (46 samples, 0.07%)</title><rect x="269.6" y="611.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="272.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (54 samples, 0.08%)</title><rect x="270.4" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Long (54 samples, 0.08%)</title><rect x="270.4" y="595.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="273.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (110 samples, 0.16%)</title><rect x="271.3" y="611.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (110 samples, 0.16%)</title><rect x="271.3" y="595.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.3" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (110 samples, 0.16%)</title><rect x="271.3" y="579.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="274.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (120 samples, 0.17%)</title><rect x="273.2" y="611.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.2" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (120 samples, 0.17%)</title><rect x="273.2" y="595.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="276.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (1,547 samples, 2.24%)</title><rect x="275.3" y="611.0" width="26.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.3" y="622.0">r..</text>
</g>
<g>
<title>java/security/MessageDigest.digest (102 samples, 0.15%)</title><rect x="275.3" y="595.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.3" y="606.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (102 samples, 0.15%)</title><rect x="275.3" y="579.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.3" y="590.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (102 samples, 0.15%)</title><rect x="275.3" y="563.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.3" y="574.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.15%)</title><rect x="275.3" y="547.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="278.3" y="558.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (1,445 samples, 2.09%)</title><rect x="277.0" y="595.0" width="24.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.0" y="606.0">j..</text>
</g>
<g>
<title>java/security/Security.getImpl (1,445 samples, 2.09%)</title><rect x="277.0" y="579.0" width="24.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.0" y="590.0">j..</text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (1,445 samples, 2.09%)</title><rect x="277.0" y="563.0" width="24.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.0" y="574.0">s..</text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (1,410 samples, 2.04%)</title><rect x="277.0" y="547.0" width="24.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.0" y="558.0">s..</text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (1,368 samples, 1.98%)</title><rect x="277.0" y="531.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.0" y="542.0">j..</text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (1,368 samples, 1.98%)</title><rect x="277.0" y="515.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.0" y="526.0">j..</text>
</g>
<g>
<title>java.lang.Class[] (31 samples, 0.04%)</title><rect x="277.0" y="499.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="280.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.05%)</title><rect x="277.5" y="499.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="280.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (195 samples, 0.28%)</title><rect x="278.1" y="499.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (195 samples, 0.28%)</title><rect x="278.1" y="483.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.1" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (195 samples, 0.28%)</title><rect x="278.1" y="467.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.1" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (195 samples, 0.28%)</title><rect x="278.1" y="451.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.1" y="462.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (195 samples, 0.28%)</title><rect x="278.1" y="435.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="281.1" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1,108 samples, 1.60%)</title><rect x="281.4" y="499.0" width="19.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1,108 samples, 1.60%)</title><rect x="281.4" y="483.0" width="19.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (1,108 samples, 1.60%)</title><rect x="281.4" y="467.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.4" y="478.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (160 samples, 0.23%)</title><rect x="281.4" y="451.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="284.4" y="462.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (948 samples, 1.37%)</title><rect x="284.2" y="451.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.2" y="462.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (948 samples, 1.37%)</title><rect x="284.2" y="435.0" width="16.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.2" y="446.0"></text>
</g>
<g>
<title>int[] (750 samples, 1.09%)</title><rect x="284.2" y="419.0" width="12.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="287.2" y="430.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (198 samples, 0.29%)</title><rect x="297.0" y="419.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.0" y="430.0"></text>
</g>
<g>
<title>byte[] (198 samples, 0.29%)</title><rect x="297.0" y="403.0" width="3.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="300.0" y="414.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (42 samples, 0.06%)</title><rect x="300.4" y="531.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="303.4" y="542.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (35 samples, 0.05%)</title><rect x="301.1" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.1" y="558.0"></text>
</g>
<g>
<title>java/security/Provider.getService (35 samples, 0.05%)</title><rect x="301.1" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (35 samples, 0.05%)</title><rect x="301.1" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.1" y="526.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (35 samples, 0.05%)</title><rect x="301.1" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.05%)</title><rect x="301.1" y="483.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="304.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (586 samples, 0.85%)</title><rect x="301.7" y="611.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.7" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (205 samples, 0.30%)</title><rect x="301.7" y="595.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.7" y="606.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (50 samples, 0.07%)</title><rect x="301.7" y="579.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="304.7" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (155 samples, 0.22%)</title><rect x="302.5" y="579.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="305.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (94 samples, 0.14%)</title><rect x="302.5" y="563.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (94 samples, 0.14%)</title><rect x="302.5" y="547.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="305.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (61 samples, 0.09%)</title><rect x="304.2" y="563.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (61 samples, 0.09%)</title><rect x="304.2" y="547.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="307.2" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (59 samples, 0.09%)</title><rect x="305.2" y="595.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.2" y="606.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (59 samples, 0.09%)</title><rect x="305.2" y="579.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="308.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (70 samples, 0.10%)</title><rect x="306.2" y="595.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.2" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (70 samples, 0.10%)</title><rect x="306.2" y="579.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="309.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (252 samples, 0.36%)</title><rect x="307.4" y="595.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (252 samples, 0.36%)</title><rect x="307.4" y="579.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.4" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (252 samples, 0.36%)</title><rect x="307.4" y="563.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="310.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (31,609 samples, 45.76%)</title><rect x="311.7" y="627.0" width="540.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.7" y="638.0">ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.08%)</title><rect x="311.7" y="611.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.08%)</title><rect x="311.7" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl$$Lambda$101/2096500112.get$Lambda (53 samples, 0.08%)</title><rect x="311.7" y="579.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.7" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ApiControllerImpl$$Lambda$101 (53 samples, 0.08%)</title><rect x="311.7" y="563.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="314.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (30,191 samples, 43.71%)</title><rect x="312.6" y="611.0" width="515.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.6" y="622.0">ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses</text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.05%)</title><rect x="312.6" y="595.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="315.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (29 samples, 0.04%)</title><rect x="313.2" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="316.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (29 samples, 0.04%)</title><rect x="313.2" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.2" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (29 samples, 0.04%)</title><rect x="313.2" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (29 samples, 0.04%)</title><rect x="313.2" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.04%)</title><rect x="313.2" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.2" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.04%)</title><rect x="313.2" y="515.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="316.2" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (28 samples, 0.04%)</title><rect x="313.6" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (21 samples, 0.03%)</title><rect x="313.6" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (21 samples, 0.03%)</title><rect x="313.6" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.6" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (21 samples, 0.03%)</title><rect x="313.6" y="547.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="316.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl$$Lambda$101/2096500112.handleLocalResponse (12,483 samples, 18.07%)</title><rect x="314.1" y="595.0" width="213.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.1" y="606.0">ru/mail/polis/service/re1nex..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.lambda$handleResponses$0 (12,483 samples, 18.07%)</title><rect x="314.1" y="579.0" width="213.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.1" y="590.0">ru/mail/polis/service/re1nex..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.get (12,483 samples, 18.07%)</title><rect x="314.1" y="563.0" width="213.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.1" y="574.0">ru/mail/polis/service/re1nex..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1113249484.linkToTargetMethod (33 samples, 0.05%)</title><rect x="314.1" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1754634617.invoke (33 samples, 0.05%)</title><rect x="314.1" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.05%)</title><rect x="314.1" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (28 samples, 0.04%)</title><rect x="314.2" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (28 samples, 0.04%)</title><rect x="314.2" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.2" y="494.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.04%)</title><rect x="314.2" y="467.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="317.2" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Response (21 samples, 0.03%)</title><rect x="314.7" y="547.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="317.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (67 samples, 0.10%)</title><rect x="315.0" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.0" y="558.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.05%)</title><rect x="315.0" y="531.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="318.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.04%)</title><rect x="315.6" y="531.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="318.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (12,206 samples, 17.67%)</title><rect x="316.2" y="547.0" width="208.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.2" y="558.0">ru/mail/polis/dao/DAO.getVa..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,261 samples, 1.83%)</title><rect x="316.2" y="531.0" width="21.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.2" y="542.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,172 samples, 1.70%)</title><rect x="316.2" y="515.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.2" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,172 samples, 1.70%)</title><rect x="316.2" y="499.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.2" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,172 samples, 1.70%)</title><rect x="316.2" y="483.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,172 samples, 1.70%)</title><rect x="316.2" y="467.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,172 samples, 1.70%)</title><rect x="316.2" y="451.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,172 samples, 1.70%)</title><rect x="316.2" y="435.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,172 samples, 1.70%)</title><rect x="316.2" y="419.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,119 samples, 1.62%)</title><rect x="316.2" y="403.0" width="19.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,119 samples, 1.62%)</title><rect x="316.2" y="387.0" width="19.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,119 samples, 1.62%)</title><rect x="316.2" y="371.0" width="19.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,119 samples, 1.62%)</title><rect x="316.2" y="355.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (397 samples, 0.57%)</title><rect x="316.2" y="339.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.2" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (244 samples, 0.35%)</title><rect x="316.2" y="323.0" width="4.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="319.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (153 samples, 0.22%)</title><rect x="320.4" y="323.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.4" y="334.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.22%)</title><rect x="320.4" y="307.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="323.4" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (32 samples, 0.05%)</title><rect x="323.0" y="339.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="326.0" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (27 samples, 0.04%)</title><rect x="323.5" y="339.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="326.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (148 samples, 0.21%)</title><rect x="324.0" y="339.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="327.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (148 samples, 0.21%)</title><rect x="324.0" y="323.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (98 samples, 0.14%)</title><rect x="324.0" y="307.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="327.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (50 samples, 0.07%)</title><rect x="325.7" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.7" y="318.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.07%)</title><rect x="325.7" y="291.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="328.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (515 samples, 0.75%)</title><rect x="326.5" y="339.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (344 samples, 0.50%)</title><rect x="326.5" y="323.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (220 samples, 0.32%)</title><rect x="326.5" y="307.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="329.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (124 samples, 0.18%)</title><rect x="330.3" y="307.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.3" y="318.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.18%)</title><rect x="330.3" y="291.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="333.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (171 samples, 0.25%)</title><rect x="332.4" y="323.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (171 samples, 0.25%)</title><rect x="332.4" y="307.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (103 samples, 0.15%)</title><rect x="332.4" y="291.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="335.4" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (68 samples, 0.10%)</title><rect x="334.1" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.1" y="302.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.10%)</title><rect x="334.1" y="275.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="337.1" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (53 samples, 0.08%)</title><rect x="335.3" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.3" y="414.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (53 samples, 0.08%)</title><rect x="335.3" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (53 samples, 0.08%)</title><rect x="335.3" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (53 samples, 0.08%)</title><rect x="335.3" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (53 samples, 0.08%)</title><rect x="335.3" y="339.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.3" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (53 samples, 0.08%)</title><rect x="335.3" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (53 samples, 0.08%)</title><rect x="335.3" y="307.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="338.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$119/1347879083.apply (89 samples, 0.13%)</title><rect x="336.2" y="515.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (89 samples, 0.13%)</title><rect x="336.2" y="499.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="339.2" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (89 samples, 0.13%)</title><rect x="336.2" y="483.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.2" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (89 samples, 0.13%)</title><rect x="336.2" y="467.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="339.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (45 samples, 0.07%)</title><rect x="337.7" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (45 samples, 0.07%)</title><rect x="337.7" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (45 samples, 0.07%)</title><rect x="337.7" y="499.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="340.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (10,900 samples, 15.78%)</title><rect x="338.5" y="531.0" width="186.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.5" y="542.0">ru/mail/polis/dao/re1nex..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,431 samples, 3.52%)</title><rect x="338.5" y="515.0" width="41.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.5" y="526.0">com..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (37 samples, 0.05%)</title><rect x="338.5" y="499.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="341.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,394 samples, 3.47%)</title><rect x="339.1" y="499.0" width="40.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.1" y="510.0">com..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (47 samples, 0.07%)</title><rect x="339.1" y="483.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="342.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (128 samples, 0.19%)</title><rect x="339.9" y="483.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.9" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (128 samples, 0.19%)</title><rect x="339.9" y="467.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="342.9" y="478.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (65 samples, 0.09%)</title><rect x="342.1" y="483.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="345.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (48 samples, 0.07%)</title><rect x="343.2" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.2" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.07%)</title><rect x="343.2" y="467.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="346.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,619 samples, 2.34%)</title><rect x="344.1" y="483.0" width="27.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,619 samples, 2.34%)</title><rect x="344.1" y="467.0" width="27.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.1" y="478.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,619 samples, 2.34%)</title><rect x="344.1" y="451.0" width="27.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.1" y="462.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,619 samples, 2.34%)</title><rect x="344.1" y="435.0" width="27.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="347.1" y="446.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,619 samples, 2.34%)</title><rect x="344.1" y="419.0" width="27.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.1" y="430.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,619 samples, 2.34%)</title><rect x="344.1" y="403.0" width="27.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.1" y="414.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,489 samples, 2.16%)</title><rect x="344.1" y="387.0" width="25.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.1" y="398.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,489 samples, 2.16%)</title><rect x="344.1" y="371.0" width="25.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.1" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,489 samples, 2.16%)</title><rect x="344.1" y="355.0" width="25.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.1" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,489 samples, 2.16%)</title><rect x="344.1" y="339.0" width="25.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.1" y="350.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (577 samples, 0.84%)</title><rect x="344.1" y="323.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (404 samples, 0.58%)</title><rect x="344.1" y="307.0" width="6.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="347.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (173 samples, 0.25%)</title><rect x="351.0" y="307.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.0" y="318.0"></text>
</g>
<g>
<title>byte[] (173 samples, 0.25%)</title><rect x="351.0" y="291.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="354.0" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (70 samples, 0.10%)</title><rect x="353.9" y="323.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="356.9" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (58 samples, 0.08%)</title><rect x="355.1" y="323.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="358.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (211 samples, 0.31%)</title><rect x="356.1" y="323.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (211 samples, 0.31%)</title><rect x="356.1" y="307.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (124 samples, 0.18%)</title><rect x="356.1" y="291.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="359.1" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (87 samples, 0.13%)</title><rect x="358.2" y="291.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.2" y="302.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.13%)</title><rect x="358.2" y="275.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="361.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (573 samples, 0.83%)</title><rect x="359.7" y="323.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (350 samples, 0.51%)</title><rect x="359.7" y="307.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (251 samples, 0.36%)</title><rect x="359.7" y="291.0" width="4.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="362.7" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (99 samples, 0.14%)</title><rect x="364.0" y="291.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.0" y="302.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.14%)</title><rect x="364.0" y="275.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="367.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (223 samples, 0.32%)</title><rect x="365.7" y="307.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (223 samples, 0.32%)</title><rect x="365.7" y="291.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (166 samples, 0.24%)</title><rect x="365.7" y="275.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="368.7" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (57 samples, 0.08%)</title><rect x="368.5" y="275.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.5" y="286.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.08%)</title><rect x="368.5" y="259.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="371.5" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (130 samples, 0.19%)</title><rect x="369.5" y="387.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (130 samples, 0.19%)</title><rect x="369.5" y="371.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (130 samples, 0.19%)</title><rect x="369.5" y="355.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (130 samples, 0.19%)</title><rect x="369.5" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (130 samples, 0.19%)</title><rect x="369.5" y="323.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.5" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (130 samples, 0.19%)</title><rect x="369.5" y="307.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (130 samples, 0.19%)</title><rect x="369.5" y="291.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="372.5" y="302.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (487 samples, 0.71%)</title><rect x="371.7" y="483.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (487 samples, 0.71%)</title><rect x="371.7" y="467.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (487 samples, 0.71%)</title><rect x="371.7" y="451.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (45 samples, 0.07%)</title><rect x="371.7" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/313632186.getAsBoolean (45 samples, 0.07%)</title><rect x="371.7" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (45 samples, 0.07%)</title><rect x="371.7" y="403.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (45 samples, 0.07%)</title><rect x="371.7" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (45 samples, 0.07%)</title><rect x="371.7" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$94/188886982.apply (45 samples, 0.07%)</title><rect x="371.7" y="355.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (45 samples, 0.07%)</title><rect x="371.7" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.7" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (45 samples, 0.07%)</title><rect x="371.7" y="323.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="374.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (442 samples, 0.64%)</title><rect x="372.5" y="435.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.5" y="446.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (97 samples, 0.14%)</title><rect x="372.5" y="419.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="375.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.09%)</title><rect x="374.1" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.09%)</title><rect x="374.1" y="403.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$96/1347405282.get$Lambda (30 samples, 0.04%)</title><rect x="374.1" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.1" y="398.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$96 (30 samples, 0.04%)</title><rect x="374.1" y="371.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="377.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$97/313632186.get$Lambda (29 samples, 0.04%)</title><rect x="374.7" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.7" y="398.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$97 (29 samples, 0.04%)</title><rect x="374.7" y="371.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="377.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (72 samples, 0.10%)</title><rect x="375.2" y="419.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (72 samples, 0.10%)</title><rect x="375.2" y="403.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (72 samples, 0.10%)</title><rect x="375.2" y="387.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="378.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (214 samples, 0.31%)</title><rect x="376.4" y="419.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (214 samples, 0.31%)</title><rect x="376.4" y="403.0" width="3.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="379.4" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (61 samples, 0.09%)</title><rect x="380.0" y="515.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="383.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5,970 samples, 8.64%)</title><rect x="381.1" y="515.0" width="102.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.1" y="526.0">java/lang/It..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (79 samples, 0.11%)</title><rect x="381.1" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.1" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (79 samples, 0.11%)</title><rect x="381.1" y="483.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (79 samples, 0.11%)</title><rect x="381.1" y="467.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.1" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (79 samples, 0.11%)</title><rect x="381.1" y="451.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="384.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$106/182251096.accept (5,891 samples, 8.53%)</title><rect x="382.4" y="499.0" width="100.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.4" y="510.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$cellIterator$5 (5,891 samples, 8.53%)</title><rect x="382.4" y="483.0" width="100.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.4" y="494.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.iterator (5,891 samples, 8.53%)</title><rect x="382.4" y="467.0" width="100.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="385.4" y="478.0">ru/mail/poli..</text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.SSTable$1 (61 samples, 0.09%)</title><rect x="382.4" y="451.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="385.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt; (5,830 samples, 8.44%)</title><rect x="383.5" y="451.0" width="99.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.5" y="462.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.binarySearch (5,830 samples, 8.44%)</title><rect x="383.5" y="435.0" width="99.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.5" y="446.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (5,830 samples, 8.44%)</title><rect x="383.5" y="419.0" width="99.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.5" y="430.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,008 samples, 5.80%)</title><rect x="383.5" y="403.0" width="68.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.5" y="414.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,684 samples, 3.89%)</title><rect x="383.5" y="387.0" width="45.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="386.5" y="398.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,324 samples, 1.92%)</title><rect x="429.3" y="387.0" width="22.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.3" y="398.0">j..</text>
</g>
<g>
<title>byte[] (1,324 samples, 1.92%)</title><rect x="429.3" y="371.0" width="22.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="432.3" y="382.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (1,821 samples, 2.64%)</title><rect x="451.9" y="403.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.9" y="414.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,813 samples, 2.62%)</title><rect x="451.9" y="387.0" width="31.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.9" y="398.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,231 samples, 1.78%)</title><rect x="451.9" y="371.0" width="21.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="454.9" y="382.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (582 samples, 0.84%)</title><rect x="473.0" y="371.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.0" y="382.0"></text>
</g>
<g>
<title>byte[] (582 samples, 0.84%)</title><rect x="473.0" y="355.0" width="9.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="476.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.08%)</title><rect x="483.1" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.08%)</title><rect x="483.1" y="499.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$106/182251096.get$Lambda (55 samples, 0.08%)</title><rect x="483.1" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.1" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$106 (55 samples, 0.08%)</title><rect x="483.1" y="467.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="486.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (64 samples, 0.09%)</title><rect x="484.0" y="515.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (64 samples, 0.09%)</title><rect x="484.0" y="499.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="487.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (116 samples, 0.17%)</title><rect x="485.1" y="515.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (116 samples, 0.17%)</title><rect x="485.1" y="499.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (116 samples, 0.17%)</title><rect x="485.1" y="483.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.1" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (114 samples, 0.17%)</title><rect x="485.1" y="467.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.1" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (114 samples, 0.17%)</title><rect x="485.1" y="451.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.1" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (42 samples, 0.06%)</title><rect x="485.1" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.1" y="446.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (42 samples, 0.06%)</title><rect x="485.1" y="419.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="488.1" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.createMap (31 samples, 0.04%)</title><rect x="485.8" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.8" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.&lt;init&gt; (31 samples, 0.04%)</title><rect x="485.8" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.8" y="430.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry[] (31 samples, 0.04%)</title><rect x="485.8" y="403.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="488.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (41 samples, 0.06%)</title><rect x="486.3" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (41 samples, 0.06%)</title><rect x="486.3" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (41 samples, 0.06%)</title><rect x="486.3" y="403.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="489.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,506 samples, 2.18%)</title><rect x="487.1" y="515.0" width="25.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.1" y="526.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (56 samples, 0.08%)</title><rect x="487.1" y="499.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="490.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,450 samples, 2.10%)</title><rect x="488.0" y="499.0" width="24.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.0" y="510.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,450 samples, 2.10%)</title><rect x="488.0" y="483.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.0" y="494.0">c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,450 samples, 2.10%)</title><rect x="488.0" y="467.0" width="24.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.0" y="478.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,450 samples, 2.10%)</title><rect x="488.0" y="451.0" width="24.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.0" y="462.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,450 samples, 2.10%)</title><rect x="488.0" y="435.0" width="24.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.0" y="446.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,450 samples, 2.10%)</title><rect x="488.0" y="419.0" width="24.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.0" y="430.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,450 samples, 2.10%)</title><rect x="488.0" y="403.0" width="24.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.0" y="414.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,450 samples, 2.10%)</title><rect x="488.0" y="387.0" width="24.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.0" y="398.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,324 samples, 1.92%)</title><rect x="488.0" y="371.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.0" y="382.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,324 samples, 1.92%)</title><rect x="488.0" y="355.0" width="22.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.0" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,324 samples, 1.92%)</title><rect x="488.0" y="339.0" width="22.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.0" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,324 samples, 1.92%)</title><rect x="488.0" y="323.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.0" y="334.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (484 samples, 0.70%)</title><rect x="488.0" y="307.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (345 samples, 0.50%)</title><rect x="488.0" y="291.0" width="5.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="491.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (139 samples, 0.20%)</title><rect x="493.9" y="291.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.9" y="302.0"></text>
</g>
<g>
<title>byte[] (139 samples, 0.20%)</title><rect x="493.9" y="275.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="496.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (70 samples, 0.10%)</title><rect x="496.3" y="307.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="499.3" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (65 samples, 0.09%)</title><rect x="497.5" y="307.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="500.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (150 samples, 0.22%)</title><rect x="498.6" y="307.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (150 samples, 0.22%)</title><rect x="498.6" y="291.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (92 samples, 0.13%)</title><rect x="498.6" y="275.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="501.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (58 samples, 0.08%)</title><rect x="500.2" y="275.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.2" y="286.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.08%)</title><rect x="500.2" y="259.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="503.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (555 samples, 0.80%)</title><rect x="501.2" y="307.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (325 samples, 0.47%)</title><rect x="501.2" y="291.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (216 samples, 0.31%)</title><rect x="501.2" y="275.0" width="3.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="504.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (109 samples, 0.16%)</title><rect x="504.9" y="275.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.9" y="286.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.16%)</title><rect x="504.9" y="259.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="507.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (230 samples, 0.33%)</title><rect x="506.7" y="291.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (230 samples, 0.33%)</title><rect x="506.7" y="275.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.7" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (150 samples, 0.22%)</title><rect x="506.7" y="259.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="509.7" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (80 samples, 0.12%)</title><rect x="509.3" y="259.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.3" y="270.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.12%)</title><rect x="509.3" y="243.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="512.3" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (126 samples, 0.18%)</title><rect x="510.7" y="371.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (126 samples, 0.18%)</title><rect x="510.7" y="355.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (126 samples, 0.18%)</title><rect x="510.7" y="339.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (126 samples, 0.18%)</title><rect x="510.7" y="323.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (126 samples, 0.18%)</title><rect x="510.7" y="307.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (126 samples, 0.18%)</title><rect x="510.7" y="291.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (126 samples, 0.18%)</title><rect x="510.7" y="275.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="513.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (697 samples, 1.01%)</title><rect x="512.8" y="515.0" width="11.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.8" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (212 samples, 0.31%)</title><rect x="512.8" y="499.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (73 samples, 0.11%)</title><rect x="512.8" y="483.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (73 samples, 0.11%)</title><rect x="512.8" y="467.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="515.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (139 samples, 0.20%)</title><rect x="514.1" y="483.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.1" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (139 samples, 0.20%)</title><rect x="514.1" y="467.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="517.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (45 samples, 0.07%)</title><rect x="516.4" y="499.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (45 samples, 0.07%)</title><rect x="516.4" y="483.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="519.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (104 samples, 0.15%)</title><rect x="517.2" y="499.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (104 samples, 0.15%)</title><rect x="517.2" y="483.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (104 samples, 0.15%)</title><rect x="517.2" y="467.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (104 samples, 0.15%)</title><rect x="517.2" y="451.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="520.2" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (189 samples, 0.27%)</title><rect x="519.0" y="499.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.0" y="510.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (49 samples, 0.07%)</title><rect x="519.0" y="483.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.0" y="494.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (49 samples, 0.07%)</title><rect x="519.0" y="467.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="522.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (140 samples, 0.20%)</title><rect x="519.8" y="483.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.06%)</title><rect x="519.8" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.06%)</title><rect x="519.8" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$95/1221768642.get$Lambda (42 samples, 0.06%)</title><rect x="519.8" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.8" y="446.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$95 (42 samples, 0.06%)</title><rect x="519.8" y="419.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="522.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (98 samples, 0.14%)</title><rect x="520.5" y="467.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.5" y="478.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (98 samples, 0.14%)</title><rect x="520.5" y="451.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="523.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (147 samples, 0.21%)</title><rect x="522.2" y="499.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.2" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (147 samples, 0.21%)</title><rect x="522.2" y="483.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="525.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (28 samples, 0.04%)</title><rect x="524.7" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.7" y="558.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.04%)</title><rect x="524.7" y="531.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="527.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (128 samples, 0.19%)</title><rect x="525.2" y="547.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (34 samples, 0.05%)</title><rect x="525.2" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (34 samples, 0.05%)</title><rect x="525.2" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (34 samples, 0.05%)</title><rect x="525.2" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="528.2" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.05%)</title><rect x="525.2" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="528.2" y="494.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.05%)</title><rect x="525.2" y="467.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="528.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (94 samples, 0.14%)</title><rect x="525.8" y="531.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (94 samples, 0.14%)</title><rect x="525.8" y="515.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (94 samples, 0.14%)</title><rect x="525.8" y="499.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="528.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.proxy (17,619 samples, 25.51%)</title><rect x="527.4" y="595.0" width="301.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.4" y="606.0">ru/mail/polis/service/re1nex/ApiControlle..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (17,619 samples, 25.51%)</title><rect x="527.4" y="579.0" width="301.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.4" y="590.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (17,619 samples, 25.51%)</title><rect x="527.4" y="563.0" width="301.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.4" y="574.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (42 samples, 0.06%)</title><rect x="527.4" y="547.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="530.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (15,388 samples, 22.28%)</title><rect x="528.1" y="547.0" width="262.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.1" y="558.0">one/nio/http/HttpClient$ResponseRea..</text>
</g>
<g>
<title>byte[] (408 samples, 0.59%)</title><rect x="528.1" y="531.0" width="7.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="531.1" y="542.0"></text>
</g>
<g>
<title>byte[] (14,980 samples, 21.69%)</title><rect x="535.1" y="531.0" width="255.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="538.1" y="542.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1,900 samples, 2.75%)</title><rect x="791.0" y="547.0" width="32.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.0" y="558.0">on..</text>
</g>
<g>
<title>byte[] (83 samples, 0.12%)</title><rect x="791.0" y="531.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="794.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (153 samples, 0.22%)</title><rect x="792.4" y="531.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (153 samples, 0.22%)</title><rect x="792.4" y="515.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String (63 samples, 0.09%)</title><rect x="792.4" y="499.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="795.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (90 samples, 0.13%)</title><rect x="793.5" y="499.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.5" y="510.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.13%)</title><rect x="793.5" y="483.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="796.5" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Response (55 samples, 0.08%)</title><rect x="795.0" y="531.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="798.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1,417 samples, 2.05%)</title><rect x="796.0" y="531.0" width="24.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.0" y="542.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,417 samples, 2.05%)</title><rect x="796.0" y="515.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.0" y="526.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,417 samples, 2.05%)</title><rect x="796.0" y="499.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.0" y="510.0">o..</text>
</g>
<g>
<title>char[] (774 samples, 1.12%)</title><rect x="796.0" y="483.0" width="13.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="799.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String (263 samples, 0.38%)</title><rect x="809.2" y="483.0" width="4.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="812.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (380 samples, 0.55%)</title><rect x="813.7" y="483.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (380 samples, 0.55%)</title><rect x="813.7" y="467.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (380 samples, 0.55%)</title><rect x="813.7" y="451.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.7" y="462.0"></text>
</g>
<g>
<title>byte[] (380 samples, 0.55%)</title><rect x="813.7" y="435.0" width="6.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="816.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (82 samples, 0.12%)</title><rect x="820.2" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (82 samples, 0.12%)</title><rect x="820.2" y="515.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="823.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (110 samples, 0.16%)</title><rect x="821.6" y="531.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (110 samples, 0.16%)</title><rect x="821.6" y="515.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (110 samples, 0.16%)</title><rect x="821.6" y="499.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.6" y="510.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.07%)</title><rect x="821.6" y="483.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="824.6" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.09%)</title><rect x="822.4" y="483.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.4" y="494.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.09%)</title><rect x="822.4" y="467.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="825.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (81 samples, 0.12%)</title><rect x="823.4" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.4" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (81 samples, 0.12%)</title><rect x="823.4" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.4" y="542.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.12%)</title><rect x="823.4" y="515.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="826.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (157 samples, 0.23%)</title><rect x="824.8" y="547.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (157 samples, 0.23%)</title><rect x="824.8" y="531.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (157 samples, 0.23%)</title><rect x="824.8" y="515.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.11%)</title><rect x="824.8" y="499.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="827.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.12%)</title><rect x="826.1" y="499.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.1" y="510.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.12%)</title><rect x="826.1" y="483.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="829.1" y="494.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (51 samples, 0.07%)</title><rect x="827.5" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.5" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (51 samples, 0.07%)</title><rect x="827.5" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.5" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (51 samples, 0.07%)</title><rect x="827.5" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.5" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (51 samples, 0.07%)</title><rect x="827.5" y="499.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="830.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (284 samples, 0.41%)</title><rect x="828.4" y="611.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (284 samples, 0.41%)</title><rect x="828.4" y="595.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (284 samples, 0.41%)</title><rect x="828.4" y="579.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (204 samples, 0.30%)</title><rect x="828.4" y="563.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (204 samples, 0.30%)</title><rect x="828.4" y="547.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.4" y="558.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.30%)</title><rect x="828.4" y="531.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="831.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (80 samples, 0.12%)</title><rect x="831.9" y="563.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.9" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (80 samples, 0.12%)</title><rect x="831.9" y="547.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="834.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergeGetResponses (1,081 samples, 1.57%)</title><rect x="833.2" y="611.0" width="18.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.2" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Response (59 samples, 0.09%)</title><rect x="833.2" y="595.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="836.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (270 samples, 0.39%)</title><rect x="834.2" y="595.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.2" y="606.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.16%)</title><rect x="834.2" y="579.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="837.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (114 samples, 0.17%)</title><rect x="836.2" y="579.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="839.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.06%)</title><rect x="838.1" y="579.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="841.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (437 samples, 0.63%)</title><rect x="838.9" y="595.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (437 samples, 0.63%)</title><rect x="838.9" y="579.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (437 samples, 0.63%)</title><rect x="838.9" y="563.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (199 samples, 0.29%)</title><rect x="838.9" y="547.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="841.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (238 samples, 0.34%)</title><rect x="842.3" y="547.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.3" y="558.0"></text>
</g>
<g>
<title>byte[] (238 samples, 0.34%)</title><rect x="842.3" y="531.0" width="4.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="845.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.getResponseFromValues (315 samples, 0.46%)</title><rect x="846.3" y="595.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (315 samples, 0.46%)</title><rect x="846.3" y="579.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.3" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (77 samples, 0.11%)</title><rect x="846.3" y="563.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="849.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (238 samples, 0.34%)</title><rect x="847.6" y="563.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.6" y="574.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.14%)</title><rect x="847.6" y="547.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="850.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (86 samples, 0.12%)</title><rect x="849.3" y="547.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="852.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.08%)</title><rect x="850.8" y="547.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="853.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (48 samples, 0.07%)</title><rect x="851.7" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (48 samples, 0.07%)</title><rect x="851.7" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (48 samples, 0.07%)</title><rect x="851.7" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="854.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (48 samples, 0.07%)</title><rect x="851.7" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.07%)</title><rect x="851.7" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="854.7" y="574.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.07%)</title><rect x="851.7" y="547.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="854.7" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (750 samples, 1.09%)</title><rect x="852.5" y="691.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.5" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (750 samples, 1.09%)</title><rect x="852.5" y="675.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.5" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$158/807025047.run (750 samples, 1.09%)</title><rect x="852.5" y="659.0" width="12.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.5" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (750 samples, 1.09%)</title><rect x="852.5" y="643.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.5" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (750 samples, 1.09%)</title><rect x="852.5" y="627.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.5" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (750 samples, 1.09%)</title><rect x="852.5" y="611.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.5" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (737 samples, 1.07%)</title><rect x="852.7" y="595.0" width="12.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.7" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (708 samples, 1.03%)</title><rect x="852.7" y="579.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.7" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (708 samples, 1.03%)</title><rect x="852.7" y="563.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.7" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (708 samples, 1.03%)</title><rect x="852.7" y="547.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.7" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (708 samples, 1.03%)</title><rect x="852.7" y="531.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.7" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (453 samples, 0.66%)</title><rect x="852.8" y="515.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (453 samples, 0.66%)</title><rect x="852.8" y="499.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (446 samples, 0.65%)</title><rect x="852.8" y="483.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.8" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (446 samples, 0.65%)</title><rect x="852.8" y="467.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.8" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (428 samples, 0.62%)</title><rect x="852.8" y="451.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.8" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (428 samples, 0.62%)</title><rect x="852.8" y="435.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.8" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (428 samples, 0.62%)</title><rect x="852.8" y="419.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.8" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (428 samples, 0.62%)</title><rect x="852.8" y="403.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.8" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (428 samples, 0.62%)</title><rect x="852.8" y="387.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.8" y="398.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (428 samples, 0.62%)</title><rect x="852.8" y="371.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.8" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (428 samples, 0.62%)</title><rect x="852.8" y="355.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.8" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (428 samples, 0.62%)</title><rect x="852.8" y="339.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.8" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (428 samples, 0.62%)</title><rect x="852.8" y="323.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.8" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (428 samples, 0.62%)</title><rect x="852.8" y="307.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.8" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (428 samples, 0.62%)</title><rect x="852.8" y="291.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.8" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (428 samples, 0.62%)</title><rect x="852.8" y="275.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.8" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (428 samples, 0.62%)</title><rect x="852.8" y="259.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.8" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (391 samples, 0.57%)</title><rect x="852.8" y="243.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.8" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (391 samples, 0.57%)</title><rect x="852.8" y="227.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.8" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (391 samples, 0.57%)</title><rect x="852.8" y="211.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.8" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (391 samples, 0.57%)</title><rect x="852.8" y="195.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.8" y="206.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (153 samples, 0.22%)</title><rect x="852.8" y="179.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.8" y="190.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (133 samples, 0.19%)</title><rect x="852.8" y="163.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.8" y="174.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (126 samples, 0.18%)</title><rect x="852.8" y="147.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.8" y="158.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (126 samples, 0.18%)</title><rect x="852.8" y="131.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.8" y="142.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (76 samples, 0.11%)</title><rect x="853.0" y="115.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.0" y="126.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (68 samples, 0.10%)</title><rect x="853.1" y="99.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.1" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (57 samples, 0.08%)</title><rect x="853.3" y="83.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.3" y="94.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (57 samples, 0.08%)</title><rect x="853.3" y="67.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="856.3" y="78.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (40 samples, 0.06%)</title><rect x="854.3" y="115.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.3" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.06%)</title><rect x="854.3" y="99.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="857.3" y="110.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (20 samples, 0.03%)</title><rect x="855.1" y="163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.1" y="174.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (129 samples, 0.19%)</title><rect x="855.7" y="179.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.7" y="190.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (117 samples, 0.17%)</title><rect x="855.9" y="163.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.9" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (110 samples, 0.16%)</title><rect x="856.0" y="147.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.0" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (110 samples, 0.16%)</title><rect x="856.0" y="131.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="859.0" y="142.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (93 samples, 0.13%)</title><rect x="857.9" y="179.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="860.9" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (82 samples, 0.12%)</title><rect x="857.9" y="163.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="860.9" y="174.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (37 samples, 0.05%)</title><rect x="859.5" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.5" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (37 samples, 0.05%)</title><rect x="859.5" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="862.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (37 samples, 0.05%)</title><rect x="859.5" y="211.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor6.invoke (37 samples, 0.05%)</title><rect x="859.5" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.5" y="206.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (37 samples, 0.05%)</title><rect x="859.5" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.5" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (37 samples, 0.05%)</title><rect x="859.5" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (37 samples, 0.05%)</title><rect x="859.5" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor48.invoke (37 samples, 0.05%)</title><rect x="859.5" y="131.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.5" y="142.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (37 samples, 0.05%)</title><rect x="859.5" y="115.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.5" y="126.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (37 samples, 0.05%)</title><rect x="859.5" y="99.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.5" y="110.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (17 samples, 0.02%)</title><rect x="860.1" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.1" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (188 samples, 0.27%)</title><rect x="860.5" y="515.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (188 samples, 0.27%)</title><rect x="860.5" y="499.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (188 samples, 0.27%)</title><rect x="860.5" y="483.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (188 samples, 0.27%)</title><rect x="860.5" y="467.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (188 samples, 0.27%)</title><rect x="860.5" y="451.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (185 samples, 0.27%)</title><rect x="860.5" y="435.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.5" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (177 samples, 0.26%)</title><rect x="860.6" y="419.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.6" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (177 samples, 0.26%)</title><rect x="860.6" y="403.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="863.6" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (174 samples, 0.25%)</title><rect x="860.7" y="387.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.7" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (169 samples, 0.24%)</title><rect x="860.7" y="371.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (168 samples, 0.24%)</title><rect x="860.7" y="355.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.7" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (153 samples, 0.22%)</title><rect x="861.0" y="339.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.0" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (147 samples, 0.21%)</title><rect x="861.1" y="323.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="864.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (147 samples, 0.21%)</title><rect x="861.1" y="307.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor35.invoke (147 samples, 0.21%)</title><rect x="861.1" y="291.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="864.1" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (147 samples, 0.21%)</title><rect x="861.1" y="275.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (143 samples, 0.21%)</title><rect x="861.1" y="259.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (143 samples, 0.21%)</title><rect x="861.1" y="243.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (40 samples, 0.06%)</title><rect x="861.1" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="864.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (40 samples, 0.06%)</title><rect x="861.1" y="211.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.1" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (37 samples, 0.05%)</title><rect x="861.1" y="195.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (37 samples, 0.05%)</title><rect x="861.1" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.1" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (37 samples, 0.05%)</title><rect x="861.1" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="864.1" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (32 samples, 0.05%)</title><rect x="861.2" y="147.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="864.2" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (30 samples, 0.04%)</title><rect x="861.2" y="131.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="864.2" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (30 samples, 0.04%)</title><rect x="861.2" y="115.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="864.2" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (25 samples, 0.04%)</title><rect x="861.3" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.3" y="110.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (20 samples, 0.03%)</title><rect x="861.3" y="83.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (20 samples, 0.03%)</title><rect x="861.3" y="67.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor35.invoke (20 samples, 0.03%)</title><rect x="861.3" y="51.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.3" y="62.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (20 samples, 0.03%)</title><rect x="861.3" y="35.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.3" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (49 samples, 0.07%)</title><rect x="861.8" y="227.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.8" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (30 samples, 0.04%)</title><rect x="861.8" y="211.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (29 samples, 0.04%)</title><rect x="861.8" y="195.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="864.8" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.03%)</title><rect x="861.9" y="179.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="864.9" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (19 samples, 0.03%)</title><rect x="862.3" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.3" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (19 samples, 0.03%)</title><rect x="862.3" y="195.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.3" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (17 samples, 0.02%)</title><rect x="862.3" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.3" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (17 samples, 0.02%)</title><rect x="862.3" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.3" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (54 samples, 0.08%)</title><rect x="862.6" y="227.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.6" y="238.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (54 samples, 0.08%)</title><rect x="862.6" y="211.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="865.6" y="222.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (19 samples, 0.03%)</title><rect x="863.7" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.7" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (19 samples, 0.03%)</title><rect x="863.7" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (19 samples, 0.03%)</title><rect x="863.7" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="866.7" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (19 samples, 0.03%)</title><rect x="863.7" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (15 samples, 0.02%)</title><rect x="863.8" y="451.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="866.8" y="462.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (47 samples, 0.07%)</title><rect x="864.0" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.0" y="526.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (46 samples, 0.07%)</title><rect x="864.1" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.1" y="510.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (45 samples, 0.07%)</title><rect x="864.1" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.1" y="494.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (45 samples, 0.07%)</title><rect x="864.1" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.1" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (45 samples, 0.07%)</title><rect x="864.1" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.1" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (45 samples, 0.07%)</title><rect x="864.1" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.1" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (24 samples, 0.03%)</title><rect x="864.1" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.1" y="430.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (28 samples, 0.04%)</title><rect x="864.9" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.9" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (28 samples, 0.04%)</title><rect x="864.9" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.9" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (28 samples, 0.04%)</title><rect x="864.9" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (25 samples, 0.04%)</title><rect x="864.9" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (22 samples, 0.03%)</title><rect x="864.9" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.9" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (19,004 samples, 27.51%)</title><rect x="865.3" y="739.0" width="324.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.3" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (463 samples, 0.67%)</title><rect x="865.3" y="723.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.3" y="734.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (463 samples, 0.67%)</title><rect x="865.3" y="707.0" width="7.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="868.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (18,541 samples, 26.84%)</title><rect x="873.2" y="723.0" width="316.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.2" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (18,541 samples, 26.84%)</title><rect x="873.2" y="707.0" width="316.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.2" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (18,541 samples, 26.84%)</title><rect x="873.2" y="691.0" width="316.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.2" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9,254 samples, 13.40%)</title><rect x="873.2" y="675.0" width="158.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.2" y="686.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9,254 samples, 13.40%)</title><rect x="873.2" y="659.0" width="158.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.2" y="670.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (8,059 samples, 11.67%)</title><rect x="873.2" y="643.0" width="137.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.2" y="654.0">RequestHandler3_h..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (919 samples, 1.33%)</title><rect x="873.2" y="627.0" width="15.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (919 samples, 1.33%)</title><rect x="873.2" y="611.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (919 samples, 1.33%)</title><rect x="873.2" y="595.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (919 samples, 1.33%)</title><rect x="873.2" y="579.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (406 samples, 0.59%)</title><rect x="873.2" y="563.0" width="7.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="876.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (513 samples, 0.74%)</title><rect x="880.2" y="563.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.2" y="574.0"></text>
</g>
<g>
<title>byte[] (513 samples, 0.74%)</title><rect x="880.2" y="547.0" width="8.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="883.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.handleRequest (7,140 samples, 10.34%)</title><rect x="888.9" y="627.0" width="122.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.9" y="638.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (7,140 samples, 10.34%)</title><rect x="888.9" y="611.0" width="122.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.9" y="622.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/276711299.linkToTargetMethod (487 samples, 0.71%)</title><rect x="888.9" y="595.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (487 samples, 0.71%)</title><rect x="888.9" y="579.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$72/339857875.get$Lambda (487 samples, 0.71%)</title><rect x="888.9" y="563.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.9" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$72 (487 samples, 0.71%)</title><rect x="888.9" y="547.0" width="8.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="891.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (6,653 samples, 9.63%)</title><rect x="897.3" y="595.0" width="113.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.3" y="606.0">ru/mail/polis/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (5,672 samples, 8.21%)</title><rect x="897.3" y="579.0" width="96.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.3" y="590.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (5,672 samples, 8.21%)</title><rect x="897.3" y="563.0" width="96.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.3" y="574.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (5,672 samples, 8.21%)</title><rect x="897.3" y="547.0" width="96.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.3" y="558.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (5,402 samples, 7.82%)</title><rect x="897.4" y="531.0" width="92.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="900.4" y="542.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (5,402 samples, 7.82%)</title><rect x="897.4" y="515.0" width="92.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.4" y="526.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (5,402 samples, 7.82%)</title><rect x="897.4" y="499.0" width="92.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.4" y="510.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (5,402 samples, 7.82%)</title><rect x="897.4" y="483.0" width="92.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.4" y="494.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (5,402 samples, 7.82%)</title><rect x="897.4" y="467.0" width="92.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.4" y="478.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (5,402 samples, 7.82%)</title><rect x="897.4" y="451.0" width="92.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.4" y="462.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (5,401 samples, 7.82%)</title><rect x="897.4" y="435.0" width="92.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.4" y="446.0">ch/qos/logb..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4,249 samples, 6.15%)</title><rect x="897.4" y="419.0" width="72.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.4" y="430.0">ch/qos/l..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4,249 samples, 6.15%)</title><rect x="897.4" y="403.0" width="72.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.4" y="414.0">ch/qos/l..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (2,777 samples, 4.02%)</title><rect x="897.4" y="387.0" width="47.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.4" y="398.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (2,777 samples, 4.02%)</title><rect x="897.4" y="371.0" width="47.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.4" y="382.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (2,114 samples, 3.06%)</title><rect x="897.4" y="355.0" width="36.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.4" y="366.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (2,114 samples, 3.06%)</title><rect x="897.4" y="339.0" width="36.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.4" y="350.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (2,114 samples, 3.06%)</title><rect x="897.4" y="323.0" width="36.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.4" y="334.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (2,114 samples, 3.06%)</title><rect x="897.4" y="307.0" width="36.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.4" y="318.0">ch/..</text>
</g>
<g>
<title>java.lang.StringBuilder (68 samples, 0.10%)</title><rect x="897.4" y="291.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="900.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (1,325 samples, 1.92%)</title><rect x="898.6" y="291.0" width="22.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.6" y="302.0">j..</text>
</g>
<g>
<title>byte[] (222 samples, 0.32%)</title><rect x="898.6" y="275.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="901.6" y="286.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (49 samples, 0.07%)</title><rect x="902.4" y="275.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="905.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (126 samples, 0.18%)</title><rect x="903.2" y="275.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="906.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (77 samples, 0.11%)</title><rect x="905.4" y="275.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.4" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (77 samples, 0.11%)</title><rect x="905.4" y="259.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.4" y="270.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.11%)</title><rect x="905.4" y="243.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="908.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (488 samples, 0.71%)</title><rect x="906.7" y="275.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (488 samples, 0.71%)</title><rect x="906.7" y="259.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.7" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (488 samples, 0.71%)</title><rect x="906.7" y="243.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="909.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (488 samples, 0.71%)</title><rect x="906.7" y="227.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.7" y="238.0"></text>
</g>
<g>
<title>byte[] (485 samples, 0.70%)</title><rect x="906.7" y="211.0" width="8.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="909.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (363 samples, 0.53%)</title><rect x="915.0" y="275.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (363 samples, 0.53%)</title><rect x="915.0" y="259.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.10%)</title><rect x="915.0" y="243.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="918.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (296 samples, 0.43%)</title><rect x="916.2" y="243.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.2" y="254.0"></text>
</g>
<g>
<title>byte[] (296 samples, 0.43%)</title><rect x="916.2" y="227.0" width="5.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="919.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (81 samples, 0.12%)</title><rect x="921.2" y="291.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.2" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (81 samples, 0.12%)</title><rect x="921.2" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.2" y="286.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.12%)</title><rect x="921.2" y="259.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="924.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (297 samples, 0.43%)</title><rect x="922.6" y="291.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.6" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (297 samples, 0.43%)</title><rect x="922.6" y="275.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.6" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (297 samples, 0.43%)</title><rect x="922.6" y="259.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="925.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (297 samples, 0.43%)</title><rect x="922.6" y="243.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="925.6" y="254.0"></text>
</g>
<g>
<title>byte[] (297 samples, 0.43%)</title><rect x="922.6" y="227.0" width="5.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="925.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (343 samples, 0.50%)</title><rect x="927.7" y="291.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (343 samples, 0.50%)</title><rect x="927.7" y="275.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.7" y="286.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.09%)</title><rect x="927.7" y="259.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="930.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (278 samples, 0.40%)</title><rect x="928.8" y="259.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.8" y="270.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.40%)</title><rect x="928.8" y="243.0" width="4.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="931.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (371 samples, 0.54%)</title><rect x="933.6" y="355.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.6" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (371 samples, 0.54%)</title><rect x="933.6" y="339.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.6" y="350.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.06%)</title><rect x="933.6" y="323.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="936.6" y="334.0"></text>
</g>
<g>
<title>byte[] (331 samples, 0.48%)</title><rect x="934.3" y="323.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="937.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (288 samples, 0.42%)</title><rect x="940.0" y="355.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (288 samples, 0.42%)</title><rect x="940.0" y="339.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="943.0" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (284 samples, 0.41%)</title><rect x="940.0" y="323.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.0" y="334.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.06%)</title><rect x="940.0" y="307.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="943.0" y="318.0"></text>
</g>
<g>
<title>byte[] (243 samples, 0.35%)</title><rect x="940.7" y="307.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="943.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (592 samples, 0.86%)</title><rect x="945.2" y="387.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="948.2" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (592 samples, 0.86%)</title><rect x="945.2" y="371.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.2" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (592 samples, 0.86%)</title><rect x="945.2" y="355.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (592 samples, 0.86%)</title><rect x="945.2" y="339.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="948.2" y="350.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.16%)</title><rect x="945.2" y="323.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="948.2" y="334.0"></text>
</g>
<g>
<title>byte[] (484 samples, 0.70%)</title><rect x="947.0" y="323.0" width="8.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="950.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (862 samples, 1.25%)</title><rect x="955.3" y="387.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (862 samples, 1.25%)</title><rect x="955.3" y="371.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="958.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (859 samples, 1.24%)</title><rect x="955.4" y="355.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.4" y="366.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.12%)</title><rect x="955.4" y="339.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="958.4" y="350.0"></text>
</g>
<g>
<title>byte[] (773 samples, 1.12%)</title><rect x="956.8" y="339.0" width="13.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="959.8" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1,152 samples, 1.67%)</title><rect x="970.0" y="419.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,152 samples, 1.67%)</title><rect x="970.0" y="403.0" width="19.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,152 samples, 1.67%)</title><rect x="970.0" y="387.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,152 samples, 1.67%)</title><rect x="970.0" y="371.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,152 samples, 1.67%)</title><rect x="970.0" y="355.0" width="19.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.0" y="366.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.12%)</title><rect x="970.0" y="339.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="973.0" y="350.0"></text>
</g>
<g>
<title>byte[] (1,068 samples, 1.55%)</title><rect x="971.5" y="339.0" width="18.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="974.5" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (261 samples, 0.38%)</title><rect x="989.7" y="531.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.7" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxy.&lt;init&gt; (249 samples, 0.36%)</title><rect x="989.9" y="515.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.9" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxyUtil.steArrayToStepArray (75 samples, 0.11%)</title><rect x="989.9" y="499.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.9" y="510.0"></text>
</g>
<g>
<title>ch.qos.logback.classic.spi.StackTraceElementProxy[] (18 samples, 0.03%)</title><rect x="989.9" y="483.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="992.9" y="494.0"></text>
</g>
<g>
<title>ch.qos.logback.classic.spi.StackTraceElementProxy (57 samples, 0.08%)</title><rect x="990.2" y="483.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="993.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (171 samples, 0.25%)</title><rect x="991.2" y="499.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.getOurStackTrace (159 samples, 0.23%)</title><rect x="991.5" y="483.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.of (159 samples, 0.23%)</title><rect x="991.5" y="467.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.5" y="478.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (21 samples, 0.03%)</title><rect x="991.5" y="451.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="994.5" y="462.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (138 samples, 0.20%)</title><rect x="991.8" y="451.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="994.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (909 samples, 1.32%)</title><rect x="994.2" y="579.0" width="15.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (208 samples, 0.30%)</title><rect x="994.4" y="563.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.&lt;init&gt; (199 samples, 0.29%)</title><rect x="994.5" y="547.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="997.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ThreadFactoryBuilder$1.newThread (199 samples, 0.29%)</title><rect x="994.5" y="531.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ThreadFactoryBuilder.access$000 (89 samples, 0.13%)</title><rect x="994.5" y="515.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ThreadFactoryBuilder.format (89 samples, 0.13%)</title><rect x="994.5" y="499.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="997.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.format (89 samples, 0.13%)</title><rect x="994.5" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.5" y="494.0"></text>
</g>
<g>
<title>java/util/Formatter.format (71 samples, 0.10%)</title><rect x="994.7" y="467.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.7" y="478.0"></text>
</g>
<g>
<title>java/util/Formatter.format (71 samples, 0.10%)</title><rect x="994.7" y="451.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.7" y="462.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (59 samples, 0.09%)</title><rect x="994.9" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.9" y="446.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (32 samples, 0.05%)</title><rect x="995.4" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.4" y="430.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (22 samples, 0.03%)</title><rect x="995.6" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.6" y="414.0"></text>
</g>
<g>
<title>int[] (21 samples, 0.03%)</title><rect x="995.6" y="387.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="998.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DefaultThreadFactory.newThread (106 samples, 0.15%)</title><rect x="996.1" y="515.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.1" y="526.0"></text>
</g>
<g>
<title>java.lang.Thread (25 samples, 0.04%)</title><rect x="996.1" y="499.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="999.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Thread (23 samples, 0.03%)</title><rect x="996.6" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="999.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (37 samples, 0.05%)</title><rect x="997.3" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.3" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (37 samples, 0.05%)</title><rect x="997.3" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.3" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (33 samples, 0.05%)</title><rect x="997.3" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1000.3" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (19 samples, 0.03%)</title><rect x="997.6" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (690 samples, 1.00%)</title><rect x="997.9" y="563.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (690 samples, 1.00%)</title><rect x="997.9" y="547.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.RejectedExecutionException (17 samples, 0.02%)</title><rect x="998.1" y="531.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1001.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.toString (161 samples, 0.23%)</title><rect x="998.4" y="531.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (16 samples, 0.02%)</title><rect x="998.5" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (16 samples, 0.02%)</title><rect x="998.5" y="499.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1001.5" y="510.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.02%)</title><rect x="998.5" y="483.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1001.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (87 samples, 0.13%)</title><rect x="999.0" y="515.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.0" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (87 samples, 0.13%)</title><rect x="999.0" y="499.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.0" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (87 samples, 0.13%)</title><rect x="999.0" y="483.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (87 samples, 0.13%)</title><rect x="999.0" y="467.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.0" y="478.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.12%)</title><rect x="999.0" y="451.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1002.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (37 samples, 0.05%)</title><rect x="1000.5" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.05%)</title><rect x="1000.5" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.05%)</title><rect x="1000.6" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.6" y="494.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.05%)</title><rect x="1000.6" y="467.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1003.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (113 samples, 0.16%)</title><rect x="1001.3" y="531.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.3" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (113 samples, 0.16%)</title><rect x="1001.3" y="515.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.3" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (113 samples, 0.16%)</title><rect x="1001.3" y="499.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1004.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.16%)</title><rect x="1001.3" y="483.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1004.3" y="494.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.13%)</title><rect x="1001.3" y="467.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1004.3" y="478.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.04%)</title><rect x="1002.8" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1005.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (65 samples, 0.09%)</title><rect x="1003.2" y="531.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1006.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (65 samples, 0.09%)</title><rect x="1003.2" y="515.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.09%)</title><rect x="1003.3" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.3" y="510.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.07%)</title><rect x="1003.3" y="483.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1006.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/RejectedExecutionException.&lt;init&gt; (149 samples, 0.22%)</title><rect x="1004.3" y="531.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.3" y="542.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (149 samples, 0.22%)</title><rect x="1004.3" y="515.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (149 samples, 0.22%)</title><rect x="1004.3" y="499.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.3" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (149 samples, 0.22%)</title><rect x="1004.3" y="483.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.3" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (149 samples, 0.22%)</title><rect x="1004.3" y="467.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1007.3" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (149 samples, 0.22%)</title><rect x="1004.3" y="451.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.3" y="462.0"></text>
</g>
<g>
<title>int[] (43 samples, 0.06%)</title><rect x="1004.3" y="435.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1007.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.05%)</title><rect x="1005.1" y="435.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1008.1" y="446.0"></text>
</g>
<g>
<title>long[] (38 samples, 0.06%)</title><rect x="1005.7" y="435.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1008.7" y="446.0"></text>
</g>
<g>
<title>short[] (22 samples, 0.03%)</title><rect x="1006.5" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1009.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.toString (165 samples, 0.24%)</title><rect x="1006.9" y="531.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1009.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.toString (65 samples, 0.09%)</title><rect x="1006.9" y="515.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1009.9" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (33 samples, 0.05%)</title><rect x="1007.1" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.1" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (33 samples, 0.05%)</title><rect x="1007.1" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.1" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (33 samples, 0.05%)</title><rect x="1007.1" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.05%)</title><rect x="1007.1" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1010.1" y="462.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.05%)</title><rect x="1007.1" y="435.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1010.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (20 samples, 0.03%)</title><rect x="1007.7" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.03%)</title><rect x="1007.7" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.02%)</title><rect x="1007.8" y="467.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.8" y="478.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.02%)</title><rect x="1007.8" y="451.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1010.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (65 samples, 0.09%)</title><rect x="1008.1" y="515.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1011.1" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (65 samples, 0.09%)</title><rect x="1008.1" y="499.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.1" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (65 samples, 0.09%)</title><rect x="1008.1" y="483.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (65 samples, 0.09%)</title><rect x="1008.1" y="467.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.1" y="478.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.09%)</title><rect x="1008.1" y="451.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1011.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (29 samples, 0.04%)</title><rect x="1009.2" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1012.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.04%)</title><rect x="1009.2" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1012.2" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.04%)</title><rect x="1009.2" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1012.2" y="494.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.04%)</title><rect x="1009.2" y="467.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1012.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendErrorResponse (72 samples, 0.10%)</title><rect x="1009.7" y="579.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 0.07%)</title><rect x="1009.7" y="563.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (48 samples, 0.07%)</title><rect x="1009.7" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 0.04%)</title><rect x="1009.7" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.7" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (27 samples, 0.04%)</title><rect x="1009.7" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.7" y="526.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.04%)</title><rect x="1009.7" y="499.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1012.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 0.03%)</title><rect x="1010.2" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.2" y="542.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (21 samples, 0.03%)</title><rect x="1010.2" y="515.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1013.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.03%)</title><rect x="1010.5" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1013.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.02%)</title><rect x="1010.7" y="547.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1013.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,195 samples, 1.73%)</title><rect x="1010.9" y="643.0" width="20.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,195 samples, 1.73%)</title><rect x="1010.9" y="627.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,195 samples, 1.73%)</title><rect x="1010.9" y="611.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String (528 samples, 0.76%)</title><rect x="1010.9" y="595.0" width="9.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1013.9" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (667 samples, 0.97%)</title><rect x="1019.9" y="595.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.9" y="606.0"></text>
</g>
<g>
<title>byte[] (667 samples, 0.97%)</title><rect x="1019.9" y="579.0" width="11.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1022.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,197 samples, 7.52%)</title><rect x="1031.3" y="675.0" width="88.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1034.3" y="686.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (887 samples, 1.28%)</title><rect x="1031.3" y="659.0" width="15.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1034.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,548 samples, 2.24%)</title><rect x="1046.5" y="659.0" width="26.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.5" y="670.0">o..</text>
</g>
<g>
<title>java.lang.String[] (1,471 samples, 2.13%)</title><rect x="1046.5" y="643.0" width="25.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1049.5" y="654.0">j..</text>
</g>
<g>
<title>java.lang.String[] (77 samples, 0.11%)</title><rect x="1071.6" y="643.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1074.6" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,762 samples, 4.00%)</title><rect x="1072.9" y="659.0" width="47.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.9" y="670.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,762 samples, 4.00%)</title><rect x="1072.9" y="643.0" width="47.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.9" y="654.0">one/..</text>
</g>
<g>
<title>char[] (1,658 samples, 2.40%)</title><rect x="1072.9" y="627.0" width="28.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1075.9" y="638.0">ch..</text>
</g>
<g>
<title>java.lang.String (418 samples, 0.61%)</title><rect x="1101.3" y="627.0" width="7.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1104.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (686 samples, 0.99%)</title><rect x="1108.4" y="627.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (686 samples, 0.99%)</title><rect x="1108.4" y="611.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (686 samples, 0.99%)</title><rect x="1108.4" y="595.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.4" y="606.0"></text>
</g>
<g>
<title>byte[] (686 samples, 0.99%)</title><rect x="1108.4" y="579.0" width="11.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1111.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,090 samples, 5.92%)</title><rect x="1120.1" y="675.0" width="69.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.1" y="686.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,090 samples, 5.92%)</title><rect x="1120.1" y="659.0" width="69.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.1" y="670.0">one/nio..</text>
</g>
<g>
<title>char[] (1,998 samples, 2.89%)</title><rect x="1120.1" y="643.0" width="34.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1123.1" y="654.0">ch..</text>
</g>
<g>
<title>java.lang.String (879 samples, 1.27%)</title><rect x="1154.3" y="643.0" width="15.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1157.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,213 samples, 1.76%)</title><rect x="1169.3" y="643.0" width="20.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,213 samples, 1.76%)</title><rect x="1169.3" y="627.0" width="20.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,213 samples, 1.76%)</title><rect x="1169.3" y="611.0" width="20.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.3" y="622.0"></text>
</g>
<g>
<title>byte[] (1,213 samples, 1.76%)</title><rect x="1169.3" y="595.0" width="20.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1172.3" y="606.0"></text>
</g>
</g>
</svg>
