<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="565"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="565"> </text>
<g id="frames">
<g>
<title>all (124,720 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="542.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (90,905 samples, 72.89%)</title><rect x="10.0" y="515.0" width="860.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (90,905 samples, 72.89%)</title><rect x="10.0" y="499.0" width="860.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (90,905 samples, 72.89%)</title><rect x="10.0" y="483.0" width="860.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (103 samples, 0.08%)</title><rect x="10.0" y="467.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (103 samples, 0.08%)</title><rect x="10.0" y="451.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (103 samples, 0.08%)</title><rect x="10.0" y="435.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (103 samples, 0.08%)</title><rect x="10.0" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (103 samples, 0.08%)</title><rect x="10.0" y="403.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$67/856457076.run (90,802 samples, 72.80%)</title><rect x="11.0" y="467.0" width="859.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.0" y="478.0">ru/mail/polis/service/re1nex/BaseService$$Lambda$67/856457076.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (90,802 samples, 72.80%)</title><rect x="11.0" y="451.0" width="859.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.0" y="462.0">ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (887 samples, 0.71%)</title><rect x="11.0" y="435.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (887 samples, 0.71%)</title><rect x="11.0" y="419.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (887 samples, 0.71%)</title><rect x="11.0" y="403.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String (867 samples, 0.70%)</title><rect x="11.0" y="387.0" width="8.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="14.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (50,839 samples, 40.76%)</title><rect x="19.4" y="435.0" width="481.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.4" y="446.0">ru/mail/polis/service/re1nex/ApiController.handleResponseLocal</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.get (50,839 samples, 40.76%)</title><rect x="19.4" y="419.0" width="481.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.4" y="430.0">ru/mail/polis/service/re1nex/ApiControllerImpl.get</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.get (50,610 samples, 40.58%)</title><rect x="19.4" y="403.0" width="478.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.4" y="414.0">ru/mail/polis/service/re1nex/ApiControllerImpl.get</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/927691409.linkToTargetMethod (90 samples, 0.07%)</title><rect x="19.4" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/361103641.invoke (90 samples, 0.07%)</title><rect x="19.4" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.07%)</title><rect x="19.4" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (31 samples, 0.02%)</title><rect x="19.4" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.02%)</title><rect x="19.4" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="22.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (59 samples, 0.05%)</title><rect x="19.7" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (59 samples, 0.05%)</title><rect x="19.7" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.7" y="334.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.05%)</title><rect x="19.7" y="307.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="22.7" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (30 samples, 0.02%)</title><rect x="20.2" y="387.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="23.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (150 samples, 0.12%)</title><rect x="20.5" y="387.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.5" y="398.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.05%)</title><rect x="20.5" y="371.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="23.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (46 samples, 0.04%)</title><rect x="21.1" y="371.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="24.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.03%)</title><rect x="21.6" y="371.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="24.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (50,170 samples, 40.23%)</title><rect x="21.9" y="387.0" width="474.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.9" y="398.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8,618 samples, 6.91%)</title><rect x="21.9" y="371.0" width="81.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.9" y="382.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7,637 samples, 6.12%)</title><rect x="21.9" y="355.0" width="72.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.9" y="366.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (30 samples, 0.02%)</title><rect x="21.9" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.9" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (30 samples, 0.02%)</title><rect x="21.9" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (30 samples, 0.02%)</title><rect x="21.9" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (30 samples, 0.02%)</title><rect x="21.9" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (30 samples, 0.02%)</title><rect x="21.9" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.9" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$75/869776578.getAsBoolean (30 samples, 0.02%)</title><rect x="21.9" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (30 samples, 0.02%)</title><rect x="21.9" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (30 samples, 0.02%)</title><rect x="21.9" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (30 samples, 0.02%)</title><rect x="21.9" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$72/1393868724.apply (30 samples, 0.02%)</title><rect x="21.9" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (30 samples, 0.02%)</title><rect x="21.9" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.9" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (30 samples, 0.02%)</title><rect x="21.9" y="163.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="24.9" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,850 samples, 1.48%)</title><rect x="22.2" y="339.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,850 samples, 1.48%)</title><rect x="22.2" y="323.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,850 samples, 1.48%)</title><rect x="22.2" y="307.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,850 samples, 1.48%)</title><rect x="22.2" y="291.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,850 samples, 1.48%)</title><rect x="22.2" y="275.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.2" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,850 samples, 1.48%)</title><rect x="22.2" y="259.0" width="17.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (1,850 samples, 1.48%)</title><rect x="22.2" y="243.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (1,850 samples, 1.48%)</title><rect x="22.2" y="227.0" width="17.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (1,850 samples, 1.48%)</title><rect x="22.2" y="211.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (1,850 samples, 1.48%)</title><rect x="22.2" y="195.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,850 samples, 1.48%)</title><rect x="22.2" y="179.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,850 samples, 1.48%)</title><rect x="22.2" y="163.0" width="17.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="25.2" y="174.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5,757 samples, 4.62%)</title><rect x="39.7" y="339.0" width="54.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.7" y="350.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5,757 samples, 4.62%)</title><rect x="39.7" y="323.0" width="54.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.7" y="334.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5,757 samples, 4.62%)</title><rect x="39.7" y="307.0" width="54.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.7" y="318.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5,757 samples, 4.62%)</title><rect x="39.7" y="291.0" width="54.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.7" y="302.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,757 samples, 4.62%)</title><rect x="39.7" y="275.0" width="54.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.7" y="286.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,757 samples, 4.62%)</title><rect x="39.7" y="259.0" width="54.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.7" y="270.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,252 samples, 4.21%)</title><rect x="39.7" y="243.0" width="49.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.7" y="254.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (5,252 samples, 4.21%)</title><rect x="39.7" y="227.0" width="49.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.7" y="238.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (5,252 samples, 4.21%)</title><rect x="39.7" y="211.0" width="49.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.7" y="222.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (5,252 samples, 4.21%)</title><rect x="39.7" y="195.0" width="49.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.7" y="206.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,099 samples, 1.68%)</title><rect x="39.7" y="179.0" width="19.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.7" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,374 samples, 1.10%)</title><rect x="39.7" y="163.0" width="13.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="42.7" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (725 samples, 0.58%)</title><rect x="52.7" y="163.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.7" y="174.0"></text>
</g>
<g>
<title>byte[] (725 samples, 0.58%)</title><rect x="52.7" y="147.0" width="6.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="55.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (266 samples, 0.21%)</title><rect x="59.6" y="179.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="62.6" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (205 samples, 0.16%)</title><rect x="62.1" y="179.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="65.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (667 samples, 0.53%)</title><rect x="64.0" y="179.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (667 samples, 0.53%)</title><rect x="64.0" y="163.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.0" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (452 samples, 0.36%)</title><rect x="64.0" y="147.0" width="4.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="67.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (215 samples, 0.17%)</title><rect x="68.3" y="147.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.3" y="158.0"></text>
</g>
<g>
<title>byte[] (215 samples, 0.17%)</title><rect x="68.3" y="131.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="71.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (2,015 samples, 1.62%)</title><rect x="70.3" y="179.0" width="19.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,317 samples, 1.06%)</title><rect x="70.3" y="163.0" width="12.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.3" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (861 samples, 0.69%)</title><rect x="70.3" y="147.0" width="8.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="73.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (456 samples, 0.37%)</title><rect x="78.5" y="147.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.5" y="158.0"></text>
</g>
<g>
<title>byte[] (456 samples, 0.37%)</title><rect x="78.5" y="131.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="81.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (698 samples, 0.56%)</title><rect x="82.8" y="163.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (698 samples, 0.56%)</title><rect x="82.8" y="147.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (467 samples, 0.37%)</title><rect x="82.8" y="131.0" width="4.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="85.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (231 samples, 0.19%)</title><rect x="87.2" y="131.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.2" y="142.0"></text>
</g>
<g>
<title>byte[] (231 samples, 0.19%)</title><rect x="87.2" y="115.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="90.2" y="126.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (505 samples, 0.40%)</title><rect x="89.4" y="243.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (505 samples, 0.40%)</title><rect x="89.4" y="227.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (505 samples, 0.40%)</title><rect x="89.4" y="211.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (505 samples, 0.40%)</title><rect x="89.4" y="195.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (505 samples, 0.40%)</title><rect x="89.4" y="179.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.4" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (505 samples, 0.40%)</title><rect x="89.4" y="163.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.4" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (505 samples, 0.40%)</title><rect x="89.4" y="147.0" width="4.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="92.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$83/1591887593.apply (981 samples, 0.79%)</title><rect x="94.2" y="355.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (981 samples, 0.79%)</title><rect x="94.2" y="339.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (981 samples, 0.79%)</title><rect x="94.2" y="323.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (981 samples, 0.79%)</title><rect x="94.2" y="307.0" width="9.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="97.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (83 samples, 0.07%)</title><rect x="103.5" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (83 samples, 0.07%)</title><rect x="103.5" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.5" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (83 samples, 0.07%)</title><rect x="103.5" y="339.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="106.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (41,469 samples, 33.25%)</title><rect x="104.2" y="371.0" width="392.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.2" y="382.0">ru/mail/polis/dao/re1nex/NewDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,711 samples, 5.38%)</title><rect x="104.2" y="355.0" width="63.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.2" y="366.0">com/goo..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (27 samples, 0.02%)</title><rect x="104.2" y="339.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="107.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,684 samples, 5.36%)</title><rect x="104.5" y="339.0" width="63.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.5" y="350.0">com/goo..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (40 samples, 0.03%)</title><rect x="104.5" y="323.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="107.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (280 samples, 0.22%)</title><rect x="104.9" y="323.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.9" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (280 samples, 0.22%)</title><rect x="104.9" y="307.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="107.9" y="318.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (43 samples, 0.03%)</title><rect x="107.5" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="110.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (37 samples, 0.03%)</title><rect x="107.9" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.03%)</title><rect x="107.9" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="110.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5,963 samples, 4.78%)</title><rect x="108.3" y="323.0" width="56.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.3" y="334.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5,963 samples, 4.78%)</title><rect x="108.3" y="307.0" width="56.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.3" y="318.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (180 samples, 0.14%)</title><rect x="108.3" y="291.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (180 samples, 0.14%)</title><rect x="108.3" y="275.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (180 samples, 0.14%)</title><rect x="108.3" y="259.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="111.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5,783 samples, 4.64%)</title><rect x="110.0" y="291.0" width="54.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.0" y="302.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5,783 samples, 4.64%)</title><rect x="110.0" y="275.0" width="54.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.0" y="286.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,783 samples, 4.64%)</title><rect x="110.0" y="259.0" width="54.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.0" y="270.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5,783 samples, 4.64%)</title><rect x="110.0" y="243.0" width="54.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.0" y="254.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,317 samples, 4.26%)</title><rect x="110.0" y="227.0" width="50.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.0" y="238.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (5,317 samples, 4.26%)</title><rect x="110.0" y="211.0" width="50.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.0" y="222.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (5,317 samples, 4.26%)</title><rect x="110.0" y="195.0" width="50.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.0" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (5,317 samples, 4.26%)</title><rect x="110.0" y="179.0" width="50.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.0" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,103 samples, 1.69%)</title><rect x="110.0" y="163.0" width="19.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.0" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,311 samples, 1.05%)</title><rect x="110.0" y="147.0" width="12.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="113.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (792 samples, 0.64%)</title><rect x="122.4" y="147.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.4" y="158.0"></text>
</g>
<g>
<title>byte[] (792 samples, 0.64%)</title><rect x="122.4" y="131.0" width="7.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="125.4" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (215 samples, 0.17%)</title><rect x="129.9" y="163.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="132.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (232 samples, 0.19%)</title><rect x="131.9" y="163.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="134.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (698 samples, 0.56%)</title><rect x="134.1" y="163.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (698 samples, 0.56%)</title><rect x="134.1" y="147.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (458 samples, 0.37%)</title><rect x="134.1" y="131.0" width="4.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="137.1" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (240 samples, 0.19%)</title><rect x="138.4" y="131.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.4" y="142.0"></text>
</g>
<g>
<title>byte[] (240 samples, 0.19%)</title><rect x="138.4" y="115.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="141.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (2,069 samples, 1.66%)</title><rect x="140.7" y="163.0" width="19.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,380 samples, 1.11%)</title><rect x="140.7" y="147.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (948 samples, 0.76%)</title><rect x="140.7" y="131.0" width="9.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="143.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (432 samples, 0.35%)</title><rect x="149.7" y="131.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.7" y="142.0"></text>
</g>
<g>
<title>byte[] (432 samples, 0.35%)</title><rect x="149.7" y="115.0" width="4.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="152.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (689 samples, 0.55%)</title><rect x="153.8" y="147.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (689 samples, 0.55%)</title><rect x="153.8" y="131.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (471 samples, 0.38%)</title><rect x="153.8" y="115.0" width="4.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="156.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (218 samples, 0.17%)</title><rect x="158.2" y="115.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.2" y="126.0"></text>
</g>
<g>
<title>byte[] (218 samples, 0.17%)</title><rect x="158.2" y="99.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="161.2" y="110.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (466 samples, 0.37%)</title><rect x="160.3" y="227.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (466 samples, 0.37%)</title><rect x="160.3" y="211.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (466 samples, 0.37%)</title><rect x="160.3" y="195.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (466 samples, 0.37%)</title><rect x="160.3" y="179.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (466 samples, 0.37%)</title><rect x="160.3" y="163.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.3" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (466 samples, 0.37%)</title><rect x="160.3" y="147.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (466 samples, 0.37%)</title><rect x="160.3" y="131.0" width="4.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="163.3" y="142.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (321 samples, 0.26%)</title><rect x="164.7" y="323.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (321 samples, 0.26%)</title><rect x="164.7" y="307.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (321 samples, 0.26%)</title><rect x="164.7" y="291.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (37 samples, 0.03%)</title><rect x="164.7" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$75/869776578.getAsBoolean (37 samples, 0.03%)</title><rect x="164.7" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.7" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (37 samples, 0.03%)</title><rect x="164.7" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (37 samples, 0.03%)</title><rect x="164.7" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (37 samples, 0.03%)</title><rect x="164.7" y="211.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$72/1393868724.apply (37 samples, 0.03%)</title><rect x="164.7" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (37 samples, 0.03%)</title><rect x="164.7" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (37 samples, 0.03%)</title><rect x="164.7" y="163.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="167.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (284 samples, 0.23%)</title><rect x="165.1" y="275.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.1" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (64 samples, 0.05%)</title><rect x="165.1" y="259.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="168.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.04%)</title><rect x="165.7" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="168.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.04%)</title><rect x="165.7" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (47 samples, 0.04%)</title><rect x="166.1" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (47 samples, 0.04%)</title><rect x="166.1" y="243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (47 samples, 0.04%)</title><rect x="166.1" y="227.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="169.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (122 samples, 0.10%)</title><rect x="166.6" y="259.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (122 samples, 0.10%)</title><rect x="166.6" y="243.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="169.6" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (35 samples, 0.03%)</title><rect x="167.7" y="355.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="170.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (33,624 samples, 26.96%)</title><rect x="168.1" y="355.0" width="318.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.1" y="366.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (58 samples, 0.05%)</title><rect x="168.1" y="339.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (58 samples, 0.05%)</title><rect x="168.1" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (58 samples, 0.05%)</title><rect x="168.1" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.1" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (58 samples, 0.05%)</title><rect x="168.1" y="291.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="171.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$79/423943441.accept (33,566 samples, 26.91%)</title><rect x="168.6" y="339.0" width="317.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.6" y="350.0">ru/mail/polis/dao/re1nex/NewDAO$$Lambda$79/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$cellIterator$5 (33,566 samples, 26.91%)</title><rect x="168.6" y="323.0" width="317.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.6" y="334.0">ru/mail/polis/dao/re1nex/NewDAO.lambda$cell..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.iterator (33,566 samples, 26.91%)</title><rect x="168.6" y="307.0" width="317.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.6" y="318.0">ru/mail/polis/dao/re1nex/SSTable.iterator</text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.SSTable$1 (293 samples, 0.23%)</title><rect x="168.6" y="291.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="171.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt; (33,273 samples, 26.68%)</title><rect x="171.4" y="291.0" width="314.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.4" y="302.0">ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.binarySearch (33,273 samples, 26.68%)</title><rect x="171.4" y="275.0" width="314.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.4" y="286.0">ru/mail/polis/dao/re1nex/SSTable.binarySea..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (33,273 samples, 26.68%)</title><rect x="171.4" y="259.0" width="314.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.4" y="270.0">ru/mail/polis/dao/re1nex/SSTable.key</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (22,087 samples, 17.71%)</title><rect x="171.4" y="243.0" width="209.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.4" y="254.0">java/nio/ByteBuffer.allocate</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14,853 samples, 11.91%)</title><rect x="171.4" y="227.0" width="140.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="174.4" y="238.0">java.nio.HeapByteB..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7,234 samples, 5.80%)</title><rect x="311.9" y="227.0" width="68.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.9" y="238.0">java/ni..</text>
</g>
<g>
<title>byte[] (7,234 samples, 5.80%)</title><rect x="311.9" y="211.0" width="68.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="314.9" y="222.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (11,186 samples, 8.97%)</title><rect x="380.4" y="243.0" width="105.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.4" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11,186 samples, 8.97%)</title><rect x="380.4" y="227.0" width="105.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.4" y="238.0">java/nio/Byte..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7,584 samples, 6.08%)</title><rect x="380.4" y="211.0" width="71.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="383.4" y="222.0">java.nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3,602 samples, 2.89%)</title><rect x="452.1" y="211.0" width="34.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.1" y="222.0">ja..</text>
</g>
<g>
<title>byte[] (3,602 samples, 2.89%)</title><rect x="452.1" y="195.0" width="34.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="455.1" y="206.0">by..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.03%)</title><rect x="486.2" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.03%)</title><rect x="486.2" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$79/423943441.get$Lambda (40 samples, 0.03%)</title><rect x="486.2" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.2" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$79 (40 samples, 0.03%)</title><rect x="486.2" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="489.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (90 samples, 0.07%)</title><rect x="486.6" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (90 samples, 0.07%)</title><rect x="486.6" y="339.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="489.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (41 samples, 0.03%)</title><rect x="487.4" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (41 samples, 0.03%)</title><rect x="487.4" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (41 samples, 0.03%)</title><rect x="487.4" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.4" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (41 samples, 0.03%)</title><rect x="487.4" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.4" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (41 samples, 0.03%)</title><rect x="487.4" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (445 samples, 0.36%)</title><rect x="487.8" y="355.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.8" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (35 samples, 0.03%)</title><rect x="487.8" y="339.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="490.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (410 samples, 0.33%)</title><rect x="488.1" y="339.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (410 samples, 0.33%)</title><rect x="488.1" y="323.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (39 samples, 0.03%)</title><rect x="488.1" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.1" y="318.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (39 samples, 0.03%)</title><rect x="488.1" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (39 samples, 0.03%)</title><rect x="488.1" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (39 samples, 0.03%)</title><rect x="488.1" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (39 samples, 0.03%)</title><rect x="488.1" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$75/869776578.getAsBoolean (39 samples, 0.03%)</title><rect x="488.1" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (39 samples, 0.03%)</title><rect x="488.1" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (39 samples, 0.03%)</title><rect x="488.1" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (39 samples, 0.03%)</title><rect x="488.1" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$72/1393868724.apply (39 samples, 0.03%)</title><rect x="488.1" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (39 samples, 0.03%)</title><rect x="488.1" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (39 samples, 0.03%)</title><rect x="488.1" y="131.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="491.1" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (299 samples, 0.24%)</title><rect x="488.5" y="307.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (299 samples, 0.24%)</title><rect x="488.5" y="291.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (299 samples, 0.24%)</title><rect x="488.5" y="275.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (299 samples, 0.24%)</title><rect x="488.5" y="259.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (299 samples, 0.24%)</title><rect x="488.5" y="243.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (299 samples, 0.24%)</title><rect x="488.5" y="227.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (299 samples, 0.24%)</title><rect x="488.5" y="211.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (299 samples, 0.24%)</title><rect x="488.5" y="195.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (299 samples, 0.24%)</title><rect x="488.5" y="179.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (299 samples, 0.24%)</title><rect x="488.5" y="163.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.5" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (299 samples, 0.24%)</title><rect x="488.5" y="147.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (299 samples, 0.24%)</title><rect x="488.5" y="131.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="491.5" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (72 samples, 0.06%)</title><rect x="491.3" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (72 samples, 0.06%)</title><rect x="491.3" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (72 samples, 0.06%)</title><rect x="491.3" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (72 samples, 0.06%)</title><rect x="491.3" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (72 samples, 0.06%)</title><rect x="491.3" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (72 samples, 0.06%)</title><rect x="491.3" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (72 samples, 0.06%)</title><rect x="491.3" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (72 samples, 0.06%)</title><rect x="491.3" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (72 samples, 0.06%)</title><rect x="491.3" y="179.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (72 samples, 0.06%)</title><rect x="491.3" y="163.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (72 samples, 0.06%)</title><rect x="491.3" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (72 samples, 0.06%)</title><rect x="491.3" y="131.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (72 samples, 0.06%)</title><rect x="491.3" y="115.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="494.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (483 samples, 0.39%)</title><rect x="492.0" y="355.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="495.0" y="366.0"></text>
</g>
<g>
<title>java/util/Collection.stream (148 samples, 0.12%)</title><rect x="492.0" y="339.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (46 samples, 0.04%)</title><rect x="492.0" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (46 samples, 0.04%)</title><rect x="492.0" y="307.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="495.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (102 samples, 0.08%)</title><rect x="492.5" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.5" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (102 samples, 0.08%)</title><rect x="492.5" y="307.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="495.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (66 samples, 0.05%)</title><rect x="493.7" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (66 samples, 0.05%)</title><rect x="493.7" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (66 samples, 0.05%)</title><rect x="493.7" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (66 samples, 0.05%)</title><rect x="493.7" y="291.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="496.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (135 samples, 0.11%)</title><rect x="494.3" y="339.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.3" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (33 samples, 0.03%)</title><rect x="494.3" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.3" y="334.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (33 samples, 0.03%)</title><rect x="494.3" y="307.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="497.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (102 samples, 0.08%)</title><rect x="494.6" y="323.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (84 samples, 0.07%)</title><rect x="494.8" y="307.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="497.8" y="318.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (84 samples, 0.07%)</title><rect x="494.8" y="291.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="497.8" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (108 samples, 0.09%)</title><rect x="495.6" y="339.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (108 samples, 0.09%)</title><rect x="495.6" y="323.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="498.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (51 samples, 0.04%)</title><rect x="496.6" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.6" y="398.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.04%)</title><rect x="496.6" y="371.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="499.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (119 samples, 0.10%)</title><rect x="497.1" y="387.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.1" y="398.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (33 samples, 0.03%)</title><rect x="497.1" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (33 samples, 0.03%)</title><rect x="497.1" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="500.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (33 samples, 0.03%)</title><rect x="497.1" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.03%)</title><rect x="497.1" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.1" y="334.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.03%)</title><rect x="497.1" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="500.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (86 samples, 0.07%)</title><rect x="497.4" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.4" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (86 samples, 0.07%)</title><rect x="497.4" y="355.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.4" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 0.07%)</title><rect x="497.4" y="339.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="500.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (229 samples, 0.18%)</title><rect x="498.2" y="403.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (229 samples, 0.18%)</title><rect x="498.2" y="387.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (229 samples, 0.18%)</title><rect x="498.2" y="371.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (162 samples, 0.13%)</title><rect x="498.2" y="355.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (162 samples, 0.13%)</title><rect x="498.2" y="339.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.2" y="350.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.13%)</title><rect x="498.2" y="323.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="501.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (67 samples, 0.05%)</title><rect x="499.7" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.7" y="366.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (67 samples, 0.05%)</title><rect x="499.7" y="339.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="502.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.sendReplica (39,076 samples, 31.33%)</title><rect x="500.4" y="435.0" width="369.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.4" y="446.0">ru/mail/polis/service/re1nex/ApiControllerImpl.sen..</text>
</g>
<g>
<title>one.nio.http.Request (343 samples, 0.28%)</title><rect x="500.4" y="419.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="503.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (98 samples, 0.08%)</title><rect x="503.6" y="419.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (98 samples, 0.08%)</title><rect x="503.6" y="403.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="506.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (38,635 samples, 30.98%)</title><rect x="504.5" y="419.0" width="365.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.5" y="430.0">ru/mail/polis/service/re1nex/ApiController.sendRep..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (1,943 samples, 1.56%)</title><rect x="504.5" y="403.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.5" y="414.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.04%)</title><rect x="504.5" y="387.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="507.5" y="398.0"></text>
</g>
<g>
<title>java.util.TreeSet (30 samples, 0.02%)</title><rect x="505.0" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="508.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (40 samples, 0.03%)</title><rect x="505.3" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Long (40 samples, 0.03%)</title><rect x="505.3" y="371.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="508.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (97 samples, 0.08%)</title><rect x="505.6" y="387.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.6" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (97 samples, 0.08%)</title><rect x="505.6" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (97 samples, 0.08%)</title><rect x="505.6" y="355.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="508.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (84 samples, 0.07%)</title><rect x="506.6" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.6" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap (84 samples, 0.07%)</title><rect x="506.6" y="371.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="509.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (1,173 samples, 0.94%)</title><rect x="507.3" y="387.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.3" y="398.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (105 samples, 0.08%)</title><rect x="507.3" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.3" y="382.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (105 samples, 0.08%)</title><rect x="507.3" y="355.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.3" y="366.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (105 samples, 0.08%)</title><rect x="507.3" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.3" y="350.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.08%)</title><rect x="507.3" y="323.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="510.3" y="334.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (1,068 samples, 0.86%)</title><rect x="508.3" y="371.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.3" y="382.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (1,068 samples, 0.86%)</title><rect x="508.3" y="355.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.3" y="366.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (1,068 samples, 0.86%)</title><rect x="508.3" y="339.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.3" y="350.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (1,015 samples, 0.81%)</title><rect x="508.3" y="323.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.3" y="334.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (961 samples, 0.77%)</title><rect x="508.3" y="307.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.3" y="318.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (961 samples, 0.77%)</title><rect x="508.3" y="291.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.3" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (961 samples, 0.77%)</title><rect x="508.3" y="275.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (961 samples, 0.77%)</title><rect x="508.3" y="259.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (961 samples, 0.77%)</title><rect x="508.3" y="243.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.3" y="254.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (133 samples, 0.11%)</title><rect x="508.3" y="227.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="511.3" y="238.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (828 samples, 0.66%)</title><rect x="509.6" y="227.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.6" y="238.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (828 samples, 0.66%)</title><rect x="509.6" y="211.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.6" y="222.0"></text>
</g>
<g>
<title>int[] (668 samples, 0.54%)</title><rect x="509.6" y="195.0" width="6.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="512.6" y="206.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (160 samples, 0.13%)</title><rect x="515.9" y="195.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.9" y="206.0"></text>
</g>
<g>
<title>byte[] (160 samples, 0.13%)</title><rect x="515.9" y="179.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="518.9" y="190.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (54 samples, 0.04%)</title><rect x="517.4" y="307.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="520.4" y="318.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (53 samples, 0.04%)</title><rect x="517.9" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.9" y="334.0"></text>
</g>
<g>
<title>java/security/Provider.getService (53 samples, 0.04%)</title><rect x="517.9" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (53 samples, 0.04%)</title><rect x="517.9" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.9" y="302.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (53 samples, 0.04%)</title><rect x="517.9" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.04%)</title><rect x="517.9" y="259.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="520.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (473 samples, 0.38%)</title><rect x="518.4" y="387.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.4" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (172 samples, 0.14%)</title><rect x="518.4" y="371.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.4" y="382.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (33 samples, 0.03%)</title><rect x="518.4" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="521.4" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (139 samples, 0.11%)</title><rect x="518.8" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (75 samples, 0.06%)</title><rect x="518.8" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.8" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (75 samples, 0.06%)</title><rect x="518.8" y="323.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="521.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (64 samples, 0.05%)</title><rect x="519.5" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.5" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (64 samples, 0.05%)</title><rect x="519.5" y="323.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="522.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (49 samples, 0.04%)</title><rect x="520.3" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.3" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (49 samples, 0.04%)</title><rect x="520.3" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="523.3" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (231 samples, 0.19%)</title><rect x="520.7" y="371.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="523.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (231 samples, 0.19%)</title><rect x="520.7" y="355.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.7" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (231 samples, 0.19%)</title><rect x="520.7" y="339.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="523.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (36,641 samples, 29.38%)</title><rect x="522.9" y="403.0" width="346.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.9" y="414.0">ru/mail/polis/service/re1nex/ApiControllerImpl...</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (36,505 samples, 29.27%)</title><rect x="522.9" y="387.0" width="345.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.9" y="398.0">ru/mail/polis/service/re1nex/ApiControllerImpl...</text>
</g>
<g>
<title>java.util.ArrayList (51 samples, 0.04%)</title><rect x="522.9" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="525.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (52 samples, 0.04%)</title><rect x="523.4" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (52 samples, 0.04%)</title><rect x="523.4" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (52 samples, 0.04%)</title><rect x="523.4" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (52 samples, 0.04%)</title><rect x="523.4" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 0.04%)</title><rect x="523.4" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (52 samples, 0.04%)</title><rect x="523.4" y="291.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="526.4" y="302.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (41 samples, 0.03%)</title><rect x="523.9" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (28 samples, 0.02%)</title><rect x="523.9" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (28 samples, 0.02%)</title><rect x="523.9" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.9" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (28 samples, 0.02%)</title><rect x="523.9" y="323.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="526.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl$$Lambda$77/796376195.handleLocalResponse (17,195 samples, 13.79%)</title><rect x="524.3" y="371.0" width="162.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.3" y="382.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.lambda$handleResponses$0 (17,195 samples, 13.79%)</title><rect x="524.3" y="355.0" width="162.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.3" y="366.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.get (17,195 samples, 13.79%)</title><rect x="524.3" y="339.0" width="162.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.3" y="350.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/927691409.linkToTargetMethod (55 samples, 0.04%)</title><rect x="524.3" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/361103641.invoke (55 samples, 0.04%)</title><rect x="524.3" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.04%)</title><rect x="524.3" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (28 samples, 0.02%)</title><rect x="524.3" y="275.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.3" y="286.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.02%)</title><rect x="524.3" y="259.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="527.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.02%)</title><rect x="524.5" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.02%)</title><rect x="524.5" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.5" y="270.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.02%)</title><rect x="524.5" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="527.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (86 samples, 0.07%)</title><rect x="525.0" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.0" y="334.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.03%)</title><rect x="525.0" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="528.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (16,830 samples, 13.49%)</title><rect x="525.9" y="323.0" width="159.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.9" y="334.0">ru/mail/polis/dao/DA..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,508 samples, 2.01%)</title><rect x="525.9" y="307.0" width="23.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.9" y="318.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2,171 samples, 1.74%)</title><rect x="525.9" y="291.0" width="20.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.9" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (533 samples, 0.43%)</title><rect x="526.0" y="275.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (533 samples, 0.43%)</title><rect x="526.0" y="259.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (533 samples, 0.43%)</title><rect x="526.0" y="243.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="529.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (533 samples, 0.43%)</title><rect x="526.0" y="227.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (533 samples, 0.43%)</title><rect x="526.0" y="211.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (533 samples, 0.43%)</title><rect x="526.0" y="195.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (533 samples, 0.43%)</title><rect x="526.0" y="179.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (533 samples, 0.43%)</title><rect x="526.0" y="163.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (533 samples, 0.43%)</title><rect x="526.0" y="147.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (533 samples, 0.43%)</title><rect x="526.0" y="131.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (533 samples, 0.43%)</title><rect x="526.0" y="115.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (533 samples, 0.43%)</title><rect x="526.0" y="99.0" width="5.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="529.0" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,624 samples, 1.30%)</title><rect x="531.0" y="275.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,624 samples, 1.30%)</title><rect x="531.0" y="259.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,624 samples, 1.30%)</title><rect x="531.0" y="243.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,624 samples, 1.30%)</title><rect x="531.0" y="227.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,624 samples, 1.30%)</title><rect x="531.0" y="211.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,624 samples, 1.30%)</title><rect x="531.0" y="195.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,442 samples, 1.16%)</title><rect x="531.0" y="179.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,442 samples, 1.16%)</title><rect x="531.0" y="163.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,442 samples, 1.16%)</title><rect x="531.0" y="147.0" width="13.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,442 samples, 1.16%)</title><rect x="531.0" y="131.0" width="13.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="534.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (597 samples, 0.48%)</title><rect x="531.0" y="115.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.0" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (376 samples, 0.30%)</title><rect x="531.0" y="99.0" width="3.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="534.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (221 samples, 0.18%)</title><rect x="534.6" y="99.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.6" y="110.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.18%)</title><rect x="534.6" y="83.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="537.6" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (56 samples, 0.04%)</title><rect x="536.7" y="115.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="539.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (66 samples, 0.05%)</title><rect x="537.2" y="115.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="540.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (177 samples, 0.14%)</title><rect x="537.8" y="115.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (177 samples, 0.14%)</title><rect x="537.8" y="99.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (114 samples, 0.09%)</title><rect x="537.8" y="83.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="540.8" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (63 samples, 0.05%)</title><rect x="538.9" y="83.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.9" y="94.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.05%)</title><rect x="538.9" y="67.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="541.9" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (546 samples, 0.44%)</title><rect x="539.5" y="115.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (377 samples, 0.30%)</title><rect x="539.5" y="99.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (245 samples, 0.20%)</title><rect x="539.5" y="83.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="542.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (132 samples, 0.11%)</title><rect x="541.8" y="83.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.8" y="94.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.11%)</title><rect x="541.8" y="67.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="544.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (169 samples, 0.14%)</title><rect x="543.1" y="99.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (169 samples, 0.14%)</title><rect x="543.1" y="83.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (118 samples, 0.09%)</title><rect x="543.1" y="67.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="546.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (51 samples, 0.04%)</title><rect x="544.2" y="67.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.2" y="78.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.04%)</title><rect x="544.2" y="51.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="547.2" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (182 samples, 0.15%)</title><rect x="544.7" y="179.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (182 samples, 0.15%)</title><rect x="544.7" y="163.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (182 samples, 0.15%)</title><rect x="544.7" y="147.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (182 samples, 0.15%)</title><rect x="544.7" y="131.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (182 samples, 0.15%)</title><rect x="544.7" y="115.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (182 samples, 0.15%)</title><rect x="544.7" y="99.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (182 samples, 0.15%)</title><rect x="544.7" y="83.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="547.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$83/1591887593.apply (337 samples, 0.27%)</title><rect x="546.4" y="291.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (337 samples, 0.27%)</title><rect x="546.4" y="275.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.4" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (337 samples, 0.27%)</title><rect x="546.4" y="259.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (337 samples, 0.27%)</title><rect x="546.4" y="243.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="549.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (49 samples, 0.04%)</title><rect x="549.6" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.6" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (49 samples, 0.04%)</title><rect x="549.6" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (49 samples, 0.04%)</title><rect x="549.6" y="275.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="552.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (14,273 samples, 11.44%)</title><rect x="550.0" y="307.0" width="135.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.0" y="318.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,183 samples, 0.95%)</title><rect x="550.0" y="291.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,175 samples, 0.94%)</title><rect x="550.1" y="275.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (48 samples, 0.04%)</title><rect x="550.2" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.2" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (48 samples, 0.04%)</title><rect x="550.2" y="243.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="553.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,036 samples, 0.83%)</title><rect x="550.8" y="259.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.8" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,036 samples, 0.83%)</title><rect x="550.8" y="243.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.8" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,014 samples, 0.81%)</title><rect x="551.0" y="227.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,014 samples, 0.81%)</title><rect x="551.0" y="211.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,014 samples, 0.81%)</title><rect x="551.0" y="195.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,014 samples, 0.81%)</title><rect x="551.0" y="179.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (913 samples, 0.73%)</title><rect x="551.0" y="163.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (913 samples, 0.73%)</title><rect x="551.0" y="147.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (913 samples, 0.73%)</title><rect x="551.0" y="131.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (913 samples, 0.73%)</title><rect x="551.0" y="115.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (355 samples, 0.28%)</title><rect x="551.0" y="99.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (232 samples, 0.19%)</title><rect x="551.0" y="83.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="554.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (123 samples, 0.10%)</title><rect x="553.2" y="83.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.2" y="94.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.10%)</title><rect x="553.2" y="67.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="556.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (40 samples, 0.03%)</title><rect x="554.4" y="99.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="557.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (41 samples, 0.03%)</title><rect x="554.7" y="99.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="557.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (125 samples, 0.10%)</title><rect x="555.1" y="99.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.1" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (125 samples, 0.10%)</title><rect x="555.1" y="83.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.1" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.06%)</title><rect x="555.1" y="67.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="558.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (48 samples, 0.04%)</title><rect x="555.9" y="67.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.9" y="78.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.04%)</title><rect x="555.9" y="51.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="558.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (352 samples, 0.28%)</title><rect x="556.3" y="99.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.3" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (243 samples, 0.19%)</title><rect x="556.3" y="83.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (165 samples, 0.13%)</title><rect x="556.3" y="67.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="559.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (78 samples, 0.06%)</title><rect x="557.9" y="67.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.9" y="78.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.06%)</title><rect x="557.9" y="51.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="560.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (109 samples, 0.09%)</title><rect x="558.6" y="83.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (109 samples, 0.09%)</title><rect x="558.6" y="67.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.05%)</title><rect x="558.6" y="51.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="561.6" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (42 samples, 0.03%)</title><rect x="559.3" y="51.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.3" y="62.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.03%)</title><rect x="559.3" y="35.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="562.3" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (101 samples, 0.08%)</title><rect x="559.6" y="163.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (101 samples, 0.08%)</title><rect x="559.6" y="147.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (101 samples, 0.08%)</title><rect x="559.6" y="131.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (101 samples, 0.08%)</title><rect x="559.6" y="115.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (101 samples, 0.08%)</title><rect x="559.6" y="99.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (101 samples, 0.08%)</title><rect x="559.6" y="83.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (101 samples, 0.08%)</title><rect x="559.6" y="67.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="562.6" y="78.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (67 samples, 0.05%)</title><rect x="560.6" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (67 samples, 0.05%)</title><rect x="560.6" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (67 samples, 0.05%)</title><rect x="560.6" y="227.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (55 samples, 0.04%)</title><rect x="560.7" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.7" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.04%)</title><rect x="561.2" y="291.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="564.2" y="302.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (12,141 samples, 9.73%)</title><rect x="561.7" y="291.0" width="114.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.7" y="302.0">java/lang/Iter..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (73 samples, 0.06%)</title><rect x="561.7" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.7" y="286.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (73 samples, 0.06%)</title><rect x="561.7" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (73 samples, 0.06%)</title><rect x="561.7" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.7" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (73 samples, 0.06%)</title><rect x="561.7" y="227.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="564.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$79/423943441.accept (12,068 samples, 9.68%)</title><rect x="562.4" y="275.0" width="114.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.4" y="286.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$cellIterator$5 (12,068 samples, 9.68%)</title><rect x="562.4" y="259.0" width="114.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.4" y="270.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.iterator (12,068 samples, 9.68%)</title><rect x="562.4" y="243.0" width="114.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.4" y="254.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.SSTable$1 (189 samples, 0.15%)</title><rect x="562.4" y="227.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="565.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt; (11,879 samples, 9.52%)</title><rect x="564.2" y="227.0" width="112.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.2" y="238.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.binarySearch (11,879 samples, 9.52%)</title><rect x="564.2" y="211.0" width="112.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.2" y="222.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (11,879 samples, 9.52%)</title><rect x="564.2" y="195.0" width="112.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.2" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7,794 samples, 6.25%)</title><rect x="564.2" y="179.0" width="73.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.2" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,251 samples, 4.21%)</title><rect x="564.2" y="163.0" width="49.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="567.2" y="174.0">java...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,543 samples, 2.04%)</title><rect x="613.9" y="163.0" width="24.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.9" y="174.0">j..</text>
</g>
<g>
<title>byte[] (2,543 samples, 2.04%)</title><rect x="613.9" y="147.0" width="24.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="616.9" y="158.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (4,085 samples, 3.28%)</title><rect x="637.9" y="179.0" width="38.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.9" y="190.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,085 samples, 3.28%)</title><rect x="637.9" y="163.0" width="38.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.9" y="174.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,728 samples, 2.19%)</title><rect x="637.9" y="147.0" width="25.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="640.9" y="158.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,357 samples, 1.09%)</title><rect x="663.8" y="147.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.8" y="158.0"></text>
</g>
<g>
<title>byte[] (1,357 samples, 1.09%)</title><rect x="663.8" y="131.0" width="12.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="666.8" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.04%)</title><rect x="676.6" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.04%)</title><rect x="676.6" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$79/423943441.get$Lambda (51 samples, 0.04%)</title><rect x="676.6" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.6" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$79 (51 samples, 0.04%)</title><rect x="676.6" y="243.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="679.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (147 samples, 0.12%)</title><rect x="677.1" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.1" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (147 samples, 0.12%)</title><rect x="677.1" y="275.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="680.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (43 samples, 0.03%)</title><rect x="678.5" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (43 samples, 0.03%)</title><rect x="678.5" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (43 samples, 0.03%)</title><rect x="678.5" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.5" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (43 samples, 0.03%)</title><rect x="678.5" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.5" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (43 samples, 0.03%)</title><rect x="678.5" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (58 samples, 0.05%)</title><rect x="678.9" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (49 samples, 0.04%)</title><rect x="679.0" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (49 samples, 0.04%)</title><rect x="679.0" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.0" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (33 samples, 0.03%)</title><rect x="679.0" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (33 samples, 0.03%)</title><rect x="679.0" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (33 samples, 0.03%)</title><rect x="679.0" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.0" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.03%)</title><rect x="679.0" y="195.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.03%)</title><rect x="679.0" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (33 samples, 0.03%)</title><rect x="679.0" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (33 samples, 0.03%)</title><rect x="679.0" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (33 samples, 0.03%)</title><rect x="679.0" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (33 samples, 0.03%)</title><rect x="679.0" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (33 samples, 0.03%)</title><rect x="679.0" y="99.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.0" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (33 samples, 0.03%)</title><rect x="679.0" y="83.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (33 samples, 0.03%)</title><rect x="679.0" y="67.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="682.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (598 samples, 0.48%)</title><rect x="679.4" y="291.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collection.stream (178 samples, 0.14%)</title><rect x="679.4" y="275.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (66 samples, 0.05%)</title><rect x="679.4" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (66 samples, 0.05%)</title><rect x="679.4" y="243.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="682.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (112 samples, 0.09%)</title><rect x="680.1" y="259.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (112 samples, 0.09%)</title><rect x="680.1" y="243.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="683.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (30 samples, 0.02%)</title><rect x="681.1" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (30 samples, 0.02%)</title><rect x="681.1" y="259.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="684.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (91 samples, 0.07%)</title><rect x="681.4" y="275.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (91 samples, 0.07%)</title><rect x="681.4" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (91 samples, 0.07%)</title><rect x="681.4" y="243.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.4" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (91 samples, 0.07%)</title><rect x="681.4" y="227.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="684.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (175 samples, 0.14%)</title><rect x="682.3" y="275.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.3" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (56 samples, 0.04%)</title><rect x="682.3" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.3" y="270.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (56 samples, 0.04%)</title><rect x="682.3" y="243.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="685.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (119 samples, 0.10%)</title><rect x="682.8" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.03%)</title><rect x="682.8" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.03%)</title><rect x="682.8" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$73/1734299265.get$Lambda (35 samples, 0.03%)</title><rect x="682.8" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.8" y="222.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$73 (35 samples, 0.03%)</title><rect x="682.8" y="195.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="685.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (84 samples, 0.07%)</title><rect x="683.1" y="243.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.1" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (84 samples, 0.07%)</title><rect x="683.1" y="227.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="686.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (124 samples, 0.10%)</title><rect x="683.9" y="275.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.9" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (124 samples, 0.10%)</title><rect x="683.9" y="259.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="686.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Value.getData (43 samples, 0.03%)</title><rect x="685.1" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.1" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (43 samples, 0.03%)</title><rect x="685.1" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (43 samples, 0.03%)</title><rect x="685.1" y="291.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="688.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (36 samples, 0.03%)</title><rect x="685.5" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.5" y="334.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.03%)</title><rect x="685.5" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="688.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (120 samples, 0.10%)</title><rect x="685.8" y="323.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (36 samples, 0.03%)</title><rect x="685.8" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (36 samples, 0.03%)</title><rect x="685.8" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (36 samples, 0.03%)</title><rect x="685.8" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="688.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.03%)</title><rect x="685.8" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="688.8" y="270.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.03%)</title><rect x="685.8" y="243.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="688.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (84 samples, 0.07%)</title><rect x="686.2" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (84 samples, 0.07%)</title><rect x="686.2" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.2" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (84 samples, 0.07%)</title><rect x="686.2" y="275.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="689.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.proxy (19,166 samples, 15.37%)</title><rect x="687.0" y="371.0" width="181.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.0" y="382.0">ru/mail/polis/service/r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (19,166 samples, 15.37%)</title><rect x="687.0" y="355.0" width="181.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.0" y="366.0">one/nio/http/HttpClient..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (19,166 samples, 15.37%)</title><rect x="687.0" y="339.0" width="181.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.0" y="350.0">one/nio/http/HttpClient..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (50 samples, 0.04%)</title><rect x="687.0" y="323.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="690.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (18,073 samples, 14.49%)</title><rect x="687.4" y="323.0" width="171.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.4" y="334.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>byte[] (3,225 samples, 2.59%)</title><rect x="687.4" y="307.0" width="30.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="690.4" y="318.0">by..</text>
</g>
<g>
<title>byte[] (14,848 samples, 11.91%)</title><rect x="718.0" y="307.0" width="140.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="721.0" y="318.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (838 samples, 0.67%)</title><rect x="858.4" y="323.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.4" y="334.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.02%)</title><rect x="858.4" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="861.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 0.03%)</title><rect x="858.7" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.03%)</title><rect x="858.7" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (681 samples, 0.55%)</title><rect x="859.3" y="307.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="862.3" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (681 samples, 0.55%)</title><rect x="859.3" y="291.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.3" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (681 samples, 0.55%)</title><rect x="859.3" y="275.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="862.3" y="286.0"></text>
</g>
<g>
<title>char[] (436 samples, 0.35%)</title><rect x="859.3" y="259.0" width="4.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="862.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.09%)</title><rect x="863.4" y="259.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="866.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (131 samples, 0.11%)</title><rect x="864.5" y="259.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (131 samples, 0.11%)</title><rect x="864.5" y="243.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (131 samples, 0.11%)</title><rect x="864.5" y="227.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.5" y="238.0"></text>
</g>
<g>
<title>byte[] (131 samples, 0.11%)</title><rect x="864.5" y="211.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="867.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (42 samples, 0.03%)</title><rect x="866.0" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.03%)</title><rect x="866.0" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.03%)</title><rect x="866.0" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (146 samples, 0.12%)</title><rect x="866.4" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (146 samples, 0.12%)</title><rect x="866.4" y="307.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.4" y="318.0"></text>
</g>
<g>
<title>byte[] (146 samples, 0.12%)</title><rect x="866.4" y="291.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="869.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (40 samples, 0.03%)</title><rect x="867.7" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.03%)</title><rect x="867.7" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="870.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.03%)</title><rect x="867.7" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="870.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (37 samples, 0.03%)</title><rect x="868.3" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (37 samples, 0.03%)</title><rect x="868.3" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (37 samples, 0.03%)</title><rect x="868.3" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="871.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergeGetResponses (99 samples, 0.08%)</title><rect x="868.7" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (42 samples, 0.03%)</title><rect x="868.9" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.03%)</title><rect x="868.9" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.03%)</title><rect x="868.9" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="871.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.getResponseFromValues (28 samples, 0.02%)</title><rect x="869.3" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (28 samples, 0.02%)</title><rect x="869.3" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="872.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (51 samples, 0.04%)</title><rect x="869.6" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (51 samples, 0.04%)</title><rect x="869.6" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="872.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (51 samples, 0.04%)</title><rect x="869.6" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (51 samples, 0.04%)</title><rect x="869.6" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (51 samples, 0.04%)</title><rect x="869.6" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.6" y="350.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.04%)</title><rect x="869.6" y="323.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="872.6" y="334.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (33,815 samples, 27.11%)</title><rect x="870.1" y="515.0" width="319.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.1" y="526.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (891 samples, 0.71%)</title><rect x="870.1" y="499.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.1" y="510.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (891 samples, 0.71%)</title><rect x="870.1" y="483.0" width="8.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="873.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (32,924 samples, 26.40%)</title><rect x="878.5" y="499.0" width="311.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.5" y="510.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (32,924 samples, 26.40%)</title><rect x="878.5" y="483.0" width="311.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.5" y="494.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (32,924 samples, 26.40%)</title><rect x="878.5" y="467.0" width="311.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.5" y="478.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9,180 samples, 7.36%)</title><rect x="878.5" y="451.0" width="86.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.5" y="462.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9,180 samples, 7.36%)</title><rect x="878.5" y="435.0" width="86.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.5" y="446.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler3_handleRequest.handleRequest (4,973 samples, 3.99%)</title><rect x="878.5" y="419.0" width="47.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="881.5" y="430.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,990 samples, 1.60%)</title><rect x="878.5" y="403.0" width="18.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,990 samples, 1.60%)</title><rect x="878.5" y="387.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,990 samples, 1.60%)</title><rect x="878.5" y="371.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,990 samples, 1.60%)</title><rect x="878.5" y="355.0" width="18.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (624 samples, 0.50%)</title><rect x="878.5" y="339.0" width="5.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="881.5" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,366 samples, 1.10%)</title><rect x="884.4" y="339.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.4" y="350.0"></text>
</g>
<g>
<title>byte[] (1,366 samples, 1.10%)</title><rect x="884.4" y="323.0" width="12.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="887.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.handleRequest (2,983 samples, 2.39%)</title><rect x="897.3" y="403.0" width="28.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.3" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (2,983 samples, 2.39%)</title><rect x="897.3" y="387.0" width="28.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="900.3" y="398.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/926150093.linkToTargetMethod (2,982 samples, 2.39%)</title><rect x="897.3" y="371.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.3" y="382.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,982 samples, 2.39%)</title><rect x="897.3" y="355.0" width="28.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.3" y="366.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$67/856457076.get$Lambda (2,982 samples, 2.39%)</title><rect x="897.3" y="339.0" width="28.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.3" y="350.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$67 (2,982 samples, 2.39%)</title><rect x="897.3" y="323.0" width="28.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="900.3" y="334.0">ru..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,207 samples, 3.37%)</title><rect x="925.6" y="419.0" width="39.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.6" y="430.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (4,207 samples, 3.37%)</title><rect x="925.6" y="403.0" width="39.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.6" y="414.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,207 samples, 3.37%)</title><rect x="925.6" y="387.0" width="39.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.6" y="398.0">jav..</text>
</g>
<g>
<title>java.lang.String (2,868 samples, 2.30%)</title><rect x="925.6" y="371.0" width="27.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="928.6" y="382.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,339 samples, 1.07%)</title><rect x="952.7" y="371.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="955.7" y="382.0"></text>
</g>
<g>
<title>byte[] (1,339 samples, 1.07%)</title><rect x="952.7" y="355.0" width="12.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="955.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14,415 samples, 11.56%)</title><rect x="965.4" y="451.0" width="136.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.4" y="462.0">one/nio/http/Http..</text>
</g>
<g>
<title>one.nio.http.Request (1,249 samples, 1.00%)</title><rect x="965.4" y="435.0" width="11.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="968.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,765 samples, 4.62%)</title><rect x="977.2" y="435.0" width="54.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.2" y="446.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (4,106 samples, 3.29%)</title><rect x="977.2" y="419.0" width="38.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="980.2" y="430.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (1,659 samples, 1.33%)</title><rect x="1016.0" y="419.0" width="15.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1019.0" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,401 samples, 5.93%)</title><rect x="1031.7" y="435.0" width="70.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.7" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,401 samples, 5.93%)</title><rect x="1031.7" y="419.0" width="70.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1034.7" y="430.0">one/nio/..</text>
</g>
<g>
<title>char[] (2,868 samples, 2.30%)</title><rect x="1031.7" y="403.0" width="27.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1034.7" y="414.0">c..</text>
</g>
<g>
<title>char[] (215 samples, 0.17%)</title><rect x="1058.8" y="403.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1061.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (1,356 samples, 1.09%)</title><rect x="1060.9" y="403.0" width="12.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1063.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,962 samples, 2.37%)</title><rect x="1073.7" y="403.0" width="28.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.7" y="414.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,962 samples, 2.37%)</title><rect x="1073.7" y="387.0" width="28.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.7" y="398.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,962 samples, 2.37%)</title><rect x="1073.7" y="371.0" width="28.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.7" y="382.0">ja..</text>
</g>
<g>
<title>byte[] (2,962 samples, 2.37%)</title><rect x="1073.7" y="355.0" width="28.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1076.7" y="366.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,329 samples, 7.48%)</title><rect x="1101.7" y="451.0" width="88.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.7" y="462.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,329 samples, 7.48%)</title><rect x="1101.7" y="435.0" width="88.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.7" y="446.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (2,791 samples, 2.24%)</title><rect x="1101.7" y="419.0" width="26.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1104.7" y="430.0">c..</text>
</g>
<g>
<title>char[] (349 samples, 0.28%)</title><rect x="1128.1" y="419.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1131.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2,580 samples, 2.07%)</title><rect x="1131.4" y="419.0" width="24.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1134.4" y="430.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,609 samples, 2.89%)</title><rect x="1155.9" y="419.0" width="34.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1158.9" y="430.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,609 samples, 2.89%)</title><rect x="1155.9" y="403.0" width="34.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1158.9" y="414.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,609 samples, 2.89%)</title><rect x="1155.9" y="387.0" width="34.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.9" y="398.0">ja..</text>
</g>
<g>
<title>byte[] (3,609 samples, 2.89%)</title><rect x="1155.9" y="371.0" width="34.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1158.9" y="382.0">by..</text>
</g>
</g>
</svg>
