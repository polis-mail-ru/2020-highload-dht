<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="565"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="565"> </text>
<g id="frames">
<g>
<title>all (45,772 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="542.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (27,357 samples, 59.77%)</title><rect x="10.0" y="515.0" width="705.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (27,357 samples, 59.77%)</title><rect x="10.0" y="499.0" width="705.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (27,357 samples, 59.77%)</title><rect x="10.0" y="483.0" width="705.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (152 samples, 0.33%)</title><rect x="10.0" y="467.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (152 samples, 0.33%)</title><rect x="10.0" y="451.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (152 samples, 0.33%)</title><rect x="10.0" y="435.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (152 samples, 0.33%)</title><rect x="10.0" y="419.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (152 samples, 0.33%)</title><rect x="10.0" y="403.0" width="3.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$68/785022578.run (27,205 samples, 59.44%)</title><rect x="13.9" y="467.0" width="701.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.9" y="478.0">ru/mail/polis/service/re1nex/BaseService$$Lambda$68/785022578.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1 (27,205 samples, 59.44%)</title><rect x="13.9" y="451.0" width="701.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.9" y="462.0">ru/mail/polis/service/re1nex/BaseService.lambda$handleRequest$1</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (344 samples, 0.75%)</title><rect x="13.9" y="435.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (344 samples, 0.75%)</title><rect x="13.9" y="419.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (344 samples, 0.75%)</title><rect x="13.9" y="403.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.9" y="414.0"></text>
</g>
<g>
<title>java.lang.String (309 samples, 0.68%)</title><rect x="13.9" y="387.0" width="8.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="16.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.08%)</title><rect x="21.9" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.9" y="398.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.08%)</title><rect x="21.9" y="371.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="24.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.handleResponseLocal (16,728 samples, 36.55%)</title><rect x="22.8" y="435.0" width="431.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.8" y="446.0">ru/mail/polis/service/re1nex/ApiController.handleResponseLo..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.get (16,728 samples, 36.55%)</title><rect x="22.8" y="419.0" width="431.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.8" y="430.0">ru/mail/polis/service/re1nex/ApiControllerImpl.get</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.get (16,293 samples, 35.60%)</title><rect x="22.8" y="403.0" width="420.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.8" y="414.0">ru/mail/polis/service/re1nex/ApiControllerImpl.get</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/953276539.linkToTargetMethod (176 samples, 0.38%)</title><rect x="22.8" y="387.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/235632877.invoke (176 samples, 0.38%)</title><rect x="22.8" y="371.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (176 samples, 0.38%)</title><rect x="22.8" y="355.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (68 samples, 0.15%)</title><rect x="22.8" y="339.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.8" y="350.0"></text>
</g>
<g>
<title>java.lang.String (68 samples, 0.15%)</title><rect x="22.8" y="323.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="25.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (108 samples, 0.24%)</title><rect x="24.5" y="339.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (108 samples, 0.24%)</title><rect x="24.5" y="323.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.5" y="334.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.24%)</title><rect x="24.5" y="307.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="27.5" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Response (48 samples, 0.10%)</title><rect x="27.3" y="387.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="30.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (242 samples, 0.53%)</title><rect x="28.6" y="387.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.6" y="398.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.22%)</title><rect x="28.6" y="371.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="31.6" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (86 samples, 0.19%)</title><rect x="31.2" y="371.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="34.2" y="382.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.12%)</title><rect x="33.4" y="371.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (15,529 samples, 33.93%)</title><rect x="34.8" y="387.0" width="400.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.8" y="398.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,858 samples, 4.06%)</title><rect x="34.8" y="371.0" width="47.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.8" y="382.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,624 samples, 3.55%)</title><rect x="34.8" y="355.0" width="41.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.8" y="366.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,624 samples, 3.55%)</title><rect x="34.8" y="339.0" width="41.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.8" y="350.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,624 samples, 3.55%)</title><rect x="34.8" y="323.0" width="41.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.8" y="334.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,624 samples, 3.55%)</title><rect x="34.8" y="307.0" width="41.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.8" y="318.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,624 samples, 3.55%)</title><rect x="34.8" y="291.0" width="41.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.8" y="302.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,624 samples, 3.55%)</title><rect x="34.8" y="275.0" width="41.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.8" y="286.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,624 samples, 3.55%)</title><rect x="34.8" y="259.0" width="41.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.8" y="270.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,507 samples, 3.29%)</title><rect x="34.8" y="243.0" width="38.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.8" y="254.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,507 samples, 3.29%)</title><rect x="34.8" y="227.0" width="38.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.8" y="238.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,507 samples, 3.29%)</title><rect x="34.8" y="211.0" width="38.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.8" y="222.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,507 samples, 3.29%)</title><rect x="34.8" y="195.0" width="38.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.8" y="206.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (597 samples, 1.30%)</title><rect x="34.8" y="179.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (406 samples, 0.89%)</title><rect x="34.8" y="163.0" width="10.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="37.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (191 samples, 0.42%)</title><rect x="45.3" y="163.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.3" y="174.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.42%)</title><rect x="45.3" y="147.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="48.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (62 samples, 0.14%)</title><rect x="50.2" y="179.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="53.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (66 samples, 0.14%)</title><rect x="51.8" y="179.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="54.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (171 samples, 0.37%)</title><rect x="53.5" y="179.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (171 samples, 0.37%)</title><rect x="53.5" y="163.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.5" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (117 samples, 0.26%)</title><rect x="53.5" y="147.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="56.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (54 samples, 0.12%)</title><rect x="56.5" y="147.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.5" y="158.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.12%)</title><rect x="56.5" y="131.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="59.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (611 samples, 1.33%)</title><rect x="57.9" y="179.0" width="15.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (431 samples, 0.94%)</title><rect x="57.9" y="163.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.9" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (281 samples, 0.61%)</title><rect x="57.9" y="147.0" width="7.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="60.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (150 samples, 0.33%)</title><rect x="65.1" y="147.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.1" y="158.0"></text>
</g>
<g>
<title>byte[] (150 samples, 0.33%)</title><rect x="65.1" y="131.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="68.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (180 samples, 0.39%)</title><rect x="69.0" y="163.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (180 samples, 0.39%)</title><rect x="69.0" y="147.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (122 samples, 0.27%)</title><rect x="69.0" y="131.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="72.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (58 samples, 0.13%)</title><rect x="72.2" y="131.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.2" y="142.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.13%)</title><rect x="72.2" y="115.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="75.2" y="126.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (117 samples, 0.26%)</title><rect x="73.7" y="243.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.7" y="254.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (117 samples, 0.26%)</title><rect x="73.7" y="227.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (117 samples, 0.26%)</title><rect x="73.7" y="211.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (117 samples, 0.26%)</title><rect x="73.7" y="195.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (117 samples, 0.26%)</title><rect x="73.7" y="179.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (117 samples, 0.26%)</title><rect x="73.7" y="163.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.7" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (117 samples, 0.26%)</title><rect x="73.7" y="147.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="76.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$132/859561879.apply (234 samples, 0.51%)</title><rect x="76.7" y="355.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (234 samples, 0.51%)</title><rect x="76.7" y="339.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (234 samples, 0.51%)</title><rect x="76.7" y="323.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (234 samples, 0.51%)</title><rect x="76.7" y="307.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="79.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (134 samples, 0.29%)</title><rect x="82.7" y="371.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (134 samples, 0.29%)</title><rect x="82.7" y="355.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.7" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (134 samples, 0.29%)</title><rect x="82.7" y="339.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="85.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (13,537 samples, 29.57%)</title><rect x="86.2" y="371.0" width="348.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.2" y="382.0">ru/mail/polis/dao/re1nex/NewDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,325 samples, 5.08%)</title><rect x="86.2" y="355.0" width="59.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.2" y="366.0">com/go..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (29 samples, 0.06%)</title><rect x="86.2" y="339.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="89.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,296 samples, 5.02%)</title><rect x="86.9" y="339.0" width="59.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.9" y="350.0">com/go..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (60 samples, 0.13%)</title><rect x="86.9" y="323.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="89.9" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (108 samples, 0.24%)</title><rect x="88.4" y="323.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.4" y="334.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (108 samples, 0.24%)</title><rect x="88.4" y="307.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="91.4" y="318.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (72 samples, 0.16%)</title><rect x="91.2" y="323.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="94.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (62 samples, 0.14%)</title><rect x="93.1" y="323.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.14%)</title><rect x="93.1" y="307.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="96.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,499 samples, 3.27%)</title><rect x="94.7" y="323.0" width="38.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.7" y="334.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,499 samples, 3.27%)</title><rect x="94.7" y="307.0" width="38.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.7" y="318.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,499 samples, 3.27%)</title><rect x="94.7" y="291.0" width="38.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.7" y="302.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,499 samples, 3.27%)</title><rect x="94.7" y="275.0" width="38.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.7" y="286.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,499 samples, 3.27%)</title><rect x="94.7" y="259.0" width="38.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.7" y="270.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,499 samples, 3.27%)</title><rect x="94.7" y="243.0" width="38.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.7" y="254.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,395 samples, 3.05%)</title><rect x="94.7" y="227.0" width="36.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.7" y="238.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,395 samples, 3.05%)</title><rect x="94.7" y="211.0" width="36.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.7" y="222.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,395 samples, 3.05%)</title><rect x="94.7" y="195.0" width="36.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.7" y="206.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,395 samples, 3.05%)</title><rect x="94.7" y="179.0" width="36.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.7" y="190.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (544 samples, 1.19%)</title><rect x="94.7" y="163.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.7" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (341 samples, 0.74%)</title><rect x="94.7" y="147.0" width="8.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="97.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (203 samples, 0.44%)</title><rect x="103.5" y="147.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.5" y="158.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.44%)</title><rect x="103.5" y="131.0" width="5.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="106.5" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (54 samples, 0.12%)</title><rect x="108.7" y="163.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="111.7" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (49 samples, 0.11%)</title><rect x="110.1" y="163.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="113.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (199 samples, 0.43%)</title><rect x="111.4" y="163.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (199 samples, 0.43%)</title><rect x="111.4" y="147.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (124 samples, 0.27%)</title><rect x="111.4" y="131.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="114.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (75 samples, 0.16%)</title><rect x="114.6" y="131.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.6" y="142.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.16%)</title><rect x="114.6" y="115.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="117.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (549 samples, 1.20%)</title><rect x="116.5" y="163.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (350 samples, 0.76%)</title><rect x="116.5" y="147.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (223 samples, 0.49%)</title><rect x="116.5" y="131.0" width="5.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="119.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (127 samples, 0.28%)</title><rect x="122.2" y="131.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.2" y="142.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.28%)</title><rect x="122.2" y="115.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="125.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (199 samples, 0.43%)</title><rect x="125.5" y="147.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.5" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (199 samples, 0.43%)</title><rect x="125.5" y="131.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (120 samples, 0.26%)</title><rect x="125.5" y="115.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="128.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (79 samples, 0.17%)</title><rect x="128.6" y="115.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.6" y="126.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.17%)</title><rect x="128.6" y="99.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="131.6" y="110.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (104 samples, 0.23%)</title><rect x="130.7" y="227.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (104 samples, 0.23%)</title><rect x="130.7" y="211.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (104 samples, 0.23%)</title><rect x="130.7" y="195.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (104 samples, 0.23%)</title><rect x="130.7" y="179.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (104 samples, 0.23%)</title><rect x="130.7" y="163.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.7" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (104 samples, 0.23%)</title><rect x="130.7" y="147.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (104 samples, 0.23%)</title><rect x="130.7" y="131.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="133.7" y="142.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (495 samples, 1.08%)</title><rect x="133.3" y="323.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (495 samples, 1.08%)</title><rect x="133.3" y="307.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (495 samples, 1.08%)</title><rect x="133.3" y="291.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (97 samples, 0.21%)</title><rect x="133.3" y="275.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.3" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$126/31307001.getAsBoolean (97 samples, 0.21%)</title><rect x="133.3" y="259.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (97 samples, 0.21%)</title><rect x="133.3" y="243.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (97 samples, 0.21%)</title><rect x="133.3" y="227.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (55 samples, 0.12%)</title><rect x="133.3" y="211.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (55 samples, 0.12%)</title><rect x="133.3" y="195.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.3" y="206.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (55 samples, 0.12%)</title><rect x="133.3" y="179.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="136.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (42 samples, 0.09%)</title><rect x="134.7" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$88/740886904.apply (42 samples, 0.09%)</title><rect x="134.7" y="195.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (42 samples, 0.09%)</title><rect x="134.7" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (42 samples, 0.09%)</title><rect x="134.7" y="163.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="137.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (398 samples, 0.87%)</title><rect x="135.8" y="275.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.8" y="286.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (92 samples, 0.20%)</title><rect x="135.8" y="259.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="138.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.15%)</title><rect x="138.2" y="259.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.15%)</title><rect x="138.2" y="243.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$122/166914995.get$Lambda (26 samples, 0.06%)</title><rect x="138.2" y="227.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="141.2" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$122 (26 samples, 0.06%)</title><rect x="138.2" y="211.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="141.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$126/31307001.get$Lambda (41 samples, 0.09%)</title><rect x="138.9" y="227.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.9" y="238.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$126 (41 samples, 0.09%)</title><rect x="138.9" y="211.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="141.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (49 samples, 0.11%)</title><rect x="139.9" y="259.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (49 samples, 0.11%)</title><rect x="139.9" y="243.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.9" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (49 samples, 0.11%)</title><rect x="139.9" y="227.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="142.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (190 samples, 0.42%)</title><rect x="141.2" y="259.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.2" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (190 samples, 0.42%)</title><rect x="141.2" y="243.0" width="4.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="144.2" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (67 samples, 0.15%)</title><rect x="146.1" y="355.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="149.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8,652 samples, 18.90%)</title><rect x="147.8" y="355.0" width="223.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.8" y="366.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (148 samples, 0.32%)</title><rect x="147.8" y="339.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.8" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (64 samples, 0.14%)</title><rect x="147.8" y="323.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="150.8" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (84 samples, 0.18%)</title><rect x="149.5" y="323.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (84 samples, 0.18%)</title><rect x="149.5" y="307.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.5" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (84 samples, 0.18%)</title><rect x="149.5" y="291.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="152.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$107/1999162735.accept (8,504 samples, 18.58%)</title><rect x="151.6" y="339.0" width="219.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.6" y="350.0">ru/mail/polis/dao/re1nex/NewD..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$cellIterator$5 (8,504 samples, 18.58%)</title><rect x="151.6" y="323.0" width="219.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.6" y="334.0">ru/mail/polis/dao/re1nex/NewD..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.iterator (8,504 samples, 18.58%)</title><rect x="151.6" y="307.0" width="219.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.6" y="318.0">ru/mail/polis/dao/re1nex/SSTa..</text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.SSTable$1 (103 samples, 0.23%)</title><rect x="151.6" y="291.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="154.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt; (8,401 samples, 18.35%)</title><rect x="154.3" y="291.0" width="216.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.3" y="302.0">ru/mail/polis/dao/re1nex/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.binarySearch (8,401 samples, 18.35%)</title><rect x="154.3" y="275.0" width="216.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.3" y="286.0">ru/mail/polis/dao/re1nex/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (8,401 samples, 18.35%)</title><rect x="154.3" y="259.0" width="216.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.3" y="270.0">ru/mail/polis/dao/re1nex/SST..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5,764 samples, 12.59%)</title><rect x="154.3" y="243.0" width="148.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.3" y="254.0">java/nio/ByteBuffer..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,664 samples, 8.00%)</title><rect x="154.3" y="227.0" width="94.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="157.3" y="238.0">java.nio.He..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,100 samples, 4.59%)</title><rect x="248.7" y="227.0" width="54.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.7" y="238.0">java/..</text>
</g>
<g>
<title>byte[] (2,100 samples, 4.59%)</title><rect x="248.7" y="211.0" width="54.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="251.7" y="222.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (2,637 samples, 5.76%)</title><rect x="302.9" y="243.0" width="68.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.9" y="254.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,637 samples, 5.76%)</title><rect x="302.9" y="227.0" width="68.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.9" y="238.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,696 samples, 3.71%)</title><rect x="302.9" y="211.0" width="43.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="305.9" y="222.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (941 samples, 2.06%)</title><rect x="346.6" y="211.0" width="24.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.6" y="222.0">j..</text>
</g>
<g>
<title>byte[] (941 samples, 2.06%)</title><rect x="346.6" y="195.0" width="24.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="349.6" y="206.0">b..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.14%)</title><rect x="370.9" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.14%)</title><rect x="370.9" y="339.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$107/1999162735.get$Lambda (64 samples, 0.14%)</title><rect x="370.9" y="323.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.9" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$107 (64 samples, 0.14%)</title><rect x="370.9" y="307.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="373.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (67 samples, 0.15%)</title><rect x="372.5" y="355.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (67 samples, 0.15%)</title><rect x="372.5" y="339.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="375.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (43 samples, 0.09%)</title><rect x="374.2" y="355.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (43 samples, 0.09%)</title><rect x="374.2" y="339.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (43 samples, 0.09%)</title><rect x="374.2" y="323.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.2" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (43 samples, 0.09%)</title><rect x="374.2" y="307.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.2" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (43 samples, 0.09%)</title><rect x="374.2" y="291.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.2" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (23 samples, 0.05%)</title><rect x="374.2" y="275.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.2" y="286.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (23 samples, 0.05%)</title><rect x="374.2" y="259.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="377.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (20 samples, 0.04%)</title><rect x="374.8" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (20 samples, 0.04%)</title><rect x="374.8" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (20 samples, 0.04%)</title><rect x="374.8" y="243.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="377.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,560 samples, 3.41%)</title><rect x="375.4" y="355.0" width="40.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.4" y="366.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (52 samples, 0.11%)</title><rect x="375.4" y="339.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="378.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,508 samples, 3.29%)</title><rect x="376.7" y="339.0" width="38.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.7" y="350.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,508 samples, 3.29%)</title><rect x="376.7" y="323.0" width="38.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.7" y="334.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,508 samples, 3.29%)</title><rect x="376.7" y="307.0" width="38.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.7" y="318.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,508 samples, 3.29%)</title><rect x="376.7" y="291.0" width="38.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.7" y="302.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,508 samples, 3.29%)</title><rect x="376.7" y="275.0" width="38.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.7" y="286.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,508 samples, 3.29%)</title><rect x="376.7" y="259.0" width="38.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.7" y="270.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,508 samples, 3.29%)</title><rect x="376.7" y="243.0" width="38.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.7" y="254.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,508 samples, 3.29%)</title><rect x="376.7" y="227.0" width="38.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.7" y="238.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,369 samples, 2.99%)</title><rect x="376.7" y="211.0" width="35.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.7" y="222.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,369 samples, 2.99%)</title><rect x="376.7" y="195.0" width="35.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.7" y="206.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (1,369 samples, 2.99%)</title><rect x="376.7" y="179.0" width="35.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.7" y="190.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (1,369 samples, 2.99%)</title><rect x="376.7" y="163.0" width="35.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.7" y="174.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (556 samples, 1.21%)</title><rect x="376.7" y="147.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (348 samples, 0.76%)</title><rect x="376.7" y="131.0" width="9.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="379.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (208 samples, 0.45%)</title><rect x="385.7" y="131.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.7" y="142.0"></text>
</g>
<g>
<title>byte[] (208 samples, 0.45%)</title><rect x="385.7" y="115.0" width="5.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="388.7" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (52 samples, 0.11%)</title><rect x="391.0" y="147.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="394.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (63 samples, 0.14%)</title><rect x="392.4" y="147.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="395.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (157 samples, 0.34%)</title><rect x="394.0" y="147.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (157 samples, 0.34%)</title><rect x="394.0" y="131.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (105 samples, 0.23%)</title><rect x="394.0" y="115.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="397.0" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (52 samples, 0.11%)</title><rect x="396.7" y="115.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.7" y="126.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.11%)</title><rect x="396.7" y="99.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="399.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (541 samples, 1.18%)</title><rect x="398.0" y="147.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (374 samples, 0.82%)</title><rect x="398.0" y="131.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (230 samples, 0.50%)</title><rect x="398.0" y="115.0" width="6.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="401.0" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (144 samples, 0.31%)</title><rect x="404.0" y="115.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.0" y="126.0"></text>
</g>
<g>
<title>byte[] (144 samples, 0.31%)</title><rect x="404.0" y="99.0" width="3.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="407.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (167 samples, 0.36%)</title><rect x="407.7" y="131.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (167 samples, 0.36%)</title><rect x="407.7" y="115.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (110 samples, 0.24%)</title><rect x="407.7" y="99.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="410.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (57 samples, 0.12%)</title><rect x="410.5" y="99.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.5" y="110.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.12%)</title><rect x="410.5" y="83.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="413.5" y="94.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (139 samples, 0.30%)</title><rect x="412.0" y="211.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (139 samples, 0.30%)</title><rect x="412.0" y="195.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (139 samples, 0.30%)</title><rect x="412.0" y="179.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (139 samples, 0.30%)</title><rect x="412.0" y="163.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (139 samples, 0.30%)</title><rect x="412.0" y="147.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (139 samples, 0.30%)</title><rect x="412.0" y="131.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (139 samples, 0.30%)</title><rect x="412.0" y="115.0" width="3.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="415.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (759 samples, 1.66%)</title><rect x="415.6" y="355.0" width="19.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.6" y="366.0"></text>
</g>
<g>
<title>java/util/Collection.stream (213 samples, 0.47%)</title><rect x="415.6" y="339.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="418.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (73 samples, 0.16%)</title><rect x="415.6" y="323.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (73 samples, 0.16%)</title><rect x="415.6" y="307.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="418.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (140 samples, 0.31%)</title><rect x="417.5" y="323.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.5" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (140 samples, 0.31%)</title><rect x="417.5" y="307.0" width="3.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="420.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (40 samples, 0.09%)</title><rect x="421.1" y="339.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (40 samples, 0.09%)</title><rect x="421.1" y="323.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="424.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (127 samples, 0.28%)</title><rect x="422.1" y="339.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (127 samples, 0.28%)</title><rect x="422.1" y="323.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (127 samples, 0.28%)</title><rect x="422.1" y="307.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (127 samples, 0.28%)</title><rect x="422.1" y="291.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="425.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (223 samples, 0.49%)</title><rect x="425.4" y="339.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.4" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (45 samples, 0.10%)</title><rect x="425.4" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.4" y="334.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (45 samples, 0.10%)</title><rect x="425.4" y="307.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="428.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (178 samples, 0.39%)</title><rect x="426.5" y="323.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.08%)</title><rect x="426.5" y="307.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.08%)</title><rect x="426.5" y="291.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$96/314690043.get$Lambda (36 samples, 0.08%)</title><rect x="426.5" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$96 (36 samples, 0.08%)</title><rect x="426.5" y="259.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="429.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (142 samples, 0.31%)</title><rect x="427.5" y="307.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.5" y="318.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (142 samples, 0.31%)</title><rect x="427.5" y="291.0" width="3.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="430.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (156 samples, 0.34%)</title><rect x="431.1" y="339.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (156 samples, 0.34%)</title><rect x="431.1" y="323.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="434.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (92 samples, 0.20%)</title><rect x="435.1" y="387.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.1" y="398.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.20%)</title><rect x="435.1" y="371.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="438.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (206 samples, 0.45%)</title><rect x="437.5" y="387.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (89 samples, 0.19%)</title><rect x="437.5" y="371.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (89 samples, 0.19%)</title><rect x="437.5" y="355.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (89 samples, 0.19%)</title><rect x="437.5" y="339.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.5" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (89 samples, 0.19%)</title><rect x="437.5" y="323.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.5" y="334.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.19%)</title><rect x="437.5" y="307.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="440.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (117 samples, 0.26%)</title><rect x="439.8" y="371.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (117 samples, 0.26%)</title><rect x="439.8" y="355.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (117 samples, 0.26%)</title><rect x="439.8" y="339.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="442.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (435 samples, 0.95%)</title><rect x="442.8" y="403.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (435 samples, 0.95%)</title><rect x="442.8" y="387.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (435 samples, 0.95%)</title><rect x="442.8" y="371.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (322 samples, 0.70%)</title><rect x="442.8" y="355.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (322 samples, 0.70%)</title><rect x="442.8" y="339.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.8" y="350.0"></text>
</g>
<g>
<title>byte[] (322 samples, 0.70%)</title><rect x="442.8" y="323.0" width="8.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="445.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (113 samples, 0.25%)</title><rect x="451.1" y="355.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.1" y="366.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (113 samples, 0.25%)</title><rect x="451.1" y="339.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="454.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.sendReplica (10,133 samples, 22.14%)</title><rect x="454.0" y="435.0" width="261.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.0" y="446.0">ru/mail/polis/service/re1nex/ApiCon..</text>
</g>
<g>
<title>one.nio.http.Request (133 samples, 0.29%)</title><rect x="454.0" y="419.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="457.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (47 samples, 0.10%)</title><rect x="457.5" y="419.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (47 samples, 0.10%)</title><rect x="457.5" y="403.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="460.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiController.sendReplica (9,953 samples, 21.74%)</title><rect x="458.7" y="419.0" width="256.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.7" y="430.0">ru/mail/polis/service/re1nex/ApiCo..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.severalNodesForKey (741 samples, 1.62%)</title><rect x="458.7" y="403.0" width="19.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.7" y="414.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.06%)</title><rect x="458.7" y="387.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="461.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeSet (18 samples, 0.04%)</title><rect x="459.3" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="462.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (18 samples, 0.04%)</title><rect x="459.8" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Long (18 samples, 0.04%)</title><rect x="459.8" y="371.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="462.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (23 samples, 0.05%)</title><rect x="460.3" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (23 samples, 0.05%)</title><rect x="460.3" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.3" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (23 samples, 0.05%)</title><rect x="460.3" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="463.3" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (45 samples, 0.10%)</title><rect x="460.9" y="387.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap (45 samples, 0.10%)</title><rect x="460.9" y="371.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="463.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.calculateHash (396 samples, 0.87%)</title><rect x="462.0" y="387.0" width="10.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.0" y="398.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (37 samples, 0.08%)</title><rect x="462.0" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.0" y="382.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (37 samples, 0.08%)</title><rect x="462.0" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.0" y="366.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (37 samples, 0.08%)</title><rect x="462.0" y="339.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.0" y="350.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.08%)</title><rect x="462.0" y="323.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="465.0" y="334.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getInstance (359 samples, 0.78%)</title><rect x="463.0" y="371.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.0" y="382.0"></text>
</g>
<g>
<title>java/security/Security.getImpl (359 samples, 0.78%)</title><rect x="463.0" y="355.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.0" y="366.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (359 samples, 0.78%)</title><rect x="463.0" y="339.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.0" y="350.0"></text>
</g>
<g>
<title>sun/security/jca/GetInstance.getInstance (343 samples, 0.75%)</title><rect x="463.0" y="323.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.0" y="334.0"></text>
</g>
<g>
<title>java/security/Provider$Service.newInstance (323 samples, 0.71%)</title><rect x="463.0" y="307.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.0" y="318.0"></text>
</g>
<g>
<title>java/security/Provider.newInstanceUtil (323 samples, 0.71%)</title><rect x="463.0" y="291.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.0" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (323 samples, 0.71%)</title><rect x="463.0" y="275.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (323 samples, 0.71%)</title><rect x="463.0" y="259.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2.newInstance (323 samples, 0.71%)</title><rect x="463.0" y="243.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.0" y="254.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (51 samples, 0.11%)</title><rect x="463.0" y="227.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="466.0" y="238.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.&lt;init&gt; (272 samples, 0.59%)</title><rect x="464.3" y="227.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.3" y="238.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.&lt;init&gt; (272 samples, 0.59%)</title><rect x="464.3" y="211.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.3" y="222.0"></text>
</g>
<g>
<title>int[] (217 samples, 0.47%)</title><rect x="464.3" y="195.0" width="5.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="467.3" y="206.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.&lt;init&gt; (55 samples, 0.12%)</title><rect x="469.9" y="195.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.9" y="206.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.12%)</title><rect x="469.9" y="179.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="472.9" y="190.0"></text>
</g>
<g>
<title>sun.security.jca.GetInstance$Instance (20 samples, 0.04%)</title><rect x="471.3" y="307.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="474.3" y="318.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getService (16 samples, 0.03%)</title><rect x="471.8" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.8" y="334.0"></text>
</g>
<g>
<title>java/security/Provider.getService (16 samples, 0.03%)</title><rect x="471.8" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (16 samples, 0.03%)</title><rect x="471.8" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.8" y="302.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.hashCode (16 samples, 0.03%)</title><rect x="471.8" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.03%)</title><rect x="471.8" y="259.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="474.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.getNodesFromMap (215 samples, 0.47%)</title><rect x="472.2" y="387.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.2" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (78 samples, 0.17%)</title><rect x="472.2" y="371.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.2" y="382.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (16 samples, 0.03%)</title><rect x="472.2" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="475.2" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (62 samples, 0.14%)</title><rect x="472.6" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (35 samples, 0.08%)</title><rect x="472.6" y="339.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (35 samples, 0.08%)</title><rect x="472.6" y="323.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="475.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (27 samples, 0.06%)</title><rect x="473.5" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.5" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (27 samples, 0.06%)</title><rect x="473.5" y="323.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="476.5" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (12 samples, 0.03%)</title><rect x="474.2" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.2" y="382.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (12 samples, 0.03%)</title><rect x="474.2" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="477.2" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (27 samples, 0.06%)</title><rect x="474.6" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (27 samples, 0.06%)</title><rect x="474.6" y="355.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="477.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (98 samples, 0.21%)</title><rect x="475.3" y="371.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (98 samples, 0.21%)</title><rect x="475.3" y="355.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (98 samples, 0.21%)</title><rect x="475.3" y="339.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="478.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (9,188 samples, 20.07%)</title><rect x="477.8" y="403.0" width="236.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.8" y="414.0">ru/mail/polis/service/re1nex/Ap..</text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.04%)</title><rect x="477.8" y="387.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="480.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.04%)</title><rect x="478.2" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.04%)</title><rect x="478.2" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl$$Lambda$76/953298494.get$Lambda (20 samples, 0.04%)</title><rect x="478.2" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.2" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.ApiControllerImpl$$Lambda$76 (20 samples, 0.04%)</title><rect x="478.2" y="339.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="481.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.handleResponses (8,862 samples, 19.36%)</title><rect x="478.8" y="387.0" width="228.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.8" y="398.0">ru/mail/polis/service/re1nex/A..</text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.05%)</title><rect x="478.8" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.05%)</title><rect x="478.8" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.05%)</title><rect x="478.8" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.05%)</title><rect x="478.8" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.05%)</title><rect x="478.8" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.05%)</title><rect x="478.8" y="291.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="481.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl$$Lambda$76/953298494.handleLocalResponse (5,919 samples, 12.93%)</title><rect x="479.5" y="371.0" width="152.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.5" y="382.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.lambda$handleResponses$0 (5,919 samples, 12.93%)</title><rect x="479.5" y="355.0" width="152.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.5" y="366.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.get (5,919 samples, 12.93%)</title><rect x="479.5" y="339.0" width="152.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.5" y="350.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/953276539.linkToTargetMethod (32 samples, 0.07%)</title><rect x="479.5" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/235632877.invoke (32 samples, 0.07%)</title><rect x="479.5" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.07%)</title><rect x="479.5" y="291.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (13 samples, 0.03%)</title><rect x="479.5" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.03%)</title><rect x="479.5" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="482.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.04%)</title><rect x="479.8" y="275.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.04%)</title><rect x="479.8" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="482.8" y="270.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.04%)</title><rect x="479.8" y="243.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="482.8" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (12 samples, 0.03%)</title><rect x="480.3" y="323.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="483.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (39 samples, 0.09%)</title><rect x="480.6" y="323.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.6" y="334.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.02%)</title><rect x="480.6" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="483.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String[] (17 samples, 0.04%)</title><rect x="480.9" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="483.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.03%)</title><rect x="481.3" y="307.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="484.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (5,753 samples, 12.57%)</title><rect x="481.6" y="323.0" width="148.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.6" y="334.0">ru/mail/polis/dao/D..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (353 samples, 0.77%)</title><rect x="481.6" y="307.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (310 samples, 0.68%)</title><rect x="481.6" y="291.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.6" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (31 samples, 0.07%)</title><rect x="481.6" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (31 samples, 0.07%)</title><rect x="481.6" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.6" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (31 samples, 0.07%)</title><rect x="481.6" y="243.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.07%)</title><rect x="481.6" y="227.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (31 samples, 0.07%)</title><rect x="481.6" y="211.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (31 samples, 0.07%)</title><rect x="481.6" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (31 samples, 0.07%)</title><rect x="481.6" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (31 samples, 0.07%)</title><rect x="481.6" y="163.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (31 samples, 0.07%)</title><rect x="481.6" y="147.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (31 samples, 0.07%)</title><rect x="481.6" y="131.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.07%)</title><rect x="481.6" y="115.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.6" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.07%)</title><rect x="481.6" y="99.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="484.6" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (279 samples, 0.61%)</title><rect x="482.4" y="275.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (279 samples, 0.61%)</title><rect x="482.4" y="259.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (279 samples, 0.61%)</title><rect x="482.4" y="243.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="485.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (279 samples, 0.61%)</title><rect x="482.4" y="227.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.4" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (279 samples, 0.61%)</title><rect x="482.4" y="211.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (279 samples, 0.61%)</title><rect x="482.4" y="195.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (262 samples, 0.57%)</title><rect x="482.4" y="179.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (262 samples, 0.57%)</title><rect x="482.4" y="163.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (262 samples, 0.57%)</title><rect x="482.4" y="147.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (262 samples, 0.57%)</title><rect x="482.4" y="131.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (84 samples, 0.18%)</title><rect x="482.4" y="115.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (51 samples, 0.11%)</title><rect x="482.4" y="99.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="485.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (33 samples, 0.07%)</title><rect x="483.7" y="99.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.7" y="110.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.07%)</title><rect x="483.7" y="83.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="486.7" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (25 samples, 0.05%)</title><rect x="484.8" y="115.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="487.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (34 samples, 0.07%)</title><rect x="485.5" y="115.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (34 samples, 0.07%)</title><rect x="485.5" y="99.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.05%)</title><rect x="485.5" y="83.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="488.5" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.03%)</title><rect x="486.0" y="83.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.0" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.03%)</title><rect x="486.0" y="67.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="489.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (110 samples, 0.24%)</title><rect x="486.3" y="115.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (79 samples, 0.17%)</title><rect x="486.3" y="99.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.13%)</title><rect x="486.3" y="83.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="489.3" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.05%)</title><rect x="487.8" y="83.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.8" y="94.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.05%)</title><rect x="487.8" y="67.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="490.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (31 samples, 0.07%)</title><rect x="488.4" y="99.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (31 samples, 0.07%)</title><rect x="488.4" y="83.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.04%)</title><rect x="488.4" y="67.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="491.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.03%)</title><rect x="488.9" y="67.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.9" y="78.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.03%)</title><rect x="488.9" y="51.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="491.9" y="62.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (17 samples, 0.04%)</title><rect x="489.2" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (17 samples, 0.04%)</title><rect x="489.2" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (17 samples, 0.04%)</title><rect x="489.2" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (17 samples, 0.04%)</title><rect x="489.2" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (17 samples, 0.04%)</title><rect x="489.2" y="115.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.04%)</title><rect x="489.2" y="99.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.04%)</title><rect x="489.2" y="83.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="492.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$132/859561879.apply (43 samples, 0.09%)</title><rect x="489.6" y="291.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (43 samples, 0.09%)</title><rect x="489.6" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (43 samples, 0.09%)</title><rect x="489.6" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (43 samples, 0.09%)</title><rect x="489.6" y="243.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="492.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (20 samples, 0.04%)</title><rect x="490.7" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.7" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.04%)</title><rect x="490.7" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="493.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.04%)</title><rect x="490.7" y="275.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="493.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (5,380 samples, 11.75%)</title><rect x="491.2" y="307.0" width="138.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.2" y="318.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,231 samples, 2.69%)</title><rect x="491.2" y="291.0" width="31.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.2" y="302.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (12 samples, 0.03%)</title><rect x="491.2" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="494.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,219 samples, 2.66%)</title><rect x="491.5" y="275.0" width="31.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.5" y="286.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (14 samples, 0.03%)</title><rect x="491.5" y="259.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="494.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (57 samples, 0.12%)</title><rect x="491.9" y="259.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.9" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (57 samples, 0.12%)</title><rect x="491.9" y="243.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="494.9" y="254.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (24 samples, 0.05%)</title><rect x="493.4" y="259.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="496.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (26 samples, 0.06%)</title><rect x="494.0" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.06%)</title><rect x="494.0" y="243.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="497.0" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (890 samples, 1.94%)</title><rect x="494.7" y="259.0" width="22.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.7" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (890 samples, 1.94%)</title><rect x="494.7" y="243.0" width="22.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.7" y="254.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (22 samples, 0.05%)</title><rect x="494.7" y="227.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.05%)</title><rect x="494.7" y="211.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.7" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.05%)</title><rect x="494.7" y="195.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="497.7" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (868 samples, 1.90%)</title><rect x="495.2" y="227.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.2" y="238.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (868 samples, 1.90%)</title><rect x="495.2" y="211.0" width="22.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.2" y="222.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (868 samples, 1.90%)</title><rect x="495.2" y="195.0" width="22.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.2" y="206.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (868 samples, 1.90%)</title><rect x="495.2" y="179.0" width="22.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.2" y="190.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (813 samples, 1.78%)</title><rect x="495.2" y="163.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (813 samples, 1.78%)</title><rect x="495.2" y="147.0" width="21.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (813 samples, 1.78%)</title><rect x="495.2" y="131.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="498.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (813 samples, 1.78%)</title><rect x="495.2" y="115.0" width="21.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (301 samples, 0.66%)</title><rect x="495.2" y="99.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (193 samples, 0.42%)</title><rect x="495.2" y="83.0" width="5.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="498.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (108 samples, 0.24%)</title><rect x="500.2" y="83.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.2" y="94.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.24%)</title><rect x="500.2" y="67.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="503.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (25 samples, 0.05%)</title><rect x="503.0" y="99.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="506.0" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (33 samples, 0.07%)</title><rect x="503.6" y="99.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="506.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (113 samples, 0.25%)</title><rect x="504.5" y="99.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (113 samples, 0.25%)</title><rect x="504.5" y="83.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (71 samples, 0.16%)</title><rect x="504.5" y="67.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="507.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (42 samples, 0.09%)</title><rect x="506.3" y="67.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.3" y="78.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.09%)</title><rect x="506.3" y="51.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="509.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (341 samples, 0.74%)</title><rect x="507.4" y="99.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.4" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (208 samples, 0.45%)</title><rect x="507.4" y="83.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (128 samples, 0.28%)</title><rect x="507.4" y="67.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="510.4" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (80 samples, 0.17%)</title><rect x="510.7" y="67.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.7" y="78.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.17%)</title><rect x="510.7" y="51.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="513.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (133 samples, 0.29%)</title><rect x="512.8" y="83.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (133 samples, 0.29%)</title><rect x="512.8" y="67.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 0.19%)</title><rect x="512.8" y="51.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="515.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (47 samples, 0.10%)</title><rect x="515.0" y="51.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="518.0" y="62.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.10%)</title><rect x="515.0" y="35.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="518.0" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (55 samples, 0.12%)</title><rect x="516.2" y="163.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (55 samples, 0.12%)</title><rect x="516.2" y="147.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (55 samples, 0.12%)</title><rect x="516.2" y="131.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (55 samples, 0.12%)</title><rect x="516.2" y="115.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (55 samples, 0.12%)</title><rect x="516.2" y="99.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (55 samples, 0.12%)</title><rect x="516.2" y="83.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (55 samples, 0.12%)</title><rect x="516.2" y="67.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="519.2" y="78.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (208 samples, 0.45%)</title><rect x="517.6" y="259.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (208 samples, 0.45%)</title><rect x="517.6" y="243.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (208 samples, 0.45%)</title><rect x="517.6" y="227.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (49 samples, 0.11%)</title><rect x="517.6" y="211.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$126/31307001.getAsBoolean (49 samples, 0.11%)</title><rect x="517.6" y="195.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (49 samples, 0.11%)</title><rect x="517.6" y="179.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (49 samples, 0.11%)</title><rect x="517.6" y="163.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (27 samples, 0.06%)</title><rect x="517.6" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (27 samples, 0.06%)</title><rect x="517.6" y="131.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.6" y="142.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (27 samples, 0.06%)</title><rect x="517.6" y="115.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="520.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (22 samples, 0.05%)</title><rect x="518.3" y="147.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$88/740886904.apply (22 samples, 0.05%)</title><rect x="518.3" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (22 samples, 0.05%)</title><rect x="518.3" y="115.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (22 samples, 0.05%)</title><rect x="518.3" y="99.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="521.3" y="110.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (159 samples, 0.35%)</title><rect x="518.9" y="211.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.9" y="222.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (38 samples, 0.08%)</title><rect x="518.9" y="195.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="521.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.06%)</title><rect x="519.9" y="195.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.06%)</title><rect x="519.9" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$122/166914995.get$Lambda (12 samples, 0.03%)</title><rect x="519.9" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.9" y="174.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$122 (12 samples, 0.03%)</title><rect x="519.9" y="147.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="522.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$126/31307001.get$Lambda (15 samples, 0.03%)</title><rect x="520.2" y="163.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.2" y="174.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator$$Lambda$126 (15 samples, 0.03%)</title><rect x="520.2" y="147.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="523.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (28 samples, 0.06%)</title><rect x="520.5" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.5" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (28 samples, 0.06%)</title><rect x="520.5" y="179.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.5" y="190.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (28 samples, 0.06%)</title><rect x="520.5" y="163.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="523.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (66 samples, 0.14%)</title><rect x="521.3" y="195.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.3" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.14%)</title><rect x="521.3" y="179.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="524.3" y="190.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.03%)</title><rect x="523.0" y="291.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="526.0" y="302.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3,497 samples, 7.64%)</title><rect x="523.3" y="291.0" width="90.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.3" y="302.0">java/lang/..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (61 samples, 0.13%)</title><rect x="523.3" y="275.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.3" y="286.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (26 samples, 0.06%)</title><rect x="523.3" y="259.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="526.3" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (35 samples, 0.08%)</title><rect x="524.0" y="259.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (35 samples, 0.08%)</title><rect x="524.0" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.0" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (35 samples, 0.08%)</title><rect x="524.0" y="227.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="527.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$107/1999162735.accept (3,436 samples, 7.51%)</title><rect x="524.9" y="275.0" width="88.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.9" y="286.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$cellIterator$5 (3,436 samples, 7.51%)</title><rect x="524.9" y="259.0" width="88.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.9" y="270.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.iterator (3,436 samples, 7.51%)</title><rect x="524.9" y="243.0" width="88.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.9" y="254.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.SSTable$1 (56 samples, 0.12%)</title><rect x="524.9" y="227.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="527.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt; (3,380 samples, 7.38%)</title><rect x="526.3" y="227.0" width="87.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.3" y="238.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.binarySearch (3,380 samples, 7.38%)</title><rect x="526.3" y="211.0" width="87.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.3" y="222.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (3,380 samples, 7.38%)</title><rect x="526.3" y="195.0" width="87.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.3" y="206.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,347 samples, 5.13%)</title><rect x="526.3" y="179.0" width="60.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.3" y="190.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,505 samples, 3.29%)</title><rect x="526.3" y="163.0" width="38.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="529.3" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (842 samples, 1.84%)</title><rect x="565.1" y="163.0" width="21.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.1" y="174.0">j..</text>
</g>
<g>
<title>byte[] (842 samples, 1.84%)</title><rect x="565.1" y="147.0" width="21.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="568.1" y="158.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (1,033 samples, 2.26%)</title><rect x="586.9" y="179.0" width="26.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="589.9" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,033 samples, 2.26%)</title><rect x="586.9" y="163.0" width="26.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.9" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (669 samples, 1.46%)</title><rect x="586.9" y="147.0" width="17.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="589.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (364 samples, 0.80%)</title><rect x="604.1" y="147.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.1" y="158.0"></text>
</g>
<g>
<title>byte[] (364 samples, 0.80%)</title><rect x="604.1" y="131.0" width="9.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="607.1" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.05%)</title><rect x="613.5" y="291.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.05%)</title><rect x="613.5" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$107/1999162735.get$Lambda (25 samples, 0.05%)</title><rect x="613.5" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.5" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$107 (25 samples, 0.05%)</title><rect x="613.5" y="243.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="616.5" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (22 samples, 0.05%)</title><rect x="614.1" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.1" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.05%)</title><rect x="614.1" y="275.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="617.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (24 samples, 0.05%)</title><rect x="614.7" y="291.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (24 samples, 0.05%)</title><rect x="614.7" y="275.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (24 samples, 0.05%)</title><rect x="614.7" y="259.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.7" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (23 samples, 0.05%)</title><rect x="614.7" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.7" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (23 samples, 0.05%)</title><rect x="614.7" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (15 samples, 0.03%)</title><rect x="614.9" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (15 samples, 0.03%)</title><rect x="614.9" y="195.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (15 samples, 0.03%)</title><rect x="614.9" y="179.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="617.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (316 samples, 0.69%)</title><rect x="615.3" y="291.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.3" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (13 samples, 0.03%)</title><rect x="615.3" y="275.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="618.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (303 samples, 0.66%)</title><rect x="615.6" y="275.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (303 samples, 0.66%)</title><rect x="615.6" y="259.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.6" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (20 samples, 0.04%)</title><rect x="615.6" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.6" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (20 samples, 0.04%)</title><rect x="615.6" y="227.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.6" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (20 samples, 0.04%)</title><rect x="615.6" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.6" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.04%)</title><rect x="615.6" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.04%)</title><rect x="615.6" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (20 samples, 0.04%)</title><rect x="615.6" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (20 samples, 0.04%)</title><rect x="615.6" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (20 samples, 0.04%)</title><rect x="615.6" y="131.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (20 samples, 0.04%)</title><rect x="615.6" y="115.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (20 samples, 0.04%)</title><rect x="615.6" y="99.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.04%)</title><rect x="615.6" y="83.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.04%)</title><rect x="615.6" y="67.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="618.6" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (283 samples, 0.62%)</title><rect x="616.2" y="243.0" width="7.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.2" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (283 samples, 0.62%)</title><rect x="616.2" y="227.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.2" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (283 samples, 0.62%)</title><rect x="616.2" y="211.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.2" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (283 samples, 0.62%)</title><rect x="616.2" y="195.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (283 samples, 0.62%)</title><rect x="616.2" y="179.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (283 samples, 0.62%)</title><rect x="616.2" y="163.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (266 samples, 0.58%)</title><rect x="616.2" y="147.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (266 samples, 0.58%)</title><rect x="616.2" y="131.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (266 samples, 0.58%)</title><rect x="616.2" y="115.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (266 samples, 0.58%)</title><rect x="616.2" y="99.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.2" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (108 samples, 0.24%)</title><rect x="616.2" y="83.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (68 samples, 0.15%)</title><rect x="616.2" y="67.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="619.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (40 samples, 0.09%)</title><rect x="617.9" y="67.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.9" y="78.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.09%)</title><rect x="617.9" y="51.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="620.9" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (19 samples, 0.04%)</title><rect x="618.9" y="83.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="621.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (16 samples, 0.03%)</title><rect x="619.4" y="83.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="622.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (33 samples, 0.07%)</title><rect x="619.9" y="83.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (33 samples, 0.07%)</title><rect x="619.9" y="67.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (21 samples, 0.05%)</title><rect x="619.9" y="51.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="622.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.03%)</title><rect x="620.4" y="51.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.4" y="62.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.03%)</title><rect x="620.4" y="35.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="623.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (90 samples, 0.20%)</title><rect x="620.7" y="83.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.7" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (71 samples, 0.16%)</title><rect x="620.7" y="67.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.7" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (47 samples, 0.10%)</title><rect x="620.7" y="51.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="623.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.05%)</title><rect x="621.9" y="51.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.9" y="62.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.05%)</title><rect x="621.9" y="35.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="624.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (19 samples, 0.04%)</title><rect x="622.5" y="67.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.5" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.04%)</title><rect x="622.5" y="51.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.5" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.03%)</title><rect x="622.5" y="35.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="625.5" y="46.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (17 samples, 0.04%)</title><rect x="623.0" y="147.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (17 samples, 0.04%)</title><rect x="623.0" y="131.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (17 samples, 0.04%)</title><rect x="623.0" y="115.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (17 samples, 0.04%)</title><rect x="623.0" y="99.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (17 samples, 0.04%)</title><rect x="623.0" y="83.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.0" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.04%)</title><rect x="623.0" y="67.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.04%)</title><rect x="623.0" y="51.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="626.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (251 samples, 0.55%)</title><rect x="623.5" y="291.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.5" y="302.0"></text>
</g>
<g>
<title>java/util/Collection.stream (72 samples, 0.16%)</title><rect x="623.5" y="275.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (27 samples, 0.06%)</title><rect x="623.5" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (27 samples, 0.06%)</title><rect x="623.5" y="243.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="626.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (45 samples, 0.10%)</title><rect x="624.2" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.2" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (45 samples, 0.10%)</title><rect x="624.2" y="243.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="627.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (13 samples, 0.03%)</title><rect x="625.3" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (13 samples, 0.03%)</title><rect x="625.3" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="628.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (36 samples, 0.08%)</title><rect x="625.7" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (36 samples, 0.08%)</title><rect x="625.7" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (36 samples, 0.08%)</title><rect x="625.7" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (36 samples, 0.08%)</title><rect x="625.7" y="227.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="628.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (73 samples, 0.16%)</title><rect x="626.6" y="275.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.6" y="286.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (17 samples, 0.04%)</title><rect x="626.6" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.6" y="270.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (17 samples, 0.04%)</title><rect x="626.6" y="243.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="629.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (56 samples, 0.12%)</title><rect x="627.0" y="259.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.03%)</title><rect x="627.0" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.03%)</title><rect x="627.0" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$96/314690043.get$Lambda (15 samples, 0.03%)</title><rect x="627.0" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.0" y="222.0"></text>
</g>
<g>
<title>java.util.stream.AbstractPipeline$$Lambda$96 (15 samples, 0.03%)</title><rect x="627.0" y="195.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="630.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (41 samples, 0.09%)</title><rect x="627.4" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (41 samples, 0.09%)</title><rect x="627.4" y="227.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="630.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (57 samples, 0.12%)</title><rect x="628.5" y="275.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (57 samples, 0.12%)</title><rect x="628.5" y="259.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="631.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.byteBufferToByte (14 samples, 0.03%)</title><rect x="629.9" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.9" y="334.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.03%)</title><rect x="629.9" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="632.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (69 samples, 0.15%)</title><rect x="630.3" y="323.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (28 samples, 0.06%)</title><rect x="630.3" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (28 samples, 0.06%)</title><rect x="630.3" y="291.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (28 samples, 0.06%)</title><rect x="630.3" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.06%)</title><rect x="630.3" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.3" y="270.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.06%)</title><rect x="630.3" y="243.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="633.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.09%)</title><rect x="631.0" y="307.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.09%)</title><rect x="631.0" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.0" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.09%)</title><rect x="631.0" y="275.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="634.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiControllerImpl.proxy (2,915 samples, 6.37%)</title><rect x="632.1" y="371.0" width="75.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.1" y="382.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,915 samples, 6.37%)</title><rect x="632.1" y="355.0" width="75.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.1" y="366.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,915 samples, 6.37%)</title><rect x="632.1" y="339.0" width="75.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.1" y="350.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (14 samples, 0.03%)</title><rect x="632.1" y="323.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="635.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,356 samples, 5.15%)</title><rect x="632.4" y="323.0" width="60.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.4" y="334.0">one/ni..</text>
</g>
<g>
<title>byte[] (921 samples, 2.01%)</title><rect x="632.4" y="307.0" width="23.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="635.4" y="318.0">b..</text>
</g>
<g>
<title>byte[] (1,435 samples, 3.14%)</title><rect x="656.2" y="307.0" width="37.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="659.2" y="318.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (450 samples, 0.98%)</title><rect x="693.2" y="323.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.2" y="334.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.04%)</title><rect x="693.2" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="696.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.05%)</title><rect x="693.7" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.05%)</title><rect x="693.7" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.03%)</title><rect x="693.7" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="696.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.02%)</title><rect x="694.0" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.0" y="286.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.02%)</title><rect x="694.0" y="259.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="697.0" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Response (16 samples, 0.03%)</title><rect x="694.3" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="697.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (354 samples, 0.77%)</title><rect x="694.7" y="307.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.7" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (354 samples, 0.77%)</title><rect x="694.7" y="291.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (354 samples, 0.77%)</title><rect x="694.7" y="275.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.7" y="286.0"></text>
</g>
<g>
<title>char[] (216 samples, 0.47%)</title><rect x="694.7" y="259.0" width="5.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="697.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.15%)</title><rect x="700.3" y="259.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="703.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (71 samples, 0.16%)</title><rect x="702.0" y="259.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (71 samples, 0.16%)</title><rect x="702.0" y="243.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (71 samples, 0.16%)</title><rect x="702.0" y="227.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.0" y="238.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.16%)</title><rect x="702.0" y="211.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="705.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.03%)</title><rect x="703.8" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.03%)</title><rect x="703.8" y="291.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="706.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (25 samples, 0.05%)</title><rect x="704.1" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.05%)</title><rect x="704.1" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.05%)</title><rect x="704.1" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.02%)</title><rect x="704.1" y="259.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="707.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.03%)</title><rect x="704.4" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.4" y="270.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.03%)</title><rect x="704.4" y="243.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="707.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (49 samples, 0.11%)</title><rect x="704.8" y="323.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.8" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (49 samples, 0.11%)</title><rect x="704.8" y="307.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.8" y="318.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.11%)</title><rect x="704.8" y="291.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="707.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (32 samples, 0.07%)</title><rect x="706.0" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.07%)</title><rect x="706.0" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.07%)</title><rect x="706.0" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.03%)</title><rect x="706.0" y="275.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="709.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.04%)</title><rect x="706.4" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.4" y="286.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.04%)</title><rect x="706.4" y="259.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="709.4" y="270.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (14 samples, 0.03%)</title><rect x="706.9" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.9" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (14 samples, 0.03%)</title><rect x="706.9" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.9" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (14 samples, 0.03%)</title><rect x="706.9" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.9" y="302.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (14 samples, 0.03%)</title><rect x="706.9" y="275.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="709.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ApiUtils.sendResponse (74 samples, 0.16%)</title><rect x="707.2" y="387.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (74 samples, 0.16%)</title><rect x="707.2" y="371.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (74 samples, 0.16%)</title><rect x="707.2" y="355.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (47 samples, 0.10%)</title><rect x="707.2" y="339.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.2" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (47 samples, 0.10%)</title><rect x="707.2" y="323.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.2" y="334.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.10%)</title><rect x="707.2" y="307.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="710.2" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.06%)</title><rect x="708.4" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.4" y="350.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (27 samples, 0.06%)</title><rect x="708.4" y="323.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="711.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.mergeGetResponses (214 samples, 0.47%)</title><rect x="709.1" y="387.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (42 samples, 0.09%)</title><rect x="709.3" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.3" y="382.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.03%)</title><rect x="709.3" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="712.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 0.03%)</title><rect x="709.7" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="712.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.03%)</title><rect x="710.1" y="355.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="713.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (93 samples, 0.20%)</title><rect x="710.4" y="371.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (93 samples, 0.20%)</title><rect x="710.4" y="355.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.20%)</title><rect x="710.4" y="339.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.07%)</title><rect x="710.4" y="323.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="713.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (62 samples, 0.14%)</title><rect x="711.2" y="323.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.2" y="334.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.14%)</title><rect x="711.2" y="307.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="714.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/MergeUtils.getResponseFromValues (71 samples, 0.16%)</title><rect x="712.8" y="371.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (71 samples, 0.16%)</title><rect x="712.8" y="355.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.8" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.02%)</title><rect x="712.8" y="339.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="715.8" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (61 samples, 0.13%)</title><rect x="713.1" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.1" y="350.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.06%)</title><rect x="713.1" y="323.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="716.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (20 samples, 0.04%)</title><rect x="713.8" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="716.8" y="334.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.03%)</title><rect x="714.3" y="323.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="717.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/ByteBufferUtils.getByteBufferKey (24 samples, 0.05%)</title><rect x="714.6" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (24 samples, 0.05%)</title><rect x="714.6" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (24 samples, 0.05%)</title><rect x="714.6" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (24 samples, 0.05%)</title><rect x="714.6" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.05%)</title><rect x="714.6" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.6" y="350.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.05%)</title><rect x="714.6" y="323.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="717.6" y="334.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (18,415 samples, 40.23%)</title><rect x="715.3" y="515.0" width="474.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.3" y="526.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,006 samples, 2.20%)</title><rect x="715.3" y="499.0" width="25.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.3" y="510.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,006 samples, 2.20%)</title><rect x="715.3" y="483.0" width="25.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="718.3" y="494.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (17,409 samples, 38.03%)</title><rect x="741.2" y="499.0" width="448.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.2" y="510.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (17,409 samples, 38.03%)</title><rect x="741.2" y="483.0" width="448.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.2" y="494.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (17,409 samples, 38.03%)</title><rect x="741.2" y="467.0" width="448.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.2" y="478.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,307 samples, 9.41%)</title><rect x="741.2" y="451.0" width="111.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.2" y="462.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,307 samples, 9.41%)</title><rect x="741.2" y="435.0" width="111.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.2" y="446.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler2_handleRequest.handleRequest (2,464 samples, 5.38%)</title><rect x="741.2" y="419.0" width="63.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.2" y="430.0">Request..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,854 samples, 4.05%)</title><rect x="741.2" y="403.0" width="47.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="744.2" y="414.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,854 samples, 4.05%)</title><rect x="741.2" y="387.0" width="47.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.2" y="398.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (1,854 samples, 4.05%)</title><rect x="741.2" y="371.0" width="47.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.2" y="382.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,854 samples, 4.05%)</title><rect x="741.2" y="355.0" width="47.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.2" y="366.0">java..</text>
</g>
<g>
<title>java.lang.String (555 samples, 1.21%)</title><rect x="741.2" y="339.0" width="14.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="744.2" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,299 samples, 2.84%)</title><rect x="755.5" y="339.0" width="33.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="758.5" y="350.0">ja..</text>
</g>
<g>
<title>byte[] (1,299 samples, 2.84%)</title><rect x="755.5" y="323.0" width="33.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="758.5" y="334.0">by..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyReplicaService.handleRequest (610 samples, 1.33%)</title><rect x="789.0" y="403.0" width="15.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.handleRequest (610 samples, 1.33%)</title><rect x="789.0" y="387.0" width="15.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/720764787.linkToTargetMethod (591 samples, 1.29%)</title><rect x="789.0" y="371.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (591 samples, 1.29%)</title><rect x="789.0" y="355.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService$$Lambda$68/785022578.get$Lambda (591 samples, 1.29%)</title><rect x="789.0" y="339.0" width="15.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.0" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.BaseService$$Lambda$68 (591 samples, 1.29%)</title><rect x="789.0" y="323.0" width="15.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="792.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/BaseService.executeTask (19 samples, 0.04%)</title><rect x="804.2" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.04%)</title><rect x="804.2" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (19 samples, 0.04%)</title><rect x="804.2" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (19 samples, 0.04%)</title><rect x="804.2" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (19 samples, 0.04%)</title><rect x="804.2" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (19 samples, 0.04%)</title><rect x="804.2" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (19 samples, 0.04%)</title><rect x="804.2" y="275.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="807.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,843 samples, 4.03%)</title><rect x="804.7" y="419.0" width="47.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.7" y="430.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (1,843 samples, 4.03%)</title><rect x="804.7" y="403.0" width="47.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.7" y="414.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,843 samples, 4.03%)</title><rect x="804.7" y="387.0" width="47.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.7" y="398.0">java..</text>
</g>
<g>
<title>java.lang.String (626 samples, 1.37%)</title><rect x="804.7" y="371.0" width="16.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="807.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,217 samples, 2.66%)</title><rect x="820.9" y="371.0" width="31.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.9" y="382.0">ja..</text>
</g>
<g>
<title>byte[] (1,217 samples, 2.66%)</title><rect x="820.9" y="355.0" width="31.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="823.9" y="366.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8,002 samples, 17.48%)</title><rect x="852.2" y="451.0" width="206.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.2" y="462.0">one/nio/http/HttpSession.pa..</text>
</g>
<g>
<title>one.nio.http.Request (1,611 samples, 3.52%)</title><rect x="852.2" y="435.0" width="41.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="855.2" y="446.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,338 samples, 5.11%)</title><rect x="893.8" y="435.0" width="60.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.8" y="446.0">one/ni..</text>
</g>
<g>
<title>java.lang.String[] (2,115 samples, 4.62%)</title><rect x="893.8" y="419.0" width="54.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="896.8" y="430.0">java...</text>
</g>
<g>
<title>java.lang.String[] (223 samples, 0.49%)</title><rect x="948.3" y="419.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="951.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,053 samples, 8.85%)</title><rect x="954.0" y="435.0" width="104.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.0" y="446.0">one/nio/util..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,053 samples, 8.85%)</title><rect x="954.0" y="419.0" width="104.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.0" y="430.0">one/nio/util..</text>
</g>
<g>
<title>char[] (1,901 samples, 4.15%)</title><rect x="954.0" y="403.0" width="49.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="957.0" y="414.0">char[]</text>
</g>
<g>
<title>char[] (84 samples, 0.18%)</title><rect x="1003.0" y="403.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1006.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String (634 samples, 1.39%)</title><rect x="1005.2" y="403.0" width="16.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1008.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,434 samples, 3.13%)</title><rect x="1021.6" y="403.0" width="36.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1024.6" y="414.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,434 samples, 3.13%)</title><rect x="1021.6" y="387.0" width="36.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.6" y="398.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,434 samples, 3.13%)</title><rect x="1021.6" y="371.0" width="36.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1024.6" y="382.0">jav..</text>
</g>
<g>
<title>byte[] (1,434 samples, 3.13%)</title><rect x="1021.6" y="355.0" width="36.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1024.6" y="366.0">byt..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,100 samples, 11.14%)</title><rect x="1058.5" y="451.0" width="131.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1061.5" y="462.0">one/nio/util/Utf..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,100 samples, 11.14%)</title><rect x="1058.5" y="435.0" width="131.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.5" y="446.0">one/nio/util/Utf..</text>
</g>
<g>
<title>char[] (2,404 samples, 5.25%)</title><rect x="1058.5" y="419.0" width="62.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1061.5" y="430.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,217 samples, 2.66%)</title><rect x="1120.7" y="419.0" width="31.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1123.7" y="430.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,471 samples, 3.21%)</title><rect x="1152.1" y="419.0" width="37.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1155.1" y="430.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,471 samples, 3.21%)</title><rect x="1152.1" y="403.0" width="37.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.1" y="414.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,471 samples, 3.21%)</title><rect x="1152.1" y="387.0" width="37.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.1" y="398.0">jav..</text>
</g>
<g>
<title>byte[] (1,471 samples, 3.21%)</title><rect x="1152.1" y="371.0" width="37.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1155.1" y="382.0">byt..</text>
</g>
</g>
</svg>
