<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (19,816 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (14,460 samples, 72.97%)</title><rect x="10.0" y="547.0" width="861.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14,460 samples, 72.97%)</title><rect x="10.0" y="531.0" width="861.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14,460 samples, 72.97%)</title><rect x="10.0" y="515.0" width="861.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.10%)</title><rect x="10.0" y="499.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (20 samples, 0.10%)</title><rect x="10.0" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (20 samples, 0.10%)</title><rect x="10.0" y="467.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (20 samples, 0.10%)</title><rect x="10.0" y="451.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (20 samples, 0.10%)</title><rect x="10.0" y="435.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService$$Lambda$71/1647560262.run (14,440 samples, 72.87%)</title><rect x="11.2" y="499.0" width="859.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.2" y="510.0">ru/mail/polis/service/re1nex/AsyncTopologyService$$Lambda$71/1647560262.run</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.lambda$get$1 (14,440 samples, 72.87%)</title><rect x="11.2" y="483.0" width="859.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.2" y="494.0">ru/mail/polis/service/re1nex/AsyncTopologyService.lambda$get$1</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.06%)</title><rect x="11.3" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="11.7" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="14.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3,498 samples, 17.65%)</title><rect x="12.0" y="467.0" width="208.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.0" y="478.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (322 samples, 1.62%)</title><rect x="12.0" y="451.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (322 samples, 1.62%)</title><rect x="12.0" y="435.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (322 samples, 1.62%)</title><rect x="12.0" y="419.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (322 samples, 1.62%)</title><rect x="12.0" y="403.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (322 samples, 1.62%)</title><rect x="12.0" y="387.0" width="19.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (286 samples, 1.44%)</title><rect x="12.0" y="371.0" width="17.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.0" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (38 samples, 0.19%)</title><rect x="12.0" y="355.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.0" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (38 samples, 0.19%)</title><rect x="12.0" y="339.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (38 samples, 0.19%)</title><rect x="12.0" y="323.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.19%)</title><rect x="12.0" y="307.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.0" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (38 samples, 0.19%)</title><rect x="12.0" y="291.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.0" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (38 samples, 0.19%)</title><rect x="12.0" y="275.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.0" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (38 samples, 0.19%)</title><rect x="12.0" y="259.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (38 samples, 0.19%)</title><rect x="12.0" y="243.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (38 samples, 0.19%)</title><rect x="12.0" y="227.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (38 samples, 0.19%)</title><rect x="12.0" y="211.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.0" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (38 samples, 0.19%)</title><rect x="12.0" y="195.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (38 samples, 0.19%)</title><rect x="12.0" y="179.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="15.0" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (248 samples, 1.25%)</title><rect x="14.3" y="355.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (248 samples, 1.25%)</title><rect x="14.3" y="339.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (248 samples, 1.25%)</title><rect x="14.3" y="323.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (248 samples, 1.25%)</title><rect x="14.3" y="307.0" width="14.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (248 samples, 1.25%)</title><rect x="14.3" y="291.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (248 samples, 1.25%)</title><rect x="14.3" y="275.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (213 samples, 1.07%)</title><rect x="14.3" y="259.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (213 samples, 1.07%)</title><rect x="14.3" y="243.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (213 samples, 1.07%)</title><rect x="14.3" y="227.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (213 samples, 1.07%)</title><rect x="14.3" y="211.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (99 samples, 0.50%)</title><rect x="14.3" y="195.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (60 samples, 0.30%)</title><rect x="14.3" y="179.0" width="3.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="17.3" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (39 samples, 0.20%)</title><rect x="17.9" y="179.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.9" y="190.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.20%)</title><rect x="17.9" y="163.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (8 samples, 0.04%)</title><rect x="20.2" y="195.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="23.2" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (7 samples, 0.04%)</title><rect x="20.7" y="195.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="23.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (28 samples, 0.14%)</title><rect x="21.1" y="195.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (28 samples, 0.14%)</title><rect x="21.1" y="179.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.12%)</title><rect x="21.1" y="163.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="24.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (71 samples, 0.36%)</title><rect x="22.7" y="195.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (45 samples, 0.23%)</title><rect x="22.7" y="179.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.7" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.13%)</title><rect x="22.7" y="163.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="25.7" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.10%)</title><rect x="24.2" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.2" y="174.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.10%)</title><rect x="24.2" y="147.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="27.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (26 samples, 0.13%)</title><rect x="25.4" y="179.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.4" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (26 samples, 0.13%)</title><rect x="25.4" y="163.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.4" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.10%)</title><rect x="25.4" y="147.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="28.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="26.6" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.6" y="158.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="26.6" y="131.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="29.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (35 samples, 0.18%)</title><rect x="27.0" y="259.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.0" y="270.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (35 samples, 0.18%)</title><rect x="27.0" y="243.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (35 samples, 0.18%)</title><rect x="27.0" y="227.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (35 samples, 0.18%)</title><rect x="27.0" y="211.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (35 samples, 0.18%)</title><rect x="27.0" y="195.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.0" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (35 samples, 0.18%)</title><rect x="27.0" y="179.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.0" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (35 samples, 0.18%)</title><rect x="27.0" y="163.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="30.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$74/813290444.apply (36 samples, 0.18%)</title><rect x="29.1" y="371.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (36 samples, 0.18%)</title><rect x="29.1" y="355.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (36 samples, 0.18%)</title><rect x="29.1" y="339.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.18%)</title><rect x="29.1" y="323.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="32.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (27 samples, 0.14%)</title><rect x="31.2" y="451.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (27 samples, 0.14%)</title><rect x="31.2" y="435.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$78/52772263.apply (27 samples, 0.14%)</title><rect x="31.2" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$iterator$4 (27 samples, 0.14%)</title><rect x="31.2" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.of (7 samples, 0.04%)</title><rect x="31.2" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.Record (7 samples, 0.04%)</title><rect x="31.2" y="371.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="34.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (6 samples, 0.03%)</title><rect x="31.6" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="31.6" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (6 samples, 0.03%)</title><rect x="31.6" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="34.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Value.getData (14 samples, 0.07%)</title><rect x="32.0" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.07%)</title><rect x="32.0" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="35.0" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.07%)</title><rect x="32.0" y="355.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="35.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (13 samples, 0.07%)</title><rect x="32.8" y="451.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (13 samples, 0.07%)</title><rect x="32.8" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.8" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (13 samples, 0.07%)</title><rect x="32.8" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.07%)</title><rect x="32.8" y="403.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="35.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (8 samples, 0.04%)</title><rect x="33.6" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (8 samples, 0.04%)</title><rect x="33.6" y="435.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (8 samples, 0.04%)</title><rect x="33.6" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (8 samples, 0.04%)</title><rect x="33.6" y="403.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="36.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.iterator (3,128 samples, 15.79%)</title><rect x="34.1" y="451.0" width="186.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.1" y="462.0">ru/mail/polis/dao/re1nex..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (10 samples, 0.05%)</title><rect x="34.1" y="435.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.1" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (10 samples, 0.05%)</title><rect x="34.1" y="419.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="37.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (5 samples, 0.03%)</title><rect x="34.7" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.7" y="446.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (5 samples, 0.03%)</title><rect x="34.7" y="419.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="37.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.cellIterator (3,109 samples, 15.69%)</title><rect x="35.2" y="435.0" width="185.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.2" y="446.0">ru/mail/polis/dao/re1nex..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (469 samples, 2.37%)</title><rect x="35.2" y="419.0" width="27.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.2" y="430.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (468 samples, 2.36%)</title><rect x="35.2" y="403.0" width="27.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.2" y="414.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (17 samples, 0.09%)</title><rect x="35.5" y="387.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="38.5" y="398.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (17 samples, 0.09%)</title><rect x="35.5" y="371.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="38.5" y="382.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (10 samples, 0.05%)</title><rect x="36.5" y="387.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="39.5" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (13 samples, 0.07%)</title><rect x="37.1" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.07%)</title><rect x="37.1" y="371.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="40.1" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (376 samples, 1.90%)</title><rect x="37.9" y="387.0" width="22.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.9" y="398.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (376 samples, 1.90%)</title><rect x="37.9" y="371.0" width="22.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.9" y="382.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (14 samples, 0.07%)</title><rect x="37.9" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.07%)</title><rect x="37.9" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.07%)</title><rect x="37.9" y="323.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="40.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (362 samples, 1.83%)</title><rect x="38.7" y="355.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.7" y="366.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (362 samples, 1.83%)</title><rect x="38.7" y="339.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.7" y="350.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (362 samples, 1.83%)</title><rect x="38.7" y="323.0" width="21.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.7" y="334.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (362 samples, 1.83%)</title><rect x="38.7" y="307.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.7" y="318.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (326 samples, 1.65%)</title><rect x="38.7" y="291.0" width="19.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (326 samples, 1.65%)</title><rect x="38.7" y="275.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (326 samples, 1.65%)</title><rect x="38.7" y="259.0" width="19.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (326 samples, 1.65%)</title><rect x="38.7" y="243.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (124 samples, 0.63%)</title><rect x="38.7" y="227.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.7" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 0.43%)</title><rect x="38.7" y="211.0" width="5.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="41.7" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (38 samples, 0.19%)</title><rect x="43.8" y="211.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.8" y="222.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.19%)</title><rect x="43.8" y="195.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="46.8" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (18 samples, 0.09%)</title><rect x="46.1" y="227.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="49.1" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (18 samples, 0.09%)</title><rect x="47.2" y="227.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="50.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (39 samples, 0.20%)</title><rect x="48.2" y="227.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (39 samples, 0.20%)</title><rect x="48.2" y="211.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.14%)</title><rect x="48.2" y="195.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="51.2" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.06%)</title><rect x="49.8" y="195.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.8" y="206.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.06%)</title><rect x="49.8" y="179.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="52.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (127 samples, 0.64%)</title><rect x="50.6" y="227.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (82 samples, 0.41%)</title><rect x="50.6" y="211.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.6" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54 samples, 0.27%)</title><rect x="50.6" y="195.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="53.6" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (28 samples, 0.14%)</title><rect x="53.8" y="195.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.8" y="206.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.14%)</title><rect x="53.8" y="179.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="56.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (45 samples, 0.23%)</title><rect x="55.4" y="211.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.4" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (45 samples, 0.23%)</title><rect x="55.4" y="195.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.4" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.14%)</title><rect x="55.4" y="179.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="58.4" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="57.1" y="179.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.1" y="190.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.09%)</title><rect x="57.1" y="163.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="60.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (36 samples, 0.18%)</title><rect x="58.1" y="291.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.1" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (36 samples, 0.18%)</title><rect x="58.1" y="275.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (36 samples, 0.18%)</title><rect x="58.1" y="259.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (36 samples, 0.18%)</title><rect x="58.1" y="243.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (36 samples, 0.18%)</title><rect x="58.1" y="227.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.1" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (36 samples, 0.18%)</title><rect x="58.1" y="211.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.18%)</title><rect x="58.1" y="195.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="61.1" y="206.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (48 samples, 0.24%)</title><rect x="60.3" y="387.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (48 samples, 0.24%)</title><rect x="60.3" y="371.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (48 samples, 0.24%)</title><rect x="60.3" y="355.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (10 samples, 0.05%)</title><rect x="60.3" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$70/2105193183.getAsBoolean (10 samples, 0.05%)</title><rect x="60.3" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (10 samples, 0.05%)</title><rect x="60.3" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (10 samples, 0.05%)</title><rect x="60.3" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (10 samples, 0.05%)</title><rect x="60.3" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable$$Lambda$67/831133545.apply (10 samples, 0.05%)</title><rect x="60.3" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.lambda$iterator$0 (10 samples, 0.05%)</title><rect x="60.3" y="243.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.3" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Cell (10 samples, 0.05%)</title><rect x="60.3" y="227.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="63.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (38 samples, 0.19%)</title><rect x="60.9" y="339.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.SpinedBuffer (5 samples, 0.03%)</title><rect x="60.9" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="63.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (27 samples, 0.14%)</title><rect x="61.5" y="323.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.5" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.14%)</title><rect x="61.5" y="307.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="64.5" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2,383 samples, 12.03%)</title><rect x="63.3" y="419.0" width="141.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.3" y="430.0">java/lang/Iterable..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (8 samples, 0.04%)</title><rect x="63.3" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.3" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (8 samples, 0.04%)</title><rect x="63.3" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (8 samples, 0.04%)</title><rect x="63.3" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.3" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (8 samples, 0.04%)</title><rect x="63.3" y="355.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="66.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$72/1215814195.accept (2,375 samples, 11.99%)</title><rect x="63.8" y="403.0" width="141.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.8" y="414.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.lambda$cellIterator$5 (2,375 samples, 11.99%)</title><rect x="63.8" y="387.0" width="141.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.8" y="398.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.iterator (2,375 samples, 11.99%)</title><rect x="63.8" y="371.0" width="141.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.8" y="382.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.SSTable$1 (13 samples, 0.07%)</title><rect x="63.8" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="66.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.&lt;init&gt; (2,362 samples, 11.92%)</title><rect x="64.5" y="355.0" width="140.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.5" y="366.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.binarySearch (2,362 samples, 11.92%)</title><rect x="64.5" y="339.0" width="140.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.5" y="350.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (2,362 samples, 11.92%)</title><rect x="64.5" y="323.0" width="140.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.5" y="334.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,577 samples, 7.96%)</title><rect x="64.5" y="307.0" width="94.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.5" y="318.0">java/nio/By..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,042 samples, 5.26%)</title><rect x="64.5" y="291.0" width="62.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="67.5" y="302.0">java.n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (535 samples, 2.70%)</title><rect x="126.6" y="291.0" width="31.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.6" y="302.0">ja..</text>
</g>
<g>
<title>byte[] (535 samples, 2.70%)</title><rect x="126.6" y="275.0" width="31.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="129.6" y="286.0">by..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (785 samples, 3.96%)</title><rect x="158.5" y="307.0" width="46.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.5" y="318.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (785 samples, 3.96%)</title><rect x="158.5" y="291.0" width="46.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.5" y="302.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (527 samples, 2.66%)</title><rect x="158.5" y="275.0" width="31.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="161.5" y="286.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (258 samples, 1.30%)</title><rect x="189.8" y="275.0" width="15.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.8" y="286.0"></text>
</g>
<g>
<title>byte[] (258 samples, 1.30%)</title><rect x="189.8" y="259.0" width="15.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="192.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.03%)</title><rect x="205.2" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.03%)</title><rect x="205.2" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO$$Lambda$72/1215814195.get$Lambda (6 samples, 0.03%)</title><rect x="205.2" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.NewDAO$$Lambda$72 (6 samples, 0.03%)</title><rect x="205.2" y="371.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="208.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.04%)</title><rect x="205.6" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.04%)</title><rect x="205.6" y="403.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="208.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (164 samples, 0.83%)</title><rect x="206.0" y="419.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.0" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (7 samples, 0.04%)</title><rect x="206.0" y="403.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="209.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (157 samples, 0.79%)</title><rect x="206.4" y="403.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (157 samples, 0.79%)</title><rect x="206.4" y="387.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.4" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (23 samples, 0.12%)</title><rect x="206.4" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.4" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (23 samples, 0.12%)</title><rect x="206.4" y="355.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (23 samples, 0.12%)</title><rect x="206.4" y="339.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.12%)</title><rect x="206.4" y="323.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 0.12%)</title><rect x="206.4" y="307.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (23 samples, 0.12%)</title><rect x="206.4" y="291.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.4" y="302.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (23 samples, 0.12%)</title><rect x="206.4" y="275.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (23 samples, 0.12%)</title><rect x="206.4" y="259.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (23 samples, 0.12%)</title><rect x="206.4" y="243.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (23 samples, 0.12%)</title><rect x="206.4" y="227.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (23 samples, 0.12%)</title><rect x="206.4" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (23 samples, 0.12%)</title><rect x="206.4" y="195.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="209.4" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (134 samples, 0.68%)</title><rect x="207.8" y="371.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.8" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (134 samples, 0.68%)</title><rect x="207.8" y="355.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (134 samples, 0.68%)</title><rect x="207.8" y="339.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (134 samples, 0.68%)</title><rect x="207.8" y="323.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (134 samples, 0.68%)</title><rect x="207.8" y="307.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (134 samples, 0.68%)</title><rect x="207.8" y="291.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (113 samples, 0.57%)</title><rect x="207.8" y="275.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (113 samples, 0.57%)</title><rect x="207.8" y="259.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable$1.next (113 samples, 0.57%)</title><rect x="207.8" y="243.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.cell (113 samples, 0.57%)</title><rect x="207.8" y="227.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (39 samples, 0.20%)</title><rect x="207.8" y="211.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.12%)</title><rect x="207.8" y="195.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="210.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 0.08%)</title><rect x="209.2" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.2" y="206.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.08%)</title><rect x="209.2" y="179.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="212.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.re1nex.Value (5 samples, 0.03%)</title><rect x="210.3" y="211.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="213.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (23 samples, 0.12%)</title><rect x="210.6" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.12%)</title><rect x="210.6" y="195.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.6" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.07%)</title><rect x="210.6" y="179.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="213.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="211.4" y="179.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.4" y="190.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.05%)</title><rect x="211.4" y="163.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="214.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.key (42 samples, 0.21%)</title><rect x="212.0" y="211.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (24 samples, 0.12%)</title><rect x="212.0" y="195.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.09%)</title><rect x="212.0" y="179.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="215.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="213.1" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.1" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="213.1" y="163.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="216.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/SSTable.getOffset (18 samples, 0.09%)</title><rect x="213.4" y="195.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.09%)</title><rect x="213.4" y="179.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (12 samples, 0.06%)</title><rect x="213.4" y="163.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="216.4" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="214.1" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.1" y="174.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="214.1" y="147.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="217.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (21 samples, 0.11%)</title><rect x="214.5" y="275.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.5" y="286.0"></text>
</g>
<g>
<title>java/util/Comparators$NaturalOrderComparator.compare (21 samples, 0.11%)</title><rect x="214.5" y="259.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (21 samples, 0.11%)</title><rect x="214.5" y="243.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.compareTo (21 samples, 0.11%)</title><rect x="214.5" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/Cell.getKey (21 samples, 0.11%)</title><rect x="214.5" y="211.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.11%)</title><rect x="214.5" y="195.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.11%)</title><rect x="214.5" y="179.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="217.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.iterator (77 samples, 0.39%)</title><rect x="215.7" y="419.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.7" y="430.0"></text>
</g>
<g>
<title>java/util/Collection.stream (19 samples, 0.10%)</title><rect x="215.7" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (9 samples, 0.05%)</title><rect x="215.7" y="387.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (9 samples, 0.05%)</title><rect x="215.7" y="371.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="218.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.05%)</title><rect x="216.3" y="387.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.3" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.05%)</title><rect x="216.3" y="371.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="219.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (5 samples, 0.03%)</title><rect x="216.9" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (5 samples, 0.03%)</title><rect x="216.9" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="219.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.09%)</title><rect x="217.2" y="403.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.09%)</title><rect x="217.2" y="387.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.09%)</title><rect x="217.2" y="371.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (17 samples, 0.09%)</title><rect x="217.2" y="355.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="220.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (19 samples, 0.10%)</title><rect x="218.2" y="403.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.2" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators.iterator (5 samples, 0.03%)</title><rect x="218.2" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.2" y="398.0"></text>
</g>
<g>
<title>java.util.Spliterators$1Adapter (5 samples, 0.03%)</title><rect x="218.2" y="371.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="221.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (14 samples, 0.07%)</title><rect x="218.5" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.wrap (10 samples, 0.05%)</title><rect x="218.7" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.7" y="382.0"></text>
</g>
<g>
<title>java.util.stream.StreamSpliterators$WrappingSpliterator (10 samples, 0.05%)</title><rect x="218.7" y="355.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="221.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (17 samples, 0.09%)</title><rect x="219.3" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.3" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (17 samples, 0.09%)</title><rect x="219.3" y="387.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="222.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.primaryFor (52 samples, 0.26%)</title><rect x="220.3" y="467.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.primaryFor (52 samples, 0.26%)</title><rect x="220.3" y="451.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (18 samples, 0.09%)</title><rect x="220.3" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Integer (18 samples, 0.09%)</title><rect x="220.3" y="419.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="223.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (14 samples, 0.07%)</title><rect x="221.4" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (14 samples, 0.07%)</title><rect x="221.4" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (14 samples, 0.07%)</title><rect x="221.4" y="403.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="224.4" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (20 samples, 0.10%)</title><rect x="222.2" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.2" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (20 samples, 0.10%)</title><rect x="222.2" y="419.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (20 samples, 0.10%)</title><rect x="222.2" y="403.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="225.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.byteBufferToByte (5 samples, 0.03%)</title><rect x="223.4" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.4" y="478.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.03%)</title><rect x="223.4" y="451.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="226.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.getByteBufferKey (79 samples, 0.40%)</title><rect x="223.7" y="467.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (57 samples, 0.29%)</title><rect x="223.7" y="451.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (57 samples, 0.29%)</title><rect x="223.7" y="435.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (57 samples, 0.29%)</title><rect x="223.7" y="419.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 0.29%)</title><rect x="223.7" y="403.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.7" y="414.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.29%)</title><rect x="223.7" y="387.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="226.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.11%)</title><rect x="227.1" y="451.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (22 samples, 0.11%)</title><rect x="227.1" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.1" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.11%)</title><rect x="227.1" y="419.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="230.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.proxy (10,774 samples, 54.37%)</title><rect x="228.4" y="467.0" width="641.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.4" y="478.0">ru/mail/polis/service/re1nex/AsyncTopologyService.proxy</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.11%)</title><rect x="228.4" y="451.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1024597427.invoke (21 samples, 0.11%)</title><rect x="228.4" y="435.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.11%)</title><rect x="228.4" y="419.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.07%)</title><rect x="228.4" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.07%)</title><rect x="228.4" y="387.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="231.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.04%)</title><rect x="229.3" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.04%)</title><rect x="229.3" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.3" y="398.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="229.3" y="371.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="232.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10,695 samples, 53.97%)</title><rect x="229.7" y="451.0" width="636.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.7" y="462.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10,695 samples, 53.97%)</title><rect x="229.7" y="435.0" width="636.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.7" y="446.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (14 samples, 0.07%)</title><rect x="229.7" y="419.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="232.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (10,256 samples, 51.76%)</title><rect x="230.5" y="419.0" width="610.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.5" y="430.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (1,726 samples, 8.71%)</title><rect x="230.5" y="403.0" width="102.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="233.5" y="414.0">byte[]</text>
</g>
<g>
<title>byte[] (8,530 samples, 43.05%)</title><rect x="333.3" y="403.0" width="507.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="336.3" y="414.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (379 samples, 1.91%)</title><rect x="841.2" y="419.0" width="22.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.2" y="430.0">o..</text>
</g>
<g>
<title>byte[] (11 samples, 0.06%)</title><rect x="841.2" y="403.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="844.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (27 samples, 0.14%)</title><rect x="841.9" y="403.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.14%)</title><rect x="841.9" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.9" y="398.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.05%)</title><rect x="841.9" y="371.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="844.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.09%)</title><rect x="842.4" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.4" y="382.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.09%)</title><rect x="842.4" y="355.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="845.4" y="366.0"></text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.05%)</title><rect x="843.5" y="403.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="846.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (305 samples, 1.54%)</title><rect x="844.0" y="403.0" width="18.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (305 samples, 1.54%)</title><rect x="844.0" y="387.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (305 samples, 1.54%)</title><rect x="844.0" y="371.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.0" y="382.0"></text>
</g>
<g>
<title>char[] (213 samples, 1.07%)</title><rect x="844.0" y="355.0" width="12.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="847.0" y="366.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.17%)</title><rect x="856.7" y="355.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="859.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (58 samples, 0.29%)</title><rect x="858.7" y="355.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.7" y="366.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (58 samples, 0.29%)</title><rect x="858.7" y="339.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (58 samples, 0.29%)</title><rect x="858.7" y="323.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.7" y="334.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.29%)</title><rect x="858.7" y="307.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="861.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.05%)</title><rect x="862.2" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.05%)</title><rect x="862.2" y="387.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="865.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (18 samples, 0.09%)</title><rect x="862.7" y="403.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.09%)</title><rect x="862.7" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="865.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.09%)</title><rect x="862.7" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.05%)</title><rect x="862.7" y="355.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="865.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.05%)</title><rect x="863.3" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.3" y="366.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.05%)</title><rect x="863.3" y="339.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="866.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (25 samples, 0.13%)</title><rect x="863.8" y="419.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="866.8" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (25 samples, 0.13%)</title><rect x="863.8" y="403.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="866.8" y="414.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.13%)</title><rect x="863.8" y="387.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="866.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (17 samples, 0.09%)</title><rect x="865.3" y="419.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.09%)</title><rect x="865.3" y="403.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.09%)</title><rect x="865.3" y="387.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="865.3" y="371.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="868.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.06%)</title><rect x="865.6" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.6" y="382.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.06%)</title><rect x="865.6" y="355.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="868.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (58 samples, 0.29%)</title><rect x="866.5" y="451.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (58 samples, 0.29%)</title><rect x="866.5" y="435.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="869.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (42 samples, 0.21%)</title><rect x="866.5" y="419.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="869.5" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (42 samples, 0.21%)</title><rect x="866.5" y="403.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.5" y="414.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.21%)</title><rect x="866.5" y="387.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="869.5" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 0.08%)</title><rect x="869.0" y="419.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.0" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (16 samples, 0.08%)</title><rect x="869.0" y="403.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="872.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.sendResponse (18 samples, 0.09%)</title><rect x="870.0" y="467.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 0.09%)</title><rect x="870.0" y="451.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (18 samples, 0.09%)</title><rect x="870.0" y="435.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.05%)</title><rect x="870.0" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.0" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.05%)</title><rect x="870.0" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.0" y="414.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.05%)</title><rect x="870.0" y="387.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="873.0" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.04%)</title><rect x="870.6" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.6" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.04%)</title><rect x="870.6" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="873.6" y="414.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,356 samples, 27.03%)</title><rect x="871.1" y="547.0" width="318.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="874.1" y="558.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (197 samples, 0.99%)</title><rect x="871.1" y="531.0" width="11.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.1" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (197 samples, 0.99%)</title><rect x="871.1" y="515.0" width="11.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="874.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,159 samples, 26.03%)</title><rect x="882.8" y="531.0" width="307.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.8" y="542.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,159 samples, 26.03%)</title><rect x="882.8" y="515.0" width="307.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.8" y="526.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,159 samples, 26.03%)</title><rect x="882.8" y="499.0" width="307.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.8" y="510.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,968 samples, 9.93%)</title><rect x="882.8" y="483.0" width="117.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.8" y="494.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,968 samples, 9.93%)</title><rect x="882.8" y="467.0" width="117.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.8" y="478.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1,564 samples, 7.89%)</title><rect x="882.8" y="451.0" width="93.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="885.8" y="462.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (407 samples, 2.05%)</title><rect x="882.8" y="435.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.8" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (407 samples, 2.05%)</title><rect x="882.8" y="419.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.8" y="430.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (407 samples, 2.05%)</title><rect x="882.8" y="403.0" width="24.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.8" y="414.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (407 samples, 2.05%)</title><rect x="882.8" y="387.0" width="24.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.8" y="398.0">j..</text>
</g>
<g>
<title>java.lang.String (147 samples, 0.74%)</title><rect x="882.8" y="371.0" width="8.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="885.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (260 samples, 1.31%)</title><rect x="891.5" y="371.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.5" y="382.0"></text>
</g>
<g>
<title>byte[] (260 samples, 1.31%)</title><rect x="891.5" y="355.0" width="15.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="894.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.get (1,157 samples, 5.84%)</title><rect x="907.0" y="435.0" width="68.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="910.0" y="446.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (212 samples, 1.07%)</title><rect x="907.0" y="419.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (212 samples, 1.07%)</title><rect x="907.0" y="403.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService$$Lambda$71/1647560262.get$Lambda (212 samples, 1.07%)</title><rect x="907.0" y="387.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.0" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.re1nex.AsyncTopologyService$$Lambda$71 (212 samples, 1.07%)</title><rect x="907.0" y="371.0" width="12.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="910.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.executeTask (945 samples, 4.77%)</title><rect x="919.7" y="419.0" width="56.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.7" y="430.0">ru/mai..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (806 samples, 4.07%)</title><rect x="919.7" y="403.0" width="47.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.7" y="414.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (806 samples, 4.07%)</title><rect x="919.7" y="387.0" width="47.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.7" y="398.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (806 samples, 4.07%)</title><rect x="919.7" y="371.0" width="47.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.7" y="382.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (772 samples, 3.90%)</title><rect x="919.8" y="355.0" width="45.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.8" y="366.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (772 samples, 3.90%)</title><rect x="919.8" y="339.0" width="45.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.8" y="350.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (772 samples, 3.90%)</title><rect x="919.8" y="323.0" width="45.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="922.8" y="334.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (772 samples, 3.90%)</title><rect x="919.8" y="307.0" width="45.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.8" y="318.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (772 samples, 3.90%)</title><rect x="919.8" y="291.0" width="45.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.8" y="302.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (772 samples, 3.90%)</title><rect x="919.8" y="275.0" width="45.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="922.8" y="286.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (772 samples, 3.90%)</title><rect x="919.8" y="259.0" width="45.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.8" y="270.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (627 samples, 3.16%)</title><rect x="919.8" y="243.0" width="37.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="922.8" y="254.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (627 samples, 3.16%)</title><rect x="919.8" y="227.0" width="37.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.8" y="238.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.convert (418 samples, 2.11%)</title><rect x="919.8" y="211.0" width="24.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.8" y="222.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.throwableProxyToString (418 samples, 2.11%)</title><rect x="919.8" y="195.0" width="24.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.8" y="206.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.recursiveAppend (299 samples, 1.51%)</title><rect x="919.8" y="179.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.8" y="190.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/pattern/ThrowableProxyConverter.subjoinSTEPArray (299 samples, 1.51%)</title><rect x="919.8" y="163.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.8" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.toString (299 samples, 1.51%)</title><rect x="919.8" y="147.0" width="17.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.8" y="158.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/StackTraceElementProxy.getSTEAsString (299 samples, 1.51%)</title><rect x="919.8" y="131.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.8" y="142.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.04%)</title><rect x="919.8" y="115.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="922.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.toString (190 samples, 0.96%)</title><rect x="920.2" y="115.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="923.2" y="126.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.15%)</title><rect x="920.2" y="99.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="923.2" y="110.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (9 samples, 0.05%)</title><rect x="922.0" y="99.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="925.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.09%)</title><rect x="922.5" y="99.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="925.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.07%)</title><rect x="923.6" y="99.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="926.6" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.07%)</title><rect x="923.6" y="83.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="926.6" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.07%)</title><rect x="923.6" y="67.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="926.6" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (67 samples, 0.34%)</title><rect x="924.4" y="99.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="927.4" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (67 samples, 0.34%)</title><rect x="924.4" y="83.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.4" y="94.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (67 samples, 0.34%)</title><rect x="924.4" y="67.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (67 samples, 0.34%)</title><rect x="924.4" y="51.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="927.4" y="62.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.33%)</title><rect x="924.4" y="35.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="927.4" y="46.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (52 samples, 0.26%)</title><rect x="928.4" y="99.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.26%)</title><rect x="928.4" y="83.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.07%)</title><rect x="928.4" y="67.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="931.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.20%)</title><rect x="929.2" y="67.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.2" y="78.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.20%)</title><rect x="929.2" y="51.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="932.2" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.07%)</title><rect x="931.5" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.5" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.07%)</title><rect x="931.5" y="99.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="934.5" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.07%)</title><rect x="931.5" y="83.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="934.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (36 samples, 0.18%)</title><rect x="932.3" y="115.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.3" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (36 samples, 0.18%)</title><rect x="932.3" y="99.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.3" y="110.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (36 samples, 0.18%)</title><rect x="932.3" y="83.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.18%)</title><rect x="932.3" y="67.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.3" y="78.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.18%)</title><rect x="932.3" y="51.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="935.3" y="62.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (52 samples, 0.26%)</title><rect x="934.5" y="115.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.26%)</title><rect x="934.5" y="99.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="937.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.05%)</title><rect x="934.5" y="83.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="937.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.21%)</title><rect x="935.1" y="83.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.1" y="94.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.21%)</title><rect x="935.1" y="67.0" width="2.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="938.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (69 samples, 0.35%)</title><rect x="937.7" y="179.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.7" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (69 samples, 0.35%)</title><rect x="937.7" y="163.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.7" y="174.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="937.7" y="147.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="940.7" y="158.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.32%)</title><rect x="938.1" y="147.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="941.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (48 samples, 0.24%)</title><rect x="941.8" y="179.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="944.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.24%)</title><rect x="941.8" y="163.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (48 samples, 0.24%)</title><rect x="941.8" y="147.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.8" y="158.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="941.8" y="131.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="944.8" y="142.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.21%)</title><rect x="942.2" y="131.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (93 samples, 0.47%)</title><rect x="944.8" y="211.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.8" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (93 samples, 0.47%)</title><rect x="944.8" y="195.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.8" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (93 samples, 0.47%)</title><rect x="944.8" y="179.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.47%)</title><rect x="944.8" y="163.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.8" y="174.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.08%)</title><rect x="944.8" y="147.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="947.8" y="158.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.39%)</title><rect x="945.8" y="147.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="948.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (113 samples, 0.57%)</title><rect x="950.4" y="211.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (113 samples, 0.57%)</title><rect x="950.4" y="195.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (112 samples, 0.57%)</title><rect x="950.4" y="179.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.4" y="190.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="950.4" y="163.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="953.4" y="174.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.52%)</title><rect x="950.9" y="163.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="953.9" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (145 samples, 0.73%)</title><rect x="957.1" y="243.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (145 samples, 0.73%)</title><rect x="957.1" y="227.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="960.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (145 samples, 0.73%)</title><rect x="957.1" y="211.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (145 samples, 0.73%)</title><rect x="957.1" y="195.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (145 samples, 0.73%)</title><rect x="957.1" y="179.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.1" y="190.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="957.1" y="163.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="960.1" y="174.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.70%)</title><rect x="957.5" y="163.0" width="8.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="960.5" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (32 samples, 0.16%)</title><rect x="965.7" y="355.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.7" y="366.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxy.&lt;init&gt; (31 samples, 0.16%)</title><rect x="965.8" y="339.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.8" y="350.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/ThrowableProxyUtil.steArrayToStepArray (13 samples, 0.07%)</title><rect x="965.8" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.8" y="334.0"></text>
</g>
<g>
<title>ch.qos.logback.classic.spi.StackTraceElementProxy (12 samples, 0.06%)</title><rect x="965.9" y="307.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="968.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.getStackTrace (18 samples, 0.09%)</title><rect x="966.6" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.6" y="334.0"></text>
</g>
<g>
<title>java/lang/Throwable.getOurStackTrace (17 samples, 0.09%)</title><rect x="966.6" y="307.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StackTraceElement.of (17 samples, 0.09%)</title><rect x="966.6" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="969.6" y="302.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (14 samples, 0.07%)</title><rect x="966.8" y="275.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="969.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (120 samples, 0.61%)</title><rect x="967.6" y="403.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (117 samples, 0.59%)</title><rect x="967.8" y="387.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (117 samples, 0.59%)</title><rect x="967.8" y="371.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="970.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.toString (15 samples, 0.08%)</title><rect x="967.8" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 0.06%)</title><rect x="967.9" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (11 samples, 0.06%)</title><rect x="967.9" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.9" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (11 samples, 0.06%)</title><rect x="967.9" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.06%)</title><rect x="967.9" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.9" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.05%)</title><rect x="967.9" y="275.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="970.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (20 samples, 0.10%)</title><rect x="968.9" y="355.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.9" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (20 samples, 0.10%)</title><rect x="968.9" y="339.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (20 samples, 0.10%)</title><rect x="968.9" y="323.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.10%)</title><rect x="968.9" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.9" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.05%)</title><rect x="968.9" y="291.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="971.9" y="302.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.05%)</title><rect x="969.5" y="291.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="972.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (15 samples, 0.08%)</title><rect x="970.1" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.1" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.08%)</title><rect x="970.1" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.07%)</title><rect x="970.1" y="323.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.1" y="334.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.06%)</title><rect x="970.3" y="307.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="973.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/RejectedExecutionException.&lt;init&gt; (32 samples, 0.16%)</title><rect x="971.0" y="355.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="974.0" y="366.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (32 samples, 0.16%)</title><rect x="971.0" y="339.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.0" y="350.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (32 samples, 0.16%)</title><rect x="971.0" y="323.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.0" y="334.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (32 samples, 0.16%)</title><rect x="971.0" y="307.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.0" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (32 samples, 0.16%)</title><rect x="971.0" y="291.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="974.0" y="302.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (32 samples, 0.16%)</title><rect x="971.0" y="275.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.0" y="286.0"></text>
</g>
<g>
<title>int[] (13 samples, 0.07%)</title><rect x="971.0" y="259.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="974.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.04%)</title><rect x="971.8" y="259.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="974.8" y="270.0"></text>
</g>
<g>
<title>short[] (5 samples, 0.03%)</title><rect x="972.6" y="259.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="975.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.toString (32 samples, 0.16%)</title><rect x="972.9" y="355.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Object.toString (10 samples, 0.05%)</title><rect x="972.9" y="339.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.04%)</title><rect x="973.0" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.04%)</title><rect x="973.0" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.0" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.04%)</title><rect x="973.0" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.04%)</title><rect x="973.0" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.0" y="286.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="973.0" y="259.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="976.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 0.06%)</title><rect x="973.7" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (11 samples, 0.06%)</title><rect x="973.7" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.7" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (11 samples, 0.06%)</title><rect x="973.7" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.06%)</title><rect x="973.7" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.7" y="302.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.05%)</title><rect x="973.7" y="275.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="976.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.04%)</title><rect x="974.3" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.04%)</title><rect x="974.3" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.04%)</title><rect x="974.3" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.3" y="318.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.04%)</title><rect x="974.3" y="291.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="977.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.sendErrorResponse (19 samples, 0.10%)</title><rect x="974.8" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="977.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (16 samples, 0.08%)</title><rect x="974.8" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (16 samples, 0.08%)</title><rect x="974.8" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.03%)</title><rect x="974.8" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="977.8" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.03%)</title><rect x="974.8" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.8" y="350.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="974.8" y="323.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="977.8" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.05%)</title><rect x="975.2" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="978.2" y="366.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (10 samples, 0.05%)</title><rect x="975.2" y="339.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="978.2" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (404 samples, 2.04%)</title><rect x="975.9" y="451.0" width="24.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="978.9" y="462.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (404 samples, 2.04%)</title><rect x="975.9" y="435.0" width="24.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="978.9" y="446.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (404 samples, 2.04%)</title><rect x="975.9" y="419.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="978.9" y="430.0">j..</text>
</g>
<g>
<title>java.lang.String (171 samples, 0.86%)</title><rect x="975.9" y="403.0" width="10.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="978.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (233 samples, 1.18%)</title><rect x="986.1" y="403.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.1" y="414.0"></text>
</g>
<g>
<title>byte[] (233 samples, 1.18%)</title><rect x="986.1" y="387.0" width="13.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="989.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,872 samples, 9.45%)</title><rect x="1000.0" y="483.0" width="111.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.0" y="494.0">one/nio/http/..</text>
</g>
<g>
<title>one.nio.http.Request (269 samples, 1.36%)</title><rect x="1000.0" y="467.0" width="16.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1003.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (580 samples, 2.93%)</title><rect x="1016.0" y="467.0" width="34.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1019.0" y="478.0">on..</text>
</g>
<g>
<title>java.lang.String[] (579 samples, 2.92%)</title><rect x="1016.0" y="451.0" width="34.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1019.0" y="462.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,023 samples, 5.16%)</title><rect x="1050.5" y="467.0" width="61.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.5" y="478.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,023 samples, 5.16%)</title><rect x="1050.5" y="451.0" width="61.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.5" y="462.0">one/ni..</text>
</g>
<g>
<title>char[] (517 samples, 2.61%)</title><rect x="1050.5" y="435.0" width="30.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1053.5" y="446.0">ch..</text>
</g>
<g>
<title>java.lang.String (188 samples, 0.95%)</title><rect x="1081.3" y="435.0" width="11.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1084.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (318 samples, 1.60%)</title><rect x="1092.5" y="435.0" width="19.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (318 samples, 1.60%)</title><rect x="1092.5" y="419.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (318 samples, 1.60%)</title><rect x="1092.5" y="403.0" width="19.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.5" y="414.0"></text>
</g>
<g>
<title>byte[] (318 samples, 1.60%)</title><rect x="1092.5" y="387.0" width="19.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1095.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,319 samples, 6.66%)</title><rect x="1111.5" y="483.0" width="78.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1114.5" y="494.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,319 samples, 6.66%)</title><rect x="1111.5" y="467.0" width="78.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1114.5" y="478.0">one/nio/u..</text>
</g>
<g>
<title>char[] (659 samples, 3.33%)</title><rect x="1111.5" y="451.0" width="39.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1114.5" y="462.0">cha..</text>
</g>
<g>
<title>java.lang.String (194 samples, 0.98%)</title><rect x="1150.7" y="451.0" width="11.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1153.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (466 samples, 2.35%)</title><rect x="1162.3" y="451.0" width="27.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1165.3" y="462.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (466 samples, 2.35%)</title><rect x="1162.3" y="435.0" width="27.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.3" y="446.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (466 samples, 2.35%)</title><rect x="1162.3" y="419.0" width="27.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1165.3" y="430.0">j..</text>
</g>
<g>
<title>byte[] (466 samples, 2.35%)</title><rect x="1162.3" y="403.0" width="27.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1165.3" y="414.0">b..</text>
</g>
</g>
</svg>
