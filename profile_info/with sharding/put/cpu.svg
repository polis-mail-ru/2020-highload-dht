<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="341"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="341"> </text>
<g id="frames">
<g>
<title>all (161 samples, 100.00%)</title><rect x="10.0" y="307.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="318.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (97 samples, 60.25%)</title><rect x="10.0" y="291.0" width="710.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (97 samples, 60.25%)</title><rect x="10.0" y="275.0" width="710.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="286.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (97 samples, 60.25%)</title><rect x="10.0" y="259.0" width="710.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="270.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 2.48%)</title><rect x="17.3" y="243.0" width="29.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.3" y="254.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 2.48%)</title><rect x="17.3" y="227.0" width="29.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.3" y="238.0">ja..</text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.62%)</title><rect x="17.3" y="211.0" width="7.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="20.3" y="222.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.62%)</title><rect x="24.7" y="211.0" width="7.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="27.7" y="222.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.62%)</title><rect x="32.0" y="211.0" width="7.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="35.0" y="222.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.62%)</title><rect x="39.3" y="211.0" width="7.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="42.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (42 samples, 26.09%)</title><rect x="46.6" y="243.0" width="307.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.6" y="254.0">java/util/concurrent/ThreadPoolExecutor.g..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (41 samples, 25.47%)</title><rect x="54.0" y="227.0" width="300.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.0" y="238.0">java/util/concurrent/ArrayBlockingQueue...</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (34 samples, 21.12%)</title><rect x="61.3" y="211.0" width="249.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.3" y="222.0">java/util/concurrent/locks/Abstra..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.62%)</title><rect x="68.6" y="195.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.62%)</title><rect x="68.6" y="179.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.62%)</title><rect x="68.6" y="163.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 1.86%)</title><rect x="76.0" y="195.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.0" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 1.86%)</title><rect x="76.0" y="179.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.0" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.62%)</title><rect x="83.3" y="163.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.62%)</title><rect x="83.3" y="147.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.62%)</title><rect x="83.3" y="131.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.3" y="142.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.62%)</title><rect x="83.3" y="115.0" width="7.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="86.3" y="126.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.62%)</title><rect x="83.3" y="99.0" width="7.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="86.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.62%)</title><rect x="90.6" y="163.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 1.24%)</title><rect x="98.0" y="195.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 1.24%)</title><rect x="98.0" y="179.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 16.77%)</title><rect x="112.6" y="195.0" width="197.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.6" y="206.0">java/util/concurrent/locks..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 16.15%)</title><rect x="119.9" y="179.0" width="190.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.9" y="190.0">jdk/internal/misc/Unsafe...</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.62%)</title><rect x="127.3" y="163.0" width="7.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="130.3" y="174.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.62%)</title><rect x="134.6" y="163.0" width="7.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="137.6" y="174.0"></text>
</g>
<g>
<title>Unsafe_Park (15 samples, 9.32%)</title><rect x="141.9" y="163.0" width="110.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="144.9" y="174.0">Unsafe_Park</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 1.24%)</title><rect x="141.9" y="147.0" width="14.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="144.9" y="158.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 1.24%)</title><rect x="156.6" y="147.0" width="14.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="159.6" y="158.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.62%)</title><rect x="156.6" y="131.0" width="7.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="159.6" y="142.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.62%)</title><rect x="156.6" y="115.0" width="7.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="159.6" y="126.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.62%)</title><rect x="163.9" y="131.0" width="7.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="166.9" y="142.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.62%)</title><rect x="171.2" y="147.0" width="7.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="174.2" y="158.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (8 samples, 4.97%)</title><rect x="178.6" y="147.0" width="58.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="181.6" y="158.0">__pthr..</text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.62%)</title><rect x="237.2" y="147.0" width="7.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="240.2" y="158.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.62%)</title><rect x="244.5" y="147.0" width="7.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="247.5" y="158.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 4.97%)</title><rect x="251.9" y="163.0" width="58.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="254.9" y="174.0">[unkno..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.62%)</title><rect x="251.9" y="147.0" width="7.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="254.9" y="158.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 3.11%)</title><rect x="259.2" y="147.0" width="36.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="262.2" y="158.0">__p..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.62%)</title><rect x="295.8" y="147.0" width="7.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="298.8" y="158.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.62%)</title><rect x="303.2" y="147.0" width="7.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="306.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.62%)</title><rect x="310.5" y="211.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.62%)</title><rect x="310.5" y="195.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.62%)</title><rect x="310.5" y="179.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.62%)</title><rect x="310.5" y="163.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.62%)</title><rect x="310.5" y="147.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.62%)</title><rect x="310.5" y="131.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.5" y="142.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.62%)</title><rect x="310.5" y="115.0" width="7.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="313.5" y="126.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.62%)</title><rect x="310.5" y="99.0" width="7.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="313.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 3.11%)</title><rect x="317.8" y="211.0" width="36.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.8" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 3.11%)</title><rect x="317.8" y="195.0" width="36.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.8" y="206.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 3.11%)</title><rect x="317.8" y="179.0" width="36.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.8" y="190.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 3.11%)</title><rect x="317.8" y="163.0" width="36.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.8" y="174.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 3.11%)</title><rect x="317.8" y="147.0" width="36.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.8" y="158.0">jdk..</text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 1.86%)</title><rect x="317.8" y="131.0" width="22.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="320.8" y="142.0">U..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.62%)</title><rect x="325.2" y="115.0" width="7.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="328.2" y="126.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.62%)</title><rect x="332.5" y="115.0" width="7.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="335.5" y="126.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 1.24%)</title><rect x="339.8" y="131.0" width="14.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="342.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.62%)</title><rect x="354.5" y="243.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService$$Lambda$66/78359530.run (49 samples, 30.43%)</title><rect x="361.8" y="243.0" width="359.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="364.8" y="254.0">ru/mail/polis/service/re1nex/AsyncTopologyService..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.lambda$put$2 (49 samples, 30.43%)</title><rect x="361.8" y="227.0" width="359.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="364.8" y="238.0">ru/mail/polis/service/re1nex/AsyncTopologyService..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.primaryFor (3 samples, 1.86%)</title><rect x="361.8" y="211.0" width="22.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.8" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/ConsistentHashingTopology.primaryFor (3 samples, 1.86%)</title><rect x="361.8" y="195.0" width="22.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.8" y="206.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (1 samples, 0.62%)</title><rect x="361.8" y="179.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.8" y="190.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.62%)</title><rect x="361.8" y="163.0" width="7.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="364.8" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (1 samples, 0.62%)</title><rect x="369.1" y="179.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.1" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.isEmpty (1 samples, 0.62%)</title><rect x="369.1" y="163.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.1" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (1 samples, 0.62%)</title><rect x="369.1" y="147.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.firstKey (1 samples, 0.62%)</title><rect x="376.5" y="179.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.5" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.62%)</title><rect x="376.5" y="163.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/NewDAO.upsert (28 samples, 17.39%)</title><rect x="383.8" y="211.0" width="205.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.8" y="222.0">ru/mail/polis/dao/re1nex/Ne..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 1.24%)</title><rect x="383.8" y="195.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 1.24%)</title><rect x="383.8" y="179.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 1.24%)</title><rect x="383.8" y="163.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.8" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 1.24%)</title><rect x="383.8" y="147.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.8" y="158.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (1 samples, 0.62%)</title><rect x="383.8" y="131.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.62%)</title><rect x="391.1" y="131.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/re1nex/MemTable.upsert (26 samples, 16.15%)</title><rect x="398.4" y="195.0" width="190.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.4" y="206.0">ru/mail/polis/dao/re1nex/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.containsKey (16 samples, 9.94%)</title><rect x="398.4" y="179.0" width="117.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.4" y="190.0">java/util/conc..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.62%)</title><rect x="398.4" y="163.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.4" y="174.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.62%)</title><rect x="398.4" y="147.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.62%)</title><rect x="398.4" y="131.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.4" y="142.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.62%)</title><rect x="398.4" y="115.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doGet (15 samples, 9.32%)</title><rect x="405.8" y="163.0" width="109.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.8" y="174.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 8.07%)</title><rect x="420.4" y="147.0" width="95.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="423.4" y="158.0">java/util/c..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 8.07%)</title><rect x="420.4" y="131.0" width="95.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.4" y="142.0">java/nio/By..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 3.11%)</title><rect x="479.1" y="115.0" width="36.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.1" y="126.0">jav..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 3.11%)</title><rect x="479.1" y="99.0" width="36.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.1" y="110.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 1.24%)</title><rect x="493.7" y="83.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.7" y="94.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 1.24%)</title><rect x="493.7" y="67.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.7" y="78.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.62%)</title><rect x="508.4" y="83.0" width="7.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="511.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 6.21%)</title><rect x="515.7" y="179.0" width="73.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.7" y="190.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doGet (1 samples, 0.62%)</title><rect x="515.7" y="163.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (9 samples, 5.59%)</title><rect x="523.0" y="163.0" width="66.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.0" y="174.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 3.73%)</title><rect x="545.0" y="147.0" width="44.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.0" y="158.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 3.73%)</title><rect x="545.0" y="131.0" width="44.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.0" y="142.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 2.48%)</title><rect x="559.7" y="115.0" width="29.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.7" y="126.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 2.48%)</title><rect x="559.7" y="99.0" width="29.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.7" y="110.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.sendResponse (18 samples, 11.18%)</title><rect x="589.0" y="211.0" width="131.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.0" y="222.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (18 samples, 11.18%)</title><rect x="589.0" y="195.0" width="131.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.0" y="206.0">one/nio/http/Htt..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 1.24%)</title><rect x="589.0" y="179.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 1.24%)</title><rect x="589.0" y="163.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 1.24%)</title><rect x="589.0" y="147.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.0" y="158.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.62%)</title><rect x="596.3" y="131.0" width="7.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="599.3" y="142.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.62%)</title><rect x="596.3" y="115.0" width="7.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="599.3" y="126.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.62%)</title><rect x="596.3" y="99.0" width="7.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="599.3" y="110.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.62%)</title><rect x="603.7" y="179.0" width="7.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="606.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 7.45%)</title><rect x="611.0" y="179.0" width="87.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.0" y="190.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 3.11%)</title><rect x="611.0" y="163.0" width="36.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.0" y="174.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.62%)</title><rect x="640.3" y="147.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.62%)</title><rect x="640.3" y="131.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.3" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.62%)</title><rect x="640.3" y="115.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.3" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.62%)</title><rect x="640.3" y="99.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.3" y="110.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.62%)</title><rect x="640.3" y="83.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.3" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 4.35%)</title><rect x="647.6" y="163.0" width="51.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.6" y="174.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 4.35%)</title><rect x="647.6" y="147.0" width="51.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.6" y="158.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 4.35%)</title><rect x="647.6" y="131.0" width="51.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.6" y="142.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 4.35%)</title><rect x="647.6" y="115.0" width="51.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.6" y="126.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 1.86%)</title><rect x="655.0" y="99.0" width="22.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="658.0" y="110.0">J..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.62%)</title><rect x="655.0" y="83.0" width="7.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="658.0" y="94.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.62%)</title><rect x="662.3" y="83.0" width="7.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="665.3" y="94.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.62%)</title><rect x="662.3" y="67.0" width="7.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="665.3" y="78.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.62%)</title><rect x="662.3" y="51.0" width="7.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="665.3" y="62.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.62%)</title><rect x="669.6" y="83.0" width="7.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="672.6" y="94.0"></text>
</g>
<g>
<title>__send (3 samples, 1.86%)</title><rect x="677.0" y="99.0" width="21.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="680.0" y="110.0">_..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 1.86%)</title><rect x="698.9" y="179.0" width="22.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.9" y="190.0">o..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (64 samples, 39.75%)</title><rect x="720.9" y="291.0" width="469.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.9" y="302.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (1 samples, 0.62%)</title><rect x="764.9" y="275.0" width="7.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="767.9" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.62%)</title><rect x="764.9" y="259.0" width="7.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="767.9" y="270.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.62%)</title><rect x="764.9" y="243.0" width="7.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="767.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 1.24%)</title><rect x="772.2" y="275.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.2" y="286.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.62%)</title><rect x="786.9" y="275.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.9" y="286.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 13.04%)</title><rect x="794.2" y="275.0" width="153.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.2" y="286.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (19 samples, 11.80%)</title><rect x="808.9" y="259.0" width="139.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.9" y="270.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 2.48%)</title><rect x="808.9" y="243.0" width="29.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="811.9" y="254.0">/u..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 1.86%)</title><rect x="838.2" y="243.0" width="22.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="841.2" y="254.0">J..</text>
</g>
<g>
<title>clock_gettime (9 samples, 5.59%)</title><rect x="860.2" y="243.0" width="65.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="863.2" y="254.0">clock_g..</text>
</g>
<g>
<title>clock_gettime (2 samples, 1.24%)</title><rect x="911.5" y="227.0" width="14.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="914.5" y="238.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 1.24%)</title><rect x="911.5" y="211.0" width="14.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="914.5" y="222.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 1.86%)</title><rect x="926.1" y="243.0" width="22.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="929.1" y="254.0">e..</text>
</g>
<g>
<title>one/nio/net/Session.process (33 samples, 20.50%)</title><rect x="948.1" y="275.0" width="241.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.1" y="286.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.62%)</title><rect x="962.8" y="259.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (30 samples, 18.63%)</title><rect x="970.1" y="259.0" width="219.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.1" y="270.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 13.04%)</title><rect x="970.1" y="243.0" width="153.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.1" y="254.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (8 samples, 4.97%)</title><rect x="970.1" y="227.0" width="58.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.1" y="238.0">one/ni..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (1 samples, 0.62%)</title><rect x="977.5" y="211.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6 samples, 3.73%)</title><rect x="984.8" y="211.0" width="44.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.8" y="222.0">one/..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (5 samples, 3.11%)</title><rect x="984.8" y="195.0" width="36.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="987.8" y="206.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 1.86%)</title><rect x="984.8" y="179.0" width="22.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.8" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 1.86%)</title><rect x="984.8" y="163.0" width="22.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="987.8" y="174.0">o..</text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.62%)</title><rect x="992.1" y="147.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="995.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.62%)</title><rect x="992.1" y="131.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="995.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.62%)</title><rect x="999.4" y="147.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.put (2 samples, 1.24%)</title><rect x="1006.8" y="179.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/re1nex/AsyncTopologyService.executeTask (2 samples, 1.24%)</title><rect x="1006.8" y="163.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 1.24%)</title><rect x="1006.8" y="147.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 1.24%)</title><rect x="1006.8" y="131.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 1.24%)</title><rect x="1006.8" y="115.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1009.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 1.24%)</title><rect x="1006.8" y="99.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 1.24%)</title><rect x="1006.8" y="83.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 1.24%)</title><rect x="1006.8" y="67.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 1.24%)</title><rect x="1006.8" y="51.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1009.8" y="62.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 1.24%)</title><rect x="1006.8" y="35.0" width="14.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1009.8" y="46.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.62%)</title><rect x="1021.4" y="195.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1024.4" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.62%)</title><rect x="1021.4" y="179.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.4" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.62%)</title><rect x="1021.4" y="163.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.62%)</title><rect x="1021.4" y="147.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.62%)</title><rect x="1021.4" y="131.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1024.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 3.11%)</title><rect x="1028.8" y="227.0" width="36.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.8" y="238.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 1.24%)</title><rect x="1028.8" y="211.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 1.24%)</title><rect x="1028.8" y="195.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 1.24%)</title><rect x="1028.8" y="179.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1031.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 1.24%)</title><rect x="1028.8" y="163.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1031.8" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 1.86%)</title><rect x="1043.4" y="211.0" width="22.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.4" y="222.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 1.86%)</title><rect x="1043.4" y="195.0" width="22.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.4" y="206.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 1.86%)</title><rect x="1065.4" y="227.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1068.4" y="238.0">o..</text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 1.86%)</title><rect x="1065.4" y="211.0" width="22.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1068.4" y="222.0">j..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.62%)</title><rect x="1080.1" y="195.0" width="7.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1083.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.62%)</title><rect x="1087.4" y="227.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.4" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 2.48%)</title><rect x="1094.7" y="227.0" width="29.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.7" y="238.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.24%)</title><rect x="1109.4" y="211.0" width="14.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.4" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 5.59%)</title><rect x="1124.0" y="243.0" width="66.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.0" y="254.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 5.59%)</title><rect x="1124.0" y="227.0" width="66.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.0" y="238.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 2.48%)</title><rect x="1131.4" y="211.0" width="29.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1134.4" y="222.0">Ja..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.62%)</title><rect x="1138.7" y="195.0" width="7.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1141.7" y="206.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 1.24%)</title><rect x="1146.0" y="195.0" width="14.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1149.0" y="206.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.62%)</title><rect x="1146.0" y="179.0" width="7.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.0" y="190.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.62%)</title><rect x="1153.4" y="179.0" width="7.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1156.4" y="190.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.62%)</title><rect x="1160.7" y="211.0" width="7.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1163.7" y="222.0"></text>
</g>
<g>
<title>recv (3 samples, 1.86%)</title><rect x="1168.0" y="211.0" width="22.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1171.0" y="222.0">r..</text>
</g>
</g>
</svg>
