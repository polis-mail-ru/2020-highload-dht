<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (663 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.15%)</title><rect x="10.0" y="931.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.15%)</title><rect x="10.0" y="915.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.15%)</title><rect x="10.0" y="899.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.15%)</title><rect x="10.0" y="883.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (1 samples, 0.15%)</title><rect x="10.0" y="867.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (608 samples, 91.70%)</title><rect x="11.8" y="931.0" width="1082.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.8" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 2.71%)</title><rect x="13.6" y="915.0" width="32.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.6" y="926.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (14 samples, 2.11%)</title><rect x="20.7" y="899.0" width="24.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.7" y="910.0">o..</text>
</g>
<g>
<title>clock_gettime (2 samples, 0.30%)</title><rect x="20.7" y="883.0" width="3.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="23.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (12 samples, 1.81%)</title><rect x="24.2" y="883.0" width="21.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="27.2" y="894.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 1.81%)</title><rect x="24.2" y="867.0" width="21.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="27.2" y="878.0">e..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.15%)</title><rect x="24.2" y="851.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.66%)</title><rect x="26.0" y="851.0" width="19.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (8 samples, 1.21%)</title><rect x="31.4" y="835.0" width="14.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="34.4" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (8 samples, 1.21%)</title><rect x="31.4" y="819.0" width="14.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="34.4" y="830.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.15%)</title><rect x="31.4" y="803.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.4" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.15%)</title><rect x="31.4" y="787.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="34.4" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.15%)</title><rect x="31.4" y="771.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="34.4" y="782.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 1.06%)</title><rect x="33.1" y="803.0" width="12.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.75%)</title><rect x="33.1" y="787.0" width="8.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="36.1" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.60%)</title><rect x="33.1" y="771.0" width="7.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="36.1" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.60%)</title><rect x="33.1" y="755.0" width="7.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.1" y="766.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.45%)</title><rect x="33.1" y="739.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.1" y="750.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.30%)</title><rect x="34.9" y="723.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="37.9" y="734.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.15%)</title><rect x="38.5" y="739.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="41.5" y="750.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.15%)</title><rect x="40.3" y="771.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="43.3" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.15%)</title><rect x="42.0" y="787.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.15%)</title><rect x="43.8" y="787.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="46.8" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.15%)</title><rect x="43.8" y="771.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="46.8" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.15%)</title><rect x="43.8" y="755.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="46.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (589 samples, 88.84%)</title><rect x="45.6" y="915.0" width="1048.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.6" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (585 samples, 88.24%)</title><rect x="52.7" y="899.0" width="1041.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.7" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (494 samples, 74.51%)</title><rect x="54.5" y="883.0" width="879.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.5" y="894.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.30%)</title><rect x="58.1" y="867.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="61.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (475 samples, 71.64%)</title><rect x="61.6" y="867.0" width="845.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.6" y="878.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (475 samples, 71.64%)</title><rect x="61.6" y="851.0" width="845.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.6" y="862.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (471 samples, 71.04%)</title><rect x="61.6" y="835.0" width="838.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.6" y="846.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (170 samples, 25.64%)</title><rect x="65.2" y="819.0" width="302.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.2" y="830.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.30%)</title><rect x="65.2" y="803.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.30%)</title><rect x="65.2" y="787.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.30%)</title><rect x="65.2" y="771.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (168 samples, 25.34%)</title><rect x="68.7" y="803.0" width="299.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.7" y="814.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.90%)</title><rect x="68.7" y="787.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.60%)</title><rect x="72.3" y="771.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.60%)</title><rect x="72.3" y="755.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.60%)</title><rect x="72.3" y="739.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (162 samples, 24.43%)</title><rect x="79.4" y="787.0" width="288.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.4" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (162 samples, 24.43%)</title><rect x="79.4" y="771.0" width="288.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.4" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (162 samples, 24.43%)</title><rect x="79.4" y="755.0" width="288.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.4" y="766.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.15%)</title><rect x="79.4" y="739.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (161 samples, 24.28%)</title><rect x="81.2" y="739.0" width="286.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.2" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.30%)</title><rect x="83.0" y="723.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="86.0" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.15%)</title><rect x="84.8" y="707.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="87.8" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.15%)</title><rect x="84.8" y="691.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="87.8" y="702.0"></text>
</g>
<g>
<title>__send (158 samples, 23.83%)</title><rect x="86.5" y="723.0" width="281.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="89.5" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (142 samples, 21.42%)</title><rect x="115.0" y="707.0" width="252.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="118.0" y="718.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (142 samples, 21.42%)</title><rect x="115.0" y="691.0" width="252.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="118.0" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (138 samples, 20.81%)</title><rect x="122.1" y="675.0" width="245.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="125.1" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (137 samples, 20.66%)</title><rect x="122.1" y="659.0" width="243.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="125.1" y="670.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.15%)</title><rect x="122.1" y="643.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="125.1" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (133 samples, 20.06%)</title><rect x="123.9" y="643.0" width="236.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="126.9" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.15%)</title><rect x="123.9" y="627.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.9" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (132 samples, 19.91%)</title><rect x="125.7" y="627.0" width="234.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="128.7" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (132 samples, 19.91%)</title><rect x="125.7" y="611.0" width="234.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="128.7" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.15%)</title><rect x="125.7" y="595.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="128.7" y="606.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.15%)</title><rect x="127.5" y="595.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="130.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (130 samples, 19.61%)</title><rect x="129.2" y="595.0" width="231.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="132.2" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.15%)</title><rect x="136.4" y="579.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="139.4" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.15%)</title><rect x="136.4" y="563.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="139.4" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.45%)</title><rect x="138.1" y="579.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="141.1" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.15%)</title><rect x="139.9" y="563.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="142.9" y="574.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.15%)</title><rect x="141.7" y="563.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="144.7" y="574.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.30%)</title><rect x="143.5" y="579.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.5" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.30%)</title><rect x="143.5" y="563.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.5" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.75%)</title><rect x="147.0" y="579.0" width="8.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="150.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.75%)</title><rect x="147.0" y="563.0" width="8.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="150.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.30%)</title><rect x="147.0" y="547.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="150.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.30%)</title><rect x="147.0" y="531.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="150.0" y="542.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.45%)</title><rect x="150.6" y="547.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="153.6" y="558.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.45%)</title><rect x="150.6" y="531.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="153.6" y="542.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.30%)</title><rect x="155.9" y="579.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="158.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (113 samples, 17.04%)</title><rect x="159.5" y="579.0" width="201.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="162.5" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (113 samples, 17.04%)</title><rect x="159.5" y="563.0" width="201.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.5" y="574.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (113 samples, 17.04%)</title><rect x="159.5" y="547.0" width="201.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.5" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (106 samples, 15.99%)</title><rect x="161.3" y="531.0" width="188.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="164.3" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (96 samples, 14.48%)</title><rect x="170.2" y="515.0" width="170.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="173.2" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (96 samples, 14.48%)</title><rect x="170.2" y="499.0" width="170.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="173.2" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.15%)</title><rect x="177.3" y="483.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="180.3" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.15%)</title><rect x="177.3" y="467.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="180.3" y="478.0"></text>
</g>
<g>
<title>ip_local_out (90 samples, 13.57%)</title><rect x="179.1" y="483.0" width="160.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="182.1" y="494.0">ip_local_out</text>
</g>
<g>
<title>ip_output (90 samples, 13.57%)</title><rect x="179.1" y="467.0" width="160.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="182.1" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (88 samples, 13.27%)</title><rect x="182.6" y="451.0" width="156.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.6" y="462.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (88 samples, 13.27%)</title><rect x="182.6" y="435.0" width="156.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.6" y="446.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (88 samples, 13.27%)</title><rect x="182.6" y="419.0" width="156.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="185.6" y="430.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (80 samples, 12.07%)</title><rect x="188.0" y="403.0" width="142.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.0" y="414.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (79 samples, 11.92%)</title><rect x="189.8" y="387.0" width="140.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="192.8" y="398.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (79 samples, 11.92%)</title><rect x="189.8" y="371.0" width="140.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.8" y="382.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (79 samples, 11.92%)</title><rect x="189.8" y="355.0" width="140.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="192.8" y="366.0">__softirqentry_tex..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.15%)</title><rect x="195.1" y="339.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="198.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (75 samples, 11.31%)</title><rect x="196.9" y="339.0" width="133.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.9" y="350.0">net_rx_action</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.15%)</title><rect x="198.7" y="323.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="201.7" y="334.0"></text>
</g>
<g>
<title>process_backlog (73 samples, 11.01%)</title><rect x="200.4" y="323.0" width="130.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="203.4" y="334.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (72 samples, 10.86%)</title><rect x="202.2" y="307.0" width="128.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.2" y="318.0">__netif_receive_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (70 samples, 10.56%)</title><rect x="202.2" y="291.0" width="124.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="205.2" y="302.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.30%)</title><rect x="202.2" y="275.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="205.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (67 samples, 10.11%)</title><rect x="205.8" y="275.0" width="119.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="208.8" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.15%)</title><rect x="205.8" y="259.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="208.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.15%)</title><rect x="207.6" y="259.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="210.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (65 samples, 9.80%)</title><rect x="209.3" y="259.0" width="115.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="212.3" y="270.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (64 samples, 9.65%)</title><rect x="209.3" y="243.0" width="113.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="212.3" y="254.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (64 samples, 9.65%)</title><rect x="209.3" y="227.0" width="113.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="212.3" y="238.0">ip_local_deliv..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (64 samples, 9.65%)</title><rect x="209.3" y="211.0" width="113.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="212.3" y="222.0">ip_protocol_de..</text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.15%)</title><rect x="211.1" y="195.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="214.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (62 samples, 9.35%)</title><rect x="212.9" y="195.0" width="110.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="215.9" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>tcp_v4_do_rcv (61 samples, 9.20%)</title><rect x="212.9" y="179.0" width="108.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.9" y="190.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.15%)</title><rect x="212.9" y="163.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="215.9" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (60 samples, 9.05%)</title><rect x="214.7" y="163.0" width="106.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="217.7" y="174.0">tcp_rcv_estab..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.30%)</title><rect x="214.7" y="147.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="217.7" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.15%)</title><rect x="216.5" y="131.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.5" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.15%)</title><rect x="218.2" y="147.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 2.41%)</title><rect x="220.0" y="147.0" width="28.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.0" y="158.0">tc..</text>
</g>
<g>
<title>rb_first (1 samples, 0.15%)</title><rect x="223.6" y="131.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="226.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 1.36%)</title><rect x="225.4" y="131.0" width="16.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="228.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 1.06%)</title><rect x="227.1" y="115.0" width="12.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="230.1" y="126.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 1.06%)</title><rect x="227.1" y="99.0" width="12.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="230.1" y="110.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 1.06%)</title><rect x="227.1" y="83.0" width="12.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="230.1" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.45%)</title><rect x="234.3" y="67.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="237.3" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.45%)</title><rect x="234.3" y="51.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="237.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.45%)</title><rect x="234.3" y="35.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="237.3" y="46.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.15%)</title><rect x="239.6" y="115.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="242.6" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.15%)</title><rect x="241.4" y="131.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="244.4" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.45%)</title><rect x="243.2" y="131.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="246.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (40 samples, 6.03%)</title><rect x="248.5" y="147.0" width="71.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.5" y="158.0">tcp_data..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.15%)</title><rect x="248.5" y="131.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="251.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (39 samples, 5.88%)</title><rect x="250.3" y="131.0" width="69.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="253.3" y="142.0">sock_de..</text>
</g>
<g>
<title>__wake_up_sync_key (38 samples, 5.73%)</title><rect x="252.1" y="115.0" width="67.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="255.1" y="126.0">__wake_..</text>
</g>
<g>
<title>__wake_up_common_lock (38 samples, 5.73%)</title><rect x="252.1" y="99.0" width="67.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="255.1" y="110.0">__wake_..</text>
</g>
<g>
<title>__lock_text_start (38 samples, 5.73%)</title><rect x="252.1" y="83.0" width="67.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="255.1" y="94.0">__lock_..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.15%)</title><rect x="319.7" y="147.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="322.7" y="158.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.15%)</title><rect x="319.7" y="131.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="322.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.15%)</title><rect x="321.5" y="179.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="324.5" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.15%)</title><rect x="323.2" y="243.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="326.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.15%)</title><rect x="325.0" y="275.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.30%)</title><rect x="326.8" y="291.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="329.8" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.75%)</title><rect x="330.4" y="403.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="333.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.75%)</title><rect x="330.4" y="387.0" width="8.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="333.4" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.45%)</title><rect x="333.9" y="371.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="336.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.15%)</title><rect x="333.9" y="355.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="336.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.15%)</title><rect x="333.9" y="339.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="336.9" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.15%)</title><rect x="333.9" y="323.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="336.9" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.15%)</title><rect x="333.9" y="307.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.9" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.30%)</title><rect x="335.7" y="355.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="338.7" y="366.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.15%)</title><rect x="339.3" y="483.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="342.3" y="494.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.60%)</title><rect x="341.0" y="515.0" width="7.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="344.0" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.30%)</title><rect x="342.8" y="499.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="345.8" y="510.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.15%)</title><rect x="346.4" y="499.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="349.4" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.15%)</title><rect x="346.4" y="483.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="349.4" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.15%)</title><rect x="348.2" y="515.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="351.2" y="526.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.15%)</title><rect x="349.9" y="531.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="352.9" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.30%)</title><rect x="351.7" y="531.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="354.7" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.30%)</title><rect x="355.3" y="531.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="358.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.15%)</title><rect x="357.1" y="515.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.15%)</title><rect x="357.1" y="499.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="360.1" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.15%)</title><rect x="357.1" y="483.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="360.1" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.15%)</title><rect x="357.1" y="467.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.1" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.15%)</title><rect x="358.8" y="531.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="361.8" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.45%)</title><rect x="360.6" y="643.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="363.6" y="654.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.45%)</title><rect x="360.6" y="627.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="363.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.45%)</title><rect x="360.6" y="611.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="363.6" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.45%)</title><rect x="360.6" y="595.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="363.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="366.0" y="659.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="369.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.60%)</title><rect x="367.7" y="819.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.15%)</title><rect x="369.5" y="803.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.15%)</title><rect x="369.5" y="787.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.15%)</title><rect x="369.5" y="771.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.30%)</title><rect x="371.3" y="803.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.30%)</title><rect x="371.3" y="787.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.30%)</title><rect x="371.3" y="771.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.30%)</title><rect x="371.3" y="755.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakirov/MyHttpServer.entity (295 samples, 44.49%)</title><rect x="374.9" y="819.0" width="525.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.9" y="830.0">ru/mail/polis/service/shakirov/MyHttpServer.entity</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.60%)</title><rect x="374.9" y="803.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.60%)</title><rect x="374.9" y="787.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.9" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.60%)</title><rect x="374.9" y="771.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.60%)</title><rect x="374.9" y="755.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.9" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.60%)</title><rect x="374.9" y="739.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.30%)</title><rect x="374.9" y="723.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.30%)</title><rect x="374.9" y="707.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.30%)</title><rect x="378.4" y="723.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="381.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.30%)</title><rect x="378.4" y="707.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.4" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.15%)</title><rect x="378.4" y="691.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.15%)</title><rect x="380.2" y="691.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/LsmDao.upsert (291 samples, 43.89%)</title><rect x="382.0" y="803.0" width="517.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.0" y="814.0">ru/mail/polis/dao/LsmDao.upsert</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.30%)</title><rect x="382.0" y="787.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.0" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.30%)</title><rect x="382.0" y="771.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.30%)</title><rect x="382.0" y="755.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.30%)</title><rect x="382.0" y="739.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.0" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.30%)</title><rect x="382.0" y="723.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.30%)</title><rect x="382.0" y="707.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.30%)</title><rect x="382.0" y="691.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/LsmDao.flush (260 samples, 39.22%)</title><rect x="385.5" y="787.0" width="462.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.5" y="798.0">ru/mail/polis/dao/LsmDao.flush</text>
</g>
<g>
<title>ru/mail/polis/dao/SSTable.serialize (260 samples, 39.22%)</title><rect x="385.5" y="771.0" width="462.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.5" y="782.0">ru/mail/polis/dao/SSTable.serialize</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.position (12 samples, 1.81%)</title><rect x="390.9" y="755.0" width="21.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.9" y="766.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.seek (12 samples, 1.81%)</title><rect x="390.9" y="739.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.9" y="750.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.seek0 (12 samples, 1.81%)</title><rect x="390.9" y="723.0" width="21.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.9" y="734.0">s..</text>
</g>
<g>
<title>__libc_lseek (11 samples, 1.66%)</title><rect x="390.9" y="707.0" width="19.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="393.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.75%)</title><rect x="401.6" y="691.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="404.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.75%)</title><rect x="401.6" y="675.0" width="8.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="404.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_lseek (3 samples, 0.45%)</title><rect x="405.1" y="659.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="408.1" y="670.0"></text>
</g>
<g>
<title>ksys_lseek (3 samples, 0.45%)</title><rect x="405.1" y="643.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="408.1" y="654.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.30%)</title><rect x="406.9" y="627.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="409.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.15%)</title><rect x="408.7" y="611.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="411.7" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.15%)</title><rect x="408.7" y="595.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="411.7" y="606.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.15%)</title><rect x="410.5" y="707.0" width="1.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="413.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (245 samples, 36.95%)</title><rect x="412.2" y="755.0" width="436.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.2" y="766.0">sun/nio/ch/FileChannelImpl.write</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.75%)</title><rect x="414.0" y="739.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.0" y="750.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.75%)</title><rect x="414.0" y="723.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.75%)</title><rect x="414.0" y="707.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (232 samples, 34.99%)</title><rect x="422.9" y="739.0" width="412.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.9" y="750.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (13 samples, 1.96%)</title><rect x="422.9" y="723.0" width="23.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.9" y="734.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (13 samples, 1.96%)</title><rect x="422.9" y="707.0" width="23.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="425.9" y="718.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.put (13 samples, 1.96%)</title><rect x="422.9" y="691.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="425.9" y="702.0">j..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (219 samples, 33.03%)</title><rect x="446.0" y="723.0" width="389.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.0" y="734.0">sun/nio/ch/IOUtil.writeFromNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (219 samples, 33.03%)</title><rect x="446.0" y="707.0" width="389.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.0" y="718.0">sun/nio/ch/FileDispatcherImpl.write</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (219 samples, 33.03%)</title><rect x="446.0" y="691.0" width="389.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.0" y="702.0">sun/nio/ch/FileDispatcherImpl.write0</text>
</g>
<g>
<title>__libc_write (213 samples, 32.13%)</title><rect x="449.6" y="675.0" width="379.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="452.6" y="686.0">__libc_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (164 samples, 24.74%)</title><rect x="536.8" y="659.0" width="291.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="539.8" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.15%)</title><rect x="536.8" y="643.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="539.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (163 samples, 24.59%)</title><rect x="538.6" y="643.0" width="290.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="541.6" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (151 samples, 22.78%)</title><rect x="560.0" y="627.0" width="268.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.0" y="638.0">__x64_sys_write</text>
</g>
<g>
<title>ksys_write (151 samples, 22.78%)</title><rect x="560.0" y="611.0" width="268.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="563.0" y="622.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.45%)</title><rect x="560.0" y="595.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="563.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.30%)</title><rect x="560.0" y="579.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="563.0" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.30%)</title><rect x="560.0" y="563.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="563.0" y="574.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.15%)</title><rect x="563.5" y="579.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="566.5" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.15%)</title><rect x="565.3" y="595.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="568.3" y="606.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.15%)</title><rect x="567.1" y="595.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="570.1" y="606.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.30%)</title><rect x="568.9" y="595.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="571.9" y="606.0"></text>
</g>
<g>
<title>vfs_write (144 samples, 21.72%)</title><rect x="572.4" y="595.0" width="256.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="575.4" y="606.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (136 samples, 20.51%)</title><rect x="577.8" y="579.0" width="242.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.8" y="590.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (136 samples, 20.51%)</title><rect x="577.8" y="563.0" width="242.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="580.8" y="574.0">new_sync_write</text>
</g>
<g>
<title>ext4_file_write_iter (134 samples, 20.21%)</title><rect x="581.3" y="547.0" width="238.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="584.3" y="558.0">ext4_file_write_iter</text>
</g>
<g>
<title>__generic_file_write_iter (128 samples, 19.31%)</title><rect x="584.9" y="531.0" width="227.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="587.9" y="542.0">__generic_file_write_iter</text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.15%)</title><rect x="584.9" y="515.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="587.9" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.15%)</title><rect x="586.7" y="515.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="589.7" y="526.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.15%)</title><rect x="588.4" y="515.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="591.4" y="526.0"></text>
</g>
<g>
<title>generic_perform_write (124 samples, 18.70%)</title><rect x="590.2" y="515.0" width="220.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="593.2" y="526.0">generic_perform_write</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.15%)</title><rect x="602.7" y="499.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="605.7" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_begin (22 samples, 3.32%)</title><rect x="604.4" y="499.0" width="39.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="607.4" y="510.0">ext..</text>
</g>
<g>
<title>__ext4_journal_start_sb (17 samples, 2.56%)</title><rect x="606.2" y="483.0" width="30.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.2" y="494.0">__..</text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.15%)</title><rect x="606.2" y="467.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.2" y="478.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.15%)</title><rect x="606.2" y="451.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.2" y="462.0"></text>
</g>
<g>
<title>jbd2__journal_start (16 samples, 2.41%)</title><rect x="608.0" y="467.0" width="28.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="611.0" y="478.0">jb..</text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.15%)</title><rect x="609.8" y="451.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="612.8" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.60%)</title><rect x="611.6" y="451.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="614.6" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.30%)</title><rect x="615.1" y="435.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="618.1" y="446.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.15%)</title><rect x="618.7" y="451.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="621.7" y="462.0"></text>
</g>
<g>
<title>start_this_handle (9 samples, 1.36%)</title><rect x="620.5" y="451.0" width="16.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="623.5" y="462.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.15%)</title><rect x="634.7" y="435.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="637.7" y="446.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.45%)</title><rect x="636.5" y="483.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="639.5" y="494.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.30%)</title><rect x="636.5" y="467.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="639.5" y="478.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.15%)</title><rect x="638.3" y="451.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="641.3" y="462.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.15%)</title><rect x="640.0" y="467.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="643.0" y="478.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.15%)</title><rect x="641.8" y="483.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="644.8" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (76 samples, 11.46%)</title><rect x="643.6" y="499.0" width="135.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.6" y="510.0">ext4_da_write_end</text>
</g>
<g>
<title>__ext4_journal_stop (8 samples, 1.21%)</title><rect x="645.4" y="483.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="648.4" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (8 samples, 1.21%)</title><rect x="645.4" y="467.0" width="14.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="648.4" y="478.0"></text>
</g>
<g>
<title>__wake_up (4 samples, 0.60%)</title><rect x="648.9" y="451.0" width="7.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="651.9" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.30%)</title><rect x="648.9" y="435.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="651.9" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.30%)</title><rect x="652.5" y="435.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="655.5" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.30%)</title><rect x="652.5" y="419.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="655.5" y="430.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.30%)</title><rect x="656.1" y="451.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="659.1" y="462.0"></text>
</g>
<g>
<title>generic_write_end (66 samples, 9.95%)</title><rect x="659.6" y="483.0" width="117.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="662.6" y="494.0">generic_write_..</text>
</g>
<g>
<title>__mark_inode_dirty (60 samples, 9.05%)</title><rect x="661.4" y="467.0" width="106.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="664.4" y="478.0">__mark_inode_..</text>
</g>
<g>
<title>ext4_dirty_inode (60 samples, 9.05%)</title><rect x="661.4" y="451.0" width="106.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="664.4" y="462.0">ext4_dirty_in..</text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.45%)</title><rect x="661.4" y="435.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="664.4" y="446.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.15%)</title><rect x="663.2" y="419.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="666.2" y="430.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.15%)</title><rect x="665.0" y="419.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="668.0" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.15%)</title><rect x="666.7" y="435.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="669.7" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.15%)</title><rect x="666.7" y="419.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="669.7" y="430.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.15%)</title><rect x="668.5" y="435.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="671.5" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (55 samples, 8.30%)</title><rect x="670.3" y="435.0" width="97.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="673.3" y="446.0">ext4_mark_i..</text>
</g>
<g>
<title>ext4_mark_iloc_dirty (38 samples, 5.73%)</title><rect x="670.3" y="419.0" width="67.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="673.3" y="430.0">ext4_ma..</text>
</g>
<g>
<title>ext4_do_update_inode (35 samples, 5.28%)</title><rect x="675.6" y="403.0" width="62.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="678.6" y="414.0">ext4_d..</text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.15%)</title><rect x="684.5" y="387.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="687.5" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (28 samples, 4.22%)</title><rect x="686.3" y="387.0" width="49.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="689.3" y="398.0">ext4_..</text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (27 samples, 4.07%)</title><rect x="688.1" y="371.0" width="48.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="691.1" y="382.0">ext4..</text>
</g>
<g>
<title>crc32c_pcl_intel_update (11 samples, 1.66%)</title><rect x="689.9" y="355.0" width="19.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="692.9" y="366.0"></text>
</g>
<g>
<title>crypto_shash_update (15 samples, 2.26%)</title><rect x="709.5" y="355.0" width="26.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="712.5" y="366.0">c..</text>
</g>
<g>
<title>crc32c_pcl_intel_update (12 samples, 1.81%)</title><rect x="714.8" y="339.0" width="21.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="717.8" y="350.0">c..</text>
</g>
<g>
<title>from_kprojid (1 samples, 0.15%)</title><rect x="736.2" y="387.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="739.2" y="398.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.15%)</title><rect x="736.2" y="371.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="739.2" y="382.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (17 samples, 2.56%)</title><rect x="737.9" y="419.0" width="30.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="740.9" y="430.0">ex..</text>
</g>
<g>
<title>__ext4_get_inode_loc (14 samples, 2.11%)</title><rect x="739.7" y="403.0" width="24.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="742.7" y="414.0">_..</text>
</g>
<g>
<title>__getblk_gfp (4 samples, 0.60%)</title><rect x="748.6" y="387.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="751.6" y="398.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.45%)</title><rect x="748.6" y="371.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="751.6" y="382.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.15%)</title><rect x="754.0" y="371.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="757.0" y="382.0"></text>
</g>
<g>
<title>ext4_get_group_desc (5 samples, 0.75%)</title><rect x="755.7" y="387.0" width="8.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="758.7" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.30%)</title><rect x="764.6" y="403.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="767.6" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (2 samples, 0.30%)</title><rect x="764.6" y="387.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="767.6" y="398.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.15%)</title><rect x="766.4" y="371.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="769.4" y="382.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.60%)</title><rect x="768.2" y="467.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.2" y="478.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (4 samples, 0.60%)</title><rect x="768.2" y="451.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.2" y="462.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.15%)</title><rect x="773.5" y="435.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="776.5" y="446.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.15%)</title><rect x="775.3" y="467.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="778.3" y="478.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.15%)</title><rect x="777.1" y="483.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="780.1" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.15%)</title><rect x="778.9" y="499.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="781.9" y="510.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.15%)</title><rect x="780.6" y="499.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="783.6" y="510.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (4 samples, 0.60%)</title><rect x="782.4" y="499.0" width="7.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="785.4" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.15%)</title><rect x="782.4" y="483.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.4" y="494.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.45%)</title><rect x="784.2" y="483.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="787.2" y="494.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (11 samples, 1.66%)</title><rect x="789.5" y="499.0" width="19.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="792.5" y="510.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.15%)</title><rect x="809.1" y="499.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="812.1" y="510.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.15%)</title><rect x="810.9" y="515.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="813.9" y="526.0"></text>
</g>
<g>
<title>down_write_trylock (2 samples, 0.30%)</title><rect x="812.7" y="531.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.7" y="542.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.30%)</title><rect x="816.2" y="531.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="819.2" y="542.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.0 (2 samples, 0.30%)</title><rect x="816.2" y="515.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="819.2" y="526.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.15%)</title><rect x="819.8" y="579.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="822.8" y="590.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.15%)</title><rect x="821.6" y="579.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="824.6" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.45%)</title><rect x="823.4" y="579.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="826.4" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.15%)</title><rect x="825.1" y="563.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="828.1" y="574.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.15%)</title><rect x="826.9" y="563.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="829.9" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.15%)</title><rect x="826.9" y="547.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="829.9" y="558.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.15%)</title><rect x="826.9" y="531.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.9" y="542.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.30%)</title><rect x="828.7" y="675.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="831.7" y="686.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.30%)</title><rect x="832.3" y="675.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="835.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 1.06%)</title><rect x="835.8" y="739.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.45%)</title><rect x="842.9" y="723.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.9" y="734.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (1 samples, 0.15%)</title><rect x="844.7" y="707.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="847.7" y="718.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.15%)</title><rect x="846.5" y="707.0" width="1.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="849.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (29 samples, 4.37%)</title><rect x="848.3" y="787.0" width="51.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.3" y="798.0">ru/ma..</text>
</g>
<g>
<title>java/util/TreeMap.put (29 samples, 4.37%)</title><rect x="848.3" y="771.0" width="51.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.3" y="782.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (24 samples, 3.62%)</title><rect x="851.8" y="755.0" width="42.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.8" y="766.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 2.41%)</title><rect x="866.1" y="739.0" width="28.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.1" y="750.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 2.41%)</title><rect x="866.1" y="723.0" width="28.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.1" y="734.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.15%)</title><rect x="882.1" y="707.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.15%)</title><rect x="882.1" y="691.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.1" y="702.0"></text>
</g>
<g>
<title>vectorizedMismatch (6 samples, 0.90%)</title><rect x="883.9" y="707.0" width="10.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="886.9" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.45%)</title><rect x="894.6" y="755.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.60%)</title><rect x="899.9" y="835.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.60%)</title><rect x="899.9" y="819.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.30%)</title><rect x="899.9" y="803.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.30%)</title><rect x="903.5" y="803.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.30%)</title><rect x="903.5" y="787.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.30%)</title><rect x="903.5" y="771.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.5" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.15%)</title><rect x="905.2" y="755.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="908.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.45%)</title><rect x="907.0" y="867.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.30%)</title><rect x="907.0" y="851.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.30%)</title><rect x="907.0" y="835.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="910.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.30%)</title><rect x="907.0" y="819.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.30%)</title><rect x="907.0" y="803.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.15%)</title><rect x="910.6" y="851.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 1.21%)</title><rect x="912.4" y="867.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.30%)</title><rect x="917.7" y="851.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.30%)</title><rect x="917.7" y="835.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.45%)</title><rect x="921.3" y="851.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.45%)</title><rect x="921.3" y="835.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.3" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.15%)</title><rect x="923.0" y="819.0" width="1.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="926.0" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.15%)</title><rect x="924.8" y="819.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="927.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.60%)</title><rect x="926.6" y="867.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="929.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.60%)</title><rect x="926.6" y="851.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (90 samples, 13.57%)</title><rect x="933.7" y="883.0" width="160.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.7" y="894.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (77 samples, 11.61%)</title><rect x="956.8" y="867.0" width="137.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="959.8" y="878.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 1.81%)</title><rect x="992.4" y="851.0" width="21.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="995.4" y="862.0">J..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="1004.9" y="835.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1007.9" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.15%)</title><rect x="1006.7" y="835.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1009.7" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.15%)</title><rect x="1008.5" y="835.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.5" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.15%)</title><rect x="1010.2" y="835.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1013.2" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.15%)</title><rect x="1010.2" y="819.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1013.2" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.15%)</title><rect x="1010.2" y="803.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1013.2" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.15%)</title><rect x="1012.0" y="835.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1015.0" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="1013.8" y="851.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1016.8" y="862.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.90%)</title><rect x="1015.6" y="851.0" width="10.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1018.6" y="862.0"></text>
</g>
<g>
<title>recv (38 samples, 5.73%)</title><rect x="1026.3" y="851.0" width="67.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1029.3" y="862.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 4.07%)</title><rect x="1045.8" y="835.0" width="48.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1048.8" y="846.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.45%)</title><rect x="1045.8" y="819.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1048.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 3.62%)</title><rect x="1051.2" y="819.0" width="42.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1054.2" y="830.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (14 samples, 2.11%)</title><rect x="1069.0" y="803.0" width="24.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1072.0" y="814.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 1.66%)</title><rect x="1069.0" y="787.0" width="19.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1072.0" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (11 samples, 1.66%)</title><rect x="1069.0" y="771.0" width="19.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1072.0" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 1.66%)</title><rect x="1069.0" y="755.0" width="19.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1072.0" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 1.36%)</title><rect x="1072.5" y="739.0" width="16.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1075.5" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.15%)</title><rect x="1077.9" y="723.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1080.9" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.15%)</title><rect x="1077.9" y="707.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1080.9" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.15%)</title><rect x="1077.9" y="691.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1080.9" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.15%)</title><rect x="1077.9" y="675.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1080.9" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.75%)</title><rect x="1079.7" y="723.0" width="8.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1082.7" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.75%)</title><rect x="1079.7" y="707.0" width="8.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1082.7" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.60%)</title><rect x="1081.4" y="691.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1084.4" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.15%)</title><rect x="1081.4" y="675.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1084.4" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.45%)</title><rect x="1083.2" y="675.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1086.2" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.45%)</title><rect x="1083.2" y="659.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1086.2" y="670.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.45%)</title><rect x="1088.6" y="787.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1091.6" y="798.0"></text>
</g>
<g>
<title>start_thread (54 samples, 8.14%)</title><rect x="1093.9" y="931.0" width="96.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1096.9" y="942.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (54 samples, 8.14%)</title><rect x="1093.9" y="915.0" width="96.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1096.9" y="926.0">thread_nati..</text>
</g>
<g>
<title>Thread::call_run() (54 samples, 8.14%)</title><rect x="1093.9" y="899.0" width="96.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1096.9" y="910.0">Thread::cal..</text>
</g>
<g>
<title>GangWorker::loop() (54 samples, 8.14%)</title><rect x="1093.9" y="883.0" width="96.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.9" y="894.0">GangWorker:..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (8 samples, 1.21%)</title><rect x="1093.9" y="867.0" width="14.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1096.9" y="878.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (8 samples, 1.21%)</title><rect x="1093.9" y="851.0" width="14.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1096.9" y="862.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (8 samples, 1.21%)</title><rect x="1093.9" y="835.0" width="14.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.9" y="846.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (7 samples, 1.06%)</title><rect x="1093.9" y="819.0" width="12.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1096.9" y="830.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (4 samples, 0.60%)</title><rect x="1099.2" y="803.0" width="7.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1102.2" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.60%)</title><rect x="1099.2" y="787.0" width="7.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1102.2" y="798.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (4 samples, 0.60%)</title><rect x="1099.2" y="771.0" width="7.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1102.2" y="782.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.15%)</title><rect x="1104.6" y="755.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1107.6" y="766.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (1 samples, 0.15%)</title><rect x="1106.3" y="819.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1109.3" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.15%)</title><rect x="1106.3" y="803.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1109.3" y="814.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (3 samples, 0.45%)</title><rect x="1108.1" y="867.0" width="5.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1111.1" y="878.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (3 samples, 0.45%)</title><rect x="1108.1" y="851.0" width="5.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1111.1" y="862.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.45%)</title><rect x="1108.1" y="835.0" width="5.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1111.1" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (37 samples, 5.58%)</title><rect x="1113.5" y="867.0" width="65.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1116.5" y="878.0">G1ParTa..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (33 samples, 4.98%)</title><rect x="1113.5" y="851.0" width="58.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1116.5" y="862.0">G1ParE..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.15%)</title><rect x="1113.5" y="835.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1116.5" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (30 samples, 4.52%)</title><rect x="1115.2" y="835.0" width="53.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.2" y="846.0">G1Par..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (20 samples, 3.02%)</title><rect x="1131.3" y="819.0" width="35.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.3" y="830.0">G1P..</text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.75%)</title><rect x="1158.0" y="803.0" width="8.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.0" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.15%)</title><rect x="1166.9" y="819.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.9" y="830.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.30%)</title><rect x="1168.6" y="835.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1171.6" y="846.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.60%)</title><rect x="1172.2" y="851.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.2" y="862.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.60%)</title><rect x="1172.2" y="835.0" width="7.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.2" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.60%)</title><rect x="1172.2" y="819.0" width="7.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.2" y="830.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.60%)</title><rect x="1172.2" y="803.0" width="7.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.2" y="814.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.60%)</title><rect x="1172.2" y="787.0" width="7.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.2" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.60%)</title><rect x="1172.2" y="771.0" width="7.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.2" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.15%)</title><rect x="1177.5" y="755.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.5" y="766.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (6 samples, 0.90%)</title><rect x="1179.3" y="867.0" width="10.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.3" y="878.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (6 samples, 0.90%)</title><rect x="1179.3" y="851.0" width="10.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.3" y="862.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.75%)</title><rect x="1179.3" y="835.0" width="8.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.3" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;TypeArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.15%)</title><rect x="1188.2" y="835.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.2" y="846.0"></text>
</g>
</g>
</svg>
