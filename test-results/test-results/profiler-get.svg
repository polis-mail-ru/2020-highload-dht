<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="885"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="885"> </text>
<g id="frames">
<g>
<title>all (1,677 samples, 100.00%)</title><rect x="10.0" y="851.0" width="1180.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.0" y="862.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (7 samples, 0.42%)</title><rect x="10.0" y="835.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7 samples, 0.42%)</title><rect x="10.0" y="819.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7 samples, 0.42%)</title><rect x="10.0" y="803.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (7 samples, 0.42%)</title><rect x="10.0" y="787.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.42%)</title><rect x="10.0" y="771.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$86/1979264565.run (7 samples, 0.42%)</title><rect x="10.0" y="755.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (7 samples, 0.42%)</title><rect x="10.0" y="739.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (7 samples, 0.42%)</title><rect x="10.0" y="723.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (7 samples, 0.42%)</title><rect x="10.0" y="707.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (7 samples, 0.42%)</title><rect x="10.0" y="691.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.36%)</title><rect x="10.7" y="675.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.7" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (6 samples, 0.36%)</title><rect x="10.7" y="659.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.7" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (6 samples, 0.36%)</title><rect x="10.7" y="643.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.7" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (6 samples, 0.36%)</title><rect x="10.7" y="627.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.7" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="10.7" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="10.7" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (1 samples, 0.06%)</title><rect x="10.7" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.7" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (1 samples, 0.06%)</title><rect x="10.7" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.7" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.06%)</title><rect x="10.7" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.7" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.06%)</title><rect x="10.7" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.7" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.06%)</title><rect x="10.7" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.7" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (1 samples, 0.06%)</title><rect x="10.7" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.7" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (1 samples, 0.06%)</title><rect x="10.7" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.7" y="494.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (1 samples, 0.06%)</title><rect x="10.7" y="467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.7" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (1 samples, 0.06%)</title><rect x="10.7" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.7" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (1 samples, 0.06%)</title><rect x="10.7" y="435.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.7" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.06%)</title><rect x="10.7" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.7" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.06%)</title><rect x="10.7" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.7" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.06%)</title><rect x="10.7" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.7" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.06%)</title><rect x="10.7" y="371.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.7" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.06%)</title><rect x="10.7" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.7" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.06%)</title><rect x="10.7" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.7" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.06%)</title><rect x="10.7" y="323.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.7" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.06%)</title><rect x="10.7" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.7" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.06%)</title><rect x="10.7" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.7" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.06%)</title><rect x="10.7" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.7" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="10.7" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="10.7" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.06%)</title><rect x="10.7" y="227.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.7" y="238.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.06%)</title><rect x="10.7" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.7" y="222.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.ensureInvocableMethod (1 samples, 0.06%)</title><rect x="10.7" y="195.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.7" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDeclaringClass (1 samples, 0.06%)</title><rect x="10.7" y="179.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.7" y="190.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="10.7" y="163.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.7" y="174.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (3 samples, 0.18%)</title><rect x="11.4" y="611.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.18%)</title><rect x="11.4" y="595.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.18%)</title><rect x="11.4" y="579.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3 samples, 0.18%)</title><rect x="11.4" y="563.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.18%)</title><rect x="11.4" y="547.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.18%)</title><rect x="11.4" y="531.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.18%)</title><rect x="11.4" y="515.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.4" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.18%)</title><rect x="11.4" y="499.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.4" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.18%)</title><rect x="11.4" y="483.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.4" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.18%)</title><rect x="11.4" y="467.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.4" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.18%)</title><rect x="11.4" y="451.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.4" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.18%)</title><rect x="11.4" y="435.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.4" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.18%)</title><rect x="11.4" y="419.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.18%)</title><rect x="11.4" y="403.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.18%)</title><rect x="11.4" y="387.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.18%)</title><rect x="11.4" y="371.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.06%)</title><rect x="11.4" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.4" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (1 samples, 0.06%)</title><rect x="11.4" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (1 samples, 0.06%)</title><rect x="11.4" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.writeBlockHeader (1 samples, 0.06%)</title><rect x="11.4" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.4" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.12%)</title><rect x="12.1" y="355.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.12%)</title><rect x="12.1" y="339.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.1" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (1 samples, 0.06%)</title><rect x="12.8" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.8" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="12.8" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.8" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="12.8" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.8" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="12.8" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.8" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.06%)</title><rect x="12.8" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.8" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="12.8" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.8" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.06%)</title><rect x="12.8" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.8" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.06%)</title><rect x="12.8" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.06%)</title><rect x="12.8" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.8" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="12.8" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="12.8" y="163.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.06%)</title><rect x="12.8" y="147.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.06%)</title><rect x="12.8" y="131.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.8" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.06%)</title><rect x="12.8" y="115.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.8" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.06%)</title><rect x="12.8" y="99.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.8" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.setBlockDataMode (1 samples, 0.06%)</title><rect x="12.8" y="83.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.8" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.drain (1 samples, 0.06%)</title><rect x="12.8" y="67.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.8" y="78.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.06%)</title><rect x="12.8" y="51.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.8" y="62.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="12.8" y="35.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="15.8" y="46.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.06%)</title><rect x="13.5" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.06%)</title><rect x="13.5" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.5" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.06%)</title><rect x="13.5" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.06%)</title><rect x="13.5" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.06%)</title><rect x="13.5" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.5" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.06%)</title><rect x="13.5" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.5" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseOutputStream (1 samples, 0.06%)</title><rect x="14.2" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.flush (1 samples, 0.06%)</title><rect x="14.2" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.2" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,593 samples, 94.99%)</title><rect x="14.9" y="835.0" width="1120.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.9" y="846.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.36%)</title><rect x="14.9" y="819.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.36%)</title><rect x="14.9" y="803.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.9" y="814.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="15.6" y="787.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="18.6" y="798.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.24%)</title><rect x="16.3" y="787.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="19.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="17.0" y="771.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="20.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="17.0" y="755.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="20.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.18%)</title><rect x="17.0" y="739.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="20.0" y="750.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.18%)</title><rect x="17.0" y="723.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="20.0" y="734.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.18%)</title><rect x="17.0" y="707.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="20.0" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.06%)</title><rect x="17.0" y="691.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="20.0" y="702.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.06%)</title><rect x="17.0" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="20.0" y="686.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.06%)</title><rect x="17.0" y="659.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="20.0" y="670.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.06%)</title><rect x="17.0" y="643.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="20.0" y="654.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="17.0" y="627.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="20.0" y="638.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.12%)</title><rect x="17.7" y="691.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="20.7" y="702.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.12%)</title><rect x="17.7" y="675.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="20.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,587 samples, 94.63%)</title><rect x="19.1" y="819.0" width="1116.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.1" y="830.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,585 samples, 94.51%)</title><rect x="19.1" y="803.0" width="1115.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.1" y="814.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,571 samples, 93.68%)</title><rect x="19.1" y="787.0" width="1105.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.1" y="798.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,538 samples, 91.71%)</title><rect x="28.3" y="771.0" width="1082.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.3" y="782.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,538 samples, 91.71%)</title><rect x="28.3" y="755.0" width="1082.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.3" y="766.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_handleGet.handleRequest (1,537 samples, 91.65%)</title><rect x="28.3" y="739.0" width="1081.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.3" y="750.0">RequestHandler1_handleGet.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (51 samples, 3.04%)</title><rect x="28.3" y="723.0" width="35.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.3" y="734.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (51 samples, 3.04%)</title><rect x="28.3" y="707.0" width="35.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.3" y="718.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.18%)</title><rect x="28.3" y="691.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.18%)</title><rect x="28.3" y="675.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.06%)</title><rect x="28.3" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.3" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.06%)</title><rect x="28.3" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.3" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="29.0" y="659.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="29.0" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="29.0" y="627.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.0" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 2.86%)</title><rect x="30.4" y="691.0" width="33.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.4" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 2.86%)</title><rect x="30.4" y="675.0" width="33.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.4" y="686.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (47 samples, 2.80%)</title><rect x="30.4" y="659.0" width="33.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.4" y="670.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (46 samples, 2.74%)</title><rect x="31.1" y="643.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.1" y="654.0">on..</text>
</g>
<g>
<title>__libc_send (45 samples, 2.68%)</title><rect x="31.8" y="627.0" width="31.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="34.8" y="638.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 2.68%)</title><rect x="31.8" y="611.0" width="31.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="34.8" y="622.0">en..</text>
</g>
<g>
<title>do_syscall_64 (45 samples, 2.68%)</title><rect x="31.8" y="595.0" width="31.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.8" y="606.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (44 samples, 2.62%)</title><rect x="32.5" y="579.0" width="31.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.5" y="590.0">__..</text>
</g>
<g>
<title>__sys_sendto (44 samples, 2.62%)</title><rect x="32.5" y="563.0" width="31.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="35.5" y="574.0">__..</text>
</g>
<g>
<title>sock_sendmsg (43 samples, 2.56%)</title><rect x="32.5" y="547.0" width="30.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.5" y="558.0">so..</text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="32.5" y="531.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="35.5" y="542.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (1 samples, 0.06%)</title><rect x="32.5" y="515.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="35.5" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (42 samples, 2.50%)</title><rect x="33.2" y="531.0" width="29.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="36.2" y="542.0">tc..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="33.2" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="36.2" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="33.2" y="499.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="36.2" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (41 samples, 2.44%)</title><rect x="33.9" y="515.0" width="28.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="36.9" y="526.0">tc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="36.0" y="499.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="39.0" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="36.0" y="483.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="39.0" y="494.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (31 samples, 1.85%)</title><rect x="36.7" y="499.0" width="21.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="39.7" y="510.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (31 samples, 1.85%)</title><rect x="36.7" y="483.0" width="21.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="39.7" y="494.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (31 samples, 1.85%)</title><rect x="36.7" y="467.0" width="21.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="39.7" y="478.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (31 samples, 1.85%)</title><rect x="36.7" y="451.0" width="21.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="39.7" y="462.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="36.7" y="435.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="39.7" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="36.7" y="419.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="39.7" y="430.0"></text>
</g>
<g>
<title>ip_output (30 samples, 1.79%)</title><rect x="37.4" y="435.0" width="21.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="40.4" y="446.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (30 samples, 1.79%)</title><rect x="37.4" y="419.0" width="21.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="40.4" y="430.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.24%)</title><rect x="38.8" y="403.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="41.8" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="40.3" y="387.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.3" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="40.3" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="43.3" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="41.0" y="387.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="44.0" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (24 samples, 1.43%)</title><rect x="41.7" y="403.0" width="16.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="44.7" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (24 samples, 1.43%)</title><rect x="41.7" y="387.0" width="16.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="44.7" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (23 samples, 1.37%)</title><rect x="42.4" y="371.0" width="16.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="45.4" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (23 samples, 1.37%)</title><rect x="42.4" y="355.0" width="16.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="45.4" y="366.0"></text>
</g>
<g>
<title>net_rx_action (21 samples, 1.25%)</title><rect x="43.8" y="339.0" width="14.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.8" y="350.0"></text>
</g>
<g>
<title>process_backlog (21 samples, 1.25%)</title><rect x="43.8" y="323.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="46.8" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (21 samples, 1.25%)</title><rect x="43.8" y="307.0" width="14.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="46.8" y="318.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 1.25%)</title><rect x="43.8" y="291.0" width="14.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.8" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (21 samples, 1.25%)</title><rect x="43.8" y="275.0" width="14.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.8" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (21 samples, 1.25%)</title><rect x="43.8" y="259.0" width="14.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="46.8" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21 samples, 1.25%)</title><rect x="43.8" y="243.0" width="14.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.8" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 1.25%)</title><rect x="43.8" y="227.0" width="14.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.8" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.18%)</title><rect x="44.5" y="211.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="47.5" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.18%)</title><rect x="44.5" y="195.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="47.5" y="206.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.12%)</title><rect x="45.2" y="179.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.2" y="190.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (1 samples, 0.06%)</title><rect x="45.9" y="163.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="48.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (17 samples, 1.01%)</title><rect x="46.6" y="211.0" width="12.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.6" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (17 samples, 1.01%)</title><rect x="46.6" y="195.0" width="12.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="49.6" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="46.6" y="179.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="49.6" y="190.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="46.6" y="163.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="49.6" y="174.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.12%)</title><rect x="46.6" y="147.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="49.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.54%)</title><rect x="48.0" y="179.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="51.0" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="50.8" y="163.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="53.8" y="174.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="50.8" y="147.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="53.8" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="51.5" y="163.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.5" y="174.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.12%)</title><rect x="52.2" y="163.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="55.2" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.06%)</title><rect x="53.6" y="163.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.6" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.30%)</title><rect x="54.3" y="179.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.3" y="190.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.06%)</title><rect x="54.3" y="163.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="57.3" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.24%)</title><rect x="55.0" y="163.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.0" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.24%)</title><rect x="55.0" y="147.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="58.0" y="158.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.24%)</title><rect x="55.0" y="131.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="58.0" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.06%)</title><rect x="57.8" y="179.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.8" y="190.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.18%)</title><rect x="58.6" y="499.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="61.6" y="510.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="59.3" y="483.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="62.3" y="494.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.06%)</title><rect x="59.3" y="467.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="62.3" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="60.0" y="467.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="63.0" y="478.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.06%)</title><rect x="60.7" y="499.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="63.7" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.06%)</title><rect x="61.4" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="64.4" y="510.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.06%)</title><rect x="61.4" y="483.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="64.4" y="494.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (1 samples, 0.06%)</title><rect x="62.1" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="65.1" y="510.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="62.8" y="547.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="65.8" y="558.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="62.8" y="531.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="65.8" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="63.5" y="659.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="66.5" y="670.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="63.5" y="643.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="66.5" y="654.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="63.5" y="627.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="66.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (21 samples, 1.25%)</title><rect x="64.2" y="723.0" width="14.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 1.25%)</title><rect x="64.2" y="707.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.54%)</title><rect x="64.2" y="691.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.54%)</title><rect x="64.2" y="675.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.2" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="69.8" y="659.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="72.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (12 samples, 0.72%)</title><rect x="70.5" y="691.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.72%)</title><rect x="70.5" y="675.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.72%)</title><rect x="70.5" y="659.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (12 samples, 0.72%)</title><rect x="70.5" y="643.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/BasicService.handleGet (1,465 samples, 87.36%)</title><rect x="79.0" y="723.0" width="1030.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.0" y="734.0">ru/mail/polis/service/s3ponia/BasicService.handleGet</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (28 samples, 1.67%)</title><rect x="79.7" y="707.0" width="19.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.7" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (28 samples, 1.67%)</title><rect x="79.7" y="691.0" width="19.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.7" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (28 samples, 1.67%)</title><rect x="79.7" y="675.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.7" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (28 samples, 1.67%)</title><rect x="79.7" y="659.0" width="19.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.7" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (28 samples, 1.67%)</title><rect x="79.7" y="643.0" width="19.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.7" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (28 samples, 1.67%)</title><rect x="79.7" y="627.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.7" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (28 samples, 1.67%)</title><rect x="79.7" y="611.0" width="19.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.7" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (25 samples, 1.49%)</title><rect x="80.4" y="595.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.4" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (25 samples, 1.49%)</title><rect x="80.4" y="579.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.4" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (2 samples, 0.12%)</title><rect x="80.4" y="563.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.4" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.12%)</title><rect x="80.4" y="547.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.4" y="558.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.12%)</title><rect x="80.4" y="531.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.4" y="542.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (2 samples, 0.12%)</title><rect x="80.4" y="515.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.4" y="526.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (2 samples, 0.12%)</title><rect x="80.4" y="499.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.4" y="510.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (1 samples, 0.06%)</title><rect x="81.1" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.1" y="494.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.06%)</title><rect x="81.1" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.06%)</title><rect x="81.1" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (1 samples, 0.06%)</title><rect x="81.1" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.1" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (16 samples, 0.95%)</title><rect x="81.8" y="563.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.8" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (1 samples, 0.06%)</title><rect x="82.5" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.5" y="558.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (1 samples, 0.06%)</title><rect x="82.5" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.5" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (14 samples, 0.83%)</title><rect x="83.2" y="547.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.2" y="558.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (14 samples, 0.83%)</title><rect x="83.2" y="531.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.2" y="542.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (14 samples, 0.83%)</title><rect x="83.2" y="515.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.2" y="526.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (13 samples, 0.78%)</title><rect x="83.2" y="499.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.2" y="510.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (13 samples, 0.78%)</title><rect x="83.2" y="483.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.2" y="494.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (12 samples, 0.72%)</title><rect x="83.9" y="467.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.9" y="478.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (12 samples, 0.72%)</title><rect x="83.9" y="451.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.9" y="462.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (12 samples, 0.72%)</title><rect x="83.9" y="435.0" width="8.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="86.9" y="446.0"></text>
</g>
<g>
<title>writeBytes (12 samples, 0.72%)</title><rect x="83.9" y="419.0" width="8.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="86.9" y="430.0"></text>
</g>
<g>
<title>__libc_write (9 samples, 0.54%)</title><rect x="83.9" y="403.0" width="6.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="86.9" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.48%)</title><rect x="84.6" y="387.0" width="5.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="87.6" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.48%)</title><rect x="84.6" y="371.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="87.6" y="382.0"></text>
</g>
<g>
<title>ksys_write (8 samples, 0.48%)</title><rect x="84.6" y="355.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="87.6" y="366.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="84.6" y="339.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.6" y="350.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="84.6" y="323.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="87.6" y="334.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="84.6" y="307.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="87.6" y="318.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.42%)</title><rect x="85.3" y="339.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.3" y="350.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.30%)</title><rect x="85.3" y="323.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="88.3" y="334.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.30%)</title><rect x="85.3" y="307.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.3" y="318.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.30%)</title><rect x="85.3" y="291.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="88.3" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.30%)</title><rect x="85.3" y="275.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.3" y="286.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.12%)</title><rect x="88.8" y="323.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="91.8" y="334.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.12%)</title><rect x="88.8" y="307.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.8" y="318.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.12%)</title><rect x="88.8" y="291.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.8" y="302.0"></text>
</g>
<g>
<title>jni_GetArrayLength (2 samples, 0.12%)</title><rect x="90.2" y="403.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="93.2" y="414.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (2 samples, 0.12%)</title><rect x="90.2" y="387.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="93.2" y="398.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.06%)</title><rect x="91.6" y="403.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="94.6" y="414.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.06%)</title><rect x="91.6" y="387.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="94.6" y="398.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (1 samples, 0.06%)</title><rect x="92.3" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.3" y="510.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (7 samples, 0.42%)</title><rect x="93.0" y="563.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.0" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 0.42%)</title><rect x="93.0" y="547.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.0" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (7 samples, 0.42%)</title><rect x="93.0" y="531.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.0" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (2 samples, 0.12%)</title><rect x="93.0" y="515.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.0" y="526.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (2 samples, 0.12%)</title><rect x="93.0" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.0" y="510.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.12%)</title><rect x="93.0" y="483.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.0" y="494.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (2 samples, 0.12%)</title><rect x="93.0" y="467.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.0" y="478.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (2 samples, 0.12%)</title><rect x="93.0" y="451.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.0" y="462.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (2 samples, 0.12%)</title><rect x="93.0" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.0" y="446.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (2 samples, 0.12%)</title><rect x="93.0" y="419.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.0" y="430.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (2 samples, 0.12%)</title><rect x="93.0" y="403.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.0" y="414.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (1 samples, 0.06%)</title><rect x="93.7" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.7" y="398.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.append (1 samples, 0.06%)</title><rect x="93.7" y="371.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.7" y="382.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.06%)</title><rect x="93.7" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.30%)</title><rect x="94.4" y="515.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.4" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.30%)</title><rect x="94.4" y="499.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.4" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.12%)</title><rect x="94.4" y="483.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="95.1" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.1" y="478.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="95.1" y="451.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="98.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.18%)</title><rect x="95.8" y="483.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Boolean.equals (1 samples, 0.06%)</title><rect x="98.0" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.0" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="98.7" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="98.7" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.7" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (38 samples, 2.27%)</title><rect x="99.4" y="707.0" width="26.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.4" y="718.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (37 samples, 2.21%)</title><rect x="100.1" y="691.0" width="26.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.1" y="702.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (36 samples, 2.15%)</title><rect x="100.1" y="675.0" width="25.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.1" y="686.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (36 samples, 2.15%)</title><rect x="100.1" y="659.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.1" y="670.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (36 samples, 2.15%)</title><rect x="100.1" y="643.0" width="25.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.1" y="654.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (36 samples, 2.15%)</title><rect x="100.1" y="627.0" width="25.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.1" y="638.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (36 samples, 2.15%)</title><rect x="100.1" y="611.0" width="25.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.1" y="622.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (33 samples, 1.97%)</title><rect x="100.1" y="595.0" width="23.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.1" y="606.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (33 samples, 1.97%)</title><rect x="100.1" y="579.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.1" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (13 samples, 0.78%)</title><rect x="100.1" y="563.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.1" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (12 samples, 0.72%)</title><rect x="100.1" y="547.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.1" y="558.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (12 samples, 0.72%)</title><rect x="100.1" y="531.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.1" y="542.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (12 samples, 0.72%)</title><rect x="100.1" y="515.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.30%)</title><rect x="100.1" y="499.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.1" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.30%)</title><rect x="100.1" y="483.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.1" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.06%)</title><rect x="100.1" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.24%)</title><rect x="100.8" y="467.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="103.6" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.6" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.06%)</title><rect x="103.6" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.6" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="103.6" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.6" y="478.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.18%)</title><rect x="104.3" y="499.0" width="2.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="107.3" y="510.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (3 samples, 0.18%)</title><rect x="106.4" y="499.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.4" y="510.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (3 samples, 0.18%)</title><rect x="106.4" y="483.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.4" y="494.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.06%)</title><rect x="106.4" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.06%)</title><rect x="106.4" y="451.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (1 samples, 0.06%)</title><rect x="106.4" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.4" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="107.1" y="467.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="110.1" y="478.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.06%)</title><rect x="108.5" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.5" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (12 samples, 0.72%)</title><rect x="109.2" y="563.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.2" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (12 samples, 0.72%)</title><rect x="109.2" y="547.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.2" y="558.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (12 samples, 0.72%)</title><rect x="109.2" y="531.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.2" y="542.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (12 samples, 0.72%)</title><rect x="109.2" y="515.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.2" y="526.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (12 samples, 0.72%)</title><rect x="109.2" y="499.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.2" y="510.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (12 samples, 0.72%)</title><rect x="109.2" y="483.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.2" y="494.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (11 samples, 0.66%)</title><rect x="109.9" y="467.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.9" y="478.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (11 samples, 0.66%)</title><rect x="109.9" y="451.0" width="7.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="112.9" y="462.0"></text>
</g>
<g>
<title>writeBytes (11 samples, 0.66%)</title><rect x="109.9" y="435.0" width="7.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="112.9" y="446.0"></text>
</g>
<g>
<title>__libc_write (9 samples, 0.54%)</title><rect x="109.9" y="419.0" width="6.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="112.9" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.54%)</title><rect x="109.9" y="403.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="112.9" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.54%)</title><rect x="109.9" y="387.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="112.9" y="398.0"></text>
</g>
<g>
<title>ksys_write (9 samples, 0.54%)</title><rect x="109.9" y="371.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.9" y="382.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="109.9" y="355.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="112.9" y="366.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="109.9" y="339.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="112.9" y="350.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="109.9" y="323.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.9" y="334.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.48%)</title><rect x="110.6" y="355.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="113.6" y="366.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.48%)</title><rect x="110.6" y="339.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.6" y="350.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.42%)</title><rect x="111.3" y="323.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="114.3" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.24%)</title><rect x="111.3" y="307.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="114.3" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.24%)</title><rect x="111.3" y="291.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="114.3" y="302.0"></text>
</g>
<g>
<title>copy_page_from_iter (3 samples, 0.18%)</title><rect x="114.1" y="307.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="117.1" y="318.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.18%)</title><rect x="114.1" y="291.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="117.1" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.18%)</title><rect x="114.1" y="275.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="117.1" y="286.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="116.2" y="419.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="119.2" y="430.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="117.0" y="419.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="120.0" y="430.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="117.0" y="403.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="120.0" y="414.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="117.0" y="387.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="120.0" y="398.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (8 samples, 0.48%)</title><rect x="117.7" y="563.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.7" y="574.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (5 samples, 0.30%)</title><rect x="117.7" y="547.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.7" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (5 samples, 0.30%)</title><rect x="117.7" y="531.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.7" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (1 samples, 0.06%)</title><rect x="117.7" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.7" y="526.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (1 samples, 0.06%)</title><rect x="117.7" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.7" y="510.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.06%)</title><rect x="117.7" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.7" y="494.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (1 samples, 0.06%)</title><rect x="117.7" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.7" y="478.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.useDateFormatSymbols (1 samples, 0.06%)</title><rect x="117.7" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.24%)</title><rect x="118.4" y="515.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.4" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.24%)</title><rect x="118.4" y="499.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.4" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.12%)</title><rect x="118.4" y="483.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.4" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="118.4" y="467.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="121.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.12%)</title><rect x="119.8" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.12%)</title><rect x="119.8" y="467.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.8" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="120.5" y="451.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="123.5" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (3 samples, 0.18%)</title><rect x="121.2" y="547.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.18%)</title><rect x="121.2" y="531.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.18%)</title><rect x="121.2" y="515.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="124.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.18%)</title><rect x="121.2" y="499.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.2" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.18%)</title><rect x="121.2" y="483.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.2" y="494.0"></text>
</g>
<g>
<title>_new_array_nozero_Java (1 samples, 0.06%)</title><rect x="121.2" y="467.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="124.2" y="478.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="121.9" y="467.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="124.9" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="123.3" y="595.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.3" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.06%)</title><rect x="124.7" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.06%)</title><rect x="124.7" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.7" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_1 (1 samples, 0.06%)</title><rect x="125.4" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (1 samples, 0.06%)</title><rect x="125.4" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.getArray (1 samples, 0.06%)</title><rect x="125.4" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,398 samples, 83.36%)</title><rect x="126.1" y="707.0" width="983.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.1" y="718.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (328 samples, 19.56%)</title><rect x="126.1" y="691.0" width="230.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.1" y="702.0">com/google/common/collect/Tran..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (328 samples, 19.56%)</title><rect x="126.1" y="675.0" width="230.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.1" y="686.0">com/google/common/collect/Abst..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (328 samples, 19.56%)</title><rect x="126.1" y="659.0" width="230.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.1" y="670.0">com/google/common/collect/Abst..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (328 samples, 19.56%)</title><rect x="126.1" y="643.0" width="230.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.1" y="654.0">com/google/common/collect/Iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (306 samples, 18.25%)</title><rect x="126.1" y="627.0" width="215.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.1" y="638.0">ru/mail/polis/dao/Iters$Coll..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="126.1" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.1" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.06%)</title><rect x="126.1" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.1" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.06%)</title><rect x="126.1" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.1" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.06%)</title><rect x="126.1" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.1" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.06%)</title><rect x="126.1" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.06%)</title><rect x="126.1" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.06%)</title><rect x="126.1" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.06%)</title><rect x="126.1" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (244 samples, 14.55%)</title><rect x="126.8" y="611.0" width="171.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.8" y="622.0">com/google/common/coll..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (185 samples, 11.03%)</title><rect x="126.8" y="595.0" width="130.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.8" y="606.0">java/util/Abstra..</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (185 samples, 11.03%)</title><rect x="126.8" y="579.0" width="130.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.8" y="590.0">java/util/Priori..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (185 samples, 11.03%)</title><rect x="126.8" y="563.0" width="130.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.8" y="574.0">java/util/Priori..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (185 samples, 11.03%)</title><rect x="126.8" y="547.0" width="130.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.8" y="558.0">com/google/commo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (185 samples, 11.03%)</title><rect x="126.8" y="531.0" width="130.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.8" y="542.0">com/google/commo..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$113/19489153.compare (185 samples, 11.03%)</title><rect x="126.8" y="515.0" width="130.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.8" y="526.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.12%)</title><rect x="128.2" y="499.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (171 samples, 10.20%)</title><rect x="129.6" y="499.0" width="120.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.6" y="510.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (170 samples, 10.14%)</title><rect x="130.3" y="483.0" width="119.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.3" y="494.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$117/196234348.compare (170 samples, 10.14%)</title><rect x="130.3" y="467.0" width="119.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.3" y="478.0">java/util/Compa..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (170 samples, 10.14%)</title><rect x="130.3" y="451.0" width="119.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.3" y="462.0">java/util/Compa..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$115/737417899.compare (170 samples, 10.14%)</title><rect x="130.3" y="435.0" width="119.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.3" y="446.0">java/util/Compa..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (170 samples, 10.14%)</title><rect x="130.3" y="419.0" width="119.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.3" y="430.0">java/util/Compa..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$114/1313476938.apply (166 samples, 9.90%)</title><rect x="130.3" y="403.0" width="116.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.3" y="414.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (166 samples, 9.90%)</title><rect x="130.3" y="387.0" width="116.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.3" y="398.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (10 samples, 0.60%)</title><rect x="131.0" y="371.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.0" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.60%)</title><rect x="131.0" y="355.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.0" y="366.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.12%)</title><rect x="131.0" y="339.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="134.0" y="350.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.12%)</title><rect x="131.0" y="323.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="134.0" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.12%)</title><rect x="131.0" y="307.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="134.0" y="318.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.12%)</title><rect x="131.0" y="291.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="134.0" y="302.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.06%)</title><rect x="131.0" y="275.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="134.0" y="286.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="131.0" y="259.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="134.0" y="270.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.06%)</title><rect x="131.0" y="243.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="134.0" y="254.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.06%)</title><rect x="131.0" y="227.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="134.0" y="238.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.06%)</title><rect x="131.0" y="211.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="134.0" y="222.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.06%)</title><rect x="131.0" y="195.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="134.0" y="206.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="131.7" y="275.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="134.7" y="286.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.06%)</title><rect x="131.7" y="259.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="134.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.48%)</title><rect x="132.4" y="339.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.4" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.48%)</title><rect x="132.4" y="323.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.4" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (72 samples, 4.29%)</title><rect x="138.1" y="371.0" width="50.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.1" y="382.0">java/..</text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (70 samples, 4.17%)</title><rect x="138.1" y="355.0" width="49.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.1" y="366.0">java/..</text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (70 samples, 4.17%)</title><rect x="138.1" y="339.0" width="49.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.1" y="350.0">sun/n..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (70 samples, 4.17%)</title><rect x="138.1" y="323.0" width="49.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.1" y="334.0">sun/n..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (70 samples, 4.17%)</title><rect x="138.1" y="307.0" width="49.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.1" y="318.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (3 samples, 0.18%)</title><rect x="138.1" y="291.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (3 samples, 0.18%)</title><rect x="138.1" y="275.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.1" y="286.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.06%)</title><rect x="139.5" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="139.5" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="139.5" y="227.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.5" y="238.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="139.5" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.5" y="222.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="139.5" y="195.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory$Flags.toFlags (5 samples, 0.30%)</title><rect x="140.2" y="291.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.2" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.06%)</title><rect x="140.2" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.2" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.06%)</title><rect x="140.2" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.2" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.24%)</title><rect x="140.9" y="275.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.9" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="141.6" y="259.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.6" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="141.6" y="243.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.6" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="141.6" y="227.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.6" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.06%)</title><rect x="143.0" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (61 samples, 3.64%)</title><rect x="143.7" y="291.0" width="42.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.7" y="302.0">sun/..</text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (61 samples, 3.64%)</title><rect x="143.7" y="275.0" width="42.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.7" y="286.0">sun/..</text>
</g>
<g>
<title>sun/nio/fs/NativeBuffer.release (1 samples, 0.06%)</title><rect x="143.7" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.7" y="270.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="143.7" y="243.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="146.7" y="254.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.copyToNativeBuffer (3 samples, 0.18%)</title><rect x="144.4" y="259.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffer.setOwner (1 samples, 0.06%)</title><rect x="145.1" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.1" y="254.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.copyCStringToNativeBuffer (1 samples, 0.06%)</title><rect x="145.8" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.06%)</title><rect x="145.8" y="227.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.06%)</title><rect x="145.8" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.06%)</title><rect x="145.8" y="195.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.06%)</title><rect x="145.8" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (57 samples, 3.40%)</title><rect x="146.5" y="259.0" width="40.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.5" y="270.0">sun..</text>
</g>
<g>
<title>[unknown] (55 samples, 3.28%)</title><rect x="147.9" y="243.0" width="38.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="150.9" y="254.0">[un..</text>
</g>
<g>
<title>__libc_open64 (54 samples, 3.22%)</title><rect x="147.9" y="227.0" width="38.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="150.9" y="238.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (52 samples, 3.10%)</title><rect x="149.3" y="211.0" width="36.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="152.3" y="222.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (52 samples, 3.10%)</title><rect x="149.3" y="195.0" width="36.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.3" y="206.0">do_..</text>
</g>
<g>
<title>do_sys_open (50 samples, 2.98%)</title><rect x="150.7" y="179.0" width="35.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="153.7" y="190.0">do_..</text>
</g>
<g>
<title>__alloc_fd (1 samples, 0.06%)</title><rect x="150.7" y="163.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="153.7" y="174.0"></text>
</g>
<g>
<title>find_next_zero_bit (1 samples, 0.06%)</title><rect x="150.7" y="147.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="153.7" y="158.0"></text>
</g>
<g>
<title>do_filp_open (42 samples, 2.50%)</title><rect x="151.4" y="163.0" width="29.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="154.4" y="174.0">do..</text>
</g>
<g>
<title>path_openat (42 samples, 2.50%)</title><rect x="151.4" y="147.0" width="29.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="154.4" y="158.0">pa..</text>
</g>
<g>
<title>alloc_empty_file (6 samples, 0.36%)</title><rect x="151.4" y="131.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="154.4" y="142.0"></text>
</g>
<g>
<title>__alloc_file (6 samples, 0.36%)</title><rect x="151.4" y="115.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="154.4" y="126.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.18%)</title><rect x="151.4" y="99.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="154.4" y="110.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="152.1" y="83.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="155.1" y="94.0"></text>
</g>
<g>
<title>memset (1 samples, 0.06%)</title><rect x="152.8" y="83.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="155.8" y="94.0"></text>
</g>
<g>
<title>security_file_alloc (3 samples, 0.18%)</title><rect x="153.5" y="99.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="156.5" y="110.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="154.2" y="83.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="157.2" y="94.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="154.2" y="67.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.2" y="78.0"></text>
</g>
<g>
<title>selinux_file_alloc_security (1 samples, 0.06%)</title><rect x="154.9" y="83.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.9" y="94.0"></text>
</g>
<g>
<title>do_dentry_open (10 samples, 0.60%)</title><rect x="155.7" y="131.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="158.7" y="142.0"></text>
</g>
<g>
<title>ext4_file_open?[ext4] (1 samples, 0.06%)</title><rect x="157.1" y="115.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="160.1" y="126.0"></text>
</g>
<g>
<title>fscrypt_file_open (1 samples, 0.06%)</title><rect x="157.1" y="99.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="160.1" y="110.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="157.1" y="83.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="160.1" y="94.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.06%)</title><rect x="157.1" y="67.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="160.1" y="78.0"></text>
</g>
<g>
<title>lockref_get (1 samples, 0.06%)</title><rect x="157.8" y="115.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="160.8" y="126.0"></text>
</g>
<g>
<title>security_file_open (6 samples, 0.36%)</title><rect x="158.5" y="115.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="161.5" y="126.0"></text>
</g>
<g>
<title>selinux_file_open (4 samples, 0.24%)</title><rect x="159.9" y="99.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="162.9" y="110.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.06%)</title><rect x="160.6" y="83.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="163.6" y="94.0"></text>
</g>
<g>
<title>inode_has_perm (2 samples, 0.12%)</title><rect x="161.3" y="83.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="164.3" y="94.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (15 samples, 0.89%)</title><rect x="162.7" y="131.0" width="10.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.7" y="142.0"></text>
</g>
<g>
<title>inode_permission (3 samples, 0.18%)</title><rect x="164.8" y="115.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="167.8" y="126.0"></text>
</g>
<g>
<title>generic_permission (1 samples, 0.06%)</title><rect x="166.2" y="99.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="169.2" y="110.0"></text>
</g>
<g>
<title>security_inode_permission (5 samples, 0.30%)</title><rect x="166.9" y="115.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="169.9" y="126.0"></text>
</g>
<g>
<title>selinux_inode_permission (4 samples, 0.24%)</title><rect x="167.6" y="99.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="170.6" y="110.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (2 samples, 0.12%)</title><rect x="169.0" y="83.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="172.0" y="94.0"></text>
</g>
<g>
<title>walk_component (4 samples, 0.24%)</title><rect x="170.4" y="115.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="173.4" y="126.0"></text>
</g>
<g>
<title>lookup_fast (2 samples, 0.12%)</title><rect x="171.8" y="99.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="174.8" y="110.0"></text>
</g>
<g>
<title>__d_lookup_rcu (2 samples, 0.12%)</title><rect x="171.8" y="83.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="174.8" y="94.0"></text>
</g>
<g>
<title>lookup_fast (3 samples, 0.18%)</title><rect x="173.2" y="131.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="176.2" y="142.0"></text>
</g>
<g>
<title>__d_lookup_rcu (3 samples, 0.18%)</title><rect x="173.2" y="115.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="176.2" y="126.0"></text>
</g>
<g>
<title>may_open.isra.0 (7 samples, 0.42%)</title><rect x="175.4" y="131.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="178.4" y="142.0"></text>
</g>
<g>
<title>security_inode_permission (5 samples, 0.30%)</title><rect x="176.8" y="115.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="179.8" y="126.0"></text>
</g>
<g>
<title>selinux_inode_permission (5 samples, 0.30%)</title><rect x="176.8" y="99.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="179.8" y="110.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (2 samples, 0.12%)</title><rect x="178.2" y="83.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="181.2" y="94.0"></text>
</g>
<g>
<title>inode_security_rcu (1 samples, 0.06%)</title><rect x="179.6" y="83.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="182.6" y="94.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.06%)</title><rect x="179.6" y="67.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="182.6" y="78.0"></text>
</g>
<g>
<title>path_init (1 samples, 0.06%)</title><rect x="180.3" y="131.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.3" y="142.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="181.0" y="163.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.0" y="174.0"></text>
</g>
<g>
<title>getname_flags (5 samples, 0.30%)</title><rect x="181.7" y="163.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="184.7" y="174.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="182.4" y="147.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.4" y="158.0"></text>
</g>
<g>
<title>strncpy_from_user (3 samples, 0.18%)</title><rect x="183.1" y="147.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="186.1" y="158.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="184.5" y="131.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="187.5" y="142.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="184.5" y="115.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="185.2" y="163.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="188.2" y="174.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="185.9" y="227.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="188.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.toString (1 samples, 0.06%)</title><rect x="186.6" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/fs/Util.toString (1 samples, 0.06%)</title><rect x="186.6" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="186.6" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.6" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="186.6" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.06%)</title><rect x="186.6" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="186.6" y="211.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.6" y="222.0"></text>
</g>
<g>
<title>java/util/Collections.addAll (2 samples, 0.12%)</title><rect x="187.3" y="355.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.12%)</title><rect x="187.3" y="339.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.3" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.12%)</title><rect x="187.3" y="323.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.12%)</title><rect x="187.3" y="307.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.3" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (25 samples, 1.49%)</title><rect x="188.7" y="371.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (25 samples, 1.49%)</title><rect x="188.7" y="355.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (25 samples, 1.49%)</title><rect x="188.7" y="339.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (21 samples, 1.25%)</title><rect x="188.7" y="323.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (21 samples, 1.25%)</title><rect x="188.7" y="307.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.7" y="318.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (21 samples, 1.25%)</title><rect x="188.7" y="291.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.7" y="302.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (21 samples, 1.25%)</title><rect x="188.7" y="275.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.7" y="286.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (21 samples, 1.25%)</title><rect x="188.7" y="259.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.7" y="270.0"></text>
</g>
<g>
<title>__libc_close (16 samples, 0.95%)</title><rect x="189.4" y="243.0" width="11.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="192.4" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.83%)</title><rect x="190.8" y="227.0" width="9.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.8" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.83%)</title><rect x="190.8" y="211.0" width="9.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="193.8" y="222.0"></text>
</g>
<g>
<title>__x64_sys_close (1 samples, 0.06%)</title><rect x="192.2" y="195.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="195.2" y="206.0"></text>
</g>
<g>
<title>filp_close (1 samples, 0.06%)</title><rect x="192.2" y="179.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.2" y="190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (11 samples, 0.66%)</title><rect x="192.9" y="195.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="195.9" y="206.0"></text>
</g>
<g>
<title>blkcg_maybe_throttle_current (1 samples, 0.06%)</title><rect x="192.9" y="179.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="195.9" y="190.0"></text>
</g>
<g>
<title>task_work_run (10 samples, 0.60%)</title><rect x="193.6" y="179.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="196.6" y="190.0"></text>
</g>
<g>
<title>__call_rcu (1 samples, 0.06%)</title><rect x="195.1" y="163.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="198.1" y="174.0"></text>
</g>
<g>
<title>__fput (7 samples, 0.42%)</title><rect x="195.8" y="163.0" width="4.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.8" y="174.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="197.9" y="147.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="200.9" y="158.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="197.9" y="131.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="200.9" y="142.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="198.6" y="147.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="201.6" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="199.3" y="147.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.3" y="158.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="200.7" y="243.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="203.7" y="254.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="201.4" y="243.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="204.4" y="254.0"></text>
</g>
<g>
<title>fileDescriptorClose (2 samples, 0.12%)</title><rect x="202.1" y="243.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="205.1" y="254.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.06%)</title><rect x="202.8" y="227.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="205.8" y="238.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="202.8" y="211.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="205.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.remove (4 samples, 0.24%)</title><rect x="203.5" y="323.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (58 samples, 3.46%)</title><rect x="206.3" y="371.0" width="40.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.3" y="382.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (58 samples, 3.46%)</title><rect x="206.3" y="355.0" width="40.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.3" y="366.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (8 samples, 0.48%)</title><rect x="207.0" y="339.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.0" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.48%)</title><rect x="207.0" y="323.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.0" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.12%)</title><rect x="211.2" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.2" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.12%)</title><rect x="211.2" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.2" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.12%)</title><rect x="211.2" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (48 samples, 2.86%)</title><rect x="212.6" y="339.0" width="33.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.6" y="350.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.18%)</title><rect x="213.4" y="323.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.12%)</title><rect x="214.1" y="307.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (1 samples, 0.06%)</title><rect x="214.1" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.1" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.06%)</title><rect x="214.8" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="214.8" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.8" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="214.8" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.8" y="270.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="214.8" y="243.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="217.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (40 samples, 2.39%)</title><rect x="215.5" y="323.0" width="28.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.5" y="334.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (39 samples, 2.33%)</title><rect x="215.5" y="307.0" width="27.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.5" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (39 samples, 2.33%)</title><rect x="215.5" y="291.0" width="27.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.5" y="302.0">s..</text>
</g>
<g>
<title>__pread64 (35 samples, 2.09%)</title><rect x="218.3" y="275.0" width="24.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="221.3" y="286.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 2.03%)</title><rect x="219.0" y="259.0" width="23.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="222.0" y="270.0">e..</text>
</g>
<g>
<title>do_syscall_64 (34 samples, 2.03%)</title><rect x="219.0" y="243.0" width="23.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="222.0" y="254.0">d..</text>
</g>
<g>
<title>ksys_pread64 (27 samples, 1.61%)</title><rect x="223.9" y="227.0" width="19.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="226.9" y="238.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="223.9" y="211.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="226.9" y="222.0"></text>
</g>
<g>
<title>vfs_read (26 samples, 1.55%)</title><rect x="224.6" y="211.0" width="18.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="227.6" y="222.0"></text>
</g>
<g>
<title>new_sync_read (20 samples, 1.19%)</title><rect x="224.6" y="195.0" width="14.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="227.6" y="206.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (1 samples, 0.06%)</title><rect x="225.3" y="179.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="228.3" y="190.0"></text>
</g>
<g>
<title>generic_file_read_iter (17 samples, 1.01%)</title><rect x="226.0" y="179.0" width="12.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="229.0" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.60%)</title><rect x="226.7" y="163.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="229.7" y="174.0"></text>
</g>
<g>
<title>copyout (8 samples, 0.48%)</title><rect x="228.1" y="147.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.1" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 0.48%)</title><rect x="228.1" y="131.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="231.1" y="142.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.30%)</title><rect x="233.8" y="163.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="236.8" y="174.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.30%)</title><rect x="233.8" y="147.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="236.8" y="158.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.12%)</title><rect x="235.9" y="131.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="238.9" y="142.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.06%)</title><rect x="236.6" y="115.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="239.6" y="126.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.06%)</title><rect x="237.3" y="163.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="240.3" y="174.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.06%)</title><rect x="237.3" y="147.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.3" y="158.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.06%)</title><rect x="238.0" y="179.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="241.0" y="190.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.36%)</title><rect x="238.7" y="195.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="241.7" y="206.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="240.1" y="179.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.1" y="190.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.18%)</title><rect x="240.8" y="179.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="243.8" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.06%)</title><rect x="242.9" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.18%)</title><rect x="243.6" y="323.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.18%)</title><rect x="243.6" y="307.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="246.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.12%)</title><rect x="244.3" y="291.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="245.7" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.06%)</title><rect x="245.7" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.06%)</title><rect x="246.4" y="339.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.06%)</title><rect x="246.4" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$116/1784472427.apply (4 samples, 0.24%)</title><rect x="247.1" y="403.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (4 samples, 0.24%)</title><rect x="247.1" y="387.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="247.1" y="371.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="247.1" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="250.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="247.1" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.1" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.06%)</title><rect x="247.8" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.8" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.06%)</title><rect x="247.8" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (1 samples, 0.06%)</title><rect x="247.8" y="339.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.06%)</title><rect x="247.8" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.06%)</title><rect x="247.8" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (1 samples, 0.06%)</title><rect x="247.8" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="247.8" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.8" y="286.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.06%)</title><rect x="247.8" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="247.8" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="247.8" y="227.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.8" y="238.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="247.8" y="211.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.8" y="222.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="247.8" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.8" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (2 samples, 0.12%)</title><rect x="248.5" y="371.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (2 samples, 0.12%)</title><rect x="248.5" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (2 samples, 0.12%)</title><rect x="248.5" y="339.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.06%)</title><rect x="248.5" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (1 samples, 0.06%)</title><rect x="248.5" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.5" y="318.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (1 samples, 0.06%)</title><rect x="248.5" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.5" y="302.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (1 samples, 0.06%)</title><rect x="248.5" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.5" y="286.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (1 samples, 0.06%)</title><rect x="248.5" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.5" y="270.0"></text>
</g>
<g>
<title>__libc_close (1 samples, 0.06%)</title><rect x="248.5" y="243.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="251.5" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="248.5" y="227.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="251.5" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="248.5" y="211.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="251.5" y="222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="248.5" y="195.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.5" y="206.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.06%)</title><rect x="248.5" y="179.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="251.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.remove (1 samples, 0.06%)</title><rect x="249.2" y="323.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.compareTo (10 samples, 0.60%)</title><rect x="249.9" y="499.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.compareTo (10 samples, 0.60%)</title><rect x="249.9" y="483.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.9" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$117/196234348.compare (10 samples, 0.60%)</title><rect x="249.9" y="467.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.9" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (10 samples, 0.60%)</title><rect x="249.9" y="451.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$115/737417899.compare (10 samples, 0.60%)</title><rect x="249.9" y="435.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (10 samples, 0.60%)</title><rect x="249.9" y="419.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell$$Lambda$122/1204659072.apply (9 samples, 0.54%)</title><rect x="249.9" y="403.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="252.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (9 samples, 0.54%)</title><rect x="249.9" y="387.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.9" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (4 samples, 0.24%)</title><rect x="249.9" y="371.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.9" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (4 samples, 0.24%)</title><rect x="249.9" y="355.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (4 samples, 0.24%)</title><rect x="249.9" y="339.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (4 samples, 0.24%)</title><rect x="249.9" y="323.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (4 samples, 0.24%)</title><rect x="249.9" y="307.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (1 samples, 0.06%)</title><rect x="249.9" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="249.9" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.9" y="286.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.06%)</title><rect x="249.9" y="259.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="249.9" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="249.9" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl.getCleanerImpl (1 samples, 0.06%)</title><rect x="249.9" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (3 samples, 0.18%)</title><rect x="250.6" y="291.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (3 samples, 0.18%)</title><rect x="250.6" y="275.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (3 samples, 0.18%)</title><rect x="250.6" y="259.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.6" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.18%)</title><rect x="250.6" y="243.0" width="2.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="253.6" y="254.0"></text>
</g>
<g>
<title>__libc_open64 (3 samples, 0.18%)</title><rect x="250.6" y="227.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="253.6" y="238.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="250.6" y="211.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.6" y="222.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="250.6" y="195.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.6" y="206.0"></text>
</g>
<g>
<title>do_sys_open (3 samples, 0.18%)</title><rect x="250.6" y="179.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="253.6" y="190.0"></text>
</g>
<g>
<title>do_filp_open (3 samples, 0.18%)</title><rect x="250.6" y="163.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="253.6" y="174.0"></text>
</g>
<g>
<title>path_openat (3 samples, 0.18%)</title><rect x="250.6" y="147.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.6" y="158.0"></text>
</g>
<g>
<title>alloc_empty_file (1 samples, 0.06%)</title><rect x="250.6" y="131.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.6" y="142.0"></text>
</g>
<g>
<title>__alloc_file (1 samples, 0.06%)</title><rect x="250.6" y="115.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="253.6" y="126.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (1 samples, 0.06%)</title><rect x="251.3" y="131.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="254.3" y="142.0"></text>
</g>
<g>
<title>security_inode_permission (1 samples, 0.06%)</title><rect x="251.3" y="115.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="254.3" y="126.0"></text>
</g>
<g>
<title>selinux_inode_permission (1 samples, 0.06%)</title><rect x="251.3" y="99.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="254.3" y="110.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.06%)</title><rect x="252.1" y="131.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="255.1" y="142.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (2 samples, 0.12%)</title><rect x="252.8" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (2 samples, 0.12%)</title><rect x="252.8" y="355.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (2 samples, 0.12%)</title><rect x="252.8" y="339.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.06%)</title><rect x="252.8" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (1 samples, 0.06%)</title><rect x="252.8" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.8" y="318.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (1 samples, 0.06%)</title><rect x="252.8" y="291.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.8" y="302.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (1 samples, 0.06%)</title><rect x="252.8" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.8" y="286.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (1 samples, 0.06%)</title><rect x="252.8" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.8" y="270.0"></text>
</g>
<g>
<title>__libc_close (1 samples, 0.06%)</title><rect x="252.8" y="243.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="255.8" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="252.8" y="227.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.8" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="252.8" y="211.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.8" y="222.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="252.8" y="195.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="255.8" y="206.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.06%)</title><rect x="252.8" y="179.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="255.8" y="190.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.06%)</title><rect x="252.8" y="163.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.8" y="174.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="252.8" y="147.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.8" y="158.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.06%)</title><rect x="252.8" y="131.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.remove (1 samples, 0.06%)</title><rect x="253.5" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.18%)</title><rect x="254.2" y="371.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.18%)</title><rect x="254.2" y="355.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.18%)</title><rect x="254.2" y="339.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.12%)</title><rect x="254.2" y="323.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.12%)</title><rect x="254.2" y="307.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.12%)</title><rect x="254.2" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.2" y="302.0"></text>
</g>
<g>
<title>__pread64 (2 samples, 0.12%)</title><rect x="254.2" y="275.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="257.2" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="254.2" y="259.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.2" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="254.2" y="243.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.2" y="254.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.12%)</title><rect x="254.2" y="227.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="257.2" y="238.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.12%)</title><rect x="254.2" y="211.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="257.2" y="222.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.12%)</title><rect x="254.2" y="195.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="257.2" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.12%)</title><rect x="254.2" y="179.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.2" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="254.9" y="163.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.9" y="174.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.06%)</title><rect x="254.9" y="147.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="257.9" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="254.9" y="131.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="255.6" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="255.6" y="307.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell$$Lambda$123/1889009475.apply (1 samples, 0.06%)</title><rect x="256.3" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (1 samples, 0.06%)</title><rect x="256.3" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.3" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.06%)</title><rect x="256.3" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.3" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.06%)</title><rect x="256.3" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (1 samples, 0.06%)</title><rect x="256.3" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.06%)</title><rect x="256.3" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.06%)</title><rect x="256.3" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (1 samples, 0.06%)</title><rect x="256.3" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (1 samples, 0.06%)</title><rect x="256.3" y="275.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (1 samples, 0.06%)</title><rect x="256.3" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.3" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="256.3" y="243.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="259.3" y="254.0"></text>
</g>
<g>
<title>__libc_open64 (1 samples, 0.06%)</title><rect x="256.3" y="227.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="259.3" y="238.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="256.3" y="211.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="259.3" y="222.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="256.3" y="195.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="259.3" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (59 samples, 3.52%)</title><rect x="257.0" y="595.0" width="41.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.0" y="606.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (59 samples, 3.52%)</title><rect x="257.0" y="579.0" width="41.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.0" y="590.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (59 samples, 3.52%)</title><rect x="257.0" y="563.0" width="41.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.0" y="574.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (59 samples, 3.52%)</title><rect x="257.0" y="547.0" width="41.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.0" y="558.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 3.52%)</title><rect x="257.0" y="531.0" width="41.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.0" y="542.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (59 samples, 3.52%)</title><rect x="257.0" y="515.0" width="41.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.0" y="526.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$113/19489153.compare (59 samples, 3.52%)</title><rect x="257.0" y="499.0" width="41.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.0" y="510.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (59 samples, 3.52%)</title><rect x="257.0" y="483.0" width="41.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.0" y="494.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (59 samples, 3.52%)</title><rect x="257.0" y="467.0" width="41.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.0" y="478.0">ru/..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$117/196234348.compare (59 samples, 3.52%)</title><rect x="257.0" y="451.0" width="41.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.0" y="462.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (59 samples, 3.52%)</title><rect x="257.0" y="435.0" width="41.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.0" y="446.0">jav..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$115/737417899.compare (59 samples, 3.52%)</title><rect x="257.0" y="419.0" width="41.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.0" y="430.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (58 samples, 3.46%)</title><rect x="257.7" y="403.0" width="40.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.7" y="414.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$114/1313476938.apply (57 samples, 3.40%)</title><rect x="257.7" y="387.0" width="40.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.7" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (57 samples, 3.40%)</title><rect x="257.7" y="371.0" width="40.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.7" y="382.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="257.7" y="355.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="257.7" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.7" y="350.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="257.7" y="323.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="260.7" y="334.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="257.7" y="307.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="260.7" y="318.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="257.7" y="291.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="260.7" y="302.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="257.7" y="275.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="260.7" y="286.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.06%)</title><rect x="257.7" y="259.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="260.7" y="270.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="257.7" y="243.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="260.7" y="254.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.06%)</title><rect x="257.7" y="227.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="260.7" y="238.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.06%)</title><rect x="257.7" y="211.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="260.7" y="222.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="257.7" y="195.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="260.7" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (29 samples, 1.73%)</title><rect x="258.4" y="355.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.4" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (27 samples, 1.61%)</title><rect x="258.4" y="339.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (27 samples, 1.61%)</title><rect x="258.4" y="323.0" width="19.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (27 samples, 1.61%)</title><rect x="258.4" y="307.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (27 samples, 1.61%)</title><rect x="258.4" y="291.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="261.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (3 samples, 0.18%)</title><rect x="258.4" y="275.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (3 samples, 0.18%)</title><rect x="258.4" y="259.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.4" y="270.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (2 samples, 0.12%)</title><rect x="258.4" y="243.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.4" y="254.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="258.4" y="227.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="261.4" y="238.0"></text>
</g>
<g>
<title>/lib64/ld-2.30.so (1 samples, 0.06%)</title><rect x="258.4" y="211.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="261.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="259.1" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="259.1" y="211.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.1" y="222.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="259.1" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.1" y="206.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="259.1" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.1" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="259.8" y="243.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.8" y="254.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="259.8" y="227.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="262.8" y="238.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="259.8" y="211.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="262.8" y="222.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="259.8" y="195.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="262.8" y="206.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="259.8" y="179.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="262.8" y="190.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="259.8" y="163.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="262.8" y="174.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="259.8" y="147.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="262.8" y="158.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="259.8" y="131.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="262.8" y="142.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="259.8" y="115.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="262.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory$Flags.toFlags (2 samples, 0.12%)</title><rect x="260.5" y="275.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.5" y="286.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.12%)</title><rect x="260.5" y="259.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.5" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="260.5" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.5" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="260.5" y="227.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.5" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="260.5" y="211.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (22 samples, 1.31%)</title><rect x="261.9" y="275.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (21 samples, 1.25%)</title><rect x="262.6" y="259.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffer.release (1 samples, 0.06%)</title><rect x="262.6" y="243.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.6" y="254.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="262.6" y="227.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="265.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (20 samples, 1.19%)</title><rect x="263.3" y="243.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.3" y="254.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 1.13%)</title><rect x="264.0" y="227.0" width="13.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="267.0" y="238.0"></text>
</g>
<g>
<title>__libc_open64 (19 samples, 1.13%)</title><rect x="264.0" y="211.0" width="13.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="267.0" y="222.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.13%)</title><rect x="264.0" y="195.0" width="13.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="267.0" y="206.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 1.13%)</title><rect x="264.0" y="179.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="267.0" y="190.0"></text>
</g>
<g>
<title>do_sys_open (18 samples, 1.07%)</title><rect x="264.7" y="163.0" width="12.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="267.7" y="174.0"></text>
</g>
<g>
<title>__fd_install (1 samples, 0.06%)</title><rect x="264.7" y="147.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="267.7" y="158.0"></text>
</g>
<g>
<title>do_filp_open (12 samples, 0.72%)</title><rect x="265.4" y="147.0" width="8.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="268.4" y="158.0"></text>
</g>
<g>
<title>path_openat (12 samples, 0.72%)</title><rect x="265.4" y="131.0" width="8.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="268.4" y="142.0"></text>
</g>
<g>
<title>complete_walk (1 samples, 0.06%)</title><rect x="265.4" y="115.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="268.4" y="126.0"></text>
</g>
<g>
<title>unlazy_walk (1 samples, 0.06%)</title><rect x="265.4" y="99.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="268.4" y="110.0"></text>
</g>
<g>
<title>do_dentry_open (3 samples, 0.18%)</title><rect x="266.1" y="115.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="269.1" y="126.0"></text>
</g>
<g>
<title>ext4_file_open?[ext4] (1 samples, 0.06%)</title><rect x="266.1" y="99.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="269.1" y="110.0"></text>
</g>
<g>
<title>fscrypt_file_open (1 samples, 0.06%)</title><rect x="266.1" y="83.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="269.1" y="94.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="266.1" y="67.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="269.1" y="78.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.06%)</title><rect x="266.1" y="51.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="269.1" y="62.0"></text>
</g>
<g>
<title>security_file_open (2 samples, 0.12%)</title><rect x="266.8" y="99.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="269.8" y="110.0"></text>
</g>
<g>
<title>selinux_file_open (1 samples, 0.06%)</title><rect x="267.5" y="83.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="270.5" y="94.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.06%)</title><rect x="267.5" y="67.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="270.5" y="78.0"></text>
</g>
<g>
<title>ima_file_check (1 samples, 0.06%)</title><rect x="268.2" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="271.2" y="126.0"></text>
</g>
<g>
<title>security_task_getsecid (1 samples, 0.06%)</title><rect x="268.2" y="99.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.2" y="110.0"></text>
</g>
<g>
<title>selinux_task_getsecid (1 samples, 0.06%)</title><rect x="268.2" y="83.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="271.2" y="94.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (5 samples, 0.30%)</title><rect x="268.9" y="115.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="271.9" y="126.0"></text>
</g>
<g>
<title>inode_permission (1 samples, 0.06%)</title><rect x="268.9" y="99.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="271.9" y="110.0"></text>
</g>
<g>
<title>generic_permission (1 samples, 0.06%)</title><rect x="268.9" y="83.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="271.9" y="94.0"></text>
</g>
<g>
<title>security_inode_permission (4 samples, 0.24%)</title><rect x="269.6" y="99.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="272.6" y="110.0"></text>
</g>
<g>
<title>selinux_inode_permission (4 samples, 0.24%)</title><rect x="269.6" y="83.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="272.6" y="94.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (1 samples, 0.06%)</title><rect x="271.0" y="67.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="274.0" y="78.0"></text>
</g>
<g>
<title>inode_security_rcu (1 samples, 0.06%)</title><rect x="271.8" y="67.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="274.8" y="78.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.06%)</title><rect x="271.8" y="51.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="274.8" y="62.0"></text>
</g>
<g>
<title>may_open.isra.0 (2 samples, 0.12%)</title><rect x="272.5" y="115.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="275.5" y="126.0"></text>
</g>
<g>
<title>security_inode_permission (2 samples, 0.12%)</title><rect x="272.5" y="99.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.5" y="110.0"></text>
</g>
<g>
<title>selinux_inode_permission (2 samples, 0.12%)</title><rect x="272.5" y="83.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.5" y="94.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (1 samples, 0.06%)</title><rect x="272.5" y="67.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="275.5" y="78.0"></text>
</g>
<g>
<title>inode_security_rcu (1 samples, 0.06%)</title><rect x="273.2" y="67.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="276.2" y="78.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.06%)</title><rect x="273.2" y="51.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="276.2" y="62.0"></text>
</g>
<g>
<title>getname_flags (4 samples, 0.24%)</title><rect x="273.9" y="147.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="276.9" y="158.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="273.9" y="131.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="276.9" y="142.0"></text>
</g>
<g>
<title>strncpy_from_user (3 samples, 0.18%)</title><rect x="274.6" y="131.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="277.6" y="142.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.12%)</title><rect x="275.3" y="115.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.3" y="126.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="276.0" y="99.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="279.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="276.7" y="147.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="279.7" y="158.0"></text>
</g>
<g>
<title>java/util/Collections.addAll (1 samples, 0.06%)</title><rect x="277.4" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.4" y="350.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="277.4" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.4" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="277.4" y="307.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.4" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="277.4" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="278.1" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.06%)</title><rect x="278.1" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.1" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (7 samples, 0.42%)</title><rect x="278.8" y="355.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (7 samples, 0.42%)</title><rect x="278.8" y="339.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (7 samples, 0.42%)</title><rect x="278.8" y="323.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (7 samples, 0.42%)</title><rect x="278.8" y="307.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (7 samples, 0.42%)</title><rect x="278.8" y="291.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.8" y="302.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (7 samples, 0.42%)</title><rect x="278.8" y="275.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.8" y="286.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (7 samples, 0.42%)</title><rect x="278.8" y="259.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.8" y="270.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (7 samples, 0.42%)</title><rect x="278.8" y="243.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.8" y="254.0"></text>
</g>
<g>
<title>__libc_close (4 samples, 0.24%)</title><rect x="278.8" y="227.0" width="2.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="281.8" y="238.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="278.8" y="211.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="281.8" y="222.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="278.8" y="195.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="281.8" y="206.0"></text>
</g>
<g>
<title>__x64_sys_close (1 samples, 0.06%)</title><rect x="278.8" y="179.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="281.8" y="190.0"></text>
</g>
<g>
<title>filp_close (1 samples, 0.06%)</title><rect x="278.8" y="163.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="281.8" y="174.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.18%)</title><rect x="279.5" y="179.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="282.5" y="190.0"></text>
</g>
<g>
<title>task_work_run (3 samples, 0.18%)</title><rect x="279.5" y="163.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="282.5" y="174.0"></text>
</g>
<g>
<title>__fput (3 samples, 0.18%)</title><rect x="279.5" y="147.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="282.5" y="158.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="279.5" y="131.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="282.5" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="280.2" y="131.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="283.2" y="142.0"></text>
</g>
<g>
<title>locks_remove_file (1 samples, 0.06%)</title><rect x="280.9" y="131.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="283.9" y="142.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="281.6" y="227.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="284.6" y="238.0"></text>
</g>
<g>
<title>fileDescriptorClose (2 samples, 0.12%)</title><rect x="282.3" y="227.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="285.3" y="238.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (2 samples, 0.12%)</title><rect x="282.3" y="211.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="285.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (20 samples, 1.19%)</title><rect x="283.7" y="355.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (20 samples, 1.19%)</title><rect x="283.7" y="339.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.18%)</title><rect x="283.7" y="323.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.7" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.18%)</title><rect x="283.7" y="307.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.7" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.12%)</title><rect x="284.4" y="291.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.4" y="302.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.12%)</title><rect x="284.4" y="275.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.4" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.12%)</title><rect x="284.4" y="259.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.06%)</title><rect x="285.8" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.8" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.06%)</title><rect x="285.8" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.89%)</title><rect x="286.5" y="323.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.83%)</title><rect x="286.5" y="307.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.83%)</title><rect x="286.5" y="291.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.83%)</title><rect x="286.5" y="275.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.5" y="286.0"></text>
</g>
<g>
<title>__pread64 (14 samples, 0.83%)</title><rect x="286.5" y="259.0" width="9.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="289.5" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.78%)</title><rect x="287.2" y="243.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="290.2" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.78%)</title><rect x="287.2" y="227.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="290.2" y="238.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.72%)</title><rect x="287.9" y="211.0" width="8.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="290.9" y="222.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="288.6" y="195.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="291.6" y="206.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.60%)</title><rect x="289.3" y="195.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="292.3" y="206.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.42%)</title><rect x="290.0" y="179.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="293.0" y="190.0"></text>
</g>
<g>
<title>generic_file_read_iter (5 samples, 0.30%)</title><rect x="290.8" y="163.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="293.8" y="174.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="291.5" y="147.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="294.5" y="158.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="292.2" y="147.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="295.2" y="158.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.06%)</title><rect x="292.2" y="131.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="295.2" y="142.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="292.2" y="115.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="295.2" y="126.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.12%)</title><rect x="292.9" y="147.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.9" y="158.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.12%)</title><rect x="292.9" y="131.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="295.9" y="142.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.06%)</title><rect x="293.6" y="115.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.6" y="126.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.06%)</title><rect x="293.6" y="99.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="296.6" y="110.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.06%)</title><rect x="294.3" y="163.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="297.3" y="174.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.12%)</title><rect x="295.0" y="179.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="298.0" y="190.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.12%)</title><rect x="295.0" y="163.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="298.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="296.4" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="296.4" y="291.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.06%)</title><rect x="297.1" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.06%)</title><rect x="297.1" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$116/1784472427.apply (1 samples, 0.06%)</title><rect x="297.8" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="300.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (1 samples, 0.06%)</title><rect x="297.8" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.06%)</title><rect x="297.8" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.06%)</title><rect x="297.8" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.06%)</title><rect x="297.8" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.06%)</title><rect x="297.8" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.06%)</title><rect x="297.8" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.06%)</title><rect x="297.8" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.8" y="286.0"></text>
</g>
<g>
<title>__pread64 (1 samples, 0.06%)</title><rect x="297.8" y="259.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="300.8" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="297.8" y="243.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="300.8" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="297.8" y="227.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="300.8" y="238.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.06%)</title><rect x="297.8" y="211.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="300.8" y="222.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="297.8" y="195.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="300.8" y="206.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.06%)</title><rect x="297.8" y="179.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="300.8" y="190.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="297.8" y="163.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="300.8" y="174.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="297.8" y="147.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="300.8" y="158.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.06%)</title><rect x="297.8" y="131.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="300.8" y="142.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.06%)</title><rect x="297.8" y="115.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="300.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$119/1388069526.apply (61 samples, 3.64%)</title><rect x="298.5" y="611.0" width="42.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.5" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (61 samples, 3.64%)</title><rect x="298.5" y="595.0" width="42.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.5" y="606.0">ru/m..</text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (25 samples, 1.49%)</title><rect x="298.5" y="579.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.5" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (25 samples, 1.49%)</title><rect x="298.5" y="563.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (25 samples, 1.49%)</title><rect x="298.5" y="547.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (25 samples, 1.49%)</title><rect x="298.5" y="531.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (25 samples, 1.49%)</title><rect x="298.5" y="515.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (2 samples, 0.12%)</title><rect x="298.5" y="499.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (2 samples, 0.12%)</title><rect x="298.5" y="483.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.5" y="494.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.06%)</title><rect x="299.2" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="299.2" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="299.2" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.2" y="446.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="299.2" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.2" y="430.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="299.2" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (23 samples, 1.37%)</title><rect x="299.9" y="499.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (23 samples, 1.37%)</title><rect x="299.9" y="483.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffer.release (2 samples, 0.12%)</title><rect x="299.9" y="467.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.releaseNativeBuffer (1 samples, 0.06%)</title><rect x="299.9" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.9" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="299.9" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.9" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="299.9" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.9" y="430.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.06%)</title><rect x="300.6" y="451.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="303.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (21 samples, 1.25%)</title><rect x="301.3" y="467.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 1.25%)</title><rect x="301.3" y="451.0" width="14.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="304.3" y="462.0"></text>
</g>
<g>
<title>__libc_open64 (20 samples, 1.19%)</title><rect x="301.3" y="435.0" width="14.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="304.3" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 1.19%)</title><rect x="301.3" y="419.0" width="14.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="304.3" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 1.19%)</title><rect x="301.3" y="403.0" width="14.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.3" y="414.0"></text>
</g>
<g>
<title>do_sys_open (19 samples, 1.13%)</title><rect x="302.0" y="387.0" width="13.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="305.0" y="398.0"></text>
</g>
<g>
<title>__alloc_fd (1 samples, 0.06%)</title><rect x="302.7" y="371.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="305.7" y="382.0"></text>
</g>
<g>
<title>find_next_zero_bit (1 samples, 0.06%)</title><rect x="302.7" y="355.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="305.7" y="366.0"></text>
</g>
<g>
<title>do_filp_open (16 samples, 0.95%)</title><rect x="303.4" y="371.0" width="11.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="306.4" y="382.0"></text>
</g>
<g>
<title>path_openat (16 samples, 0.95%)</title><rect x="303.4" y="355.0" width="11.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="306.4" y="366.0"></text>
</g>
<g>
<title>alloc_empty_file (5 samples, 0.30%)</title><rect x="303.4" y="339.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.4" y="350.0"></text>
</g>
<g>
<title>__alloc_file (5 samples, 0.30%)</title><rect x="303.4" y="323.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="306.4" y="334.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.24%)</title><rect x="303.4" y="307.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="306.4" y="318.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="304.8" y="291.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="307.8" y="302.0"></text>
</g>
<g>
<title>___slab_alloc (1 samples, 0.06%)</title><rect x="304.8" y="275.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="307.8" y="286.0"></text>
</g>
<g>
<title>new_slab (1 samples, 0.06%)</title><rect x="304.8" y="259.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="307.8" y="270.0"></text>
</g>
<g>
<title>memset (1 samples, 0.06%)</title><rect x="305.5" y="291.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="308.5" y="302.0"></text>
</g>
<g>
<title>security_file_alloc (1 samples, 0.06%)</title><rect x="306.2" y="307.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="309.2" y="318.0"></text>
</g>
<g>
<title>selinux_file_alloc_security (1 samples, 0.06%)</title><rect x="306.2" y="291.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="309.2" y="302.0"></text>
</g>
<g>
<title>do_dentry_open (1 samples, 0.06%)</title><rect x="306.9" y="339.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.9" y="350.0"></text>
</g>
<g>
<title>security_file_open (1 samples, 0.06%)</title><rect x="306.9" y="323.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="309.9" y="334.0"></text>
</g>
<g>
<title>selinux_file_open (1 samples, 0.06%)</title><rect x="306.9" y="307.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="309.9" y="318.0"></text>
</g>
<g>
<title>ima_file_check (1 samples, 0.06%)</title><rect x="307.6" y="339.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="310.6" y="350.0"></text>
</g>
<g>
<title>security_task_getsecid (1 samples, 0.06%)</title><rect x="307.6" y="323.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="310.6" y="334.0"></text>
</g>
<g>
<title>selinux_task_getsecid (1 samples, 0.06%)</title><rect x="307.6" y="307.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="310.6" y="318.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (6 samples, 0.36%)</title><rect x="308.3" y="339.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="311.3" y="350.0"></text>
</g>
<g>
<title>inode_permission (1 samples, 0.06%)</title><rect x="309.7" y="323.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="312.7" y="334.0"></text>
</g>
<g>
<title>generic_permission (1 samples, 0.06%)</title><rect x="309.7" y="307.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="312.7" y="318.0"></text>
</g>
<g>
<title>in_group_p (1 samples, 0.06%)</title><rect x="309.7" y="291.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="312.7" y="302.0"></text>
</g>
<g>
<title>security_inode_permission (1 samples, 0.06%)</title><rect x="310.5" y="323.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="313.5" y="334.0"></text>
</g>
<g>
<title>selinux_inode_permission (1 samples, 0.06%)</title><rect x="310.5" y="307.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="313.5" y="318.0"></text>
</g>
<g>
<title>walk_component (2 samples, 0.12%)</title><rect x="311.2" y="323.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="314.2" y="334.0"></text>
</g>
<g>
<title>lookup_fast (2 samples, 0.12%)</title><rect x="311.2" y="307.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="314.2" y="318.0"></text>
</g>
<g>
<title>__d_lookup_rcu (1 samples, 0.06%)</title><rect x="311.9" y="291.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="314.9" y="302.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.06%)</title><rect x="312.6" y="339.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="315.6" y="350.0"></text>
</g>
<g>
<title>may_open.isra.0 (2 samples, 0.12%)</title><rect x="313.3" y="339.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="316.3" y="350.0"></text>
</g>
<g>
<title>security_inode_permission (2 samples, 0.12%)</title><rect x="313.3" y="323.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="316.3" y="334.0"></text>
</g>
<g>
<title>selinux_inode_permission (2 samples, 0.12%)</title><rect x="313.3" y="307.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="316.3" y="318.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (2 samples, 0.12%)</title><rect x="313.3" y="291.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="316.3" y="302.0"></text>
</g>
<g>
<title>getname_flags (1 samples, 0.06%)</title><rect x="314.7" y="371.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="317.7" y="382.0"></text>
</g>
<g>
<title>strncpy_from_user (1 samples, 0.06%)</title><rect x="314.7" y="355.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="317.7" y="366.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="315.4" y="435.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="318.4" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (11 samples, 0.66%)</title><rect x="316.1" y="579.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (11 samples, 0.66%)</title><rect x="316.1" y="563.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (11 samples, 0.66%)</title><rect x="316.1" y="547.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (11 samples, 0.66%)</title><rect x="316.1" y="531.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (11 samples, 0.66%)</title><rect x="316.1" y="515.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.1" y="526.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (11 samples, 0.66%)</title><rect x="316.1" y="499.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.1" y="510.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (11 samples, 0.66%)</title><rect x="316.1" y="483.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.1" y="494.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (11 samples, 0.66%)</title><rect x="316.1" y="467.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.1" y="478.0"></text>
</g>
<g>
<title>__libc_close (9 samples, 0.54%)</title><rect x="316.1" y="451.0" width="6.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="319.1" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.48%)</title><rect x="316.8" y="435.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="319.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.48%)</title><rect x="316.8" y="419.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="319.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_close (3 samples, 0.18%)</title><rect x="317.5" y="403.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="320.5" y="414.0"></text>
</g>
<g>
<title>__close_fd (2 samples, 0.12%)</title><rect x="318.2" y="387.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.2" y="398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.24%)</title><rect x="319.6" y="403.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="322.6" y="414.0"></text>
</g>
<g>
<title>task_work_run (4 samples, 0.24%)</title><rect x="319.6" y="387.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="322.6" y="398.0"></text>
</g>
<g>
<title>__fput (3 samples, 0.18%)</title><rect x="320.3" y="371.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="323.3" y="382.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="321.0" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.0" y="366.0"></text>
</g>
<g>
<title>ext4_release_file?[ext4] (1 samples, 0.06%)</title><rect x="321.7" y="355.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="324.7" y="366.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.06%)</title><rect x="322.4" y="451.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="325.4" y="462.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.06%)</title><rect x="323.1" y="451.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="326.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (25 samples, 1.49%)</title><rect x="323.8" y="579.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (25 samples, 1.49%)</title><rect x="323.8" y="563.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.06%)</title><rect x="323.8" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.8" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.06%)</title><rect x="323.8" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (24 samples, 1.43%)</title><rect x="324.5" y="547.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (22 samples, 1.31%)</title><rect x="324.5" y="531.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (22 samples, 1.31%)</title><rect x="324.5" y="515.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (22 samples, 1.31%)</title><rect x="324.5" y="499.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.5" y="510.0"></text>
</g>
<g>
<title>__pread64 (20 samples, 1.19%)</title><rect x="325.9" y="483.0" width="14.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="328.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 1.07%)</title><rect x="327.3" y="467.0" width="12.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="330.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 1.07%)</title><rect x="327.3" y="451.0" width="12.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.06%)</title><rect x="330.2" y="435.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="333.2" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (13 samples, 0.78%)</title><rect x="330.9" y="435.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.9" y="446.0"></text>
</g>
<g>
<title>vfs_read (13 samples, 0.78%)</title><rect x="330.9" y="419.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="333.9" y="430.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="331.6" y="403.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="334.6" y="414.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.54%)</title><rect x="332.3" y="403.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="335.3" y="414.0"></text>
</g>
<g>
<title>generic_file_read_iter (8 samples, 0.48%)</title><rect x="333.0" y="387.0" width="5.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="336.0" y="398.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.30%)</title><rect x="335.1" y="371.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="338.1" y="382.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.18%)</title><rect x="336.5" y="355.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.5" y="366.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.18%)</title><rect x="336.5" y="339.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.5" y="350.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.12%)</title><rect x="338.6" y="403.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="341.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="340.0" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="340.0" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="340.7" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$120/1941443647.apply (22 samples, 1.31%)</title><rect x="341.4" y="627.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$iterator$4 (22 samples, 1.31%)</title><rect x="341.4" y="611.0" width="15.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (22 samples, 1.31%)</title><rect x="341.4" y="595.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.12%)</title><rect x="341.4" y="579.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="341.4" y="563.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="341.4" y="547.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="342.1" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="342.1" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="342.1" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.1" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="342.1" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.1" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (11 samples, 0.66%)</title><rect x="342.8" y="579.0" width="7.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.8" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (9 samples, 0.54%)</title><rect x="342.8" y="563.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (9 samples, 0.54%)</title><rect x="342.8" y="547.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (9 samples, 0.54%)</title><rect x="342.8" y="531.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (9 samples, 0.54%)</title><rect x="342.8" y="515.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (1 samples, 0.06%)</title><rect x="342.8" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="345.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="342.8" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.8" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.&lt;init&gt; (1 samples, 0.06%)</title><rect x="342.8" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.8" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.&lt;init&gt; (1 samples, 0.06%)</title><rect x="342.8" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (8 samples, 0.48%)</title><rect x="343.5" y="499.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (8 samples, 0.48%)</title><rect x="343.5" y="483.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (8 samples, 0.48%)</title><rect x="343.5" y="467.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.48%)</title><rect x="343.5" y="451.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="346.5" y="462.0"></text>
</g>
<g>
<title>__libc_open64 (8 samples, 0.48%)</title><rect x="343.5" y="435.0" width="5.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="346.5" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.48%)</title><rect x="343.5" y="419.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="346.5" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.48%)</title><rect x="343.5" y="403.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.5" y="414.0"></text>
</g>
<g>
<title>do_sys_open (8 samples, 0.48%)</title><rect x="343.5" y="387.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="346.5" y="398.0"></text>
</g>
<g>
<title>__alloc_fd (1 samples, 0.06%)</title><rect x="343.5" y="371.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="346.5" y="382.0"></text>
</g>
<g>
<title>do_filp_open (6 samples, 0.36%)</title><rect x="344.2" y="371.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="347.2" y="382.0"></text>
</g>
<g>
<title>path_openat (6 samples, 0.36%)</title><rect x="344.2" y="355.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.2" y="366.0"></text>
</g>
<g>
<title>alloc_empty_file (2 samples, 0.12%)</title><rect x="344.2" y="339.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="347.2" y="350.0"></text>
</g>
<g>
<title>__alloc_file (2 samples, 0.12%)</title><rect x="344.2" y="323.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.2" y="334.0"></text>
</g>
<g>
<title>security_file_alloc (2 samples, 0.12%)</title><rect x="344.2" y="307.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="347.2" y="318.0"></text>
</g>
<g>
<title>selinux_file_alloc_security (2 samples, 0.12%)</title><rect x="344.2" y="291.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="347.2" y="302.0"></text>
</g>
<g>
<title>do_dentry_open (2 samples, 0.12%)</title><rect x="345.6" y="339.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.6" y="350.0"></text>
</g>
<g>
<title>file_ra_state_init (1 samples, 0.06%)</title><rect x="345.6" y="323.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.6" y="334.0"></text>
</g>
<g>
<title>security_file_open (1 samples, 0.06%)</title><rect x="346.3" y="323.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="349.3" y="334.0"></text>
</g>
<g>
<title>selinux_file_open (1 samples, 0.06%)</title><rect x="346.3" y="307.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="349.3" y="318.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (2 samples, 0.12%)</title><rect x="347.0" y="339.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="350.0" y="350.0"></text>
</g>
<g>
<title>inode_permission (1 samples, 0.06%)</title><rect x="347.7" y="323.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="350.7" y="334.0"></text>
</g>
<g>
<title>generic_permission (1 samples, 0.06%)</title><rect x="347.7" y="307.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="350.7" y="318.0"></text>
</g>
<g>
<title>getname_flags (1 samples, 0.06%)</title><rect x="348.4" y="371.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="351.4" y="382.0"></text>
</g>
<g>
<title>strncpy_from_user (1 samples, 0.06%)</title><rect x="348.4" y="355.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="351.4" y="366.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="348.4" y="339.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="351.4" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.addAll (1 samples, 0.06%)</title><rect x="349.2" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="349.2" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.2" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="349.2" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="349.2" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.06%)</title><rect x="349.2" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="349.9" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.9" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="349.9" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.9" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (2 samples, 0.12%)</title><rect x="350.6" y="579.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (2 samples, 0.12%)</title><rect x="350.6" y="563.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (2 samples, 0.12%)</title><rect x="350.6" y="547.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (2 samples, 0.12%)</title><rect x="350.6" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (2 samples, 0.12%)</title><rect x="350.6" y="515.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.6" y="526.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (2 samples, 0.12%)</title><rect x="350.6" y="499.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.6" y="510.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (2 samples, 0.12%)</title><rect x="350.6" y="483.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.6" y="494.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (2 samples, 0.12%)</title><rect x="350.6" y="467.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.6" y="478.0"></text>
</g>
<g>
<title>__libc_close (1 samples, 0.06%)</title><rect x="350.6" y="451.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="353.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="350.6" y="435.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="353.6" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="350.6" y="419.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="353.6" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="350.6" y="403.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="353.6" y="414.0"></text>
</g>
<g>
<title>fileDescriptorClose (1 samples, 0.06%)</title><rect x="351.3" y="451.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="354.3" y="462.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.06%)</title><rect x="351.3" y="435.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="354.3" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (1 samples, 0.06%)</title><rect x="351.3" y="419.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="354.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.42%)</title><rect x="352.0" y="579.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.42%)</title><rect x="352.0" y="563.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.06%)</title><rect x="352.0" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.0" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.06%)</title><rect x="352.0" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.36%)</title><rect x="352.7" y="547.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.30%)</title><rect x="352.7" y="531.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.30%)</title><rect x="352.7" y="515.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.30%)</title><rect x="352.7" y="499.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.7" y="510.0"></text>
</g>
<g>
<title>__pread64 (4 samples, 0.24%)</title><rect x="352.7" y="483.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="355.7" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="352.7" y="467.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="355.7" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="352.7" y="451.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="355.7" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.24%)</title><rect x="352.7" y="435.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="355.7" y="446.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.24%)</title><rect x="352.7" y="419.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="355.7" y="430.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.18%)</title><rect x="352.7" y="403.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.7" y="414.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.18%)</title><rect x="352.7" y="387.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="355.7" y="398.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.12%)</title><rect x="353.4" y="371.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="356.4" y="382.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.12%)</title><rect x="353.4" y="355.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="356.4" y="366.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.12%)</title><rect x="353.4" y="339.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.4" y="350.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.06%)</title><rect x="354.8" y="403.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="357.8" y="414.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.06%)</title><rect x="354.8" y="387.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.8" y="398.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="355.5" y="483.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="358.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="356.2" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.2" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="356.2" y="515.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="359.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (23 samples, 1.37%)</title><rect x="356.9" y="691.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (23 samples, 1.37%)</title><rect x="356.9" y="675.0" width="16.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$121/1341908651.apply (23 samples, 1.37%)</title><rect x="356.9" y="659.0" width="16.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$iterator$5 (23 samples, 1.37%)</title><rect x="356.9" y="643.0" width="16.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (12 samples, 0.72%)</title><rect x="356.9" y="627.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.9" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (2 samples, 0.12%)</title><rect x="356.9" y="611.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.9" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (2 samples, 0.12%)</title><rect x="356.9" y="595.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (2 samples, 0.12%)</title><rect x="356.9" y="579.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (2 samples, 0.12%)</title><rect x="356.9" y="563.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (2 samples, 0.12%)</title><rect x="356.9" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (2 samples, 0.12%)</title><rect x="356.9" y="531.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (2 samples, 0.12%)</title><rect x="356.9" y="515.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (2 samples, 0.12%)</title><rect x="356.9" y="499.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="356.9" y="483.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="359.9" y="494.0"></text>
</g>
<g>
<title>__libc_open64 (2 samples, 0.12%)</title><rect x="356.9" y="467.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="359.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="356.9" y="451.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.9" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="356.9" y="435.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="359.9" y="446.0"></text>
</g>
<g>
<title>do_sys_open (2 samples, 0.12%)</title><rect x="356.9" y="419.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.9" y="430.0"></text>
</g>
<g>
<title>do_filp_open (2 samples, 0.12%)</title><rect x="356.9" y="403.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="359.9" y="414.0"></text>
</g>
<g>
<title>path_openat (2 samples, 0.12%)</title><rect x="356.9" y="387.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="359.9" y="398.0"></text>
</g>
<g>
<title>terminate_walk (1 samples, 0.06%)</title><rect x="357.6" y="371.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="360.6" y="382.0"></text>
</g>
<g>
<title>mntput_no_expire (1 samples, 0.06%)</title><rect x="357.6" y="355.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="360.6" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (6 samples, 0.36%)</title><rect x="358.3" y="611.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (6 samples, 0.36%)</title><rect x="358.3" y="595.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="361.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (6 samples, 0.36%)</title><rect x="358.3" y="579.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (6 samples, 0.36%)</title><rect x="358.3" y="563.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="361.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (6 samples, 0.36%)</title><rect x="358.3" y="547.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.3" y="558.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (6 samples, 0.36%)</title><rect x="358.3" y="531.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.3" y="542.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (6 samples, 0.36%)</title><rect x="358.3" y="515.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.3" y="526.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (6 samples, 0.36%)</title><rect x="358.3" y="499.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.3" y="510.0"></text>
</g>
<g>
<title>__libc_close (6 samples, 0.36%)</title><rect x="358.3" y="483.0" width="4.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="361.3" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.36%)</title><rect x="358.3" y="467.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="361.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.36%)</title><rect x="358.3" y="451.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="361.3" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.36%)</title><rect x="358.3" y="435.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="361.3" y="446.0"></text>
</g>
<g>
<title>task_work_run (6 samples, 0.36%)</title><rect x="358.3" y="419.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="361.3" y="430.0"></text>
</g>
<g>
<title>____fput (1 samples, 0.06%)</title><rect x="359.7" y="403.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="362.7" y="414.0"></text>
</g>
<g>
<title>__call_rcu (1 samples, 0.06%)</title><rect x="360.4" y="403.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="363.4" y="414.0"></text>
</g>
<g>
<title>__fput (2 samples, 0.12%)</title><rect x="361.1" y="403.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.1" y="414.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="361.1" y="387.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.1" y="398.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.06%)</title><rect x="361.1" y="371.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="364.1" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="361.8" y="387.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="364.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.24%)</title><rect x="362.5" y="611.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.24%)</title><rect x="362.5" y="595.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.24%)</title><rect x="362.5" y="579.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.24%)</title><rect x="362.5" y="563.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.24%)</title><rect x="362.5" y="547.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.24%)</title><rect x="362.5" y="531.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.5" y="542.0"></text>
</g>
<g>
<title>__pread64 (4 samples, 0.24%)</title><rect x="362.5" y="515.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="365.5" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="362.5" y="499.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="365.5" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="362.5" y="483.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="365.5" y="494.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.24%)</title><rect x="362.5" y="467.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="365.5" y="478.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.24%)</title><rect x="362.5" y="451.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="365.5" y="462.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.12%)</title><rect x="362.5" y="435.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.5" y="446.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.12%)</title><rect x="363.9" y="435.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.9" y="446.0"></text>
</g>
<g>
<title>generic_file_read_iter (2 samples, 0.12%)</title><rect x="363.9" y="419.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="366.9" y="430.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.12%)</title><rect x="363.9" y="403.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="366.9" y="414.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.12%)</title><rect x="363.9" y="387.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.9" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.12%)</title><rect x="363.9" y="371.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="366.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (11 samples, 0.66%)</title><rect x="365.3" y="627.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.3" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (6 samples, 0.36%)</title><rect x="365.3" y="611.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.3" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (6 samples, 0.36%)</title><rect x="365.3" y="595.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (6 samples, 0.36%)</title><rect x="365.3" y="579.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (6 samples, 0.36%)</title><rect x="365.3" y="563.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (6 samples, 0.36%)</title><rect x="365.3" y="547.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory$Flags.toFlags (1 samples, 0.06%)</title><rect x="365.3" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="365.3" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.06%)</title><rect x="365.3" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (5 samples, 0.30%)</title><rect x="366.0" y="531.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (5 samples, 0.30%)</title><rect x="366.0" y="515.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.copyToNativeBuffer (1 samples, 0.06%)</title><rect x="366.0" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.getNativeBufferFromCache (1 samples, 0.06%)</title><rect x="366.0" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.0" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="366.0" y="467.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.0" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="366.0" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (4 samples, 0.24%)</title><rect x="366.7" y="499.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.24%)</title><rect x="366.7" y="483.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="369.7" y="494.0"></text>
</g>
<g>
<title>__libc_open64 (4 samples, 0.24%)</title><rect x="366.7" y="467.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="369.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="366.7" y="451.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="369.7" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="366.7" y="435.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="369.7" y="446.0"></text>
</g>
<g>
<title>do_sys_open (4 samples, 0.24%)</title><rect x="366.7" y="419.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="369.7" y="430.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.06%)</title><rect x="366.7" y="403.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="369.7" y="414.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.06%)</title><rect x="366.7" y="387.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="369.7" y="398.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (1 samples, 0.06%)</title><rect x="366.7" y="371.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="369.7" y="382.0"></text>
</g>
<g>
<title>walk_component (1 samples, 0.06%)</title><rect x="366.7" y="355.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="369.7" y="366.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.06%)</title><rect x="366.7" y="339.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="369.7" y="350.0"></text>
</g>
<g>
<title>__d_lookup_rcu (1 samples, 0.06%)</title><rect x="366.7" y="323.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="369.7" y="334.0"></text>
</g>
<g>
<title>getname_flags (3 samples, 0.18%)</title><rect x="367.4" y="403.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="370.4" y="414.0"></text>
</g>
<g>
<title>strncpy_from_user (3 samples, 0.18%)</title><rect x="367.4" y="387.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.4" y="398.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="368.9" y="371.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.9" y="382.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="368.9" y="355.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="371.9" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.06%)</title><rect x="369.6" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (1 samples, 0.06%)</title><rect x="369.6" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.06%)</title><rect x="369.6" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.06%)</title><rect x="369.6" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (1 samples, 0.06%)</title><rect x="369.6" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.6" y="558.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (1 samples, 0.06%)</title><rect x="369.6" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.6" y="542.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (1 samples, 0.06%)</title><rect x="369.6" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.6" y="526.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (1 samples, 0.06%)</title><rect x="369.6" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.6" y="510.0"></text>
</g>
<g>
<title>__libc_close (1 samples, 0.06%)</title><rect x="369.6" y="483.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="372.6" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="369.6" y="467.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="372.6" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="369.6" y="451.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="372.6" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="369.6" y="435.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="372.6" y="446.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.06%)</title><rect x="369.6" y="419.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="372.6" y="430.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.06%)</title><rect x="369.6" y="403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="372.6" y="414.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="369.6" y="387.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="372.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.24%)</title><rect x="370.3" y="611.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.24%)</title><rect x="370.3" y="595.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.24%)</title><rect x="370.3" y="579.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.06%)</title><rect x="370.3" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="373.3" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.06%)</title><rect x="370.3" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.3" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.06%)</title><rect x="370.3" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="370.3" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.3" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="370.3" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.3" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="370.3" y="483.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="373.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.18%)</title><rect x="371.0" y="563.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.18%)</title><rect x="371.0" y="547.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.18%)</title><rect x="371.0" y="531.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.0" y="542.0"></text>
</g>
<g>
<title>__pread64 (3 samples, 0.18%)</title><rect x="371.0" y="515.0" width="2.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="374.0" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="371.7" y="499.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="374.7" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="371.7" y="483.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="374.7" y="494.0"></text>
</g>
<g>
<title>ksys_pread64 (2 samples, 0.12%)</title><rect x="371.7" y="467.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="374.7" y="478.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.12%)</title><rect x="371.7" y="451.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="374.7" y="462.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.12%)</title><rect x="371.7" y="435.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="374.7" y="446.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (1 samples, 0.06%)</title><rect x="371.7" y="419.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="374.7" y="430.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="372.4" y="419.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="375.4" y="430.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="372.4" y="403.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="375.4" y="414.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.06%)</title><rect x="372.4" y="387.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.4" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="372.4" y="371.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="375.4" y="382.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (21 samples, 1.25%)</title><rect x="373.1" y="691.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.1" y="702.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (21 samples, 1.25%)</title><rect x="373.1" y="675.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (21 samples, 1.25%)</title><rect x="373.1" y="659.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (21 samples, 1.25%)</title><rect x="373.1" y="643.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (21 samples, 1.25%)</title><rect x="373.1" y="627.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (21 samples, 1.25%)</title><rect x="373.1" y="611.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.1" y="622.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="373.1" y="595.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="376.1" y="606.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (20 samples, 1.19%)</title><rect x="373.8" y="595.0" width="14.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="376.8" y="606.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (20 samples, 1.19%)</title><rect x="373.8" y="579.0" width="14.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="376.8" y="590.0"></text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (2 samples, 0.12%)</title><rect x="373.8" y="563.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="376.8" y="574.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (18 samples, 1.07%)</title><rect x="375.2" y="563.0" width="12.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="378.2" y="574.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.06%)</title><rect x="375.2" y="547.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="378.2" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (17 samples, 1.01%)</title><rect x="375.9" y="547.0" width="12.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="378.9" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="378.7" y="531.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="381.7" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (5 samples, 0.30%)</title><rect x="379.4" y="531.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="382.4" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (4 samples, 0.24%)</title><rect x="379.4" y="515.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="382.4" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="379.4" y="499.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="382.4" y="510.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (2 samples, 0.12%)</title><rect x="380.1" y="499.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="383.1" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="380.8" y="483.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="383.8" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="380.8" y="467.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="383.8" y="478.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1 samples, 0.06%)</title><rect x="380.8" y="451.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="383.8" y="462.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="381.5" y="499.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="384.5" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="381.5" y="483.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="384.5" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="381.5" y="467.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="384.5" y="478.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1 samples, 0.06%)</title><rect x="381.5" y="451.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="384.5" y="462.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (1 samples, 0.06%)</title><rect x="382.2" y="515.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="385.2" y="526.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.18%)</title><rect x="382.9" y="531.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="385.9" y="542.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.12%)</title><rect x="382.9" y="515.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="385.9" y="526.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="383.6" y="499.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="386.6" y="510.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="384.3" y="515.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="387.3" y="526.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (1 samples, 0.06%)</title><rect x="385.0" y="531.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="388.0" y="542.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.18%)</title><rect x="385.7" y="531.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="388.7" y="542.0"></text>
</g>
<g>
<title>CodeBlob::is_compiled() const (1 samples, 0.06%)</title><rect x="385.7" y="515.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="388.7" y="526.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.12%)</title><rect x="386.4" y="515.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="389.4" y="526.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.12%)</title><rect x="386.4" y="499.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="389.4" y="510.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="387.1" y="483.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="390.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.iterator (1,026 samples, 61.18%)</title><rect x="387.9" y="691.0" width="721.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.9" y="702.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (272 samples, 16.22%)</title><rect x="387.9" y="675.0" width="191.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.9" y="686.0">com/google/common/collect..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (272 samples, 16.22%)</title><rect x="387.9" y="659.0" width="191.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.9" y="670.0">com/google/common/collect..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (260 samples, 15.50%)</title><rect x="387.9" y="643.0" width="182.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.9" y="654.0">java/util/PriorityQueue...</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (260 samples, 15.50%)</title><rect x="387.9" y="627.0" width="182.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.9" y="638.0">java/util/PriorityQueue...</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (260 samples, 15.50%)</title><rect x="387.9" y="611.0" width="182.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.9" y="622.0">java/util/PriorityQueue...</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (260 samples, 15.50%)</title><rect x="387.9" y="595.0" width="182.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.9" y="606.0">java/util/PriorityQueue...</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (260 samples, 15.50%)</title><rect x="387.9" y="579.0" width="182.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.9" y="590.0">com/google/common/collec..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (260 samples, 15.50%)</title><rect x="387.9" y="563.0" width="182.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.9" y="574.0">com/google/common/collec..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.12%)</title><rect x="387.9" y="547.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (1 samples, 0.06%)</title><rect x="388.6" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (1 samples, 0.06%)</title><rect x="388.6" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (1 samples, 0.06%)</title><rect x="388.6" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.getElementSize (1 samples, 0.06%)</title><rect x="388.6" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$113/19489153.compare (258 samples, 15.38%)</title><rect x="389.3" y="547.0" width="181.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.3" y="558.0">ru/mail/polis/dao/s3pon..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.06%)</title><rect x="389.3" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (257 samples, 15.32%)</title><rect x="390.0" y="531.0" width="180.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.0" y="542.0">ru/mail/polis/dao/s3pon..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (257 samples, 15.32%)</title><rect x="390.0" y="515.0" width="180.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.0" y="526.0">ru/mail/polis/dao/s3pon..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$117/196234348.compare (257 samples, 15.32%)</title><rect x="390.0" y="499.0" width="180.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.0" y="510.0">java/util/Comparator$$L..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (257 samples, 15.32%)</title><rect x="390.0" y="483.0" width="180.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.0" y="494.0">java/util/Comparator.la..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$115/737417899.compare (257 samples, 15.32%)</title><rect x="390.0" y="467.0" width="180.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.0" y="478.0">java/util/Comparator$$L..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (257 samples, 15.32%)</title><rect x="390.0" y="451.0" width="180.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.0" y="462.0">java/util/Comparator.la..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$114/1313476938.apply (246 samples, 14.67%)</title><rect x="390.0" y="435.0" width="173.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.0" y="446.0">ru/mail/polis/dao/s3po..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (244 samples, 14.55%)</title><rect x="391.4" y="419.0" width="171.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.4" y="430.0">ru/mail/polis/dao/s3po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.72%)</title><rect x="391.4" y="403.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.72%)</title><rect x="391.4" y="387.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.4" y="398.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.12%)</title><rect x="391.4" y="371.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="394.4" y="382.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.12%)</title><rect x="391.4" y="355.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="394.4" y="366.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.12%)</title><rect x="391.4" y="339.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="394.4" y="350.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.12%)</title><rect x="391.4" y="323.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="394.4" y="334.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1 samples, 0.06%)</title><rect x="391.4" y="307.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="394.4" y="318.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="392.1" y="307.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="395.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.60%)</title><rect x="392.8" y="371.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.8" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.60%)</title><rect x="392.8" y="355.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.8" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (105 samples, 6.26%)</title><rect x="399.8" y="403.0" width="73.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.8" y="414.0">java/nio..</text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (99 samples, 5.90%)</title><rect x="400.5" y="387.0" width="69.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.5" y="398.0">java/ni..</text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (98 samples, 5.84%)</title><rect x="400.5" y="371.0" width="69.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="403.5" y="382.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (98 samples, 5.84%)</title><rect x="400.5" y="355.0" width="69.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.5" y="366.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (98 samples, 5.84%)</title><rect x="400.5" y="339.0" width="69.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.5" y="350.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (6 samples, 0.36%)</title><rect x="400.5" y="323.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="403.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (6 samples, 0.36%)</title><rect x="400.5" y="307.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.5" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (5 samples, 0.30%)</title><rect x="400.5" y="291.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.5" y="302.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.06%)</title><rect x="400.5" y="275.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="403.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (4 samples, 0.24%)</title><rect x="401.2" y="275.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (4 samples, 0.24%)</title><rect x="401.2" y="259.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.2" y="270.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (3 samples, 0.18%)</title><rect x="401.2" y="243.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.2" y="254.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (3 samples, 0.18%)</title><rect x="401.2" y="227.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.insert (1 samples, 0.06%)</title><rect x="403.3" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="406.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="404.0" y="291.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory$Flags.toFlags (6 samples, 0.36%)</title><rect x="404.7" y="323.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.7" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (3 samples, 0.18%)</title><rect x="405.4" y="307.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.4" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.18%)</title><rect x="405.4" y="291.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.12%)</title><rect x="407.6" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.6" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="408.3" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="411.3" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="408.3" y="275.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="408.3" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (86 samples, 5.13%)</title><rect x="409.0" y="323.0" width="60.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.0" y="334.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (86 samples, 5.13%)</title><rect x="409.0" y="307.0" width="60.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.0" y="318.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/fs/NativeBuffer.release (1 samples, 0.06%)</title><rect x="409.7" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.7" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="409.7" y="275.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="412.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.copyToNativeBuffer (5 samples, 0.30%)</title><rect x="410.4" y="291.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.copyCStringToNativeBuffer (1 samples, 0.06%)</title><rect x="411.1" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.06%)</title><rect x="411.1" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.06%)</title><rect x="411.1" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.06%)</title><rect x="411.1" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.06%)</title><rect x="411.1" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.1" y="222.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.getNativeBufferFromCache (3 samples, 0.18%)</title><rect x="411.8" y="275.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.8" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.18%)</title><rect x="411.8" y="259.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.8" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.18%)</title><rect x="411.8" y="243.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (79 samples, 4.71%)</title><rect x="413.9" y="291.0" width="55.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.9" y="302.0">sun/n..</text>
</g>
<g>
<title>[unknown] (77 samples, 4.59%)</title><rect x="415.3" y="275.0" width="54.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="418.3" y="286.0">[unkn..</text>
</g>
<g>
<title>__libc_open64 (76 samples, 4.53%)</title><rect x="415.3" y="259.0" width="53.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="418.3" y="270.0">__lib..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (75 samples, 4.47%)</title><rect x="416.0" y="243.0" width="52.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="419.0" y="254.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (75 samples, 4.47%)</title><rect x="416.0" y="227.0" width="52.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="419.0" y="238.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_openat (1 samples, 0.06%)</title><rect x="417.4" y="211.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="420.4" y="222.0"></text>
</g>
<g>
<title>do_sys_open (72 samples, 4.29%)</title><rect x="418.1" y="211.0" width="50.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="421.1" y="222.0">do_sy..</text>
</g>
<g>
<title>__alloc_fd (4 samples, 0.24%)</title><rect x="418.1" y="195.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.1" y="206.0"></text>
</g>
<g>
<title>find_next_zero_bit (1 samples, 0.06%)</title><rect x="420.2" y="179.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.2" y="190.0"></text>
</g>
<g>
<title>do_filp_open (61 samples, 3.64%)</title><rect x="420.9" y="195.0" width="42.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="423.9" y="206.0">do_f..</text>
</g>
<g>
<title>path_openat (60 samples, 3.58%)</title><rect x="420.9" y="179.0" width="42.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.9" y="190.0">path..</text>
</g>
<g>
<title>alloc_empty_file (13 samples, 0.78%)</title><rect x="421.6" y="163.0" width="9.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.6" y="174.0"></text>
</g>
<g>
<title>__alloc_file (13 samples, 0.78%)</title><rect x="421.6" y="147.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="424.6" y="158.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.18%)</title><rect x="423.7" y="131.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="426.7" y="142.0"></text>
</g>
<g>
<title>memset (1 samples, 0.06%)</title><rect x="425.1" y="115.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="428.1" y="126.0"></text>
</g>
<g>
<title>security_file_alloc (7 samples, 0.42%)</title><rect x="425.8" y="131.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="428.8" y="142.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.24%)</title><rect x="426.6" y="115.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.6" y="126.0"></text>
</g>
<g>
<title>memset (2 samples, 0.12%)</title><rect x="428.0" y="99.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="431.0" y="110.0"></text>
</g>
<g>
<title>selinux_file_alloc_security (2 samples, 0.12%)</title><rect x="429.4" y="115.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.4" y="126.0"></text>
</g>
<g>
<title>complete_walk (1 samples, 0.06%)</title><rect x="430.8" y="163.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="433.8" y="174.0"></text>
</g>
<g>
<title>unlazy_walk (1 samples, 0.06%)</title><rect x="430.8" y="147.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="433.8" y="158.0"></text>
</g>
<g>
<title>legitimize_path.isra.0 (1 samples, 0.06%)</title><rect x="430.8" y="131.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="433.8" y="142.0"></text>
</g>
<g>
<title>lockref_get_not_dead (1 samples, 0.06%)</title><rect x="430.8" y="115.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="433.8" y="126.0"></text>
</g>
<g>
<title>do_dentry_open (14 samples, 0.83%)</title><rect x="431.5" y="163.0" width="9.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="434.5" y="174.0"></text>
</g>
<g>
<title>errseq_sample (1 samples, 0.06%)</title><rect x="431.5" y="147.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="434.5" y="158.0"></text>
</g>
<g>
<title>ext4_file_open?[ext4] (8 samples, 0.48%)</title><rect x="432.2" y="147.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="435.2" y="158.0"></text>
</g>
<g>
<title>fscrypt_file_open (4 samples, 0.24%)</title><rect x="435.0" y="131.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="438.0" y="142.0"></text>
</g>
<g>
<title>dget_parent (1 samples, 0.06%)</title><rect x="435.0" y="115.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.0" y="126.0"></text>
</g>
<g>
<title>lockref_get_not_zero (1 samples, 0.06%)</title><rect x="435.0" y="99.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="438.0" y="110.0"></text>
</g>
<g>
<title>dput (3 samples, 0.18%)</title><rect x="435.7" y="115.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="438.7" y="126.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="435.7" y="99.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="438.7" y="110.0"></text>
</g>
<g>
<title>lockref_put_return (2 samples, 0.12%)</title><rect x="436.4" y="99.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="439.4" y="110.0"></text>
</g>
<g>
<title>lockref_get (2 samples, 0.12%)</title><rect x="437.8" y="147.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="440.8" y="158.0"></text>
</g>
<g>
<title>security_file_open (3 samples, 0.18%)</title><rect x="439.2" y="147.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.2" y="158.0"></text>
</g>
<g>
<title>selinux_file_open (3 samples, 0.18%)</title><rect x="439.2" y="131.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.2" y="142.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.18%)</title><rect x="439.2" y="115.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.2" y="126.0"></text>
</g>
<g>
<title>ima_file_check (1 samples, 0.06%)</title><rect x="441.3" y="163.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="444.3" y="174.0"></text>
</g>
<g>
<title>security_task_getsecid (1 samples, 0.06%)</title><rect x="441.3" y="147.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="444.3" y="158.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (17 samples, 1.01%)</title><rect x="442.0" y="163.0" width="12.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="445.0" y="174.0"></text>
</g>
<g>
<title>inode_permission (2 samples, 0.12%)</title><rect x="443.4" y="147.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="446.4" y="158.0"></text>
</g>
<g>
<title>generic_permission (2 samples, 0.12%)</title><rect x="443.4" y="131.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="446.4" y="142.0"></text>
</g>
<g>
<title>in_group_p (1 samples, 0.06%)</title><rect x="444.1" y="115.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="447.1" y="126.0"></text>
</g>
<g>
<title>security_inode_permission (13 samples, 0.78%)</title><rect x="444.8" y="147.0" width="9.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="447.8" y="158.0"></text>
</g>
<g>
<title>selinux_inode_permission (13 samples, 0.78%)</title><rect x="444.8" y="131.0" width="9.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="447.8" y="142.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (4 samples, 0.24%)</title><rect x="451.2" y="115.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="454.2" y="126.0"></text>
</g>
<g>
<title>lookup_fast (3 samples, 0.18%)</title><rect x="454.0" y="163.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="457.0" y="174.0"></text>
</g>
<g>
<title>__d_lookup_rcu (1 samples, 0.06%)</title><rect x="455.4" y="147.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="458.4" y="158.0"></text>
</g>
<g>
<title>may_open.isra.0 (6 samples, 0.36%)</title><rect x="456.1" y="163.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="459.1" y="174.0"></text>
</g>
<g>
<title>security_inode_permission (6 samples, 0.36%)</title><rect x="456.1" y="147.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="459.1" y="158.0"></text>
</g>
<g>
<title>selinux_inode_permission (6 samples, 0.36%)</title><rect x="456.1" y="131.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="459.1" y="142.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (1 samples, 0.06%)</title><rect x="459.6" y="115.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.6" y="126.0"></text>
</g>
<g>
<title>path_init (3 samples, 0.18%)</title><rect x="460.3" y="163.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.3" y="174.0"></text>
</g>
<g>
<title>nd_jump_root (1 samples, 0.06%)</title><rect x="460.3" y="147.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="463.3" y="158.0"></text>
</g>
<g>
<title>set_root (2 samples, 0.12%)</title><rect x="461.0" y="147.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.0" y="158.0"></text>
</g>
<g>
<title>terminate_walk (1 samples, 0.06%)</title><rect x="462.4" y="163.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.4" y="174.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="462.4" y="147.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="465.4" y="158.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.06%)</title><rect x="462.4" y="131.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="465.4" y="142.0"></text>
</g>
<g>
<title>restore_nameidata (1 samples, 0.06%)</title><rect x="463.1" y="179.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="466.1" y="190.0"></text>
</g>
<g>
<title>getname_flags (6 samples, 0.36%)</title><rect x="463.8" y="195.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.8" y="206.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="464.5" y="179.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="467.5" y="190.0"></text>
</g>
<g>
<title>strncpy_from_user (4 samples, 0.24%)</title><rect x="465.3" y="179.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="468.3" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="468.1" y="195.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.1" y="206.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="468.8" y="259.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="471.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileSystem (1 samples, 0.06%)</title><rect x="469.5" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileSystem (1 samples, 0.06%)</title><rect x="469.5" y="355.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.5" y="366.0"></text>
</g>
<g>
<title>java/util/Collections.addAll (4 samples, 0.24%)</title><rect x="470.2" y="387.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.2" y="398.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.24%)</title><rect x="470.2" y="371.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.2" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.24%)</title><rect x="470.2" y="355.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.2" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.24%)</title><rect x="470.2" y="339.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.2" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.12%)</title><rect x="470.2" y="323.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.2" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.12%)</title><rect x="471.6" y="323.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.6" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="473.0" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.0" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (52 samples, 3.10%)</title><rect x="473.7" y="403.0" width="36.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.7" y="414.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (52 samples, 3.10%)</title><rect x="473.7" y="387.0" width="36.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.7" y="398.0">sun..</text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (52 samples, 3.10%)</title><rect x="473.7" y="371.0" width="36.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.7" y="382.0">jdk..</text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (51 samples, 3.04%)</title><rect x="473.7" y="355.0" width="35.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.7" y="366.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (51 samples, 3.04%)</title><rect x="473.7" y="339.0" width="35.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.7" y="350.0">sun..</text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (51 samples, 3.04%)</title><rect x="473.7" y="323.0" width="35.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.7" y="334.0">jav..</text>
</g>
<g>
<title>java/io/FileDescriptor.close (51 samples, 3.04%)</title><rect x="473.7" y="307.0" width="35.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.7" y="318.0">jav..</text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (51 samples, 3.04%)</title><rect x="473.7" y="291.0" width="35.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.7" y="302.0">jav..</text>
</g>
<g>
<title>__libc_close (39 samples, 2.33%)</title><rect x="473.7" y="275.0" width="27.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="476.7" y="286.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 2.09%)</title><rect x="476.5" y="259.0" width="24.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="479.5" y="270.0">e..</text>
</g>
<g>
<title>do_syscall_64 (35 samples, 2.09%)</title><rect x="476.5" y="243.0" width="24.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="479.5" y="254.0">d..</text>
</g>
<g>
<title>__x64_sys_close (3 samples, 0.18%)</title><rect x="480.7" y="227.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="483.7" y="238.0"></text>
</g>
<g>
<title>__close_fd (1 samples, 0.06%)</title><rect x="480.7" y="211.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.7" y="222.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="480.7" y="195.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="483.7" y="206.0"></text>
</g>
<g>
<title>filp_close (2 samples, 0.12%)</title><rect x="481.4" y="211.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="484.4" y="222.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.12%)</title><rect x="481.4" y="195.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.4" y="206.0"></text>
</g>
<g>
<title>task_work_add (1 samples, 0.06%)</title><rect x="482.1" y="179.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.1" y="190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (26 samples, 1.55%)</title><rect x="482.8" y="227.0" width="18.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="485.8" y="238.0"></text>
</g>
<g>
<title>task_work_run (24 samples, 1.43%)</title><rect x="484.3" y="211.0" width="16.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="487.3" y="222.0"></text>
</g>
<g>
<title>__call_rcu (2 samples, 0.12%)</title><rect x="485.7" y="195.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="488.7" y="206.0"></text>
</g>
<g>
<title>__fput (20 samples, 1.19%)</title><rect x="487.1" y="195.0" width="14.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.1" y="206.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="488.5" y="179.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="491.5" y="190.0"></text>
</g>
<g>
<title>dput (6 samples, 0.36%)</title><rect x="489.2" y="179.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="492.2" y="190.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="489.2" y="163.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="492.2" y="174.0"></text>
</g>
<g>
<title>lockref_put_return (5 samples, 0.30%)</title><rect x="489.9" y="163.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="492.9" y="174.0"></text>
</g>
<g>
<title>ext4_release_file?[ext4] (4 samples, 0.24%)</title><rect x="493.4" y="179.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.4" y="190.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.12%)</title><rect x="496.2" y="179.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="499.2" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="497.6" y="179.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="500.6" y="190.0"></text>
</g>
<g>
<title>locks_remove_file (1 samples, 0.06%)</title><rect x="498.3" y="179.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="501.3" y="190.0"></text>
</g>
<g>
<title>mntput (2 samples, 0.12%)</title><rect x="499.0" y="179.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="502.0" y="190.0"></text>
</g>
<g>
<title>module_put (1 samples, 0.06%)</title><rect x="500.4" y="179.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.4" y="190.0"></text>
</g>
<g>
<title>fileDescriptorClose (11 samples, 0.66%)</title><rect x="501.1" y="275.0" width="7.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="504.1" y="286.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="501.1" y="259.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="504.1" y="270.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (6 samples, 0.36%)</title><rect x="501.8" y="259.0" width="4.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="504.8" y="270.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.06%)</title><rect x="503.2" y="243.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="506.2" y="254.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.06%)</title><rect x="504.0" y="243.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="507.0" y="254.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (2 samples, 0.12%)</title><rect x="504.7" y="243.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="507.7" y="254.0"></text>
</g>
<g>
<title>jni_SetIntField (4 samples, 0.24%)</title><rect x="506.1" y="259.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="509.1" y="270.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="508.2" y="243.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="511.2" y="254.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.06%)</title><rect x="508.9" y="275.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="511.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.remove (1 samples, 0.06%)</title><rect x="509.6" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (75 samples, 4.47%)</title><rect x="510.3" y="403.0" width="52.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.3" y="414.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (75 samples, 4.47%)</title><rect x="510.3" y="387.0" width="52.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.3" y="398.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.54%)</title><rect x="510.3" y="371.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.3" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (9 samples, 0.54%)</title><rect x="510.3" y="355.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.3" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="515.9" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.9" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.06%)</title><rect x="515.9" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.9" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.06%)</title><rect x="515.9" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.06%)</title><rect x="516.6" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.6" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.06%)</title><rect x="516.6" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.6" y="366.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="516.6" y="339.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="519.6" y="350.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="516.6" y="323.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="519.6" y="334.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="516.6" y="307.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="519.6" y="318.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="516.6" y="291.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="519.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (63 samples, 3.76%)</title><rect x="517.3" y="371.0" width="44.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.3" y="382.0">sun/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.24%)</title><rect x="518.0" y="355.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.24%)</title><rect x="518.0" y="339.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.24%)</title><rect x="518.0" y="323.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.24%)</title><rect x="518.0" y="307.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.0" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.24%)</title><rect x="518.0" y="291.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.0" y="302.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.24%)</title><rect x="518.0" y="275.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="521.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (53 samples, 3.16%)</title><rect x="520.8" y="355.0" width="37.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.8" y="366.0">sun..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.06%)</title><rect x="520.8" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.8" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.06%)</title><rect x="520.8" y="323.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="520.8" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.8" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="520.8" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (52 samples, 3.10%)</title><rect x="521.5" y="339.0" width="36.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.5" y="350.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (52 samples, 3.10%)</title><rect x="521.5" y="323.0" width="36.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.5" y="334.0">sun..</text>
</g>
<g>
<title>__pread64 (50 samples, 2.98%)</title><rect x="522.2" y="307.0" width="35.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="525.2" y="318.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 2.86%)</title><rect x="523.7" y="291.0" width="33.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.7" y="302.0">en..</text>
</g>
<g>
<title>do_syscall_64 (48 samples, 2.86%)</title><rect x="523.7" y="275.0" width="33.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="526.7" y="286.0">do..</text>
</g>
<g>
<title>ksys_pread64 (46 samples, 2.74%)</title><rect x="525.1" y="259.0" width="32.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.1" y="270.0">ks..</text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="525.1" y="243.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="528.1" y="254.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="525.1" y="227.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.1" y="238.0"></text>
</g>
<g>
<title>vfs_read (45 samples, 2.68%)</title><rect x="525.8" y="243.0" width="31.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="528.8" y="254.0">vf..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="526.5" y="227.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="529.5" y="238.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.12%)</title><rect x="527.2" y="227.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="530.2" y="238.0"></text>
</g>
<g>
<title>fsnotify (6 samples, 0.36%)</title><rect x="528.6" y="227.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="531.6" y="238.0"></text>
</g>
<g>
<title>new_sync_read (35 samples, 2.09%)</title><rect x="532.8" y="227.0" width="24.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="535.8" y="238.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (5 samples, 0.30%)</title><rect x="536.3" y="211.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="539.3" y="222.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="539.1" y="195.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="542.1" y="206.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="539.1" y="179.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.1" y="190.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="539.1" y="163.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="542.1" y="174.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="539.1" y="147.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="542.1" y="158.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.06%)</title><rect x="539.1" y="131.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="542.1" y="142.0"></text>
</g>
<g>
<title>rcu_do_batch (1 samples, 0.06%)</title><rect x="539.1" y="115.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="542.1" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="539.1" y="99.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="542.1" y="110.0"></text>
</g>
<g>
<title>generic_file_read_iter (25 samples, 1.49%)</title><rect x="539.8" y="211.0" width="17.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="542.8" y="222.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="540.5" y="195.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="543.5" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (19 samples, 1.13%)</title><rect x="541.2" y="195.0" width="13.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="544.2" y="206.0"></text>
</g>
<g>
<title>copyout (17 samples, 1.01%)</title><rect x="542.7" y="179.0" width="11.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="545.7" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_string (17 samples, 1.01%)</title><rect x="542.7" y="163.0" width="11.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="545.7" y="174.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.24%)</title><rect x="554.6" y="195.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="557.6" y="206.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.24%)</title><rect x="554.6" y="179.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="557.6" y="190.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.12%)</title><rect x="556.0" y="163.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="559.0" y="174.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.12%)</title><rect x="556.0" y="147.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="559.0" y="158.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="557.4" y="307.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="560.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.24%)</title><rect x="558.1" y="355.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.1" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="558.8" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.8" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="559.5" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="560.2" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="560.9" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.06%)</title><rect x="560.9" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.12%)</title><rect x="561.7" y="371.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.12%)</title><rect x="561.7" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$116/1784472427.apply (11 samples, 0.66%)</title><rect x="563.1" y="435.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (11 samples, 0.66%)</title><rect x="563.1" y="419.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="563.1" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="563.1" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="563.1" y="371.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.1" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (5 samples, 0.30%)</title><rect x="563.8" y="403.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.8" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (5 samples, 0.30%)</title><rect x="563.8" y="387.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (5 samples, 0.30%)</title><rect x="563.8" y="371.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (5 samples, 0.30%)</title><rect x="563.8" y="355.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (5 samples, 0.30%)</title><rect x="563.8" y="339.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (1 samples, 0.06%)</title><rect x="563.8" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="563.8" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.8" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.06%)</title><rect x="563.8" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="563.8" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="566.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="563.8" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.8" y="270.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.06%)</title><rect x="563.8" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (4 samples, 0.24%)</title><rect x="564.5" y="323.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (4 samples, 0.24%)</title><rect x="564.5" y="307.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (4 samples, 0.24%)</title><rect x="564.5" y="291.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.5" y="302.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.24%)</title><rect x="564.5" y="275.0" width="2.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="567.5" y="286.0"></text>
</g>
<g>
<title>__libc_open64 (3 samples, 0.18%)</title><rect x="564.5" y="259.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="567.5" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="564.5" y="243.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="567.5" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="564.5" y="227.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="567.5" y="238.0"></text>
</g>
<g>
<title>do_sys_open (3 samples, 0.18%)</title><rect x="564.5" y="211.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="567.5" y="222.0"></text>
</g>
<g>
<title>do_filp_open (3 samples, 0.18%)</title><rect x="564.5" y="195.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="567.5" y="206.0"></text>
</g>
<g>
<title>path_openat (3 samples, 0.18%)</title><rect x="564.5" y="179.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="567.5" y="190.0"></text>
</g>
<g>
<title>complete_walk (1 samples, 0.06%)</title><rect x="564.5" y="163.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="567.5" y="174.0"></text>
</g>
<g>
<title>do_dentry_open (1 samples, 0.06%)</title><rect x="565.2" y="163.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="568.2" y="174.0"></text>
</g>
<g>
<title>ext4_file_open?[ext4] (1 samples, 0.06%)</title><rect x="565.2" y="147.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="568.2" y="158.0"></text>
</g>
<g>
<title>fscrypt_file_open (1 samples, 0.06%)</title><rect x="565.2" y="131.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="568.2" y="142.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="565.2" y="115.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="568.2" y="126.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.06%)</title><rect x="565.2" y="99.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="568.2" y="110.0"></text>
</g>
<g>
<title>terminate_walk (1 samples, 0.06%)</title><rect x="565.9" y="163.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="568.9" y="174.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="565.9" y="147.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="568.9" y="158.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.06%)</title><rect x="565.9" y="131.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="568.9" y="142.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="566.6" y="259.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="569.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.30%)</title><rect x="567.3" y="403.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.30%)</title><rect x="567.3" y="387.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.3" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.06%)</title><rect x="567.3" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.3" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.06%)</title><rect x="567.3" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.24%)</title><rect x="568.0" y="371.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.12%)</title><rect x="568.7" y="355.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.12%)</title><rect x="568.7" y="339.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.12%)</title><rect x="568.7" y="323.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.7" y="334.0"></text>
</g>
<g>
<title>__pread64 (2 samples, 0.12%)</title><rect x="568.7" y="307.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="571.7" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="568.7" y="291.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="571.7" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="568.7" y="275.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="571.7" y="286.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.06%)</title><rect x="569.4" y="259.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="572.4" y="270.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="569.4" y="243.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="572.4" y="254.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.06%)</title><rect x="569.4" y="227.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="572.4" y="238.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="569.4" y="211.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="572.4" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="569.4" y="195.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="572.4" y="206.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.06%)</title><rect x="569.4" y="179.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="572.4" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="569.4" y="163.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="572.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="570.1" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="570.1" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.1" y="350.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (11 samples, 0.66%)</title><rect x="570.8" y="643.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (11 samples, 0.66%)</title><rect x="570.8" y="627.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (11 samples, 0.66%)</title><rect x="570.8" y="611.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.8" y="622.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.12%)</title><rect x="571.5" y="595.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.5" y="606.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.estimateSize (2 samples, 0.12%)</title><rect x="571.5" y="579.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1 samples, 0.06%)</title><rect x="571.5" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (1 samples, 0.06%)</title><rect x="571.5" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.06%)</title><rect x="571.5" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.06%)</title><rect x="571.5" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$$Lambda$110/168895866.apply (1 samples, 0.06%)</title><rect x="572.2" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.06%)</title><rect x="572.9" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.18%)</title><rect x="573.6" y="595.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$104/163226315.getAsBoolean (2 samples, 0.12%)</title><rect x="574.3" y="579.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.12%)</title><rect x="574.3" y="563.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.3" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$IteratorSpliterator.tryAdvance (2 samples, 0.12%)</title><rect x="574.3" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.12%)</title><rect x="574.3" y="531.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.06%)</title><rect x="574.3" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.3" y="526.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="574.3" y="499.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="577.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$$Lambda$110/168895866.apply (1 samples, 0.06%)</title><rect x="575.0" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table.lambda$iterator$2 (1 samples, 0.06%)</title><rect x="575.0" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.of (1 samples, 0.06%)</title><rect x="575.0" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (2 samples, 0.12%)</title><rect x="575.7" y="595.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (2 samples, 0.12%)</title><rect x="577.1" y="595.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="577.8" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.hasNext (1 samples, 0.06%)</title><rect x="578.5" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.5" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (446 samples, 26.60%)</title><rect x="579.2" y="675.0" width="313.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.2" y="686.0">java/util/ArrayList.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$112/683632852.accept (445 samples, 26.54%)</title><rect x="579.9" y="659.0" width="313.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.9" y="670.0">ru/mail/polis/dao/s3ponia/PersistenceDAO$$..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$iterator$3 (445 samples, 26.54%)</title><rect x="579.9" y="643.0" width="313.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.9" y="654.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.l..</text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.12%)</title><rect x="579.9" y="627.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.iterator (443 samples, 26.42%)</title><rect x="581.4" y="627.0" width="311.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.4" y="638.0">ru/mail/polis/dao/s3ponia/DiskTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt; (443 samples, 26.42%)</title><rect x="581.4" y="611.0" width="311.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.4" y="622.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTa..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex (443 samples, 26.42%)</title><rect x="581.4" y="595.0" width="311.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.4" y="606.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTa..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.12%)</title><rect x="582.8" y="579.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.8" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="582.8" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.06%)</title><rect x="583.5" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (439 samples, 26.18%)</title><rect x="584.2" y="579.0" width="308.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.2" y="590.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCe..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 1.19%)</title><rect x="584.2" y="563.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 1.07%)</title><rect x="585.6" y="547.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.6" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.24%)</title><rect x="585.6" y="531.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="588.6" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.24%)</title><rect x="585.6" y="515.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="588.6" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.24%)</title><rect x="585.6" y="499.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="588.6" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.24%)</title><rect x="585.6" y="483.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="588.6" y="494.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1 samples, 0.06%)</title><rect x="585.6" y="467.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="588.6" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.12%)</title><rect x="586.3" y="467.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="589.3" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.12%)</title><rect x="586.3" y="451.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="589.3" y="462.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.06%)</title><rect x="586.3" y="435.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="589.3" y="446.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.06%)</title><rect x="587.0" y="435.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="590.0" y="446.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.06%)</title><rect x="587.0" y="419.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="590.0" y="430.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="587.0" y="403.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="590.0" y="414.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.06%)</title><rect x="587.0" y="387.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="590.0" y="398.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.06%)</title><rect x="587.0" y="371.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="590.0" y="382.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="587.7" y="467.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="590.7" y="478.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="587.7" y="451.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="590.7" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.06%)</title><rect x="587.7" y="435.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="590.7" y="446.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.06%)</title><rect x="587.7" y="419.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="590.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.78%)</title><rect x="588.4" y="531.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.4" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.78%)</title><rect x="588.4" y="515.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="596.8" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="596.8" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="596.8" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.06%)</title><rect x="597.5" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.5" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (176 samples, 10.49%)</title><rect x="598.2" y="563.0" width="123.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.2" y="574.0">java/nio/channe..</text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (167 samples, 9.96%)</title><rect x="598.2" y="547.0" width="117.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.2" y="558.0">java/nio/chann..</text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (167 samples, 9.96%)</title><rect x="598.2" y="531.0" width="117.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.2" y="542.0">sun/nio/fs/Uni..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (167 samples, 9.96%)</title><rect x="598.2" y="515.0" width="117.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.2" y="526.0">sun/nio/fs/Uni..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (167 samples, 9.96%)</title><rect x="598.2" y="499.0" width="117.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.2" y="510.0">sun/nio/fs/Uni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (8 samples, 0.48%)</title><rect x="598.2" y="483.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (8 samples, 0.48%)</title><rect x="598.2" y="467.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.2" y="478.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (5 samples, 0.30%)</title><rect x="599.6" y="451.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (5 samples, 0.30%)</title><rect x="599.6" y="435.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (5 samples, 0.30%)</title><rect x="599.6" y="419.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.6" y="430.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (3 samples, 0.18%)</title><rect x="599.6" y="403.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.6" y="414.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (3 samples, 0.18%)</title><rect x="599.6" y="387.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.6" y="398.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.06%)</title><rect x="601.8" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.insert (1 samples, 0.06%)</title><rect x="602.5" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="603.2" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.2" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="603.2" y="435.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="606.2" y="446.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="603.2" y="419.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="606.2" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="603.2" y="403.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="606.2" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="603.2" y="387.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="606.2" y="398.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="603.2" y="371.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="606.2" y="382.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="603.2" y="355.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="606.2" y="366.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="603.2" y="339.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="606.2" y="350.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.06%)</title><rect x="603.2" y="323.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="606.2" y="334.0"></text>
</g>
<g>
<title>HSpaceCounters::update_used(unsigned long) (1 samples, 0.06%)</title><rect x="603.2" y="307.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="606.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory$Flags.toFlags (7 samples, 0.42%)</title><rect x="603.9" y="483.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (3 samples, 0.18%)</title><rect x="604.6" y="467.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.6" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.18%)</title><rect x="604.6" y="451.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.6" y="462.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.18%)</title><rect x="606.7" y="467.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.7" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="607.4" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.4" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="607.4" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.4" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="607.4" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.06%)</title><rect x="608.1" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (152 samples, 9.06%)</title><rect x="608.8" y="483.0" width="106.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.8" y="494.0">sun/nio/fs/Un..</text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (150 samples, 8.94%)</title><rect x="610.2" y="467.0" width="105.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.2" y="478.0">sun/nio/fs/Un..</text>
</g>
<g>
<title>sun/nio/fs/NativeBuffer.release (5 samples, 0.30%)</title><rect x="610.2" y="451.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.2" y="462.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="610.2" y="435.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="613.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.releaseNativeBuffer (3 samples, 0.18%)</title><rect x="611.6" y="435.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.6" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="613.0" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.copyToNativeBuffer (5 samples, 0.30%)</title><rect x="613.7" y="451.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.getNativeBufferFromCache (2 samples, 0.12%)</title><rect x="615.1" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.1" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="615.1" y="419.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.1" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.12%)</title><rect x="615.1" y="403.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getByteArrayForSysCalls (1 samples, 0.06%)</title><rect x="616.5" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (140 samples, 8.35%)</title><rect x="617.2" y="451.0" width="98.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.2" y="462.0">sun/nio/fs/U..</text>
</g>
<g>
<title>[unknown] (136 samples, 8.11%)</title><rect x="620.1" y="435.0" width="95.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="623.1" y="446.0">[unknown]</text>
</g>
<g>
<title>__libc_open64 (136 samples, 8.11%)</title><rect x="620.1" y="419.0" width="95.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="623.1" y="430.0">__libc_open64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (130 samples, 7.75%)</title><rect x="624.3" y="403.0" width="91.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="627.3" y="414.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (130 samples, 7.75%)</title><rect x="624.3" y="387.0" width="91.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="627.3" y="398.0">do_syscall_64</text>
</g>
<g>
<title>do_sys_open (125 samples, 7.45%)</title><rect x="627.8" y="371.0" width="87.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="630.8" y="382.0">do_sys_open</text>
</g>
<g>
<title>__alloc_fd (3 samples, 0.18%)</title><rect x="629.2" y="355.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="632.2" y="366.0"></text>
</g>
<g>
<title>expand_files (1 samples, 0.06%)</title><rect x="629.9" y="339.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="632.9" y="350.0"></text>
</g>
<g>
<title>find_next_zero_bit (1 samples, 0.06%)</title><rect x="630.6" y="339.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.6" y="350.0"></text>
</g>
<g>
<title>__fd_install (1 samples, 0.06%)</title><rect x="631.3" y="355.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="634.3" y="366.0"></text>
</g>
<g>
<title>do_filp_open (105 samples, 6.26%)</title><rect x="632.0" y="355.0" width="73.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="635.0" y="366.0">do_filp_..</text>
</g>
<g>
<title>path_openat (103 samples, 6.14%)</title><rect x="632.0" y="339.0" width="72.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="635.0" y="350.0">path_ope..</text>
</g>
<g>
<title>alloc_empty_file (21 samples, 1.25%)</title><rect x="634.8" y="323.0" width="14.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.8" y="334.0"></text>
</g>
<g>
<title>__alloc_file (20 samples, 1.19%)</title><rect x="635.5" y="307.0" width="14.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="638.5" y="318.0"></text>
</g>
<g>
<title>kmem_cache_alloc (6 samples, 0.36%)</title><rect x="639.1" y="291.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="642.1" y="302.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.30%)</title><rect x="639.1" y="275.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="642.1" y="286.0"></text>
</g>
<g>
<title>memset (1 samples, 0.06%)</title><rect x="642.6" y="275.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="645.6" y="286.0"></text>
</g>
<g>
<title>security_file_alloc (9 samples, 0.54%)</title><rect x="643.3" y="291.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="646.3" y="302.0"></text>
</g>
<g>
<title>kmem_cache_alloc (7 samples, 0.42%)</title><rect x="644.0" y="275.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="647.0" y="286.0"></text>
</g>
<g>
<title>memset (1 samples, 0.06%)</title><rect x="648.2" y="259.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="651.2" y="270.0"></text>
</g>
<g>
<title>selinux_file_alloc_security (1 samples, 0.06%)</title><rect x="648.9" y="275.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="651.9" y="286.0"></text>
</g>
<g>
<title>complete_walk (4 samples, 0.24%)</title><rect x="649.6" y="323.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.6" y="334.0"></text>
</g>
<g>
<title>unlazy_walk (3 samples, 0.18%)</title><rect x="650.3" y="307.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="653.3" y="318.0"></text>
</g>
<g>
<title>legitimize_path.isra.0 (3 samples, 0.18%)</title><rect x="650.3" y="291.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="653.3" y="302.0"></text>
</g>
<g>
<title>__legitimize_mnt (2 samples, 0.12%)</title><rect x="651.0" y="275.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="654.0" y="286.0"></text>
</g>
<g>
<title>do_dentry_open (24 samples, 1.43%)</title><rect x="652.4" y="323.0" width="16.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="655.4" y="334.0"></text>
</g>
<g>
<title>errseq_sample (1 samples, 0.06%)</title><rect x="655.2" y="307.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="658.2" y="318.0"></text>
</g>
<g>
<title>ext4_file_open?[ext4] (6 samples, 0.36%)</title><rect x="655.9" y="307.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="658.9" y="318.0"></text>
</g>
<g>
<title>dquot_file_open (1 samples, 0.06%)</title><rect x="656.6" y="291.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="659.6" y="302.0"></text>
</g>
<g>
<title>generic_file_open (1 samples, 0.06%)</title><rect x="656.6" y="275.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="659.6" y="286.0"></text>
</g>
<g>
<title>fscrypt_file_open (3 samples, 0.18%)</title><rect x="657.3" y="291.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="660.3" y="302.0"></text>
</g>
<g>
<title>dget_parent (2 samples, 0.12%)</title><rect x="657.3" y="275.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="660.3" y="286.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="658.8" y="275.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="661.8" y="286.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.06%)</title><rect x="658.8" y="259.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="661.8" y="270.0"></text>
</g>
<g>
<title>fsverity_file_open (1 samples, 0.06%)</title><rect x="659.5" y="291.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="662.5" y="302.0"></text>
</g>
<g>
<title>file_ra_state_init (3 samples, 0.18%)</title><rect x="660.2" y="307.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="663.2" y="318.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="662.3" y="307.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="665.3" y="318.0"></text>
</g>
<g>
<title>lockref_get (2 samples, 0.12%)</title><rect x="663.0" y="307.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="666.0" y="318.0"></text>
</g>
<g>
<title>path_get (1 samples, 0.06%)</title><rect x="664.4" y="307.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="667.4" y="318.0"></text>
</g>
<g>
<title>security_file_open (6 samples, 0.36%)</title><rect x="665.1" y="307.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="668.1" y="318.0"></text>
</g>
<g>
<title>selinux_file_open (6 samples, 0.36%)</title><rect x="665.1" y="291.0" width="4.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="668.1" y="302.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.06%)</title><rect x="667.9" y="275.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.9" y="286.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="667.9" y="259.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="670.9" y="270.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.06%)</title><rect x="668.6" y="275.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="671.6" y="286.0"></text>
</g>
<g>
<title>ima_file_check (2 samples, 0.12%)</title><rect x="669.3" y="323.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="672.3" y="334.0"></text>
</g>
<g>
<title>security_task_getsecid (2 samples, 0.12%)</title><rect x="669.3" y="307.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="672.3" y="318.0"></text>
</g>
<g>
<title>selinux_task_getsecid (2 samples, 0.12%)</title><rect x="669.3" y="291.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="672.3" y="302.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (29 samples, 1.73%)</title><rect x="670.7" y="323.0" width="20.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.7" y="334.0"></text>
</g>
<g>
<title>inode_permission (4 samples, 0.24%)</title><rect x="674.2" y="307.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="677.2" y="318.0"></text>
</g>
<g>
<title>generic_permission (3 samples, 0.18%)</title><rect x="674.9" y="291.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="677.9" y="302.0"></text>
</g>
<g>
<title>in_group_p (2 samples, 0.12%)</title><rect x="675.6" y="275.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="678.6" y="286.0"></text>
</g>
<g>
<title>security_inode_permission (16 samples, 0.95%)</title><rect x="677.0" y="307.0" width="11.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="680.0" y="318.0"></text>
</g>
<g>
<title>selinux_inode_permission (16 samples, 0.95%)</title><rect x="677.0" y="291.0" width="11.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="680.0" y="302.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (4 samples, 0.24%)</title><rect x="684.1" y="275.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="687.1" y="286.0"></text>
</g>
<g>
<title>inode_security_rcu (2 samples, 0.12%)</title><rect x="686.9" y="275.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="689.9" y="286.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.12%)</title><rect x="686.9" y="259.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="689.9" y="270.0"></text>
</g>
<g>
<title>walk_component (4 samples, 0.24%)</title><rect x="688.3" y="307.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="691.3" y="318.0"></text>
</g>
<g>
<title>lookup_fast (2 samples, 0.12%)</title><rect x="689.7" y="291.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="692.7" y="302.0"></text>
</g>
<g>
<title>__d_lookup_rcu (2 samples, 0.12%)</title><rect x="689.7" y="275.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.7" y="286.0"></text>
</g>
<g>
<title>lookup_fast (4 samples, 0.24%)</title><rect x="691.1" y="323.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="694.1" y="334.0"></text>
</g>
<g>
<title>__d_lookup_rcu (4 samples, 0.24%)</title><rect x="691.1" y="307.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="694.1" y="318.0"></text>
</g>
<g>
<title>may_open.isra.0 (13 samples, 0.78%)</title><rect x="693.9" y="323.0" width="9.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="696.9" y="334.0"></text>
</g>
<g>
<title>inode_permission (1 samples, 0.06%)</title><rect x="695.3" y="307.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="698.3" y="318.0"></text>
</g>
<g>
<title>generic_permission (1 samples, 0.06%)</title><rect x="695.3" y="291.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.3" y="302.0"></text>
</g>
<g>
<title>security_inode_permission (10 samples, 0.60%)</title><rect x="696.0" y="307.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.0" y="318.0"></text>
</g>
<g>
<title>selinux_inode_permission (9 samples, 0.54%)</title><rect x="696.8" y="291.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="699.8" y="302.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (3 samples, 0.18%)</title><rect x="701.0" y="275.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="704.0" y="286.0"></text>
</g>
<g>
<title>path_init (1 samples, 0.06%)</title><rect x="703.1" y="323.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="706.1" y="334.0"></text>
</g>
<g>
<title>set_root (1 samples, 0.06%)</title><rect x="703.1" y="307.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="706.1" y="318.0"></text>
</g>
<g>
<title>terminate_walk (1 samples, 0.06%)</title><rect x="703.8" y="323.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="706.8" y="334.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.06%)</title><rect x="703.8" y="307.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="706.8" y="318.0"></text>
</g>
<g>
<title>restore_nameidata (2 samples, 0.12%)</title><rect x="704.5" y="339.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="707.5" y="350.0"></text>
</g>
<g>
<title>get_unused_fd_flags (1 samples, 0.06%)</title><rect x="705.9" y="355.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="708.9" y="366.0"></text>
</g>
<g>
<title>getname_flags (11 samples, 0.66%)</title><rect x="706.6" y="355.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.6" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.24%)</title><rect x="708.0" y="339.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="711.0" y="350.0"></text>
</g>
<g>
<title>strncpy_from_user (5 samples, 0.30%)</title><rect x="710.8" y="339.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.8" y="350.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="713.6" y="323.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="716.6" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="714.3" y="355.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="717.3" y="366.0"></text>
</g>
<g>
<title>java/util/Collections.addAll (6 samples, 0.36%)</title><rect x="715.7" y="547.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.30%)</title><rect x="716.5" y="531.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.30%)</title><rect x="716.5" y="515.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.30%)</title><rect x="716.5" y="499.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.06%)</title><rect x="717.2" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.18%)</title><rect x="717.9" y="483.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.18%)</title><rect x="720.0" y="547.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="723.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="721.4" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.4" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="721.4" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.4" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (55 samples, 3.28%)</title><rect x="722.1" y="563.0" width="38.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.1" y="574.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (55 samples, 3.28%)</title><rect x="722.1" y="547.0" width="38.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.1" y="558.0">sun..</text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (55 samples, 3.28%)</title><rect x="722.1" y="531.0" width="38.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.1" y="542.0">jdk..</text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (1 samples, 0.06%)</title><rect x="722.1" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.1" y="526.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.clear (1 samples, 0.06%)</title><rect x="722.8" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (51 samples, 3.04%)</title><rect x="723.5" y="515.0" width="35.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.5" y="526.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (51 samples, 3.04%)</title><rect x="723.5" y="499.0" width="35.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="726.5" y="510.0">sun..</text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (51 samples, 3.04%)</title><rect x="723.5" y="483.0" width="35.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.5" y="494.0">jav..</text>
</g>
<g>
<title>java/io/FileDescriptor.close (51 samples, 3.04%)</title><rect x="723.5" y="467.0" width="35.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.5" y="478.0">jav..</text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (51 samples, 3.04%)</title><rect x="723.5" y="451.0" width="35.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="726.5" y="462.0">jav..</text>
</g>
<g>
<title>__libc_close (39 samples, 2.33%)</title><rect x="723.5" y="435.0" width="27.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="726.5" y="446.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 2.09%)</title><rect x="726.3" y="419.0" width="24.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="729.3" y="430.0">e..</text>
</g>
<g>
<title>do_syscall_64 (35 samples, 2.09%)</title><rect x="726.3" y="403.0" width="24.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="729.3" y="414.0">d..</text>
</g>
<g>
<title>__x64_sys_close (8 samples, 0.48%)</title><rect x="730.5" y="387.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="733.5" y="398.0"></text>
</g>
<g>
<title>__close_fd (2 samples, 0.12%)</title><rect x="731.9" y="371.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="734.9" y="382.0"></text>
</g>
<g>
<title>filp_close (4 samples, 0.24%)</title><rect x="733.3" y="371.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="736.3" y="382.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.24%)</title><rect x="733.3" y="355.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.3" y="366.0"></text>
</g>
<g>
<title>task_work_add (3 samples, 0.18%)</title><rect x="734.0" y="339.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="737.0" y="350.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (21 samples, 1.25%)</title><rect x="736.2" y="387.0" width="14.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="739.2" y="398.0"></text>
</g>
<g>
<title>task_work_run (20 samples, 1.19%)</title><rect x="736.9" y="371.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="739.9" y="382.0"></text>
</g>
<g>
<title>__call_rcu (3 samples, 0.18%)</title><rect x="742.5" y="355.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="745.5" y="366.0"></text>
</g>
<g>
<title>__fput (9 samples, 0.54%)</title><rect x="744.6" y="355.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="747.6" y="366.0"></text>
</g>
<g>
<title>dput (2 samples, 0.12%)</title><rect x="745.3" y="339.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="748.3" y="350.0"></text>
</g>
<g>
<title>lockref_put_return (2 samples, 0.12%)</title><rect x="745.3" y="323.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="748.3" y="334.0"></text>
</g>
<g>
<title>ext4_release_file?[ext4] (3 samples, 0.18%)</title><rect x="746.7" y="339.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="749.7" y="350.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="748.8" y="339.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="751.8" y="350.0"></text>
</g>
<g>
<title>security_file_free (1 samples, 0.06%)</title><rect x="750.2" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="753.2" y="350.0"></text>
</g>
<g>
<title>fileDescriptorClose (11 samples, 0.66%)</title><rect x="750.9" y="435.0" width="7.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="753.9" y="446.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (10 samples, 0.60%)</title><rect x="751.6" y="419.0" width="7.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="754.6" y="430.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.12%)</title><rect x="754.4" y="403.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="757.4" y="414.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="755.9" y="403.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="758.9" y="414.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (3 samples, 0.18%)</title><rect x="756.6" y="403.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="759.6" y="414.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.06%)</title><rect x="758.7" y="435.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="761.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.remove (2 samples, 0.12%)</title><rect x="759.4" y="515.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (188 samples, 11.21%)</title><rect x="760.8" y="563.0" width="132.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.8" y="574.0">sun/nio/ch/FileC..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (188 samples, 11.21%)</title><rect x="760.8" y="547.0" width="132.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.8" y="558.0">sun/nio/ch/FileC..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (20 samples, 1.19%)</title><rect x="760.8" y="531.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.8" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (20 samples, 1.19%)</title><rect x="760.8" y="515.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.8" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.12%)</title><rect x="773.4" y="499.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.4" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.12%)</title><rect x="773.4" y="483.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.4" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.12%)</title><rect x="773.4" y="467.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.06%)</title><rect x="774.9" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.9" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.06%)</title><rect x="774.9" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (164 samples, 9.78%)</title><rect x="775.6" y="531.0" width="115.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.6" y="542.0">sun/nio/ch/IOU..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.60%)</title><rect x="779.1" y="515.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.1" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.06%)</title><rect x="779.8" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.48%)</title><rect x="780.5" y="499.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.5" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.42%)</title><rect x="780.5" y="483.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.42%)</title><rect x="780.5" y="467.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.5" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.42%)</title><rect x="780.5" y="451.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.5" y="462.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (7 samples, 0.42%)</title><rect x="780.5" y="435.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="783.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.06%)</title><rect x="785.4" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.06%)</title><rect x="785.4" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.06%)</title><rect x="785.4" y="451.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.06%)</title><rect x="785.4" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (138 samples, 8.23%)</title><rect x="786.1" y="515.0" width="97.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.1" y="526.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (138 samples, 8.23%)</title><rect x="786.1" y="499.0" width="97.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.1" y="510.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (138 samples, 8.23%)</title><rect x="786.1" y="483.0" width="97.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.1" y="494.0">sun/nio/ch/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.06%)</title><rect x="790.3" y="467.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="793.3" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="790.3" y="451.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="793.3" y="462.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="790.3" y="435.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="793.3" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="790.3" y="419.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="793.3" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="790.3" y="403.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="793.3" y="414.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.06%)</title><rect x="790.3" y="387.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="793.3" y="398.0"></text>
</g>
<g>
<title>rcu_do_batch (1 samples, 0.06%)</title><rect x="790.3" y="371.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="793.3" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="790.3" y="355.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="793.3" y="366.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.06%)</title><rect x="790.3" y="339.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="793.3" y="350.0"></text>
</g>
<g>
<title>__pread64 (126 samples, 7.51%)</title><rect x="791.0" y="467.0" width="88.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="794.0" y="478.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 6.74%)</title><rect x="800.2" y="451.0" width="79.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.2" y="462.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (113 samples, 6.74%)</title><rect x="800.2" y="435.0" width="79.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="803.2" y="446.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.06%)</title><rect x="812.1" y="419.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="815.1" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (95 samples, 5.66%)</title><rect x="812.9" y="419.0" width="66.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="815.9" y="430.0">ksys_pr..</text>
</g>
<g>
<title>__fget_light (7 samples, 0.42%)</title><rect x="812.9" y="403.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.9" y="414.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.36%)</title><rect x="813.6" y="387.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="816.6" y="398.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="817.8" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="820.8" y="414.0"></text>
</g>
<g>
<title>vfs_read (87 samples, 5.19%)</title><rect x="818.5" y="403.0" width="61.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="821.5" y="414.0">vfs_read</text>
</g>
<g>
<title>__vfs_read (2 samples, 0.12%)</title><rect x="819.2" y="387.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="822.2" y="398.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.18%)</title><rect x="820.6" y="387.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="823.6" y="398.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="822.0" y="371.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="825.0" y="382.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="822.0" y="355.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="825.0" y="366.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="822.0" y="339.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="825.0" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="822.0" y="323.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="825.0" y="334.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.06%)</title><rect x="822.0" y="307.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="825.0" y="318.0"></text>
</g>
<g>
<title>new_sync_read (68 samples, 4.05%)</title><rect x="822.7" y="387.0" width="47.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="825.7" y="398.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (4 samples, 0.24%)</title><rect x="824.1" y="371.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="827.1" y="382.0"></text>
</g>
<g>
<title>generic_file_read_iter (60 samples, 3.58%)</title><rect x="826.9" y="371.0" width="42.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="829.9" y="382.0">gene..</text>
</g>
<g>
<title>copy_page_to_iter (41 samples, 2.44%)</title><rect x="833.3" y="355.0" width="28.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="836.3" y="366.0">co..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="834.7" y="339.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.7" y="350.0"></text>
</g>
<g>
<title>copyout (38 samples, 2.27%)</title><rect x="835.4" y="339.0" width="26.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="838.4" y="350.0">c..</text>
</g>
<g>
<title>copy_user_generic_string (37 samples, 2.21%)</title><rect x="836.1" y="323.0" width="26.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="839.1" y="334.0">c..</text>
</g>
<g>
<title>pagecache_get_page (10 samples, 0.60%)</title><rect x="862.1" y="355.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="865.1" y="366.0"></text>
</g>
<g>
<title>find_get_entry (10 samples, 0.60%)</title><rect x="862.1" y="339.0" width="7.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="865.1" y="350.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.36%)</title><rect x="864.9" y="323.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="867.9" y="334.0"></text>
</g>
<g>
<title>xas_start (4 samples, 0.24%)</title><rect x="866.3" y="307.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="869.3" y="318.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.12%)</title><rect x="869.1" y="371.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="872.1" y="382.0"></text>
</g>
<g>
<title>security_file_permission (13 samples, 0.78%)</title><rect x="870.5" y="387.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="873.5" y="398.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="871.3" y="371.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="874.3" y="382.0"></text>
</g>
<g>
<title>selinux_file_permission (11 samples, 0.66%)</title><rect x="872.0" y="371.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="875.0" y="382.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.12%)</title><rect x="878.3" y="355.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="881.3" y="366.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="879.0" y="339.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="882.0" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="879.7" y="467.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="882.7" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.24%)</title><rect x="880.4" y="467.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="883.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.36%)</title><rect x="883.2" y="515.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="886.2" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.18%)</title><rect x="883.2" y="499.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.2" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.12%)</title><rect x="883.9" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="886.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.18%)</title><rect x="885.3" y="499.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="888.3" y="510.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.06%)</title><rect x="886.7" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.7" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.06%)</title><rect x="886.7" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="886.7" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="886.7" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.30%)</title><rect x="887.4" y="515.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.4" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="888.8" y="499.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.8" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.12%)</title><rect x="888.8" y="483.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.06%)</title><rect x="890.3" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="893.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.12%)</title><rect x="891.0" y="531.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.12%)</title><rect x="891.0" y="515.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="894.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.06%)</title><rect x="892.4" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (104 samples, 6.20%)</title><rect x="893.1" y="675.0" width="73.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.1" y="686.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (104 samples, 6.20%)</title><rect x="893.1" y="659.0" width="73.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.1" y="670.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (104 samples, 6.20%)</title><rect x="893.1" y="643.0" width="73.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.1" y="654.0">com/goog..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (75 samples, 4.47%)</title><rect x="893.1" y="627.0" width="52.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.1" y="638.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (75 samples, 4.47%)</title><rect x="893.1" y="611.0" width="52.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.1" y="622.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (75 samples, 4.47%)</title><rect x="893.1" y="595.0" width="52.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.1" y="606.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 4.47%)</title><rect x="893.1" y="579.0" width="52.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.1" y="590.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 4.47%)</title><rect x="893.1" y="563.0" width="52.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.1" y="574.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$113/19489153.compare (75 samples, 4.47%)</title><rect x="893.1" y="547.0" width="52.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.1" y="558.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (73 samples, 4.35%)</title><rect x="893.1" y="531.0" width="51.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.1" y="542.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (73 samples, 4.35%)</title><rect x="893.1" y="515.0" width="51.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.1" y="526.0">ru/ma..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$117/196234348.compare (73 samples, 4.35%)</title><rect x="893.1" y="499.0" width="51.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.1" y="510.0">java/..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (73 samples, 4.35%)</title><rect x="893.1" y="483.0" width="51.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.1" y="494.0">java/..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$115/737417899.compare (73 samples, 4.35%)</title><rect x="893.1" y="467.0" width="51.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.1" y="478.0">java/..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (73 samples, 4.35%)</title><rect x="893.1" y="451.0" width="51.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.1" y="462.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$114/1313476938.apply (73 samples, 4.35%)</title><rect x="893.1" y="435.0" width="51.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.1" y="446.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (73 samples, 4.35%)</title><rect x="893.1" y="419.0" width="51.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.1" y="430.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.24%)</title><rect x="893.1" y="403.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.24%)</title><rect x="893.1" y="387.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="896.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.24%)</title><rect x="893.1" y="371.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="896.1" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.24%)</title><rect x="893.1" y="355.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.1" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (29 samples, 1.73%)</title><rect x="895.9" y="403.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.9" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (29 samples, 1.73%)</title><rect x="895.9" y="387.0" width="20.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (29 samples, 1.73%)</title><rect x="895.9" y="371.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (29 samples, 1.73%)</title><rect x="895.9" y="355.0" width="20.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (29 samples, 1.73%)</title><rect x="895.9" y="339.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (1 samples, 0.06%)</title><rect x="895.9" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="895.9" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="895.9" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcher.&lt;init&gt; (1 samples, 0.06%)</title><rect x="895.9" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory$Flags.toFlags (1 samples, 0.06%)</title><rect x="896.6" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.6" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="896.6" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.6" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.06%)</title><rect x="896.6" y="291.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.6" y="302.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="896.6" y="275.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="899.6" y="286.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="896.6" y="259.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="899.6" y="270.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="896.6" y="243.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="899.6" y="254.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="896.6" y="227.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="899.6" y="238.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="896.6" y="211.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="899.6" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="896.6" y="195.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="899.6" y="206.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="896.6" y="179.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="899.6" y="190.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.06%)</title><rect x="896.6" y="163.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="899.6" y="174.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.06%)</title><rect x="896.6" y="147.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="899.6" y="158.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="896.6" y="131.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="899.6" y="142.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.06%)</title><rect x="896.6" y="115.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="899.6" y="126.0"></text>
</g>
<g>
<title>AbsSeq::davg() const (1 samples, 0.06%)</title><rect x="896.6" y="99.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="899.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (26 samples, 1.55%)</title><rect x="897.3" y="323.0" width="18.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (26 samples, 1.55%)</title><rect x="897.3" y="307.0" width="18.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.copyToNativeBuffer (1 samples, 0.06%)</title><rect x="897.3" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/fs/NativeBuffers.getNativeBufferFromCache (1 samples, 0.06%)</title><rect x="897.3" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.3" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="897.3" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.3" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="897.3" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (25 samples, 1.49%)</title><rect x="898.0" y="291.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 1.49%)</title><rect x="898.0" y="275.0" width="17.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="901.0" y="286.0"></text>
</g>
<g>
<title>__libc_open64 (25 samples, 1.49%)</title><rect x="898.0" y="259.0" width="17.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="901.0" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.31%)</title><rect x="900.1" y="243.0" width="15.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="903.1" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 1.31%)</title><rect x="900.1" y="227.0" width="15.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="903.1" y="238.0"></text>
</g>
<g>
<title>do_sys_open (22 samples, 1.31%)</title><rect x="900.1" y="211.0" width="15.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="903.1" y="222.0"></text>
</g>
<g>
<title>do_filp_open (19 samples, 1.13%)</title><rect x="900.1" y="195.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="903.1" y="206.0"></text>
</g>
<g>
<title>path_openat (19 samples, 1.13%)</title><rect x="900.1" y="179.0" width="13.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="903.1" y="190.0"></text>
</g>
<g>
<title>alloc_empty_file (5 samples, 0.30%)</title><rect x="900.1" y="163.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="903.1" y="174.0"></text>
</g>
<g>
<title>__alloc_file (5 samples, 0.30%)</title><rect x="900.1" y="147.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="903.1" y="158.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.12%)</title><rect x="900.8" y="131.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="903.8" y="142.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="901.5" y="115.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="904.5" y="126.0"></text>
</g>
<g>
<title>security_file_alloc (2 samples, 0.12%)</title><rect x="902.2" y="131.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="905.2" y="142.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="902.2" y="115.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="905.2" y="126.0"></text>
</g>
<g>
<title>selinux_file_alloc_security (1 samples, 0.06%)</title><rect x="902.9" y="115.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="905.9" y="126.0"></text>
</g>
<g>
<title>complete_walk (1 samples, 0.06%)</title><rect x="903.6" y="163.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="906.6" y="174.0"></text>
</g>
<g>
<title>do_dentry_open (4 samples, 0.24%)</title><rect x="904.3" y="163.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="907.3" y="174.0"></text>
</g>
<g>
<title>errseq_sample (1 samples, 0.06%)</title><rect x="905.0" y="147.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.0" y="158.0"></text>
</g>
<g>
<title>ext4_file_open?[ext4] (2 samples, 0.12%)</title><rect x="905.7" y="147.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="908.7" y="158.0"></text>
</g>
<g>
<title>fscrypt_file_open (1 samples, 0.06%)</title><rect x="906.4" y="131.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="909.4" y="142.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="906.4" y="115.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="909.4" y="126.0"></text>
</g>
<g>
<title>lockref_put_return (1 samples, 0.06%)</title><rect x="906.4" y="99.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="909.4" y="110.0"></text>
</g>
<g>
<title>ima_file_check (1 samples, 0.06%)</title><rect x="907.1" y="163.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="910.1" y="174.0"></text>
</g>
<g>
<title>security_task_getsecid (1 samples, 0.06%)</title><rect x="907.1" y="147.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="910.1" y="158.0"></text>
</g>
<g>
<title>selinux_task_getsecid (1 samples, 0.06%)</title><rect x="907.1" y="131.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="910.1" y="142.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (3 samples, 0.18%)</title><rect x="907.8" y="163.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="910.8" y="174.0"></text>
</g>
<g>
<title>security_inode_permission (1 samples, 0.06%)</title><rect x="907.8" y="147.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.8" y="158.0"></text>
</g>
<g>
<title>selinux_inode_permission (1 samples, 0.06%)</title><rect x="907.8" y="131.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="910.8" y="142.0"></text>
</g>
<g>
<title>walk_component (2 samples, 0.12%)</title><rect x="908.5" y="147.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="911.5" y="158.0"></text>
</g>
<g>
<title>lookup_fast (2 samples, 0.12%)</title><rect x="908.5" y="131.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="911.5" y="142.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.06%)</title><rect x="910.0" y="163.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="913.0" y="174.0"></text>
</g>
<g>
<title>__d_lookup_rcu (1 samples, 0.06%)</title><rect x="910.0" y="147.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="913.0" y="158.0"></text>
</g>
<g>
<title>may_open.isra.0 (3 samples, 0.18%)</title><rect x="910.7" y="163.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.7" y="174.0"></text>
</g>
<g>
<title>security_inode_permission (3 samples, 0.18%)</title><rect x="910.7" y="147.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="913.7" y="158.0"></text>
</g>
<g>
<title>selinux_inode_permission (2 samples, 0.12%)</title><rect x="911.4" y="131.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="914.4" y="142.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (1 samples, 0.06%)</title><rect x="912.1" y="115.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="915.1" y="126.0"></text>
</g>
<g>
<title>path_init (1 samples, 0.06%)</title><rect x="912.8" y="163.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="915.8" y="174.0"></text>
</g>
<g>
<title>set_root (1 samples, 0.06%)</title><rect x="912.8" y="147.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="915.8" y="158.0"></text>
</g>
<g>
<title>getname_flags (3 samples, 0.18%)</title><rect x="913.5" y="195.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.5" y="206.0"></text>
</g>
<g>
<title>strncpy_from_user (3 samples, 0.18%)</title><rect x="913.5" y="179.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="916.5" y="190.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="914.9" y="163.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="917.9" y="174.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="914.9" y="147.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="917.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.toString (1 samples, 0.06%)</title><rect x="915.6" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/Util.toString (1 samples, 0.06%)</title><rect x="915.6" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="915.6" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="915.6" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.06%)</title><rect x="915.6" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="915.6" y="243.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.6" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (11 samples, 0.66%)</title><rect x="916.3" y="403.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (11 samples, 0.66%)</title><rect x="916.3" y="387.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="919.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (11 samples, 0.66%)</title><rect x="916.3" y="371.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (11 samples, 0.66%)</title><rect x="916.3" y="355.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (11 samples, 0.66%)</title><rect x="916.3" y="339.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.3" y="350.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (11 samples, 0.66%)</title><rect x="916.3" y="323.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.3" y="334.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (11 samples, 0.66%)</title><rect x="916.3" y="307.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.3" y="318.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (11 samples, 0.66%)</title><rect x="916.3" y="291.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.3" y="302.0"></text>
</g>
<g>
<title>__libc_close (8 samples, 0.48%)</title><rect x="916.3" y="275.0" width="5.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="919.3" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.42%)</title><rect x="917.0" y="259.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="920.0" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.42%)</title><rect x="917.0" y="243.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="920.0" y="254.0"></text>
</g>
<g>
<title>__x64_sys_close (3 samples, 0.18%)</title><rect x="917.7" y="227.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="920.7" y="238.0"></text>
</g>
<g>
<title>__close_fd (1 samples, 0.06%)</title><rect x="917.7" y="211.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="920.7" y="222.0"></text>
</g>
<g>
<title>filp_close (2 samples, 0.12%)</title><rect x="918.4" y="211.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="921.4" y="222.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.12%)</title><rect x="918.4" y="195.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.4" y="206.0"></text>
</g>
<g>
<title>task_work_add (1 samples, 0.06%)</title><rect x="919.1" y="179.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="922.1" y="190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.18%)</title><rect x="919.8" y="227.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="922.8" y="238.0"></text>
</g>
<g>
<title>task_work_run (2 samples, 0.12%)</title><rect x="920.5" y="211.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.5" y="222.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="921.9" y="275.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="924.9" y="286.0"></text>
</g>
<g>
<title>fileDescriptorClose (2 samples, 0.12%)</title><rect x="922.6" y="275.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="925.6" y="286.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="922.6" y="259.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="925.6" y="270.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.06%)</title><rect x="923.3" y="259.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="926.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (29 samples, 1.73%)</title><rect x="924.0" y="403.0" width="20.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="927.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (29 samples, 1.73%)</title><rect x="924.0" y="387.0" width="20.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.18%)</title><rect x="924.0" y="371.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.0" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.18%)</title><rect x="924.0" y="355.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.0" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="925.4" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="928.4" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.06%)</title><rect x="925.4" y="323.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="928.4" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.06%)</title><rect x="925.4" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.12%)</title><rect x="926.1" y="371.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.1" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.12%)</title><rect x="926.1" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.1" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="926.8" y="339.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="929.8" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.06%)</title><rect x="926.8" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="929.8" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.06%)</title><rect x="926.8" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (24 samples, 1.43%)</title><rect x="927.5" y="371.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.5" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.06%)</title><rect x="927.5" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (17 samples, 1.01%)</title><rect x="928.2" y="355.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (17 samples, 1.01%)</title><rect x="928.2" y="339.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (17 samples, 1.01%)</title><rect x="928.2" y="323.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.2" y="334.0"></text>
</g>
<g>
<title>__pread64 (17 samples, 1.01%)</title><rect x="928.2" y="307.0" width="12.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="931.2" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.95%)</title><rect x="929.0" y="291.0" width="11.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="932.0" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.95%)</title><rect x="929.0" y="275.0" width="11.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="932.0" y="286.0"></text>
</g>
<g>
<title>ksys_pread64 (15 samples, 0.89%)</title><rect x="929.7" y="259.0" width="10.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="932.7" y="270.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="930.4" y="243.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="933.4" y="254.0"></text>
</g>
<g>
<title>vfs_read (13 samples, 0.78%)</title><rect x="931.1" y="243.0" width="9.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.1" y="254.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="931.8" y="227.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="934.8" y="238.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="932.5" y="227.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="935.5" y="238.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.48%)</title><rect x="933.2" y="227.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.2" y="238.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (1 samples, 0.06%)</title><rect x="933.9" y="211.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="936.9" y="222.0"></text>
</g>
<g>
<title>generic_file_read_iter (6 samples, 0.36%)</title><rect x="934.6" y="211.0" width="4.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="937.6" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.24%)</title><rect x="934.6" y="195.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="937.6" y="206.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.18%)</title><rect x="935.3" y="179.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="938.3" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.18%)</title><rect x="935.3" y="163.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="938.3" y="174.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="937.4" y="195.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="940.4" y="206.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.06%)</title><rect x="937.4" y="179.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.4" y="190.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.06%)</title><rect x="938.1" y="195.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="941.1" y="206.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.06%)</title><rect x="938.1" y="179.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="941.1" y="190.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.12%)</title><rect x="938.8" y="227.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="941.8" y="238.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.12%)</title><rect x="938.8" y="211.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="941.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.12%)</title><rect x="940.2" y="355.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="943.2" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="940.2" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="940.9" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.24%)</title><rect x="941.6" y="355.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.6" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.18%)</title><rect x="942.3" y="339.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.compareTo (2 samples, 0.12%)</title><rect x="944.4" y="531.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.compareTo (2 samples, 0.12%)</title><rect x="944.4" y="515.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.4" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$117/196234348.compare (2 samples, 0.12%)</title><rect x="944.4" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.4" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.12%)</title><rect x="944.4" y="483.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$115/737417899.compare (2 samples, 0.12%)</title><rect x="944.4" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.4" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.12%)</title><rect x="944.4" y="451.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell$$Lambda$122/1204659072.apply (2 samples, 0.12%)</title><rect x="944.4" y="435.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (2 samples, 0.12%)</title><rect x="944.4" y="419.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.4" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.06%)</title><rect x="944.4" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.4" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.06%)</title><rect x="944.4" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="947.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (1 samples, 0.06%)</title><rect x="944.4" y="371.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.06%)</title><rect x="944.4" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.06%)</title><rect x="944.4" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (1 samples, 0.06%)</title><rect x="944.4" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (1 samples, 0.06%)</title><rect x="944.4" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (1 samples, 0.06%)</title><rect x="944.4" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.4" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="944.4" y="275.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="947.4" y="286.0"></text>
</g>
<g>
<title>__libc_open64 (1 samples, 0.06%)</title><rect x="944.4" y="259.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="947.4" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="944.4" y="243.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.4" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="944.4" y="227.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="947.4" y="238.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.06%)</title><rect x="944.4" y="211.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.4" y="222.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.06%)</title><rect x="944.4" y="195.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="947.4" y="206.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.06%)</title><rect x="944.4" y="179.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.4" y="190.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (1 samples, 0.06%)</title><rect x="944.4" y="163.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="947.4" y="174.0"></text>
</g>
<g>
<title>inode_permission (1 samples, 0.06%)</title><rect x="944.4" y="147.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.06%)</title><rect x="945.1" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1 samples, 0.06%)</title><rect x="945.1" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.06%)</title><rect x="945.1" y="371.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.1" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.06%)</title><rect x="945.1" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.1" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="945.1" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.1" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.06%)</title><rect x="945.1" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.06%)</title><rect x="945.1" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="948.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (29 samples, 1.73%)</title><rect x="945.8" y="627.0" width="20.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.8" y="638.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (29 samples, 1.73%)</title><rect x="945.8" y="611.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.8" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (29 samples, 1.73%)</title><rect x="945.8" y="595.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.8" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (29 samples, 1.73%)</title><rect x="945.8" y="579.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29 samples, 1.73%)</title><rect x="945.8" y="563.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29 samples, 1.73%)</title><rect x="945.8" y="547.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="948.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$113/19489153.compare (29 samples, 1.73%)</title><rect x="945.8" y="531.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (25 samples, 1.49%)</title><rect x="945.8" y="515.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (25 samples, 1.49%)</title><rect x="945.8" y="499.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.8" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$117/196234348.compare (25 samples, 1.49%)</title><rect x="945.8" y="483.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.8" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (25 samples, 1.49%)</title><rect x="945.8" y="467.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.8" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$115/737417899.compare (25 samples, 1.49%)</title><rect x="945.8" y="451.0" width="17.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.8" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (25 samples, 1.49%)</title><rect x="945.8" y="435.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$114/1313476938.apply (24 samples, 1.43%)</title><rect x="945.8" y="419.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (24 samples, 1.43%)</title><rect x="945.8" y="403.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.12%)</title><rect x="945.8" y="387.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="948.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="945.8" y="371.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="945.8" y="355.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.8" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="945.8" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="948.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="946.5" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="946.5" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.5" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="946.5" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.5" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (11 samples, 0.66%)</title><rect x="947.2" y="387.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="950.2" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (10 samples, 0.60%)</title><rect x="947.2" y="371.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (10 samples, 0.60%)</title><rect x="947.2" y="355.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (10 samples, 0.60%)</title><rect x="947.2" y="339.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="950.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (10 samples, 0.60%)</title><rect x="947.2" y="323.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (2 samples, 0.12%)</title><rect x="947.2" y="307.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (2 samples, 0.12%)</title><rect x="947.2" y="291.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="947.9" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcher.&lt;init&gt; (1 samples, 0.06%)</title><rect x="947.9" y="259.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (8 samples, 0.48%)</title><rect x="948.7" y="307.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="951.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (8 samples, 0.48%)</title><rect x="948.7" y="291.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (8 samples, 0.48%)</title><rect x="948.7" y="275.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.48%)</title><rect x="948.7" y="259.0" width="5.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="951.7" y="270.0"></text>
</g>
<g>
<title>__libc_open64 (8 samples, 0.48%)</title><rect x="948.7" y="243.0" width="5.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="951.7" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.48%)</title><rect x="948.7" y="227.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="951.7" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.48%)</title><rect x="948.7" y="211.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="951.7" y="222.0"></text>
</g>
<g>
<title>do_sys_open (7 samples, 0.42%)</title><rect x="949.4" y="195.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="952.4" y="206.0"></text>
</g>
<g>
<title>do_filp_open (6 samples, 0.36%)</title><rect x="949.4" y="179.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="952.4" y="190.0"></text>
</g>
<g>
<title>path_openat (6 samples, 0.36%)</title><rect x="949.4" y="163.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="952.4" y="174.0"></text>
</g>
<g>
<title>do_dentry_open (2 samples, 0.12%)</title><rect x="949.4" y="147.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="952.4" y="158.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="949.4" y="131.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="952.4" y="142.0"></text>
</g>
<g>
<title>lockref_get (1 samples, 0.06%)</title><rect x="950.1" y="131.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="953.1" y="142.0"></text>
</g>
<g>
<title>ima_file_check (1 samples, 0.06%)</title><rect x="950.8" y="147.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="953.8" y="158.0"></text>
</g>
<g>
<title>security_task_getsecid (1 samples, 0.06%)</title><rect x="950.8" y="131.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="953.8" y="142.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (2 samples, 0.12%)</title><rect x="951.5" y="147.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="954.5" y="158.0"></text>
</g>
<g>
<title>security_inode_permission (2 samples, 0.12%)</title><rect x="951.5" y="131.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="954.5" y="142.0"></text>
</g>
<g>
<title>selinux_inode_permission (2 samples, 0.12%)</title><rect x="951.5" y="115.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="954.5" y="126.0"></text>
</g>
<g>
<title>may_open.isra.0 (1 samples, 0.06%)</title><rect x="952.9" y="147.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="955.9" y="158.0"></text>
</g>
<g>
<title>security_inode_permission (1 samples, 0.06%)</title><rect x="952.9" y="131.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="955.9" y="142.0"></text>
</g>
<g>
<title>selinux_inode_permission (1 samples, 0.06%)</title><rect x="952.9" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="955.9" y="126.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="953.6" y="179.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="956.6" y="190.0"></text>
</g>
<g>
<title>java/util/Collections.addAll (1 samples, 0.06%)</title><rect x="954.3" y="371.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="954.3" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="954.3" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.3" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="954.3" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.06%)</title><rect x="954.3" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.3" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (4 samples, 0.24%)</title><rect x="955.0" y="387.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (4 samples, 0.24%)</title><rect x="955.0" y="371.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (4 samples, 0.24%)</title><rect x="955.0" y="355.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (4 samples, 0.24%)</title><rect x="955.0" y="339.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (4 samples, 0.24%)</title><rect x="955.0" y="323.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.0" y="334.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (4 samples, 0.24%)</title><rect x="955.0" y="307.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.0" y="318.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (4 samples, 0.24%)</title><rect x="955.0" y="291.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="958.0" y="302.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (4 samples, 0.24%)</title><rect x="955.0" y="275.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="958.0" y="286.0"></text>
</g>
<g>
<title>__libc_close (3 samples, 0.18%)</title><rect x="955.0" y="259.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="958.0" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="955.7" y="243.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="958.7" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="955.7" y="227.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="958.7" y="238.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="956.4" y="211.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="959.4" y="222.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.06%)</title><rect x="956.4" y="195.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.4" y="206.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.06%)</title><rect x="956.4" y="179.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.4" y="190.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="956.4" y="163.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="959.4" y="174.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="957.1" y="259.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="960.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7 samples, 0.42%)</title><rect x="957.8" y="387.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7 samples, 0.42%)</title><rect x="957.8" y="371.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.42%)</title><rect x="957.8" y="355.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="960.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.36%)</title><rect x="957.8" y="339.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.30%)</title><rect x="958.5" y="323.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.30%)</title><rect x="958.5" y="307.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.5" y="318.0"></text>
</g>
<g>
<title>__pread64 (4 samples, 0.24%)</title><rect x="959.2" y="291.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="962.2" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="959.2" y="275.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="962.2" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="959.2" y="259.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="962.2" y="270.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.24%)</title><rect x="959.2" y="243.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="962.2" y="254.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.24%)</title><rect x="959.2" y="227.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="962.2" y="238.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.24%)</title><rect x="959.2" y="211.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.2" y="222.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (1 samples, 0.06%)</title><rect x="959.9" y="195.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="962.9" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="960.6" y="195.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="963.6" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="960.6" y="179.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="963.6" y="190.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.06%)</title><rect x="960.6" y="163.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="963.6" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="960.6" y="147.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="963.6" y="158.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.06%)</title><rect x="961.3" y="195.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.3" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="962.0" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.06%)</title><rect x="962.0" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$116/1784472427.apply (1 samples, 0.06%)</title><rect x="962.7" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (1 samples, 0.06%)</title><rect x="962.7" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="965.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="962.7" y="387.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="965.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="962.7" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="965.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="962.7" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.7" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="962.7" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="962.7" y="323.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="962.7" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.compareTo (4 samples, 0.24%)</title><rect x="963.4" y="515.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.compareTo (4 samples, 0.24%)</title><rect x="963.4" y="499.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.4" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$117/196234348.compare (4 samples, 0.24%)</title><rect x="963.4" y="483.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.24%)</title><rect x="963.4" y="467.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.4" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$115/737417899.compare (4 samples, 0.24%)</title><rect x="963.4" y="451.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.4" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.24%)</title><rect x="963.4" y="435.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell$$Lambda$122/1204659072.apply (4 samples, 0.24%)</title><rect x="963.4" y="419.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (4 samples, 0.24%)</title><rect x="963.4" y="403.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.4" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.06%)</title><rect x="963.4" y="387.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.4" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.06%)</title><rect x="963.4" y="371.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="966.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (1 samples, 0.06%)</title><rect x="963.4" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.06%)</title><rect x="963.4" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.06%)</title><rect x="963.4" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (1 samples, 0.06%)</title><rect x="963.4" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (1 samples, 0.06%)</title><rect x="963.4" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (1 samples, 0.06%)</title><rect x="963.4" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.4" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="963.4" y="259.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="966.4" y="270.0"></text>
</g>
<g>
<title>__libc_open64 (1 samples, 0.06%)</title><rect x="963.4" y="243.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="966.4" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="963.4" y="227.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="966.4" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="963.4" y="211.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="966.4" y="222.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.06%)</title><rect x="963.4" y="195.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="966.4" y="206.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.06%)</title><rect x="963.4" y="179.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="966.4" y="190.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.06%)</title><rect x="963.4" y="163.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="966.4" y="174.0"></text>
</g>
<g>
<title>path_init (1 samples, 0.06%)</title><rect x="963.4" y="147.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="966.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.18%)</title><rect x="964.1" y="387.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.18%)</title><rect x="964.1" y="371.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.06%)</title><rect x="964.1" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.1" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.06%)</title><rect x="964.1" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.1" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.06%)</title><rect x="964.1" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.1" y="334.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.06%)</title><rect x="964.1" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.06%)</title><rect x="964.1" y="291.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.12%)</title><rect x="964.8" y="355.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.06%)</title><rect x="964.8" y="339.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.06%)</title><rect x="964.8" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.06%)</title><rect x="964.8" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.8" y="318.0"></text>
</g>
<g>
<title>__pread64 (1 samples, 0.06%)</title><rect x="964.8" y="291.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="967.8" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="964.8" y="275.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="967.8" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="964.8" y="259.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="967.8" y="270.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.06%)</title><rect x="964.8" y="243.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="967.8" y="254.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.06%)</title><rect x="964.8" y="227.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="967.8" y="238.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.06%)</title><rect x="964.8" y="211.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="967.8" y="222.0"></text>
</g>
<g>
<title>generic_file_read_iter (1 samples, 0.06%)</title><rect x="964.8" y="195.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="967.8" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="964.8" y="179.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="967.8" y="190.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.06%)</title><rect x="964.8" y="163.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="967.8" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="964.8" y="147.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="967.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="965.5" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="965.5" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.diskTables (204 samples, 12.16%)</title><rect x="966.2" y="675.0" width="143.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.2" y="686.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.06%)</title><rect x="966.2" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.06%)</title><rect x="966.2" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.06%)</title><rect x="966.2" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="969.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (4 samples, 0.24%)</title><rect x="966.9" y="659.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (4 samples, 0.24%)</title><rect x="966.9" y="643.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (4 samples, 0.24%)</title><rect x="966.9" y="627.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.9" y="638.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="968.4" y="611.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="971.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (196 samples, 11.69%)</title><rect x="969.8" y="659.0" width="137.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.8" y="670.0">java/util/stream/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (196 samples, 11.69%)</title><rect x="969.8" y="643.0" width="137.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.8" y="654.0">java/util/stream/..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (1 samples, 0.06%)</title><rect x="969.8" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.8" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.06%)</title><rect x="969.8" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (195 samples, 11.63%)</title><rect x="970.5" y="627.0" width="137.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.5" y="638.0">java/util/stream/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (195 samples, 11.63%)</title><rect x="970.5" y="611.0" width="137.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.5" y="622.0">java/util/stream/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (195 samples, 11.63%)</title><rect x="970.5" y="595.0" width="137.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.5" y="606.0">java/util/stream/..</text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (193 samples, 11.51%)</title><rect x="970.5" y="579.0" width="135.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.5" y="590.0">java/util/ArrayLi..</text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (193 samples, 11.51%)</title><rect x="970.5" y="563.0" width="135.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.5" y="574.0">java/util/stream/..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (193 samples, 11.51%)</title><rect x="970.5" y="547.0" width="135.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.5" y="558.0">java/util/stream/..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (179 samples, 10.67%)</title><rect x="970.5" y="531.0" width="125.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.5" y="542.0">java/util/strea..</text>
</g>
<g>
<title>itable stub (3 samples, 0.18%)</title><rect x="970.5" y="515.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="973.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.06%)</title><rect x="972.6" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager$$Lambda$106/278795996.apply (175 samples, 10.44%)</title><rect x="973.3" y="515.0" width="123.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="976.3" y="526.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.of (175 samples, 10.44%)</title><rect x="973.3" y="499.0" width="123.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.3" y="510.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.&lt;init&gt; (175 samples, 10.44%)</title><rect x="973.3" y="483.0" width="123.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.3" y="494.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="973.3" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="973.3" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.toString (1 samples, 0.06%)</title><rect x="973.3" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.3" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (68 samples, 4.05%)</title><rect x="974.0" y="467.0" width="47.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.0" y="478.0">java..</text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (65 samples, 3.88%)</title><rect x="974.0" y="451.0" width="45.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="977.0" y="462.0">java..</text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (65 samples, 3.88%)</title><rect x="974.0" y="435.0" width="45.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.0" y="446.0">sun/..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (65 samples, 3.88%)</title><rect x="974.0" y="419.0" width="45.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.0" y="430.0">sun/..</text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (65 samples, 3.88%)</title><rect x="974.0" y="403.0" width="45.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.0" y="414.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.open (8 samples, 0.48%)</title><rect x="974.0" y="387.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.&lt;init&gt; (8 samples, 0.48%)</title><rect x="974.0" y="371.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.0" y="382.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (3 samples, 0.18%)</title><rect x="974.0" y="355.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (3 samples, 0.18%)</title><rect x="974.0" y="339.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (3 samples, 0.18%)</title><rect x="974.0" y="323.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="977.0" y="334.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (2 samples, 0.12%)</title><rect x="974.0" y="307.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="977.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (2 samples, 0.12%)</title><rect x="974.0" y="291.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.insert (1 samples, 0.06%)</title><rect x="975.4" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="978.4" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.&lt;init&gt; (5 samples, 0.30%)</title><rect x="976.1" y="355.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.1" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.&lt;init&gt; (5 samples, 0.30%)</title><rect x="976.1" y="339.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="979.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (2 samples, 0.12%)</title><rect x="978.2" y="323.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory$Flags.toFlags (1 samples, 0.06%)</title><rect x="979.6" y="387.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.06%)</title><rect x="979.6" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.6" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.06%)</title><rect x="979.6" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.open (56 samples, 3.34%)</title><rect x="980.3" y="387.0" width="39.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="983.3" y="398.0">sun..</text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open (55 samples, 3.28%)</title><rect x="981.0" y="371.0" width="38.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.0" y="382.0">sun..</text>
</g>
<g>
<title>sun/nio/fs/NativeBuffer.release (1 samples, 0.06%)</title><rect x="981.0" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="984.0" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="981.0" y="339.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="984.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.copyToNativeBuffer (1 samples, 0.06%)</title><rect x="981.7" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getByteArrayForSysCalls (1 samples, 0.06%)</title><rect x="981.7" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileSystem (1 samples, 0.06%)</title><rect x="981.7" y="323.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixNativeDispatcher.open0 (53 samples, 3.16%)</title><rect x="982.4" y="355.0" width="37.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.4" y="366.0">sun..</text>
</g>
<g>
<title>[unknown] (52 samples, 3.10%)</title><rect x="983.1" y="339.0" width="36.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="986.1" y="350.0">[un..</text>
</g>
<g>
<title>__libc_open64 (52 samples, 3.10%)</title><rect x="983.1" y="323.0" width="36.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="986.1" y="334.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 2.92%)</title><rect x="985.2" y="307.0" width="34.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="988.2" y="318.0">en..</text>
</g>
<g>
<title>do_syscall_64 (49 samples, 2.92%)</title><rect x="985.2" y="291.0" width="34.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="988.2" y="302.0">do..</text>
</g>
<g>
<title>do_sys_open (46 samples, 2.74%)</title><rect x="987.4" y="275.0" width="32.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="990.4" y="286.0">do..</text>
</g>
<g>
<title>__alloc_fd (2 samples, 0.12%)</title><rect x="988.8" y="259.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="991.8" y="270.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="988.8" y="243.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.8" y="254.0"></text>
</g>
<g>
<title>find_next_zero_bit (1 samples, 0.06%)</title><rect x="989.5" y="243.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="992.5" y="254.0"></text>
</g>
<g>
<title>do_filp_open (33 samples, 1.97%)</title><rect x="990.2" y="259.0" width="23.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.2" y="270.0">d..</text>
</g>
<g>
<title>path_openat (33 samples, 1.97%)</title><rect x="990.2" y="243.0" width="23.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="993.2" y="254.0">p..</text>
</g>
<g>
<title>alloc_empty_file (2 samples, 0.12%)</title><rect x="991.6" y="227.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="994.6" y="238.0"></text>
</g>
<g>
<title>__alloc_file (2 samples, 0.12%)</title><rect x="991.6" y="211.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="994.6" y="222.0"></text>
</g>
<g>
<title>security_file_alloc (2 samples, 0.12%)</title><rect x="991.6" y="195.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="994.6" y="206.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="991.6" y="179.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="994.6" y="190.0"></text>
</g>
<g>
<title>selinux_file_alloc_security (1 samples, 0.06%)</title><rect x="992.3" y="179.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="995.3" y="190.0"></text>
</g>
<g>
<title>complete_walk (2 samples, 0.12%)</title><rect x="993.0" y="227.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="996.0" y="238.0"></text>
</g>
<g>
<title>unlazy_walk (2 samples, 0.12%)</title><rect x="993.0" y="211.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="996.0" y="222.0"></text>
</g>
<g>
<title>legitimize_path.isra.0 (1 samples, 0.06%)</title><rect x="993.0" y="195.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="996.0" y="206.0"></text>
</g>
<g>
<title>lockref_get_not_dead (1 samples, 0.06%)</title><rect x="993.0" y="179.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="996.0" y="190.0"></text>
</g>
<g>
<title>legitimize_root (1 samples, 0.06%)</title><rect x="993.7" y="195.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="996.7" y="206.0"></text>
</g>
<g>
<title>do_dentry_open (7 samples, 0.42%)</title><rect x="994.4" y="227.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="997.4" y="238.0"></text>
</g>
<g>
<title>ext4_file_open?[ext4] (1 samples, 0.06%)</title><rect x="996.5" y="211.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="999.5" y="222.0"></text>
</g>
<g>
<title>security_file_open (3 samples, 0.18%)</title><rect x="997.2" y="211.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.2" y="222.0"></text>
</g>
<g>
<title>selinux_file_open (2 samples, 0.12%)</title><rect x="997.9" y="195.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1000.9" y="206.0"></text>
</g>
<g>
<title>link_path_walk.part.0 (9 samples, 0.54%)</title><rect x="999.3" y="227.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.3" y="238.0"></text>
</g>
<g>
<title>inode_permission (2 samples, 0.12%)</title><rect x="1000.7" y="211.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1003.7" y="222.0"></text>
</g>
<g>
<title>generic_permission (1 samples, 0.06%)</title><rect x="1001.4" y="195.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1004.4" y="206.0"></text>
</g>
<g>
<title>in_group_p (1 samples, 0.06%)</title><rect x="1001.4" y="179.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1004.4" y="190.0"></text>
</g>
<g>
<title>security_inode_permission (4 samples, 0.24%)</title><rect x="1002.1" y="211.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1005.1" y="222.0"></text>
</g>
<g>
<title>selinux_inode_permission (3 samples, 0.18%)</title><rect x="1002.8" y="195.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1005.8" y="206.0"></text>
</g>
<g>
<title>avc_has_perm_noaudit (2 samples, 0.12%)</title><rect x="1003.5" y="179.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1006.5" y="190.0"></text>
</g>
<g>
<title>walk_component (1 samples, 0.06%)</title><rect x="1004.9" y="211.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1007.9" y="222.0"></text>
</g>
<g>
<title>lookup_fast (1 samples, 0.06%)</title><rect x="1004.9" y="195.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1007.9" y="206.0"></text>
</g>
<g>
<title>__d_lookup_rcu (1 samples, 0.06%)</title><rect x="1004.9" y="179.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1007.9" y="190.0"></text>
</g>
<g>
<title>lookup_fast (3 samples, 0.18%)</title><rect x="1005.6" y="227.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1008.6" y="238.0"></text>
</g>
<g>
<title>__d_lookup_rcu (3 samples, 0.18%)</title><rect x="1005.6" y="211.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1008.6" y="222.0"></text>
</g>
<g>
<title>may_open.isra.0 (6 samples, 0.36%)</title><rect x="1007.8" y="227.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1010.8" y="238.0"></text>
</g>
<g>
<title>security_inode_permission (5 samples, 0.30%)</title><rect x="1008.5" y="211.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1011.5" y="222.0"></text>
</g>
<g>
<title>selinux_inode_permission (5 samples, 0.30%)</title><rect x="1008.5" y="195.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1011.5" y="206.0"></text>
</g>
<g>
<title>terminate_walk (2 samples, 0.12%)</title><rect x="1012.0" y="227.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1015.0" y="238.0"></text>
</g>
<g>
<title>mntput (2 samples, 0.12%)</title><rect x="1012.0" y="211.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1015.0" y="222.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="1013.4" y="259.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1016.4" y="270.0"></text>
</g>
<g>
<title>getname_flags (6 samples, 0.36%)</title><rect x="1014.1" y="259.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1017.1" y="270.0"></text>
</g>
<g>
<title>strncpy_from_user (6 samples, 0.36%)</title><rect x="1014.1" y="243.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1017.1" y="254.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.12%)</title><rect x="1016.9" y="227.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1019.9" y="238.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.12%)</title><rect x="1016.9" y="211.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1019.9" y="222.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="1018.3" y="259.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1021.3" y="270.0"></text>
</g>
<g>
<title>java/util/Collections.addAll (2 samples, 0.12%)</title><rect x="1019.7" y="451.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.7" y="462.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.12%)</title><rect x="1019.7" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1022.7" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.12%)</title><rect x="1019.7" y="419.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1022.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.12%)</title><rect x="1019.7" y="403.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.7" y="414.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="1020.4" y="387.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1023.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1021.1" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.size (1 samples, 0.06%)</title><rect x="1021.1" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1024.1" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (28 samples, 1.67%)</title><rect x="1021.8" y="467.0" width="19.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (28 samples, 1.67%)</title><rect x="1021.8" y="451.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1024.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (28 samples, 1.67%)</title><rect x="1021.8" y="435.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1024.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (25 samples, 1.49%)</title><rect x="1022.5" y="419.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1025.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl$Closer.run (24 samples, 1.43%)</title><rect x="1023.2" y="403.0" width="16.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.2" y="414.0"></text>
</g>
<g>
<title>java/io/FileDescriptor$1.close (24 samples, 1.43%)</title><rect x="1023.2" y="387.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1026.2" y="398.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close (24 samples, 1.43%)</title><rect x="1023.2" y="371.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1026.2" y="382.0"></text>
</g>
<g>
<title>java/io/FileDescriptor.close0 (24 samples, 1.43%)</title><rect x="1023.2" y="355.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1026.2" y="366.0"></text>
</g>
<g>
<title>__libc_close (15 samples, 0.89%)</title><rect x="1024.6" y="339.0" width="10.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1027.6" y="350.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.66%)</title><rect x="1027.5" y="323.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1030.5" y="334.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.66%)</title><rect x="1027.5" y="307.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1030.5" y="318.0"></text>
</g>
<g>
<title>__x64_sys_close (3 samples, 0.18%)</title><rect x="1028.2" y="291.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1031.2" y="302.0"></text>
</g>
<g>
<title>__close_fd (1 samples, 0.06%)</title><rect x="1028.2" y="275.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1031.2" y="286.0"></text>
</g>
<g>
<title>filp_close (2 samples, 0.12%)</title><rect x="1028.9" y="275.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1031.9" y="286.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.12%)</title><rect x="1028.9" y="259.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1031.9" y="270.0"></text>
</g>
<g>
<title>task_work_add (1 samples, 0.06%)</title><rect x="1029.6" y="243.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1032.6" y="254.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.42%)</title><rect x="1030.3" y="291.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1033.3" y="302.0"></text>
</g>
<g>
<title>mem_cgroup_handle_over_high (1 samples, 0.06%)</title><rect x="1030.3" y="275.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1033.3" y="286.0"></text>
</g>
<g>
<title>task_work_run (6 samples, 0.36%)</title><rect x="1031.0" y="275.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1034.0" y="286.0"></text>
</g>
<g>
<title>__fput (5 samples, 0.30%)</title><rect x="1031.7" y="259.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1034.7" y="270.0"></text>
</g>
<g>
<title>ext4_release_file?[ext4] (1 samples, 0.06%)</title><rect x="1031.7" y="243.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1034.7" y="254.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.18%)</title><rect x="1032.4" y="243.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1035.4" y="254.0"></text>
</g>
<g>
<title>mntput_no_expire (1 samples, 0.06%)</title><rect x="1034.5" y="243.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1037.5" y="254.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="1035.2" y="339.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1038.2" y="350.0"></text>
</g>
<g>
<title>fileDescriptorClose (5 samples, 0.30%)</title><rect x="1035.9" y="339.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1038.9" y="350.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="1036.6" y="323.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1039.6" y="334.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (3 samples, 0.18%)</title><rect x="1037.3" y="323.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1040.3" y="334.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.06%)</title><rect x="1039.4" y="339.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1042.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.remove (2 samples, 0.12%)</title><rect x="1040.1" y="419.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.06%)</title><rect x="1041.5" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (50 samples, 2.98%)</title><rect x="1042.2" y="467.0" width="35.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.2" y="478.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (50 samples, 2.98%)</title><rect x="1042.2" y="451.0" width="35.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.2" y="462.0">sun..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.06%)</title><rect x="1042.2" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.06%)</title><rect x="1042.9" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.9" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.06%)</title><rect x="1042.9" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.9" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (48 samples, 2.86%)</title><rect x="1043.6" y="435.0" width="33.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.6" y="446.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.18%)</title><rect x="1045.1" y="419.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.1" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.06%)</title><rect x="1046.5" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (39 samples, 2.33%)</title><rect x="1047.2" y="419.0" width="27.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.2" y="430.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (38 samples, 2.27%)</title><rect x="1047.9" y="403.0" width="26.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.9" y="414.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (38 samples, 2.27%)</title><rect x="1047.9" y="387.0" width="26.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.9" y="398.0">s..</text>
</g>
<g>
<title>__pread64 (36 samples, 2.15%)</title><rect x="1048.6" y="371.0" width="25.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1051.6" y="382.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.97%)</title><rect x="1050.7" y="355.0" width="23.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1053.7" y="366.0">e..</text>
</g>
<g>
<title>do_syscall_64 (33 samples, 1.97%)</title><rect x="1050.7" y="339.0" width="23.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1053.7" y="350.0">d..</text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.12%)</title><rect x="1053.5" y="323.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1056.5" y="334.0"></text>
</g>
<g>
<title>ksys_pread64 (27 samples, 1.61%)</title><rect x="1054.9" y="323.0" width="19.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1057.9" y="334.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="1054.9" y="307.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1057.9" y="318.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="1054.9" y="291.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1057.9" y="302.0"></text>
</g>
<g>
<title>fput (2 samples, 0.12%)</title><rect x="1055.6" y="307.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.6" y="318.0"></text>
</g>
<g>
<title>vfs_read (24 samples, 1.43%)</title><rect x="1057.0" y="307.0" width="16.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1060.0" y="318.0"></text>
</g>
<g>
<title>new_sync_read (21 samples, 1.25%)</title><rect x="1057.0" y="291.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1060.0" y="302.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (1 samples, 0.06%)</title><rect x="1060.5" y="275.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1063.5" y="286.0"></text>
</g>
<g>
<title>generic_file_read_iter (14 samples, 0.83%)</title><rect x="1061.2" y="275.0" width="9.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1064.2" y="286.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.42%)</title><rect x="1064.0" y="259.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1067.0" y="270.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="1064.0" y="243.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1067.0" y="254.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="1064.0" y="227.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1067.0" y="238.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.36%)</title><rect x="1064.8" y="243.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1067.8" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.36%)</title><rect x="1064.8" y="227.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1067.8" y="238.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.18%)</title><rect x="1069.0" y="259.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1072.0" y="270.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.18%)</title><rect x="1069.0" y="243.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.0" y="254.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.18%)</title><rect x="1069.0" y="227.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1072.0" y="238.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.18%)</title><rect x="1069.0" y="211.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1072.0" y="222.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.06%)</title><rect x="1071.1" y="275.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1074.1" y="286.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.18%)</title><rect x="1071.8" y="291.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1074.8" y="302.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="1072.5" y="275.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1075.5" y="286.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.06%)</title><rect x="1073.2" y="275.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1076.2" y="286.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="1073.9" y="371.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1076.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="1074.6" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1077.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="1074.6" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.18%)</title><rect x="1075.3" y="419.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1078.3" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="1075.3" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1078.3" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="1076.0" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.06%)</title><rect x="1076.7" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.size (16 samples, 0.95%)</title><rect x="1077.4" y="467.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1080.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.12%)</title><rect x="1077.4" y="451.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1080.4" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.12%)</title><rect x="1077.4" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1080.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.size (13 samples, 0.78%)</title><rect x="1078.8" y="451.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.size0 (13 samples, 0.78%)</title><rect x="1078.8" y="435.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.8" y="446.0"></text>
</g>
<g>
<title>__fxstat64 (10 samples, 0.60%)</title><rect x="1080.9" y="419.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1083.9" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.60%)</title><rect x="1080.9" y="403.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1083.9" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.60%)</title><rect x="1080.9" y="387.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1083.9" y="398.0"></text>
</g>
<g>
<title>__do_sys_newfstat (8 samples, 0.48%)</title><rect x="1082.3" y="371.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1085.3" y="382.0"></text>
</g>
<g>
<title>cp_new_stat (3 samples, 0.18%)</title><rect x="1082.3" y="355.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1085.3" y="366.0"></text>
</g>
<g>
<title>from_kgid_munged (1 samples, 0.06%)</title><rect x="1083.0" y="339.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1086.0" y="350.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.06%)</title><rect x="1083.0" y="323.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1086.0" y="334.0"></text>
</g>
<g>
<title>from_kuid_munged (1 samples, 0.06%)</title><rect x="1083.8" y="339.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1086.8" y="350.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.06%)</title><rect x="1083.8" y="323.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1086.8" y="334.0"></text>
</g>
<g>
<title>vfs_statx_fd (5 samples, 0.30%)</title><rect x="1084.5" y="355.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1087.5" y="366.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="1084.5" y="339.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1087.5" y="350.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="1084.5" y="323.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1087.5" y="334.0"></text>
</g>
<g>
<title>ext4_file_getattr?[ext4] (2 samples, 0.12%)</title><rect x="1085.9" y="339.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1088.9" y="350.0"></text>
</g>
<g>
<title>ext4_getattr?[ext4] (2 samples, 0.12%)</title><rect x="1085.9" y="323.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1088.9" y="334.0"></text>
</g>
<g>
<title>vfs_getattr (1 samples, 0.06%)</title><rect x="1087.3" y="339.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1090.3" y="350.0"></text>
</g>
<g>
<title>security_inode_getattr (1 samples, 0.06%)</title><rect x="1087.3" y="323.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1090.3" y="334.0"></text>
</g>
<g>
<title>selinux_inode_getattr (1 samples, 0.06%)</title><rect x="1087.3" y="307.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1090.3" y="318.0"></text>
</g>
<g>
<title>inode_has_perm (1 samples, 0.06%)</title><rect x="1087.3" y="291.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1090.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.06%)</title><rect x="1088.0" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.06%)</title><rect x="1088.0" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.0" y="446.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (9 samples, 0.54%)</title><rect x="1088.7" y="467.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (9 samples, 0.54%)</title><rect x="1088.7" y="451.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1091.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.initOffsets (8 samples, 0.48%)</title><rect x="1089.4" y="435.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.toString (2 samples, 0.12%)</title><rect x="1095.0" y="467.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/fs/Util.toString (2 samples, 0.12%)</title><rect x="1095.0" y="451.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1098.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1095.0" y="435.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1095.0" y="419.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 0.12%)</title><rect x="1095.0" y="403.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 0.12%)</title><rect x="1095.0" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.0" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="1095.0" y="371.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.0" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.12%)</title><rect x="1095.0" y="355.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager$$Lambda$105/569750921.apply (14 samples, 0.83%)</title><rect x="1096.4" y="531.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.lambda$diskTables$0 (14 samples, 0.83%)</title><rect x="1096.4" y="515.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.4" y="526.0"></text>
</g>
<g>
<title>java/nio/file/Paths.get (14 samples, 0.83%)</title><rect x="1096.4" y="499.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1099.4" y="510.0"></text>
</g>
<g>
<title>java/nio/file/Path.of (14 samples, 0.83%)</title><rect x="1096.4" y="483.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (14 samples, 0.83%)</title><rect x="1096.4" y="467.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.&lt;init&gt; (14 samples, 0.83%)</title><rect x="1096.4" y="451.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1099.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.encode (9 samples, 0.54%)</title><rect x="1096.4" y="435.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.4" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="1097.8" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.8" y="430.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (1 samples, 0.06%)</title><rect x="1098.5" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.5" y="430.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (1 samples, 0.06%)</title><rect x="1098.5" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1101.5" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1098.5" y="387.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.5" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1098.5" y="371.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.5" y="382.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1098.5" y="355.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.5" y="366.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1098.5" y="339.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1101.5" y="350.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1098.5" y="323.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1101.5" y="334.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="1098.5" y="307.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.5" y="318.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="1098.5" y="291.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1101.5" y="302.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.06%)</title><rect x="1098.5" y="275.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1101.5" y="286.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.06%)</title><rect x="1098.5" y="259.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1101.5" y="270.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="1098.5" y="243.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1101.5" y="254.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.06%)</title><rect x="1098.5" y="227.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1101.5" y="238.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (5 samples, 0.30%)</title><rect x="1099.2" y="419.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeLoop (5 samples, 0.30%)</title><rect x="1099.2" y="403.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeArrayLoop (5 samples, 0.30%)</title><rect x="1099.2" y="387.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.normalizeAndCheck (5 samples, 0.30%)</title><rect x="1102.7" y="435.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1105.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="1105.6" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="1105.6" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.begin (2 samples, 0.12%)</title><rect x="1106.3" y="579.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (2 samples, 0.12%)</title><rect x="1106.3" y="563.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (2 samples, 0.12%)</title><rect x="1106.3" y="547.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.3" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="1106.3" y="531.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1109.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.06%)</title><rect x="1107.0" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.06%)</title><rect x="1107.7" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1107.7" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1107.7" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1107.7" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1107.7" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.skip (2 samples, 0.12%)</title><rect x="1108.4" y="659.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (2 samples, 0.12%)</title><rect x="1108.4" y="643.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1109.1" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatefulOp.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1109.1" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1112.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1109.1" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1112.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1109.1" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.06%)</title><rect x="1109.8" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 1.01%)</title><rect x="1110.5" y="771.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1113.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 1.01%)</title><rect x="1110.5" y="755.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 1.01%)</title><rect x="1110.5" y="739.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.5" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1118.2" y="723.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1121.2" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1118.2" y="707.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1118.2" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1121.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1118.2" y="675.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1121.2" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1118.2" y="659.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1121.2" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="1118.2" y="643.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1118.9" y="723.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1118.9" y="707.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.12%)</title><rect x="1118.9" y="691.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.9" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (3 samples, 0.18%)</title><rect x="1120.3" y="723.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="1122.5" y="771.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.12%)</title><rect x="1122.5" y="755.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1123.9" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1123.9" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 0.83%)</title><rect x="1124.6" y="787.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 0.83%)</title><rect x="1124.6" y="771.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.6" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.18%)</title><rect x="1125.3" y="755.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1128.3" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (1 samples, 0.06%)</title><rect x="1126.0" y="739.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1129.0" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="1126.7" y="739.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1129.7" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="1126.7" y="723.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1129.7" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="1126.7" y="707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1129.7" y="718.0"></text>
</g>
<g>
<title>__libc_recv (8 samples, 0.48%)</title><rect x="1127.4" y="755.0" width="5.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1130.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.48%)</title><rect x="1127.4" y="739.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1130.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.48%)</title><rect x="1127.4" y="723.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1130.4" y="734.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (8 samples, 0.48%)</title><rect x="1127.4" y="707.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1130.4" y="718.0"></text>
</g>
<g>
<title>__sys_recvfrom (8 samples, 0.48%)</title><rect x="1127.4" y="691.0" width="5.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1130.4" y="702.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (6 samples, 0.36%)</title><rect x="1127.4" y="675.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1130.4" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.36%)</title><rect x="1127.4" y="659.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1130.4" y="670.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="1128.8" y="643.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1131.8" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.06%)</title><rect x="1128.8" y="627.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1131.8" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.18%)</title><rect x="1129.5" y="643.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1132.5" y="654.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.12%)</title><rect x="1130.2" y="627.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1133.2" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.12%)</title><rect x="1130.2" y="611.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1133.2" y="622.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.12%)</title><rect x="1130.2" y="595.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1133.2" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.12%)</title><rect x="1130.2" y="579.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1133.2" y="590.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.06%)</title><rect x="1131.6" y="675.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1134.6" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.06%)</title><rect x="1131.6" y="659.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1134.6" y="670.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.06%)</title><rect x="1131.6" y="643.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1134.6" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="1132.3" y="675.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1135.3" y="686.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="1132.3" y="659.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1135.3" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="1132.3" y="643.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1135.3" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.12%)</title><rect x="1133.0" y="755.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1136.0" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.12%)</title><rect x="1134.4" y="803.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1137.4" y="814.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.12%)</title><rect x="1134.4" y="787.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1137.4" y="798.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.12%)</title><rect x="1134.4" y="771.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1137.4" y="782.0"></text>
</g>
<g>
<title>start_thread (77 samples, 4.59%)</title><rect x="1135.8" y="835.0" width="54.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1138.8" y="846.0">start..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (77 samples, 4.59%)</title><rect x="1135.8" y="819.0" width="54.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1138.8" y="830.0">threa..</text>
</g>
<g>
<title>Thread::call_run() (77 samples, 4.59%)</title><rect x="1135.8" y="803.0" width="54.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.8" y="814.0">Threa..</text>
</g>
<g>
<title>GangWorker::loop() (60 samples, 3.58%)</title><rect x="1135.8" y="787.0" width="42.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.8" y="798.0">Gang..</text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="1135.8" y="771.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.8" y="782.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (58 samples, 3.46%)</title><rect x="1136.5" y="771.0" width="40.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.5" y="782.0">G1P..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (48 samples, 2.86%)</title><rect x="1136.5" y="755.0" width="33.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.5" y="766.0">G1..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="1136.5" y="739.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.5" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.06%)</title><rect x="1137.2" y="739.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.2" y="750.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.06%)</title><rect x="1137.9" y="739.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.9" y="750.0"></text>
</g>
<g>
<title>SpinPause (45 samples, 2.68%)</title><rect x="1138.6" y="739.0" width="31.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1141.6" y="750.0">Sp..</text>
</g>
<g>
<title>G1ParScanThreadStateSet::state_for_worker(unsigned int) (1 samples, 0.06%)</title><rect x="1170.3" y="755.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.3" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, unsigned int, unsigned long) (1 samples, 0.06%)</title><rect x="1170.3" y="739.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.3" y="750.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1 samples, 0.06%)</title><rect x="1170.3" y="723.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1173.3" y="734.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="1171.0" y="755.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.0" y="766.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="1171.0" y="739.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.0" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.06%)</title><rect x="1171.0" y="723.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.0" y="734.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.06%)</title><rect x="1171.0" y="707.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.0" y="718.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.06%)</title><rect x="1171.0" y="691.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.0" y="702.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (1 samples, 0.06%)</title><rect x="1171.0" y="675.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.0" y="686.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.06%)</title><rect x="1171.0" y="659.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.0" y="670.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.12%)</title><rect x="1171.7" y="755.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.7" y="766.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.12%)</title><rect x="1171.7" y="739.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.7" y="750.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.12%)</title><rect x="1171.7" y="723.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.7" y="734.0"></text>
</g>
<g>
<title>G1EvacPhaseWithTrimTimeTracker::G1EvacPhaseWithTrimTimeTracker(G1ParScanThreadState*, TimeInterval&lt;CompositeCounterRepresentation, CompositeElapsedCounterSource&gt;&amp;, TimeInterval&lt;CompositeCounterRepresentation, CompositeElapsedCounterSource&gt;&amp;) (1 samples, 0.06%)</title><rect x="1171.7" y="707.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.7" y="718.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.06%)</title><rect x="1172.4" y="707.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.4" y="718.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.36%)</title><rect x="1173.1" y="755.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.1" y="766.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.18%)</title><rect x="1173.1" y="739.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.1" y="750.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.06%)</title><rect x="1173.1" y="723.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.1" y="734.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.12%)</title><rect x="1173.8" y="723.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.8" y="734.0"></text>
</g>
<g>
<title>JvmtiThreadState::oops_do(OopClosure*) (1 samples, 0.06%)</title><rect x="1174.5" y="707.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.5" y="718.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (3 samples, 0.18%)</title><rect x="1175.2" y="739.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.2" y="750.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.06%)</title><rect x="1176.6" y="723.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.6" y="734.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="1177.3" y="771.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.3" y="782.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.06%)</title><rect x="1177.3" y="755.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.3" y="766.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (1 samples, 0.06%)</title><rect x="1177.3" y="739.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.3" y="750.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1177.3" y="723.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.3" y="734.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (13 samples, 0.78%)</title><rect x="1178.0" y="787.0" width="9.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.0" y="798.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (13 samples, 0.78%)</title><rect x="1178.0" y="771.0" width="9.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.0" y="782.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (13 samples, 0.78%)</title><rect x="1178.0" y="755.0" width="9.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.0" y="766.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (13 samples, 0.78%)</title><rect x="1178.0" y="739.0" width="9.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.0" y="750.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (13 samples, 0.78%)</title><rect x="1178.0" y="723.0" width="9.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.0" y="734.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 0.30%)</title><rect x="1178.0" y="707.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.0" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.06%)</title><rect x="1178.0" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.0" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.06%)</title><rect x="1178.0" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.0" y="686.0"></text>
</g>
<g>
<title>Node::is_iteratively_computed() (1 samples, 0.06%)</title><rect x="1178.0" y="659.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.0" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (4 samples, 0.24%)</title><rect x="1178.7" y="691.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.7" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.06%)</title><rect x="1178.7" y="675.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.7" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.06%)</title><rect x="1178.7" y="659.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.7" y="670.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="1178.7" y="643.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.7" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.06%)</title><rect x="1179.4" y="675.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.4" y="686.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="1179.4" y="659.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.4" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.06%)</title><rect x="1180.1" y="675.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.1" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.06%)</title><rect x="1180.1" y="659.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.1" y="670.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.06%)</title><rect x="1180.9" y="675.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1183.9" y="686.0"></text>
</g>
<g>
<title>Compile::Optimize() (7 samples, 0.42%)</title><rect x="1181.6" y="707.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.6" y="718.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.18%)</title><rect x="1181.6" y="691.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.6" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.18%)</title><rect x="1181.6" y="675.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.6" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.12%)</title><rect x="1181.6" y="659.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.06%)</title><rect x="1182.3" y="643.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.3" y="654.0"></text>
</g>
<g>
<title>CallStaticJavaNode::uncommon_trap_request() const (1 samples, 0.06%)</title><rect x="1182.3" y="627.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.3" y="638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.06%)</title><rect x="1183.0" y="659.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.0" y="670.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.06%)</title><rect x="1183.7" y="691.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.7" y="702.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.06%)</title><rect x="1183.7" y="675.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.7" y="686.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="1183.7" y="659.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.7" y="670.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.271] (1 samples, 0.06%)</title><rect x="1183.7" y="643.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.7" y="654.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (1 samples, 0.06%)</title><rect x="1183.7" y="627.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.7" y="638.0"></text>
</g>
<g>
<title>ConnectionGraph::add_fields_to_worklist(FieldNode*, PointsToNode*) (1 samples, 0.06%)</title><rect x="1183.7" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.7" y="622.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.12%)</title><rect x="1184.4" y="691.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.4" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.12%)</title><rect x="1184.4" y="675.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.4" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.12%)</title><rect x="1184.4" y="659.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.4" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.06%)</title><rect x="1185.1" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.06%)</title><rect x="1185.1" y="627.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.1" y="638.0"></text>
</g>
<g>
<title>RegionNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="1185.8" y="691.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.8" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.5" y="707.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.5" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.5" y="691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.5" y="675.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.5" y="659.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.5" y="643.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.5" y="627.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.5" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.5" y="611.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="622.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.5" y="595.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.5" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.5" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.5" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.5" y="563.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.5" y="547.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.5" y="531.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.5" y="515.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.5" y="499.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.5" y="510.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.5" y="483.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.5" y="467.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.5" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.5" y="451.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.5" y="435.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.5" y="419.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.5" y="403.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.5" y="387.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.5" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1186.5" y="371.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1186.5" y="355.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1186.5" y="339.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1186.5" y="323.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1186.5" y="307.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1186.5" y="291.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="302.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.06%)</title><rect x="1186.5" y="275.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.5" y="286.0"></text>
</g>
<g>
<title>GraphKit::replace_in_map(Node*, Node*) [clone .part.176] (1 samples, 0.06%)</title><rect x="1186.5" y="259.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.5" y="270.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="1186.5" y="243.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.5" y="254.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="1186.5" y="227.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.5" y="238.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1186.5" y="211.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.5" y="222.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.06%)</title><rect x="1186.5" y="195.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="206.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.18%)</title><rect x="1187.2" y="787.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.2" y="798.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.18%)</title><rect x="1187.2" y="771.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.2" y="782.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.65] (3 samples, 0.18%)</title><rect x="1187.2" y="755.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.2" y="766.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.18%)</title><rect x="1187.2" y="739.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.2" y="750.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.18%)</title><rect x="1187.2" y="723.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.2" y="734.0"></text>
</g>
<g>
<title>AdaptiveSizePolicy::calc_active_workers(unsigned long, unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="1187.2" y="707.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.2" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.12%)</title><rect x="1187.9" y="707.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.9" y="718.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::reset() (1 samples, 0.06%)</title><rect x="1187.9" y="691.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.9" y="702.0"></text>
</g>
<g>
<title>G1NewTracer::send_adaptive_ihop_statistics(unsigned long, unsigned long, unsigned long, unsigned long, double, double, bool) (1 samples, 0.06%)</title><rect x="1188.6" y="691.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="702.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.06%)</title><rect x="1189.3" y="787.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.3" y="798.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.06%)</title><rect x="1189.3" y="771.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.3" y="782.0"></text>
</g>
</g>
</svg>
