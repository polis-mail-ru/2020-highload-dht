<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="757"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="757"> </text>
<g id="frames">
<g>
<title>all (902 samples, 100.00%)</title><rect x="10.0" y="723.0" width="1180.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="734.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.55%)</title><rect x="10.0" y="707.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.55%)</title><rect x="10.0" y="691.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.94] (5 samples, 0.55%)</title><rect x="10.0" y="675.0" width="6.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (5 samples, 0.55%)</title><rect x="10.0" y="659.0" width="6.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (3 samples, 0.33%)</title><rect x="10.0" y="643.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.11%)</title><rect x="13.9" y="643.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.9" y="654.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.11%)</title><rect x="15.2" y="643.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.2" y="654.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.11%)</title><rect x="16.5" y="707.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="19.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.22%)</title><rect x="17.8" y="707.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="20.8" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.22%)</title><rect x="17.8" y="691.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="20.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.22%)</title><rect x="17.8" y="675.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="20.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.22%)</title><rect x="17.8" y="659.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="20.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.22%)</title><rect x="17.8" y="643.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="20.8" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.22%)</title><rect x="17.8" y="627.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="20.8" y="638.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.22%)</title><rect x="17.8" y="611.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="20.8" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.11%)</title><rect x="17.8" y="595.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="20.8" y="606.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.11%)</title><rect x="17.8" y="579.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="20.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="17.8" y="563.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="20.8" y="574.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.11%)</title><rect x="19.2" y="595.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="22.2" y="606.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.11%)</title><rect x="19.2" y="579.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="22.2" y="590.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.22%)</title><rect x="20.5" y="707.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="23.5" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.22%)</title><rect x="20.5" y="691.0" width="2.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="23.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.22%)</title><rect x="20.5" y="675.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="23.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.22%)</title><rect x="20.5" y="659.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="23.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.22%)</title><rect x="20.5" y="643.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.5" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.22%)</title><rect x="20.5" y="627.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="23.5" y="638.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.22%)</title><rect x="20.5" y="611.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="23.5" y="622.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.11%)</title><rect x="21.8" y="595.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.8" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="21.8" y="579.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="24.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="21.8" y="563.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="24.8" y="574.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.11%)</title><rect x="23.1" y="707.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="26.1" y="718.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.11%)</title><rect x="23.1" y="691.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="26.1" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.11%)</title><rect x="23.1" y="675.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="26.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (592 samples, 65.63%)</title><rect x="24.4" y="707.0" width="774.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.4" y="718.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (592 samples, 65.63%)</title><rect x="24.4" y="691.0" width="774.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.4" y="702.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (591 samples, 65.52%)</title><rect x="24.4" y="675.0" width="773.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.4" y="686.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.11%)</title><rect x="28.3" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.11%)</title><rect x="28.3" y="643.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.11%)</title><rect x="28.3" y="627.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (100 samples, 11.09%)</title><rect x="29.6" y="659.0" width="130.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.6" y="670.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (91 samples, 10.09%)</title><rect x="41.4" y="643.0" width="119.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.4" y="654.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (50 samples, 5.54%)</title><rect x="44.0" y="627.0" width="65.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.0" y="638.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.11%)</title><rect x="44.0" y="611.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (12 samples, 1.33%)</title><rect x="45.3" y="611.0" width="15.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 1.33%)</title><rect x="45.3" y="595.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 1.33%)</title><rect x="45.3" y="579.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.11%)</title><rect x="45.3" y="563.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.11%)</title><rect x="45.3" y="547.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.11%)</title><rect x="45.3" y="531.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 1.22%)</title><rect x="46.6" y="563.0" width="14.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 1.22%)</title><rect x="46.6" y="547.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.6" y="558.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.11%)</title><rect x="46.6" y="531.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="49.6" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (10 samples, 1.11%)</title><rect x="47.9" y="531.0" width="13.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="50.9" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.00%)</title><rect x="49.2" y="515.0" width="11.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="52.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.00%)</title><rect x="49.2" y="499.0" width="11.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="52.2" y="510.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 1.00%)</title><rect x="49.2" y="483.0" width="11.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="52.2" y="494.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.89%)</title><rect x="50.6" y="467.0" width="10.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="53.6" y="478.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.89%)</title><rect x="50.6" y="451.0" width="10.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="53.6" y="462.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.89%)</title><rect x="50.6" y="435.0" width="10.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="53.6" y="446.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.89%)</title><rect x="50.6" y="419.0" width="10.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="53.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.89%)</title><rect x="50.6" y="403.0" width="10.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="53.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (37 samples, 4.10%)</title><rect x="61.0" y="611.0" width="48.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.0" y="622.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (37 samples, 4.10%)</title><rect x="61.0" y="595.0" width="48.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.0" y="606.0">jdk/..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.11%)</title><rect x="61.0" y="579.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="64.0" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.22%)</title><rect x="62.3" y="579.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="65.3" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.11%)</title><rect x="64.9" y="579.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="67.9" y="590.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 1.44%)</title><rect x="66.3" y="579.0" width="17.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="69.3" y="590.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.22%)</title><rect x="68.9" y="563.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="71.9" y="574.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.67%)</title><rect x="71.5" y="563.0" width="7.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="74.5" y="574.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.22%)</title><rect x="76.7" y="547.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="79.7" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.22%)</title><rect x="79.3" y="563.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="82.3" y="574.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.11%)</title><rect x="82.0" y="563.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="85.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 2.22%)</title><rect x="83.3" y="579.0" width="26.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="86.3" y="590.0">[..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.11%)</title><rect x="83.3" y="563.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="86.3" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_wait (17 samples, 1.88%)</title><rect x="84.6" y="563.0" width="22.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="87.6" y="574.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 1.77%)</title><rect x="85.9" y="547.0" width="20.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="88.9" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 1.77%)</title><rect x="85.9" y="531.0" width="20.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="88.9" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 1.55%)</title><rect x="88.5" y="515.0" width="18.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.5" y="526.0"></text>
</g>
<g>
<title>do_futex (14 samples, 1.55%)</title><rect x="88.5" y="499.0" width="18.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="91.5" y="510.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 1.44%)</title><rect x="89.8" y="483.0" width="17.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="92.8" y="494.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.44%)</title><rect x="91.1" y="467.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="94.1" y="478.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.22%)</title><rect x="92.4" y="451.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="95.4" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.11%)</title><rect x="95.0" y="451.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.0" y="462.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.11%)</title><rect x="95.0" y="435.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="98.0" y="446.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.89%)</title><rect x="96.3" y="467.0" width="10.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="99.3" y="478.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.33%)</title><rect x="100.3" y="451.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="103.3" y="462.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.22%)</title><rect x="104.2" y="451.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="107.2" y="462.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="106.8" y="563.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="109.8" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.11%)</title><rect x="108.1" y="563.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="111.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.44%)</title><rect x="109.4" y="627.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.44%)</title><rect x="109.4" y="611.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.44%)</title><rect x="109.4" y="595.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.44%)</title><rect x="109.4" y="579.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.22%)</title><rect x="110.7" y="563.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.11%)</title><rect x="113.3" y="563.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.11%)</title><rect x="113.3" y="547.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.11%)</title><rect x="113.3" y="531.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (35 samples, 3.88%)</title><rect x="114.7" y="627.0" width="45.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.7" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (35 samples, 3.88%)</title><rect x="114.7" y="611.0" width="45.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.7" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (35 samples, 3.88%)</title><rect x="114.7" y="595.0" width="45.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.7" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 3.88%)</title><rect x="114.7" y="579.0" width="45.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.7" y="590.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (35 samples, 3.88%)</title><rect x="114.7" y="563.0" width="45.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.7" y="574.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.33%)</title><rect x="119.9" y="547.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="122.9" y="558.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (28 samples, 3.10%)</title><rect x="123.8" y="547.0" width="36.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="126.8" y="558.0">pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 2.99%)</title><rect x="125.1" y="531.0" width="35.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="128.1" y="542.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (27 samples, 2.99%)</title><rect x="125.1" y="515.0" width="35.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="128.1" y="526.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 2.88%)</title><rect x="126.4" y="499.0" width="34.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="129.4" y="510.0">__..</text>
</g>
<g>
<title>do_futex (26 samples, 2.88%)</title><rect x="126.4" y="483.0" width="34.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="129.4" y="494.0">do..</text>
</g>
<g>
<title>futex_wake (26 samples, 2.88%)</title><rect x="126.4" y="467.0" width="34.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="129.4" y="478.0">fu..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.22%)</title><rect x="129.0" y="451.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="132.0" y="462.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 2.44%)</title><rect x="131.7" y="451.0" width="28.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="134.7" y="462.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (22 samples, 2.44%)</title><rect x="131.7" y="435.0" width="28.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="134.7" y="446.0">tr..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 2.44%)</title><rect x="131.7" y="419.0" width="28.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.7" y="430.0">_r..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$66/2114737454.run (487 samples, 53.99%)</title><rect x="160.4" y="659.0" width="637.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.4" y="670.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda$66/2114737454.run</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$operation$1 (486 samples, 53.88%)</title><rect x="160.4" y="643.0" width="635.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.4" y="654.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$operation$1</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="160.4" y="627.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="160.4" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.doGet (485 samples, 53.77%)</title><rect x="161.8" y="627.0" width="634.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.8" y="638.0">ru/mail/polis/service/s3ponia/AsyncService.doGet</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (360 samples, 39.91%)</title><rect x="161.8" y="611.0" width="470.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.8" y="622.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.11%)</title><rect x="176.1" y="595.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="179.1" y="606.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 1.55%)</title><rect x="177.5" y="595.0" width="18.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="180.5" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 1.55%)</title><rect x="177.5" y="579.0" width="18.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="180.5" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (13 samples, 1.44%)</title><rect x="177.5" y="563.0" width="17.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="180.5" y="574.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (3 samples, 0.33%)</title><rect x="178.8" y="547.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="181.8" y="558.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 1.00%)</title><rect x="182.7" y="547.0" width="11.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="185.7" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.94] (1 samples, 0.11%)</title><rect x="194.5" y="563.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="197.5" y="574.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.11%)</title><rect x="194.5" y="547.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="197.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.33%)</title><rect x="195.8" y="595.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.33%)</title><rect x="195.8" y="579.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.33%)</title><rect x="195.8" y="563.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.8" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.33%)</title><rect x="195.8" y="547.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="198.8" y="558.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.22%)</title><rect x="197.1" y="531.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="200.1" y="542.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.22%)</title><rect x="197.1" y="515.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="200.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (328 samples, 36.36%)</title><rect x="199.7" y="595.0" width="429.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.7" y="606.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.78%)</title><rect x="199.7" y="579.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.22%)</title><rect x="206.2" y="563.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.22%)</title><rect x="206.2" y="547.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.22%)</title><rect x="206.2" y="531.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.22%)</title><rect x="206.2" y="515.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.22%)</title><rect x="206.2" y="499.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (321 samples, 35.59%)</title><rect x="208.8" y="579.0" width="420.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.8" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (321 samples, 35.59%)</title><rect x="208.8" y="563.0" width="420.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.8" y="574.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (320 samples, 35.48%)</title><rect x="210.2" y="547.0" width="418.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.2" y="558.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (320 samples, 35.48%)</title><rect x="210.2" y="531.0" width="418.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.2" y="542.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (12 samples, 1.33%)</title><rect x="211.5" y="515.0" width="15.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="214.5" y="526.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (4 samples, 0.44%)</title><rect x="216.7" y="499.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="219.7" y="510.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.11%)</title><rect x="221.9" y="499.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="224.9" y="510.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.11%)</title><rect x="223.2" y="499.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="226.2" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.22%)</title><rect x="224.5" y="499.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="227.5" y="510.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.11%)</title><rect x="224.5" y="483.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="227.5" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (1 samples, 0.11%)</title><rect x="225.9" y="483.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="228.9" y="494.0"></text>
</g>
<g>
<title>__libc_send (307 samples, 34.04%)</title><rect x="227.2" y="515.0" width="401.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="230.2" y="526.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (304 samples, 33.70%)</title><rect x="231.1" y="499.0" width="397.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="234.1" y="510.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (304 samples, 33.70%)</title><rect x="231.1" y="483.0" width="397.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="234.1" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (302 samples, 33.48%)</title><rect x="233.7" y="467.0" width="395.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="236.7" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (301 samples, 33.37%)</title><rect x="235.0" y="451.0" width="393.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="238.0" y="462.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.22%)</title><rect x="237.6" y="435.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="240.6" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (293 samples, 32.48%)</title><rect x="240.2" y="435.0" width="383.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="243.2" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (1 samples, 0.11%)</title><rect x="241.6" y="419.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="244.6" y="430.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.11%)</title><rect x="241.6" y="403.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="244.6" y="414.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.11%)</title><rect x="242.9" y="419.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="245.9" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.11%)</title><rect x="242.9" y="403.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="245.9" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (290 samples, 32.15%)</title><rect x="244.2" y="419.0" width="379.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="247.2" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="244.2" y="403.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="247.2" y="414.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.33%)</title><rect x="245.5" y="403.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="248.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.22%)</title><rect x="246.8" y="387.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="249.8" y="398.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.11%)</title><rect x="249.4" y="403.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="252.4" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (285 samples, 31.60%)</title><rect x="250.7" y="403.0" width="372.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.7" y="414.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.33%)</title><rect x="262.5" y="387.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="265.5" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="262.5" y="371.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.5" y="382.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.22%)</title><rect x="263.8" y="371.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="266.8" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (240 samples, 26.61%)</title><rect x="266.4" y="387.0" width="314.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="269.4" y="398.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (238 samples, 26.39%)</title><rect x="269.0" y="371.0" width="311.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="272.0" y="382.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (228 samples, 25.28%)</title><rect x="272.9" y="355.0" width="298.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="275.9" y="366.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (210 samples, 23.28%)</title><rect x="280.8" y="339.0" width="274.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="283.8" y="350.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (7 samples, 0.78%)</title><rect x="280.8" y="323.0" width="9.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="283.8" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (7 samples, 0.78%)</title><rect x="280.8" y="307.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="283.8" y="318.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.22%)</title><rect x="282.1" y="291.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="285.1" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.44%)</title><rect x="284.7" y="291.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="287.7" y="302.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.22%)</title><rect x="287.3" y="275.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="290.3" y="286.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.11%)</title><rect x="288.6" y="259.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="291.6" y="270.0"></text>
</g>
<g>
<title>ip_output (203 samples, 22.51%)</title><rect x="290.0" y="323.0" width="265.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="293.0" y="334.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.33%)</title><rect x="291.3" y="307.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="294.3" y="318.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.22%)</title><rect x="292.6" y="291.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="295.6" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (190 samples, 21.06%)</title><rect x="295.2" y="307.0" width="248.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="298.2" y="318.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (16 samples, 1.77%)</title><rect x="304.3" y="291.0" width="21.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="307.3" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="310.9" y="275.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="313.9" y="286.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.89%)</title><rect x="312.2" y="275.0" width="10.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="315.2" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.78%)</title><rect x="313.5" y="259.0" width="9.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="316.5" y="270.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.22%)</title><rect x="316.1" y="243.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="319.1" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.22%)</title><rect x="316.1" y="227.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="319.1" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.22%)</title><rect x="316.1" y="211.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="319.1" y="222.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.22%)</title><rect x="318.7" y="243.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="321.7" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.11%)</title><rect x="321.4" y="243.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="324.4" y="254.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.22%)</title><rect x="322.7" y="275.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="325.7" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (167 samples, 18.51%)</title><rect x="325.3" y="291.0" width="218.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="328.3" y="302.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (166 samples, 18.40%)</title><rect x="326.6" y="275.0" width="217.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="329.6" y="286.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (161 samples, 17.85%)</title><rect x="333.1" y="259.0" width="210.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="336.1" y="270.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (161 samples, 17.85%)</title><rect x="333.1" y="243.0" width="210.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="336.1" y="254.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (156 samples, 17.29%)</title><rect x="339.7" y="227.0" width="204.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.7" y="238.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.22%)</title><rect x="342.3" y="211.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="345.3" y="222.0"></text>
</g>
<g>
<title>process_backlog (152 samples, 16.85%)</title><rect x="344.9" y="211.0" width="198.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="347.9" y="222.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (149 samples, 16.52%)</title><rect x="348.8" y="195.0" width="194.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="351.8" y="206.0">__netif_receive_skb_one_c..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.44%)</title><rect x="350.1" y="179.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="353.1" y="190.0"></text>
</g>
<g>
<title>ip_rcv (144 samples, 15.96%)</title><rect x="355.4" y="179.0" width="188.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.4" y="190.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (141 samples, 15.63%)</title><rect x="358.0" y="163.0" width="184.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="361.0" y="174.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (140 samples, 15.52%)</title><rect x="359.3" y="147.0" width="183.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="362.3" y="158.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (139 samples, 15.41%)</title><rect x="360.6" y="131.0" width="181.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="363.6" y="142.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.11%)</title><rect x="364.5" y="115.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="367.5" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (135 samples, 14.97%)</title><rect x="365.8" y="115.0" width="176.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="368.8" y="126.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.44%)</title><rect x="371.1" y="99.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="374.1" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.44%)</title><rect x="376.3" y="99.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="379.3" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.44%)</title><rect x="376.3" y="83.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="379.3" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.44%)</title><rect x="376.3" y="67.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="379.3" y="78.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.33%)</title><rect x="377.6" y="51.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="380.6" y="62.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1 samples, 0.11%)</title><rect x="380.2" y="35.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="383.2" y="46.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.11%)</title><rect x="381.5" y="99.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.5" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (121 samples, 13.41%)</title><rect x="382.8" y="99.0" width="158.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="385.8" y="110.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (120 samples, 13.30%)</title><rect x="384.1" y="83.0" width="157.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="387.1" y="94.0">tcp_rcv_established</text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.33%)</title><rect x="385.5" y="67.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="388.5" y="78.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.33%)</title><rect x="385.5" y="51.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="388.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.22%)</title><rect x="386.8" y="35.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="389.8" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (69 samples, 7.65%)</title><rect x="389.4" y="67.0" width="90.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="392.4" y="78.0">sock_def_r..</text>
</g>
<g>
<title>__wake_up_common_lock (68 samples, 7.54%)</title><rect x="390.7" y="51.0" width="88.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="393.7" y="62.0">__wake_up_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 7.43%)</title><rect x="392.0" y="35.0" width="87.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="395.0" y="46.0">_raw_spin_..</text>
</g>
<g>
<title>tcp_ack (42 samples, 4.66%)</title><rect x="479.6" y="67.0" width="55.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="482.6" y="78.0">tcp_ack</text>
</g>
<g>
<title>__kfree_skb (24 samples, 2.66%)</title><rect x="488.8" y="51.0" width="31.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="491.8" y="62.0">__..</text>
</g>
<g>
<title>__slab_free (4 samples, 0.44%)</title><rect x="488.8" y="35.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="491.8" y="46.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.89%)</title><rect x="494.0" y="35.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="497.0" y="46.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 1.33%)</title><rect x="504.5" y="35.0" width="15.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="507.5" y="46.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.22%)</title><rect x="520.2" y="51.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="523.2" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.11%)</title><rect x="522.8" y="51.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.8" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.22%)</title><rect x="524.1" y="51.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="527.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.11%)</title><rect x="525.4" y="35.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="528.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.44%)</title><rect x="526.7" y="51.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="529.7" y="62.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.11%)</title><rect x="532.0" y="51.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="535.0" y="62.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.11%)</title><rect x="533.3" y="51.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="536.3" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.22%)</title><rect x="534.6" y="67.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="537.6" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.22%)</title><rect x="537.2" y="67.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="540.2" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="539.8" y="67.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="542.8" y="78.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.11%)</title><rect x="539.8" y="51.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="542.8" y="62.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.11%)</title><rect x="541.1" y="99.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.1" y="110.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.11%)</title><rect x="542.4" y="163.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="545.4" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.11%)</title><rect x="542.4" y="147.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="545.4" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.11%)</title><rect x="543.7" y="307.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="546.7" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.89%)</title><rect x="545.1" y="307.0" width="10.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.1" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.78%)</title><rect x="545.1" y="291.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="548.1" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (7 samples, 0.78%)</title><rect x="545.1" y="275.0" width="9.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.1" y="286.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.22%)</title><rect x="547.7" y="259.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="550.7" y="270.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (3 samples, 0.33%)</title><rect x="550.3" y="259.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="553.3" y="270.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.11%)</title><rect x="554.2" y="291.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="557.2" y="302.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.33%)</title><rect x="555.5" y="339.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="558.5" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.11%)</title><rect x="558.1" y="323.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="561.1" y="334.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.44%)</title><rect x="559.4" y="339.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="562.4" y="350.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.11%)</title><rect x="564.7" y="339.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="567.7" y="350.0"></text>
</g>
<g>
<title>ip_queue_xmit?[ipv6] (1 samples, 0.11%)</title><rect x="566.0" y="339.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="569.0" y="350.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.11%)</title><rect x="567.3" y="339.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="570.3" y="350.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.11%)</title><rect x="568.6" y="339.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="571.6" y="350.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.11%)</title><rect x="568.6" y="323.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.6" y="334.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.11%)</title><rect x="569.9" y="339.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="572.9" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.55%)</title><rect x="571.2" y="355.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="574.2" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.33%)</title><rect x="572.5" y="339.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.5" y="350.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.22%)</title><rect x="573.8" y="323.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="576.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.11%)</title><rect x="573.8" y="307.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="576.8" y="318.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.11%)</title><rect x="575.1" y="307.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="578.1" y="318.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.11%)</title><rect x="576.5" y="339.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="579.5" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.22%)</title><rect x="577.8" y="355.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="580.8" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (11 samples, 1.22%)</title><rect x="580.4" y="387.0" width="14.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="583.4" y="398.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.55%)</title><rect x="583.0" y="371.0" width="6.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="586.0" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.55%)</title><rect x="583.0" y="355.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="586.0" y="366.0"></text>
</g>
<g>
<title>iov_iter_advance (4 samples, 0.44%)</title><rect x="589.5" y="371.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="592.5" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.11%)</title><rect x="594.8" y="387.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="597.8" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.11%)</title><rect x="594.8" y="371.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="597.8" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 1.33%)</title><rect x="596.1" y="387.0" width="15.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="599.1" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 1.11%)</title><rect x="598.7" y="371.0" width="13.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="601.7" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.22%)</title><rect x="602.6" y="355.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="605.6" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.22%)</title><rect x="602.6" y="339.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="605.6" y="350.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.11%)</title><rect x="603.9" y="323.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.9" y="334.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.22%)</title><rect x="605.2" y="355.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="608.2" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.33%)</title><rect x="607.8" y="355.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="610.8" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.11%)</title><rect x="610.5" y="339.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="613.5" y="350.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.11%)</title><rect x="611.8" y="387.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="614.8" y="398.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.11%)</title><rect x="611.8" y="371.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="614.8" y="382.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.11%)</title><rect x="613.1" y="387.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="616.1" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.44%)</title><rect x="614.4" y="387.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="617.4" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.44%)</title><rect x="614.4" y="371.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="617.4" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.33%)</title><rect x="615.7" y="355.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="618.7" y="366.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (1 samples, 0.11%)</title><rect x="619.6" y="387.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="622.6" y="398.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.22%)</title><rect x="620.9" y="387.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.9" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.44%)</title><rect x="623.5" y="435.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="626.5" y="446.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.33%)</title><rect x="624.9" y="419.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="627.9" y="430.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.33%)</title><rect x="624.9" y="403.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.33%)</title><rect x="628.8" y="595.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (125 samples, 13.86%)</title><rect x="632.7" y="611.0" width="163.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.7" y="622.0">ru/mail/polis/dao/DAO..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (11 samples, 1.22%)</title><rect x="632.7" y="595.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (11 samples, 1.22%)</title><rect x="632.7" y="579.0" width="14.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (11 samples, 1.22%)</title><rect x="632.7" y="563.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (11 samples, 1.22%)</title><rect x="632.7" y="547.0" width="14.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (11 samples, 1.22%)</title><rect x="632.7" y="531.0" width="14.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.44%)</title><rect x="632.7" y="515.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.44%)</title><rect x="632.7" y="499.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.7" y="510.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.44%)</title><rect x="632.7" y="483.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.44%)</title><rect x="632.7" y="467.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.44%)</title><rect x="632.7" y="451.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (4 samples, 0.44%)</title><rect x="632.7" y="435.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.22%)</title><rect x="635.3" y="419.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.22%)</title><rect x="635.3" y="403.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$86/564058449.get$Lambda (1 samples, 0.11%)</title><rect x="636.6" y="387.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$97/60972915.apply (7 samples, 0.78%)</title><rect x="637.9" y="515.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (7 samples, 0.78%)</title><rect x="637.9" y="499.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.78%)</title><rect x="637.9" y="483.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (7 samples, 0.78%)</title><rect x="637.9" y="467.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.78%)</title><rect x="637.9" y="451.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.78%)</title><rect x="637.9" y="435.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.9" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.78%)</title><rect x="637.9" y="419.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.9" y="430.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.11%)</title><rect x="643.2" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="644.5" y="403.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.11%)</title><rect x="645.8" y="403.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (9 samples, 1.00%)</title><rect x="647.1" y="595.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (9 samples, 1.00%)</title><rect x="647.1" y="579.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$102/1839248799.apply (8 samples, 0.89%)</title><rect x="648.4" y="563.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$iterator$2 (8 samples, 0.89%)</title><rect x="648.4" y="547.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (6 samples, 0.67%)</title><rect x="648.4" y="531.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.67%)</title><rect x="648.4" y="515.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (6 samples, 0.67%)</title><rect x="648.4" y="499.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.4" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.44%)</title><rect x="651.0" y="483.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.33%)</title><rect x="652.3" y="467.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.3" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="654.9" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.getValue (2 samples, 0.22%)</title><rect x="656.3" y="531.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.11%)</title><rect x="657.6" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.11%)</title><rect x="657.6" y="499.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="657.6" y="483.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="657.6" y="467.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="657.6" y="451.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="657.6" y="435.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.44%)</title><rect x="658.9" y="595.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.9" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.44%)</title><rect x="658.9" y="579.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.22%)</title><rect x="661.5" y="563.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.5" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.11%)</title><rect x="662.8" y="547.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.iterator (101 samples, 11.20%)</title><rect x="664.1" y="595.0" width="132.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.1" y="606.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.iterateThroughTableCells (101 samples, 11.20%)</title><rect x="664.1" y="579.0" width="132.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.1" y="590.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.33%)</title><rect x="666.7" y="563.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.7" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 0.11%)</title><rect x="670.6" y="563.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 1.00%)</title><rect x="672.0" y="563.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="675.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (9 samples, 1.00%)</title><rect x="672.0" y="547.0" width="11.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (8 samples, 0.89%)</title><rect x="673.3" y="531.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.3" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (6 samples, 0.67%)</title><rect x="675.9" y="515.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.9" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (6 samples, 0.67%)</title><rect x="675.9" y="499.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (4 samples, 0.44%)</title><rect x="678.5" y="483.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (9 samples, 1.00%)</title><rect x="683.7" y="563.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (9 samples, 1.00%)</title><rect x="683.7" y="547.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (1 samples, 0.11%)</title><rect x="683.7" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.7" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="683.7" y="515.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (8 samples, 0.89%)</title><rect x="685.0" y="531.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.22%)</title><rect x="689.0" y="515.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.22%)</title><rect x="691.6" y="515.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.22%)</title><rect x="691.6" y="499.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.11%)</title><rect x="691.6" y="483.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.11%)</title><rect x="692.9" y="483.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.9" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="692.9" y="467.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="695.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.getMask (1 samples, 0.11%)</title><rect x="694.2" y="515.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.iterator (50 samples, 5.54%)</title><rect x="695.5" y="563.0" width="65.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.5" y="574.0">ru/mail..</text>
</g>
<g>
<title>java/util/Collection.stream (47 samples, 5.21%)</title><rect x="695.5" y="547.0" width="61.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.5" y="558.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (47 samples, 5.21%)</title><rect x="695.5" y="531.0" width="61.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.5" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (47 samples, 5.21%)</title><rect x="695.5" y="515.0" width="61.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.5" y="526.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (47 samples, 5.21%)</title><rect x="695.5" y="499.0" width="61.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.5" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (47 samples, 5.21%)</title><rect x="695.5" y="483.0" width="61.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.5" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (47 samples, 5.21%)</title><rect x="695.5" y="467.0" width="61.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.5" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.22%)</title><rect x="696.8" y="451.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.22%)</title><rect x="696.8" y="435.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.22%)</title><rect x="696.8" y="419.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.8" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.22%)</title><rect x="696.8" y="403.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (44 samples, 4.88%)</title><rect x="699.4" y="451.0" width="57.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.4" y="462.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (25 samples, 2.77%)</title><rect x="724.3" y="435.0" width="32.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.3" y="446.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (24 samples, 2.66%)</title><rect x="725.6" y="419.0" width="31.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.6" y="430.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (23 samples, 2.55%)</title><rect x="726.9" y="403.0" width="30.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.9" y="414.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.11%)</title><rect x="729.5" y="387.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.5" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (20 samples, 2.22%)</title><rect x="730.8" y="387.0" width="26.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.8" y="398.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 1.00%)</title><rect x="745.2" y="371.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.2" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.22%)</title><rect x="750.4" y="355.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.33%)</title><rect x="753.1" y="355.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.11%)</title><rect x="757.0" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.11%)</title><rect x="757.0" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.11%)</title><rect x="757.0" y="515.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (2 samples, 0.22%)</title><rect x="758.3" y="547.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (2 samples, 0.22%)</title><rect x="758.3" y="531.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (2 samples, 0.22%)</title><rect x="758.3" y="515.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.22%)</title><rect x="758.3" y="499.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="761.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.22%)</title><rect x="758.3" y="483.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="761.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (1 samples, 0.11%)</title><rect x="759.6" y="467.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.11%)</title><rect x="759.6" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.returnIteratorOverMergedCollapsedFiltered (27 samples, 2.99%)</title><rect x="760.9" y="563.0" width="35.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.9" y="574.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (19 samples, 2.11%)</title><rect x="760.9" y="547.0" width="24.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.9" y="558.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (17 samples, 1.88%)</title><rect x="763.5" y="531.0" width="22.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.5" y="542.0">c..</text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.11%)</title><rect x="764.8" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (2 samples, 0.22%)</title><rect x="766.1" y="515.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.1" y="526.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (1 samples, 0.11%)</title><rect x="767.5" y="499.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.5" y="510.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (13 samples, 1.44%)</title><rect x="768.8" y="515.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (13 samples, 1.44%)</title><rect x="768.8" y="499.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (13 samples, 1.44%)</title><rect x="768.8" y="483.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (2 samples, 0.22%)</title><rect x="771.4" y="467.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (2 samples, 0.22%)</title><rect x="771.4" y="451.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="774.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.clear (1 samples, 0.11%)</title><rect x="774.0" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.44%)</title><rect x="775.3" y="467.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$90/1621349226.getAsBoolean (3 samples, 0.33%)</title><rect x="776.6" y="451.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.33%)</title><rect x="776.6" y="435.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.33%)</title><rect x="776.6" y="419.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.11%)</title><rect x="776.6" y="403.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.11%)</title><rect x="776.6" y="387.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.11%)</title><rect x="776.6" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.11%)</title><rect x="776.6" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2 samples, 0.22%)</title><rect x="777.9" y="403.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable$$Lambda$75/1573259541.apply (1 samples, 0.11%)</title><rect x="779.2" y="387.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.lambda$iterator$2 (1 samples, 0.11%)</title><rect x="779.2" y="371.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.of (1 samples, 0.11%)</title><rect x="779.2" y="355.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.&lt;init&gt; (1 samples, 0.11%)</title><rect x="779.2" y="339.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (1 samples, 0.11%)</title><rect x="780.5" y="467.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.5" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (3 samples, 0.33%)</title><rect x="781.8" y="467.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooHigh (1 samples, 0.11%)</title><rect x="784.5" y="451.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.5" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (2 samples, 0.22%)</title><rect x="785.8" y="547.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.8" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (1 samples, 0.11%)</title><rect x="787.1" y="531.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.1" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.11%)</title><rect x="787.1" y="515.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="790.1" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.values (1 samples, 0.11%)</title><rect x="788.4" y="547.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.4" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableCollection (1 samples, 0.11%)</title><rect x="788.4" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.55%)</title><rect x="789.7" y="547.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.55%)</title><rect x="789.7" y="531.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.55%)</title><rect x="789.7" y="515.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="792.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.44%)</title><rect x="789.7" y="499.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.7" y="510.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.44%)</title><rect x="789.7" y="483.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.44%)</title><rect x="789.7" y="467.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.44%)</title><rect x="789.7" y="451.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (1 samples, 0.11%)</title><rect x="789.7" y="435.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$90/1621349226.getAsBoolean (1 samples, 0.11%)</title><rect x="789.7" y="419.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (1 samples, 0.11%)</title><rect x="789.7" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (1 samples, 0.11%)</title><rect x="789.7" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="792.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.11%)</title><rect x="789.7" y="371.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable$$Lambda$75/1573259541.apply (1 samples, 0.11%)</title><rect x="789.7" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.lambda$iterator$2 (1 samples, 0.11%)</title><rect x="789.7" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.of (1 samples, 0.11%)</title><rect x="789.7" y="323.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.&lt;init&gt; (1 samples, 0.11%)</title><rect x="789.7" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (1 samples, 0.11%)</title><rect x="791.0" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$81/723609740.get (1 samples, 0.11%)</title><rect x="791.0" y="419.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.lambda$spliterator$0 (1 samples, 0.11%)</title><rect x="791.0" y="403.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.11%)</title><rect x="791.0" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="794.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.11%)</title><rect x="791.0" y="371.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (2 samples, 0.22%)</title><rect x="792.3" y="435.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.11%)</title><rect x="792.3" y="419.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.11%)</title><rect x="792.3" y="403.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.11%)</title><rect x="793.6" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1 samples, 0.11%)</title><rect x="793.6" y="403.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (1 samples, 0.11%)</title><rect x="793.6" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.11%)</title><rect x="793.6" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.11%)</title><rect x="793.6" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.11%)</title><rect x="794.9" y="499.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.9" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.11%)</title><rect x="796.2" y="643.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.2" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.11%)</title><rect x="796.2" y="627.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="799.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.11%)</title><rect x="796.2" y="611.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="799.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$66/2114737454.run (1 samples, 0.11%)</title><rect x="797.5" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$operation$1 (1 samples, 0.11%)</title><rect x="797.5" y="659.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="797.5" y="643.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.11%)</title><rect x="797.5" y="627.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.5" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (287 samples, 31.82%)</title><rect x="798.8" y="707.0" width="375.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.8" y="718.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.11%)</title><rect x="798.8" y="691.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 3.44%)</title><rect x="800.2" y="691.0" width="40.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.2" y="702.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (31 samples, 3.44%)</title><rect x="800.2" y="675.0" width="40.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="803.2" y="686.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.11%)</title><rect x="800.2" y="659.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="803.2" y="670.0"></text>
</g>
<g>
<title>epoll_wait (30 samples, 3.33%)</title><rect x="801.5" y="659.0" width="39.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="804.5" y="670.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 2.88%)</title><rect x="806.7" y="643.0" width="34.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="809.7" y="654.0">en..</text>
</g>
<g>
<title>do_syscall_64 (26 samples, 2.88%)</title><rect x="806.7" y="627.0" width="34.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="809.7" y="638.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (22 samples, 2.44%)</title><rect x="811.9" y="611.0" width="28.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="814.9" y="622.0">__..</text>
</g>
<g>
<title>do_epoll_wait (22 samples, 2.44%)</title><rect x="811.9" y="595.0" width="28.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="814.9" y="606.0">do..</text>
</g>
<g>
<title>__fget_light (2 samples, 0.22%)</title><rect x="811.9" y="579.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="814.9" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.22%)</title><rect x="811.9" y="563.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="814.9" y="574.0"></text>
</g>
<g>
<title>ep_poll (20 samples, 2.22%)</title><rect x="814.5" y="579.0" width="26.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="817.5" y="590.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (13 samples, 1.44%)</title><rect x="815.9" y="563.0" width="17.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="818.9" y="574.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 1.00%)</title><rect x="819.8" y="547.0" width="11.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="822.8" y="558.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.11%)</title><rect x="821.1" y="531.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="824.1" y="542.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.78%)</title><rect x="822.4" y="531.0" width="9.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="825.4" y="542.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.55%)</title><rect x="825.0" y="515.0" width="6.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="828.0" y="526.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.33%)</title><rect x="827.6" y="499.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="830.6" y="510.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.11%)</title><rect x="831.6" y="547.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="834.6" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.11%)</title><rect x="831.6" y="531.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="834.6" y="542.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.11%)</title><rect x="831.6" y="515.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="834.6" y="526.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.67%)</title><rect x="832.9" y="563.0" width="7.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.9" y="574.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.55%)</title><rect x="834.2" y="547.0" width="6.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="837.2" y="558.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.44%)</title><rect x="835.5" y="531.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="838.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (255 samples, 28.27%)</title><rect x="840.7" y="691.0" width="333.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.7" y="702.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (249 samples, 27.61%)</title><rect x="843.3" y="675.0" width="325.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.3" y="686.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (181 samples, 20.07%)</title><rect x="844.6" y="659.0" width="236.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.6" y="670.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (117 samples, 12.97%)</title><rect x="856.4" y="643.0" width="153.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.4" y="654.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (115 samples, 12.75%)</title><rect x="859.0" y="627.0" width="150.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.0" y="638.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (94 samples, 10.42%)</title><rect x="859.0" y="611.0" width="123.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="862.0" y="622.0">RequestHandler0..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 1.33%)</title><rect x="859.0" y="595.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 1.33%)</title><rect x="859.0" y="579.0" width="15.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="862.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="862.9" y="563.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="865.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.11%)</title><rect x="862.9" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.44%)</title><rect x="864.3" y="563.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.44%)</title><rect x="864.3" y="547.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.3" y="558.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.11%)</title><rect x="868.2" y="531.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.2" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="869.5" y="563.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="872.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.33%)</title><rect x="870.8" y="563.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="873.4" y="547.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="873.4" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.11%)</title><rect x="873.4" y="515.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.get (82 samples, 9.09%)</title><rect x="874.7" y="595.0" width="107.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.7" y="606.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.22%)</title><rect x="874.7" y="579.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.22%)</title><rect x="874.7" y="563.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.22%)</title><rect x="874.7" y="547.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.22%)</title><rect x="874.7" y="531.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.7" y="542.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.11%)</title><rect x="876.0" y="515.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="879.0" y="526.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.11%)</title><rect x="876.0" y="499.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="879.0" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.11%)</title><rect x="876.0" y="483.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="879.0" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.11%)</title><rect x="876.0" y="467.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="879.0" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.11%)</title><rect x="876.0" y="451.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="879.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.44%)</title><rect x="877.3" y="579.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="880.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.44%)</title><rect x="877.3" y="563.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="880.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.operation (76 samples, 8.43%)</title><rect x="882.6" y="579.0" width="99.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.6" y="590.0">ru/mail/poli..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (75 samples, 8.31%)</title><rect x="882.6" y="563.0" width="98.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.6" y="574.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (66 samples, 7.32%)</title><rect x="894.3" y="547.0" width="86.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.3" y="558.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (10 samples, 1.11%)</title><rect x="897.0" y="531.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 1.11%)</title><rect x="897.0" y="515.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="900.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (10 samples, 1.11%)</title><rect x="897.0" y="499.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (10 samples, 1.11%)</title><rect x="897.0" y="483.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.22%)</title><rect x="910.0" y="531.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.22%)</title><rect x="910.0" y="515.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.11%)</title><rect x="910.0" y="499.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.11%)</title><rect x="910.0" y="483.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.11%)</title><rect x="910.0" y="467.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.11%)</title><rect x="910.0" y="451.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.0" y="462.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.11%)</title><rect x="910.0" y="435.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="913.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.11%)</title><rect x="911.4" y="499.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (52 samples, 5.76%)</title><rect x="912.7" y="531.0" width="68.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.7" y="542.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (52 samples, 5.76%)</title><rect x="912.7" y="515.0" width="68.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.7" y="526.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (52 samples, 5.76%)</title><rect x="912.7" y="499.0" width="68.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.7" y="510.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.11%)</title><rect x="916.6" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (48 samples, 5.32%)</title><rect x="917.9" y="483.0" width="62.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.9" y="494.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 5.32%)</title><rect x="917.9" y="467.0" width="62.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.9" y="478.0">jdk/in..</text>
</g>
<g>
<title>/lib64/ld-2.30.so (1 samples, 0.11%)</title><rect x="917.9" y="451.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="920.9" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.78%)</title><rect x="919.2" y="451.0" width="9.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="922.2" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.33%)</title><rect x="920.5" y="435.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="923.5" y="446.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.22%)</title><rect x="924.4" y="435.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="927.4" y="446.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.11%)</title><rect x="927.1" y="435.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="930.1" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="928.4" y="451.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="931.4" y="462.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (39 samples, 4.32%)</title><rect x="929.7" y="451.0" width="51.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="932.7" y="462.0">pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 3.88%)</title><rect x="934.9" y="435.0" width="45.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.9" y="446.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (35 samples, 3.88%)</title><rect x="934.9" y="419.0" width="45.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="937.9" y="430.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 3.55%)</title><rect x="937.5" y="403.0" width="41.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.5" y="414.0">__x..</text>
</g>
<g>
<title>do_futex (32 samples, 3.55%)</title><rect x="937.5" y="387.0" width="41.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="940.5" y="398.0">do_..</text>
</g>
<g>
<title>futex_wake (32 samples, 3.55%)</title><rect x="937.5" y="371.0" width="41.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="940.5" y="382.0">fut..</text>
</g>
<g>
<title>hash_futex (2 samples, 0.22%)</title><rect x="942.7" y="355.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="945.7" y="366.0"></text>
</g>
<g>
<title>wake_up_q (26 samples, 2.88%)</title><rect x="945.4" y="355.0" width="34.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="948.4" y="366.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (26 samples, 2.88%)</title><rect x="945.4" y="339.0" width="34.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="948.4" y="350.0">tr..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 2.88%)</title><rect x="945.4" y="323.0" width="34.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="948.4" y="334.0">_r..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.11%)</title><rect x="979.4" y="403.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="982.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (1 samples, 0.11%)</title><rect x="980.7" y="563.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (1 samples, 0.11%)</title><rect x="980.7" y="547.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$20/135184888.apply (1 samples, 0.11%)</title><rect x="980.7" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (1 samples, 0.11%)</title><rect x="980.7" y="515.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (12 samples, 1.33%)</title><rect x="982.0" y="611.0" width="15.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="985.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 1.33%)</title><rect x="982.0" y="595.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="985.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.22%)</title><rect x="982.0" y="579.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 1.11%)</title><rect x="984.6" y="579.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (10 samples, 1.11%)</title><rect x="984.6" y="563.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="987.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (10 samples, 1.11%)</title><rect x="984.6" y="547.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 1.00%)</title><rect x="997.7" y="611.0" width="11.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1000.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 1.00%)</title><rect x="997.7" y="595.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 1.00%)</title><rect x="997.7" y="579.0" width="11.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.7" y="590.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1 samples, 0.11%)</title><rect x="997.7" y="563.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.7" y="574.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.89%)</title><rect x="999.0" y="563.0" width="10.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1002.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 4.10%)</title><rect x="1009.5" y="643.0" width="48.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.5" y="654.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1016.0" y="627.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1019.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="1016.0" y="611.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="1016.0" y="595.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1019.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 2.55%)</title><rect x="1017.3" y="627.0" width="30.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1020.3" y="638.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 2.55%)</title><rect x="1017.3" y="611.0" width="30.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.3" y="622.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (8 samples, 0.89%)</title><rect x="1047.4" y="627.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.4" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.22%)</title><rect x="1055.3" y="611.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1058.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.11%)</title><rect x="1057.9" y="643.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="1057.9" y="627.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.44%)</title><rect x="1059.2" y="643.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 1.22%)</title><rect x="1064.4" y="643.0" width="14.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 1.11%)</title><rect x="1065.7" y="627.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1068.7" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.11%)</title><rect x="1077.5" y="611.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.22%)</title><rect x="1078.8" y="643.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1081.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.22%)</title><rect x="1078.8" y="627.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1081.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.22%)</title><rect x="1078.8" y="611.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1081.8" y="622.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.11%)</title><rect x="1080.1" y="595.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1083.1" y="606.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.11%)</title><rect x="1080.1" y="579.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1083.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (67 samples, 7.43%)</title><rect x="1081.4" y="659.0" width="87.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.4" y="670.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (65 samples, 7.21%)</title><rect x="1081.4" y="643.0" width="85.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1084.4" y="654.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (20 samples, 2.22%)</title><rect x="1082.7" y="627.0" width="26.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1085.7" y="638.0">J..</text>
</g>
<g>
<title>/lib64/libc-2.30.so (3 samples, 0.33%)</title><rect x="1084.0" y="611.0" width="4.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1087.0" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.11%)</title><rect x="1088.0" y="611.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1091.0" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="1089.3" y="611.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1092.3" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 1.22%)</title><rect x="1090.6" y="611.0" width="14.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1093.6" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.11%)</title><rect x="1091.9" y="595.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1094.9" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (2 samples, 0.22%)</title><rect x="1093.2" y="595.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1096.2" y="606.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.78%)</title><rect x="1095.8" y="595.0" width="9.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1098.8" y="606.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.44%)</title><rect x="1099.7" y="579.0" width="5.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1102.7" y="590.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.33%)</title><rect x="1105.0" y="611.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1108.0" y="622.0"></text>
</g>
<g>
<title>__libc_recv (41 samples, 4.55%)</title><rect x="1108.9" y="627.0" width="53.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1111.9" y="638.0">__lib..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 4.10%)</title><rect x="1114.1" y="611.0" width="48.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.1" y="622.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (37 samples, 4.10%)</title><rect x="1114.1" y="595.0" width="48.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1117.1" y="606.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (37 samples, 4.10%)</title><rect x="1114.1" y="579.0" width="48.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1117.1" y="590.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (36 samples, 3.99%)</title><rect x="1115.4" y="563.0" width="47.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1118.4" y="574.0">__sy..</text>
</g>
<g>
<title>fput_many (1 samples, 0.11%)</title><rect x="1118.0" y="547.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1121.0" y="558.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (33 samples, 3.66%)</title><rect x="1119.4" y="547.0" width="43.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1122.4" y="558.0">inet..</text>
</g>
<g>
<title>tcp_recvmsg (32 samples, 3.55%)</title><rect x="1120.7" y="531.0" width="41.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1123.7" y="542.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.33%)</title><rect x="1123.3" y="515.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1126.3" y="526.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.33%)</title><rect x="1123.3" y="499.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1126.3" y="510.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.33%)</title><rect x="1123.3" y="483.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1126.3" y="494.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.33%)</title><rect x="1123.3" y="467.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1126.3" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="1127.2" y="515.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1130.2" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.55%)</title><rect x="1128.5" y="515.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1131.5" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 0.55%)</title><rect x="1128.5" y="499.0" width="6.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1131.5" y="510.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.55%)</title><rect x="1128.5" y="483.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1131.5" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.55%)</title><rect x="1128.5" y="467.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1131.5" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.55%)</title><rect x="1128.5" y="451.0" width="6.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1131.5" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (5 samples, 0.55%)</title><rect x="1128.5" y="435.0" width="6.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1131.5" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.44%)</title><rect x="1129.8" y="419.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1132.8" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.44%)</title><rect x="1129.8" y="403.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.8" y="414.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.44%)</title><rect x="1129.8" y="387.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1132.8" y="398.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.44%)</title><rect x="1129.8" y="371.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.8" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.44%)</title><rect x="1129.8" y="355.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1132.8" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="1129.8" y="339.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1132.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.33%)</title><rect x="1131.1" y="339.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1134.1" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.33%)</title><rect x="1131.1" y="323.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1134.1" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.33%)</title><rect x="1131.1" y="307.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1134.1" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.33%)</title><rect x="1131.1" y="291.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1134.1" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.33%)</title><rect x="1131.1" y="275.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1134.1" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.33%)</title><rect x="1131.1" y="259.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1134.1" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.33%)</title><rect x="1131.1" y="243.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1134.1" y="254.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.11%)</title><rect x="1131.1" y="227.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1134.1" y="238.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.11%)</title><rect x="1132.4" y="227.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1135.4" y="238.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.11%)</title><rect x="1133.7" y="227.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1136.7" y="238.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 1.22%)</title><rect x="1135.1" y="515.0" width="14.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1138.1" y="526.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 1.22%)</title><rect x="1135.1" y="499.0" width="14.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1138.1" y="510.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.33%)</title><rect x="1141.6" y="483.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1144.6" y="494.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.22%)</title><rect x="1142.9" y="467.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.9" y="478.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.22%)</title><rect x="1142.9" y="451.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.9" y="462.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.33%)</title><rect x="1145.5" y="483.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1148.5" y="494.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.33%)</title><rect x="1145.5" y="467.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1148.5" y="478.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="1148.1" y="451.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1151.1" y="462.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.67%)</title><rect x="1149.4" y="515.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1152.4" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.44%)</title><rect x="1157.3" y="515.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.3" y="526.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.22%)</title><rect x="1159.9" y="499.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1162.9" y="510.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.22%)</title><rect x="1159.9" y="483.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1162.9" y="494.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.22%)</title><rect x="1159.9" y="467.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1162.9" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="1162.5" y="627.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1165.5" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.11%)</title><rect x="1163.8" y="627.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1166.8" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.11%)</title><rect x="1165.1" y="627.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1168.1" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.22%)</title><rect x="1166.5" y="643.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.5" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.44%)</title><rect x="1169.1" y="675.0" width="5.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.1" y="686.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.33%)</title><rect x="1170.4" y="659.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1173.4" y="670.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.22%)</title><rect x="1171.7" y="643.0" width="2.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1174.7" y="654.0"></text>
</g>
<g>
<title>start_thread (12 samples, 1.33%)</title><rect x="1174.3" y="707.0" width="15.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1177.3" y="718.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 1.33%)</title><rect x="1174.3" y="691.0" width="15.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1177.3" y="702.0"></text>
</g>
<g>
<title>Thread::call_run() (12 samples, 1.33%)</title><rect x="1174.3" y="675.0" width="15.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.3" y="686.0"></text>
</g>
<g>
<title>GangWorker::loop() (12 samples, 1.33%)</title><rect x="1174.3" y="659.0" width="15.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.3" y="670.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (12 samples, 1.33%)</title><rect x="1174.3" y="643.0" width="15.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.3" y="654.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (11 samples, 1.22%)</title><rect x="1174.3" y="627.0" width="14.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.3" y="638.0"></text>
</g>
<g>
<title>SpinPause (11 samples, 1.22%)</title><rect x="1174.3" y="611.0" width="14.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1177.3" y="622.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.11%)</title><rect x="1188.7" y="627.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.7" y="638.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.11%)</title><rect x="1188.7" y="611.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.11%)</title><rect x="1188.7" y="595.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="606.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.11%)</title><rect x="1188.7" y="579.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.7" y="590.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.11%)</title><rect x="1188.7" y="563.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (1 samples, 0.11%)</title><rect x="1188.7" y="547.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="558.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.11%)</title><rect x="1188.7" y="531.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="542.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.11%)</title><rect x="1188.7" y="515.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="526.0"></text>
</g>
</g>
</svg>
