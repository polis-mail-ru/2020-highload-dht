<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (541,357 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (269,641 samples, 49.81%)</title><rect x="10.0" y="339.0" width="587.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (269,641 samples, 49.81%)</title><rect x="10.0" y="323.0" width="587.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (269,641 samples, 49.81%)</title><rect x="10.0" y="307.0" width="587.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20,411 samples, 3.77%)</title><rect x="10.0" y="291.0" width="44.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (20,411 samples, 3.77%)</title><rect x="10.0" y="275.0" width="44.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (20,038 samples, 3.70%)</title><rect x="10.0" y="259.0" width="43.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="270.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (20,038 samples, 3.70%)</title><rect x="10.0" y="243.0" width="43.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="254.0">java..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (20,038 samples, 3.70%)</title><rect x="10.0" y="227.0" width="43.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="238.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (373 samples, 0.07%)</title><rect x="53.7" y="259.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (373 samples, 0.07%)</title><rect x="53.7" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (373 samples, 0.07%)</title><rect x="53.7" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (373 samples, 0.07%)</title><rect x="53.7" y="211.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (373 samples, 0.07%)</title><rect x="53.7" y="195.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="56.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$68/27339944.run (249,230 samples, 46.04%)</title><rect x="54.5" y="291.0" width="543.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.5" y="302.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda$68/27339944.run</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$put$3 (249,230 samples, 46.04%)</title><rect x="54.5" y="275.0" width="543.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.5" y="286.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$put$3</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28,638 samples, 5.29%)</title><rect x="54.5" y="259.0" width="62.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.5" y="270.0">java/n..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28,638 samples, 5.29%)</title><rect x="54.5" y="243.0" width="62.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.5" y="254.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28,638 samples, 5.29%)</title><rect x="54.5" y="227.0" width="62.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="57.5" y="238.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.byteBufferFromString (48,609 samples, 8.98%)</title><rect x="116.9" y="259.0" width="106.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.9" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.getBytes (20,745 samples, 3.83%)</title><rect x="116.9" y="243.0" width="45.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.9" y="254.0">java..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (20,745 samples, 3.83%)</title><rect x="116.9" y="227.0" width="45.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.9" y="238.0">java..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (20,745 samples, 3.83%)</title><rect x="116.9" y="211.0" width="45.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.9" y="222.0">java..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (20,745 samples, 3.83%)</title><rect x="116.9" y="195.0" width="45.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.9" y="206.0">java..</text>
</g>
<g>
<title>byte[] (20,745 samples, 3.83%)</title><rect x="116.9" y="179.0" width="45.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="119.9" y="190.0">byte[]</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27,864 samples, 5.15%)</title><rect x="162.1" y="243.0" width="60.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.1" y="254.0">java/n..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27,864 samples, 5.15%)</title><rect x="162.1" y="227.0" width="60.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.1" y="238.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27,864 samples, 5.15%)</title><rect x="162.1" y="211.0" width="60.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="165.1" y="222.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.upsert (171,983 samples, 31.77%)</title><rect x="222.9" y="259.0" width="374.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.9" y="270.0">ru/mail/polis/service/s3ponia/AsyncService.upsert</text>
</g>
<g>
<title>one.nio.http.Response (14,762 samples, 2.73%)</title><rect x="222.9" y="243.0" width="32.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="225.9" y="254.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (75,511 samples, 13.95%)</title><rect x="255.0" y="243.0" width="164.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.0" y="254.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (75,511 samples, 13.95%)</title><rect x="255.0" y="227.0" width="164.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.0" y="238.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (52,622 samples, 9.72%)</title><rect x="255.0" y="211.0" width="114.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.0" y="222.0">one/nio/http/R..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (52,622 samples, 9.72%)</title><rect x="255.0" y="195.0" width="114.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.0" y="206.0">one/nio/util/B..</text>
</g>
<g>
<title>byte[] (46,571 samples, 8.60%)</title><rect x="255.0" y="179.0" width="101.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="258.0" y="190.0">byte[]</text>
</g>
<g>
<title>byte[] (6,051 samples, 1.12%)</title><rect x="356.6" y="179.0" width="13.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="359.6" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (22,889 samples, 4.23%)</title><rect x="369.7" y="211.0" width="49.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.7" y="222.0">one/n..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (22,889 samples, 4.23%)</title><rect x="369.7" y="195.0" width="49.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="372.7" y="206.0">one.n..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (60,267 samples, 11.13%)</title><rect x="419.6" y="243.0" width="131.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.6" y="254.0">one/nio/http/Res..</text>
</g>
<g>
<title>byte[] (24,885 samples, 4.60%)</title><rect x="419.6" y="227.0" width="54.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="422.6" y="238.0">byte[]</text>
</g>
<g>
<title>java.lang.String[] (20,539 samples, 3.79%)</title><rect x="473.9" y="227.0" width="44.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="476.9" y="238.0">java..</text>
</g>
<g>
<title>java.lang.String (14,843 samples, 2.74%)</title><rect x="518.6" y="227.0" width="32.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="521.6" y="238.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsert (21,443 samples, 3.96%)</title><rect x="551.0" y="243.0" width="46.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.0" y="254.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1,323 samples, 0.24%)</title><rect x="551.0" y="227.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1,323 samples, 0.24%)</title><rect x="551.0" y="211.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1,323 samples, 0.24%)</title><rect x="551.0" y="195.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.0" y="206.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1,248 samples, 0.23%)</title><rect x="551.0" y="179.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.0" y="190.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1,248 samples, 0.23%)</title><rect x="551.0" y="163.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.0" y="174.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (765 samples, 0.14%)</title><rect x="551.0" y="147.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.0" y="158.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (765 samples, 0.14%)</title><rect x="551.0" y="131.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="554.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (483 samples, 0.09%)</title><rect x="552.7" y="147.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (483 samples, 0.09%)</title><rect x="552.7" y="131.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (483 samples, 0.09%)</title><rect x="552.7" y="115.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="555.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsert (20,120 samples, 3.72%)</title><rect x="553.9" y="227.0" width="43.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.9" y="238.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.of (20,120 samples, 3.72%)</title><rect x="553.9" y="211.0" width="43.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.9" y="222.0">ru/m..</text>
</g>
<g>
<title>ru.mail.polis.dao.s3ponia.Table$Value (20,120 samples, 3.72%)</title><rect x="553.9" y="195.0" width="43.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="556.9" y="206.0">ru.m..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (271,716 samples, 50.19%)</title><rect x="597.7" y="339.0" width="592.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.7" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4,511 samples, 0.83%)</title><rect x="597.7" y="323.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.7" y="334.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4,511 samples, 0.83%)</title><rect x="597.7" y="307.0" width="9.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="600.7" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (267,205 samples, 49.36%)</title><rect x="607.6" y="323.0" width="582.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.6" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (267,205 samples, 49.36%)</title><rect x="607.6" y="307.0" width="582.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.6" y="318.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (267,205 samples, 49.36%)</title><rect x="607.6" y="291.0" width="582.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.6" y="302.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (153,150 samples, 28.29%)</title><rect x="607.6" y="275.0" width="333.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.6" y="286.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (153,150 samples, 28.29%)</title><rect x="607.6" y="259.0" width="333.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.6" y="270.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (144,903 samples, 26.77%)</title><rect x="607.6" y="243.0" width="315.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.6" y="254.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7,465 samples, 1.38%)</title><rect x="607.6" y="227.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7,465 samples, 1.38%)</title><rect x="607.6" y="211.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (7,465 samples, 1.38%)</title><rect x="607.6" y="195.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7,465 samples, 1.38%)</title><rect x="607.6" y="179.0" width="16.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (3,779 samples, 0.70%)</title><rect x="607.6" y="163.0" width="8.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="610.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,686 samples, 0.68%)</title><rect x="615.8" y="163.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.8" y="174.0"></text>
</g>
<g>
<title>byte[] (3,686 samples, 0.68%)</title><rect x="615.8" y="147.0" width="8.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="618.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.put (137,438 samples, 25.39%)</title><rect x="623.8" y="227.0" width="299.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.8" y="238.0">ru/mail/polis/service/s3ponia/AsyncServi..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4,942 samples, 0.91%)</title><rect x="623.8" y="211.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,942 samples, 0.91%)</title><rect x="623.8" y="195.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$68/27339944.get$Lambda (4,942 samples, 0.91%)</title><rect x="623.8" y="179.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.8" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.s3ponia.AsyncService$$Lambda$68 (4,942 samples, 0.91%)</title><rect x="623.8" y="163.0" width="10.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="626.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.byteBufferFromString (3,490 samples, 0.64%)</title><rect x="634.6" y="211.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3,490 samples, 0.64%)</title><rect x="634.6" y="195.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3,490 samples, 0.64%)</title><rect x="634.6" y="179.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3,490 samples, 0.64%)</title><rect x="634.6" y="163.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,490 samples, 0.64%)</title><rect x="634.6" y="147.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.6" y="158.0"></text>
</g>
<g>
<title>byte[] (3,490 samples, 0.64%)</title><rect x="634.6" y="131.0" width="7.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="637.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.chooseNode (126,604 samples, 23.39%)</title><rect x="642.2" y="211.0" width="276.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.2" y="222.0">ru/mail/polis/service/s3ponia/AsyncSe..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.proxy (126,512 samples, 23.37%)</title><rect x="642.4" y="195.0" width="275.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.4" y="206.0">ru/mail/polis/service/s3ponia/AsyncSe..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (747 samples, 0.14%)</title><rect x="642.4" y="179.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/790067787.invoke (747 samples, 0.14%)</title><rect x="642.4" y="163.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (747 samples, 0.14%)</title><rect x="642.4" y="147.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (205 samples, 0.04%)</title><rect x="642.4" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (205 samples, 0.04%)</title><rect x="642.4" y="115.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="645.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (542 samples, 0.10%)</title><rect x="642.9" y="131.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (542 samples, 0.10%)</title><rect x="642.9" y="115.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.9" y="126.0"></text>
</g>
<g>
<title>byte[] (542 samples, 0.10%)</title><rect x="642.9" y="99.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="645.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (124,442 samples, 22.99%)</title><rect x="644.1" y="179.0" width="271.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.1" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (124,442 samples, 22.99%)</title><rect x="644.1" y="163.0" width="271.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.1" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (444 samples, 0.08%)</title><rect x="644.1" y="147.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="647.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (114,565 samples, 21.16%)</title><rect x="645.0" y="147.0" width="249.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.0" y="158.0">one/nio/http/HttpClient$ResponseR..</text>
</g>
<g>
<title>byte[] (55,837 samples, 10.31%)</title><rect x="645.0" y="131.0" width="121.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="648.0" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (58,728 samples, 10.85%)</title><rect x="766.7" y="131.0" width="128.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="769.7" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7,207 samples, 1.33%)</title><rect x="894.7" y="147.0" width="15.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.7" y="158.0"></text>
</g>
<g>
<title>byte[] (163 samples, 0.03%)</title><rect x="894.7" y="131.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="897.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (453 samples, 0.08%)</title><rect x="895.1" y="131.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (453 samples, 0.08%)</title><rect x="895.1" y="115.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (192 samples, 0.04%)</title><rect x="895.1" y="99.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="898.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (261 samples, 0.05%)</title><rect x="895.5" y="99.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.5" y="110.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.05%)</title><rect x="895.5" y="83.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="898.5" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (183 samples, 0.03%)</title><rect x="896.1" y="131.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="899.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5,656 samples, 1.04%)</title><rect x="896.5" y="131.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,656 samples, 1.04%)</title><rect x="896.5" y="115.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,656 samples, 1.04%)</title><rect x="896.5" y="99.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.5" y="110.0"></text>
</g>
<g>
<title>char[] (3,757 samples, 0.69%)</title><rect x="896.5" y="83.0" width="8.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="899.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (894 samples, 0.17%)</title><rect x="904.7" y="83.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="907.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,005 samples, 0.19%)</title><rect x="906.6" y="83.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,005 samples, 0.19%)</title><rect x="906.6" y="67.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.6" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,005 samples, 0.19%)</title><rect x="906.6" y="51.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.6" y="62.0"></text>
</g>
<g>
<title>byte[] (1,005 samples, 0.19%)</title><rect x="906.6" y="35.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="909.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (312 samples, 0.06%)</title><rect x="908.8" y="131.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (312 samples, 0.06%)</title><rect x="908.8" y="115.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="911.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (440 samples, 0.08%)</title><rect x="909.5" y="131.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (440 samples, 0.08%)</title><rect x="909.5" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (440 samples, 0.08%)</title><rect x="909.5" y="99.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (219 samples, 0.04%)</title><rect x="909.5" y="83.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="912.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (221 samples, 0.04%)</title><rect x="910.0" y="83.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.0" y="94.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.04%)</title><rect x="910.0" y="67.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="913.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1,438 samples, 0.27%)</title><rect x="910.4" y="147.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.4" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,438 samples, 0.27%)</title><rect x="910.4" y="131.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.4" y="142.0"></text>
</g>
<g>
<title>byte[] (1,438 samples, 0.27%)</title><rect x="910.4" y="115.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="913.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (609 samples, 0.11%)</title><rect x="913.6" y="147.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="916.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (609 samples, 0.11%)</title><rect x="913.6" y="131.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (609 samples, 0.11%)</title><rect x="913.6" y="115.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (247 samples, 0.05%)</title><rect x="913.6" y="99.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="916.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (362 samples, 0.07%)</title><rect x="914.1" y="99.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.1" y="110.0"></text>
</g>
<g>
<title>byte[] (362 samples, 0.07%)</title><rect x="914.1" y="83.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="917.1" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (179 samples, 0.03%)</title><rect x="914.9" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.9" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (179 samples, 0.03%)</title><rect x="914.9" y="131.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.9" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (179 samples, 0.03%)</title><rect x="914.9" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.9" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (179 samples, 0.03%)</title><rect x="914.9" y="99.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="917.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,323 samples, 0.24%)</title><rect x="915.3" y="179.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,323 samples, 0.24%)</title><rect x="915.3" y="163.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="918.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (981 samples, 0.18%)</title><rect x="915.3" y="147.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (981 samples, 0.18%)</title><rect x="915.3" y="131.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.3" y="142.0"></text>
</g>
<g>
<title>byte[] (981 samples, 0.18%)</title><rect x="915.3" y="115.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="918.3" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (342 samples, 0.06%)</title><rect x="917.4" y="147.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.4" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (342 samples, 0.06%)</title><rect x="917.4" y="131.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="920.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.urlFromKey (2,402 samples, 0.44%)</title><rect x="918.2" y="211.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (2,402 samples, 0.44%)</title><rect x="918.2" y="195.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="921.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (2,402 samples, 0.44%)</title><rect x="918.2" y="179.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$23/1366025231.apply (2,402 samples, 0.44%)</title><rect x="918.2" y="163.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2,402 samples, 0.44%)</title><rect x="918.2" y="147.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Integer (2,402 samples, 0.44%)</title><rect x="918.2" y="131.0" width="5.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="921.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8,247 samples, 1.52%)</title><rect x="923.4" y="243.0" width="18.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (8,247 samples, 1.52%)</title><rect x="923.4" y="227.0" width="18.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="926.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,247 samples, 1.52%)</title><rect x="923.4" y="211.0" width="18.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (3,300 samples, 0.61%)</title><rect x="923.4" y="195.0" width="7.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="926.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,947 samples, 0.91%)</title><rect x="930.6" y="195.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.6" y="206.0"></text>
</g>
<g>
<title>byte[] (4,947 samples, 0.91%)</title><rect x="930.6" y="179.0" width="10.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="933.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (40,411 samples, 7.46%)</title><rect x="941.4" y="275.0" width="88.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.4" y="286.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (6,548 samples, 1.21%)</title><rect x="941.4" y="259.0" width="14.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="944.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12,273 samples, 2.27%)</title><rect x="955.7" y="259.0" width="26.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="958.7" y="270.0">o..</text>
</g>
<g>
<title>java.lang.String[] (12,042 samples, 2.22%)</title><rect x="955.7" y="243.0" width="26.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="958.7" y="254.0">j..</text>
</g>
<g>
<title>java.lang.String[] (231 samples, 0.04%)</title><rect x="981.9" y="243.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="984.9" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21,590 samples, 3.99%)</title><rect x="982.4" y="259.0" width="47.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="985.4" y="270.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (21,590 samples, 3.99%)</title><rect x="982.4" y="243.0" width="47.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.4" y="254.0">one/..</text>
</g>
<g>
<title>char[] (12,063 samples, 2.23%)</title><rect x="982.4" y="227.0" width="26.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="985.4" y="238.0">c..</text>
</g>
<g>
<title>char[] (187 samples, 0.03%)</title><rect x="1008.7" y="227.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1011.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (3,325 samples, 0.61%)</title><rect x="1009.1" y="227.0" width="7.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1012.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,015 samples, 1.11%)</title><rect x="1016.4" y="227.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1019.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,015 samples, 1.11%)</title><rect x="1016.4" y="211.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1019.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6,015 samples, 1.11%)</title><rect x="1016.4" y="195.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.4" y="206.0"></text>
</g>
<g>
<title>byte[] (6,015 samples, 1.11%)</title><rect x="1016.4" y="179.0" width="13.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1019.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4,906 samples, 0.91%)</title><rect x="1029.5" y="275.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1032.5" y="286.0"></text>
</g>
<g>
<title>byte[] (4,906 samples, 0.91%)</title><rect x="1029.5" y="259.0" width="10.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1032.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7,148 samples, 1.32%)</title><rect x="1040.2" y="275.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (7,148 samples, 1.32%)</title><rect x="1040.2" y="259.0" width="15.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7,148 samples, 1.32%)</title><rect x="1040.2" y="243.0" width="15.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1043.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (3,441 samples, 0.64%)</title><rect x="1040.2" y="227.0" width="7.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1043.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,707 samples, 0.68%)</title><rect x="1047.7" y="227.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.7" y="238.0"></text>
</g>
<g>
<title>byte[] (3,707 samples, 0.68%)</title><rect x="1047.7" y="211.0" width="8.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1050.7" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (61,590 samples, 11.38%)</title><rect x="1055.8" y="275.0" width="134.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1058.8" y="286.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (61,590 samples, 11.38%)</title><rect x="1055.8" y="259.0" width="134.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1058.8" y="270.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (30,301 samples, 5.60%)</title><rect x="1055.8" y="243.0" width="66.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1058.8" y="254.0">char[]</text>
</g>
<g>
<title>char[] (403 samples, 0.07%)</title><rect x="1121.8" y="243.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1124.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String (10,941 samples, 2.02%)</title><rect x="1122.7" y="243.0" width="23.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1125.7" y="254.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19,945 samples, 3.68%)</title><rect x="1146.5" y="243.0" width="43.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1149.5" y="254.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (19,945 samples, 3.68%)</title><rect x="1146.5" y="227.0" width="43.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.5" y="238.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (19,945 samples, 3.68%)</title><rect x="1146.5" y="211.0" width="43.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1149.5" y="222.0">java..</text>
</g>
<g>
<title>byte[] (19,825 samples, 3.66%)</title><rect x="1146.5" y="195.0" width="43.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1149.5" y="206.0">byte[]</text>
</g>
<g>
<title>byte[] (120 samples, 0.02%)</title><rect x="1189.7" y="195.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1192.7" y="206.0"></text>
</g>
</g>
</svg>
