<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="581"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="581"> </text>
<g id="frames">
<g>
<title>all (1,622,803 samples, 100.00%)</title><rect x="10.0" y="547.0" width="1180.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="13.0" y="558.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (1,622,515 samples, 99.98%)</title><rect x="10.0" y="531.0" width="1179.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,622,515 samples, 99.98%)</title><rect x="10.0" y="515.0" width="1179.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,622,515 samples, 99.98%)</title><rect x="10.0" y="499.0" width="1179.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$84/1141333960.run (1,622,328 samples, 99.97%)</title><rect x="10.1" y="483.0" width="1179.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.1" y="494.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda$84/1141333960.run</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$get$2 (1,622,328 samples, 99.97%)</title><rect x="10.1" y="467.0" width="1179.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.1" y="478.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$get$2</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.get (1,622,328 samples, 99.97%)</title><rect x="10.1" y="451.0" width="1179.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.1" y="462.0">ru/mail/polis/service/s3ponia/AsyncService.get</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,622,328 samples, 99.97%)</title><rect x="10.1" y="435.0" width="1179.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.1" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (156,167 samples, 9.62%)</title><rect x="10.1" y="419.0" width="113.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.1" y="430.0">com/google/com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (156,167 samples, 9.62%)</title><rect x="10.1" y="403.0" width="113.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.1" y="414.0">com/google/com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (156,167 samples, 9.62%)</title><rect x="10.1" y="387.0" width="113.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.1" y="398.0">com/google/com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (156,167 samples, 9.62%)</title><rect x="10.1" y="371.0" width="113.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.1" y="382.0">com/google/com..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (156,167 samples, 9.62%)</title><rect x="10.1" y="355.0" width="113.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.1" y="366.0">ru/mail/polis/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (156,167 samples, 9.62%)</title><rect x="10.1" y="339.0" width="113.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.1" y="350.0">com/google/com..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (156,167 samples, 9.62%)</title><rect x="10.1" y="323.0" width="113.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.1" y="334.0">java/util/Prio..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (156,167 samples, 9.62%)</title><rect x="10.1" y="307.0" width="113.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.1" y="318.0">java/util/Prio..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (156,167 samples, 9.62%)</title><rect x="10.1" y="291.0" width="113.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.1" y="302.0">java/util/Prio..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (156,167 samples, 9.62%)</title><rect x="10.1" y="275.0" width="113.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.1" y="286.0">java/util/Prio..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (156,167 samples, 9.62%)</title><rect x="10.1" y="259.0" width="113.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.1" y="270.0">com/google/com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (156,167 samples, 9.62%)</title><rect x="10.1" y="243.0" width="113.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.1" y="254.0">com/google/com..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$102/1921174568.compare (156,167 samples, 9.62%)</title><rect x="10.1" y="227.0" width="113.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.1" y="238.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (156,167 samples, 9.62%)</title><rect x="10.1" y="211.0" width="113.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.1" y="222.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (156,167 samples, 9.62%)</title><rect x="10.1" y="195.0" width="113.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.1" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/959565342.compare (156,167 samples, 9.62%)</title><rect x="10.1" y="179.0" width="113.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.1" y="190.0">java/util/Comp..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (156,167 samples, 9.62%)</title><rect x="10.1" y="163.0" width="113.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.1" y="174.0">java/util/Comp..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (156,167 samples, 9.62%)</title><rect x="10.1" y="147.0" width="113.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.1" y="158.0">java/util/Comp..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (156,167 samples, 9.62%)</title><rect x="10.1" y="131.0" width="113.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.1" y="142.0">java/util/Comp..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$109/418813690.apply (156,167 samples, 9.62%)</title><rect x="10.1" y="115.0" width="113.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.1" y="126.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (156,167 samples, 9.62%)</title><rect x="10.1" y="99.0" width="113.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.1" y="110.0">ru/mail/polis/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (156,167 samples, 9.62%)</title><rect x="10.1" y="83.0" width="113.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.1" y="94.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (156,167 samples, 9.62%)</title><rect x="10.1" y="67.0" width="113.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.1" y="78.0">sun/nio/ch/Fil..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (111,797 samples, 6.89%)</title><rect x="10.1" y="51.0" width="81.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.1" y="62.0">sun/nio/c..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (111,797 samples, 6.89%)</title><rect x="10.1" y="35.0" width="81.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.1" y="46.0">sun.nio.c..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (44,370 samples, 2.73%)</title><rect x="91.4" y="51.0" width="32.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.4" y="62.0">su..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (44,370 samples, 2.73%)</title><rect x="91.4" y="35.0" width="32.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="94.4" y="46.0">su..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.iterator (1,466,161 samples, 90.35%)</title><rect x="123.7" y="419.0" width="1066.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.7" y="430.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (286,388 samples, 17.65%)</title><rect x="123.7" y="403.0" width="208.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.7" y="414.0">com/google/common/collect/I..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (286,388 samples, 17.65%)</title><rect x="123.7" y="387.0" width="208.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.7" y="398.0">com/google/common/collect/I..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (286,388 samples, 17.65%)</title><rect x="123.7" y="371.0" width="208.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.7" y="382.0">java/util/PriorityQueue.add</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (286,388 samples, 17.65%)</title><rect x="123.7" y="355.0" width="208.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.7" y="366.0">java/util/PriorityQueue.offer</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (286,388 samples, 17.65%)</title><rect x="123.7" y="339.0" width="208.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.7" y="350.0">java/util/PriorityQueue.sif..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (286,388 samples, 17.65%)</title><rect x="123.7" y="323.0" width="208.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.7" y="334.0">java/util/PriorityQueue.sif..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (286,388 samples, 17.65%)</title><rect x="123.7" y="307.0" width="208.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.7" y="318.0">com/google/common/collect/I..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (286,388 samples, 17.65%)</title><rect x="123.7" y="291.0" width="208.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.7" y="302.0">com/google/common/collect/I..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$102/1921174568.compare (286,388 samples, 17.65%)</title><rect x="123.7" y="275.0" width="208.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.7" y="286.0">ru/mail/polis/dao/s3ponia/P..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (286,388 samples, 17.65%)</title><rect x="123.7" y="259.0" width="208.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.7" y="270.0">ru/mail/polis/dao/s3ponia/D..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (286,388 samples, 17.65%)</title><rect x="123.7" y="243.0" width="208.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.7" y="254.0">ru/mail/polis/dao/s3ponia/D..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/959565342.compare (286,388 samples, 17.65%)</title><rect x="123.7" y="227.0" width="208.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.7" y="238.0">java/util/Comparator$$Lambd..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (286,388 samples, 17.65%)</title><rect x="123.7" y="211.0" width="208.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.7" y="222.0">java/util/Comparator.lambda..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (286,388 samples, 17.65%)</title><rect x="123.7" y="195.0" width="208.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.7" y="206.0">java/util/Comparator$$Lambd..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (286,388 samples, 17.65%)</title><rect x="123.7" y="179.0" width="208.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.7" y="190.0">java/util/Comparator.lambda..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$109/418813690.apply (136,287 samples, 8.40%)</title><rect x="123.7" y="163.0" width="99.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.7" y="174.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (136,287 samples, 8.40%)</title><rect x="123.7" y="147.0" width="99.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.7" y="158.0">ru/mail/poli..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (136,287 samples, 8.40%)</title><rect x="123.7" y="131.0" width="99.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.7" y="142.0">sun/nio/ch/F..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (136,287 samples, 8.40%)</title><rect x="123.7" y="115.0" width="99.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.7" y="126.0">sun/nio/ch/F..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (99,499 samples, 6.13%)</title><rect x="123.7" y="99.0" width="72.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.7" y="110.0">sun/nio/..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (99,499 samples, 6.13%)</title><rect x="123.7" y="83.0" width="72.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="126.7" y="94.0">sun.nio...</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (36,788 samples, 2.27%)</title><rect x="196.0" y="99.0" width="26.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.0" y="110.0">s..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (36,788 samples, 2.27%)</title><rect x="196.0" y="83.0" width="26.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="199.0" y="94.0">s..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$129/1254560328.apply (150,101 samples, 9.25%)</title><rect x="222.8" y="163.0" width="109.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.8" y="174.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (150,101 samples, 9.25%)</title><rect x="222.8" y="147.0" width="109.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.8" y="158.0">ru/mail/polis..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (150,101 samples, 9.25%)</title><rect x="222.8" y="131.0" width="109.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.8" y="142.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (150,101 samples, 9.25%)</title><rect x="222.8" y="115.0" width="109.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.8" y="126.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (83,876 samples, 5.17%)</title><rect x="222.8" y="99.0" width="61.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.8" y="110.0">sun/ni..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (83,876 samples, 5.17%)</title><rect x="222.8" y="83.0" width="61.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="225.8" y="94.0">sun.ni..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (66,225 samples, 4.08%)</title><rect x="283.8" y="99.0" width="48.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.8" y="110.0">sun/..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (66,225 samples, 4.08%)</title><rect x="283.8" y="83.0" width="48.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="286.8" y="94.0">sun...</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,112,242 samples, 68.54%)</title><rect x="331.9" y="403.0" width="808.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.9" y="414.0">java/util/Collections$UnmodifiableMap.forEach</text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,112,242 samples, 68.54%)</title><rect x="331.9" y="387.0" width="808.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.9" y="398.0">java/util/TreeMap.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$93/2088607678.accept (1,112,242 samples, 68.54%)</title><rect x="331.9" y="371.0" width="808.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.9" y="382.0">ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$93/2088607678.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$iterator$0 (1,112,242 samples, 68.54%)</title><rect x="331.9" y="355.0" width="808.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="334.9" y="366.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$iterator$0</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.iterator (1,112,242 samples, 68.54%)</title><rect x="331.9" y="339.0" width="808.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.9" y="350.0">ru/mail/polis/dao/s3ponia/DiskTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt; (1,112,242 samples, 68.54%)</title><rect x="331.9" y="323.0" width="808.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.9" y="334.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex (1,112,242 samples, 68.54%)</title><rect x="331.9" y="307.0" width="808.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.9" y="318.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (1,112,242 samples, 68.54%)</title><rect x="331.9" y="291.0" width="808.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.9" y="302.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,112,242 samples, 68.54%)</title><rect x="331.9" y="275.0" width="808.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.9" y="286.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,112,242 samples, 68.54%)</title><rect x="331.9" y="259.0" width="808.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.9" y="270.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (330,322 samples, 20.36%)</title><rect x="331.9" y="243.0" width="240.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.9" y="254.0">sun/nio/ch/NativeThreadSet.add</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (330,322 samples, 20.36%)</title><rect x="331.9" y="227.0" width="240.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="334.9" y="238.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (781,920 samples, 48.18%)</title><rect x="572.1" y="243.0" width="568.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.1" y="254.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (781,920 samples, 48.18%)</title><rect x="572.1" y="227.0" width="568.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="575.1" y="238.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (67,531 samples, 4.16%)</title><rect x="1140.7" y="403.0" width="49.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.7" y="414.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (67,531 samples, 4.16%)</title><rect x="1140.7" y="387.0" width="49.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.7" y="398.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (67,531 samples, 4.16%)</title><rect x="1140.7" y="371.0" width="49.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.7" y="382.0">com/g..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (67,531 samples, 4.16%)</title><rect x="1140.7" y="355.0" width="49.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.7" y="366.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (67,531 samples, 4.16%)</title><rect x="1140.7" y="339.0" width="49.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.7" y="350.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (67,531 samples, 4.16%)</title><rect x="1140.7" y="323.0" width="49.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.7" y="334.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (67,531 samples, 4.16%)</title><rect x="1140.7" y="307.0" width="49.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.7" y="318.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67,531 samples, 4.16%)</title><rect x="1140.7" y="291.0" width="49.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.7" y="302.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67,531 samples, 4.16%)</title><rect x="1140.7" y="275.0" width="49.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.7" y="286.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$102/1921174568.compare (67,531 samples, 4.16%)</title><rect x="1140.7" y="259.0" width="49.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.7" y="270.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (67,531 samples, 4.16%)</title><rect x="1140.7" y="243.0" width="49.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.7" y="254.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (67,531 samples, 4.16%)</title><rect x="1140.7" y="227.0" width="49.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.7" y="238.0">ru/ma..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/959565342.compare (67,531 samples, 4.16%)</title><rect x="1140.7" y="211.0" width="49.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.7" y="222.0">java/..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (67,531 samples, 4.16%)</title><rect x="1140.7" y="195.0" width="49.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.7" y="206.0">java/..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (67,531 samples, 4.16%)</title><rect x="1140.7" y="179.0" width="49.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.7" y="190.0">java/..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (67,531 samples, 4.16%)</title><rect x="1140.7" y="163.0" width="49.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.7" y="174.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$109/418813690.apply (67,531 samples, 4.16%)</title><rect x="1140.7" y="147.0" width="49.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.7" y="158.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (67,531 samples, 4.16%)</title><rect x="1140.7" y="131.0" width="49.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.7" y="142.0">ru/ma..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (67,531 samples, 4.16%)</title><rect x="1140.7" y="115.0" width="49.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.7" y="126.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (67,531 samples, 4.16%)</title><rect x="1140.7" y="99.0" width="49.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.7" y="110.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (49,643 samples, 3.06%)</title><rect x="1140.7" y="83.0" width="36.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.7" y="94.0">sun..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (49,643 samples, 3.06%)</title><rect x="1140.7" y="67.0" width="36.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1143.7" y="78.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (17,888 samples, 1.10%)</title><rect x="1176.8" y="83.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.8" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (17,888 samples, 1.10%)</title><rect x="1176.8" y="67.0" width="13.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1179.8" y="78.0"></text>
</g>
</g>
</svg>
