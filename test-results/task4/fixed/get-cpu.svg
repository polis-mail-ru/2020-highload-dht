<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="821"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="821"> </text>
<g id="frames">
<g>
<title>all (7,788 samples, 100.00%)</title><rect x="10.0" y="787.0" width="1180.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="798.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (84 samples, 1.08%)</title><rect x="10.3" y="771.0" width="12.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.3" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (80 samples, 1.03%)</title><rect x="10.9" y="755.0" width="12.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.9" y="766.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="11.1" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.1" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (13 samples, 0.17%)</title><rect x="11.4" y="739.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.4" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.94] (64 samples, 0.82%)</title><rect x="13.3" y="739.0" width="9.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="16.3" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="14.8" y="723.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.8" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (49 samples, 0.63%)</title><rect x="15.2" y="723.0" width="7.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.2" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (34 samples, 0.44%)</title><rect x="16.2" y="707.0" width="5.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="19.2" y="718.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.08%)</title><rect x="21.4" y="707.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="24.4" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="22.6" y="723.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="25.6" y="734.0"></text>
</g>
<g>
<title>[no_Java_frame] (15 samples, 0.19%)</title><rect x="23.0" y="771.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="26.0" y="782.0"></text>
</g>
<g>
<title>[not_walkable_Java] (18 samples, 0.23%)</title><rect x="25.3" y="771.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="28.3" y="782.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (4 samples, 0.05%)</title><rect x="25.5" y="755.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="28.5" y="766.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (6 samples, 0.08%)</title><rect x="26.1" y="755.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="29.1" y="766.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (2 samples, 0.03%)</title><rect x="27.0" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.0" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="27.3" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.3" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.03%)</title><rect x="27.3" y="739.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.3" y="750.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="27.3" y="723.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="30.3" y="734.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="27.3" y="707.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="30.3" y="718.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="27.3" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="30.3" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="27.6" y="755.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.18%)</title><rect x="28.0" y="771.0" width="2.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="31.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (7 samples, 0.09%)</title><rect x="28.2" y="755.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="31.2" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.09%)</title><rect x="28.2" y="739.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.09%)</title><rect x="28.2" y="723.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.09%)</title><rect x="28.2" y="707.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="31.2" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.09%)</title><rect x="28.2" y="691.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="31.2" y="702.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.09%)</title><rect x="28.2" y="675.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="31.2" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.04%)</title><rect x="28.3" y="659.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="31.3" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="28.5" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="31.5" y="654.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="28.5" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="31.5" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.04%)</title><rect x="28.8" y="659.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="31.8" y="670.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.03%)</title><rect x="28.8" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="31.8" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.06%)</title><rect x="29.2" y="755.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="32.2" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.06%)</title><rect x="29.2" y="739.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="32.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="29.2" y="723.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="32.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="29.4" y="707.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.4" y="718.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="29.4" y="691.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.4" y="702.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.05%)</title><rect x="29.4" y="675.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.4" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.04%)</title><rect x="29.5" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="32.5" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (289 samples, 3.71%)</title><rect x="30.2" y="771.0" width="43.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="33.2" y="782.0">[unk..</text>
</g>
<g>
<title>I2C/C2I adapters (12 samples, 0.15%)</title><rect x="30.3" y="755.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.3" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (160 samples, 2.05%)</title><rect x="32.4" y="755.0" width="24.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="35.4" y="766.0">S..</text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (160 samples, 2.05%)</title><rect x="32.4" y="739.0" width="24.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="35.4" y="750.0">O..</text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (67 samples, 0.86%)</title><rect x="56.7" y="755.0" width="10.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="59.7" y="766.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (27 samples, 0.35%)</title><rect x="56.7" y="739.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="59.7" y="750.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (13 samples, 0.17%)</title><rect x="58.8" y="723.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="61.8" y="734.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (13 samples, 0.17%)</title><rect x="60.8" y="739.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="63.8" y="750.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (6 samples, 0.08%)</title><rect x="62.7" y="739.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="65.7" y="750.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (11 samples, 0.14%)</title><rect x="63.6" y="739.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="66.6" y="750.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (10 samples, 0.13%)</title><rect x="65.3" y="739.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="68.3" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (46 samples, 0.59%)</title><rect x="67.0" y="755.0" width="6.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="70.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.58%)</title><rect x="67.1" y="739.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.58%)</title><rect x="67.1" y="723.0" width="6.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="70.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 0.55%)</title><rect x="67.4" y="707.0" width="6.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="70.4" y="718.0"></text>
</g>
<g>
<title>do_futex (43 samples, 0.55%)</title><rect x="67.4" y="691.0" width="6.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.4" y="702.0"></text>
</g>
<g>
<title>futex_wake (43 samples, 0.55%)</title><rect x="67.4" y="675.0" width="6.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.4" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.04%)</title><rect x="68.8" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="71.8" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.03%)</title><rect x="68.9" y="643.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="71.9" y="654.0"></text>
</g>
<g>
<title>plist_del (2 samples, 0.03%)</title><rect x="68.9" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="71.9" y="638.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.39%)</title><rect x="69.4" y="659.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="72.4" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.39%)</title><rect x="69.4" y="643.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="72.4" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 0.36%)</title><rect x="69.7" y="627.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="72.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5,215 samples, 66.96%)</title><rect x="73.9" y="771.0" width="790.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.9" y="782.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5,215 samples, 66.96%)</title><rect x="73.9" y="755.0" width="790.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.9" y="766.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5,215 samples, 66.96%)</title><rect x="73.9" y="739.0" width="790.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.9" y="750.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (7 samples, 0.09%)</title><rect x="73.9" y="723.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.09%)</title><rect x="73.9" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (7 samples, 0.09%)</title><rect x="73.9" y="691.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.03%)</title><rect x="74.2" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.04%)</title><rect x="74.5" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (140 samples, 1.80%)</title><rect x="75.0" y="723.0" width="21.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.0" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (139 samples, 1.78%)</title><rect x="75.2" y="707.0" width="21.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.2" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (2 samples, 0.03%)</title><rect x="75.3" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (85 samples, 1.09%)</title><rect x="75.6" y="691.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (16 samples, 0.21%)</title><rect x="75.8" y="675.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (12 samples, 0.15%)</title><rect x="76.4" y="659.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (7 samples, 0.09%)</title><rect x="76.4" y="643.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (2 samples, 0.03%)</title><rect x="77.4" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.04%)</title><rect x="77.7" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.04%)</title><rect x="78.2" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="78.3" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="78.3" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (65 samples, 0.83%)</title><rect x="78.6" y="675.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (65 samples, 0.83%)</title><rect x="78.6" y="659.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.6" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.03%)</title><rect x="78.6" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="81.6" y="654.0"></text>
</g>
<g>
<title>Unsafe_Park (21 samples, 0.27%)</title><rect x="78.9" y="643.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="81.9" y="654.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.04%)</title><rect x="79.4" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="82.4" y="638.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="79.8" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="82.8" y="638.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.05%)</title><rect x="80.3" y="627.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="83.3" y="638.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.04%)</title><rect x="81.1" y="627.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="84.1" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.05%)</title><rect x="81.5" y="627.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="84.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.54%)</title><rect x="82.1" y="643.0" width="6.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="85.1" y="654.0"></text>
</g>
<g>
<title>/lib64/ld-2.30.so (2 samples, 0.03%)</title><rect x="82.1" y="627.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="85.1" y="638.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (7 samples, 0.09%)</title><rect x="82.4" y="627.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="85.4" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (33 samples, 0.42%)</title><rect x="83.5" y="627.0" width="5.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="86.5" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.35%)</title><rect x="84.4" y="611.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.4" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.35%)</title><rect x="84.4" y="595.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="87.4" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (24 samples, 0.31%)</title><rect x="84.8" y="579.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="87.8" y="590.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.31%)</title><rect x="84.8" y="563.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.8" y="574.0"></text>
</g>
<g>
<title>futex_wait (24 samples, 0.31%)</title><rect x="84.8" y="547.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="87.8" y="558.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.08%)</title><rect x="85.5" y="531.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="88.5" y="542.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.03%)</title><rect x="85.5" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="88.5" y="526.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="85.8" y="515.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="88.8" y="526.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.05%)</title><rect x="85.8" y="499.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="88.8" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (14 samples, 0.18%)</title><rect x="86.4" y="531.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="89.4" y="542.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.03%)</title><rect x="87.7" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="90.7" y="526.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="88.0" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="91.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (9 samples, 0.12%)</title><rect x="88.5" y="691.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (9 samples, 0.12%)</title><rect x="88.5" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.03%)</title><rect x="88.6" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (6 samples, 0.08%)</title><rect x="88.9" y="659.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.08%)</title><rect x="88.9" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (6 samples, 0.08%)</title><rect x="88.9" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (6 samples, 0.08%)</title><rect x="88.9" y="611.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (6 samples, 0.08%)</title><rect x="88.9" y="595.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (42 samples, 0.54%)</title><rect x="89.8" y="691.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (42 samples, 0.54%)</title><rect x="89.8" y="675.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (42 samples, 0.54%)</title><rect x="89.8" y="659.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (41 samples, 0.53%)</title><rect x="90.0" y="643.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (41 samples, 0.53%)</title><rect x="90.0" y="627.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.0" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.18%)</title><rect x="90.2" y="611.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="93.2" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="90.6" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="93.6" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="90.9" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="93.9" y="606.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="91.2" y="595.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="94.2" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.05%)</title><rect x="91.7" y="595.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="94.7" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (26 samples, 0.33%)</title><rect x="92.3" y="611.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="95.3" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.30%)</title><rect x="92.7" y="595.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="95.7" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.30%)</title><rect x="92.7" y="579.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="95.7" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.28%)</title><rect x="92.9" y="563.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="95.9" y="574.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.28%)</title><rect x="92.9" y="547.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="95.9" y="558.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.28%)</title><rect x="92.9" y="531.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="95.9" y="542.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="93.9" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="96.9" y="526.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.15%)</title><rect x="94.4" y="515.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="97.4" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.15%)</title><rect x="94.4" y="499.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="97.4" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.13%)</title><rect x="94.7" y="483.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="97.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$84/1141333960.run (5,068 samples, 65.07%)</title><rect x="96.2" y="723.0" width="767.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.2" y="734.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda$84/1141333960.run</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$get$2 (5,068 samples, 65.07%)</title><rect x="96.2" y="707.0" width="767.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.2" y="718.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$get$2</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.byteBufferFromString (26 samples, 0.33%)</title><rect x="96.2" y="691.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.12%)</title><rect x="96.4" y="675.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.12%)</title><rect x="96.4" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.09%)</title><rect x="96.7" y="643.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.06%)</title><rect x="97.0" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.21%)</title><rect x="97.7" y="675.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.21%)</title><rect x="97.7" y="659.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.7" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.18%)</title><rect x="98.0" y="643.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.18%)</title><rect x="98.0" y="627.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.0" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="98.8" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="98.8" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="98.8" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.8" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.05%)</title><rect x="98.9" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (2 samples, 0.03%)</title><rect x="99.5" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="99.8" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.get (5,042 samples, 64.74%)</title><rect x="100.2" y="691.0" width="763.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.2" y="702.0">ru/mail/polis/service/s3ponia/AsyncService.get</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (477 samples, 6.12%)</title><rect x="100.5" y="675.0" width="72.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.5" y="686.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.10%)</title><rect x="103.3" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="103.3" y="643.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.10%)</title><rect x="103.3" y="627.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.3" y="638.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="103.5" y="611.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="106.5" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="103.9" y="611.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="106.9" y="622.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="103.9" y="595.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="106.9" y="606.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="104.1" y="579.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="107.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (446 samples, 5.73%)</title><rect x="104.5" y="659.0" width="67.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.5" y="670.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.18%)</title><rect x="104.5" y="643.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.08%)</title><rect x="105.8" y="627.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.08%)</title><rect x="105.8" y="611.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.08%)</title><rect x="105.8" y="595.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (432 samples, 5.55%)</title><rect x="106.7" y="643.0" width="65.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.7" y="654.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (432 samples, 5.55%)</title><rect x="106.7" y="627.0" width="65.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.7" y="638.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (430 samples, 5.52%)</title><rect x="107.0" y="611.0" width="65.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.0" y="622.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (429 samples, 5.51%)</title><rect x="107.1" y="595.0" width="65.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.1" y="606.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (19 samples, 0.24%)</title><rect x="107.4" y="579.0" width="2.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="110.4" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.08%)</title><rect x="109.4" y="563.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="112.4" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="109.4" y="547.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="112.4" y="558.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="109.8" y="547.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="112.8" y="558.0"></text>
</g>
<g>
<title>__libc_send (406 samples, 5.21%)</title><rect x="110.3" y="579.0" width="61.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="113.3" y="590.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (401 samples, 5.15%)</title><rect x="111.1" y="563.0" width="60.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="114.1" y="574.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (401 samples, 5.15%)</title><rect x="111.1" y="547.0" width="60.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="114.1" y="558.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (398 samples, 5.11%)</title><rect x="111.5" y="531.0" width="60.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="114.5" y="542.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (398 samples, 5.11%)</title><rect x="111.5" y="515.0" width="60.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="114.5" y="526.0">__sys_..</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="112.0" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="115.0" y="510.0"></text>
</g>
<g>
<title>sock_sendmsg (390 samples, 5.01%)</title><rect x="112.3" y="499.0" width="59.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="115.3" y="510.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (5 samples, 0.06%)</title><rect x="112.6" y="483.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="115.6" y="494.0"></text>
</g>
<g>
<title>inet_send_prepare (4 samples, 0.05%)</title><rect x="112.7" y="467.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="115.7" y="478.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.04%)</title><rect x="113.3" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="116.3" y="494.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.04%)</title><rect x="113.3" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="116.3" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (380 samples, 4.88%)</title><rect x="113.8" y="483.0" width="57.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.8" y="494.0">tcp_se..</text>
</g>
<g>
<title>release_sock (6 samples, 0.08%)</title><rect x="113.9" y="467.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.9" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (373 samples, 4.79%)</title><rect x="114.8" y="467.0" width="56.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="117.8" y="478.0">tcp_se..</text>
</g>
<g>
<title>__tcp_push_pending_frames (312 samples, 4.01%)</title><rect x="116.4" y="451.0" width="47.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="119.4" y="462.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (311 samples, 3.99%)</title><rect x="116.5" y="435.0" width="47.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="119.5" y="446.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (290 samples, 3.72%)</title><rect x="117.7" y="419.0" width="44.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.7" y="430.0">__tc..</text>
</g>
<g>
<title>__ip_queue_xmit (270 samples, 3.47%)</title><rect x="119.1" y="403.0" width="40.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="122.1" y="414.0">__i..</text>
</g>
<g>
<title>ip_local_out (12 samples, 0.15%)</title><rect x="119.8" y="387.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="122.8" y="398.0"></text>
</g>
<g>
<title>__ip_local_out (11 samples, 0.14%)</title><rect x="120.0" y="371.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="123.0" y="382.0"></text>
</g>
<g>
<title>ip_send_check (8 samples, 0.10%)</title><rect x="120.0" y="355.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.0" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.04%)</title><rect x="121.2" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="124.2" y="366.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="121.4" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="124.4" y="350.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.03%)</title><rect x="121.4" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.4" y="334.0"></text>
</g>
<g>
<title>ip_output (253 samples, 3.25%)</title><rect x="121.7" y="387.0" width="38.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="124.7" y="398.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (246 samples, 3.16%)</title><rect x="122.1" y="371.0" width="37.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="125.1" y="382.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.14%)</title><rect x="123.0" y="355.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="126.0" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.09%)</title><rect x="123.2" y="339.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="126.2" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.09%)</title><rect x="123.2" y="323.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="126.2" y="334.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.05%)</title><rect x="123.5" y="307.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="126.5" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.05%)</title><rect x="123.5" y="291.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="126.5" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="123.6" y="275.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="126.6" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="124.2" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="127.2" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (229 samples, 2.94%)</title><rect x="124.7" y="355.0" width="34.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="127.7" y="366.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (229 samples, 2.94%)</title><rect x="124.7" y="339.0" width="34.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.7" y="350.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (225 samples, 2.89%)</title><rect x="125.3" y="323.0" width="34.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="128.3" y="334.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (225 samples, 2.89%)</title><rect x="125.3" y="307.0" width="34.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.3" y="318.0">__..</text>
</g>
<g>
<title>net_rx_action (213 samples, 2.73%)</title><rect x="127.1" y="291.0" width="32.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="130.1" y="302.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="127.6" y="275.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="130.6" y="286.0"></text>
</g>
<g>
<title>process_backlog (208 samples, 2.67%)</title><rect x="127.9" y="275.0" width="31.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="130.9" y="286.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (205 samples, 2.63%)</title><rect x="128.3" y="259.0" width="31.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.3" y="270.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.08%)</title><rect x="128.5" y="243.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="131.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv (198 samples, 2.54%)</title><rect x="129.4" y="243.0" width="30.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="132.4" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (194 samples, 2.49%)</title><rect x="129.4" y="227.0" width="29.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="132.4" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (192 samples, 2.47%)</title><rect x="129.7" y="211.0" width="29.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.7" y="222.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (192 samples, 2.47%)</title><rect x="129.7" y="195.0" width="29.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="132.7" y="206.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (189 samples, 2.43%)</title><rect x="130.2" y="179.0" width="28.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="133.2" y="190.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.10%)</title><rect x="131.4" y="163.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="134.4" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (11 samples, 0.14%)</title><rect x="132.6" y="163.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="135.6" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (11 samples, 0.14%)</title><rect x="132.6" y="147.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="135.6" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (9 samples, 0.12%)</title><rect x="132.9" y="131.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="135.9" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (6 samples, 0.08%)</title><rect x="133.3" y="115.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="136.3" y="126.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.04%)</title><rect x="133.3" y="99.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="136.3" y="110.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (3 samples, 0.04%)</title><rect x="133.8" y="99.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="136.8" y="110.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="134.2" y="163.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="137.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (159 samples, 2.04%)</title><rect x="134.5" y="163.0" width="24.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.5" y="174.0">t..</text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="134.5" y="147.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="137.5" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (157 samples, 2.02%)</title><rect x="134.8" y="147.0" width="23.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="137.8" y="158.0">t..</text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="135.6" y="131.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="138.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="135.6" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="138.6" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="135.6" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.6" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (84 samples, 1.08%)</title><rect x="135.9" y="131.0" width="12.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="138.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (79 samples, 1.01%)</title><rect x="136.7" y="115.0" width="11.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="139.7" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (78 samples, 1.00%)</title><rect x="136.8" y="99.0" width="11.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="139.8" y="110.0"></text>
</g>
<g>
<title>tcp_ack (57 samples, 0.73%)</title><rect x="148.6" y="131.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="151.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.22%)</title><rect x="150.9" y="115.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="153.9" y="126.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="150.9" y="99.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="153.9" y="110.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="151.4" y="99.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="154.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.12%)</title><rect x="152.1" y="99.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="155.1" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.04%)</title><rect x="153.6" y="115.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="156.6" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.04%)</title><rect x="154.1" y="115.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="157.1" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.06%)</title><rect x="154.5" y="115.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="157.5" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.06%)</title><rect x="155.3" y="115.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="158.3" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="156.1" y="115.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="159.1" y="126.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="156.5" y="115.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="159.5" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="157.0" y="115.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="160.0" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.06%)</title><rect x="157.3" y="131.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="160.3" y="142.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.05%)</title><rect x="158.8" y="227.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="161.8" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.04%)</title><rect x="158.9" y="211.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="161.9" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.05%)</title><rect x="159.4" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="162.4" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.05%)</title><rect x="159.4" y="355.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.4" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.04%)</title><rect x="159.5" y="339.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="162.5" y="350.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (3 samples, 0.04%)</title><rect x="159.5" y="323.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="162.5" y="334.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="160.0" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.0" y="414.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="160.2" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="163.2" y="398.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="160.5" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="163.5" y="414.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.05%)</title><rect x="161.1" y="403.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="164.1" y="414.0"></text>
</g>
<g>
<title>__list_add_valid (2 samples, 0.03%)</title><rect x="161.2" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="164.2" y="398.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="161.7" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="164.7" y="430.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.09%)</title><rect x="162.0" y="419.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="165.0" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="162.4" y="403.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="165.4" y="414.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="162.4" y="387.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="165.4" y="398.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="163.0" y="419.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="166.0" y="430.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.06%)</title><rect x="163.6" y="451.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="166.6" y="462.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.04%)</title><rect x="163.8" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="166.8" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.04%)</title><rect x="163.8" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="166.8" y="430.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.04%)</title><rect x="164.4" y="451.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="167.4" y="462.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="164.5" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="167.5" y="446.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.26%)</title><rect x="164.8" y="451.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="167.8" y="462.0"></text>
</g>
<g>
<title>__alloc_skb (19 samples, 0.24%)</title><rect x="165.0" y="435.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.0" y="446.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.04%)</title><rect x="165.6" y="419.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.6" y="430.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="165.6" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.6" y="414.0"></text>
</g>
<g>
<title>__ksize (7 samples, 0.09%)</title><rect x="166.1" y="419.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="169.1" y="430.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.06%)</title><rect x="167.1" y="419.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="170.1" y="430.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="167.9" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="170.9" y="462.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.03%)</title><rect x="168.5" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="171.5" y="462.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.06%)</title><rect x="168.8" y="451.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="171.8" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.12%)</title><rect x="169.5" y="451.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="172.5" y="462.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.12%)</title><rect x="169.5" y="435.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="172.5" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.06%)</title><rect x="170.2" y="419.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="173.2" y="430.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (3 samples, 0.04%)</title><rect x="170.9" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="173.9" y="462.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.04%)</title><rect x="171.4" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="174.4" y="510.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="171.4" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="174.4" y="494.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="171.4" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="174.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="172.1" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="172.4" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="172.4" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (4,562 samples, 58.58%)</title><rect x="172.9" y="675.0" width="691.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="175.9" y="686.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (227 samples, 2.91%)</title><rect x="172.9" y="659.0" width="34.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.9" y="670.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (227 samples, 2.91%)</title><rect x="172.9" y="643.0" width="34.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.9" y="654.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (227 samples, 2.91%)</title><rect x="172.9" y="627.0" width="34.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.9" y="638.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (225 samples, 2.89%)</title><rect x="173.2" y="611.0" width="34.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.2" y="622.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (221 samples, 2.84%)</title><rect x="173.3" y="595.0" width="33.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.3" y="606.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (214 samples, 2.75%)</title><rect x="173.5" y="579.0" width="32.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.5" y="590.0">co..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.08%)</title><rect x="173.8" y="563.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.8" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.08%)</title><rect x="173.8" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.8" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.08%)</title><rect x="173.8" y="531.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.08%)</title><rect x="173.8" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.08%)</title><rect x="173.8" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$102/1921174568.compare (6 samples, 0.08%)</title><rect x="173.8" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (6 samples, 0.08%)</title><rect x="173.8" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (6 samples, 0.08%)</title><rect x="173.8" y="451.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.8" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/959565342.compare (6 samples, 0.08%)</title><rect x="173.8" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.8" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.08%)</title><rect x="173.8" y="419.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.8" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (6 samples, 0.08%)</title><rect x="173.8" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.8" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.08%)</title><rect x="173.8" y="387.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.08%)</title><rect x="173.8" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.08%)</title><rect x="173.8" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.8" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.04%)</title><rect x="173.9" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.9" y="350.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.04%)</title><rect x="173.9" y="323.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="176.9" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="174.4" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (206 samples, 2.65%)</title><rect x="174.7" y="563.0" width="31.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.7" y="574.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (206 samples, 2.65%)</title><rect x="174.7" y="547.0" width="31.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.7" y="558.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (205 samples, 2.63%)</title><rect x="174.8" y="531.0" width="31.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.8" y="542.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (205 samples, 2.63%)</title><rect x="174.8" y="515.0" width="31.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.8" y="526.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (204 samples, 2.62%)</title><rect x="175.0" y="499.0" width="30.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.0" y="510.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (204 samples, 2.62%)</title><rect x="175.0" y="483.0" width="30.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.0" y="494.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$102/1921174568.compare (203 samples, 2.61%)</title><rect x="175.2" y="467.0" width="30.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.2" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (203 samples, 2.61%)</title><rect x="175.2" y="451.0" width="30.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.2" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (203 samples, 2.61%)</title><rect x="175.2" y="435.0" width="30.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.2" y="446.0">ru..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/959565342.compare (203 samples, 2.61%)</title><rect x="175.2" y="419.0" width="30.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.2" y="430.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (203 samples, 2.61%)</title><rect x="175.2" y="403.0" width="30.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.2" y="414.0">ja..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (203 samples, 2.61%)</title><rect x="175.2" y="387.0" width="30.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.2" y="398.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (203 samples, 2.61%)</title><rect x="175.2" y="371.0" width="30.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.2" y="382.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$109/418813690.apply (200 samples, 2.57%)</title><rect x="175.6" y="355.0" width="30.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.6" y="366.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (199 samples, 2.56%)</title><rect x="175.8" y="339.0" width="30.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.8" y="350.0">ru..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (197 samples, 2.53%)</title><rect x="176.1" y="323.0" width="29.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.1" y="334.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (196 samples, 2.52%)</title><rect x="176.2" y="307.0" width="29.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.2" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (13 samples, 0.17%)</title><rect x="177.1" y="291.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.1" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (13 samples, 0.17%)</title><rect x="177.1" y="275.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.1" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.08%)</title><rect x="178.2" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.2" y="270.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.06%)</title><rect x="178.3" y="243.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.3" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.06%)</title><rect x="178.3" y="227.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (136 samples, 1.75%)</title><rect x="179.2" y="291.0" width="20.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (37 samples, 0.48%)</title><rect x="179.4" y="275.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (31 samples, 0.40%)</title><rect x="180.3" y="259.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.3" y="270.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (9 samples, 0.12%)</title><rect x="181.2" y="243.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.2" y="254.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (5 samples, 0.06%)</title><rect x="182.6" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.6" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (3 samples, 0.04%)</title><rect x="183.3" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.3" y="254.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="183.8" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="183.8" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.08%)</title><rect x="184.1" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.08%)</title><rect x="184.1" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.04%)</title><rect x="184.1" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (3 samples, 0.04%)</title><rect x="184.5" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (97 samples, 1.25%)</title><rect x="185.0" y="275.0" width="14.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (97 samples, 1.25%)</title><rect x="185.0" y="259.0" width="14.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (96 samples, 1.23%)</title><rect x="185.2" y="243.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="188.2" y="254.0"></text>
</g>
<g>
<title>__pread64 (87 samples, 1.12%)</title><rect x="185.9" y="227.0" width="13.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="188.9" y="238.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.08%)</title><rect x="186.4" y="211.0" width="12.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="189.4" y="222.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 1.08%)</title><rect x="186.4" y="195.0" width="12.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="189.4" y="206.0"></text>
</g>
<g>
<title>ksys_pread64 (69 samples, 0.89%)</title><rect x="188.6" y="179.0" width="10.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.6" y="190.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.12%)</title><rect x="188.8" y="163.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="191.8" y="174.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.10%)</title><rect x="188.9" y="147.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="191.9" y="158.0"></text>
</g>
<g>
<title>vfs_read (59 samples, 0.76%)</title><rect x="190.2" y="163.0" width="8.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.2" y="174.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="190.5" y="147.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.5" y="158.0"></text>
</g>
<g>
<title>new_sync_read (42 samples, 0.54%)</title><rect x="190.9" y="147.0" width="6.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="193.9" y="158.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (4 samples, 0.05%)</title><rect x="191.5" y="131.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="194.5" y="142.0"></text>
</g>
<g>
<title>generic_file_read_iter (32 samples, 0.41%)</title><rect x="192.1" y="131.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="195.1" y="142.0"></text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.13%)</title><rect x="193.6" y="115.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="196.6" y="126.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.09%)</title><rect x="194.1" y="99.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.1" y="110.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.09%)</title><rect x="194.1" y="83.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="197.1" y="94.0"></text>
</g>
<g>
<title>pagecache_get_page (8 samples, 0.10%)</title><rect x="195.3" y="115.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="198.3" y="126.0"></text>
</g>
<g>
<title>find_get_entry (8 samples, 0.10%)</title><rect x="195.3" y="99.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="198.3" y="110.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.04%)</title><rect x="196.1" y="83.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="199.1" y="94.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.04%)</title><rect x="196.5" y="115.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="199.5" y="126.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="197.0" y="131.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="200.0" y="142.0"></text>
</g>
<g>
<title>security_file_permission (12 samples, 0.15%)</title><rect x="197.3" y="147.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="200.3" y="158.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="197.7" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="200.7" y="142.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.09%)</title><rect x="198.0" y="131.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="201.0" y="142.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="199.1" y="227.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="202.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (31 samples, 0.40%)</title><rect x="199.8" y="291.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.8" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.15%)</title><rect x="201.4" y="275.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="204.4" y="286.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.14%)</title><rect x="201.5" y="259.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="204.5" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.14%)</title><rect x="201.5" y="243.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="204.5" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (9 samples, 0.12%)</title><rect x="201.7" y="227.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="204.7" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.09%)</title><rect x="203.3" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (9 samples, 0.12%)</title><rect x="204.5" y="291.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.5" y="302.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.09%)</title><rect x="204.8" y="275.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="207.8" y="286.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.09%)</title><rect x="204.8" y="259.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="207.8" y="270.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.06%)</title><rect x="205.0" y="243.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="208.0" y="254.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (3 samples, 0.04%)</title><rect x="205.2" y="227.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="208.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.04%)</title><rect x="205.9" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.9" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="205.9" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$158/491263096.apply (3 samples, 0.04%)</title><rect x="206.4" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (2 samples, 0.03%)</title><rect x="206.5" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$165/641966753.apply (3 samples, 0.04%)</title><rect x="206.8" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$iterator$2 (3 samples, 0.04%)</title><rect x="206.8" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (2 samples, 0.03%)</title><rect x="207.0" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="207.3" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.04%)</title><rect x="207.6" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.6" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="207.6" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.04%)</title><rect x="208.0" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.0" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="208.0" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.0" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.04%)</title><rect x="208.0" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.0" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="208.0" y="611.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="208.0" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="208.0" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="208.2" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (5 samples, 0.06%)</title><rect x="208.5" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.5" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.06%)</title><rect x="208.5" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="211.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.06%)</title><rect x="208.5" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.06%)</title><rect x="208.5" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="208.5" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="208.5" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.5" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="208.5" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="208.6" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.6" y="558.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="208.9" y="547.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="211.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.iterator (4,322 samples, 55.50%)</title><rect x="209.2" y="659.0" width="654.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.2" y="670.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (605 samples, 7.77%)</title><rect x="209.8" y="643.0" width="91.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.8" y="654.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (605 samples, 7.77%)</title><rect x="209.8" y="627.0" width="91.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.8" y="638.0">com/google/..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (585 samples, 7.51%)</title><rect x="209.8" y="611.0" width="88.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.8" y="622.0">java/util/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (585 samples, 7.51%)</title><rect x="209.8" y="595.0" width="88.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.8" y="606.0">java/util/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (584 samples, 7.50%)</title><rect x="210.0" y="579.0" width="88.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.0" y="590.0">java/util/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (584 samples, 7.50%)</title><rect x="210.0" y="563.0" width="88.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.0" y="574.0">java/util/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (583 samples, 7.49%)</title><rect x="210.2" y="547.0" width="88.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.2" y="558.0">com/google..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (582 samples, 7.47%)</title><rect x="210.3" y="531.0" width="88.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.3" y="542.0">com/google..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.06%)</title><rect x="211.2" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$102/1921174568.compare (571 samples, 7.33%)</title><rect x="212.0" y="515.0" width="86.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="215.0" y="526.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (570 samples, 7.32%)</title><rect x="212.1" y="499.0" width="86.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.1" y="510.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (570 samples, 7.32%)</title><rect x="212.1" y="483.0" width="86.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.1" y="494.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/959565342.compare (569 samples, 7.31%)</title><rect x="212.1" y="467.0" width="86.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.1" y="478.0">java/util/..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (569 samples, 7.31%)</title><rect x="212.1" y="451.0" width="86.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="215.1" y="462.0">java/util/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="212.1" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.1" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (565 samples, 7.25%)</title><rect x="212.4" y="435.0" width="85.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.4" y="446.0">java/util/..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (565 samples, 7.25%)</title><rect x="212.4" y="419.0" width="85.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.4" y="430.0">java/util/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.09%)</title><rect x="212.6" y="403.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.05%)</title><rect x="213.0" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.0" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="213.2" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$109/418813690.apply (228 samples, 2.93%)</title><rect x="213.6" y="403.0" width="34.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.6" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (220 samples, 2.82%)</title><rect x="214.1" y="387.0" width="33.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.1" y="398.0">ru..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (217 samples, 2.79%)</title><rect x="214.5" y="371.0" width="32.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.5" y="382.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (216 samples, 2.77%)</title><rect x="214.7" y="355.0" width="32.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.7" y="366.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (11 samples, 0.14%)</title><rect x="215.0" y="339.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.0" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (10 samples, 0.13%)</title><rect x="215.2" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.2" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="216.4" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (161 samples, 2.07%)</title><rect x="216.8" y="339.0" width="24.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.8" y="350.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (55 samples, 0.71%)</title><rect x="217.6" y="323.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (46 samples, 0.59%)</title><rect x="218.9" y="307.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.9" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (12 samples, 0.15%)</title><rect x="219.4" y="291.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.4" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (14 samples, 0.18%)</title><rect x="221.2" y="291.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="224.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (3 samples, 0.04%)</title><rect x="223.3" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.3" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="223.8" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="223.8" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (12 samples, 0.15%)</title><rect x="224.1" y="291.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (12 samples, 0.15%)</title><rect x="224.1" y="275.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.04%)</title><rect x="224.5" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.03%)</title><rect x="224.7" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (6 samples, 0.08%)</title><rect x="225.0" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (100 samples, 1.28%)</title><rect x="225.9" y="323.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (100 samples, 1.28%)</title><rect x="225.9" y="307.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (100 samples, 1.28%)</title><rect x="225.9" y="291.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.9" y="302.0"></text>
</g>
<g>
<title>__pread64 (94 samples, 1.21%)</title><rect x="226.4" y="275.0" width="14.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="229.4" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.08%)</title><rect x="227.9" y="259.0" width="12.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="230.9" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 1.08%)</title><rect x="227.9" y="243.0" width="12.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.9" y="254.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.05%)</title><rect x="229.1" y="227.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="232.1" y="238.0"></text>
</g>
<g>
<title>ksys_pread64 (72 samples, 0.92%)</title><rect x="229.7" y="227.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="232.7" y="238.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.19%)</title><rect x="229.7" y="211.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="232.7" y="222.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.19%)</title><rect x="229.7" y="195.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="232.7" y="206.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="232.0" y="211.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.0" y="222.0"></text>
</g>
<g>
<title>vfs_read (55 samples, 0.71%)</title><rect x="232.3" y="211.0" width="8.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="235.3" y="222.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.05%)</title><rect x="233.2" y="195.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="236.2" y="206.0"></text>
</g>
<g>
<title>new_sync_read (38 samples, 0.49%)</title><rect x="233.8" y="195.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="236.8" y="206.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (4 samples, 0.05%)</title><rect x="234.2" y="179.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="237.2" y="190.0"></text>
</g>
<g>
<title>generic_file_read_iter (30 samples, 0.39%)</title><rect x="234.8" y="179.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="237.8" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (9 samples, 0.12%)</title><rect x="235.9" y="163.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="238.9" y="174.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.08%)</title><rect x="236.4" y="147.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="239.4" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.08%)</title><rect x="236.4" y="131.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="239.4" y="142.0"></text>
</g>
<g>
<title>pagecache_get_page (11 samples, 0.14%)</title><rect x="237.4" y="163.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="240.4" y="174.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.14%)</title><rect x="237.4" y="147.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="240.4" y="158.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="238.8" y="131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="241.8" y="142.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.03%)</title><rect x="239.1" y="163.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="242.1" y="174.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.03%)</title><rect x="239.1" y="147.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="242.1" y="158.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.09%)</title><rect x="239.5" y="195.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="242.5" y="206.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.05%)</title><rect x="239.7" y="179.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="242.7" y="190.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.03%)</title><rect x="240.3" y="179.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="243.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (31 samples, 0.40%)</title><rect x="241.2" y="339.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.2" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.18%)</title><rect x="243.2" y="323.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="246.2" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.18%)</title><rect x="243.2" y="307.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="246.2" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (13 samples, 0.17%)</title><rect x="243.3" y="291.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="246.3" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (8 samples, 0.10%)</title><rect x="243.8" y="275.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="246.8" y="286.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="245.0" y="275.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="248.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.05%)</title><rect x="245.3" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (10 samples, 0.13%)</title><rect x="245.9" y="339.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.9" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.10%)</title><rect x="246.2" y="323.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="249.2" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.09%)</title><rect x="246.4" y="307.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="249.4" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.08%)</title><rect x="246.5" y="291.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="249.5" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (4 samples, 0.05%)</title><rect x="246.8" y="275.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="249.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (5 samples, 0.06%)</title><rect x="247.4" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.4" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.06%)</title><rect x="247.4" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.06%)</title><rect x="247.4" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="247.6" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="247.6" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$129/1254560328.apply (315 samples, 4.04%)</title><rect x="248.2" y="403.0" width="47.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.2" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getValue (314 samples, 4.03%)</title><rect x="248.3" y="387.0" width="47.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.3" y="398.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="249.1" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="249.2" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="249.2" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.2" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="249.2" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="249.2" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (305 samples, 3.92%)</title><rect x="249.7" y="371.0" width="46.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.7" y="382.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (304 samples, 3.90%)</title><rect x="249.8" y="355.0" width="46.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.8" y="366.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (25 samples, 0.32%)</title><rect x="250.6" y="339.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.6" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (24 samples, 0.31%)</title><rect x="250.8" y="323.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.8" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.08%)</title><rect x="253.5" y="307.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.5" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.06%)</title><rect x="253.6" y="291.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.6" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.06%)</title><rect x="253.6" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (210 samples, 2.70%)</title><rect x="254.5" y="339.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.5" y="350.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (45 samples, 0.58%)</title><rect x="255.2" y="323.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (44 samples, 0.56%)</title><rect x="255.3" y="307.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.3" y="318.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (4 samples, 0.05%)</title><rect x="256.2" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.2" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (10 samples, 0.13%)</title><rect x="256.8" y="291.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (6 samples, 0.08%)</title><rect x="258.3" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.3" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="259.2" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="259.2" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (16 samples, 0.21%)</title><rect x="259.5" y="291.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (15 samples, 0.19%)</title><rect x="259.7" y="275.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (6 samples, 0.08%)</title><rect x="260.0" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.03%)</title><rect x="260.6" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (7 samples, 0.09%)</title><rect x="260.9" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.9" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (158 samples, 2.03%)</title><rect x="262.0" y="323.0" width="23.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.0" y="334.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (158 samples, 2.03%)</title><rect x="262.0" y="307.0" width="23.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.0" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (155 samples, 1.99%)</title><rect x="262.4" y="291.0" width="23.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.4" y="302.0">s..</text>
</g>
<g>
<title>__pread64 (142 samples, 1.82%)</title><rect x="263.9" y="275.0" width="21.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="266.9" y="286.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (134 samples, 1.72%)</title><rect x="265.2" y="259.0" width="20.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="268.2" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (134 samples, 1.72%)</title><rect x="265.2" y="243.0" width="20.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="268.2" y="254.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="266.8" y="227.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="269.8" y="238.0"></text>
</g>
<g>
<title>ksys_pread64 (121 samples, 1.55%)</title><rect x="267.1" y="227.0" width="18.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="270.1" y="238.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.19%)</title><rect x="267.6" y="211.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="270.6" y="222.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.18%)</title><rect x="267.7" y="195.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="270.7" y="206.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.05%)</title><rect x="269.8" y="211.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="272.8" y="222.0"></text>
</g>
<g>
<title>vfs_read (99 samples, 1.27%)</title><rect x="270.5" y="211.0" width="15.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="273.5" y="222.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.05%)</title><rect x="270.9" y="195.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="273.9" y="206.0"></text>
</g>
<g>
<title>new_sync_read (73 samples, 0.94%)</title><rect x="271.5" y="195.0" width="11.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="274.5" y="206.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (8 samples, 0.10%)</title><rect x="272.9" y="179.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="275.9" y="190.0"></text>
</g>
<g>
<title>generic_file_read_iter (54 samples, 0.69%)</title><rect x="274.1" y="179.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="277.1" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (12 samples, 0.15%)</title><rect x="276.5" y="163.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="279.5" y="174.0"></text>
</g>
<g>
<title>copyout (9 samples, 0.12%)</title><rect x="277.0" y="147.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="280.0" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 0.10%)</title><rect x="277.1" y="131.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="280.1" y="142.0"></text>
</g>
<g>
<title>pagecache_get_page (14 samples, 0.18%)</title><rect x="278.5" y="163.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="281.5" y="174.0"></text>
</g>
<g>
<title>find_get_entry (12 samples, 0.15%)</title><rect x="278.8" y="147.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="281.8" y="158.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.05%)</title><rect x="280.0" y="131.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="283.0" y="142.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="280.3" y="115.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="283.3" y="126.0"></text>
</g>
<g>
<title>touch_atime (11 samples, 0.14%)</title><rect x="280.6" y="163.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="283.6" y="174.0"></text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.05%)</title><rect x="281.7" y="147.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="284.7" y="158.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="282.3" y="179.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="285.3" y="190.0"></text>
</g>
<g>
<title>security_file_permission (19 samples, 0.24%)</title><rect x="282.6" y="195.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="285.6" y="206.0"></text>
</g>
<g>
<title>selinux_file_permission (16 samples, 0.21%)</title><rect x="283.0" y="179.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="286.0" y="190.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.03%)</title><rect x="285.2" y="163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="288.2" y="174.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="285.5" y="275.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="288.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.04%)</title><rect x="285.9" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (47 samples, 0.60%)</title><rect x="286.4" y="339.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.4" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (19 samples, 0.24%)</title><rect x="290.0" y="323.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="293.0" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (19 samples, 0.24%)</title><rect x="290.0" y="307.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="293.0" y="318.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.03%)</title><rect x="290.0" y="291.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="293.0" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (15 samples, 0.19%)</title><rect x="290.5" y="291.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="293.5" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (8 samples, 0.10%)</title><rect x="290.9" y="275.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="293.9" y="286.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.05%)</title><rect x="292.1" y="275.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="295.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.05%)</title><rect x="292.9" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (16 samples, 0.21%)</title><rect x="293.5" y="339.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.5" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.17%)</title><rect x="293.9" y="323.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="296.9" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (13 samples, 0.17%)</title><rect x="293.9" y="307.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="296.9" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (13 samples, 0.17%)</title><rect x="293.9" y="291.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="296.9" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (8 samples, 0.10%)</title><rect x="294.1" y="275.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="297.1" y="286.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.05%)</title><rect x="295.3" y="275.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="298.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.compareTo (14 samples, 0.18%)</title><rect x="295.9" y="403.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.compareTo (14 samples, 0.18%)</title><rect x="295.9" y="387.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.9" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$ReverseComparator2.compare (10 samples, 0.13%)</title><rect x="295.9" y="371.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (10 samples, 0.13%)</title><rect x="295.9" y="355.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (10 samples, 0.13%)</title><rect x="295.9" y="339.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.9" y="350.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.06%)</title><rect x="296.2" y="323.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="299.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value$$Lambda$152/872995597.apply (2 samples, 0.03%)</title><rect x="297.1" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (4 samples, 0.05%)</title><rect x="297.4" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="297.4" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="297.4" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.get$Lambda (4 samples, 0.05%)</title><rect x="297.4" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (2 samples, 0.03%)</title><rect x="297.7" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.compareTo (2 samples, 0.03%)</title><rect x="298.0" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.0" y="446.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20 samples, 0.26%)</title><rect x="298.5" y="611.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="301.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (20 samples, 0.26%)</title><rect x="298.5" y="595.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (20 samples, 0.26%)</title><rect x="298.5" y="579.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (9 samples, 0.12%)</title><rect x="299.1" y="563.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$83/685956525.getAsBoolean (9 samples, 0.12%)</title><rect x="299.1" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9 samples, 0.12%)</title><rect x="299.1" y="531.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9 samples, 0.12%)</title><rect x="299.1" y="515.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="299.1" y="499.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (6 samples, 0.08%)</title><rect x="299.1" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (4 samples, 0.05%)</title><rect x="299.4" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3 samples, 0.04%)</title><rect x="300.0" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (3 samples, 0.04%)</title><rect x="300.5" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline$$Lambda$81/1009001102.get (2 samples, 0.03%)</title><rect x="300.6" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.lambda$spliterator$0 (2 samples, 0.03%)</title><rect x="300.6" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (2 samples, 0.03%)</title><rect x="300.6" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (4 samples, 0.05%)</title><rect x="300.9" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="301.1" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (2 samples, 0.03%)</title><rect x="301.1" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3,372 samples, 43.30%)</title><rect x="301.5" y="643.0" width="510.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.5" y="654.0">java/util/Collections$UnmodifiableMap.forEach</text>
</g>
<g>
<title>java/util/TreeMap.forEach (3,372 samples, 43.30%)</title><rect x="301.5" y="627.0" width="510.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.5" y="638.0">java/util/TreeMap.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$93/2088607678.accept (3,371 samples, 43.28%)</title><rect x="301.7" y="611.0" width="510.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.7" y="622.0">ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$93/2088607678.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$iterator$0 (3,370 samples, 43.27%)</title><rect x="301.8" y="595.0" width="510.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.8" y="606.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$iterator$0</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.iterator (3,368 samples, 43.25%)</title><rect x="302.1" y="579.0" width="510.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.1" y="590.0">ru/mail/polis/dao/s3ponia/DiskTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt; (3,368 samples, 43.25%)</title><rect x="302.1" y="563.0" width="510.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.1" y="574.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex (3,368 samples, 43.25%)</title><rect x="302.1" y="547.0" width="510.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.1" y="558.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (47 samples, 0.60%)</title><rect x="303.0" y="531.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.0" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (43 samples, 0.55%)</title><rect x="303.5" y="515.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (26 samples, 0.33%)</title><rect x="310.2" y="531.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.getElementSize (19 samples, 0.24%)</title><rect x="311.2" y="515.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (3,289 samples, 42.23%)</title><rect x="314.1" y="531.0" width="498.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.1" y="542.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (23 samples, 0.30%)</title><rect x="315.6" y="515.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.6" y="526.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="315.9" y="499.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="318.9" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="315.9" y="483.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="318.9" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="315.9" y="467.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="318.9" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="315.9" y="451.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="318.9" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.23%)</title><rect x="316.4" y="499.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="318.0" y="483.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.03%)</title><rect x="319.1" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.1" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (2 samples, 0.03%)</title><rect x="319.1" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,253 samples, 41.77%)</title><rect x="319.5" y="515.0" width="492.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.5" y="526.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,250 samples, 41.73%)</title><rect x="320.0" y="499.0" width="492.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.0" y="510.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (183 samples, 2.35%)</title><rect x="331.1" y="483.0" width="27.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.1" y="494.0">s..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (181 samples, 2.32%)</title><rect x="331.4" y="467.0" width="27.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.4" y="478.0">j..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.05%)</title><rect x="352.3" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="355.3" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (39 samples, 0.50%)</title><rect x="352.9" y="451.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.9" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (31 samples, 0.40%)</title><rect x="354.1" y="435.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.1" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (31 samples, 0.40%)</title><rect x="354.1" y="419.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.05%)</title><rect x="358.2" y="403.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.09%)</title><rect x="358.8" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2,373 samples, 30.47%)</title><rect x="359.8" y="483.0" width="359.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.8" y="494.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (683 samples, 8.77%)</title><rect x="364.4" y="467.0" width="103.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.4" y="478.0">java/nio/Hea..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (597 samples, 7.67%)</title><rect x="377.4" y="451.0" width="90.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.4" y="462.0">java/nio/D..</text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (110 samples, 1.41%)</title><rect x="389.1" y="435.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.1" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (173 samples, 2.22%)</title><rect x="405.8" y="435.0" width="26.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.8" y="446.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (36 samples, 0.46%)</title><rect x="432.0" y="435.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.0" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.21%)</title><rect x="437.4" y="435.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (16 samples, 0.21%)</title><rect x="437.4" y="419.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.4" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.10%)</title><rect x="437.4" y="403.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="440.4" y="414.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (8 samples, 0.10%)</title><rect x="437.4" y="387.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="440.4" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.81] (4 samples, 0.05%)</title><rect x="437.6" y="371.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="440.6" y="382.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (3 samples, 0.04%)</title><rect x="438.2" y="371.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="441.2" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.10%)</title><rect x="438.6" y="403.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.6" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.08%)</title><rect x="438.9" y="387.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="441.9" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (6 samples, 0.08%)</title><rect x="438.9" y="371.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="441.9" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.03%)</title><rect x="438.9" y="355.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="441.9" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (2 samples, 0.03%)</title><rect x="439.2" y="355.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="442.2" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.81] (2 samples, 0.03%)</title><rect x="439.5" y="355.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="442.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (185 samples, 2.38%)</title><rect x="439.8" y="435.0" width="28.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.8" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (184 samples, 2.36%)</title><rect x="440.0" y="419.0" width="27.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.0" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (50 samples, 0.64%)</title><rect x="441.8" y="403.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (32 samples, 0.41%)</title><rect x="444.5" y="387.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (122 samples, 1.57%)</title><rect x="449.4" y="403.0" width="18.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,626 samples, 20.88%)</title><rect x="468.0" y="467.0" width="246.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.0" y="478.0">sun/nio/ch/IOUtil.readIntoNativeB..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,619 samples, 20.79%)</title><rect x="469.1" y="451.0" width="245.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.1" y="462.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,614 samples, 20.72%)</title><rect x="469.8" y="435.0" width="244.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.8" y="446.0">sun/nio/ch/FileDispatcherImpl.pr..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (16 samples, 0.21%)</title><rect x="480.3" y="419.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="483.3" y="430.0"></text>
</g>
<g>
<title>__pread64 (1,481 samples, 19.02%)</title><rect x="482.7" y="419.0" width="224.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="485.7" y="430.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,393 samples, 17.89%)</title><rect x="496.1" y="403.0" width="211.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="499.1" y="414.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (1,393 samples, 17.89%)</title><rect x="496.1" y="387.0" width="211.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="499.1" y="398.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.22%)</title><rect x="526.2" y="371.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="529.2" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (1,177 samples, 15.11%)</title><rect x="528.8" y="371.0" width="178.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="531.8" y="382.0">ksys_pread64</text>
</g>
<g>
<title>__fget_light (171 samples, 2.20%)</title><rect x="529.7" y="355.0" width="25.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="532.7" y="366.0">_..</text>
</g>
<g>
<title>__fget (151 samples, 1.94%)</title><rect x="532.7" y="339.0" width="22.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="535.7" y="350.0">_..</text>
</g>
<g>
<title>fput_many (43 samples, 0.55%)</title><rect x="555.8" y="355.0" width="6.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="558.8" y="366.0"></text>
</g>
<g>
<title>vfs_read (956 samples, 12.28%)</title><rect x="562.3" y="355.0" width="144.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="565.3" y="366.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (20 samples, 0.26%)</title><rect x="565.2" y="339.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="568.2" y="350.0"></text>
</g>
<g>
<title>__vfs_read (24 samples, 0.31%)</title><rect x="568.2" y="339.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.2" y="350.0"></text>
</g>
<g>
<title>fsnotify (98 samples, 1.26%)</title><rect x="571.8" y="339.0" width="14.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="574.8" y="350.0"></text>
</g>
<g>
<title>new_sync_read (683 samples, 8.77%)</title><rect x="586.7" y="339.0" width="103.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="589.7" y="350.0">new_sync_read</text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (70 samples, 0.90%)</title><rect x="593.0" y="323.0" width="10.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="596.0" y="334.0"></text>
</g>
<g>
<title>generic_file_read_iter (562 samples, 7.22%)</title><rect x="603.6" y="323.0" width="85.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.6" y="334.0">generic_fi..</text>
</g>
<g>
<title>_cond_resched (4 samples, 0.05%)</title><rect x="627.0" y="307.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="630.0" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (153 samples, 1.96%)</title><rect x="627.6" y="307.0" width="23.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="630.6" y="318.0">c..</text>
</g>
<g>
<title>_cond_resched (6 samples, 0.08%)</title><rect x="633.0" y="291.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="636.0" y="302.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="633.6" y="275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.6" y="286.0"></text>
</g>
<g>
<title>copyout (111 samples, 1.43%)</title><rect x="633.9" y="291.0" width="16.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.9" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_string (100 samples, 1.28%)</title><rect x="635.6" y="275.0" width="15.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="638.6" y="286.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.06%)</title><rect x="650.8" y="307.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="653.8" y="318.0"></text>
</g>
<g>
<title>pagecache_get_page (185 samples, 2.38%)</title><rect x="651.5" y="307.0" width="28.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.5" y="318.0">pa..</text>
</g>
<g>
<title>find_get_entry (176 samples, 2.26%)</title><rect x="652.9" y="291.0" width="26.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="655.9" y="302.0">f..</text>
</g>
<g>
<title>PageHuge (3 samples, 0.04%)</title><rect x="671.2" y="275.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="674.2" y="286.0"></text>
</g>
<g>
<title>xas_load (52 samples, 0.67%)</title><rect x="671.7" y="275.0" width="7.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="674.7" y="286.0"></text>
</g>
<g>
<title>xas_start (17 samples, 0.22%)</title><rect x="677.0" y="259.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="680.0" y="270.0"></text>
</g>
<g>
<title>touch_atime (61 samples, 0.78%)</title><rect x="679.5" y="307.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="682.5" y="318.0"></text>
</g>
<g>
<title>atime_needs_update (15 samples, 0.19%)</title><rect x="686.5" y="291.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="689.5" y="302.0"></text>
</g>
<g>
<title>iov_iter_init (9 samples, 0.12%)</title><rect x="688.8" y="323.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="691.8" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.04%)</title><rect x="690.2" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="693.2" y="350.0"></text>
</g>
<g>
<title>security_file_permission (109 samples, 1.40%)</title><rect x="690.6" y="339.0" width="16.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="693.6" y="350.0"></text>
</g>
<g>
<title>__fsnotify_parent (20 samples, 0.26%)</title><rect x="693.2" y="323.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="696.2" y="334.0"></text>
</g>
<g>
<title>selinux_file_permission (72 samples, 0.92%)</title><rect x="696.2" y="323.0" width="10.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="699.2" y="334.0"></text>
</g>
<g>
<title>__inode_security_revalidate (13 samples, 0.17%)</title><rect x="704.5" y="307.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="707.5" y="318.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="706.2" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="709.2" y="302.0"></text>
</g>
<g>
<title>avc_policy_seqno (4 samples, 0.05%)</title><rect x="706.5" y="307.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.5" y="318.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (22 samples, 0.28%)</title><rect x="707.1" y="419.0" width="3.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="710.1" y="430.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (19 samples, 0.24%)</title><rect x="710.5" y="419.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="713.5" y="430.0"></text>
</g>
<g>
<title>fdval (6 samples, 0.08%)</title><rect x="713.5" y="419.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="716.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (33 samples, 0.42%)</title><rect x="714.4" y="467.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.4" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (20 samples, 0.26%)</title><rect x="714.5" y="451.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.5" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (12 samples, 0.15%)</title><rect x="714.5" y="435.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.5" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (8 samples, 0.10%)</title><rect x="716.4" y="435.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (12 samples, 0.15%)</title><rect x="717.6" y="451.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (455 samples, 5.84%)</title><rect x="719.4" y="483.0" width="68.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.4" y="494.0">sun/nio..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (169 samples, 2.17%)</title><rect x="750.5" y="467.0" width="25.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="753.5" y="478.0">S..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (161 samples, 2.07%)</title><rect x="751.7" y="451.0" width="24.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="754.7" y="462.0">O..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (10 samples, 0.13%)</title><rect x="752.3" y="435.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="755.3" y="446.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (2 samples, 0.03%)</title><rect x="753.8" y="435.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="756.8" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (136 samples, 1.75%)</title><rect x="754.2" y="435.0" width="20.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="757.2" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (79 samples, 1.01%)</title><rect x="760.3" y="419.0" width="12.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="763.3" y="430.0"></text>
</g>
<g>
<title>SpinPause (17 samples, 0.22%)</title><rect x="772.3" y="419.0" width="2.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="775.3" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.94] (8 samples, 0.10%)</title><rect x="774.8" y="435.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="777.8" y="446.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.10%)</title><rect x="776.1" y="467.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="779.1" y="478.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="777.3" y="467.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="780.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (67 samples, 0.86%)</title><rect x="777.9" y="467.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.9" y="478.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.03%)</title><rect x="786.1" y="451.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="789.1" y="462.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (11 samples, 0.14%)</title><rect x="786.4" y="451.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="789.4" y="462.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.03%)</title><rect x="788.0" y="467.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="791.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (158 samples, 2.03%)</title><rect x="788.3" y="483.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.3" y="494.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (140 samples, 1.80%)</title><rect x="791.1" y="467.0" width="21.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="794.1" y="478.0">S..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (137 samples, 1.76%)</title><rect x="791.5" y="451.0" width="20.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="794.5" y="462.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (7 samples, 0.09%)</title><rect x="791.7" y="435.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="794.7" y="446.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (4 samples, 0.05%)</title><rect x="792.7" y="435.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="795.7" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (119 samples, 1.53%)</title><rect x="793.3" y="435.0" width="18.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="796.3" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (95 samples, 1.22%)</title><rect x="796.2" y="419.0" width="14.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="799.2" y="430.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.06%)</title><rect x="810.6" y="419.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="813.6" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.94] (6 samples, 0.08%)</title><rect x="811.4" y="435.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="814.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (15 samples, 0.19%)</title><rect x="812.4" y="643.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (15 samples, 0.19%)</title><rect x="812.4" y="627.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (15 samples, 0.19%)</title><rect x="812.4" y="611.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (11 samples, 0.14%)</title><rect x="813.0" y="595.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.0" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (10 samples, 0.13%)</title><rect x="813.2" y="579.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (12 samples, 0.15%)</title><rect x="814.7" y="643.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (12 samples, 0.15%)</title><rect x="814.7" y="627.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (5 samples, 0.06%)</title><rect x="814.7" y="611.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (3 samples, 0.04%)</title><rect x="815.0" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="815.0" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (7 samples, 0.09%)</title><rect x="815.5" y="611.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (142 samples, 1.82%)</title><rect x="816.5" y="643.0" width="21.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.5" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (141 samples, 1.81%)</title><rect x="816.7" y="627.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.7" y="638.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (140 samples, 1.80%)</title><rect x="816.8" y="611.0" width="21.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.8" y="622.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (17 samples, 0.22%)</title><rect x="817.0" y="595.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.0" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (17 samples, 0.22%)</title><rect x="817.0" y="579.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.0" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (17 samples, 0.22%)</title><rect x="817.0" y="563.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.22%)</title><rect x="817.0" y="547.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.19%)</title><rect x="817.3" y="531.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$102/1921174568.compare (13 samples, 0.17%)</title><rect x="817.6" y="515.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (13 samples, 0.17%)</title><rect x="817.6" y="499.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (13 samples, 0.17%)</title><rect x="817.6" y="483.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.6" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/959565342.compare (11 samples, 0.14%)</title><rect x="817.6" y="467.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.14%)</title><rect x="817.6" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (11 samples, 0.14%)</title><rect x="817.6" y="435.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (11 samples, 0.14%)</title><rect x="817.6" y="419.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.10%)</title><rect x="817.6" y="403.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.10%)</title><rect x="817.6" y="387.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.6" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.08%)</title><rect x="817.9" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$109/418813690.apply (3 samples, 0.04%)</title><rect x="818.8" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.8" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (2 samples, 0.03%)</title><rect x="819.2" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (120 samples, 1.54%)</title><rect x="819.5" y="595.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.5" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (120 samples, 1.54%)</title><rect x="819.5" y="579.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.5" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (120 samples, 1.54%)</title><rect x="819.5" y="563.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.5" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (120 samples, 1.54%)</title><rect x="819.5" y="547.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (116 samples, 1.49%)</title><rect x="820.2" y="531.0" width="17.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (116 samples, 1.49%)</title><rect x="820.2" y="515.0" width="17.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$102/1921174568.compare (115 samples, 1.48%)</title><rect x="820.3" y="499.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (115 samples, 1.48%)</title><rect x="820.3" y="483.0" width="17.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.compareTo (115 samples, 1.48%)</title><rect x="820.3" y="467.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.3" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/959565342.compare (115 samples, 1.48%)</title><rect x="820.3" y="451.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.3" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (115 samples, 1.48%)</title><rect x="820.3" y="435.0" width="17.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$120/1361839808.compare (115 samples, 1.48%)</title><rect x="820.3" y="419.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.3" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (115 samples, 1.48%)</title><rect x="820.3" y="403.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell$$Lambda$109/418813690.apply (114 samples, 1.46%)</title><rect x="820.5" y="387.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (113 samples, 1.45%)</title><rect x="820.5" y="371.0" width="17.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (111 samples, 1.43%)</title><rect x="820.8" y="355.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (111 samples, 1.43%)</title><rect x="820.8" y="339.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.12%)</title><rect x="821.2" y="323.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.2" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (9 samples, 0.12%)</title><rect x="821.2" y="307.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (73 samples, 0.94%)</title><rect x="822.6" y="323.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (25 samples, 0.32%)</title><rect x="822.6" y="307.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (22 samples, 0.28%)</title><rect x="823.0" y="291.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.0" y="302.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.reachabilityFence (6 samples, 0.08%)</title><rect x="823.5" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.5" y="286.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (5 samples, 0.06%)</title><rect x="824.4" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (6 samples, 0.08%)</title><rect x="825.5" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (6 samples, 0.08%)</title><rect x="825.5" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (4 samples, 0.05%)</title><rect x="825.8" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (47 samples, 0.60%)</title><rect x="826.4" y="307.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="829.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (47 samples, 0.60%)</title><rect x="826.4" y="291.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (47 samples, 0.60%)</title><rect x="826.4" y="275.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.4" y="286.0"></text>
</g>
<g>
<title>__pread64 (41 samples, 0.53%)</title><rect x="827.0" y="259.0" width="6.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="830.0" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.49%)</title><rect x="827.4" y="243.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="830.4" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.49%)</title><rect x="827.4" y="227.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="830.4" y="238.0"></text>
</g>
<g>
<title>ksys_pread64 (28 samples, 0.36%)</title><rect x="828.9" y="211.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="831.9" y="222.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.09%)</title><rect x="828.9" y="195.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="831.9" y="206.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="829.1" y="179.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="832.1" y="190.0"></text>
</g>
<g>
<title>vfs_read (21 samples, 0.27%)</title><rect x="830.0" y="195.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="833.0" y="206.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.21%)</title><rect x="830.5" y="179.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="833.5" y="190.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (2 samples, 0.03%)</title><rect x="830.8" y="163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="833.8" y="174.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.15%)</title><rect x="831.1" y="163.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="834.1" y="174.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.06%)</title><rect x="832.0" y="147.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="835.0" y="158.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.06%)</title><rect x="832.0" y="131.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="835.0" y="142.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="832.4" y="115.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="835.4" y="126.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="832.9" y="179.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="835.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (19 samples, 0.24%)</title><rect x="833.6" y="323.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.6" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.09%)</title><rect x="835.0" y="307.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="838.0" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.09%)</title><rect x="835.0" y="291.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="838.0" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.08%)</title><rect x="835.2" y="275.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="838.2" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (5 samples, 0.06%)</title><rect x="835.3" y="259.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="838.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.03%)</title><rect x="836.2" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (7 samples, 0.09%)</title><rect x="836.5" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.5" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.06%)</title><rect x="836.8" y="307.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="839.8" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.06%)</title><rect x="836.8" y="291.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="839.8" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.05%)</title><rect x="837.0" y="275.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="840.0" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (4 samples, 0.05%)</title><rect x="837.0" y="259.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="840.0" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.03%)</title><rect x="837.7" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.iterator (172 samples, 2.21%)</title><rect x="838.0" y="643.0" width="26.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.0" y="654.0">r..</text>
</g>
<g>
<title>java/util/Collection.stream (166 samples, 2.13%)</title><rect x="838.0" y="627.0" width="25.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.0" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (164 samples, 2.11%)</title><rect x="838.0" y="611.0" width="24.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.0" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (164 samples, 2.11%)</title><rect x="838.0" y="595.0" width="24.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.0" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (164 samples, 2.11%)</title><rect x="838.0" y="579.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.0" y="590.0">j..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.03%)</title><rect x="850.6" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="850.9" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="851.7" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (2 samples, 0.03%)</title><rect x="852.4" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (63 samples, 0.81%)</title><rect x="852.7" y="563.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (63 samples, 0.81%)</title><rect x="852.7" y="547.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="852.7" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="852.7" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="852.7" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.7" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="852.7" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (61 samples, 0.78%)</title><rect x="853.0" y="531.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (24 samples, 0.31%)</title><rect x="858.6" y="515.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (24 samples, 0.31%)</title><rect x="858.6" y="499.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.23%)</title><rect x="859.5" y="483.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.21%)</title><rect x="859.8" y="467.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="862.8" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.08%)</title><rect x="861.4" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.06%)</title><rect x="861.4" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="864.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.getKey (2 samples, 0.03%)</title><rect x="862.6" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.03%)</title><rect x="862.9" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (3 samples, 0.04%)</title><rect x="863.2" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (2 samples, 0.03%)</title><rect x="863.8" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (2 samples, 0.03%)</title><rect x="863.8" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (2 samples, 0.03%)</title><rect x="863.8" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="866.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.03%)</title><rect x="863.8" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.03%)</title><rect x="863.8" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.8" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,130 samples, 27.35%)</title><rect x="864.1" y="771.0" width="322.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.1" y="782.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (4 samples, 0.05%)</title><rect x="866.2" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.2" y="766.0"></text>
</g>
<g>
<title>Interpreter (18 samples, 0.23%)</title><rect x="866.8" y="755.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="869.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (83 samples, 1.07%)</title><rect x="869.7" y="755.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="872.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (75 samples, 0.96%)</title><rect x="870.9" y="739.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.9" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 0.05%)</title><rect x="871.5" y="723.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="874.5" y="734.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="871.7" y="707.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="874.7" y="718.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="871.7" y="691.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="874.7" y="702.0"></text>
</g>
<g>
<title>epoll_wait (67 samples, 0.86%)</title><rect x="872.1" y="723.0" width="10.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="875.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (63 samples, 0.81%)</title><rect x="872.7" y="707.0" width="9.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="875.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 0.81%)</title><rect x="872.7" y="691.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="875.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (56 samples, 0.72%)</title><rect x="873.8" y="675.0" width="8.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="876.8" y="686.0"></text>
</g>
<g>
<title>do_epoll_wait (54 samples, 0.69%)</title><rect x="874.1" y="659.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="877.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.12%)</title><rect x="874.2" y="643.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="877.2" y="654.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="874.5" y="627.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="877.5" y="638.0"></text>
</g>
<g>
<title>ep_poll (44 samples, 0.56%)</title><rect x="875.6" y="643.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="878.6" y="654.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (26 samples, 0.33%)</title><rect x="877.1" y="627.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="880.1" y="638.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.23%)</title><rect x="877.9" y="611.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="880.9" y="622.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (12 samples, 0.15%)</title><rect x="878.8" y="595.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="881.8" y="606.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.13%)</title><rect x="879.1" y="579.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="882.1" y="590.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.09%)</title><rect x="879.5" y="563.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="882.5" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (5 samples, 0.06%)</title><rect x="879.8" y="547.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="882.8" y="558.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="880.6" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="883.6" y="622.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.10%)</title><rect x="881.1" y="627.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.1" y="638.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.10%)</title><rect x="881.1" y="611.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="884.1" y="622.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="881.8" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="884.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,004 samples, 25.73%)</title><rect x="882.3" y="755.0" width="303.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.3" y="766.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,989 samples, 25.54%)</title><rect x="884.5" y="739.0" width="301.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.5" y="750.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>I2C/C2I adapters (7 samples, 0.09%)</title><rect x="898.2" y="723.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.2" y="734.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (2 samples, 0.03%)</title><rect x="899.2" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="902.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,605 samples, 20.61%)</title><rect x="899.5" y="723.0" width="243.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.5" y="734.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,484 samples, 19.05%)</title><rect x="900.8" y="707.0" width="224.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.8" y="718.0">one/nio/http/HttpSession.handl..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,484 samples, 19.05%)</title><rect x="900.8" y="691.0" width="224.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.8" y="702.0">one/nio/http/HttpServer.handle..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1,482 samples, 19.03%)</title><rect x="900.8" y="675.0" width="224.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.8" y="686.0">RequestHandler0_get.handleRequ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (17 samples, 0.22%)</title><rect x="900.8" y="659.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.18%)</title><rect x="901.2" y="643.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="902.9" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.get (1,465 samples, 18.81%)</title><rect x="903.3" y="659.0" width="222.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.3" y="670.0">ru/mail/polis/service/s3ponia..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="903.3" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="903.3" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$84/1141333960.get$Lambda (2 samples, 0.03%)</title><rect x="903.3" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.byteBufferFromString (2 samples, 0.03%)</title><rect x="903.6" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="903.6" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="903.6" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="903.6" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.chooseNode (1,449 samples, 18.61%)</title><rect x="903.9" y="643.0" width="219.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.9" y="654.0">ru/mail/polis/service/s3ponia..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (136 samples, 1.75%)</title><rect x="904.2" y="627.0" width="20.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (136 samples, 1.75%)</title><rect x="904.2" y="611.0" width="20.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (136 samples, 1.75%)</title><rect x="904.2" y="595.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (136 samples, 1.75%)</title><rect x="904.2" y="579.0" width="20.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (136 samples, 1.75%)</title><rect x="904.2" y="563.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (136 samples, 1.75%)</title><rect x="904.2" y="547.0" width="20.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (124 samples, 1.59%)</title><rect x="906.1" y="531.0" width="18.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.1" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (24 samples, 0.31%)</title><rect x="906.7" y="515.0" width="3.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="909.7" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.06%)</title><rect x="907.3" y="499.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="910.3" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="908.0" y="499.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="911.0" y="510.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (5 samples, 0.06%)</title><rect x="908.6" y="499.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="911.6" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="909.5" y="499.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="912.5" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="909.8" y="499.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="912.8" y="510.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (94 samples, 1.21%)</title><rect x="910.6" y="515.0" width="14.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="913.6" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 1.10%)</title><rect x="911.8" y="499.0" width="13.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="914.8" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (86 samples, 1.10%)</title><rect x="911.8" y="483.0" width="13.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="914.8" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (83 samples, 1.07%)</title><rect x="912.3" y="467.0" width="12.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="915.3" y="478.0"></text>
</g>
<g>
<title>do_futex (82 samples, 1.05%)</title><rect x="912.4" y="451.0" width="12.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="915.4" y="462.0"></text>
</g>
<g>
<title>futex_wake (81 samples, 1.04%)</title><rect x="912.6" y="435.0" width="12.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="915.6" y="446.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="914.5" y="419.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="917.5" y="430.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.08%)</title><rect x="915.0" y="419.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="918.0" y="430.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.04%)</title><rect x="915.9" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="918.9" y="430.0"></text>
</g>
<g>
<title>wake_up_q (56 samples, 0.72%)</title><rect x="916.4" y="419.0" width="8.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.4" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (56 samples, 0.72%)</title><rect x="916.4" y="403.0" width="8.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="919.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (54 samples, 0.69%)</title><rect x="916.7" y="387.0" width="8.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="919.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.proxy (1,310 samples, 16.82%)</title><rect x="925.0" y="627.0" width="198.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="928.0" y="638.0">ru/mail/polis/service/s3po..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="926.5" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="929.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="926.5" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="926.5" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="929.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="926.5" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (805 samples, 10.34%)</title><rect x="926.8" y="611.0" width="122.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.8" y="622.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (805 samples, 10.34%)</title><rect x="926.8" y="595.0" width="122.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="929.8" y="606.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (165 samples, 2.12%)</title><rect x="927.1" y="579.0" width="25.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.1" y="590.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (13 samples, 0.17%)</title><rect x="934.4" y="563.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="937.4" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (12 samples, 0.15%)</title><rect x="934.5" y="547.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="937.5" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (12 samples, 0.15%)</title><rect x="934.5" y="531.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="937.5" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (12 samples, 0.15%)</title><rect x="934.5" y="515.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="937.5" y="526.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (5 samples, 0.06%)</title><rect x="934.8" y="499.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="937.8" y="510.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.03%)</title><rect x="935.8" y="499.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="938.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (104 samples, 1.34%)</title><rect x="936.4" y="563.0" width="15.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.4" y="574.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (31 samples, 0.40%)</title><rect x="937.6" y="547.0" width="4.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="940.6" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="938.5" y="531.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="941.5" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (22 samples, 0.28%)</title><rect x="938.8" y="531.0" width="3.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="941.8" y="542.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.05%)</title><rect x="941.1" y="515.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="944.1" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="941.8" y="515.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="944.8" y="526.0"></text>
</g>
<g>
<title>__libc_recv (57 samples, 0.73%)</title><rect x="942.3" y="547.0" width="8.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="945.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.62%)</title><rect x="943.6" y="531.0" width="7.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="946.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.62%)</title><rect x="943.6" y="515.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="946.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (47 samples, 0.60%)</title><rect x="943.8" y="499.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.8" y="510.0"></text>
</g>
<g>
<title>__sys_recvfrom (47 samples, 0.60%)</title><rect x="943.8" y="483.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="946.8" y="494.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (39 samples, 0.50%)</title><rect x="944.1" y="467.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.1" y="478.0"></text>
</g>
<g>
<title>tcp_recvmsg (39 samples, 0.50%)</title><rect x="944.1" y="451.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.1" y="462.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (15 samples, 0.19%)</title><rect x="944.7" y="435.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="947.7" y="446.0"></text>
</g>
<g>
<title>__ip_queue_xmit (15 samples, 0.19%)</title><rect x="944.7" y="419.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="947.7" y="430.0"></text>
</g>
<g>
<title>ip_output (15 samples, 0.19%)</title><rect x="944.7" y="403.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="947.7" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (15 samples, 0.19%)</title><rect x="944.7" y="387.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="947.7" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (14 samples, 0.18%)</title><rect x="944.8" y="371.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="947.8" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (14 samples, 0.18%)</title><rect x="944.8" y="355.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="947.8" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (14 samples, 0.18%)</title><rect x="944.8" y="339.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="947.8" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (14 samples, 0.18%)</title><rect x="944.8" y="323.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="947.8" y="334.0"></text>
</g>
<g>
<title>net_rx_action (14 samples, 0.18%)</title><rect x="944.8" y="307.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="947.8" y="318.0"></text>
</g>
<g>
<title>process_backlog (14 samples, 0.18%)</title><rect x="944.8" y="291.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="947.8" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (13 samples, 0.17%)</title><rect x="945.0" y="275.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="948.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (13 samples, 0.17%)</title><rect x="945.0" y="259.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="948.0" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (13 samples, 0.17%)</title><rect x="945.0" y="243.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="948.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 0.15%)</title><rect x="945.2" y="227.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="948.2" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 0.15%)</title><rect x="945.2" y="211.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="948.2" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 0.15%)</title><rect x="945.2" y="195.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="948.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.09%)</title><rect x="945.8" y="179.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="948.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (7 samples, 0.09%)</title><rect x="945.8" y="163.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="948.8" y="174.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.08%)</title><rect x="945.9" y="147.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="948.9" y="158.0"></text>
</g>
<g>
<title>sk_wait_data (20 samples, 0.26%)</title><rect x="947.0" y="435.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="950.0" y="446.0"></text>
</g>
<g>
<title>add_wait_queue (3 samples, 0.04%)</title><rect x="947.3" y="419.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="950.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="947.4" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.4" y="414.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="947.7" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="950.7" y="430.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="947.7" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="950.7" y="414.0"></text>
</g>
<g>
<title>wait_woken (13 samples, 0.17%)</title><rect x="948.0" y="419.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="951.0" y="430.0"></text>
</g>
<g>
<title>schedule_timeout (10 samples, 0.13%)</title><rect x="948.5" y="403.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="951.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.08%)</title><rect x="948.6" y="387.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="951.6" y="398.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="949.5" y="387.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="952.5" y="398.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="949.5" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="952.5" y="382.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.04%)</title><rect x="950.0" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="953.0" y="478.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.04%)</title><rect x="950.0" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="953.0" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.04%)</title><rect x="950.0" y="435.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="953.0" y="446.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.04%)</title><rect x="950.5" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.5" y="478.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="950.5" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.5" y="462.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.06%)</title><rect x="950.9" y="547.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="953.9" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="951.7" y="547.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="954.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (128 samples, 1.64%)</title><rect x="952.1" y="579.0" width="19.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="953.8" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="953.8" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="953.8" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="956.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="953.8" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="953.8" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="956.8" y="510.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (3 samples, 0.04%)</title><rect x="953.8" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.32%)</title><rect x="954.4" y="563.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.14%)</title><rect x="956.5" y="547.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.14%)</title><rect x="956.5" y="531.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="959.5" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="958.2" y="563.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="961.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (43 samples, 0.55%)</title><rect x="958.9" y="563.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.53%)</title><rect x="959.2" y="547.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (40 samples, 0.51%)</title><rect x="959.4" y="531.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.23%)</title><rect x="965.5" y="563.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.03%)</title><rect x="968.2" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (20 samples, 0.26%)</title><rect x="968.5" y="563.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.17%)</title><rect x="969.5" y="547.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.17%)</title><rect x="969.5" y="531.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.5" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="971.2" y="515.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="974.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (29 samples, 0.37%)</title><rect x="971.5" y="579.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="974.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="972.0" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (23 samples, 0.30%)</title><rect x="972.3" y="563.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.04%)</title><rect x="973.0" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.0" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (15 samples, 0.19%)</title><rect x="973.5" y="547.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.5" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (15 samples, 0.19%)</title><rect x="973.5" y="531.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="976.5" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (14 samples, 0.18%)</title><rect x="973.6" y="515.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="976.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="975.2" y="499.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="978.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (11 samples, 0.14%)</title><rect x="975.9" y="579.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="976.4" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.10%)</title><rect x="976.4" y="547.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.4" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="977.0" y="531.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="980.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (51 samples, 0.65%)</title><rect x="977.6" y="579.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="980.6" y="590.0"></text>
</g>
<g>
<title>setsockopt (48 samples, 0.62%)</title><rect x="978.0" y="563.0" width="7.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="981.0" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.58%)</title><rect x="978.5" y="547.0" width="6.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="981.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.58%)</title><rect x="978.5" y="531.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="981.5" y="542.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (38 samples, 0.49%)</title><rect x="979.5" y="515.0" width="5.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="982.5" y="526.0"></text>
</g>
<g>
<title>__sys_setsockopt (38 samples, 0.49%)</title><rect x="979.5" y="499.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="982.5" y="510.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.06%)</title><rect x="980.0" y="483.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="983.0" y="494.0"></text>
</g>
<g>
<title>security_socket_setsockopt (7 samples, 0.09%)</title><rect x="980.8" y="483.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="983.8" y="494.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (7 samples, 0.09%)</title><rect x="980.8" y="467.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="983.8" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.05%)</title><rect x="981.2" y="451.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="984.2" y="462.0"></text>
</g>
<g>
<title>sock_setsockopt (18 samples, 0.23%)</title><rect x="981.8" y="483.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="984.8" y="494.0"></text>
</g>
<g>
<title>__get_user_4 (5 samples, 0.06%)</title><rect x="982.1" y="467.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="985.1" y="478.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.06%)</title><rect x="982.9" y="467.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="985.9" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="983.2" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="986.2" y="462.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="983.6" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="986.6" y="478.0"></text>
</g>
<g>
<title>sock_set_timeout (4 samples, 0.05%)</title><rect x="983.9" y="467.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="986.9" y="478.0"></text>
</g>
<g>
<title>_copy_from_user (4 samples, 0.05%)</title><rect x="983.9" y="451.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="986.9" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.05%)</title><rect x="983.9" y="435.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="986.9" y="446.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.06%)</title><rect x="984.5" y="483.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="987.5" y="494.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="984.5" y="467.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="987.5" y="478.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="984.7" y="451.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="987.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (385 samples, 4.94%)</title><rect x="985.3" y="579.0" width="58.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.3" y="590.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (7 samples, 0.09%)</title><rect x="986.2" y="563.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="989.2" y="574.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (3 samples, 0.04%)</title><rect x="986.7" y="547.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="989.7" y="558.0"></text>
</g>
<g>
<title>__libc_send (371 samples, 4.76%)</title><rect x="987.3" y="563.0" width="56.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="990.3" y="574.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (368 samples, 4.73%)</title><rect x="987.7" y="547.0" width="55.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="990.7" y="558.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (368 samples, 4.73%)</title><rect x="987.7" y="531.0" width="55.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="990.7" y="542.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (363 samples, 4.66%)</title><rect x="988.5" y="515.0" width="55.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="991.5" y="526.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (363 samples, 4.66%)</title><rect x="988.5" y="499.0" width="55.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="991.5" y="510.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (359 samples, 4.61%)</title><rect x="988.9" y="483.0" width="54.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.9" y="494.0">sock_..</text>
</g>
<g>
<title>tcp_sendmsg (357 samples, 4.58%)</title><rect x="989.2" y="467.0" width="54.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.2" y="478.0">tcp_s..</text>
</g>
<g>
<title>release_sock (7 samples, 0.09%)</title><rect x="989.5" y="451.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="992.5" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="990.2" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="993.2" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (348 samples, 4.47%)</title><rect x="990.6" y="451.0" width="52.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.6" y="462.0">tcp_s..</text>
</g>
<g>
<title>__tcp_push_pending_frames (305 samples, 3.92%)</title><rect x="991.5" y="435.0" width="46.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="994.5" y="446.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (303 samples, 3.89%)</title><rect x="991.8" y="419.0" width="45.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="994.8" y="430.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (293 samples, 3.76%)</title><rect x="992.4" y="403.0" width="44.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="995.4" y="414.0">__tc..</text>
</g>
<g>
<title>__ip_queue_xmit (266 samples, 3.42%)</title><rect x="994.1" y="387.0" width="40.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="997.1" y="398.0">__i..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.05%)</title><rect x="994.1" y="371.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="997.1" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.05%)</title><rect x="994.1" y="355.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="997.1" y="366.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.05%)</title><rect x="994.7" y="371.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="997.7" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.05%)</title><rect x="994.7" y="355.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="997.7" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.04%)</title><rect x="994.8" y="339.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="997.8" y="350.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="995.0" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="998.0" y="334.0"></text>
</g>
<g>
<title>ip_output (258 samples, 3.31%)</title><rect x="995.3" y="371.0" width="39.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="998.3" y="382.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.04%)</title><rect x="995.5" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="998.5" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="995.6" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="998.6" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (247 samples, 3.17%)</title><rect x="995.9" y="355.0" width="37.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.9" y="366.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.22%)</title><rect x="996.4" y="339.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="999.4" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.15%)</title><rect x="996.7" y="323.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="999.7" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.12%)</title><rect x="997.1" y="307.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1000.1" y="318.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.04%)</title><rect x="997.6" y="291.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1000.6" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="997.7" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1000.7" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.04%)</title><rect x="998.5" y="323.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1001.5" y="334.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.04%)</title><rect x="998.5" y="307.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1001.5" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (227 samples, 2.91%)</title><rect x="998.9" y="339.0" width="34.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1001.9" y="350.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (226 samples, 2.90%)</title><rect x="999.1" y="323.0" width="34.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1002.1" y="334.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (223 samples, 2.86%)</title><rect x="999.5" y="307.0" width="33.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1002.5" y="318.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (223 samples, 2.86%)</title><rect x="999.5" y="291.0" width="33.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1002.5" y="302.0">__..</text>
</g>
<g>
<title>net_rx_action (213 samples, 2.73%)</title><rect x="1001.1" y="275.0" width="32.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1004.1" y="286.0">ne..</text>
</g>
<g>
<title>process_backlog (210 samples, 2.70%)</title><rect x="1001.5" y="259.0" width="31.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1004.5" y="270.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (206 samples, 2.65%)</title><rect x="1002.1" y="243.0" width="31.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1005.1" y="254.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.06%)</title><rect x="1002.1" y="227.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv (201 samples, 2.58%)</title><rect x="1002.9" y="227.0" width="30.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1005.9" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (199 samples, 2.56%)</title><rect x="1002.9" y="211.0" width="30.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1005.9" y="222.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (199 samples, 2.56%)</title><rect x="1002.9" y="195.0" width="30.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1005.9" y="206.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (198 samples, 2.54%)</title><rect x="1003.0" y="179.0" width="30.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1006.0" y="190.0">ip..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="1003.5" y="163.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1006.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (193 samples, 2.48%)</title><rect x="1003.8" y="163.0" width="29.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1006.8" y="174.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.10%)</title><rect x="1004.7" y="147.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1007.7" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.12%)</title><rect x="1005.9" y="147.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1008.9" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (8 samples, 0.10%)</title><rect x="1006.1" y="131.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1009.1" y="142.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.09%)</title><rect x="1006.2" y="115.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1009.2" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.03%)</title><rect x="1007.0" y="99.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1010.0" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (169 samples, 2.17%)</title><rect x="1007.3" y="147.0" width="25.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1010.3" y="158.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (168 samples, 2.16%)</title><rect x="1007.4" y="131.0" width="25.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1010.4" y="142.0">t..</text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="1007.9" y="115.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1010.9" y="126.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="1008.0" y="99.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1011.0" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (110 samples, 1.41%)</title><rect x="1008.5" y="115.0" width="16.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1011.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (107 samples, 1.37%)</title><rect x="1008.9" y="99.0" width="16.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1011.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (107 samples, 1.37%)</title><rect x="1008.9" y="83.0" width="16.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1011.9" y="94.0"></text>
</g>
<g>
<title>tcp_ack (44 samples, 0.56%)</title><rect x="1025.2" y="115.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1028.2" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (18 samples, 0.23%)</title><rect x="1026.7" y="99.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1029.7" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="1026.7" y="83.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.18%)</title><rect x="1027.3" y="83.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1030.3" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.05%)</title><rect x="1029.5" y="99.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.5" y="110.0"></text>
</g>
<g>
<title>rb_first (4 samples, 0.05%)</title><rect x="1030.2" y="99.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1033.2" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.05%)</title><rect x="1030.8" y="99.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1033.8" y="110.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="1031.4" y="99.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1034.4" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="1032.0" y="115.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1035.0" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="1032.4" y="115.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1035.4" y="126.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="1032.4" y="99.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1035.4" y="110.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="1032.6" y="83.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1035.6" y="94.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="1033.0" y="211.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1036.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.09%)</title><rect x="1033.3" y="355.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1036.3" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.09%)</title><rect x="1033.3" y="339.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1036.3" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (5 samples, 0.06%)</title><rect x="1033.6" y="323.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1036.6" y="334.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.05%)</title><rect x="1034.4" y="387.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1037.4" y="398.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.04%)</title><rect x="1035.2" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1038.2" y="398.0"></text>
</g>
<g>
<title>ip_queue_xmit?[ipv6] (3 samples, 0.04%)</title><rect x="1035.6" y="387.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.6" y="398.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="1036.4" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1039.4" y="398.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1036.8" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1039.8" y="414.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.05%)</title><rect x="1037.1" y="403.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1040.1" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="1037.4" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.4" y="398.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="1037.4" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1040.4" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="1037.4" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1040.4" y="366.0"></text>
</g>
<g>
<title>sk_page_frag_refill (9 samples, 0.12%)</title><rect x="1037.7" y="435.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1040.7" y="446.0"></text>
</g>
<g>
<title>skb_page_frag_refill (9 samples, 0.12%)</title><rect x="1037.7" y="419.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1040.7" y="430.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 0.19%)</title><rect x="1039.1" y="435.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1042.1" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (14 samples, 0.18%)</title><rect x="1039.2" y="419.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1042.2" y="430.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.05%)</title><rect x="1039.5" y="403.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1042.5" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.05%)</title><rect x="1039.5" y="387.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1042.5" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.10%)</title><rect x="1040.2" y="403.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1043.2" y="414.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="1041.4" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1044.4" y="446.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="1041.7" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1044.7" y="446.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="1042.0" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1045.0" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.09%)</title><rect x="1042.3" y="435.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1045.3" y="446.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.06%)</title><rect x="1042.6" y="419.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1045.6" y="430.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (16 samples, 0.21%)</title><rect x="1043.6" y="579.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.wait (2 samples, 0.03%)</title><rect x="1045.8" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.8" y="574.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (18 samples, 0.23%)</title><rect x="1046.1" y="579.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.04%)</title><rect x="1048.3" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (493 samples, 6.33%)</title><rect x="1048.8" y="611.0" width="74.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1051.8" y="622.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.09%)</title><rect x="1051.2" y="595.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="1051.2" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.09%)</title><rect x="1051.2" y="563.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.2" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="1051.8" y="547.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1054.8" y="558.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="1051.8" y="531.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1054.8" y="542.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="1051.8" y="515.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1054.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (455 samples, 5.84%)</title><rect x="1052.3" y="595.0" width="68.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.3" y="606.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (16 samples, 0.21%)</title><rect x="1052.3" y="579.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.13%)</title><rect x="1053.2" y="563.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (10 samples, 0.13%)</title><rect x="1053.2" y="547.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.13%)</title><rect x="1053.2" y="531.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (439 samples, 5.64%)</title><rect x="1054.7" y="579.0" width="66.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.7" y="590.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (439 samples, 5.64%)</title><rect x="1054.7" y="563.0" width="66.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.7" y="574.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (436 samples, 5.60%)</title><rect x="1055.2" y="547.0" width="66.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.2" y="558.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (433 samples, 5.56%)</title><rect x="1055.6" y="531.0" width="65.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1058.6" y="542.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.06%)</title><rect x="1055.9" y="515.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1058.9" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="1056.2" y="499.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1059.2" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (2 samples, 0.03%)</title><rect x="1056.4" y="483.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1059.4" y="494.0"></text>
</g>
<g>
<title>__libc_send (423 samples, 5.43%)</title><rect x="1056.7" y="515.0" width="64.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1059.7" y="526.0">__libc_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (420 samples, 5.39%)</title><rect x="1057.1" y="499.0" width="63.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1060.1" y="510.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (420 samples, 5.39%)</title><rect x="1057.1" y="483.0" width="63.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1060.1" y="494.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (420 samples, 5.39%)</title><rect x="1057.1" y="467.0" width="63.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1060.1" y="478.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (419 samples, 5.38%)</title><rect x="1057.3" y="451.0" width="63.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1060.3" y="462.0">__sys_s..</text>
</g>
<g>
<title>sock_sendmsg (404 samples, 5.19%)</title><rect x="1058.0" y="435.0" width="61.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1061.0" y="446.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (4 samples, 0.05%)</title><rect x="1058.2" y="419.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1061.2" y="430.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.03%)</title><rect x="1058.5" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1061.5" y="414.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.04%)</title><rect x="1058.8" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1061.8" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.04%)</title><rect x="1058.8" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1061.8" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (396 samples, 5.08%)</title><rect x="1059.2" y="419.0" width="60.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1062.2" y="430.0">tcp_se..</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="1059.5" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1062.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="1059.5" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1062.5" y="398.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1060.0" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1063.0" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1060.0" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1063.0" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (389 samples, 4.99%)</title><rect x="1060.3" y="403.0" width="58.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1063.3" y="414.0">tcp_se..</text>
</g>
<g>
<title>__tcp_push_pending_frames (334 samples, 4.29%)</title><rect x="1060.9" y="387.0" width="50.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.9" y="398.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (332 samples, 4.26%)</title><rect x="1061.2" y="371.0" width="50.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1064.2" y="382.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (308 samples, 3.95%)</title><rect x="1062.0" y="355.0" width="46.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1065.0" y="366.0">__tc..</text>
</g>
<g>
<title>__ip_queue_xmit (294 samples, 3.78%)</title><rect x="1062.6" y="339.0" width="44.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1065.6" y="350.0">__ip..</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.06%)</title><rect x="1062.9" y="323.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1065.9" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.05%)</title><rect x="1063.0" y="307.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1066.0" y="318.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.09%)</title><rect x="1063.6" y="323.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1066.6" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (7 samples, 0.09%)</title><rect x="1063.6" y="307.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1066.6" y="318.0"></text>
</g>
<g>
<title>ip_send_check (6 samples, 0.08%)</title><rect x="1063.6" y="291.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1066.6" y="302.0"></text>
</g>
<g>
<title>ip_output (280 samples, 3.60%)</title><rect x="1064.7" y="323.0" width="42.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1067.7" y="334.0">ip_o..</text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.05%)</title><rect x="1065.2" y="307.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1068.2" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (264 samples, 3.39%)</title><rect x="1065.8" y="307.0" width="40.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1068.8" y="318.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.14%)</title><rect x="1066.4" y="291.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.4" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.08%)</title><rect x="1066.8" y="275.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1069.8" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.06%)</title><rect x="1067.0" y="259.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1070.0" y="270.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.04%)</title><rect x="1067.3" y="243.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1070.3" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="1067.3" y="227.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1070.3" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="1067.3" y="211.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1070.3" y="222.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (249 samples, 3.20%)</title><rect x="1068.0" y="291.0" width="37.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1071.0" y="302.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (249 samples, 3.20%)</title><rect x="1068.0" y="275.0" width="37.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1071.0" y="286.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (245 samples, 3.15%)</title><rect x="1068.6" y="259.0" width="37.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.6" y="270.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (245 samples, 3.15%)</title><rect x="1068.6" y="243.0" width="37.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1071.6" y="254.0">__s..</text>
</g>
<g>
<title>net_rx_action (242 samples, 3.11%)</title><rect x="1069.1" y="227.0" width="36.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1072.1" y="238.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (3 samples, 0.04%)</title><rect x="1069.5" y="211.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.5" y="222.0"></text>
</g>
<g>
<title>process_backlog (234 samples, 3.00%)</title><rect x="1070.3" y="211.0" width="35.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1073.3" y="222.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (232 samples, 2.98%)</title><rect x="1070.6" y="195.0" width="35.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1073.6" y="206.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.06%)</title><rect x="1070.6" y="179.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1073.6" y="190.0"></text>
</g>
<g>
<title>ip_rcv (227 samples, 2.91%)</title><rect x="1071.4" y="179.0" width="34.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1074.4" y="190.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (225 samples, 2.89%)</title><rect x="1071.4" y="163.0" width="34.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.4" y="174.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (221 samples, 2.84%)</title><rect x="1072.0" y="147.0" width="33.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1075.0" y="158.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (221 samples, 2.84%)</title><rect x="1072.0" y="131.0" width="33.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1075.0" y="142.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (219 samples, 2.81%)</title><rect x="1072.3" y="115.0" width="33.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1075.3" y="126.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (11 samples, 0.14%)</title><rect x="1074.5" y="99.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1077.5" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.12%)</title><rect x="1076.4" y="99.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1079.4" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (9 samples, 0.12%)</title><rect x="1076.4" y="83.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1079.4" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (9 samples, 0.12%)</title><rect x="1076.4" y="67.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1079.4" y="78.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (4 samples, 0.05%)</title><rect x="1077.1" y="51.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1080.1" y="62.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (2 samples, 0.03%)</title><rect x="1077.4" y="35.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1080.4" y="46.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (180 samples, 2.31%)</title><rect x="1077.7" y="99.0" width="27.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1080.7" y="110.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (179 samples, 2.30%)</title><rect x="1077.9" y="83.0" width="27.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1080.9" y="94.0">t..</text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.10%)</title><rect x="1078.3" y="67.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1081.3" y="78.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.09%)</title><rect x="1078.5" y="51.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1081.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.09%)</title><rect x="1078.5" y="35.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1081.5" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (95 samples, 1.22%)</title><rect x="1079.5" y="67.0" width="14.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1082.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (93 samples, 1.19%)</title><rect x="1079.7" y="51.0" width="14.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1082.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (92 samples, 1.18%)</title><rect x="1079.8" y="35.0" width="14.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1082.8" y="46.0"></text>
</g>
<g>
<title>tcp_ack (58 samples, 0.74%)</title><rect x="1093.9" y="67.0" width="8.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1096.9" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (31 samples, 0.40%)</title><rect x="1096.2" y="51.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1099.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.12%)</title><rect x="1096.2" y="35.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1099.2" y="46.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.06%)</title><rect x="1097.6" y="35.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1100.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.22%)</title><rect x="1098.3" y="35.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1101.3" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="1100.9" y="51.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1103.9" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.05%)</title><rect x="1101.4" y="51.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1104.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="1101.7" y="35.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1104.7" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="1102.1" y="51.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1105.1" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="1102.7" y="67.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1105.7" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="1103.0" y="67.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1106.0" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.08%)</title><rect x="1103.3" y="67.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1106.3" y="78.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.06%)</title><rect x="1103.5" y="51.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1106.5" y="62.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.06%)</title><rect x="1103.5" y="35.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1106.5" y="46.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.06%)</title><rect x="1104.2" y="67.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1107.2" y="78.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="1105.0" y="99.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1108.0" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="1105.5" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1108.5" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.12%)</title><rect x="1105.8" y="307.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1108.8" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.09%)</title><rect x="1105.9" y="291.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1108.9" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (7 samples, 0.09%)</title><rect x="1105.9" y="275.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1108.9" y="286.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.04%)</title><rect x="1106.1" y="259.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1109.1" y="270.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (3 samples, 0.04%)</title><rect x="1106.5" y="259.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1109.5" y="270.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="1107.1" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1110.1" y="350.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="1107.4" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1110.4" y="350.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.05%)</title><rect x="1107.9" y="339.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1110.9" y="350.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1108.6" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.6" y="366.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="1108.6" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1111.6" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (13 samples, 0.17%)</title><rect x="1108.9" y="355.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1111.9" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.13%)</title><rect x="1109.1" y="339.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1112.1" y="350.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.13%)</title><rect x="1109.1" y="323.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1112.1" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.10%)</title><rect x="1109.2" y="307.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1112.2" y="318.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="1110.9" y="355.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1113.9" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.10%)</title><rect x="1111.5" y="387.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1114.5" y="398.0"></text>
</g>
<g>
<title>copyin (7 samples, 0.09%)</title><rect x="1111.5" y="371.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1114.5" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.09%)</title><rect x="1111.5" y="355.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.5" y="366.0"></text>
</g>
<g>
<title>sk_page_frag_refill (6 samples, 0.08%)</title><rect x="1112.7" y="387.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1115.7" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (6 samples, 0.08%)</title><rect x="1112.7" y="371.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1115.7" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.26%)</title><rect x="1113.6" y="387.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1116.6" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (16 samples, 0.21%)</title><rect x="1114.2" y="371.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1117.2" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.06%)</title><rect x="1115.0" y="355.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.0" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.06%)</title><rect x="1115.0" y="339.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1118.0" y="350.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="1115.3" y="323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1118.3" y="334.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.03%)</title><rect x="1115.8" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.8" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.05%)</title><rect x="1116.1" y="355.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1119.1" y="366.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.08%)</title><rect x="1116.7" y="387.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1119.7" y="398.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="1117.3" y="371.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1120.3" y="382.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.10%)</title><rect x="1117.7" y="387.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1120.7" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.10%)</title><rect x="1117.7" y="371.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1120.7" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="1118.3" y="355.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1121.3" y="366.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (2 samples, 0.03%)</title><rect x="1118.9" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1121.9" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.13%)</title><rect x="1119.2" y="435.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1122.2" y="446.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.13%)</title><rect x="1119.2" y="419.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1122.2" y="430.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="1119.8" y="403.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1122.8" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1120.8" y="515.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1123.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.19%)</title><rect x="1121.2" y="595.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.14%)</title><rect x="1121.8" y="579.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.14%)</title><rect x="1121.8" y="563.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.urlFromKey (12 samples, 0.15%)</title><rect x="1123.5" y="643.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (11 samples, 0.14%)</title><rect x="1123.6" y="627.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (11 samples, 0.14%)</title><rect x="1123.6" y="611.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$23/1366025231.apply (9 samples, 0.12%)</title><rect x="1123.9" y="595.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.9" y="606.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (8 samples, 0.10%)</title><rect x="1123.9" y="579.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.proxy (2 samples, 0.03%)</title><rect x="1124.8" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.03%)</title><rect x="1125.3" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="1125.3" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="1125.3" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (52 samples, 0.67%)</title><rect x="1125.6" y="707.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (32 samples, 0.41%)</title><rect x="1125.8" y="691.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.18%)</title><rect x="1128.3" y="675.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.18%)</title><rect x="1128.3" y="659.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.08%)</title><rect x="1129.5" y="643.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (4 samples, 0.05%)</title><rect x="1129.8" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.17%)</title><rect x="1130.6" y="691.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.17%)</title><rect x="1130.6" y="675.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.08%)</title><rect x="1132.6" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.03%)</title><rect x="1133.5" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="1133.5" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="1133.5" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (30 samples, 0.39%)</title><rect x="1133.8" y="707.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.8" y="718.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (13 samples, 0.17%)</title><rect x="1135.3" y="691.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1138.3" y="702.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.09%)</title><rect x="1137.3" y="691.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1140.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.10%)</title><rect x="1138.3" y="707.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="1139.2" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="1139.2" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.27%)</title><rect x="1139.5" y="707.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.24%)</title><rect x="1139.8" y="691.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.8" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1142.3" y="675.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1145.3" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1142.3" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.3" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1142.3" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.3" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1142.3" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.3" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (285 samples, 3.66%)</title><rect x="1142.7" y="723.0" width="43.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1145.7" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (277 samples, 3.56%)</title><rect x="1143.6" y="707.0" width="42.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.6" y="718.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (33 samples, 0.42%)</title><rect x="1145.2" y="691.0" width="5.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1148.2" y="702.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (3 samples, 0.04%)</title><rect x="1145.5" y="675.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1148.5" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="1145.9" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.9" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (2 samples, 0.03%)</title><rect x="1146.4" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.4" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (20 samples, 0.26%)</title><rect x="1146.7" y="675.0" width="3.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1149.7" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.08%)</title><rect x="1146.7" y="659.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1149.7" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (3 samples, 0.04%)</title><rect x="1147.6" y="659.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.6" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (11 samples, 0.14%)</title><rect x="1148.0" y="659.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1151.0" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.06%)</title><rect x="1148.9" y="643.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.9" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.04%)</title><rect x="1149.7" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.7" y="686.0"></text>
</g>
<g>
<title>__libc_recv (221 samples, 2.84%)</title><rect x="1150.2" y="691.0" width="33.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1153.2" y="702.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (211 samples, 2.71%)</title><rect x="1151.7" y="675.0" width="31.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1154.7" y="686.0">en..</text>
</g>
<g>
<title>do_syscall_64 (211 samples, 2.71%)</title><rect x="1151.7" y="659.0" width="31.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1154.7" y="670.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (201 samples, 2.58%)</title><rect x="1153.2" y="643.0" width="30.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1156.2" y="654.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (200 samples, 2.57%)</title><rect x="1153.3" y="627.0" width="30.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.3" y="638.0">__..</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="1154.1" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1157.1" y="622.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="1154.4" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.4" y="622.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (158 samples, 2.03%)</title><rect x="1154.7" y="611.0" width="23.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.7" y="622.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (154 samples, 1.98%)</title><rect x="1155.3" y="595.0" width="23.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1158.3" y="606.0">t..</text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.15%)</title><rect x="1161.1" y="579.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1164.1" y="590.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.14%)</title><rect x="1161.1" y="563.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1164.1" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (11 samples, 0.14%)</title><rect x="1161.1" y="547.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1164.1" y="558.0"></text>
</g>
<g>
<title>dst_release (11 samples, 0.14%)</title><rect x="1161.1" y="531.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.1" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1163.0" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1166.0" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1163.3" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1166.3" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (69 samples, 0.89%)</title><rect x="1163.6" y="579.0" width="10.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1166.6" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (67 samples, 0.86%)</title><rect x="1163.9" y="563.0" width="10.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1166.9" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (26 samples, 0.33%)</title><rect x="1167.4" y="547.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.4" y="558.0"></text>
</g>
<g>
<title>copyout (23 samples, 0.30%)</title><rect x="1167.9" y="531.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1170.9" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_string (23 samples, 0.30%)</title><rect x="1167.9" y="515.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1170.9" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (18 samples, 0.23%)</title><rect x="1171.4" y="547.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.4" y="558.0"></text>
</g>
<g>
<title>__check_object_size (16 samples, 0.21%)</title><rect x="1171.7" y="531.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.7" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.08%)</title><rect x="1173.2" y="515.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1176.2" y="526.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (12 samples, 0.15%)</title><rect x="1174.1" y="579.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1177.1" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (18 samples, 0.23%)</title><rect x="1175.9" y="579.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1178.9" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (11 samples, 0.14%)</title><rect x="1177.0" y="563.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.0" y="574.0"></text>
</g>
<g>
<title>ktime_get (10 samples, 0.13%)</title><rect x="1177.1" y="547.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.1" y="558.0"></text>
</g>
<g>
<title>read_tsc (8 samples, 0.10%)</title><rect x="1177.4" y="531.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1180.4" y="542.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.19%)</title><rect x="1178.6" y="611.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1181.6" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (15 samples, 0.19%)</title><rect x="1178.6" y="595.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1181.6" y="606.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (3 samples, 0.04%)</title><rect x="1178.9" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1181.9" y="590.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.13%)</title><rect x="1179.4" y="579.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.4" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (18 samples, 0.23%)</title><rect x="1180.9" y="611.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.23%)</title><rect x="1180.9" y="595.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1183.9" y="606.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.19%)</title><rect x="1181.4" y="579.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.4" y="590.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.06%)</title><rect x="1183.6" y="691.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1186.6" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="1184.4" y="691.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1187.4" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.06%)</title><rect x="1184.8" y="691.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1187.8" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.08%)</title><rect x="1185.9" y="755.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="1185.9" y="739.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.08%)</title><rect x="1185.9" y="723.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>start_thread (21 samples, 0.27%)</title><rect x="1186.8" y="771.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (21 samples, 0.27%)</title><rect x="1186.8" y="755.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>Thread::call_run() (21 samples, 0.27%)</title><rect x="1186.8" y="739.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="750.0"></text>
</g>
<g>
<title>GangWorker::loop() (19 samples, 0.24%)</title><rect x="1186.8" y="723.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="734.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (16 samples, 0.21%)</title><rect x="1186.8" y="707.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.8" y="718.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.06%)</title><rect x="1186.8" y="691.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="702.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.05%)</title><rect x="1187.0" y="675.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1190.0" y="686.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.06%)</title><rect x="1187.6" y="691.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.6" y="702.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.06%)</title><rect x="1187.6" y="675.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.6" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.06%)</title><rect x="1187.6" y="659.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.6" y="670.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.06%)</title><rect x="1187.6" y="643.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.6" y="654.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.04%)</title><rect x="1187.6" y="627.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.6" y="638.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (3 samples, 0.04%)</title><rect x="1187.6" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.6" y="622.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.04%)</title><rect x="1187.6" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.6" y="606.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 0.06%)</title><rect x="1188.5" y="691.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.5" y="702.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.05%)</title><rect x="1188.5" y="675.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.5" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.05%)</title><rect x="1188.5" y="659.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.5" y="670.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.05%)</title><rect x="1188.5" y="643.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.5" y="654.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.04%)</title><rect x="1189.2" y="707.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.2" y="718.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.04%)</title><rect x="1189.2" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.2" y="702.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (2 samples, 0.03%)</title><rect x="1189.4" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="1189.4" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.7" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.7" y="734.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.7" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.7" y="718.0"></text>
</g>
</g>
</svg>
