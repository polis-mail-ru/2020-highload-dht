<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="837"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="837"> </text>
<g id="frames">
<g>
<title>all (6,250 samples, 100.00%)</title><rect x="10.0" y="803.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="814.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.24%)</title><rect x="10.0" y="787.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (15 samples, 0.24%)</title><rect x="10.0" y="771.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.94] (14 samples, 0.22%)</title><rect x="10.2" y="755.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.2" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (14 samples, 0.22%)</title><rect x="10.2" y="739.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.2" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (12 samples, 0.19%)</title><rect x="10.2" y="723.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.2" y="734.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="12.5" y="723.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="15.5" y="734.0"></text>
</g>
<g>
<title>[no_Java_frame] (10 samples, 0.16%)</title><rect x="12.8" y="787.0" width="1.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.8" y="798.0"></text>
</g>
<g>
<title>[not_walkable_Java] (11 samples, 0.18%)</title><rect x="14.7" y="787.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="17.7" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.08%)</title><rect x="14.9" y="771.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.9" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (5 samples, 0.08%)</title><rect x="14.9" y="755.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.9" y="766.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.08%)</title><rect x="14.9" y="739.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.9" y="750.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.06%)</title><rect x="15.1" y="723.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.1" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.06%)</title><rect x="15.9" y="771.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="16.8" y="787.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="19.8" y="798.0"></text>
</g>
<g>
<title>[unknown_Java] (10 samples, 0.16%)</title><rect x="17.4" y="787.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="20.4" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="17.4" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="17.9" y="771.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="20.9" y="782.0"></text>
</g>
<g>
<title>/lib64/ld-2.30.so (5 samples, 0.08%)</title><rect x="17.9" y="755.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="20.9" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="18.9" y="771.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="21.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="18.9" y="755.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="21.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="18.9" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="21.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="18.9" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.9" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="18.9" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="21.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="18.9" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,111 samples, 33.78%)</title><rect x="19.3" y="787.0" width="398.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.3" y="798.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,111 samples, 33.78%)</title><rect x="19.3" y="771.0" width="398.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.3" y="782.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,111 samples, 33.78%)</title><rect x="19.3" y="755.0" width="398.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.3" y="766.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (16 samples, 0.26%)</title><rect x="20.6" y="739.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.26%)</title><rect x="20.6" y="723.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.26%)</title><rect x="20.6" y="707.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$68/27339944.run (3 samples, 0.05%)</title><rect x="23.0" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (323 samples, 5.17%)</title><rect x="23.6" y="739.0" width="61.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.6" y="750.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (323 samples, 5.17%)</title><rect x="23.6" y="723.0" width="61.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.6" y="734.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (202 samples, 3.23%)</title><rect x="26.0" y="707.0" width="38.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.0" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.05%)</title><rect x="26.6" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.6" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="26.6" y="675.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="29.6" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="26.8" y="659.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="29.8" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="26.8" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.19%)</title><rect x="27.2" y="691.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (11 samples, 0.18%)</title><rect x="27.4" y="675.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.18%)</title><rect x="27.4" y="659.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="29.1" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (42 samples, 0.67%)</title><rect x="29.4" y="691.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (42 samples, 0.67%)</title><rect x="29.4" y="675.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.26%)</title><rect x="34.0" y="659.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.26%)</title><rect x="34.0" y="643.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.22%)</title><rect x="34.4" y="627.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.4" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.08%)</title><rect x="34.5" y="611.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="37.5" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="35.1" y="595.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="38.1" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.13%)</title><rect x="35.5" y="611.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="38.5" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.13%)</title><rect x="35.5" y="595.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="38.5" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.13%)</title><rect x="35.5" y="579.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="38.5" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.13%)</title><rect x="35.5" y="563.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="38.5" y="574.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.13%)</title><rect x="35.5" y="547.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="38.5" y="558.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.13%)</title><rect x="35.5" y="531.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="38.5" y="542.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="36.1" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="39.1" y="526.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="36.6" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="39.6" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="36.6" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.6" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="36.6" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="39.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.03%)</title><rect x="37.0" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.03%)</title><rect x="37.4" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.03%)</title><rect x="37.4" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (140 samples, 2.24%)</title><rect x="37.8" y="691.0" width="26.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.8" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (126 samples, 2.02%)</title><rect x="40.4" y="675.0" width="23.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.4" y="686.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.03%)</title><rect x="41.5" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="44.5" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (49 samples, 0.78%)</title><rect x="41.9" y="659.0" width="9.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="44.9" y="670.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (6 samples, 0.10%)</title><rect x="43.0" y="643.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="46.0" y="654.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="44.2" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="47.2" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (14 samples, 0.22%)</title><rect x="44.6" y="643.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="47.6" y="654.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.03%)</title><rect x="45.7" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="48.7" y="638.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.05%)</title><rect x="46.1" y="627.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="49.1" y="638.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="46.6" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="49.6" y="638.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="47.2" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="50.2" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (3 samples, 0.05%)</title><rect x="47.6" y="643.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="50.6" y="654.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (10 samples, 0.16%)</title><rect x="48.1" y="643.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="51.1" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="50.0" y="643.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="53.0" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="50.4" y="643.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="53.4" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="50.8" y="643.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="53.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 1.10%)</title><rect x="51.2" y="659.0" width="13.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="54.2" y="670.0"></text>
</g>
<g>
<title>/lib64/ld-2.30.so (2 samples, 0.03%)</title><rect x="51.2" y="643.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="54.2" y="654.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (6 samples, 0.10%)</title><rect x="51.5" y="643.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="54.5" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (57 samples, 0.91%)</title><rect x="52.7" y="643.0" width="10.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="55.7" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.77%)</title><rect x="54.4" y="627.0" width="9.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="57.4" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.77%)</title><rect x="54.4" y="611.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="57.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 0.69%)</title><rect x="55.3" y="595.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="58.3" y="606.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.66%)</title><rect x="55.7" y="579.0" width="7.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.7" y="590.0"></text>
</g>
<g>
<title>futex_wait (40 samples, 0.64%)</title><rect x="55.9" y="563.0" width="7.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="58.9" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (15 samples, 0.24%)</title><rect x="57.2" y="547.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="60.2" y="558.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.05%)</title><rect x="57.2" y="531.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.2" y="542.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.19%)</title><rect x="57.8" y="531.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.8" y="542.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.16%)</title><rect x="58.1" y="515.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="61.1" y="526.0"></text>
</g>
<g>
<title>futex_wait_setup (18 samples, 0.29%)</title><rect x="60.0" y="547.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.0" y="558.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="62.1" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="65.1" y="542.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.05%)</title><rect x="62.7" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="65.7" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="63.6" y="643.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="66.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.05%)</title><rect x="64.2" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.05%)</title><rect x="64.2" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.05%)</title><rect x="64.2" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.03%)</title><rect x="64.4" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="64.4" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="64.4" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (105 samples, 1.68%)</title><rect x="64.8" y="707.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (105 samples, 1.68%)</title><rect x="64.8" y="691.0" width="19.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (105 samples, 1.68%)</title><rect x="64.8" y="675.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (105 samples, 1.68%)</title><rect x="64.8" y="659.0" width="19.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (93 samples, 1.49%)</title><rect x="67.0" y="643.0" width="17.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.0" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="67.2" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="70.2" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.34%)</title><rect x="67.6" y="627.0" width="3.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="70.6" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.06%)</title><rect x="67.8" y="611.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="70.8" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.13%)</title><rect x="68.5" y="611.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="71.5" y="622.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (8 samples, 0.13%)</title><rect x="70.0" y="611.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="73.0" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (69 samples, 1.10%)</title><rect x="71.5" y="627.0" width="13.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="74.5" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 0.99%)</title><rect x="72.9" y="611.0" width="11.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="75.9" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (62 samples, 0.99%)</title><rect x="72.9" y="595.0" width="11.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (61 samples, 0.98%)</title><rect x="73.1" y="579.0" width="11.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.1" y="590.0"></text>
</g>
<g>
<title>do_futex (59 samples, 0.94%)</title><rect x="73.4" y="563.0" width="11.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="76.4" y="574.0"></text>
</g>
<g>
<title>futex_wake (58 samples, 0.93%)</title><rect x="73.6" y="547.0" width="11.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="76.6" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (6 samples, 0.10%)</title><rect x="75.5" y="531.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.5" y="542.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.03%)</title><rect x="76.6" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.6" y="542.0"></text>
</g>
<g>
<title>wake_up_q (40 samples, 0.64%)</title><rect x="77.0" y="531.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="80.0" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (40 samples, 0.64%)</title><rect x="77.0" y="515.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="80.0" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (40 samples, 0.64%)</title><rect x="77.0" y="499.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$68/27339944.run (1,765 samples, 28.24%)</title><rect x="84.6" y="739.0" width="333.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.6" y="750.0">ru/mail/polis/service/s3ponia/AsyncService$$L..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$put$3 (1,764 samples, 28.22%)</title><rect x="84.8" y="723.0" width="333.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.8" y="734.0">ru/mail/polis/service/s3ponia/AsyncService.la..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.13%)</title><rect x="84.8" y="707.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.13%)</title><rect x="84.8" y="691.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.8" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.11%)</title><rect x="84.8" y="675.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="87.8" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="84.8" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="87.8" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.06%)</title><rect x="85.1" y="659.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="88.1" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.06%)</title><rect x="85.1" y="643.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="88.1" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.06%)</title><rect x="85.1" y="627.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="88.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="85.3" y="611.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="88.3" y="622.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.03%)</title><rect x="85.5" y="595.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="88.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.byteBufferFromString (5 samples, 0.08%)</title><rect x="86.3" y="707.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.06%)</title><rect x="86.3" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.06%)</title><rect x="86.3" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.06%)</title><rect x="86.3" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="86.3" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.3" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.06%)</title><rect x="86.3" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="89.3" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.06%)</title><rect x="86.3" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="89.3" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="86.5" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="89.5" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="86.5" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="89.5" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="86.7" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="89.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.upsert (1,751 samples, 28.02%)</title><rect x="87.2" y="707.0" width="330.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.2" y="718.0">ru/mail/polis/service/s3ponia/AsyncService.up..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="89.7" y="691.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="92.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,268 samples, 20.29%)</title><rect x="90.2" y="691.0" width="239.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.2" y="702.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (25 samples, 0.40%)</title><rect x="96.3" y="675.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="99.3" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (25 samples, 0.40%)</title><rect x="96.3" y="659.0" width="4.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="99.3" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (24 samples, 0.38%)</title><rect x="96.5" y="643.0" width="4.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="99.5" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (20 samples, 0.32%)</title><rect x="96.7" y="627.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="99.7" y="638.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.05%)</title><rect x="100.4" y="627.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="103.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (15 samples, 0.24%)</title><rect x="101.0" y="675.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.24%)</title><rect x="101.0" y="659.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.24%)</title><rect x="101.0" y="643.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.0" y="654.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="102.1" y="627.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="105.1" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.11%)</title><rect x="102.5" y="627.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="105.5" y="638.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.11%)</title><rect x="102.5" y="611.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="105.5" y="622.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.10%)</title><rect x="102.7" y="595.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="105.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,179 samples, 18.86%)</title><rect x="103.8" y="675.0" width="222.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.8" y="686.0">one/nio/http/HttpSession.writ..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (51 samples, 0.82%)</title><rect x="104.6" y="659.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.6" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.11%)</title><rect x="109.7" y="643.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.7" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.08%)</title><rect x="109.9" y="627.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="112.9" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.08%)</title><rect x="109.9" y="611.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="112.9" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.08%)</title><rect x="109.9" y="595.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="112.9" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.08%)</title><rect x="109.9" y="579.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="112.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.27%)</title><rect x="111.0" y="643.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (17 samples, 0.27%)</title><rect x="111.0" y="627.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.charAt (17 samples, 0.27%)</title><rect x="111.0" y="611.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.0" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,124 samples, 17.98%)</title><rect x="114.2" y="659.0" width="212.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.2" y="670.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,123 samples, 17.97%)</title><rect x="114.4" y="643.0" width="212.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.4" y="654.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,115 samples, 17.84%)</title><rect x="115.9" y="627.0" width="210.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.9" y="638.0">one/nio/net/Session$ArrayQue..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="117.4" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,105 samples, 17.68%)</title><rect x="117.8" y="611.0" width="208.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.8" y="622.0">one/nio/net/NativeSocket.wr..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (44 samples, 0.70%)</title><rect x="119.3" y="595.0" width="8.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="122.3" y="606.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (3 samples, 0.05%)</title><rect x="121.6" y="579.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="124.6" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.06%)</title><rect x="122.1" y="579.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="125.1" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (2 samples, 0.03%)</title><rect x="122.9" y="579.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="125.9" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (22 samples, 0.35%)</title><rect x="123.5" y="579.0" width="4.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="126.5" y="590.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="123.8" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="126.8" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (6 samples, 0.10%)</title><rect x="124.4" y="563.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="127.4" y="574.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (11 samples, 0.18%)</title><rect x="125.5" y="563.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="128.5" y="574.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (10 samples, 0.16%)</title><rect x="125.7" y="547.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="128.7" y="558.0"></text>
</g>
<g>
<title>__libc_send (1,045 samples, 16.72%)</title><rect x="127.6" y="595.0" width="197.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="130.6" y="606.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,021 samples, 16.34%)</title><rect x="132.2" y="579.0" width="192.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.2" y="590.0">entry_SYSCALL_64_after_hw..</text>
</g>
<g>
<title>do_syscall_64 (1,021 samples, 16.34%)</title><rect x="132.2" y="563.0" width="192.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="135.2" y="574.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,009 samples, 16.14%)</title><rect x="134.4" y="547.0" width="190.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="137.4" y="558.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,006 samples, 16.10%)</title><rect x="135.0" y="531.0" width="189.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.0" y="542.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (3 samples, 0.05%)</title><rect x="136.3" y="515.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="139.3" y="526.0"></text>
</g>
<g>
<title>sock_sendmsg (967 samples, 15.47%)</title><rect x="136.9" y="515.0" width="182.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="139.9" y="526.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (11 samples, 0.18%)</title><rect x="137.3" y="499.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.3" y="510.0"></text>
</g>
<g>
<title>inet_send_prepare (6 samples, 0.10%)</title><rect x="138.2" y="483.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="141.2" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.18%)</title><rect x="139.3" y="499.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="142.3" y="510.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.16%)</title><rect x="139.5" y="483.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="142.5" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg (943 samples, 15.09%)</title><rect x="141.4" y="499.0" width="178.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="144.4" y="510.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="142.0" y="483.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="145.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="142.0" y="467.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="145.0" y="478.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.08%)</title><rect x="142.7" y="483.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="145.7" y="494.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="143.1" y="467.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="146.1" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (931 samples, 14.90%)</title><rect x="143.7" y="483.0" width="175.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="146.7" y="494.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.11%)</title><rect x="146.7" y="467.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="149.7" y="478.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.06%)</title><rect x="147.1" y="451.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="150.1" y="462.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (811 samples, 12.98%)</title><rect x="148.0" y="467.0" width="153.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="151.0" y="478.0">__tcp_push_pending_..</text>
</g>
<g>
<title>tcp_write_xmit (806 samples, 12.90%)</title><rect x="149.0" y="451.0" width="152.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.0" y="462.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (748 samples, 11.97%)</title><rect x="151.4" y="435.0" width="141.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="154.4" y="446.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (704 samples, 11.26%)</title><rect x="155.0" y="419.0" width="132.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="158.0" y="430.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (6 samples, 0.10%)</title><rect x="155.8" y="403.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="158.8" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.10%)</title><rect x="155.8" y="387.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="158.8" y="398.0"></text>
</g>
<g>
<title>ip_local_out (14 samples, 0.22%)</title><rect x="156.9" y="403.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="159.9" y="414.0"></text>
</g>
<g>
<title>__ip_local_out (14 samples, 0.22%)</title><rect x="156.9" y="387.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.9" y="398.0"></text>
</g>
<g>
<title>ip_send_check (8 samples, 0.13%)</title><rect x="157.1" y="371.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="160.1" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.08%)</title><rect x="158.6" y="371.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="161.6" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_output (4 samples, 0.06%)</title><rect x="158.8" y="355.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="161.8" y="366.0"></text>
</g>
<g>
<title>ip_output (680 samples, 10.88%)</title><rect x="159.5" y="403.0" width="128.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="162.5" y="414.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (5 samples, 0.08%)</title><rect x="161.0" y="387.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="164.0" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="161.4" y="371.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="164.4" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (651 samples, 10.42%)</title><rect x="162.0" y="387.0" width="122.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="165.0" y="398.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (29 samples, 0.46%)</title><rect x="164.1" y="371.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="167.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.19%)</title><rect x="165.6" y="355.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="168.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.14%)</title><rect x="166.1" y="339.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="169.1" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.05%)</title><rect x="166.3" y="323.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="169.3" y="334.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.06%)</title><rect x="166.9" y="323.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="169.9" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.06%)</title><rect x="166.9" y="307.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="169.9" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.05%)</title><rect x="167.1" y="291.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="170.1" y="302.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.03%)</title><rect x="167.8" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="170.8" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.10%)</title><rect x="168.2" y="355.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="171.2" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.06%)</title><rect x="168.6" y="339.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="171.6" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (611 samples, 9.78%)</title><rect x="169.5" y="371.0" width="115.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.5" y="382.0">__local_bh_ena..</text>
</g>
<g>
<title>do_softirq.part.0 (610 samples, 9.76%)</title><rect x="169.7" y="355.0" width="115.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="172.7" y="366.0">do_softirq.par..</text>
</g>
<g>
<title>do_softirq_own_stack (599 samples, 9.58%)</title><rect x="171.8" y="339.0" width="113.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.8" y="350.0">do_softirq_own..</text>
</g>
<g>
<title>__softirqentry_text_start (599 samples, 9.58%)</title><rect x="171.8" y="323.0" width="113.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="174.8" y="334.0">__softirqentry..</text>
</g>
<g>
<title>net_rx_action (586 samples, 9.38%)</title><rect x="174.3" y="307.0" width="110.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="177.3" y="318.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (3 samples, 0.05%)</title><rect x="176.0" y="291.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="179.0" y="302.0"></text>
</g>
<g>
<title>process_backlog (574 samples, 9.18%)</title><rect x="176.5" y="291.0" width="108.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="179.5" y="302.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (563 samples, 9.01%)</title><rect x="178.6" y="275.0" width="106.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="181.6" y="286.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.14%)</title><rect x="179.0" y="259.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="182.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (552 samples, 8.83%)</title><rect x="180.7" y="259.0" width="104.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="183.7" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (543 samples, 8.69%)</title><rect x="181.2" y="243.0" width="102.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="184.2" y="254.0">ip_local_del..</text>
</g>
<g>
<title>ip_local_deliver_finish (538 samples, 8.61%)</title><rect x="182.2" y="227.0" width="101.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="185.2" y="238.0">ip_local_del..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (538 samples, 8.61%)</title><rect x="182.2" y="211.0" width="101.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="185.2" y="222.0">ip_protocol_..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="184.1" y="195.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="187.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (526 samples, 8.42%)</title><rect x="184.5" y="195.0" width="99.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="187.5" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (24 samples, 0.38%)</title><rect x="189.2" y="179.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.2" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="193.3" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="196.3" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (13 samples, 0.21%)</title><rect x="193.7" y="179.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="196.7" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (13 samples, 0.21%)</title><rect x="193.7" y="163.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="196.7" y="174.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (10 samples, 0.16%)</title><rect x="194.3" y="147.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="197.3" y="158.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (6 samples, 0.10%)</title><rect x="195.0" y="131.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="198.0" y="142.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.03%)</title><rect x="195.2" y="115.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="198.2" y="126.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (2 samples, 0.03%)</title><rect x="195.6" y="115.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.6" y="126.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="196.2" y="179.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (459 samples, 7.34%)</title><rect x="196.5" y="179.0" width="86.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="199.5" y="190.0">tcp_v4_do_..</text>
</g>
<g>
<title>tcp_rcv_established (456 samples, 7.30%)</title><rect x="197.1" y="163.0" width="86.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="200.1" y="174.0">tcp_rcv_es..</text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="200.3" y="147.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="203.3" y="158.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.08%)</title><rect x="200.3" y="131.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.3" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="200.5" y="115.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.5" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (286 samples, 4.58%)</title><rect x="201.3" y="147.0" width="54.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.3" y="158.0">sock_..</text>
</g>
<g>
<title>__wake_up_common_lock (276 samples, 4.42%)</title><rect x="203.1" y="131.0" width="52.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="206.1" y="142.0">__wak..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (274 samples, 4.38%)</title><rect x="203.5" y="115.0" width="51.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="206.5" y="126.0">_raw_..</text>
</g>
<g>
<title>tcp_ack (121 samples, 1.94%)</title><rect x="255.3" y="147.0" width="22.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="258.3" y="158.0">t..</text>
</g>
<g>
<title>__kfree_skb (53 samples, 0.85%)</title><rect x="260.7" y="131.0" width="10.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="263.7" y="142.0"></text>
</g>
<g>
<title>__slab_free (15 samples, 0.24%)</title><rect x="260.7" y="115.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="263.7" y="126.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.05%)</title><rect x="263.6" y="115.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="266.6" y="126.0"></text>
</g>
<g>
<title>skb_release_data (33 samples, 0.53%)</title><rect x="264.5" y="115.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="267.5" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (8 samples, 0.13%)</title><rect x="270.7" y="131.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="273.7" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.05%)</title><rect x="272.2" y="131.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.2" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="273.0" y="131.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="276.0" y="142.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="273.0" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="276.0" y="126.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.05%)</title><rect x="273.4" y="131.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.4" y="142.0"></text>
</g>
<g>
<title>rb_first (5 samples, 0.08%)</title><rect x="273.9" y="131.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="276.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.05%)</title><rect x="274.9" y="131.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="277.9" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (10 samples, 0.16%)</title><rect x="276.2" y="131.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="279.2" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.08%)</title><rect x="278.1" y="147.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="281.1" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.13%)</title><rect x="279.2" y="147.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="282.2" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.08%)</title><rect x="280.7" y="147.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="283.7" y="158.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.08%)</title><rect x="280.7" y="131.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="283.7" y="142.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.06%)</title><rect x="280.9" y="115.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="283.9" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (8 samples, 0.13%)</title><rect x="281.7" y="147.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="284.7" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.05%)</title><rect x="283.2" y="179.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="286.2" y="190.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.08%)</title><rect x="283.8" y="243.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="286.8" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.24%)</title><rect x="285.1" y="387.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="288.1" y="398.0"></text>
</g>
<g>
<title>selinux_ip_postroute (13 samples, 0.21%)</title><rect x="285.1" y="371.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="288.1" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (10 samples, 0.16%)</title><rect x="285.6" y="355.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="288.6" y="366.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.08%)</title><rect x="286.0" y="339.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="289.0" y="350.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (2 samples, 0.03%)</title><rect x="287.0" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.0" y="350.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.03%)</title><rect x="287.5" y="371.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="290.5" y="382.0"></text>
</g>
<g>
<title>__skb_clone (10 samples, 0.16%)</title><rect x="287.9" y="419.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="290.9" y="430.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="289.4" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="292.4" y="414.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.06%)</title><rect x="289.8" y="419.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.8" y="430.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.03%)</title><rect x="291.1" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="294.1" y="430.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (5 samples, 0.08%)</title><rect x="291.5" y="419.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="294.5" y="430.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.03%)</title><rect x="292.1" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="295.1" y="414.0"></text>
</g>
<g>
<title>ktime_get (10 samples, 0.16%)</title><rect x="292.6" y="435.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="295.6" y="446.0"></text>
</g>
<g>
<title>read_tsc (8 samples, 0.13%)</title><rect x="293.0" y="419.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="296.0" y="430.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (26 samples, 0.42%)</title><rect x="294.5" y="435.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="297.5" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.14%)</title><rect x="297.2" y="419.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="300.2" y="430.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.14%)</title><rect x="297.2" y="403.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="300.2" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="298.1" y="387.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="301.1" y="398.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="298.9" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="301.9" y="430.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.13%)</title><rect x="299.4" y="435.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="302.4" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="300.0" y="419.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="303.0" y="430.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="300.2" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="303.2" y="414.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.10%)</title><rect x="301.1" y="467.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="304.1" y="478.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.05%)</title><rect x="301.5" y="451.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="304.5" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.05%)</title><rect x="301.5" y="435.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="304.5" y="446.0"></text>
</g>
<g>
<title>sk_page_frag_refill (19 samples, 0.30%)</title><rect x="302.3" y="467.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="305.3" y="478.0"></text>
</g>
<g>
<title>skb_page_frag_refill (19 samples, 0.30%)</title><rect x="302.3" y="451.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="305.3" y="462.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (37 samples, 0.59%)</title><rect x="305.8" y="467.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="308.8" y="478.0"></text>
</g>
<g>
<title>__alloc_skb (30 samples, 0.48%)</title><rect x="307.2" y="451.0" width="5.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="310.2" y="462.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.10%)</title><rect x="308.9" y="435.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="311.9" y="446.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.10%)</title><rect x="308.9" y="419.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="311.9" y="430.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.05%)</title><rect x="310.0" y="435.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="313.0" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.19%)</title><rect x="310.6" y="435.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.6" y="446.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="312.5" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="315.5" y="430.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.10%)</title><rect x="312.8" y="467.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="315.8" y="478.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.06%)</title><rect x="314.2" y="467.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="317.2" y="478.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (6 samples, 0.10%)</title><rect x="314.9" y="467.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="317.9" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (15 samples, 0.24%)</title><rect x="316.0" y="467.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.0" y="478.0"></text>
</g>
<g>
<title>tcp_current_mss (12 samples, 0.19%)</title><rect x="316.6" y="451.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="319.6" y="462.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.06%)</title><rect x="318.1" y="435.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="321.1" y="446.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (2 samples, 0.03%)</title><rect x="318.9" y="467.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="321.9" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (29 samples, 0.46%)</title><rect x="319.4" y="515.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.4" y="526.0"></text>
</g>
<g>
<title>__fget_light (29 samples, 0.46%)</title><rect x="319.4" y="499.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="322.4" y="510.0"></text>
</g>
<g>
<title>__fget (24 samples, 0.38%)</title><rect x="320.4" y="483.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.4" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.06%)</title><rect x="324.9" y="595.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="327.9" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.06%)</title><rect x="325.7" y="595.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="328.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.27%)</title><rect x="326.4" y="675.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.21%)</title><rect x="327.2" y="659.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.21%)</title><rect x="327.2" y="643.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.10%)</title><rect x="329.6" y="691.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.6" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.10%)</title><rect x="329.6" y="675.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="332.6" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.05%)</title><rect x="329.8" y="659.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="332.8" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="329.8" y="643.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="332.8" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="329.8" y="627.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="332.8" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="329.8" y="611.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="332.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsert (460 samples, 7.36%)</title><rect x="331.0" y="691.0" width="86.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.0" y="702.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.03%)</title><rect x="331.0" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.03%)</title><rect x="331.0" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.03%)</title><rect x="331.0" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (2 samples, 0.03%)</title><rect x="331.0" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="331.0" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsert (458 samples, 7.33%)</title><rect x="331.3" y="675.0" width="86.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.3" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (456 samples, 7.30%)</title><rect x="331.3" y="659.0" width="86.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.3" y="670.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (368 samples, 5.89%)</title><rect x="345.5" y="643.0" width="69.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.5" y="654.0">java/ut..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.10%)</title><rect x="350.0" y="627.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (337 samples, 5.39%)</title><rect x="351.4" y="627.0" width="63.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.4" y="638.0">java/ut..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (337 samples, 5.39%)</title><rect x="351.4" y="611.0" width="63.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.4" y="622.0">java/ni..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (114 samples, 1.82%)</title><rect x="393.5" y="595.0" width="21.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.5" y="606.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (114 samples, 1.82%)</title><rect x="393.5" y="579.0" width="21.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.5" y="590.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (65 samples, 1.04%)</title><rect x="402.7" y="563.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.7" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (65 samples, 1.04%)</title><rect x="402.7" y="547.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.7" y="558.0"></text>
</g>
<g>
<title>vectorizedMismatch (16 samples, 0.26%)</title><rect x="412.0" y="531.0" width="3.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="415.0" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="415.0" y="643.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="418.0" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.16%)</title><rect x="415.5" y="643.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="418.5" y="654.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.11%)</title><rect x="416.1" y="627.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="419.1" y="638.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.10%)</title><rect x="416.3" y="611.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="419.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.of (2 samples, 0.03%)</title><rect x="417.4" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.4" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="417.4" y="643.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="420.4" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="417.4" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="420.4" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="417.4" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="420.4" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="417.4" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="420.4" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="417.4" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="420.4" y="590.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,032 samples, 64.51%)</title><rect x="418.0" y="787.0" width="761.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.0" y="798.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="423.3" y="771.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="426.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="423.3" y="755.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="426.3" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="423.3" y="739.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="426.3" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="423.7" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="426.7" y="766.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.08%)</title><rect x="424.0" y="771.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="427.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3 samples, 0.05%)</title><rect x="425.0" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (144 samples, 2.30%)</title><rect x="425.5" y="771.0" width="27.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.5" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (131 samples, 2.10%)</title><rect x="428.0" y="755.0" width="24.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.0" y="766.0">o..</text>
</g>
<g>
<title>/lib64/libc-2.30.so (2 samples, 0.03%)</title><rect x="428.9" y="739.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="431.9" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="429.5" y="739.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="432.5" y="750.0"></text>
</g>
<g>
<title>epoll_wait (120 samples, 1.92%)</title><rect x="429.9" y="739.0" width="22.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="432.9" y="750.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 1.81%)</title><rect x="431.0" y="723.0" width="21.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="434.0" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (113 samples, 1.81%)</title><rect x="431.0" y="707.0" width="21.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="434.0" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (102 samples, 1.63%)</title><rect x="433.1" y="691.0" width="19.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="436.1" y="702.0"></text>
</g>
<g>
<title>do_epoll_wait (100 samples, 1.60%)</title><rect x="433.5" y="675.0" width="18.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="436.5" y="686.0"></text>
</g>
<g>
<title>__fget_light (24 samples, 0.38%)</title><rect x="433.9" y="659.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="436.9" y="670.0"></text>
</g>
<g>
<title>__fget (20 samples, 0.32%)</title><rect x="434.6" y="643.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="437.6" y="654.0"></text>
</g>
<g>
<title>ep_poll (74 samples, 1.18%)</title><rect x="438.4" y="659.0" width="14.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="441.4" y="670.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (46 samples, 0.74%)</title><rect x="440.7" y="643.0" width="8.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.7" y="654.0"></text>
</g>
<g>
<title>ep_send_events_proc (32 samples, 0.51%)</title><rect x="441.6" y="627.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="444.6" y="638.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (26 samples, 0.42%)</title><rect x="442.7" y="611.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="445.7" y="622.0"></text>
</g>
<g>
<title>sock_poll (19 samples, 0.30%)</title><rect x="444.1" y="595.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="447.1" y="606.0"></text>
</g>
<g>
<title>tcp_poll (11 samples, 0.18%)</title><rect x="445.6" y="579.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="448.6" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (4 samples, 0.06%)</title><rect x="446.9" y="563.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.9" y="574.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.10%)</title><rect x="447.6" y="627.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.6" y="638.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="448.4" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.4" y="622.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.05%)</title><rect x="448.8" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="451.8" y="638.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (16 samples, 0.26%)</title><rect x="449.3" y="643.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="452.3" y="654.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.24%)</title><rect x="449.5" y="627.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="452.5" y="638.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.19%)</title><rect x="450.1" y="611.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.1" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.11%)</title><rect x="451.0" y="595.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="454.0" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,836 samples, 61.38%)</title><rect x="452.7" y="771.0" width="724.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.7" y="782.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,800 samples, 60.80%)</title><rect x="459.5" y="755.0" width="717.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.5" y="766.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,043 samples, 48.69%)</title><rect x="459.5" y="739.0" width="574.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.5" y="750.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (16 samples, 0.26%)</title><rect x="477.7" y="723.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.7" y="734.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.14%)</title><rect x="480.9" y="723.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="483.9" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="482.6" y="723.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="485.6" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="482.9" y="723.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="485.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,675 samples, 42.80%)</title><rect x="483.3" y="723.0" width="505.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.3" y="734.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,675 samples, 42.80%)</title><rect x="483.3" y="707.0" width="505.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.3" y="718.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (2,632 samples, 42.11%)</title><rect x="483.7" y="691.0" width="496.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.7" y="702.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (25 samples, 0.40%)</title><rect x="483.9" y="675.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.38%)</title><rect x="484.1" y="659.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.14%)</title><rect x="485.8" y="643.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.14%)</title><rect x="485.8" y="627.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.06%)</title><rect x="486.7" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.08%)</title><rect x="487.7" y="643.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="488.2" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="488.2" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="488.2" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.put (2,606 samples, 41.70%)</title><rect x="488.6" y="675.0" width="492.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.6" y="686.0">ru/mail/polis/service/s3ponia/AsyncService.put</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="490.3" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="490.3" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$68/27339944.get$Lambda (3 samples, 0.05%)</title><rect x="490.3" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.byteBufferFromString (6 samples, 0.10%)</title><rect x="490.9" y="659.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.10%)</title><rect x="490.9" y="643.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.10%)</title><rect x="490.9" y="627.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.10%)</title><rect x="490.9" y="611.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.9" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.08%)</title><rect x="491.1" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.1" y="606.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="491.4" y="579.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="494.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.chooseNode (2,560 samples, 40.96%)</title><rect x="492.0" y="659.0" width="483.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.0" y="670.0">ru/mail/polis/service/s3ponia/AsyncService.chooseNode</text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 0.13%)</title><rect x="492.8" y="643.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (324 samples, 5.18%)</title><rect x="494.3" y="643.0" width="61.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.3" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (322 samples, 5.15%)</title><rect x="494.6" y="627.0" width="60.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.6" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.05%)</title><rect x="494.6" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.05%)</title><rect x="494.6" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.05%)</title><rect x="494.6" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.05%)</title><rect x="494.6" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.05%)</title><rect x="494.6" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (3 samples, 0.05%)</title><rect x="494.6" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.05%)</title><rect x="494.6" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (3 samples, 0.05%)</title><rect x="494.6" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.06%)</title><rect x="495.2" y="611.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.06%)</title><rect x="495.2" y="595.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.05%)</title><rect x="495.4" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (315 samples, 5.04%)</title><rect x="496.0" y="611.0" width="59.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.0" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (315 samples, 5.04%)</title><rect x="496.0" y="595.0" width="59.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.0" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (315 samples, 5.04%)</title><rect x="496.0" y="579.0" width="59.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.0" y="590.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (315 samples, 5.04%)</title><rect x="496.0" y="563.0" width="59.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.0" y="574.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (272 samples, 4.35%)</title><rect x="504.1" y="547.0" width="51.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.1" y="558.0">jdk/i..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.03%)</title><rect x="504.7" y="531.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="507.7" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.03%)</title><rect x="505.2" y="531.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="508.2" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (64 samples, 1.02%)</title><rect x="505.6" y="531.0" width="12.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="508.6" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.03%)</title><rect x="507.1" y="515.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="510.1" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.06%)</title><rect x="507.5" y="515.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="510.5" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (12 samples, 0.19%)</title><rect x="508.2" y="515.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="511.2" y="526.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (17 samples, 0.27%)</title><rect x="510.5" y="515.0" width="3.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="513.5" y="526.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (5 samples, 0.08%)</title><rect x="514.1" y="515.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="517.1" y="526.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (14 samples, 0.22%)</title><rect x="515.0" y="515.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="518.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="517.7" y="531.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="520.7" y="542.0"></text>
</g>
<g>
<title>/lib64/ld-2.30.so (4 samples, 0.06%)</title><rect x="517.7" y="515.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="520.7" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.06%)</title><rect x="518.4" y="531.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="521.4" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (191 samples, 3.06%)</title><rect x="519.4" y="531.0" width="36.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="522.4" y="542.0">pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (182 samples, 2.91%)</title><rect x="521.1" y="515.0" width="34.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="524.1" y="526.0">en..</text>
</g>
<g>
<title>do_syscall_64 (182 samples, 2.91%)</title><rect x="521.1" y="499.0" width="34.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="524.1" y="510.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (176 samples, 2.82%)</title><rect x="522.2" y="483.0" width="33.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="525.2" y="494.0">__..</text>
</g>
<g>
<title>do_futex (175 samples, 2.80%)</title><rect x="522.4" y="467.0" width="33.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="525.4" y="478.0">do..</text>
</g>
<g>
<title>futex_wake (171 samples, 2.74%)</title><rect x="523.2" y="451.0" width="32.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.2" y="462.0">fu..</text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="527.9" y="435.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="530.9" y="446.0"></text>
</g>
<g>
<title>mark_wake_futex (13 samples, 0.21%)</title><rect x="528.4" y="435.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="531.4" y="446.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.05%)</title><rect x="530.3" y="419.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="533.3" y="430.0"></text>
</g>
<g>
<title>plist_del (2 samples, 0.03%)</title><rect x="530.5" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="533.5" y="414.0"></text>
</g>
<g>
<title>wake_q_add_safe (5 samples, 0.08%)</title><rect x="530.9" y="435.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="533.9" y="446.0"></text>
</g>
<g>
<title>wake_up_q (125 samples, 2.00%)</title><rect x="531.8" y="435.0" width="23.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="534.8" y="446.0">w..</text>
</g>
<g>
<title>try_to_wake_up (125 samples, 2.00%)</title><rect x="531.8" y="419.0" width="23.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="534.8" y="430.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (124 samples, 1.98%)</title><rect x="532.0" y="403.0" width="23.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="535.0" y="414.0">_..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.proxy (2,224 samples, 35.58%)</title><rect x="555.4" y="643.0" width="419.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.4" y="654.0">ru/mail/polis/service/s3ponia/AsyncService.proxy</text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.13%)</title><rect x="558.8" y="627.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.11%)</title><rect x="559.0" y="611.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.11%)</title><rect x="559.0" y="595.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.11%)</title><rect x="559.0" y="579.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,360 samples, 21.76%)</title><rect x="560.4" y="627.0" width="256.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.4" y="638.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,360 samples, 21.76%)</title><rect x="560.4" y="611.0" width="256.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.4" y="622.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.06%)</title><rect x="563.0" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="563.0" y="579.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="563.0" y="563.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.05%)</title><rect x="563.2" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (343 samples, 5.49%)</title><rect x="563.8" y="595.0" width="64.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.8" y="606.0">one/nio..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (15 samples, 0.24%)</title><rect x="577.3" y="579.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="580.3" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (14 samples, 0.22%)</title><rect x="577.5" y="563.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="580.5" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.22%)</title><rect x="577.5" y="547.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="580.5" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.21%)</title><rect x="577.5" y="531.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="580.5" y="542.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (6 samples, 0.10%)</title><rect x="577.7" y="515.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="580.7" y="526.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.03%)</title><rect x="579.6" y="515.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="582.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (254 samples, 4.06%)</title><rect x="580.4" y="579.0" width="47.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.4" y="590.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (57 samples, 0.91%)</title><rect x="581.7" y="563.0" width="10.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="584.7" y="574.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.10%)</title><rect x="583.8" y="547.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="586.8" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (40 samples, 0.64%)</title><rect x="584.9" y="547.0" width="7.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="587.9" y="558.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (12 samples, 0.19%)</title><rect x="588.3" y="531.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="591.3" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (10 samples, 0.16%)</title><rect x="590.6" y="531.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="593.6" y="542.0"></text>
</g>
<g>
<title>__libc_recv (181 samples, 2.90%)</title><rect x="592.4" y="563.0" width="34.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="595.4" y="574.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (165 samples, 2.64%)</title><rect x="595.5" y="547.0" width="31.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="598.5" y="558.0">en..</text>
</g>
<g>
<title>do_syscall_64 (165 samples, 2.64%)</title><rect x="595.5" y="531.0" width="31.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="598.5" y="542.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (162 samples, 2.59%)</title><rect x="596.0" y="515.0" width="30.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="599.0" y="526.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (160 samples, 2.56%)</title><rect x="596.4" y="499.0" width="30.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="599.4" y="510.0">__..</text>
</g>
<g>
<title>fput_many (4 samples, 0.06%)</title><rect x="596.4" y="483.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="599.4" y="494.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (151 samples, 2.42%)</title><rect x="597.2" y="483.0" width="28.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="600.2" y="494.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (147 samples, 2.35%)</title><rect x="597.9" y="467.0" width="27.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.9" y="478.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (111 samples, 1.78%)</title><rect x="599.4" y="451.0" width="21.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="602.4" y="462.0"></text>
</g>
<g>
<title>__ip_queue_xmit (107 samples, 1.71%)</title><rect x="600.0" y="435.0" width="20.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="603.0" y="446.0"></text>
</g>
<g>
<title>ip_output (107 samples, 1.71%)</title><rect x="600.0" y="419.0" width="20.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="603.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (104 samples, 1.66%)</title><rect x="600.2" y="403.0" width="19.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.16%)</title><rect x="600.6" y="387.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="603.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.08%)</title><rect x="601.3" y="371.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="604.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="601.7" y="355.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="604.7" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (92 samples, 1.47%)</title><rect x="602.5" y="387.0" width="17.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="605.5" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (92 samples, 1.47%)</title><rect x="602.5" y="371.0" width="17.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.5" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (91 samples, 1.46%)</title><rect x="602.6" y="355.0" width="17.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="605.6" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (91 samples, 1.46%)</title><rect x="602.6" y="339.0" width="17.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (85 samples, 1.36%)</title><rect x="603.8" y="323.0" width="16.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="606.8" y="334.0"></text>
</g>
<g>
<title>process_backlog (82 samples, 1.31%)</title><rect x="604.3" y="307.0" width="15.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="607.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (80 samples, 1.28%)</title><rect x="604.7" y="291.0" width="15.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.7" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="604.7" y="275.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="607.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (77 samples, 1.23%)</title><rect x="605.3" y="275.0" width="14.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="608.3" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (75 samples, 1.20%)</title><rect x="605.5" y="259.0" width="14.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="608.5" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (74 samples, 1.18%)</title><rect x="605.7" y="243.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="608.7" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (74 samples, 1.18%)</title><rect x="605.7" y="227.0" width="13.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="608.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (72 samples, 1.15%)</title><rect x="606.0" y="211.0" width="13.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.0" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.06%)</title><rect x="607.9" y="195.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="610.9" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.16%)</title><rect x="608.9" y="195.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="611.9" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (8 samples, 0.13%)</title><rect x="609.3" y="179.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.3" y="190.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (8 samples, 0.13%)</title><rect x="609.3" y="163.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="612.3" y="174.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.05%)</title><rect x="610.2" y="147.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="613.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (47 samples, 0.75%)</title><rect x="610.8" y="195.0" width="8.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="613.8" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (47 samples, 0.75%)</title><rect x="610.8" y="179.0" width="8.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="613.8" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="611.0" y="163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.0" y="174.0"></text>
</g>
<g>
<title>tcp_ack (39 samples, 0.62%)</title><rect x="611.5" y="163.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.5" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.18%)</title><rect x="613.6" y="147.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="616.6" y="158.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.10%)</title><rect x="613.6" y="131.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="616.6" y="142.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.05%)</title><rect x="614.7" y="131.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="617.7" y="142.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="615.3" y="131.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="618.3" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="615.7" y="147.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="618.7" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="616.2" y="147.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="619.2" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="616.6" y="147.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="619.6" y="158.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="617.0" y="131.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="617.7" y="147.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="620.7" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="618.1" y="147.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="621.1" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.06%)</title><rect x="618.9" y="163.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.9" y="174.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="619.1" y="147.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="622.1" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="619.3" y="131.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="622.3" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="619.8" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="622.8" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.03%)</title><rect x="619.8" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="622.8" y="398.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (2 samples, 0.03%)</title><rect x="619.8" y="371.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="622.8" y="382.0"></text>
</g>
<g>
<title>sk_wait_data (24 samples, 0.38%)</title><rect x="620.8" y="451.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="620.8" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="623.8" y="446.0"></text>
</g>
<g>
<title>wait_woken (22 samples, 0.35%)</title><rect x="621.1" y="435.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="624.1" y="446.0"></text>
</g>
<g>
<title>schedule_timeout (21 samples, 0.34%)</title><rect x="621.3" y="419.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="624.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.19%)</title><rect x="621.5" y="403.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="624.5" y="414.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="623.8" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="626.8" y="414.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.10%)</title><rect x="624.2" y="403.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="627.2" y="414.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.06%)</title><rect x="624.5" y="387.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="627.5" y="398.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.06%)</title><rect x="624.5" y="371.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="627.5" y="382.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="625.3" y="451.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="628.3" y="462.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.06%)</title><rect x="625.7" y="483.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="628.7" y="494.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.06%)</title><rect x="625.7" y="467.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="628.7" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.05%)</title><rect x="625.9" y="451.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="628.9" y="462.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.10%)</title><rect x="626.6" y="563.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="629.6" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.05%)</title><rect x="627.8" y="563.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="630.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (157 samples, 2.51%)</title><rect x="628.5" y="595.0" width="29.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.5" y="606.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.10%)</title><rect x="631.2" y="579.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.10%)</title><rect x="631.2" y="563.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.10%)</title><rect x="631.2" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.06%)</title><rect x="631.5" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.06%)</title><rect x="631.5" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.5" y="526.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (4 samples, 0.06%)</title><rect x="631.5" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.26%)</title><rect x="632.3" y="579.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.10%)</title><rect x="634.2" y="563.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.10%)</title><rect x="634.2" y="547.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="634.7" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.7" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.10%)</title><rect x="635.3" y="579.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="638.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (68 samples, 1.09%)</title><rect x="636.4" y="579.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (63 samples, 1.01%)</title><rect x="637.4" y="563.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (61 samples, 0.98%)</title><rect x="637.8" y="547.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (16 samples, 0.26%)</title><rect x="649.3" y="579.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (3 samples, 0.05%)</title><rect x="652.3" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (28 samples, 0.45%)</title><rect x="652.9" y="579.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.24%)</title><rect x="655.3" y="563.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.24%)</title><rect x="655.3" y="547.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (54 samples, 0.86%)</title><rect x="658.2" y="595.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (26 samples, 0.42%)</title><rect x="663.4" y="579.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (26 samples, 0.42%)</title><rect x="663.4" y="563.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (26 samples, 0.42%)</title><rect x="663.4" y="547.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.4" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="667.6" y="531.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="670.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (9 samples, 0.14%)</title><rect x="668.3" y="595.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="669.3" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="669.3" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (86 samples, 1.38%)</title><rect x="670.0" y="595.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.0" y="606.0"></text>
</g>
<g>
<title>setsockopt (82 samples, 1.31%)</title><rect x="670.8" y="579.0" width="15.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="673.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (75 samples, 1.20%)</title><rect x="672.1" y="563.0" width="14.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="675.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (75 samples, 1.20%)</title><rect x="672.1" y="547.0" width="14.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="675.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (64 samples, 1.02%)</title><rect x="674.2" y="531.0" width="12.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="677.2" y="542.0"></text>
</g>
<g>
<title>__sys_setsockopt (64 samples, 1.02%)</title><rect x="674.2" y="515.0" width="12.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="677.2" y="526.0"></text>
</g>
<g>
<title>security_socket_setsockopt (8 samples, 0.13%)</title><rect x="674.8" y="499.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="677.8" y="510.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (7 samples, 0.11%)</title><rect x="675.0" y="483.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="678.0" y="494.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.08%)</title><rect x="675.3" y="467.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="678.3" y="478.0"></text>
</g>
<g>
<title>sock_setsockopt (41 samples, 0.66%)</title><rect x="676.3" y="499.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.3" y="510.0"></text>
</g>
<g>
<title>__get_user_4 (5 samples, 0.08%)</title><rect x="677.4" y="483.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.4" y="494.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.11%)</title><rect x="678.4" y="483.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="681.4" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.11%)</title><rect x="678.4" y="467.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="681.4" y="478.0"></text>
</g>
<g>
<title>release_sock (9 samples, 0.14%)</title><rect x="679.7" y="483.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="682.7" y="494.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.06%)</title><rect x="680.6" y="467.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="683.6" y="478.0"></text>
</g>
<g>
<title>sock_set_timeout (14 samples, 0.22%)</title><rect x="681.4" y="483.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.4" y="494.0"></text>
</g>
<g>
<title>_copy_from_user (8 samples, 0.13%)</title><rect x="682.5" y="467.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="685.5" y="478.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.11%)</title><rect x="682.7" y="451.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="685.7" y="462.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.19%)</title><rect x="684.0" y="499.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="687.0" y="510.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.18%)</title><rect x="684.2" y="483.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="687.2" y="494.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.16%)</title><rect x="684.4" y="467.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="687.4" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (668 samples, 10.69%)</title><rect x="686.3" y="595.0" width="126.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.3" y="606.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (12 samples, 0.19%)</title><rect x="688.4" y="579.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="691.4" y="590.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (3 samples, 0.05%)</title><rect x="689.3" y="563.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="692.3" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.06%)</title><rect x="689.9" y="563.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="692.9" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (2 samples, 0.03%)</title><rect x="690.2" y="547.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="693.2" y="558.0"></text>
</g>
<g>
<title>__libc_send (638 samples, 10.21%)</title><rect x="690.6" y="579.0" width="120.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="693.6" y="590.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (626 samples, 10.02%)</title><rect x="692.9" y="563.0" width="118.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="695.9" y="574.0">entry_SYSCALL_..</text>
</g>
<g>
<title>do_syscall_64 (626 samples, 10.02%)</title><rect x="692.9" y="547.0" width="118.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="695.9" y="558.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (621 samples, 9.94%)</title><rect x="693.8" y="531.0" width="117.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="696.8" y="542.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (619 samples, 9.90%)</title><rect x="694.2" y="515.0" width="116.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.2" y="526.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="694.6" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="697.6" y="510.0"></text>
</g>
<g>
<title>sock_sendmsg (611 samples, 9.78%)</title><rect x="695.0" y="499.0" width="115.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="698.0" y="510.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.10%)</title><rect x="695.5" y="483.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="698.5" y="494.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.03%)</title><rect x="695.7" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="698.7" y="478.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.05%)</title><rect x="696.1" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="699.1" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (602 samples, 9.63%)</title><rect x="696.7" y="483.0" width="113.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="699.7" y="494.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="696.9" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="699.9" y="478.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.10%)</title><rect x="697.2" y="467.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="700.2" y="478.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="697.8" y="451.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="700.8" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (593 samples, 9.49%)</title><rect x="698.4" y="467.0" width="111.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="701.4" y="478.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__tcp_push_pending_frames (493 samples, 7.89%)</title><rect x="703.1" y="451.0" width="93.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="706.1" y="462.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_write_xmit (489 samples, 7.82%)</title><rect x="703.8" y="435.0" width="92.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.8" y="446.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (461 samples, 7.38%)</title><rect x="704.8" y="419.0" width="87.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="707.8" y="430.0">__tcp_tran..</text>
</g>
<g>
<title>__ip_queue_xmit (427 samples, 6.83%)</title><rect x="708.4" y="403.0" width="80.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="711.4" y="414.0">__ip_queu..</text>
</g>
<g>
<title>__sk_dst_check (6 samples, 0.10%)</title><rect x="708.9" y="387.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="711.9" y="398.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.10%)</title><rect x="708.9" y="371.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="711.9" y="382.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 0.16%)</title><rect x="710.1" y="387.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.1" y="398.0"></text>
</g>
<g>
<title>__ip_local_out (10 samples, 0.16%)</title><rect x="710.1" y="371.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="713.1" y="382.0"></text>
</g>
<g>
<title>ip_send_check (6 samples, 0.10%)</title><rect x="710.3" y="355.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="713.3" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="711.4" y="355.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="714.4" y="366.0"></text>
</g>
<g>
<title>ip_output (408 samples, 6.53%)</title><rect x="712.0" y="387.0" width="77.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.0" y="398.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.03%)</title><rect x="712.5" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="715.5" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (400 samples, 6.40%)</title><rect x="712.9" y="371.0" width="75.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="715.9" y="382.0">ip_finis..</text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.24%)</title><rect x="714.8" y="355.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="717.8" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.13%)</title><rect x="715.5" y="339.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="718.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.11%)</title><rect x="715.7" y="323.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="718.7" y="334.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.05%)</title><rect x="715.9" y="307.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="718.9" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.05%)</title><rect x="715.9" y="291.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="718.9" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.05%)</title><rect x="715.9" y="275.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="718.9" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="716.7" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.7" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="717.2" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="720.2" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (375 samples, 6.00%)</title><rect x="717.6" y="355.0" width="70.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="720.6" y="366.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (371 samples, 5.94%)</title><rect x="718.4" y="339.0" width="70.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="721.4" y="350.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (366 samples, 5.86%)</title><rect x="719.3" y="323.0" width="69.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="722.3" y="334.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (366 samples, 5.86%)</title><rect x="719.3" y="307.0" width="69.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="722.3" y="318.0">__softi..</text>
</g>
<g>
<title>net_rx_action (349 samples, 5.58%)</title><rect x="722.5" y="291.0" width="65.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="725.5" y="302.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (345 samples, 5.52%)</title><rect x="723.3" y="275.0" width="65.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="726.3" y="286.0">process..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (344 samples, 5.50%)</title><rect x="723.5" y="259.0" width="64.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="726.5" y="270.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.11%)</title><rect x="723.7" y="243.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv (336 samples, 5.38%)</title><rect x="725.0" y="243.0" width="63.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="728.0" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (330 samples, 5.28%)</title><rect x="725.2" y="227.0" width="62.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="728.2" y="238.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (330 samples, 5.28%)</title><rect x="725.2" y="211.0" width="62.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="728.2" y="222.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (327 samples, 5.23%)</title><rect x="725.7" y="195.0" width="61.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="728.7" y="206.0">ip_pro..</text>
</g>
<g>
<title>tcp_v4_rcv (322 samples, 5.15%)</title><rect x="726.7" y="179.0" width="60.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="729.7" y="190.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (20 samples, 0.32%)</title><rect x="729.9" y="163.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="732.9" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (5 samples, 0.08%)</title><rect x="732.7" y="147.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="735.7" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (14 samples, 0.22%)</title><rect x="733.9" y="163.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="736.9" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (14 samples, 0.22%)</title><rect x="733.9" y="147.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="736.9" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (14 samples, 0.22%)</title><rect x="733.9" y="131.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="736.9" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (7 samples, 0.11%)</title><rect x="735.2" y="115.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.2" y="126.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (3 samples, 0.05%)</title><rect x="735.9" y="99.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="738.9" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (269 samples, 4.30%)</title><rect x="736.7" y="163.0" width="50.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="739.7" y="174.0">tcp_v..</text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="736.7" y="147.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="739.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (266 samples, 4.26%)</title><rect x="737.3" y="147.0" width="50.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="740.3" y="158.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="739.5" y="131.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="742.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="740.1" y="131.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="743.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.08%)</title><rect x="740.1" y="115.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="743.1" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="740.3" y="99.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="743.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (167 samples, 2.67%)</title><rect x="741.0" y="131.0" width="31.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="744.0" y="142.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (157 samples, 2.51%)</title><rect x="742.9" y="115.0" width="29.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="745.9" y="126.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (154 samples, 2.46%)</title><rect x="743.5" y="99.0" width="29.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="746.5" y="110.0">_r..</text>
</g>
<g>
<title>tcp_ack (60 samples, 0.96%)</title><rect x="772.6" y="131.0" width="11.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="775.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.34%)</title><rect x="775.0" y="115.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="778.0" y="126.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.14%)</title><rect x="775.0" y="99.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="778.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.18%)</title><rect x="776.9" y="99.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="779.9" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (6 samples, 0.10%)</title><rect x="779.0" y="115.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="782.0" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="780.3" y="115.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="783.3" y="126.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="780.7" y="99.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="783.7" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.08%)</title><rect x="781.4" y="115.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="784.4" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="782.4" y="115.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="785.4" y="126.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="782.8" y="115.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.8" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.06%)</title><rect x="783.1" y="115.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="786.1" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.08%)</title><rect x="783.9" y="131.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="786.9" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.05%)</title><rect x="784.8" y="131.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="787.8" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.13%)</title><rect x="785.4" y="131.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="788.4" y="142.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.11%)</title><rect x="785.6" y="115.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="788.6" y="126.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.10%)</title><rect x="785.8" y="99.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="788.8" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="787.1" y="131.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="790.1" y="142.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.05%)</title><rect x="787.5" y="227.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="790.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="788.0" y="227.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="791.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="788.0" y="211.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="791.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="788.4" y="371.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="791.4" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.05%)</title><rect x="788.4" y="355.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="791.4" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (2 samples, 0.03%)</title><rect x="788.6" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="791.6" y="350.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.05%)</title><rect x="789.0" y="403.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="792.0" y="414.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="789.7" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="792.7" y="414.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="790.5" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="793.5" y="414.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.03%)</title><rect x="790.9" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="793.9" y="414.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="791.3" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="794.3" y="414.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="791.8" y="419.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="794.8" y="430.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="792.0" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="795.0" y="414.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.22%)</title><rect x="792.4" y="419.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="795.4" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="793.9" y="403.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="796.9" y="414.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="793.9" y="387.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="796.9" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="794.3" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="797.3" y="382.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="794.7" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="797.7" y="414.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.08%)</title><rect x="795.0" y="419.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="798.0" y="430.0"></text>
</g>
<g>
<title>_copy_from_iter_full (14 samples, 0.22%)</title><rect x="796.2" y="451.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="799.2" y="462.0"></text>
</g>
<g>
<title>copyin (8 samples, 0.13%)</title><rect x="796.7" y="435.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="799.7" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 0.13%)</title><rect x="796.7" y="419.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="799.7" y="430.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.05%)</title><rect x="798.2" y="435.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="801.2" y="446.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.08%)</title><rect x="798.8" y="451.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="801.8" y="462.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.08%)</title><rect x="798.8" y="435.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="801.8" y="446.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (28 samples, 0.45%)</title><rect x="799.8" y="451.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="802.8" y="462.0"></text>
</g>
<g>
<title>__alloc_skb (22 samples, 0.35%)</title><rect x="800.9" y="435.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="803.9" y="446.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.06%)</title><rect x="801.3" y="419.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.3" y="430.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.06%)</title><rect x="801.3" y="403.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="804.3" y="414.0"></text>
</g>
<g>
<title>__ksize (7 samples, 0.11%)</title><rect x="802.0" y="419.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="805.0" y="430.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.14%)</title><rect x="803.3" y="419.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="806.3" y="430.0"></text>
</g>
<g>
<title>skb_entail (7 samples, 0.11%)</title><rect x="805.0" y="451.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="808.0" y="462.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="806.0" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="809.0" y="446.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="806.4" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="809.4" y="462.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.08%)</title><rect x="806.7" y="451.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="809.7" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.16%)</title><rect x="807.7" y="451.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="810.7" y="462.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.13%)</title><rect x="808.1" y="435.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="811.1" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.08%)</title><rect x="808.6" y="419.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="811.6" y="430.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (2 samples, 0.03%)</title><rect x="809.6" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="812.6" y="462.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="809.9" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="812.9" y="462.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.06%)</title><rect x="810.3" y="499.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="813.3" y="510.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="810.3" y="483.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="813.3" y="494.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="810.7" y="467.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.7" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="811.1" y="579.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="814.1" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.08%)</title><rect x="811.5" y="579.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="814.5" y="590.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (13 samples, 0.21%)</title><rect x="812.4" y="595.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.4" y="606.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (12 samples, 0.19%)</title><rect x="814.9" y="595.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="816.7" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (838 samples, 13.41%)</title><rect x="817.1" y="627.0" width="158.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.1" y="638.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.16%)</title><rect x="821.8" y="611.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.16%)</title><rect x="821.8" y="595.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.16%)</title><rect x="821.8" y="579.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.8" y="590.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="822.6" y="563.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="825.6" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="823.2" y="563.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="826.2" y="574.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="823.2" y="547.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="826.2" y="558.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="823.2" y="531.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="826.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (773 samples, 12.37%)</title><rect x="823.7" y="611.0" width="146.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.7" y="622.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (37 samples, 0.59%)</title><rect x="823.9" y="595.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (20 samples, 0.32%)</title><rect x="827.1" y="579.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (20 samples, 0.32%)</title><rect x="827.1" y="563.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (20 samples, 0.32%)</title><rect x="827.1" y="547.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.1" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="830.1" y="531.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="833.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (735 samples, 11.76%)</title><rect x="830.9" y="595.0" width="138.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="833.9" y="606.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (735 samples, 11.76%)</title><rect x="830.9" y="579.0" width="138.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.9" y="590.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (2 samples, 0.03%)</title><rect x="831.1" y="563.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="834.1" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.03%)</title><rect x="831.5" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="834.5" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.18%)</title><rect x="831.8" y="563.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="834.8" y="574.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (3 samples, 0.05%)</title><rect x="832.0" y="547.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="835.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.06%)</title><rect x="833.2" y="547.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="836.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (718 samples, 11.49%)</title><rect x="834.1" y="563.0" width="135.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.1" y="574.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (714 samples, 11.42%)</title><rect x="834.9" y="547.0" width="134.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.9" y="558.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (16 samples, 0.26%)</title><rect x="835.4" y="531.0" width="3.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="838.4" y="542.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (2 samples, 0.03%)</title><rect x="836.2" y="515.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="839.2" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (2 samples, 0.03%)</title><rect x="836.6" y="515.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="839.6" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.11%)</title><rect x="837.1" y="515.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="840.1" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (4 samples, 0.06%)</title><rect x="837.1" y="499.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="840.1" y="510.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.05%)</title><rect x="837.9" y="499.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="840.9" y="510.0"></text>
</g>
<g>
<title>__libc_send (692 samples, 11.07%)</title><rect x="838.5" y="531.0" width="130.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="841.5" y="542.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (684 samples, 10.94%)</title><rect x="840.0" y="515.0" width="129.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="843.0" y="526.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (684 samples, 10.94%)</title><rect x="840.0" y="499.0" width="129.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="843.0" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (676 samples, 10.82%)</title><rect x="841.5" y="483.0" width="127.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="844.5" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (674 samples, 10.78%)</title><rect x="841.9" y="467.0" width="127.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="844.9" y="478.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (662 samples, 10.59%)</title><rect x="842.4" y="451.0" width="125.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="845.4" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.06%)</title><rect x="843.0" y="435.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="846.0" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.06%)</title><rect x="843.0" y="419.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="846.0" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (655 samples, 10.48%)</title><rect x="843.7" y="435.0" width="123.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="846.7" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="844.1" y="419.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="847.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="844.1" y="403.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="847.1" y="414.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="844.9" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="847.9" y="430.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="844.9" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="847.9" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (647 samples, 10.35%)</title><rect x="845.3" y="419.0" width="122.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="848.3" y="430.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="848.3" y="403.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="851.3" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="848.5" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="851.5" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (552 samples, 8.83%)</title><rect x="849.0" y="403.0" width="104.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="852.0" y="414.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_write_xmit (549 samples, 8.78%)</title><rect x="849.6" y="387.0" width="103.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="852.6" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (513 samples, 8.21%)</title><rect x="851.9" y="371.0" width="96.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="854.9" y="382.0">__tcp_trans..</text>
</g>
<g>
<title>__ip_queue_xmit (476 samples, 7.62%)</title><rect x="855.1" y="355.0" width="89.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="858.1" y="366.0">__ip_queue..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.05%)</title><rect x="856.2" y="339.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="859.2" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="856.4" y="323.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="859.4" y="334.0"></text>
</g>
<g>
<title>ip_local_out (13 samples, 0.21%)</title><rect x="856.8" y="339.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="859.8" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (13 samples, 0.21%)</title><rect x="856.8" y="323.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="859.8" y="334.0"></text>
</g>
<g>
<title>ip_send_check (7 samples, 0.11%)</title><rect x="857.3" y="307.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="860.3" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="858.7" y="307.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="861.7" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="858.8" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="861.8" y="302.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.03%)</title><rect x="858.8" y="275.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="861.8" y="286.0"></text>
</g>
<g>
<title>ip_output (454 samples, 7.26%)</title><rect x="859.2" y="339.0" width="85.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.2" y="350.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.05%)</title><rect x="860.0" y="323.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="863.0" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="860.2" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="863.2" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (438 samples, 7.01%)</title><rect x="860.5" y="323.0" width="82.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="863.5" y="334.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.30%)</title><rect x="861.7" y="307.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="864.7" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.13%)</title><rect x="862.8" y="291.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="865.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.06%)</title><rect x="863.6" y="275.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="866.6" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.06%)</title><rect x="864.3" y="291.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="867.3" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="864.7" y="275.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="867.7" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (413 samples, 6.61%)</title><rect x="865.3" y="307.0" width="77.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="868.3" y="318.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.0 (410 samples, 6.56%)</title><rect x="865.8" y="291.0" width="77.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="868.8" y="302.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (401 samples, 6.42%)</title><rect x="867.5" y="275.0" width="75.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="870.5" y="286.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (401 samples, 6.42%)</title><rect x="867.5" y="259.0" width="75.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.5" y="270.0">__softir..</text>
</g>
<g>
<title>net_rx_action (388 samples, 6.21%)</title><rect x="870.0" y="243.0" width="73.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="873.0" y="254.0">net_rx_a..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="871.5" y="227.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="874.5" y="238.0"></text>
</g>
<g>
<title>process_backlog (378 samples, 6.05%)</title><rect x="871.9" y="227.0" width="71.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="874.9" y="238.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (369 samples, 5.90%)</title><rect x="873.6" y="211.0" width="69.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="876.6" y="222.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.11%)</title><rect x="873.6" y="195.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="876.6" y="206.0"></text>
</g>
<g>
<title>ip_rcv (362 samples, 5.79%)</title><rect x="874.9" y="195.0" width="68.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="877.9" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (358 samples, 5.73%)</title><rect x="875.3" y="179.0" width="67.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="878.3" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (358 samples, 5.73%)</title><rect x="875.3" y="163.0" width="67.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="878.3" y="174.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (357 samples, 5.71%)</title><rect x="875.5" y="147.0" width="67.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="878.5" y="158.0">ip_prot..</text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.05%)</title><rect x="876.0" y="131.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="879.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (351 samples, 5.62%)</title><rect x="876.6" y="131.0" width="66.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="879.6" y="142.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (20 samples, 0.32%)</title><rect x="879.0" y="115.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="882.0" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (5 samples, 0.08%)</title><rect x="881.9" y="99.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.9" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.16%)</title><rect x="882.8" y="115.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="885.8" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (9 samples, 0.14%)</title><rect x="883.0" y="99.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.0" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (8 samples, 0.13%)</title><rect x="883.2" y="83.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="886.2" y="94.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.05%)</title><rect x="884.1" y="67.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.1" y="78.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="884.7" y="115.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="887.7" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (303 samples, 4.85%)</title><rect x="885.1" y="115.0" width="57.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="888.1" y="126.0">tcp_v4..</text>
</g>
<g>
<title>tcp_rcv_established (301 samples, 4.82%)</title><rect x="885.5" y="99.0" width="56.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="888.5" y="110.0">tcp_rc..</text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.13%)</title><rect x="887.4" y="83.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="890.4" y="94.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.13%)</title><rect x="887.4" y="67.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="890.4" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.11%)</title><rect x="887.4" y="51.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="890.4" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (171 samples, 2.74%)</title><rect x="888.9" y="83.0" width="32.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="891.9" y="94.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (166 samples, 2.66%)</title><rect x="889.8" y="67.0" width="31.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="892.8" y="78.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (166 samples, 2.66%)</title><rect x="889.8" y="51.0" width="31.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="892.8" y="62.0">_r..</text>
</g>
<g>
<title>tcp_ack (85 samples, 1.36%)</title><rect x="921.1" y="83.0" width="16.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="924.1" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (31 samples, 0.50%)</title><rect x="925.1" y="67.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="928.1" y="78.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.13%)</title><rect x="925.1" y="51.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="928.1" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="926.6" y="51.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="929.6" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="926.6" y="35.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="929.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (21 samples, 0.34%)</title><rect x="927.0" y="51.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="930.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (10 samples, 0.16%)</title><rect x="931.0" y="67.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.0" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="932.9" y="67.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.9" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="933.2" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="936.2" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="933.6" y="67.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.6" y="78.0"></text>
</g>
<g>
<title>rb_first (6 samples, 0.10%)</title><rect x="934.6" y="67.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="937.6" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.05%)</title><rect x="935.7" y="67.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="938.7" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="936.8" y="67.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="939.8" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.05%)</title><rect x="937.2" y="83.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="940.2" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (9 samples, 0.14%)</title><rect x="937.8" y="83.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="940.8" y="94.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.13%)</title><rect x="938.0" y="67.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="941.0" y="78.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.11%)</title><rect x="938.1" y="51.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.1" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (15 samples, 0.24%)</title><rect x="939.5" y="83.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.5" y="94.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.03%)</title><rect x="942.5" y="115.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.5" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.14%)</title><rect x="943.2" y="323.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="946.2" y="334.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.11%)</title><rect x="943.2" y="307.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="946.2" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.06%)</title><rect x="943.8" y="291.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="946.8" y="302.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.05%)</title><rect x="943.8" y="275.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.8" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.03%)</title><rect x="944.6" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="947.6" y="318.0"></text>
</g>
<g>
<title>__skb_clone (8 samples, 0.13%)</title><rect x="944.9" y="355.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="947.9" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (5 samples, 0.08%)</title><rect x="945.5" y="339.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="948.5" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.05%)</title><rect x="946.6" y="355.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="949.6" y="366.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="947.4" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="950.4" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.06%)</title><rect x="948.0" y="355.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="951.0" y="366.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="948.7" y="371.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="951.7" y="382.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="948.7" y="355.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="951.7" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.27%)</title><rect x="949.3" y="371.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="952.3" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.19%)</title><rect x="950.2" y="355.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="953.2" y="366.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.18%)</title><rect x="950.4" y="339.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="953.4" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="951.2" y="323.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="954.2" y="334.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="952.1" y="323.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="955.1" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.06%)</title><rect x="952.5" y="371.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="955.5" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.13%)</title><rect x="953.2" y="403.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="956.2" y="414.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.08%)</title><rect x="953.2" y="387.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="956.2" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.08%)</title><rect x="953.2" y="371.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="956.2" y="382.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.05%)</title><rect x="954.2" y="387.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="957.2" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (9 samples, 0.14%)</title><rect x="954.8" y="403.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.8" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (9 samples, 0.14%)</title><rect x="954.8" y="387.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="957.8" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (27 samples, 0.43%)</title><rect x="956.5" y="403.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="959.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (21 samples, 0.34%)</title><rect x="957.6" y="387.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="960.6" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.08%)</title><rect x="958.5" y="371.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="961.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.08%)</title><rect x="958.5" y="355.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="961.5" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (11 samples, 0.18%)</title><rect x="959.5" y="371.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="962.5" y="382.0"></text>
</g>
<g>
<title>skb_entail (9 samples, 0.14%)</title><rect x="961.6" y="403.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.6" y="414.0"></text>
</g>
<g>
<title>tcp_chrono_start (3 samples, 0.05%)</title><rect x="962.7" y="387.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="965.7" y="398.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.03%)</title><rect x="963.3" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.3" y="414.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.05%)</title><rect x="963.6" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.6" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (14 samples, 0.22%)</title><rect x="964.4" y="403.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="967.4" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (13 samples, 0.21%)</title><rect x="964.6" y="387.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="967.6" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.06%)</title><rect x="966.3" y="371.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="969.3" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (2 samples, 0.03%)</title><rect x="967.0" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="970.0" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.14%)</title><rect x="967.4" y="451.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="970.4" y="462.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.14%)</title><rect x="967.4" y="435.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="970.4" y="446.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.13%)</title><rect x="967.6" y="419.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="970.6" y="430.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="969.1" y="531.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="972.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (30 samples, 0.48%)</title><rect x="969.7" y="611.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (24 samples, 0.38%)</title><rect x="970.8" y="595.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (24 samples, 0.38%)</title><rect x="970.8" y="579.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.urlFromKey (28 samples, 0.45%)</title><rect x="975.3" y="659.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="978.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (28 samples, 0.45%)</title><rect x="975.3" y="643.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="978.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (28 samples, 0.45%)</title><rect x="975.3" y="627.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="978.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$23/1366025231.apply (23 samples, 0.37%)</title><rect x="976.3" y="611.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.3" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (5 samples, 0.08%)</title><rect x="976.3" y="595.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.proxy (3 samples, 0.05%)</title><rect x="976.7" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="979.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (18 samples, 0.29%)</title><rect x="977.2" y="595.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (40 samples, 0.64%)</title><rect x="980.6" y="691.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (40 samples, 0.64%)</title><rect x="980.6" y="675.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (15 samples, 0.24%)</title><rect x="980.6" y="659.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (25 samples, 0.40%)</title><rect x="983.5" y="659.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (25 samples, 0.40%)</title><rect x="983.5" y="643.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (25 samples, 0.40%)</title><rect x="983.5" y="627.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (117 samples, 1.87%)</title><rect x="988.4" y="723.0" width="22.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.4" y="734.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="992.3" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="995.3" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="992.3" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="995.3" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="992.3" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="995.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="992.3" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="995.3" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="992.3" y="643.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="995.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (29 samples, 0.46%)</title><rect x="992.7" y="707.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="995.7" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.06%)</title><rect x="992.7" y="691.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="995.7" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.05%)</title><rect x="992.9" y="675.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="995.9" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="992.9" y="659.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="995.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (24 samples, 0.38%)</title><rect x="993.6" y="691.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (24 samples, 0.38%)</title><rect x="993.6" y="675.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (24 samples, 0.38%)</title><rect x="993.6" y="659.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.6" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="997.6" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.6" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (40 samples, 0.64%)</title><rect x="998.2" y="707.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 0.59%)</title><rect x="998.7" y="691.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (25 samples, 0.40%)</title><rect x="1005.7" y="707.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1008.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (39 samples, 0.62%)</title><rect x="1010.5" y="723.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (26 samples, 0.42%)</title><rect x="1012.7" y="707.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (26 samples, 0.42%)</title><rect x="1012.7" y="691.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1015.7" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (6 samples, 0.10%)</title><rect x="1015.5" y="675.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1018.5" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="1016.7" y="675.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1019.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (86 samples, 1.38%)</title><rect x="1017.8" y="723.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.10%)</title><rect x="1018.2" y="707.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1021.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (78 samples, 1.25%)</title><rect x="1019.3" y="707.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1022.3" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1032.7" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1035.7" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1032.7" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1035.7" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1032.7" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1035.7" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="1033.1" y="691.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1036.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1033.5" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1033.5" y="675.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.05%)</title><rect x="1033.5" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.5" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="1033.5" y="643.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1036.5" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1033.5" y="627.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1036.5" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1033.5" y="611.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1036.5" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="1033.5" y="595.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1036.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (757 samples, 12.11%)</title><rect x="1034.1" y="739.0" width="142.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1037.1" y="750.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (754 samples, 12.06%)</title><rect x="1034.6" y="723.0" width="142.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1037.6" y="734.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (106 samples, 1.70%)</title><rect x="1040.1" y="707.0" width="20.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1043.1" y="718.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (18 samples, 0.29%)</title><rect x="1042.4" y="691.0" width="3.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1045.4" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.06%)</title><rect x="1045.8" y="691.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.8" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (4 samples, 0.06%)</title><rect x="1046.7" y="691.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1049.7" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (63 samples, 1.01%)</title><rect x="1047.6" y="691.0" width="11.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1050.6" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (15 samples, 0.24%)</title><rect x="1048.8" y="675.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1051.8" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="1051.6" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1054.6" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (15 samples, 0.24%)</title><rect x="1052.2" y="675.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1055.2" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (24 samples, 0.38%)</title><rect x="1055.0" y="675.0" width="4.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1058.0" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (18 samples, 0.29%)</title><rect x="1056.1" y="659.0" width="3.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1059.1" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="1059.5" y="691.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1062.5" y="702.0"></text>
</g>
<g>
<title>__libc_recv (605 samples, 9.68%)</title><rect x="1060.1" y="707.0" width="114.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1063.1" y="718.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (586 samples, 9.38%)</title><rect x="1063.7" y="691.0" width="110.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1066.7" y="702.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (586 samples, 9.38%)</title><rect x="1063.7" y="675.0" width="110.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.7" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_recvfrom (557 samples, 8.91%)</title><rect x="1069.0" y="659.0" width="105.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1072.0" y="670.0">__x64_sys_rec..</text>
</g>
<g>
<title>__sys_recvfrom (554 samples, 8.86%)</title><rect x="1069.5" y="643.0" width="104.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1072.5" y="654.0">__sys_recvfrom</text>
</g>
<g>
<title>fput_many (5 samples, 0.08%)</title><rect x="1070.9" y="627.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1073.9" y="638.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.06%)</title><rect x="1071.8" y="627.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1074.8" y="638.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (470 samples, 7.52%)</title><rect x="1072.6" y="627.0" width="88.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1075.6" y="638.0">inet6_recv..</text>
</g>
<g>
<title>tcp_recvmsg (446 samples, 7.14%)</title><rect x="1077.1" y="611.0" width="84.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.1" y="622.0">tcp_recvmsg</text>
</g>
<g>
<title>__kfree_skb (51 samples, 0.82%)</title><rect x="1096.2" y="595.0" width="9.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1099.2" y="606.0"></text>
</g>
<g>
<title>skb_release_all (44 samples, 0.70%)</title><rect x="1096.7" y="579.0" width="8.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1099.7" y="590.0"></text>
</g>
<g>
<title>skb_release_head_state (43 samples, 0.69%)</title><rect x="1096.9" y="563.0" width="8.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1099.9" y="574.0"></text>
</g>
<g>
<title>dst_release (30 samples, 0.48%)</title><rect x="1097.1" y="547.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1100.1" y="558.0"></text>
</g>
<g>
<title>sock_rfree (12 samples, 0.19%)</title><rect x="1102.8" y="547.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1105.8" y="558.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.06%)</title><rect x="1105.0" y="579.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1108.0" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.06%)</title><rect x="1105.8" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1108.8" y="606.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="1106.7" y="595.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1109.7" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="1107.3" y="595.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1110.3" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1107.5" y="579.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1110.5" y="590.0"></text>
</g>
<g>
<title>release_sock (11 samples, 0.18%)</title><rect x="1108.1" y="595.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1111.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1108.6" y="579.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1111.6" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.08%)</title><rect x="1109.2" y="579.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1112.2" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (215 samples, 3.44%)</title><rect x="1110.1" y="595.0" width="40.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1113.1" y="606.0">skb..</text>
</g>
<g>
<title>__skb_datagram_iter (205 samples, 3.28%)</title><rect x="1112.0" y="579.0" width="38.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1115.0" y="590.0">__s..</text>
</g>
<g>
<title>_copy_to_iter (73 samples, 1.17%)</title><rect x="1127.1" y="563.0" width="13.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1130.1" y="574.0"></text>
</g>
<g>
<title>copyout (68 samples, 1.09%)</title><rect x="1128.1" y="547.0" width="12.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1131.1" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_string (68 samples, 1.09%)</title><rect x="1128.1" y="531.0" width="12.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1131.1" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (52 samples, 0.83%)</title><rect x="1140.9" y="563.0" width="9.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1143.9" y="574.0"></text>
</g>
<g>
<title>__check_object_size (52 samples, 0.83%)</title><rect x="1140.9" y="547.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1143.9" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (11 samples, 0.18%)</title><rect x="1148.5" y="531.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1151.5" y="542.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (18 samples, 0.29%)</title><rect x="1150.7" y="595.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1153.7" y="606.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.06%)</title><rect x="1153.4" y="579.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1156.4" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (38 samples, 0.61%)</title><rect x="1154.1" y="595.0" width="7.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1157.1" y="606.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (31 samples, 0.50%)</title><rect x="1155.4" y="579.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1158.4" y="590.0"></text>
</g>
<g>
<title>ktime_get (29 samples, 0.46%)</title><rect x="1155.8" y="563.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1158.8" y="574.0"></text>
</g>
<g>
<title>read_tsc (23 samples, 0.37%)</title><rect x="1157.0" y="547.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1160.0" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (31 samples, 0.50%)</title><rect x="1161.3" y="627.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1164.3" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (29 samples, 0.46%)</title><rect x="1161.7" y="611.0" width="5.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1164.7" y="622.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (4 samples, 0.06%)</title><rect x="1161.9" y="595.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1164.9" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (24 samples, 0.38%)</title><rect x="1162.6" y="595.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1165.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (37 samples, 0.59%)</title><rect x="1167.2" y="627.0" width="6.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1170.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (33 samples, 0.53%)</title><rect x="1167.9" y="611.0" width="6.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1170.9" y="622.0"></text>
</g>
<g>
<title>__fget (22 samples, 0.35%)</title><rect x="1170.0" y="595.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.0" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="1174.3" y="707.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1177.3" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="1174.9" y="707.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1177.9" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.11%)</title><rect x="1175.3" y="707.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1178.3" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (12 samples, 0.19%)</title><rect x="1177.0" y="771.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.0" y="782.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.16%)</title><rect x="1177.4" y="755.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1180.4" y="766.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.11%)</title><rect x="1177.9" y="739.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1180.9" y="750.0"></text>
</g>
<g>
<title>start_thread (57 samples, 0.91%)</title><rect x="1179.2" y="787.0" width="10.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1182.2" y="798.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (57 samples, 0.91%)</title><rect x="1179.2" y="771.0" width="10.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1182.2" y="782.0"></text>
</g>
<g>
<title>Thread::call_run() (57 samples, 0.91%)</title><rect x="1179.2" y="755.0" width="10.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.2" y="766.0"></text>
</g>
<g>
<title>GangWorker::loop() (50 samples, 0.80%)</title><rect x="1179.2" y="739.0" width="9.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.2" y="750.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1179.2" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.2" y="734.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (48 samples, 0.77%)</title><rect x="1179.6" y="723.0" width="9.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.6" y="734.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (25 samples, 0.40%)</title><rect x="1179.6" y="707.0" width="4.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.6" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.13%)</title><rect x="1179.6" y="691.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.6" y="702.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.08%)</title><rect x="1180.2" y="675.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.2" y="686.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1180.7" y="659.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.7" y="670.0"></text>
</g>
<g>
<title>SpinPause (16 samples, 0.26%)</title><rect x="1181.3" y="691.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1184.3" y="702.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (18 samples, 0.29%)</title><rect x="1184.3" y="707.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.3" y="718.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (18 samples, 0.29%)</title><rect x="1184.3" y="691.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.3" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (18 samples, 0.29%)</title><rect x="1184.3" y="675.0" width="3.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.3" y="686.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (18 samples, 0.29%)</title><rect x="1184.3" y="659.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.3" y="670.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (17 samples, 0.27%)</title><rect x="1184.3" y="643.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.3" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (8 samples, 0.13%)</title><rect x="1184.5" y="627.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.5" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.10%)</title><rect x="1184.9" y="611.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.9" y="622.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1185.7" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.7" y="606.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (8 samples, 0.13%)</title><rect x="1186.0" y="627.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.0" y="638.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (7 samples, 0.11%)</title><rect x="1186.0" y="611.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="622.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.03%)</title><rect x="1186.2" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.2" y="606.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.05%)</title><rect x="1186.6" y="595.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.6" y="606.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.06%)</title><rect x="1187.9" y="707.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.9" y="718.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.05%)</title><rect x="1187.9" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.9" y="702.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.05%)</title><rect x="1187.9" y="675.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.9" y="686.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.05%)</title><rect x="1187.9" y="659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.9" y="670.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (5 samples, 0.08%)</title><rect x="1188.7" y="739.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.7" y="750.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5 samples, 0.08%)</title><rect x="1188.7" y="723.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 0.08%)</title><rect x="1188.7" y="707.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 0.08%)</title><rect x="1188.7" y="691.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples, 0.08%)</title><rect x="1188.7" y="675.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.05%)</title><rect x="1188.7" y="659.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.05%)</title><rect x="1188.7" y="643.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.6" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.6" y="750.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.6" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.6" y="734.0"></text>
</g>
</g>
</svg>
