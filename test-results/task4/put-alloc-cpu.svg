<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="325"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="325"> </text>
<g id="frames">
<g>
<title>all (24,763 samples, 100.00%)</title><rect x="10.0" y="291.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="302.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (16,677 samples, 67.35%)</title><rect x="10.0" y="275.0" width="794.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="286.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16,677 samples, 67.35%)</title><rect x="10.0" y="259.0" width="794.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="270.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16,677 samples, 67.35%)</title><rect x="10.0" y="243.0" width="794.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="254.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (886 samples, 3.58%)</title><rect x="10.0" y="227.0" width="42.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="238.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (886 samples, 3.58%)</title><rect x="10.0" y="211.0" width="42.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="222.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (884 samples, 3.57%)</title><rect x="10.0" y="195.0" width="42.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="206.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (884 samples, 3.57%)</title><rect x="10.0" y="179.0" width="42.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="190.0">java..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (884 samples, 3.57%)</title><rect x="10.0" y="163.0" width="42.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="174.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$66/2114737454.run (7,688 samples, 31.05%)</title><rect x="52.2" y="227.0" width="366.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.2" y="238.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$operation$1 (7,688 samples, 31.05%)</title><rect x="52.2" y="211.0" width="366.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.2" y="222.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,438 samples, 5.81%)</title><rect x="52.2" y="195.0" width="68.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.2" y="206.0">java/ni..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,438 samples, 5.81%)</title><rect x="52.2" y="179.0" width="68.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.2" y="190.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,438 samples, 5.81%)</title><rect x="52.2" y="163.0" width="68.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="55.2" y="174.0">java.ni..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.doUpsert (6,250 samples, 25.24%)</title><rect x="120.7" y="195.0" width="297.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.7" y="206.0">ru/mail/polis/service/s3ponia/AsyncServi..</text>
</g>
<g>
<title>one.nio.http.Response (566 samples, 2.29%)</title><rect x="120.7" y="179.0" width="27.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="123.7" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,775 samples, 11.21%)</title><rect x="147.7" y="179.0" width="132.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.7" y="190.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,775 samples, 11.21%)</title><rect x="147.7" y="163.0" width="132.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.7" y="174.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,883 samples, 7.60%)</title><rect x="147.7" y="147.0" width="89.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.7" y="158.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,883 samples, 7.60%)</title><rect x="147.7" y="131.0" width="89.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.7" y="142.0">one/nio/ut..</text>
</g>
<g>
<title>byte[] (1,378 samples, 5.56%)</title><rect x="147.7" y="115.0" width="65.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="150.7" y="126.0">byte[]</text>
</g>
<g>
<title>byte[] (505 samples, 2.04%)</title><rect x="213.4" y="115.0" width="24.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="216.4" y="126.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (892 samples, 3.60%)</title><rect x="237.4" y="147.0" width="42.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.4" y="158.0">one/..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (892 samples, 3.60%)</title><rect x="237.4" y="131.0" width="42.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="240.4" y="142.0">one...</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,188 samples, 8.84%)</title><rect x="279.9" y="179.0" width="104.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.9" y="190.0">one/nio/http..</text>
</g>
<g>
<title>byte[] (926 samples, 3.74%)</title><rect x="279.9" y="163.0" width="44.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="282.9" y="174.0">byte[]</text>
</g>
<g>
<title>java.lang.String[] (724 samples, 2.92%)</title><rect x="324.1" y="163.0" width="34.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="327.1" y="174.0">ja..</text>
</g>
<g>
<title>java.lang.String (538 samples, 2.17%)</title><rect x="358.6" y="163.0" width="25.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="361.6" y="174.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsert (721 samples, 2.91%)</title><rect x="384.2" y="179.0" width="34.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.2" y="190.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (8 samples, 0.03%)</title><rect x="384.2" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (8 samples, 0.03%)</title><rect x="384.2" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (8 samples, 0.03%)</title><rect x="384.2" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.2" y="142.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.03%)</title><rect x="384.2" y="115.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.2" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (7 samples, 0.03%)</title><rect x="384.2" y="99.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsert (713 samples, 2.88%)</title><rect x="384.6" y="163.0" width="34.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.6" y="174.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.of (713 samples, 2.88%)</title><rect x="384.6" y="147.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.6" y="158.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.dao.s3ponia.Table$Value (713 samples, 2.88%)</title><rect x="384.6" y="131.0" width="34.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="387.6" y="142.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$72/119037835.run (8,103 samples, 32.72%)</title><rect x="418.6" y="227.0" width="386.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="421.6" y="238.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda$72..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$operation$2 (8,103 samples, 32.72%)</title><rect x="418.6" y="211.0" width="386.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.6" y="222.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$ope..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.proxy (8,103 samples, 32.72%)</title><rect x="418.6" y="195.0" width="386.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.6" y="206.0">ru/mail/polis/service/s3ponia/AsyncService.proxy</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.19%)</title><rect x="418.6" y="179.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/769429195.invoke (47 samples, 0.19%)</title><rect x="418.6" y="163.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="421.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.19%)</title><rect x="418.6" y="147.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="421.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (6 samples, 0.02%)</title><rect x="418.6" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.02%)</title><rect x="418.6" y="115.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="421.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (41 samples, 0.17%)</title><rect x="418.9" y="131.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (41 samples, 0.17%)</title><rect x="418.9" y="115.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.9" y="126.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.17%)</title><rect x="418.9" y="99.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="421.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (8,008 samples, 32.34%)</title><rect x="420.8" y="179.0" width="381.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.8" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (8,008 samples, 32.34%)</title><rect x="420.8" y="163.0" width="381.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="423.8" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (14 samples, 0.06%)</title><rect x="420.8" y="147.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="423.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (7,577 samples, 30.60%)</title><rect x="421.5" y="147.0" width="361.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.5" y="158.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (2,878 samples, 11.62%)</title><rect x="421.5" y="131.0" width="137.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="424.5" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (4,699 samples, 18.98%)</title><rect x="558.6" y="131.0" width="223.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="561.6" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (321 samples, 1.30%)</title><rect x="782.5" y="147.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.5" y="158.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="782.5" y="131.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="785.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.10%)</title><rect x="782.9" y="131.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.10%)</title><rect x="782.9" y="115.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="782.9" y="99.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="785.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.05%)</title><rect x="783.6" y="99.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="786.6" y="110.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="783.6" y="83.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="786.6" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.03%)</title><rect x="784.2" y="131.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="787.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (264 samples, 1.07%)</title><rect x="784.5" y="131.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (264 samples, 1.07%)</title><rect x="784.5" y="115.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (264 samples, 1.07%)</title><rect x="784.5" y="99.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.5" y="110.0"></text>
</g>
<g>
<title>char[] (185 samples, 0.75%)</title><rect x="784.5" y="83.0" width="8.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="787.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.13%)</title><rect x="793.3" y="83.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="796.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.19%)</title><rect x="794.9" y="83.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.19%)</title><rect x="794.9" y="67.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.9" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (46 samples, 0.19%)</title><rect x="794.9" y="51.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.9" y="62.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.19%)</title><rect x="794.9" y="35.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="797.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.04%)</title><rect x="797.1" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.04%)</title><rect x="797.1" y="115.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="800.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.03%)</title><rect x="797.5" y="131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.03%)</title><rect x="797.5" y="115.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.03%)</title><rect x="797.5" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.5" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (59 samples, 0.24%)</title><rect x="797.8" y="147.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.8" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (59 samples, 0.24%)</title><rect x="797.8" y="131.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.8" y="142.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.24%)</title><rect x="797.8" y="115.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="800.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (30 samples, 0.12%)</title><rect x="800.6" y="147.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.12%)</title><rect x="800.6" y="131.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.12%)</title><rect x="800.6" y="115.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="803.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.04%)</title><rect x="800.6" y="99.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="803.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.08%)</title><rect x="801.1" y="99.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.1" y="110.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.08%)</title><rect x="801.1" y="83.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="804.1" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (7 samples, 0.03%)</title><rect x="802.1" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.1" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (7 samples, 0.03%)</title><rect x="802.1" y="131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.1" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (7 samples, 0.03%)</title><rect x="802.1" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.1" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (7 samples, 0.03%)</title><rect x="802.1" y="99.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="805.1" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 0.19%)</title><rect x="802.4" y="179.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (48 samples, 0.19%)</title><rect x="802.4" y="163.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (38 samples, 0.15%)</title><rect x="802.4" y="147.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.4" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (38 samples, 0.15%)</title><rect x="802.4" y="131.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.4" y="142.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.15%)</title><rect x="802.4" y="115.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="805.4" y="126.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 0.04%)</title><rect x="804.2" y="147.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.2" y="158.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (10 samples, 0.04%)</title><rect x="804.2" y="131.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="807.2" y="142.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (56 samples, 0.23%)</title><rect x="804.7" y="275.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (56 samples, 0.23%)</title><rect x="804.7" y="259.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (56 samples, 0.23%)</title><rect x="804.7" y="243.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (55 samples, 0.22%)</title><rect x="804.7" y="227.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.7" y="238.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.04%)</title><rect x="804.7" y="211.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="807.7" y="222.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.19%)</title><rect x="805.2" y="211.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="808.2" y="222.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,030 samples, 32.43%)</title><rect x="807.4" y="275.0" width="382.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.4" y="286.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (195 samples, 0.79%)</title><rect x="807.4" y="259.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.4" y="270.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (195 samples, 0.79%)</title><rect x="807.4" y="243.0" width="9.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="810.4" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7,835 samples, 31.64%)</title><rect x="816.6" y="259.0" width="373.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.6" y="270.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7,835 samples, 31.64%)</title><rect x="816.6" y="243.0" width="373.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.6" y="254.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7,835 samples, 31.64%)</title><rect x="816.6" y="227.0" width="373.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.6" y="238.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,924 samples, 7.77%)</title><rect x="816.6" y="211.0" width="91.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.6" y="222.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,924 samples, 7.77%)</title><rect x="816.6" y="195.0" width="91.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.6" y="206.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1,462 samples, 5.90%)</title><rect x="816.6" y="179.0" width="69.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.6" y="190.0">Request..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (431 samples, 1.74%)</title><rect x="816.6" y="163.0" width="20.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (431 samples, 1.74%)</title><rect x="816.6" y="147.0" width="20.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (431 samples, 1.74%)</title><rect x="816.6" y="131.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (431 samples, 1.74%)</title><rect x="816.6" y="115.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (227 samples, 0.92%)</title><rect x="816.6" y="99.0" width="10.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="819.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (204 samples, 0.82%)</title><rect x="827.5" y="99.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.5" y="110.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.82%)</title><rect x="827.5" y="83.0" width="9.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="830.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.put (1,031 samples, 4.16%)</title><rect x="837.2" y="163.0" width="49.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.2" y="174.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (232 samples, 0.94%)</title><rect x="837.2" y="147.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (232 samples, 0.94%)</title><rect x="837.2" y="131.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (232 samples, 0.94%)</title><rect x="837.2" y="115.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.2" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (232 samples, 0.94%)</title><rect x="837.2" y="99.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.2" y="110.0"></text>
</g>
<g>
<title>byte[] (232 samples, 0.94%)</title><rect x="837.2" y="83.0" width="11.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="840.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (401 samples, 1.62%)</title><rect x="848.2" y="147.0" width="19.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.2" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (401 samples, 1.62%)</title><rect x="848.2" y="131.0" width="19.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (401 samples, 1.62%)</title><rect x="848.2" y="115.0" width="19.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="851.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.operation (398 samples, 1.61%)</title><rect x="867.4" y="147.0" width="18.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050219575.linkToTargetMethod (285 samples, 1.15%)</title><rect x="867.4" y="131.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="870.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (285 samples, 1.15%)</title><rect x="867.4" y="115.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="870.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$66/2114737454.get$Lambda (211 samples, 0.85%)</title><rect x="867.4" y="99.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.s3ponia.AsyncService$$Lambda$66 (211 samples, 0.85%)</title><rect x="867.4" y="83.0" width="10.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="870.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$72/119037835.get$Lambda (74 samples, 0.30%)</title><rect x="877.4" y="99.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.4" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.s3ponia.AsyncService$$Lambda$72 (74 samples, 0.30%)</title><rect x="877.4" y="83.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="880.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.04%)</title><rect x="880.9" y="131.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (103 samples, 0.42%)</title><rect x="881.4" y="131.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="884.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (103 samples, 0.42%)</title><rect x="881.4" y="115.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$20/135184888.apply (103 samples, 0.42%)</title><rect x="881.4" y="99.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.4" y="110.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (103 samples, 0.42%)</title><rect x="881.4" y="83.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.4" y="94.0"></text>
</g>
<g>
<title>java.lang.Integer (103 samples, 0.42%)</title><rect x="881.4" y="67.0" width="4.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="884.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (462 samples, 1.87%)</title><rect x="886.3" y="179.0" width="22.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.3" y="190.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (462 samples, 1.87%)</title><rect x="886.3" y="163.0" width="22.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.3" y="174.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (462 samples, 1.87%)</title><rect x="886.3" y="147.0" width="22.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.3" y="158.0">j..</text>
</g>
<g>
<title>java.lang.String (206 samples, 0.83%)</title><rect x="886.3" y="131.0" width="9.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="889.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (256 samples, 1.03%)</title><rect x="896.1" y="131.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.1" y="142.0"></text>
</g>
<g>
<title>byte[] (256 samples, 1.03%)</title><rect x="896.1" y="115.0" width="12.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="899.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,325 samples, 9.39%)</title><rect x="908.3" y="211.0" width="110.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.3" y="222.0">one/nio/http/..</text>
</g>
<g>
<title>one.nio.http.Request (312 samples, 1.26%)</title><rect x="908.3" y="195.0" width="14.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="911.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (742 samples, 3.00%)</title><rect x="923.2" y="195.0" width="35.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="926.2" y="206.0">one..</text>
</g>
<g>
<title>java.lang.String[] (742 samples, 3.00%)</title><rect x="923.2" y="179.0" width="35.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="926.2" y="190.0">jav..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,271 samples, 5.13%)</title><rect x="958.6" y="195.0" width="60.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="961.6" y="206.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,271 samples, 5.13%)</title><rect x="958.6" y="179.0" width="60.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.6" y="190.0">one/ni..</text>
</g>
<g>
<title>char[] (745 samples, 3.01%)</title><rect x="958.6" y="163.0" width="35.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="961.6" y="174.0">cha..</text>
</g>
<g>
<title>java.lang.String (218 samples, 0.88%)</title><rect x="994.1" y="163.0" width="10.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="997.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (308 samples, 1.24%)</title><rect x="1004.4" y="163.0" width="14.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1007.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (308 samples, 1.24%)</title><rect x="1004.4" y="147.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (308 samples, 1.24%)</title><rect x="1004.4" y="131.0" width="14.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.4" y="142.0"></text>
</g>
<g>
<title>byte[] (308 samples, 1.24%)</title><rect x="1004.4" y="115.0" width="14.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1007.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (250 samples, 1.01%)</title><rect x="1019.1" y="211.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1022.1" y="222.0"></text>
</g>
<g>
<title>byte[] (250 samples, 1.01%)</title><rect x="1019.1" y="195.0" width="11.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1022.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (398 samples, 1.61%)</title><rect x="1031.0" y="211.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (398 samples, 1.61%)</title><rect x="1031.0" y="195.0" width="19.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (398 samples, 1.61%)</title><rect x="1031.0" y="179.0" width="19.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String (177 samples, 0.71%)</title><rect x="1031.0" y="163.0" width="8.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1034.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (221 samples, 0.89%)</title><rect x="1039.5" y="163.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.5" y="174.0"></text>
</g>
<g>
<title>byte[] (221 samples, 0.89%)</title><rect x="1039.5" y="147.0" width="10.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1042.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,938 samples, 11.86%)</title><rect x="1050.0" y="211.0" width="140.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.0" y="222.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,938 samples, 11.86%)</title><rect x="1050.0" y="195.0" width="140.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.0" y="206.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>char[] (1,396 samples, 5.64%)</title><rect x="1050.0" y="179.0" width="66.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1053.0" y="190.0">char[]</text>
</g>
<g>
<title>java.lang.String (506 samples, 2.04%)</title><rect x="1116.5" y="179.0" width="24.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1119.5" y="190.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,036 samples, 4.18%)</title><rect x="1140.6" y="179.0" width="49.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.6" y="190.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,036 samples, 4.18%)</title><rect x="1140.6" y="163.0" width="49.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.6" y="174.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,036 samples, 4.18%)</title><rect x="1140.6" y="147.0" width="49.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.6" y="158.0">java/..</text>
</g>
<g>
<title>byte[] (1,036 samples, 4.18%)</title><rect x="1140.6" y="131.0" width="49.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1143.6" y="142.0">byte[]</text>
</g>
</g>
</svg>
