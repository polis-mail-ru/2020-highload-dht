<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="821"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="821"> </text>
<g id="frames">
<g>
<title>all (399 samples, 100.00%)</title><rect x="10.0" y="787.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="798.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 1.50%)</title><rect x="10.0" y="771.0" width="17.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 1.50%)</title><rect x="10.0" y="755.0" width="17.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.94] (6 samples, 1.50%)</title><rect x="10.0" y="739.0" width="17.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 1.50%)</title><rect x="10.0" y="723.0" width="17.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (6 samples, 1.50%)</title><rect x="10.0" y="707.0" width="17.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>[no_Java_frame] (3 samples, 0.75%)</title><rect x="27.7" y="771.0" width="8.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="30.7" y="782.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.25%)</title><rect x="36.6" y="771.0" width="3.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="39.6" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.25%)</title><rect x="36.6" y="755.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="39.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (142 samples, 35.59%)</title><rect x="39.6" y="771.0" width="419.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.6" y="782.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (142 samples, 35.59%)</title><rect x="39.6" y="755.0" width="419.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.6" y="766.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (142 samples, 35.59%)</title><rect x="39.6" y="739.0" width="419.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.6" y="750.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.25%)</title><rect x="51.4" y="723.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.25%)</title><rect x="54.4" y="723.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.25%)</title><rect x="54.4" y="707.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.4" y="718.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.25%)</title><rect x="54.4" y="691.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="57.4" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.25%)</title><rect x="54.4" y="675.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="57.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (31 samples, 7.77%)</title><rect x="57.3" y="723.0" width="91.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.3" y="734.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (31 samples, 7.77%)</title><rect x="57.3" y="707.0" width="91.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.3" y="718.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 2.76%)</title><rect x="63.2" y="691.0" width="32.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.2" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.25%)</title><rect x="63.2" y="675.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.isHeldExclusively (1 samples, 0.25%)</title><rect x="63.2" y="659.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 1.50%)</title><rect x="66.2" y="675.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 1.50%)</title><rect x="66.2" y="659.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 1.50%)</title><rect x="66.2" y="643.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 1.50%)</title><rect x="66.2" y="627.0" width="17.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 1.50%)</title><rect x="66.2" y="611.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.2" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 1.50%)</title><rect x="66.2" y="595.0" width="17.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="69.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.25%)</title><rect x="69.1" y="579.0" width="14.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="72.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.25%)</title><rect x="69.1" y="563.0" width="14.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="72.1" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.25%)</title><rect x="69.1" y="547.0" width="14.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="72.1" y="558.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.25%)</title><rect x="69.1" y="531.0" width="14.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="72.1" y="542.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 1.00%)</title><rect x="72.1" y="515.0" width="11.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="75.1" y="526.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 1.00%)</title><rect x="72.1" y="499.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="75.1" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 1.00%)</title><rect x="72.1" y="483.0" width="11.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 1.00%)</title><rect x="72.1" y="467.0" width="11.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="75.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 1.00%)</title><rect x="83.9" y="675.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 1.00%)</title><rect x="83.9" y="659.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.00%)</title><rect x="83.9" y="643.0" width="11.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="86.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 1.00%)</title><rect x="83.9" y="627.0" width="11.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="86.9" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.00%)</title><rect x="83.9" y="611.0" width="11.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="86.9" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.00%)</title><rect x="83.9" y="595.0" width="11.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.75%)</title><rect x="86.9" y="579.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="89.9" y="590.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.75%)</title><rect x="86.9" y="563.0" width="8.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="89.9" y="574.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.75%)</title><rect x="86.9" y="547.0" width="8.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.9" y="558.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.50%)</title><rect x="89.8" y="531.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="92.8" y="542.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.25%)</title><rect x="92.8" y="515.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="95.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.50%)</title><rect x="95.8" y="691.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.50%)</title><rect x="95.8" y="675.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.25%)</title><rect x="98.7" y="659.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.25%)</title><rect x="98.7" y="643.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 4.01%)</title><rect x="101.7" y="691.0" width="47.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.7" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 4.01%)</title><rect x="101.7" y="675.0" width="47.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.7" y="686.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 4.01%)</title><rect x="101.7" y="659.0" width="47.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.7" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 4.01%)</title><rect x="101.7" y="643.0" width="47.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.7" y="654.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 4.01%)</title><rect x="101.7" y="627.0" width="47.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.7" y="638.0">jdk/..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.25%)</title><rect x="101.7" y="611.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="104.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.75%)</title><rect x="104.6" y="611.0" width="8.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="107.6" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.25%)</title><rect x="107.6" y="595.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.6" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.25%)</title><rect x="110.6" y="595.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="113.6" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 3.01%)</title><rect x="113.5" y="611.0" width="35.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="116.5" y="622.0">pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 2.76%)</title><rect x="116.5" y="595.0" width="32.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="119.5" y="606.0">en..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 2.76%)</title><rect x="116.5" y="579.0" width="32.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.5" y="590.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 2.76%)</title><rect x="116.5" y="563.0" width="32.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="119.5" y="574.0">__..</text>
</g>
<g>
<title>do_futex (10 samples, 2.51%)</title><rect x="119.4" y="547.0" width="29.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.4" y="558.0">do..</text>
</g>
<g>
<title>futex_wake (10 samples, 2.51%)</title><rect x="119.4" y="531.0" width="29.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="122.4" y="542.0">fu..</text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.25%)</title><rect x="125.3" y="515.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="128.3" y="526.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 1.75%)</title><rect x="128.3" y="515.0" width="20.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="131.3" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 1.75%)</title><rect x="128.3" y="499.0" width="20.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="131.3" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 1.75%)</title><rect x="128.3" y="483.0" width="20.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="131.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.25%)</title><rect x="149.0" y="723.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$67/1986473740.run (104 samples, 26.07%)</title><rect x="152.0" y="723.0" width="307.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.0" y="734.0">ru/mail/polis/service/s3ponia/AsyncServic..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$put$3 (104 samples, 26.07%)</title><rect x="152.0" y="707.0" width="307.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.0" y="718.0">ru/mail/polis/service/s3ponia/AsyncServic..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.upsert (104 samples, 26.07%)</title><rect x="152.0" y="691.0" width="307.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.0" y="702.0">ru/mail/polis/service/s3ponia/AsyncServic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (81 samples, 20.30%)</title><rect x="154.9" y="675.0" width="239.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.9" y="686.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 1.25%)</title><rect x="163.8" y="659.0" width="14.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="166.8" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 1.25%)</title><rect x="163.8" y="643.0" width="14.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="166.8" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 1.25%)</title><rect x="163.8" y="627.0" width="14.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="166.8" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (5 samples, 1.25%)</title><rect x="163.8" y="611.0" width="14.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="166.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.25%)</title><rect x="178.6" y="659.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.25%)</title><rect x="178.6" y="643.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.25%)</title><rect x="178.6" y="627.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.6" y="638.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.25%)</title><rect x="178.6" y="611.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="181.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (70 samples, 17.54%)</title><rect x="181.5" y="659.0" width="207.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.5" y="670.0">one/nio/http/HttpSession.wr..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.25%)</title><rect x="181.5" y="643.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 17.29%)</title><rect x="184.5" y="643.0" width="204.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.5" y="654.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 17.29%)</title><rect x="184.5" y="627.0" width="204.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.5" y="638.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (68 samples, 17.04%)</title><rect x="187.4" y="611.0" width="201.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.4" y="622.0">one/nio/net/Session$ArrayQ..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (68 samples, 17.04%)</title><rect x="187.4" y="595.0" width="201.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.4" y="606.0">one/nio/net/NativeSocket.w..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.50%)</title><rect x="187.4" y="579.0" width="6.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="190.4" y="590.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1 samples, 0.25%)</title><rect x="187.4" y="563.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="190.4" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="190.4" y="563.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="193.4" y="574.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.25%)</title><rect x="190.4" y="547.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="193.4" y="558.0"></text>
</g>
<g>
<title>__libc_send (66 samples, 16.54%)</title><rect x="193.4" y="579.0" width="195.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="196.4" y="590.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 16.54%)</title><rect x="193.4" y="563.0" width="195.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="196.4" y="574.0">entry_SYSCALL_64_after_hw..</text>
</g>
<g>
<title>do_syscall_64 (66 samples, 16.54%)</title><rect x="193.4" y="547.0" width="195.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="196.4" y="558.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (66 samples, 16.54%)</title><rect x="193.4" y="531.0" width="195.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="196.4" y="542.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (66 samples, 16.54%)</title><rect x="193.4" y="515.0" width="195.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.4" y="526.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (66 samples, 16.54%)</title><rect x="193.4" y="499.0" width="195.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="196.4" y="510.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (1 samples, 0.25%)</title><rect x="193.4" y="483.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="196.4" y="494.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.25%)</title><rect x="193.4" y="467.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.4" y="478.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.25%)</title><rect x="196.3" y="483.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="199.3" y="494.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.25%)</title><rect x="196.3" y="467.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="199.3" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (64 samples, 16.04%)</title><rect x="199.3" y="483.0" width="189.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="202.3" y="494.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.25%)</title><rect x="199.3" y="467.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="202.3" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (63 samples, 15.79%)</title><rect x="202.2" y="467.0" width="186.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="205.2" y="478.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (49 samples, 12.28%)</title><rect x="211.1" y="451.0" width="144.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="214.1" y="462.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (49 samples, 12.28%)</title><rect x="211.1" y="435.0" width="144.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="214.1" y="446.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (45 samples, 11.28%)</title><rect x="211.1" y="419.0" width="133.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="214.1" y="430.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (43 samples, 10.78%)</title><rect x="211.1" y="403.0" width="127.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="214.1" y="414.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_output (43 samples, 10.78%)</title><rect x="211.1" y="387.0" width="127.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="214.1" y="398.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (43 samples, 10.78%)</title><rect x="211.1" y="371.0" width="127.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="214.1" y="382.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.50%)</title><rect x="220.0" y="355.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="223.0" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.25%)</title><rect x="222.9" y="339.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.9" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.25%)</title><rect x="222.9" y="323.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="225.9" y="334.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.25%)</title><rect x="222.9" y="307.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="225.9" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.25%)</title><rect x="222.9" y="291.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="225.9" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.25%)</title><rect x="222.9" y="275.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="225.9" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (38 samples, 9.52%)</title><rect x="225.9" y="355.0" width="112.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="228.9" y="366.0">__local_bh_ena..</text>
</g>
<g>
<title>do_softirq.part.0 (38 samples, 9.52%)</title><rect x="225.9" y="339.0" width="112.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="228.9" y="350.0">do_softirq.par..</text>
</g>
<g>
<title>do_softirq_own_stack (37 samples, 9.27%)</title><rect x="228.8" y="323.0" width="109.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="231.8" y="334.0">do_softirq_ow..</text>
</g>
<g>
<title>__softirqentry_text_start (37 samples, 9.27%)</title><rect x="228.8" y="307.0" width="109.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="231.8" y="318.0">__softirqentr..</text>
</g>
<g>
<title>net_rx_action (37 samples, 9.27%)</title><rect x="228.8" y="291.0" width="109.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="231.8" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (37 samples, 9.27%)</title><rect x="228.8" y="275.0" width="109.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="231.8" y="286.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (36 samples, 9.02%)</title><rect x="231.8" y="259.0" width="106.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="234.8" y="270.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.50%)</title><rect x="231.8" y="243.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="234.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv (34 samples, 8.52%)</title><rect x="237.7" y="243.0" width="100.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="240.7" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (34 samples, 8.52%)</title><rect x="237.7" y="227.0" width="100.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="240.7" y="238.0">ip_local_del..</text>
</g>
<g>
<title>ip_local_deliver_finish (34 samples, 8.52%)</title><rect x="237.7" y="211.0" width="100.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="240.7" y="222.0">ip_local_del..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (34 samples, 8.52%)</title><rect x="237.7" y="195.0" width="100.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="240.7" y="206.0">ip_protocol_..</text>
</g>
<g>
<title>tcp_v4_rcv (33 samples, 8.27%)</title><rect x="240.7" y="179.0" width="97.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="243.7" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.50%)</title><rect x="252.5" y="163.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="255.5" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.50%)</title><rect x="252.5" y="147.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.5" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.50%)</title><rect x="252.5" y="131.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="255.5" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (1 samples, 0.25%)</title><rect x="255.5" y="115.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="258.5" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 6.77%)</title><rect x="258.4" y="163.0" width="79.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="261.4" y="174.0">tcp_v4_do..</text>
</g>
<g>
<title>tcp_rcv_established (26 samples, 6.52%)</title><rect x="261.4" y="147.0" width="76.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.4" y="158.0">tcp_rcv_..</text>
</g>
<g>
<title>sock_def_readable (18 samples, 4.51%)</title><rect x="261.4" y="131.0" width="53.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.4" y="142.0">sock_..</text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 4.51%)</title><rect x="261.4" y="115.0" width="53.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="264.4" y="126.0">__wak..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 4.51%)</title><rect x="261.4" y="99.0" width="53.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="264.4" y="110.0">_raw_..</text>
</g>
<g>
<title>tcp_ack (6 samples, 1.50%)</title><rect x="314.6" y="131.0" width="17.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="317.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 1.00%)</title><rect x="317.6" y="115.0" width="11.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="320.6" y="126.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.50%)</title><rect x="317.6" y="99.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="320.6" y="110.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.50%)</title><rect x="323.5" y="99.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="326.5" y="110.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.25%)</title><rect x="329.4" y="115.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="332.4" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.50%)</title><rect x="332.4" y="131.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="335.4" y="142.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.25%)</title><rect x="338.3" y="403.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="341.3" y="414.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.25%)</title><rect x="341.2" y="403.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="344.2" y="414.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 1.00%)</title><rect x="344.2" y="419.0" width="11.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="347.2" y="430.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.25%)</title><rect x="347.1" y="403.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="350.1" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.50%)</title><rect x="350.1" y="403.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="353.1" y="414.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.50%)</title><rect x="350.1" y="387.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="353.1" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="353.1" y="371.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.1" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.25%)</title><rect x="356.0" y="451.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.0" y="462.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.25%)</title><rect x="356.0" y="435.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="359.0" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.25%)</title><rect x="356.0" y="419.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.0" y="430.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.25%)</title><rect x="359.0" y="451.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.0" y="462.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.25%)</title><rect x="359.0" y="435.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="362.0" y="446.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.75%)</title><rect x="361.9" y="451.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="364.9" y="462.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.75%)</title><rect x="361.9" y="435.0" width="8.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="364.9" y="446.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.50%)</title><rect x="361.9" y="419.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="364.9" y="430.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.50%)</title><rect x="361.9" y="403.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="364.9" y="414.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.25%)</title><rect x="367.8" y="419.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="370.8" y="430.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.50%)</title><rect x="370.8" y="451.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="373.8" y="462.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.50%)</title><rect x="376.7" y="451.0" width="5.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="379.7" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.50%)</title><rect x="382.6" y="451.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="385.6" y="462.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.50%)</title><rect x="382.6" y="435.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="385.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.50%)</title><rect x="388.5" y="659.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.50%)</title><rect x="388.5" y="643.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.50%)</title><rect x="388.5" y="627.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsert (22 samples, 5.51%)</title><rect x="394.5" y="675.0" width="65.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.5" y="686.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (2 samples, 0.50%)</title><rect x="394.5" y="659.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.50%)</title><rect x="394.5" y="643.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.50%)</title><rect x="394.5" y="627.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.50%)</title><rect x="394.5" y="611.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.25%)</title><rect x="397.4" y="595.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.4" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.25%)</title><rect x="397.4" y="579.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="400.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title><rect x="397.4" y="563.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="400.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.25%)</title><rect x="397.4" y="547.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="400.4" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.25%)</title><rect x="397.4" y="531.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.4" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.25%)</title><rect x="397.4" y="515.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="400.4" y="526.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.25%)</title><rect x="397.4" y="499.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="400.4" y="510.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.25%)</title><rect x="397.4" y="483.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.4" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.25%)</title><rect x="397.4" y="467.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="400.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="397.4" y="451.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="400.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsert (20 samples, 5.01%)</title><rect x="400.4" y="659.0" width="59.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.4" y="670.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (20 samples, 5.01%)</title><rect x="400.4" y="643.0" width="59.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.4" y="654.0">java/u..</text>
</g>
<g>
<title>_init (1 samples, 0.25%)</title><rect x="403.3" y="627.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="406.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (18 samples, 4.51%)</title><rect x="406.3" y="627.0" width="53.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.3" y="638.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.25%)</title><rect x="421.1" y="611.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (12 samples, 3.01%)</title><rect x="424.0" y="611.0" width="35.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.0" y="622.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 3.01%)</title><rect x="424.0" y="595.0" width="35.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.0" y="606.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 3.01%)</title><rect x="424.0" y="579.0" width="35.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.0" y="590.0">jav..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 3.01%)</title><rect x="424.0" y="563.0" width="35.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.0" y="574.0">jav..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (231 samples, 57.89%)</title><rect x="459.5" y="771.0" width="683.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.5" y="782.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 1.50%)</title><rect x="462.5" y="755.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 1.50%)</title><rect x="462.5" y="739.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.5" y="750.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 1.50%)</title><rect x="462.5" y="723.0" width="17.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="465.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.50%)</title><rect x="462.5" y="707.0" width="17.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="465.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.50%)</title><rect x="462.5" y="691.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 1.50%)</title><rect x="462.5" y="675.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.5" y="686.0"></text>
</g>
<g>
<title>do_epoll_wait (6 samples, 1.50%)</title><rect x="462.5" y="659.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.5" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.50%)</title><rect x="462.5" y="643.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.5" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.50%)</title><rect x="462.5" y="627.0" width="5.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.5" y="638.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 1.00%)</title><rect x="468.4" y="643.0" width="11.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.4" y="654.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (4 samples, 1.00%)</title><rect x="468.4" y="627.0" width="11.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.4" y="638.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 1.00%)</title><rect x="468.4" y="611.0" width="11.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.4" y="622.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.25%)</title><rect x="471.4" y="595.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="474.4" y="606.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.50%)</title><rect x="474.3" y="595.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="477.3" y="606.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.50%)</title><rect x="474.3" y="579.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.3" y="590.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.25%)</title><rect x="477.3" y="563.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="480.3" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (1 samples, 0.25%)</title><rect x="477.3" y="547.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="480.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (224 samples, 56.14%)</title><rect x="480.2" y="755.0" width="662.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.2" y="766.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (223 samples, 55.89%)</title><rect x="483.2" y="739.0" width="659.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.2" y="750.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (182 samples, 45.61%)</title><rect x="486.1" y="723.0" width="538.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.1" y="734.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.25%)</title><rect x="495.0" y="707.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (161 samples, 40.35%)</title><rect x="498.0" y="707.0" width="476.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.0" y="718.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (160 samples, 40.10%)</title><rect x="500.9" y="691.0" width="473.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.9" y="702.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (155 samples, 38.85%)</title><rect x="500.9" y="675.0" width="458.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.9" y="686.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.50%)</title><rect x="500.9" y="659.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.50%)</title><rect x="500.9" y="643.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.25%)</title><rect x="500.9" y="627.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.25%)</title><rect x="500.9" y="611.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.25%)</title><rect x="503.9" y="627.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.put (153 samples, 38.35%)</title><rect x="506.8" y="659.0" width="452.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.8" y="670.0">ru/mail/polis/service/s3ponia/AsyncService.put</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.chooseNode (150 samples, 37.59%)</title><rect x="506.8" y="643.0" width="443.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.8" y="654.0">ru/mail/polis/service/s3ponia/AsyncService.chooseNode</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 3.51%)</title><rect x="509.8" y="627.0" width="41.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.8" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 3.51%)</title><rect x="509.8" y="611.0" width="41.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.8" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 1.00%)</title><rect x="509.8" y="595.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 1.00%)</title><rect x="509.8" y="579.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 1.00%)</title><rect x="509.8" y="563.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 1.00%)</title><rect x="509.8" y="547.0" width="11.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 2.51%)</title><rect x="521.6" y="595.0" width="29.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.6" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 2.51%)</title><rect x="521.6" y="579.0" width="29.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.6" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 2.51%)</title><rect x="521.6" y="563.0" width="29.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.6" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 2.51%)</title><rect x="521.6" y="547.0" width="29.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.6" y="558.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 2.51%)</title><rect x="521.6" y="531.0" width="29.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.6" y="542.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.25%)</title><rect x="521.6" y="515.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="524.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="524.6" y="515.0" width="2.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="527.6" y="526.0"></text>
</g>
<g>
<title>/lib64/ld-2.30.so (1 samples, 0.25%)</title><rect x="524.6" y="499.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="527.6" y="510.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 2.01%)</title><rect x="527.5" y="515.0" width="23.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="530.5" y="526.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 2.01%)</title><rect x="527.5" y="499.0" width="23.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="530.5" y="510.0">e..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 2.01%)</title><rect x="527.5" y="483.0" width="23.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="530.5" y="494.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 2.01%)</title><rect x="527.5" y="467.0" width="23.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="530.5" y="478.0">_..</text>
</g>
<g>
<title>do_futex (8 samples, 2.01%)</title><rect x="527.5" y="451.0" width="23.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="530.5" y="462.0">d..</text>
</g>
<g>
<title>futex_wake (8 samples, 2.01%)</title><rect x="527.5" y="435.0" width="23.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="530.5" y="446.0">f..</text>
</g>
<g>
<title>wake_up_q (8 samples, 2.01%)</title><rect x="527.5" y="419.0" width="23.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="530.5" y="430.0">w..</text>
</g>
<g>
<title>try_to_wake_up (8 samples, 2.01%)</title><rect x="527.5" y="403.0" width="23.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="530.5" y="414.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 2.01%)</title><rect x="527.5" y="387.0" width="23.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="530.5" y="398.0">_..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.proxy (135 samples, 33.83%)</title><rect x="551.2" y="627.0" width="399.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.2" y="638.0">ru/mail/polis/service/s3ponia/AsyncService.proxy</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.25%)</title><rect x="551.2" y="611.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.25%)</title><rect x="551.2" y="595.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.25%)</title><rect x="551.2" y="579.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.25%)</title><rect x="551.2" y="563.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.2" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.25%)</title><rect x="551.2" y="547.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="554.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (76 samples, 19.05%)</title><rect x="554.2" y="611.0" width="224.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.2" y="622.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (76 samples, 19.05%)</title><rect x="554.2" y="595.0" width="224.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.2" y="606.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (10 samples, 2.51%)</title><rect x="554.2" y="579.0" width="29.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.2" y="590.0">on..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.50%)</title><rect x="568.9" y="563.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="571.9" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.25%)</title><rect x="568.9" y="547.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="571.9" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.25%)</title><rect x="571.9" y="547.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="574.9" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.25%)</title><rect x="571.9" y="531.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="574.9" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.25%)</title><rect x="571.9" y="515.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="574.9" y="526.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1 samples, 0.25%)</title><rect x="571.9" y="499.0" width="3.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="574.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.50%)</title><rect x="574.9" y="563.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.9" y="574.0"></text>
</g>
<g>
<title>__libc_recv (2 samples, 0.50%)</title><rect x="574.9" y="547.0" width="5.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="577.9" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.50%)</title><rect x="574.9" y="531.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="577.9" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.50%)</title><rect x="574.9" y="515.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="577.9" y="526.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.50%)</title><rect x="574.9" y="499.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="577.9" y="510.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.50%)</title><rect x="574.9" y="483.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="577.9" y="494.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (2 samples, 0.50%)</title><rect x="574.9" y="467.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="577.9" y="478.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.50%)</title><rect x="574.9" y="451.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="577.9" y="462.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.25%)</title><rect x="574.9" y="435.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="577.9" y="446.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.25%)</title><rect x="574.9" y="419.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="577.9" y="430.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.25%)</title><rect x="574.9" y="403.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="577.9" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="574.9" y="387.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="577.9" y="398.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.25%)</title><rect x="577.8" y="435.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="580.8" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 0.25%)</title><rect x="580.8" y="563.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="583.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7 samples, 1.75%)</title><rect x="583.7" y="579.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (6 samples, 1.50%)</title><rect x="583.7" y="563.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 1.00%)</title><rect x="589.6" y="547.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.6" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.75%)</title><rect x="589.6" y="531.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.6" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.25%)</title><rect x="598.5" y="531.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="601.5" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.25%)</title><rect x="598.5" y="515.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="601.5" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.25%)</title><rect x="598.5" y="499.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="601.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.25%)</title><rect x="601.5" y="563.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.25%)</title><rect x="601.5" y="547.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.25%)</title><rect x="601.5" y="531.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.75%)</title><rect x="604.4" y="579.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.50%)</title><rect x="613.3" y="579.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.50%)</title><rect x="613.3" y="563.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.50%)</title><rect x="613.3" y="547.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (4 samples, 1.00%)</title><rect x="619.2" y="579.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.2" y="590.0"></text>
</g>
<g>
<title>setsockopt (4 samples, 1.00%)</title><rect x="619.2" y="563.0" width="11.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="622.2" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.75%)</title><rect x="622.2" y="547.0" width="8.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="625.2" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.75%)</title><rect x="622.2" y="531.0" width="8.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="625.2" y="542.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (3 samples, 0.75%)</title><rect x="622.2" y="515.0" width="8.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="625.2" y="526.0"></text>
</g>
<g>
<title>__sys_setsockopt (3 samples, 0.75%)</title><rect x="622.2" y="499.0" width="8.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="625.2" y="510.0"></text>
</g>
<g>
<title>sock_setsockopt (3 samples, 0.75%)</title><rect x="622.2" y="483.0" width="8.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.2" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.25%)</title><rect x="622.2" y="467.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="625.2" y="478.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.25%)</title><rect x="625.1" y="467.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="628.1" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.25%)</title><rect x="625.1" y="451.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="628.1" y="462.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.25%)</title><rect x="628.1" y="467.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="631.1" y="478.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.25%)</title><rect x="628.1" y="451.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="631.1" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.25%)</title><rect x="628.1" y="435.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="631.1" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (46 samples, 11.53%)</title><rect x="631.1" y="579.0" width="136.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.1" y="590.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.75%)</title><rect x="634.0" y="563.0" width="8.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="637.0" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="639.9" y="547.0" width="3.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="642.9" y="558.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.25%)</title><rect x="639.9" y="531.0" width="3.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="642.9" y="542.0"></text>
</g>
<g>
<title>__libc_send (42 samples, 10.53%)</title><rect x="642.9" y="563.0" width="124.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="645.9" y="574.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 10.53%)</title><rect x="642.9" y="547.0" width="124.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="645.9" y="558.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (42 samples, 10.53%)</title><rect x="642.9" y="531.0" width="124.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="645.9" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (42 samples, 10.53%)</title><rect x="642.9" y="515.0" width="124.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="645.9" y="526.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (42 samples, 10.53%)</title><rect x="642.9" y="499.0" width="124.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="645.9" y="510.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (42 samples, 10.53%)</title><rect x="642.9" y="483.0" width="124.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="645.9" y="494.0">sock_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (41 samples, 10.28%)</title><rect x="645.8" y="467.0" width="121.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="648.8" y="478.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (41 samples, 10.28%)</title><rect x="645.8" y="451.0" width="121.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="648.8" y="462.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.50%)</title><rect x="648.8" y="435.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="651.8" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (36 samples, 9.02%)</title><rect x="654.7" y="435.0" width="106.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="657.7" y="446.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (36 samples, 9.02%)</title><rect x="654.7" y="419.0" width="106.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="657.7" y="430.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (33 samples, 8.27%)</title><rect x="657.7" y="403.0" width="97.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="660.7" y="414.0">__tcp_trans..</text>
</g>
<g>
<title>__ip_queue_xmit (30 samples, 7.52%)</title><rect x="666.5" y="387.0" width="88.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="669.5" y="398.0">__ip_queue..</text>
</g>
<g>
<title>ip_local_out (1 samples, 0.25%)</title><rect x="666.5" y="371.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="669.5" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.25%)</title><rect x="666.5" y="355.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="669.5" y="366.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.25%)</title><rect x="666.5" y="339.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="669.5" y="350.0"></text>
</g>
<g>
<title>ip_output (29 samples, 7.27%)</title><rect x="669.5" y="371.0" width="85.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="672.5" y="382.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (28 samples, 7.02%)</title><rect x="672.5" y="355.0" width="82.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="675.5" y="366.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.75%)</title><rect x="672.5" y="339.0" width="8.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="675.5" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.25%)</title><rect x="672.5" y="323.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="675.5" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.50%)</title><rect x="675.4" y="323.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="678.4" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.25%)</title><rect x="678.4" y="307.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="681.4" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.25%)</title><rect x="678.4" y="291.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="681.4" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (25 samples, 6.27%)</title><rect x="681.3" y="339.0" width="74.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="684.3" y="350.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (25 samples, 6.27%)</title><rect x="681.3" y="323.0" width="74.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="684.3" y="334.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 6.27%)</title><rect x="681.3" y="307.0" width="74.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="684.3" y="318.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 6.27%)</title><rect x="681.3" y="291.0" width="74.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="684.3" y="302.0">__softir..</text>
</g>
<g>
<title>net_rx_action (25 samples, 6.27%)</title><rect x="681.3" y="275.0" width="74.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="684.3" y="286.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (25 samples, 6.27%)</title><rect x="681.3" y="259.0" width="74.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="684.3" y="270.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (24 samples, 6.02%)</title><rect x="684.3" y="243.0" width="71.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="687.3" y="254.0">__netif_..</text>
</g>
<g>
<title>ip_rcv (24 samples, 6.02%)</title><rect x="684.3" y="227.0" width="71.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="687.3" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (24 samples, 6.02%)</title><rect x="684.3" y="211.0" width="71.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="687.3" y="222.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (24 samples, 6.02%)</title><rect x="684.3" y="195.0" width="71.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="687.3" y="206.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (24 samples, 6.02%)</title><rect x="684.3" y="179.0" width="71.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="687.3" y="190.0">ip_proto..</text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 5.76%)</title><rect x="687.2" y="163.0" width="68.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="690.2" y="174.0">tcp_v4_..</text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 5.26%)</title><rect x="693.2" y="147.0" width="62.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="696.2" y="158.0">tcp_v4..</text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 5.26%)</title><rect x="693.2" y="131.0" width="62.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.2" y="142.0">tcp_rc..</text>
</g>
<g>
<title>sk_reset_timer (5 samples, 1.25%)</title><rect x="693.2" y="115.0" width="14.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="696.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 1.25%)</title><rect x="693.2" y="99.0" width="14.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="696.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.75%)</title><rect x="693.2" y="83.0" width="8.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="696.2" y="94.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.50%)</title><rect x="702.0" y="83.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="705.0" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (11 samples, 2.76%)</title><rect x="707.9" y="115.0" width="32.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="710.9" y="126.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 2.51%)</title><rect x="710.9" y="99.0" width="29.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.9" y="110.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 2.51%)</title><rect x="710.9" y="83.0" width="29.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="713.9" y="94.0">_r..</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.75%)</title><rect x="740.5" y="115.0" width="8.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="743.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.25%)</title><rect x="743.4" y="99.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="746.4" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.25%)</title><rect x="743.4" y="83.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="746.4" y="94.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.25%)</title><rect x="746.4" y="99.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="749.4" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.50%)</title><rect x="749.3" y="115.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="752.3" y="126.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.50%)</title><rect x="755.3" y="403.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="758.3" y="414.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.50%)</title><rect x="755.3" y="387.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="758.3" y="398.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.50%)</title><rect x="755.3" y="371.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="758.3" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="755.3" y="355.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="758.3" y="366.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.25%)</title><rect x="758.2" y="355.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="761.2" y="366.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.50%)</title><rect x="761.2" y="435.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="764.2" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.50%)</title><rect x="761.2" y="419.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.2" y="430.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.25%)</title><rect x="761.2" y="403.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="764.2" y="414.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.25%)</title><rect x="764.1" y="403.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="767.1" y="414.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (3 samples, 0.75%)</title><rect x="767.1" y="579.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.25%)</title><rect x="773.0" y="563.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.0" y="574.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.25%)</title><rect x="776.0" y="579.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (58 samples, 14.54%)</title><rect x="778.9" y="611.0" width="171.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.9" y="622.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.50%)</title><rect x="778.9" y="595.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.50%)</title><rect x="778.9" y="579.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.50%)</title><rect x="778.9" y="563.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.9" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.25%)</title><rect x="781.9" y="547.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="784.9" y="558.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.25%)</title><rect x="781.9" y="531.0" width="2.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="784.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (53 samples, 13.28%)</title><rect x="784.8" y="595.0" width="156.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.8" y="606.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 1.00%)</title><rect x="784.8" y="579.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="787.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.25%)</title><rect x="793.7" y="563.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.25%)</title><rect x="793.7" y="547.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.7" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.25%)</title><rect x="793.7" y="531.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.7" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.25%)</title><rect x="793.7" y="515.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.25%)</title><rect x="793.7" y="499.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (49 samples, 12.28%)</title><rect x="796.7" y="579.0" width="144.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.7" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (49 samples, 12.28%)</title><rect x="796.7" y="563.0" width="144.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.7" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (49 samples, 12.28%)</title><rect x="796.7" y="547.0" width="144.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.7" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (49 samples, 12.28%)</title><rect x="796.7" y="531.0" width="144.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.7" y="542.0">one/nio/net/Native..</text>
</g>
<g>
<title>__libc_send (47 samples, 11.78%)</title><rect x="802.6" y="515.0" width="139.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="805.6" y="526.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 11.28%)</title><rect x="808.5" y="499.0" width="133.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="811.5" y="510.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (45 samples, 11.28%)</title><rect x="808.5" y="483.0" width="133.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="811.5" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (44 samples, 11.03%)</title><rect x="811.5" y="467.0" width="130.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="814.5" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (44 samples, 11.03%)</title><rect x="811.5" y="451.0" width="130.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="814.5" y="462.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (1 samples, 0.25%)</title><rect x="811.5" y="435.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="814.5" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (42 samples, 10.53%)</title><rect x="814.4" y="435.0" width="124.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="817.4" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (1 samples, 0.25%)</title><rect x="814.4" y="419.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="817.4" y="430.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.25%)</title><rect x="814.4" y="403.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="817.4" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (41 samples, 10.28%)</title><rect x="817.4" y="419.0" width="121.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="820.4" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.25%)</title><rect x="817.4" y="403.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="820.4" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (40 samples, 10.03%)</title><rect x="820.3" y="403.0" width="118.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="823.3" y="414.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>__tcp_push_pending_frames (33 samples, 8.27%)</title><rect x="823.3" y="387.0" width="97.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="826.3" y="398.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_write_xmit (33 samples, 8.27%)</title><rect x="823.3" y="371.0" width="97.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="826.3" y="382.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (30 samples, 7.52%)</title><rect x="826.2" y="355.0" width="88.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="829.2" y="366.0">__tcp_tran..</text>
</g>
<g>
<title>__ip_queue_xmit (28 samples, 7.02%)</title><rect x="829.2" y="339.0" width="82.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="832.2" y="350.0">__ip_queu..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.25%)</title><rect x="829.2" y="323.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="832.2" y="334.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.25%)</title><rect x="832.2" y="323.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="835.2" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.25%)</title><rect x="832.2" y="307.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="835.2" y="318.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.25%)</title><rect x="832.2" y="291.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="835.2" y="302.0"></text>
</g>
<g>
<title>ip_output (26 samples, 6.52%)</title><rect x="835.1" y="323.0" width="76.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="838.1" y="334.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (26 samples, 6.52%)</title><rect x="835.1" y="307.0" width="76.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.1" y="318.0">ip_finis..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.25%)</title><rect x="835.1" y="291.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="838.1" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (25 samples, 6.27%)</title><rect x="838.1" y="291.0" width="73.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="841.1" y="302.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (25 samples, 6.27%)</title><rect x="838.1" y="275.0" width="73.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="841.1" y="286.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 6.02%)</title><rect x="841.0" y="259.0" width="71.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="844.0" y="270.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 6.02%)</title><rect x="841.0" y="243.0" width="71.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="844.0" y="254.0">__softir..</text>
</g>
<g>
<title>net_rx_action (23 samples, 5.76%)</title><rect x="844.0" y="227.0" width="68.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="847.0" y="238.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (22 samples, 5.51%)</title><rect x="846.9" y="211.0" width="65.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="849.9" y="222.0">process..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 5.51%)</title><rect x="846.9" y="195.0" width="65.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="849.9" y="206.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="849.9" y="179.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="852.9" y="190.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 5.01%)</title><rect x="852.9" y="179.0" width="59.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="855.9" y="190.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (20 samples, 5.01%)</title><rect x="852.9" y="163.0" width="59.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="855.9" y="174.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (19 samples, 4.76%)</title><rect x="855.8" y="147.0" width="56.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="858.8" y="158.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (19 samples, 4.76%)</title><rect x="855.8" y="131.0" width="56.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="858.8" y="142.0">ip_pro..</text>
</g>
<g>
<title>tcp_v4_rcv (18 samples, 4.51%)</title><rect x="858.8" y="115.0" width="53.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="861.8" y="126.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.25%)</title><rect x="858.8" y="99.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="861.8" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="861.7" y="99.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="864.7" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.25%)</title><rect x="861.7" y="83.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="864.7" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.25%)</title><rect x="861.7" y="67.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="864.7" y="78.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 4.01%)</title><rect x="864.7" y="99.0" width="47.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="867.7" y="110.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 4.01%)</title><rect x="864.7" y="83.0" width="47.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="867.7" y="94.0">tcp_..</text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.25%)</title><rect x="864.7" y="67.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="867.7" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="864.7" y="51.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.7" y="62.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.25%)</title><rect x="864.7" y="35.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="867.7" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 3.51%)</title><rect x="867.6" y="67.0" width="41.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="870.6" y="78.0">soc..</text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 3.26%)</title><rect x="870.6" y="51.0" width="38.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="873.6" y="62.0">__w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 3.26%)</title><rect x="870.6" y="35.0" width="38.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="873.6" y="46.0">_ra..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.25%)</title><rect x="909.0" y="67.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.0" y="78.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.25%)</title><rect x="909.0" y="51.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="912.0" y="62.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.25%)</title><rect x="909.0" y="35.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="912.0" y="46.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.25%)</title><rect x="912.0" y="339.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="915.0" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.50%)</title><rect x="915.0" y="355.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="918.0" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.50%)</title><rect x="915.0" y="339.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="918.0" y="350.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.50%)</title><rect x="915.0" y="323.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="918.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="917.9" y="307.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="920.9" y="318.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.25%)</title><rect x="920.9" y="387.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="923.9" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.25%)</title><rect x="920.9" y="371.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="923.9" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.75%)</title><rect x="923.8" y="387.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="926.8" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.75%)</title><rect x="923.8" y="371.0" width="8.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="926.8" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.75%)</title><rect x="923.8" y="355.0" width="8.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="926.8" y="366.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.50%)</title><rect x="932.7" y="387.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.7" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.50%)</title><rect x="932.7" y="371.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="935.7" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.50%)</title><rect x="932.7" y="355.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="935.7" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.25%)</title><rect x="938.6" y="435.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="941.6" y="446.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.25%)</title><rect x="938.6" y="419.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="941.6" y="430.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.25%)</title><rect x="938.6" y="403.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="941.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.75%)</title><rect x="941.6" y="595.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.75%)</title><rect x="941.6" y="579.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.75%)</title><rect x="941.6" y="563.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.25%)</title><rect x="947.5" y="547.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="950.5" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.25%)</title><rect x="947.5" y="531.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="950.5" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.25%)</title><rect x="947.5" y="515.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="950.5" y="526.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.25%)</title><rect x="947.5" y="499.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="950.5" y="510.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.25%)</title><rect x="947.5" y="483.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="950.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.urlFromKey (3 samples, 0.75%)</title><rect x="950.5" y="643.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (3 samples, 0.75%)</title><rect x="950.5" y="627.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNode (3 samples, 0.75%)</title><rect x="950.5" y="611.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$21/1849201180.apply (3 samples, 0.75%)</title><rect x="950.5" y="595.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (3 samples, 0.75%)</title><rect x="950.5" y="579.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.5" y="590.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.50%)</title><rect x="953.4" y="563.0" width="5.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="956.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.75%)</title><rect x="959.3" y="675.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.75%)</title><rect x="959.3" y="659.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.25%)</title><rect x="959.3" y="643.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.50%)</title><rect x="962.3" y="643.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.50%)</title><rect x="962.3" y="627.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.50%)</title><rect x="962.3" y="611.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.50%)</title><rect x="968.2" y="675.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.50%)</title><rect x="968.2" y="659.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.50%)</title><rect x="968.2" y="643.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.2" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.25%)</title><rect x="968.2" y="627.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.2" y="638.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.25%)</title><rect x="971.2" y="627.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="974.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.25%)</title><rect x="974.1" y="707.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="974.1" y="691.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.1" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="974.1" y="675.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.50%)</title><rect x="977.1" y="707.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="980.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.50%)</title><rect x="977.1" y="691.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.1" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.25%)</title><rect x="980.0" y="675.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.25%)</title><rect x="980.0" y="659.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.75%)</title><rect x="983.0" y="707.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="986.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.75%)</title><rect x="983.0" y="691.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.75%)</title><rect x="983.0" y="675.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.0" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.25%)</title><rect x="988.9" y="659.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.25%)</title><rect x="988.9" y="643.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.25%)</title><rect x="988.9" y="627.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="991.9" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 2.76%)</title><rect x="991.9" y="707.0" width="32.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.9" y="718.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.75%)</title><rect x="1015.5" y="691.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1018.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (40 samples, 10.03%)</title><rect x="1024.4" y="723.0" width="118.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1027.4" y="734.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (39 samples, 9.77%)</title><rect x="1027.3" y="707.0" width="115.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.3" y="718.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 2.01%)</title><rect x="1027.3" y="691.0" width="23.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1030.3" y="702.0">J..</text>
</g>
<g>
<title>/lib64/libc-2.30.so (2 samples, 0.50%)</title><rect x="1027.3" y="675.0" width="6.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1030.3" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.25%)</title><rect x="1033.3" y="675.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1036.3" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 1.00%)</title><rect x="1036.2" y="675.0" width="11.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1039.2" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.25%)</title><rect x="1036.2" y="659.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1039.2" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (1 samples, 0.25%)</title><rect x="1039.2" y="659.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1042.2" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.50%)</title><rect x="1042.1" y="659.0" width="5.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1045.1" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.25%)</title><rect x="1048.0" y="675.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1051.0" y="686.0"></text>
</g>
<g>
<title>__libc_recv (30 samples, 7.52%)</title><rect x="1051.0" y="691.0" width="88.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1054.0" y="702.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 7.52%)</title><rect x="1051.0" y="675.0" width="88.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1054.0" y="686.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (30 samples, 7.52%)</title><rect x="1051.0" y="659.0" width="88.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1054.0" y="670.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_recvfrom (30 samples, 7.52%)</title><rect x="1051.0" y="643.0" width="88.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1054.0" y="654.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_recvfrom (30 samples, 7.52%)</title><rect x="1051.0" y="627.0" width="88.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1054.0" y="638.0">__sys_recv..</text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (30 samples, 7.52%)</title><rect x="1051.0" y="611.0" width="88.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1054.0" y="622.0">inet6_recv..</text>
</g>
<g>
<title>tcp_recvmsg (30 samples, 7.52%)</title><rect x="1051.0" y="595.0" width="88.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1054.0" y="606.0">tcp_recvmsg</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.50%)</title><rect x="1059.9" y="579.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1062.9" y="590.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.50%)</title><rect x="1059.9" y="563.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1062.9" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.50%)</title><rect x="1059.9" y="547.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1062.9" y="558.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.25%)</title><rect x="1062.8" y="531.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1065.8" y="542.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (4 samples, 1.00%)</title><rect x="1065.8" y="579.0" width="11.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1068.8" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 1.00%)</title><rect x="1065.8" y="563.0" width="11.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1068.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.25%)</title><rect x="1068.7" y="547.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1071.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.25%)</title><rect x="1068.7" y="531.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.7" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.50%)</title><rect x="1071.7" y="547.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1074.7" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 1.75%)</title><rect x="1077.6" y="579.0" width="20.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1080.6" y="590.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 1.75%)</title><rect x="1077.6" y="563.0" width="20.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1080.6" y="574.0"></text>
</g>
<g>
<title>ip_output (7 samples, 1.75%)</title><rect x="1077.6" y="547.0" width="20.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1080.6" y="558.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 1.75%)</title><rect x="1077.6" y="531.0" width="20.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1080.6" y="542.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.25%)</title><rect x="1077.6" y="515.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1080.6" y="526.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.25%)</title><rect x="1077.6" y="499.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1080.6" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 1.50%)</title><rect x="1080.6" y="515.0" width="17.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1083.6" y="526.0"></text>
</g>
<g>
<title>do_softirq.part.0 (6 samples, 1.50%)</title><rect x="1080.6" y="499.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1083.6" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 1.25%)</title><rect x="1083.5" y="483.0" width="14.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1086.5" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 1.25%)</title><rect x="1083.5" y="467.0" width="14.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1086.5" y="478.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 1.25%)</title><rect x="1083.5" y="451.0" width="14.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1086.5" y="462.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 1.25%)</title><rect x="1083.5" y="435.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1086.5" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 1.25%)</title><rect x="1083.5" y="419.0" width="14.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1086.5" y="430.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 1.25%)</title><rect x="1083.5" y="403.0" width="14.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1086.5" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 1.00%)</title><rect x="1083.5" y="387.0" width="11.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1086.5" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 1.00%)</title><rect x="1083.5" y="371.0" width="11.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1086.5" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 1.00%)</title><rect x="1083.5" y="355.0" width="11.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1086.5" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 1.00%)</title><rect x="1083.5" y="339.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1086.5" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.75%)</title><rect x="1083.5" y="323.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1086.5" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.75%)</title><rect x="1083.5" y="307.0" width="8.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1086.5" y="318.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.75%)</title><rect x="1083.5" y="291.0" width="8.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1086.5" y="302.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.25%)</title><rect x="1083.5" y="275.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1086.5" y="286.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.50%)</title><rect x="1086.5" y="275.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1089.5" y="286.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.25%)</title><rect x="1089.4" y="259.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1092.4" y="270.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.25%)</title><rect x="1092.4" y="323.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1095.4" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.25%)</title><rect x="1095.4" y="387.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1098.4" y="398.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 2.76%)</title><rect x="1098.3" y="579.0" width="32.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1101.3" y="590.0">sk..</text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 2.51%)</title><rect x="1101.3" y="563.0" width="29.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1104.3" y="574.0">__..</text>
</g>
<g>
<title>_copy_to_iter (9 samples, 2.26%)</title><rect x="1104.2" y="547.0" width="26.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1107.2" y="558.0">_..</text>
</g>
<g>
<title>copyout (8 samples, 2.01%)</title><rect x="1107.2" y="531.0" width="23.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1110.2" y="542.0">c..</text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 2.01%)</title><rect x="1107.2" y="515.0" width="23.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.2" y="526.0">c..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.25%)</title><rect x="1130.9" y="579.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1133.9" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.50%)</title><rect x="1133.8" y="579.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1136.8" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.25%)</title><rect x="1136.8" y="563.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1139.8" y="574.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.25%)</title><rect x="1136.8" y="547.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1139.8" y="558.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.25%)</title><rect x="1136.8" y="531.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1139.8" y="542.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.25%)</title><rect x="1139.7" y="691.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1142.7" y="702.0"></text>
</g>
<g>
<title>start_thread (16 samples, 4.01%)</title><rect x="1142.7" y="771.0" width="47.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1145.7" y="782.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (16 samples, 4.01%)</title><rect x="1142.7" y="755.0" width="47.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1145.7" y="766.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (16 samples, 4.01%)</title><rect x="1142.7" y="739.0" width="47.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.7" y="750.0">Thre..</text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 2.51%)</title><rect x="1142.7" y="723.0" width="29.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.7" y="734.0">Ga..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 2.51%)</title><rect x="1142.7" y="707.0" width="29.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.7" y="718.0">G1..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 2.01%)</title><rect x="1142.7" y="691.0" width="23.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.7" y="702.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.50%)</title><rect x="1142.7" y="675.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1145.7" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.50%)</title><rect x="1142.7" y="659.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.7" y="670.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 1.50%)</title><rect x="1148.6" y="675.0" width="17.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1151.6" y="686.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.25%)</title><rect x="1166.3" y="691.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.3" y="702.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.25%)</title><rect x="1166.3" y="675.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.3" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.25%)</title><rect x="1166.3" y="659.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.3" y="670.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.25%)</title><rect x="1166.3" y="643.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.3" y="654.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.25%)</title><rect x="1166.3" y="627.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.3" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.25%)</title><rect x="1166.3" y="611.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.3" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.25%)</title><rect x="1166.3" y="595.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.3" y="606.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.25%)</title><rect x="1169.3" y="691.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.3" y="702.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.25%)</title><rect x="1169.3" y="675.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.3" y="686.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.25%)</title><rect x="1169.3" y="659.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.3" y="670.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.25%)</title><rect x="1169.3" y="643.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.3" y="654.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.25%)</title><rect x="1169.3" y="627.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.3" y="638.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.25%)</title><rect x="1169.3" y="611.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.3" y="622.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (1 samples, 0.25%)</title><rect x="1169.3" y="595.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.3" y="606.0"></text>
</g>
<g>
<title>G1CodeRootSet::contains(nmethod*) (1 samples, 0.25%)</title><rect x="1169.3" y="579.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.3" y="590.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (6 samples, 1.50%)</title><rect x="1172.3" y="723.0" width="17.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.3" y="734.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 1.50%)</title><rect x="1172.3" y="707.0" width="17.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.3" y="718.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (6 samples, 1.50%)</title><rect x="1172.3" y="691.0" width="17.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.3" y="702.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (6 samples, 1.50%)</title><rect x="1172.3" y="675.0" width="17.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.3" y="686.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (6 samples, 1.50%)</title><rect x="1172.3" y="659.0" width="17.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.3" y="670.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (4 samples, 1.00%)</title><rect x="1172.3" y="643.0" width="11.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.3" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (4 samples, 1.00%)</title><rect x="1172.3" y="627.0" width="11.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.25%)</title><rect x="1172.3" y="611.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.3" y="622.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.25%)</title><rect x="1172.3" y="595.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.3" y="606.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.25%)</title><rect x="1175.2" y="611.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.2" y="622.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.25%)</title><rect x="1175.2" y="595.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.2" y="606.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.50%)</title><rect x="1178.2" y="611.0" width="5.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.2" y="622.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.25%)</title><rect x="1181.1" y="595.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.1" y="606.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.25%)</title><rect x="1181.1" y="579.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.1" y="590.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.50%)</title><rect x="1184.1" y="643.0" width="5.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.1" y="654.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.25%)</title><rect x="1184.1" y="627.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.1" y="638.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.25%)</title><rect x="1184.1" y="611.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.1" y="622.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.25%)</title><rect x="1187.0" y="627.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.0" y="638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.25%)</title><rect x="1187.0" y="611.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.0" y="622.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.25%)</title><rect x="1187.0" y="595.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.0" y="606.0"></text>
</g>
</g>
</svg>
