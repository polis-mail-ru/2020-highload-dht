<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (13,176 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.02%)</title><rect x="10.2" y="723.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.2" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.02%)</title><rect x="10.2" y="707.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.2" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.94] (3 samples, 0.02%)</title><rect x="10.2" y="691.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.2" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.02%)</title><rect x="10.2" y="675.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.2" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (31 samples, 0.24%)</title><rect x="10.4" y="723.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (19 samples, 0.14%)</title><rect x="10.8" y="707.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.8" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (17 samples, 0.13%)</title><rect x="11.0" y="691.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.0" y="702.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.08%)</title><rect x="11.0" y="675.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.0" y="686.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.05%)</title><rect x="11.3" y="659.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.3" y="670.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.05%)</title><rect x="11.9" y="675.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.9" y="686.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.02%)</title><rect x="12.2" y="659.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.2" y="670.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.02%)</title><rect x="12.2" y="643.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.2" y="654.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.02%)</title><rect x="12.2" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.2" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (5 samples, 0.04%)</title><rect x="12.6" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.05%)</title><rect x="13.2" y="723.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.2" y="734.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (3 samples, 0.02%)</title><rect x="13.5" y="707.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="16.5" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="13.5" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="13.5" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.02%)</title><rect x="13.5" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.5" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (15 samples, 0.11%)</title><rect x="13.8" y="723.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="16.8" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.05%)</title><rect x="14.1" y="707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.1" y="718.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (3 samples, 0.02%)</title><rect x="14.4" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.4" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.03%)</title><rect x="14.7" y="707.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (10,157 samples, 77.09%)</title><rect x="15.2" y="723.0" width="909.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.2" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,157 samples, 77.09%)</title><rect x="15.2" y="707.0" width="909.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.2" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,155 samples, 77.07%)</title><rect x="15.2" y="691.0" width="909.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.2" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (48 samples, 0.36%)</title><rect x="15.4" y="675.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (48 samples, 0.36%)</title><rect x="15.4" y="659.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (48 samples, 0.36%)</title><rect x="15.4" y="643.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 0.27%)</title><rect x="16.5" y="627.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,984 samples, 15.06%)</title><rect x="19.7" y="675.0" width="177.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.7" y="686.0">java/util/concurrent/Th..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,929 samples, 14.64%)</title><rect x="24.6" y="659.0" width="172.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.6" y="670.0">java/util/concurrent/A..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (13 samples, 0.10%)</title><rect x="27.0" y="643.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (13 samples, 0.10%)</title><rect x="27.0" y="627.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (13 samples, 0.10%)</title><rect x="27.0" y="611.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (13 samples, 0.10%)</title><rect x="27.0" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,226 samples, 9.30%)</title><rect x="28.2" y="643.0" width="109.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.2" y="654.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (10 samples, 0.08%)</title><rect x="28.4" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.4" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (10 samples, 0.08%)</title><rect x="28.4" y="611.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="31.4" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (9 samples, 0.07%)</title><rect x="28.4" y="595.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.4" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (9 samples, 0.07%)</title><rect x="28.4" y="579.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="31.4" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.06%)</title><rect x="28.4" y="563.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="31.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (21 samples, 0.16%)</title><rect x="29.3" y="627.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (21 samples, 0.16%)</title><rect x="29.3" y="611.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.07%)</title><rect x="31.2" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.07%)</title><rect x="31.2" y="611.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.07%)</title><rect x="31.2" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.05%)</title><rect x="31.5" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="31.7" y="563.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="34.7" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.03%)</title><rect x="31.7" y="547.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="34.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="31.8" y="531.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="34.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="31.8" y="515.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="34.8" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.02%)</title><rect x="31.8" y="499.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.8" y="510.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.02%)</title><rect x="31.8" y="483.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="34.8" y="494.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.02%)</title><rect x="31.8" y="467.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="34.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (763 samples, 5.79%)</title><rect x="32.0" y="627.0" width="68.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.0" y="638.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (763 samples, 5.79%)</title><rect x="32.0" y="611.0" width="68.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="35.0" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (711 samples, 5.40%)</title><rect x="35.2" y="595.0" width="63.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.2" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (711 samples, 5.40%)</title><rect x="35.2" y="579.0" width="63.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.2" y="590.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (705 samples, 5.35%)</title><rect x="35.7" y="563.0" width="63.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.7" y="574.0">jdk/int..</text>
</g>
<g>
<title>Unsafe_Unpark (85 samples, 0.65%)</title><rect x="36.4" y="547.0" width="7.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="39.4" y="558.0"></text>
</g>
<g>
<title>Parker::unpark() (6 samples, 0.05%)</title><rect x="37.0" y="531.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="40.0" y="542.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (9 samples, 0.07%)</title><rect x="37.8" y="531.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="40.8" y="542.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (20 samples, 0.15%)</title><rect x="38.6" y="531.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="41.6" y="542.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (26 samples, 0.20%)</title><rect x="40.4" y="531.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="43.4" y="542.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (4 samples, 0.03%)</title><rect x="43.0" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="46.0" y="542.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (7 samples, 0.05%)</title><rect x="43.4" y="531.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="46.4" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (610 samples, 4.63%)</title><rect x="44.2" y="547.0" width="54.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="47.2" y="558.0">pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (576 samples, 4.37%)</title><rect x="47.3" y="531.0" width="51.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.3" y="542.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (576 samples, 4.37%)</title><rect x="47.3" y="515.0" width="51.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="50.3" y="526.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_futex (563 samples, 4.27%)</title><rect x="48.4" y="499.0" width="50.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="51.4" y="510.0">__x64..</text>
</g>
<g>
<title>do_futex (559 samples, 4.24%)</title><rect x="48.8" y="483.0" width="50.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="51.8" y="494.0">do_fu..</text>
</g>
<g>
<title>futex_wake (558 samples, 4.23%)</title><rect x="48.9" y="467.0" width="49.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="51.9" y="478.0">futex..</text>
</g>
<g>
<title>get_futex_key (6 samples, 0.05%)</title><rect x="52.8" y="451.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="55.8" y="462.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.04%)</title><rect x="53.3" y="451.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="56.3" y="462.0"></text>
</g>
<g>
<title>mark_wake_futex (22 samples, 0.17%)</title><rect x="53.8" y="451.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="56.8" y="462.0"></text>
</g>
<g>
<title>wake_q_add_safe (8 samples, 0.06%)</title><rect x="55.8" y="451.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.8" y="462.0"></text>
</g>
<g>
<title>wake_up_q (473 samples, 3.59%)</title><rect x="56.5" y="451.0" width="42.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="59.5" y="462.0">wake..</text>
</g>
<g>
<title>try_to_wake_up (470 samples, 3.57%)</title><rect x="56.7" y="435.0" width="42.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="59.7" y="446.0">try_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.02%)</title><rect x="57.0" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.0" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (464 samples, 3.52%)</title><rect x="57.3" y="419.0" width="41.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.3" y="430.0">_ra..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (17 samples, 0.13%)</title><rect x="98.8" y="595.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (8 samples, 0.06%)</title><rect x="100.4" y="627.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (8 samples, 0.06%)</title><rect x="100.4" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (410 samples, 3.11%)</title><rect x="101.1" y="627.0" width="36.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.1" y="638.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (400 samples, 3.04%)</title><rect x="102.0" y="611.0" width="35.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.0" y="622.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park (119 samples, 0.90%)</title><rect x="103.2" y="595.0" width="10.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="106.2" y="606.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (12 samples, 0.09%)</title><rect x="104.5" y="579.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="107.5" y="590.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (18 samples, 0.14%)</title><rect x="105.6" y="579.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="108.6" y="590.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (27 samples, 0.20%)</title><rect x="107.2" y="579.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="110.2" y="590.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (6 samples, 0.05%)</title><rect x="109.6" y="579.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="112.6" y="590.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (7 samples, 0.05%)</title><rect x="110.3" y="579.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="113.3" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.02%)</title><rect x="110.9" y="579.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="113.9" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (6 samples, 0.05%)</title><rect x="111.3" y="579.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="114.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.04%)</title><rect x="111.4" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.04%)</title><rect x="111.4" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="114.4" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.02%)</title><rect x="111.6" y="531.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="114.6" y="542.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.02%)</title><rect x="111.6" y="515.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="114.6" y="526.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.02%)</title><rect x="111.6" y="499.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.6" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.03%)</title><rect x="111.8" y="579.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="114.8" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (5 samples, 0.04%)</title><rect x="112.3" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="115.3" y="590.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (11 samples, 0.08%)</title><rect x="112.8" y="579.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="115.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (267 samples, 2.03%)</title><rect x="113.9" y="595.0" width="23.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="116.9" y="606.0">[..</text>
</g>
<g>
<title>/lib64/ld-2.30.so (5 samples, 0.04%)</title><rect x="113.9" y="579.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="116.9" y="590.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (21 samples, 0.16%)</title><rect x="114.3" y="579.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="117.3" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (229 samples, 1.74%)</title><rect x="116.2" y="579.0" width="20.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="119.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (206 samples, 1.56%)</title><rect x="118.3" y="563.0" width="18.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="121.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (206 samples, 1.56%)</title><rect x="118.3" y="547.0" width="18.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="121.3" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (187 samples, 1.42%)</title><rect x="119.9" y="531.0" width="16.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="122.9" y="542.0"></text>
</g>
<g>
<title>do_futex (177 samples, 1.34%)</title><rect x="120.8" y="515.0" width="15.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="123.8" y="526.0"></text>
</g>
<g>
<title>futex_wait (174 samples, 1.32%)</title><rect x="121.1" y="499.0" width="15.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="124.1" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (70 samples, 0.53%)</title><rect x="122.8" y="483.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="125.8" y="494.0"></text>
</g>
<g>
<title>plist_add (12 samples, 0.09%)</title><rect x="123.8" y="467.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="126.8" y="478.0"></text>
</g>
<g>
<title>schedule (47 samples, 0.36%)</title><rect x="124.9" y="467.0" width="4.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="127.9" y="478.0"></text>
</g>
<g>
<title>__schedule (41 samples, 0.31%)</title><rect x="125.4" y="451.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="128.4" y="462.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.12%)</title><rect x="127.7" y="435.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="130.7" y="446.0"></text>
</g>
<g>
<title>futex_wait_setup (84 samples, 0.64%)</title><rect x="129.1" y="483.0" width="7.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="132.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock (9 samples, 0.07%)</title><rect x="133.1" y="467.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="136.1" y="478.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.04%)</title><rect x="133.9" y="467.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="136.9" y="478.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (3 samples, 0.02%)</title><rect x="134.0" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="137.0" y="462.0"></text>
</g>
<g>
<title>get_futex_value_locked (17 samples, 0.13%)</title><rect x="134.3" y="467.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="137.3" y="478.0"></text>
</g>
<g>
<title>hash_futex (9 samples, 0.07%)</title><rect x="135.8" y="467.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="138.8" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.03%)</title><rect x="136.7" y="579.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="139.7" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (7 samples, 0.05%)</title><rect x="137.1" y="579.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="140.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (16 samples, 0.12%)</title><rect x="138.0" y="643.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (16 samples, 0.12%)</title><rect x="138.0" y="627.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (16 samples, 0.12%)</title><rect x="138.0" y="611.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.08%)</title><rect x="138.0" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.08%)</title><rect x="138.0" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.06%)</title><rect x="138.2" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.2" y="574.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.03%)</title><rect x="138.2" y="547.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="141.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="138.5" y="547.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="141.5" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.03%)</title><rect x="138.5" y="531.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="141.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.03%)</title><rect x="138.5" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.03%)</title><rect x="138.5" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.5" y="510.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.03%)</title><rect x="138.5" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="141.5" y="494.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.02%)</title><rect x="138.6" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="141.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (6 samples, 0.05%)</title><rect x="138.9" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (647 samples, 4.91%)</title><rect x="139.4" y="643.0" width="58.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.4" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (647 samples, 4.91%)</title><rect x="139.4" y="627.0" width="58.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.4" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (647 samples, 4.91%)</title><rect x="139.4" y="611.0" width="58.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.4" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (647 samples, 4.91%)</title><rect x="139.4" y="595.0" width="58.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.4" y="606.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (633 samples, 4.80%)</title><rect x="140.7" y="579.0" width="56.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.7" y="590.0">jdk/in..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.03%)</title><rect x="141.6" y="563.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="144.6" y="574.0"></text>
</g>
<g>
<title>Unsafe_Unpark (94 samples, 0.71%)</title><rect x="142.2" y="563.0" width="8.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="145.2" y="574.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.04%)</title><rect x="142.6" y="547.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="145.6" y="558.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (8 samples, 0.06%)</title><rect x="143.4" y="547.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="146.4" y="558.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (23 samples, 0.17%)</title><rect x="144.1" y="547.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="147.1" y="558.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (26 samples, 0.20%)</title><rect x="146.3" y="547.0" width="2.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="149.3" y="558.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.02%)</title><rect x="148.6" y="547.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="151.6" y="558.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (6 samples, 0.05%)</title><rect x="148.9" y="547.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="151.9" y="558.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (13 samples, 0.10%)</title><rect x="149.4" y="547.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="152.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.02%)</title><rect x="150.6" y="563.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="153.6" y="574.0"></text>
</g>
<g>
<title>/lib64/ld-2.30.so (3 samples, 0.02%)</title><rect x="150.6" y="547.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="153.6" y="558.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (518 samples, 3.93%)</title><rect x="151.0" y="563.0" width="46.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="154.0" y="574.0">pthr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (494 samples, 3.75%)</title><rect x="153.1" y="547.0" width="44.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="156.1" y="558.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (494 samples, 3.75%)</title><rect x="153.1" y="531.0" width="44.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="156.1" y="542.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (476 samples, 3.61%)</title><rect x="154.7" y="515.0" width="42.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.7" y="526.0">__x6..</text>
</g>
<g>
<title>do_futex (468 samples, 3.55%)</title><rect x="155.4" y="499.0" width="42.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="158.4" y="510.0">do_..</text>
</g>
<g>
<title>futex_wake (465 samples, 3.53%)</title><rect x="155.7" y="483.0" width="41.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="158.7" y="494.0">fut..</text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.03%)</title><rect x="160.3" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="163.3" y="478.0"></text>
</g>
<g>
<title>get_futex_key (7 samples, 0.05%)</title><rect x="160.6" y="467.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="163.6" y="478.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.03%)</title><rect x="161.3" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="164.3" y="478.0"></text>
</g>
<g>
<title>mark_wake_futex (36 samples, 0.27%)</title><rect x="161.6" y="467.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="164.6" y="478.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.03%)</title><rect x="164.5" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="167.5" y="462.0"></text>
</g>
<g>
<title>wake_q_add_safe (19 samples, 0.14%)</title><rect x="164.8" y="467.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.8" y="478.0"></text>
</g>
<g>
<title>wake_up_q (344 samples, 2.61%)</title><rect x="166.5" y="467.0" width="30.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="169.5" y="478.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (342 samples, 2.60%)</title><rect x="166.7" y="451.0" width="30.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="169.7" y="462.0">tr..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (338 samples, 2.57%)</title><rect x="167.1" y="435.0" width="30.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.1" y="446.0">_r..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$78/959660539.run (5,825 samples, 44.21%)</title><rect x="197.4" y="675.0" width="521.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.4" y="686.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda$78/959660539.run</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$put$3 (5,825 samples, 44.21%)</title><rect x="197.4" y="659.0" width="521.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.4" y="670.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$put$3</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.putImpl (5,825 samples, 44.21%)</title><rect x="197.4" y="643.0" width="521.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.4" y="654.0">ru/mail/polis/service/s3ponia/AsyncService.putImpl</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/133406561.linkToTargetMethod (23 samples, 0.17%)</title><rect x="200.6" y="627.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1277147491.invoke (23 samples, 0.17%)</title><rect x="200.6" y="611.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/665032766.invokeStatic (23 samples, 0.17%)</title><rect x="200.6" y="595.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (23 samples, 0.17%)</title><rect x="200.6" y="579.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (23 samples, 0.17%)</title><rect x="200.6" y="563.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.6" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.05%)</title><rect x="202.1" y="547.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="205.1" y="558.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.05%)</title><rect x="202.1" y="531.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="205.1" y="542.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.05%)</title><rect x="202.1" y="515.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="205.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/413968374.linkToTargetMethod (5 samples, 0.04%)</title><rect x="202.6" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/453151076.invokeStatic (5 samples, 0.04%)</title><rect x="202.6" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$79/524095067.get$Lambda (5 samples, 0.04%)</title><rect x="202.6" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (290 samples, 2.20%)</title><rect x="203.1" y="627.0" width="26.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.1" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (288 samples, 2.19%)</title><rect x="203.3" y="611.0" width="25.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.3" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (40 samples, 0.30%)</title><rect x="203.8" y="595.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (40 samples, 0.30%)</title><rect x="203.8" y="579.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (40 samples, 0.30%)</title><rect x="203.8" y="563.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (40 samples, 0.30%)</title><rect x="203.8" y="547.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (40 samples, 0.30%)</title><rect x="203.8" y="531.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.05%)</title><rect x="207.4" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.05%)</title><rect x="207.4" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.05%)</title><rect x="207.4" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.05%)</title><rect x="207.4" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.05%)</title><rect x="207.4" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.03%)</title><rect x="207.6" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.02%)</title><rect x="207.7" y="499.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="210.7" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.02%)</title><rect x="207.7" y="483.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="210.7" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="207.7" y="467.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="210.7" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="207.7" y="451.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="210.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (235 samples, 1.78%)</title><rect x="207.9" y="595.0" width="21.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.9" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (235 samples, 1.78%)</title><rect x="207.9" y="579.0" width="21.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (235 samples, 1.78%)</title><rect x="207.9" y="563.0" width="21.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.9" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (235 samples, 1.78%)</title><rect x="207.9" y="547.0" width="21.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.9" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (233 samples, 1.77%)</title><rect x="208.1" y="531.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.1" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (56 samples, 0.43%)</title><rect x="208.9" y="515.0" width="5.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="211.9" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.04%)</title><rect x="209.3" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="212.3" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (16 samples, 0.12%)</title><rect x="209.7" y="499.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="212.7" y="510.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (14 samples, 0.11%)</title><rect x="211.2" y="499.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="214.2" y="510.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.03%)</title><rect x="212.5" y="499.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="215.5" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (11 samples, 0.08%)</title><rect x="212.9" y="499.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="215.9" y="510.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (166 samples, 1.26%)</title><rect x="214.1" y="515.0" width="14.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="217.1" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (149 samples, 1.13%)</title><rect x="215.6" y="499.0" width="13.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="218.6" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (149 samples, 1.13%)</title><rect x="215.6" y="483.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="218.6" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (142 samples, 1.08%)</title><rect x="216.2" y="467.0" width="12.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.2" y="478.0"></text>
</g>
<g>
<title>do_futex (139 samples, 1.05%)</title><rect x="216.5" y="451.0" width="12.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.5" y="462.0"></text>
</g>
<g>
<title>futex_wake (139 samples, 1.05%)</title><rect x="216.5" y="435.0" width="12.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="219.5" y="446.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.05%)</title><rect x="218.2" y="419.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="221.2" y="430.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.02%)</title><rect x="218.6" y="403.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="221.6" y="414.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.02%)</title><rect x="218.8" y="419.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="221.8" y="430.0"></text>
</g>
<g>
<title>wake_up_q (110 samples, 0.83%)</title><rect x="219.1" y="419.0" width="9.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="222.1" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (109 samples, 0.83%)</title><rect x="219.2" y="403.0" width="9.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="222.2" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (106 samples, 0.80%)</title><rect x="219.5" y="387.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="222.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.08%)</title><rect x="229.1" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsertWithTimeStamp (375 samples, 2.85%)</title><rect x="230.0" y="627.0" width="33.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.0" y="638.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (15 samples, 0.11%)</title><rect x="230.1" y="611.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (15 samples, 0.11%)</title><rect x="230.1" y="595.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (15 samples, 0.11%)</title><rect x="230.1" y="579.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.1" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.05%)</title><rect x="230.4" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="233.4" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.04%)</title><rect x="230.5" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.5" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (5 samples, 0.04%)</title><rect x="230.5" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.5" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (5 samples, 0.04%)</title><rect x="230.5" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (5 samples, 0.04%)</title><rect x="230.9" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (5 samples, 0.04%)</title><rect x="230.9" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsertWithTimeStamp (328 samples, 2.49%)</title><rect x="231.7" y="611.0" width="29.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.7" y="622.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (328 samples, 2.49%)</title><rect x="231.7" y="595.0" width="29.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.7" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (305 samples, 2.31%)</title><rect x="233.7" y="579.0" width="27.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.7" y="590.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.02%)</title><rect x="235.2" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (284 samples, 2.16%)</title><rect x="235.6" y="563.0" width="25.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.6" y="574.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (284 samples, 2.16%)</title><rect x="235.6" y="547.0" width="25.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.6" y="558.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (100 samples, 0.76%)</title><rect x="252.0" y="531.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.0" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (100 samples, 0.76%)</title><rect x="252.0" y="515.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (45 samples, 0.34%)</title><rect x="256.8" y="499.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.8" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (45 samples, 0.34%)</title><rect x="256.8" y="483.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.8" y="494.0"></text>
</g>
<g>
<title>vectorizedMismatch (8 samples, 0.06%)</title><rect x="260.1" y="467.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="263.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.flush (29 samples, 0.22%)</title><rect x="261.0" y="611.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.save (29 samples, 0.22%)</title><rect x="261.0" y="595.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.saveTo (29 samples, 0.22%)</title><rect x="261.0" y="579.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (26 samples, 0.20%)</title><rect x="261.3" y="563.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (25 samples, 0.19%)</title><rect x="261.3" y="547.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (24 samples, 0.18%)</title><rect x="261.4" y="531.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (24 samples, 0.18%)</title><rect x="261.4" y="515.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (24 samples, 0.18%)</title><rect x="261.4" y="499.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.4" y="510.0"></text>
</g>
<g>
<title>__libc_write (24 samples, 0.18%)</title><rect x="261.4" y="483.0" width="2.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="264.4" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.17%)</title><rect x="261.5" y="467.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="264.5" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.17%)</title><rect x="261.5" y="451.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="264.5" y="462.0"></text>
</g>
<g>
<title>ksys_write (22 samples, 0.17%)</title><rect x="261.6" y="435.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="264.6" y="446.0"></text>
</g>
<g>
<title>vfs_write (20 samples, 0.15%)</title><rect x="261.7" y="419.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="264.7" y="430.0"></text>
</g>
<g>
<title>new_sync_write (19 samples, 0.14%)</title><rect x="261.8" y="403.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.8" y="414.0"></text>
</g>
<g>
<title>ext4_file_write_iter?[ext4] (19 samples, 0.14%)</title><rect x="261.8" y="387.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.8" y="398.0"></text>
</g>
<g>
<title>__generic_file_write_iter (19 samples, 0.14%)</title><rect x="261.8" y="371.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="264.8" y="382.0"></text>
</g>
<g>
<title>generic_perform_write (18 samples, 0.14%)</title><rect x="261.9" y="355.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="264.9" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_begin?[ext4] (3 samples, 0.02%)</title><rect x="262.0" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="265.0" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end?[ext4] (11 samples, 0.08%)</title><rect x="262.3" y="339.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="265.3" y="350.0"></text>
</g>
<g>
<title>generic_write_end (10 samples, 0.08%)</title><rect x="262.4" y="323.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="265.4" y="334.0"></text>
</g>
<g>
<title>__mark_inode_dirty (10 samples, 0.08%)</title><rect x="262.4" y="307.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="265.4" y="318.0"></text>
</g>
<g>
<title>ext4_dirty_inode?[ext4] (10 samples, 0.08%)</title><rect x="262.4" y="291.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="265.4" y="302.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty?[ext4] (9 samples, 0.07%)</title><rect x="262.4" y="275.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="265.4" y="286.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty?[ext4] (6 samples, 0.05%)</title><rect x="262.4" y="259.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="265.4" y="270.0"></text>
</g>
<g>
<title>ext4_inode_csum_set?[ext4] (5 samples, 0.04%)</title><rect x="262.5" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="265.5" y="254.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0?[ext4] (5 samples, 0.04%)</title><rect x="262.5" y="227.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="265.5" y="238.0"></text>
</g>
<g>
<title>chksum_update (5 samples, 0.04%)</title><rect x="262.5" y="211.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="265.5" y="222.0"></text>
</g>
<g>
<title>__crc32c_le (5 samples, 0.04%)</title><rect x="262.5" y="195.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="265.5" y="206.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write?[ext4] (3 samples, 0.02%)</title><rect x="262.9" y="259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.9" y="270.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc?[ext4] (3 samples, 0.02%)</title><rect x="262.9" y="243.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getCounter (3,306 samples, 25.09%)</title><rect x="263.6" y="627.0" width="296.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.6" y="638.0">ru/mail/polis/s3ponia/AsyncServiceUtilit..</text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (3 samples, 0.02%)</title><rect x="264.5" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.5" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (8 samples, 0.06%)</title><rect x="265.0" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (4 samples, 0.03%)</title><rect x="265.7" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getFutures (3,279 samples, 24.89%)</title><rect x="266.0" y="611.0" width="293.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.0" y="622.0">ru/mail/polis/s3ponia/AsyncServiceUtili..</text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.10%)</title><rect x="267.4" y="595.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (13 samples, 0.10%)</title><rect x="267.4" y="579.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.10%)</title><rect x="267.4" y="563.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (13 samples, 0.10%)</title><rect x="267.4" y="547.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.10%)</title><rect x="267.4" y="531.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (7 samples, 0.05%)</title><rect x="268.6" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.03%)</title><rect x="268.8" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.8" y="590.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (7 samples, 0.05%)</title><rect x="269.2" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.proxy (3,237 samples, 24.57%)</title><rect x="269.8" y="595.0" width="289.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.8" y="606.0">ru/mail/polis/s3ponia/AsyncServiceUtili..</text>
</g>
<g>
<title>java/util/HashMap.get (52 samples, 0.39%)</title><rect x="269.8" y="579.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.05%)</title><rect x="269.8" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (46 samples, 0.35%)</title><rect x="270.3" y="563.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (46 samples, 0.35%)</title><rect x="270.3" y="547.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (46 samples, 0.35%)</title><rect x="270.3" y="531.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.3" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.05%)</title><rect x="273.8" y="515.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="276.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,185 samples, 24.17%)</title><rect x="274.5" y="579.0" width="285.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.5" y="590.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,185 samples, 24.17%)</title><rect x="274.5" y="563.0" width="285.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.5" y="574.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (34 samples, 0.26%)</title><rect x="277.0" y="547.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (28 samples, 0.21%)</title><rect x="277.5" y="531.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="280.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (28 samples, 0.21%)</title><rect x="277.5" y="515.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (588 samples, 4.46%)</title><rect x="280.0" y="547.0" width="52.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.0" y="558.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (53 samples, 0.40%)</title><rect x="292.6" y="531.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="295.6" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (52 samples, 0.39%)</title><rect x="292.7" y="515.0" width="4.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="295.7" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (52 samples, 0.39%)</title><rect x="292.7" y="499.0" width="4.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="295.7" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (49 samples, 0.37%)</title><rect x="293.0" y="483.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="296.0" y="494.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (26 samples, 0.20%)</title><rect x="293.1" y="467.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="296.1" y="478.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (3 samples, 0.02%)</title><rect x="295.5" y="467.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="298.5" y="478.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (3 samples, 0.02%)</title><rect x="295.5" y="451.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="298.5" y="462.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (4 samples, 0.03%)</title><rect x="295.8" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="298.8" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (3 samples, 0.02%)</title><rect x="295.8" y="451.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="298.8" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.06%)</title><rect x="296.3" y="467.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="299.3" y="478.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (3 samples, 0.02%)</title><rect x="296.4" y="451.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="299.4" y="462.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (4 samples, 0.03%)</title><rect x="297.0" y="467.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="300.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (389 samples, 2.95%)</title><rect x="297.4" y="531.0" width="34.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.4" y="542.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (102 samples, 0.77%)</title><rect x="299.6" y="515.0" width="9.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="302.6" y="526.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (5 samples, 0.04%)</title><rect x="301.2" y="499.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="304.2" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (9 samples, 0.07%)</title><rect x="301.7" y="499.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="304.7" y="510.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (69 samples, 0.52%)</title><rect x="302.6" y="499.0" width="6.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="305.6" y="510.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (13 samples, 0.10%)</title><rect x="306.5" y="483.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="309.5" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.03%)</title><rect x="307.7" y="483.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="310.7" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (7 samples, 0.05%)</title><rect x="308.0" y="483.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="311.0" y="494.0"></text>
</g>
<g>
<title>__libc_recv (242 samples, 1.84%)</title><rect x="308.8" y="515.0" width="21.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="311.8" y="526.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (213 samples, 1.62%)</title><rect x="311.2" y="499.0" width="19.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="314.2" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (213 samples, 1.62%)</title><rect x="311.2" y="483.0" width="19.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="314.2" y="494.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (199 samples, 1.51%)</title><rect x="312.3" y="467.0" width="17.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="315.3" y="478.0"></text>
</g>
<g>
<title>__sys_recvfrom (196 samples, 1.49%)</title><rect x="312.5" y="451.0" width="17.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="315.5" y="462.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.02%)</title><rect x="312.7" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="315.7" y="446.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (171 samples, 1.30%)</title><rect x="313.0" y="435.0" width="15.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="316.0" y="446.0"></text>
</g>
<g>
<title>tcp_recvmsg (169 samples, 1.28%)</title><rect x="313.1" y="419.0" width="15.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="316.1" y="430.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (80 samples, 0.61%)</title><rect x="314.8" y="403.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="317.8" y="414.0"></text>
</g>
<g>
<title>__ip_queue_xmit (77 samples, 0.58%)</title><rect x="314.9" y="387.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="317.9" y="398.0"></text>
</g>
<g>
<title>ip_output (76 samples, 0.58%)</title><rect x="315.0" y="371.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="318.0" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (72 samples, 0.55%)</title><rect x="315.0" y="355.0" width="6.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.0" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.06%)</title><rect x="315.3" y="339.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="318.3" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.02%)</title><rect x="315.6" y="323.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="318.6" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (61 samples, 0.46%)</title><rect x="316.0" y="339.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="319.0" y="350.0"></text>
</g>
<g>
<title>do_softirq.part.0 (59 samples, 0.45%)</title><rect x="316.2" y="323.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="319.2" y="334.0"></text>
</g>
<g>
<title>do_softirq_own_stack (58 samples, 0.44%)</title><rect x="316.3" y="307.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="319.3" y="318.0"></text>
</g>
<g>
<title>__softirqentry_text_start (58 samples, 0.44%)</title><rect x="316.3" y="291.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="319.3" y="302.0"></text>
</g>
<g>
<title>net_rx_action (54 samples, 0.41%)</title><rect x="316.6" y="275.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.6" y="286.0"></text>
</g>
<g>
<title>process_backlog (53 samples, 0.40%)</title><rect x="316.7" y="259.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="319.7" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (49 samples, 0.37%)</title><rect x="317.1" y="243.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv (47 samples, 0.36%)</title><rect x="317.3" y="227.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="320.3" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (46 samples, 0.35%)</title><rect x="317.3" y="211.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="320.3" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (46 samples, 0.35%)</title><rect x="317.3" y="195.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="320.3" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (46 samples, 0.35%)</title><rect x="317.3" y="179.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="320.3" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.02%)</title><rect x="317.4" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="320.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (41 samples, 0.31%)</title><rect x="317.7" y="163.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="320.7" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.03%)</title><rect x="318.2" y="147.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="321.2" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.05%)</title><rect x="318.5" y="147.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="321.5" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (7 samples, 0.05%)</title><rect x="318.5" y="131.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="321.5" y="142.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (6 samples, 0.05%)</title><rect x="318.6" y="115.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="321.6" y="126.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (4 samples, 0.03%)</title><rect x="318.8" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="321.8" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 0.19%)</title><rect x="319.1" y="147.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="322.1" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.19%)</title><rect x="319.1" y="131.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.1" y="142.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.16%)</title><rect x="319.2" y="115.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="322.2" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.08%)</title><rect x="319.5" y="99.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="322.5" y="110.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.02%)</title><rect x="319.5" y="83.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="322.5" y="94.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.03%)</title><rect x="319.8" y="83.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="322.8" y="94.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.02%)</title><rect x="320.1" y="83.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.1" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.03%)</title><rect x="320.4" y="99.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="323.4" y="110.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.02%)</title><rect x="321.1" y="115.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="324.1" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.03%)</title><rect x="321.5" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="324.5" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.02%)</title><rect x="321.5" y="339.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="324.5" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.02%)</title><rect x="321.5" y="323.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="324.5" y="334.0"></text>
</g>
<g>
<title>sk_wait_data (63 samples, 0.48%)</title><rect x="322.2" y="403.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="325.2" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.03%)</title><rect x="322.6" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="325.6" y="398.0"></text>
</g>
<g>
<title>add_wait_queue (4 samples, 0.03%)</title><rect x="322.9" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="325.9" y="398.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.04%)</title><rect x="323.4" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="326.4" y="398.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.03%)</title><rect x="323.4" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="326.4" y="382.0"></text>
</g>
<g>
<title>wait_woken (45 samples, 0.34%)</title><rect x="323.8" y="387.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="326.8" y="398.0"></text>
</g>
<g>
<title>schedule_timeout (44 samples, 0.33%)</title><rect x="323.9" y="371.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="326.9" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.11%)</title><rect x="323.9" y="355.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="326.9" y="366.0"></text>
</g>
<g>
<title>lock_timer_base (4 samples, 0.03%)</title><rect x="325.2" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="328.2" y="366.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.19%)</title><rect x="325.6" y="355.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="328.6" y="366.0"></text>
</g>
<g>
<title>__schedule (22 samples, 0.17%)</title><rect x="325.9" y="339.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="328.9" y="350.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.05%)</title><rect x="327.3" y="323.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="330.3" y="334.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.03%)</title><rect x="327.8" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="330.8" y="414.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.02%)</title><rect x="327.9" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="330.9" y="398.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.09%)</title><rect x="328.3" y="435.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="331.3" y="446.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.08%)</title><rect x="328.4" y="419.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="331.4" y="430.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (4 samples, 0.03%)</title><rect x="328.5" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.5" y="414.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.05%)</title><rect x="328.8" y="403.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="331.8" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.06%)</title><rect x="329.4" y="435.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="332.4" y="446.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.06%)</title><rect x="329.4" y="419.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.4" y="430.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.05%)</title><rect x="329.4" y="403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="332.4" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (19 samples, 0.14%)</title><rect x="330.4" y="515.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="333.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (4 samples, 0.03%)</title><rect x="332.2" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (406 samples, 3.08%)</title><rect x="332.7" y="547.0" width="36.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.7" y="558.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (36 samples, 0.27%)</title><rect x="335.0" y="531.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (36 samples, 0.27%)</title><rect x="335.0" y="515.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (36 samples, 0.27%)</title><rect x="335.0" y="499.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (21 samples, 0.16%)</title><rect x="335.1" y="483.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.1" y="494.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (19 samples, 0.14%)</title><rect x="335.3" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.3" y="478.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (17 samples, 0.13%)</title><rect x="335.4" y="451.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.4" y="462.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (15 samples, 0.11%)</title><rect x="335.6" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (14 samples, 0.11%)</title><rect x="337.0" y="483.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.03%)</title><rect x="337.9" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.9" y="478.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.03%)</title><rect x="337.9" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (56 samples, 0.43%)</title><rect x="338.2" y="531.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (8 samples, 0.06%)</title><rect x="340.6" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.16%)</title><rect x="341.4" y="515.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (20 samples, 0.15%)</title><rect x="341.4" y="499.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.4" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.05%)</title><rect x="342.6" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (156 samples, 1.18%)</title><rect x="343.2" y="531.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.2" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.06%)</title><rect x="344.6" y="515.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="347.6" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 1.01%)</title><rect x="345.3" y="515.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.3" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 1.01%)</title><rect x="345.3" y="499.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (25 samples, 0.19%)</title><rect x="357.2" y="531.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (17 samples, 0.13%)</title><rect x="359.5" y="531.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.5" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="360.6" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (88 samples, 0.67%)</title><rect x="361.0" y="531.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="364.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (39 samples, 0.30%)</title><rect x="365.3" y="515.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (39 samples, 0.30%)</title><rect x="365.3" y="499.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (170 samples, 1.29%)</title><rect x="369.0" y="547.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.0" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.05%)</title><rect x="379.1" y="531.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="382.1" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (50 samples, 0.38%)</title><rect x="379.6" y="531.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.6" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (50 samples, 0.38%)</title><rect x="379.6" y="515.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.charAt (50 samples, 0.38%)</title><rect x="379.6" y="499.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (43 samples, 0.33%)</title><rect x="384.3" y="547.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (24 samples, 0.18%)</title><rect x="385.7" y="531.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (24 samples, 0.18%)</title><rect x="385.7" y="515.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.7" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.02%)</title><rect x="387.8" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="390.8" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.02%)</title><rect x="387.8" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="390.8" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.02%)</title><rect x="387.8" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="390.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.05%)</title><rect x="388.1" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (227 samples, 1.72%)</title><rect x="388.7" y="547.0" width="20.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.7" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (4 samples, 0.03%)</title><rect x="389.1" y="531.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="392.1" y="542.0"></text>
</g>
<g>
<title>setsockopt (218 samples, 1.65%)</title><rect x="389.5" y="531.0" width="19.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="392.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (195 samples, 1.48%)</title><rect x="391.5" y="515.0" width="17.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="394.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (195 samples, 1.48%)</title><rect x="391.5" y="499.0" width="17.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="394.5" y="510.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (167 samples, 1.27%)</title><rect x="393.9" y="483.0" width="15.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="396.9" y="494.0"></text>
</g>
<g>
<title>__sys_setsockopt (161 samples, 1.22%)</title><rect x="394.5" y="467.0" width="14.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="397.5" y="478.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.05%)</title><rect x="395.5" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="398.5" y="462.0"></text>
</g>
<g>
<title>security_socket_setsockopt (25 samples, 0.19%)</title><rect x="396.0" y="451.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="399.0" y="462.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (24 samples, 0.18%)</title><rect x="396.1" y="435.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="399.1" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (13 samples, 0.10%)</title><rect x="397.1" y="419.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="400.1" y="430.0"></text>
</g>
<g>
<title>sock_setsockopt (96 samples, 0.73%)</title><rect x="398.2" y="451.0" width="8.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.2" y="462.0"></text>
</g>
<g>
<title>__get_user_4 (9 samples, 0.07%)</title><rect x="399.0" y="435.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.0" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.03%)</title><rect x="399.8" y="435.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.8" y="446.0"></text>
</g>
<g>
<title>lock_sock_nested (27 samples, 0.20%)</title><rect x="400.2" y="435.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="403.2" y="446.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.04%)</title><rect x="400.6" y="419.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="403.6" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.02%)</title><rect x="400.7" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="403.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (18 samples, 0.14%)</title><rect x="401.0" y="419.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="404.0" y="430.0"></text>
</g>
<g>
<title>release_sock (22 samples, 0.17%)</title><rect x="402.6" y="435.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="405.6" y="446.0"></text>
</g>
<g>
<title>tcp_release_cb (11 samples, 0.08%)</title><rect x="403.6" y="419.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="406.6" y="430.0"></text>
</g>
<g>
<title>sock_set_timeout (25 samples, 0.19%)</title><rect x="404.6" y="435.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="407.6" y="446.0"></text>
</g>
<g>
<title>_copy_from_user (20 samples, 0.15%)</title><rect x="405.0" y="419.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="408.0" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_string (15 samples, 0.11%)</title><rect x="405.5" y="403.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="408.5" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (23 samples, 0.17%)</title><rect x="406.8" y="451.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="409.8" y="462.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.17%)</title><rect x="406.8" y="435.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.8" y="446.0"></text>
</g>
<g>
<title>__fget (20 samples, 0.15%)</title><rect x="407.1" y="419.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="410.1" y="430.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,590 samples, 12.07%)</title><rect x="409.1" y="547.0" width="142.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.1" y="558.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (29 samples, 0.22%)</title><rect x="410.5" y="531.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="413.5" y="542.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (3 samples, 0.02%)</title><rect x="411.0" y="515.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="414.0" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.03%)</title><rect x="411.3" y="515.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="414.3" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.02%)</title><rect x="411.8" y="515.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="414.8" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.09%)</title><rect x="412.0" y="515.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="415.0" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.05%)</title><rect x="412.6" y="499.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="415.6" y="510.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.02%)</title><rect x="412.8" y="483.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="415.8" y="494.0"></text>
</g>
<g>
<title>__libc_send (1,536 samples, 11.66%)</title><rect x="413.1" y="531.0" width="137.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="416.1" y="542.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,521 samples, 11.54%)</title><rect x="414.4" y="515.0" width="136.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="417.4" y="526.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (1,521 samples, 11.54%)</title><rect x="414.4" y="499.0" width="136.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="417.4" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,504 samples, 11.41%)</title><rect x="415.7" y="483.0" width="134.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="418.7" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,503 samples, 11.41%)</title><rect x="415.8" y="467.0" width="134.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="418.8" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (3 samples, 0.02%)</title><rect x="416.5" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="419.5" y="462.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.02%)</title><rect x="416.8" y="451.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="419.8" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,480 samples, 11.23%)</title><rect x="417.0" y="451.0" width="132.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="420.0" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (3 samples, 0.02%)</title><rect x="417.4" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="420.4" y="446.0"></text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.08%)</title><rect x="417.7" y="435.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="420.7" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.05%)</title><rect x="418.0" y="419.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="421.0" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,463 samples, 11.10%)</title><rect x="418.6" y="435.0" width="131.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="421.6" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (4 samples, 0.03%)</title><rect x="418.9" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="421.9" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,455 samples, 11.04%)</title><rect x="419.3" y="419.0" width="130.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="422.3" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.05%)</title><rect x="422.3" y="403.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.3" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.04%)</title><rect x="422.4" y="387.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="425.4" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,232 samples, 9.35%)</title><rect x="422.9" y="403.0" width="110.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.9" y="414.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (1,230 samples, 9.34%)</title><rect x="423.0" y="387.0" width="110.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="426.0" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,158 samples, 8.79%)</title><rect x="424.9" y="371.0" width="103.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="427.9" y="382.0">__tcp_transm..</text>
</g>
<g>
<title>__ip_queue_xmit (1,082 samples, 8.21%)</title><rect x="427.6" y="355.0" width="96.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="430.6" y="366.0">__ip_queue_..</text>
</g>
<g>
<title>__sk_dst_check (10 samples, 0.08%)</title><rect x="428.5" y="339.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="431.5" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (9 samples, 0.07%)</title><rect x="428.6" y="323.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="431.6" y="334.0"></text>
</g>
<g>
<title>ip_local_out (31 samples, 0.24%)</title><rect x="429.5" y="339.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.5" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (31 samples, 0.24%)</title><rect x="429.5" y="323.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="432.5" y="334.0"></text>
</g>
<g>
<title>ip_send_check (20 samples, 0.15%)</title><rect x="429.6" y="307.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="432.6" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.08%)</title><rect x="431.4" y="307.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="434.4" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_output (10 samples, 0.08%)</title><rect x="431.4" y="291.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="434.4" y="302.0"></text>
</g>
<g>
<title>netlbl_enabled (6 samples, 0.05%)</title><rect x="431.7" y="275.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.7" y="286.0"></text>
</g>
<g>
<title>ip_output (1,030 samples, 7.82%)</title><rect x="432.3" y="339.0" width="92.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="435.3" y="350.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (6 samples, 0.05%)</title><rect x="433.2" y="323.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="436.2" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.03%)</title><rect x="433.3" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="436.3" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (988 samples, 7.50%)</title><rect x="433.7" y="323.0" width="88.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="436.7" y="334.0">ip_finish_..</text>
</g>
<g>
<title>__dev_queue_xmit (57 samples, 0.43%)</title><rect x="435.4" y="307.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.4" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (33 samples, 0.25%)</title><rect x="437.2" y="291.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="440.2" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (28 samples, 0.21%)</title><rect x="437.6" y="275.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.6" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.03%)</title><rect x="438.2" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="441.2" y="270.0"></text>
</g>
<g>
<title>netif_rx (10 samples, 0.08%)</title><rect x="438.5" y="259.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="441.5" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (10 samples, 0.08%)</title><rect x="438.5" y="243.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="441.5" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.07%)</title><rect x="438.6" y="227.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.6" y="238.0"></text>
</g>
<g>
<title>tcp_wfree (6 samples, 0.05%)</title><rect x="439.6" y="259.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="442.6" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (912 samples, 6.92%)</title><rect x="440.5" y="307.0" width="81.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="443.5" y="318.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.0 (909 samples, 6.90%)</title><rect x="440.8" y="291.0" width="81.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="443.8" y="302.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (895 samples, 6.79%)</title><rect x="442.0" y="275.0" width="80.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="445.0" y="286.0">do_softir..</text>
</g>
<g>
<title>__softirqentry_text_start (895 samples, 6.79%)</title><rect x="442.0" y="259.0" width="80.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="445.0" y="270.0">__softirq..</text>
</g>
<g>
<title>net_rx_action (878 samples, 6.66%)</title><rect x="443.5" y="243.0" width="78.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="446.5" y="254.0">net_rx_ac..</text>
</g>
<g>
<title>__kfree_skb_flush (4 samples, 0.03%)</title><rect x="445.0" y="227.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="448.0" y="238.0"></text>
</g>
<g>
<title>process_backlog (856 samples, 6.50%)</title><rect x="445.4" y="227.0" width="76.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="448.4" y="238.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (845 samples, 6.41%)</title><rect x="446.4" y="211.0" width="75.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.4" y="222.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.07%)</title><rect x="446.9" y="195.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="449.9" y="206.0"></text>
</g>
<g>
<title>ip_rcv (830 samples, 6.30%)</title><rect x="447.8" y="195.0" width="74.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="450.8" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (811 samples, 6.16%)</title><rect x="448.1" y="179.0" width="72.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="451.1" y="190.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (806 samples, 6.12%)</title><rect x="448.6" y="163.0" width="72.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="451.6" y="174.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (805 samples, 6.11%)</title><rect x="448.6" y="147.0" width="72.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="451.6" y="158.0">ip_proto..</text>
</g>
<g>
<title>tcp_v4_rcv (791 samples, 6.00%)</title><rect x="449.9" y="131.0" width="70.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="452.9" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (33 samples, 0.25%)</title><rect x="452.6" y="115.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="455.6" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (7 samples, 0.05%)</title><rect x="454.9" y="99.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.9" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (31 samples, 0.24%)</title><rect x="455.6" y="115.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="458.6" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (30 samples, 0.23%)</title><rect x="455.7" y="99.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="458.7" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (26 samples, 0.20%)</title><rect x="456.1" y="83.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="459.1" y="94.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (16 samples, 0.12%)</title><rect x="457.0" y="67.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.0" y="78.0"></text>
</g>
<g>
<title>avc_has_perm (6 samples, 0.05%)</title><rect x="457.3" y="51.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="460.3" y="62.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (3 samples, 0.02%)</title><rect x="457.9" y="51.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="460.9" y="62.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (687 samples, 5.21%)</title><rect x="458.6" y="115.0" width="61.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="461.6" y="126.0">tcp_v4..</text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.04%)</title><rect x="458.8" y="99.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="461.8" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (680 samples, 5.16%)</title><rect x="459.2" y="99.0" width="60.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="462.2" y="110.0">tcp_rc..</text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.06%)</title><rect x="462.1" y="83.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.1" y="94.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.06%)</title><rect x="462.1" y="67.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.1" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (393 samples, 2.98%)</title><rect x="462.8" y="83.0" width="35.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="465.8" y="94.0">soc..</text>
</g>
<g>
<title>__wake_up_common_lock (376 samples, 2.85%)</title><rect x="464.3" y="67.0" width="33.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="467.3" y="78.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (375 samples, 2.85%)</title><rect x="464.4" y="51.0" width="33.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="467.4" y="62.0">_r..</text>
</g>
<g>
<title>tcp_ack (196 samples, 1.49%)</title><rect x="498.0" y="83.0" width="17.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.0" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (85 samples, 0.65%)</title><rect x="502.0" y="67.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="505.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (26 samples, 0.20%)</title><rect x="502.1" y="51.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="505.1" y="62.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.07%)</title><rect x="504.4" y="51.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="507.4" y="62.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.02%)</title><rect x="505.2" y="51.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="508.2" y="62.0"></text>
</g>
<g>
<title>skb_release_data (46 samples, 0.35%)</title><rect x="505.5" y="51.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="508.5" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (16 samples, 0.12%)</title><rect x="509.6" y="67.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="512.6" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (12 samples, 0.09%)</title><rect x="511.2" y="67.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="514.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.05%)</title><rect x="511.7" y="51.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="514.7" y="62.0"></text>
</g>
<g>
<title>rb_first (6 samples, 0.05%)</title><rect x="512.3" y="67.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.3" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (7 samples, 0.05%)</title><rect x="513.0" y="67.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="516.0" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (4 samples, 0.03%)</title><rect x="514.0" y="67.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="517.0" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.02%)</title><rect x="514.4" y="67.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="517.4" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (8 samples, 0.06%)</title><rect x="514.8" y="67.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="517.8" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (7 samples, 0.05%)</title><rect x="515.5" y="83.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="518.5" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (13 samples, 0.10%)</title><rect x="516.4" y="83.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="519.4" y="94.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (16 samples, 0.12%)</title><rect x="517.5" y="83.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.5" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (10 samples, 0.08%)</title><rect x="519.0" y="83.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="522.0" y="94.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.04%)</title><rect x="519.4" y="67.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="522.4" y="78.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.03%)</title><rect x="519.5" y="51.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="522.5" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.02%)</title><rect x="519.8" y="83.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="522.8" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (6 samples, 0.05%)</title><rect x="520.1" y="115.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="523.1" y="126.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.05%)</title><rect x="520.7" y="179.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.7" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 0.06%)</title><rect x="521.4" y="179.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="524.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (8 samples, 0.06%)</title><rect x="521.4" y="163.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="524.4" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (25 samples, 0.19%)</title><rect x="522.3" y="323.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="525.3" y="334.0"></text>
</g>
<g>
<title>selinux_ip_postroute (22 samples, 0.17%)</title><rect x="522.3" y="307.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.3" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (17 samples, 0.13%)</title><rect x="522.7" y="291.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="525.7" y="302.0"></text>
</g>
<g>
<title>avc_has_perm (7 samples, 0.05%)</title><rect x="523.2" y="275.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="526.2" y="286.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (5 samples, 0.04%)</title><rect x="523.8" y="275.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.8" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.02%)</title><rect x="524.2" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="527.2" y="318.0"></text>
</g>
<g>
<title>__skb_clone (23 samples, 0.17%)</title><rect x="524.5" y="355.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="527.5" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.03%)</title><rect x="526.2" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="529.2" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.03%)</title><rect x="526.7" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.7" y="366.0"></text>
</g>
<g>
<title>skb_push (4 samples, 0.03%)</title><rect x="527.3" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="530.3" y="366.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (5 samples, 0.04%)</title><rect x="527.7" y="355.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="530.7" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (5 samples, 0.04%)</title><rect x="528.2" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="531.2" y="366.0"></text>
</g>
<g>
<title>ktime_get (16 samples, 0.12%)</title><rect x="528.6" y="371.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="531.6" y="382.0"></text>
</g>
<g>
<title>read_tsc (12 samples, 0.09%)</title><rect x="529.0" y="355.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="532.0" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (26 samples, 0.20%)</title><rect x="530.1" y="371.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="533.1" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.07%)</title><rect x="531.0" y="355.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="534.0" y="366.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.06%)</title><rect x="531.1" y="339.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="534.1" y="350.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (6 samples, 0.05%)</title><rect x="531.8" y="355.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="534.8" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (9 samples, 0.07%)</title><rect x="532.4" y="371.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="535.4" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (37 samples, 0.28%)</title><rect x="533.2" y="403.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.2" y="414.0"></text>
</g>
<g>
<title>copyin (30 samples, 0.23%)</title><rect x="533.4" y="387.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="536.4" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (30 samples, 0.23%)</title><rect x="533.4" y="371.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="536.4" y="382.0"></text>
</g>
<g>
<title>iov_iter_advance (5 samples, 0.04%)</title><rect x="536.1" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="539.1" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (18 samples, 0.14%)</title><rect x="536.5" y="403.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="539.5" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (17 samples, 0.13%)</title><rect x="536.6" y="387.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="539.6" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (72 samples, 0.55%)</title><rect x="538.1" y="403.0" width="6.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="541.1" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (59 samples, 0.45%)</title><rect x="539.2" y="387.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="542.2" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (12 samples, 0.09%)</title><rect x="541.1" y="371.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.1" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.09%)</title><rect x="541.1" y="355.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.1" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.03%)</title><rect x="541.7" y="339.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.7" y="350.0"></text>
</g>
<g>
<title>__ksize (9 samples, 0.07%)</title><rect x="542.1" y="371.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="545.1" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (17 samples, 0.13%)</title><rect x="543.0" y="371.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.0" y="382.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.02%)</title><rect x="544.2" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="547.2" y="366.0"></text>
</g>
<g>
<title>skb_entail (14 samples, 0.11%)</title><rect x="544.6" y="403.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="547.6" y="414.0"></text>
</g>
<g>
<title>tcp_chrono_start (6 samples, 0.05%)</title><rect x="545.3" y="387.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="548.3" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (13 samples, 0.10%)</title><rect x="545.9" y="403.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.9" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (23 samples, 0.17%)</title><rect x="547.1" y="403.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="550.1" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (23 samples, 0.17%)</title><rect x="547.1" y="387.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="550.1" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (10 samples, 0.08%)</title><rect x="548.2" y="371.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="551.2" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (4 samples, 0.03%)</title><rect x="549.1" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="552.1" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.07%)</title><rect x="549.6" y="451.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="552.6" y="462.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.07%)</title><rect x="549.6" y="435.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="552.6" y="446.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.02%)</title><rect x="550.1" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="553.1" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.02%)</title><rect x="550.4" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="553.4" y="494.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.02%)</title><rect x="550.4" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="553.4" y="478.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.02%)</title><rect x="550.4" y="451.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.4" y="462.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.02%)</title><rect x="550.7" y="531.0" width="0.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="553.7" y="542.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.02%)</title><rect x="550.9" y="531.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="553.9" y="542.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (37 samples, 0.28%)</title><rect x="551.5" y="547.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.5" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.02%)</title><rect x="554.5" y="531.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="557.5" y="542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.02%)</title><rect x="554.5" y="515.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="557.5" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.02%)</title><rect x="554.5" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="557.5" y="510.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (55 samples, 0.42%)</title><rect x="554.8" y="547.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.8" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.06%)</title><rect x="559.0" y="531.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="562.0" y="542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.06%)</title><rect x="559.0" y="515.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="562.0" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.06%)</title><rect x="559.0" y="499.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="562.0" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (8 samples, 0.06%)</title><rect x="559.0" y="483.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="562.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getReplicationConfiguration (132 samples, 1.00%)</title><rect x="559.7" y="627.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.parseAndValidateReplicas (132 samples, 1.00%)</title><rect x="559.7" y="611.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$ReplicationConfiguration.parse (132 samples, 1.00%)</title><rect x="559.7" y="595.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (10 samples, 0.08%)</title><rect x="559.7" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (10 samples, 0.08%)</title><rect x="559.7" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher$Is.&lt;init&gt; (10 samples, 0.08%)</title><rect x="559.7" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher$FastMatcher.&lt;init&gt; (10 samples, 0.08%)</title><rect x="559.7" y="531.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.&lt;init&gt; (10 samples, 0.08%)</title><rect x="559.7" y="515.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (122 samples, 0.93%)</title><rect x="560.6" y="579.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (40 samples, 0.30%)</title><rect x="561.1" y="563.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (40 samples, 0.30%)</title><rect x="561.1" y="547.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (40 samples, 0.30%)</title><rect x="561.1" y="531.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (40 samples, 0.30%)</title><rect x="561.1" y="515.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="564.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (40 samples, 0.30%)</title><rect x="561.1" y="499.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.30%)</title><rect x="561.1" y="483.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.30%)</title><rect x="561.1" y="467.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.1" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.04%)</title><rect x="564.2" y="451.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="567.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (14 samples, 0.11%)</title><rect x="564.7" y="563.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (8 samples, 0.06%)</title><rect x="565.3" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (5 samples, 0.04%)</title><rect x="565.5" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.04%)</title><rect x="565.5" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.04%)</title><rect x="565.5" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (5 samples, 0.04%)</title><rect x="565.5" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.04%)</title><rect x="565.5" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.04%)</title><rect x="565.5" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (5 samples, 0.04%)</title><rect x="566.0" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (22 samples, 0.17%)</title><rect x="566.4" y="563.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (22 samples, 0.17%)</title><rect x="566.4" y="547.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (22 samples, 0.17%)</title><rect x="566.4" y="531.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.4" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (22 samples, 0.17%)</title><rect x="566.4" y="515.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (4 samples, 0.03%)</title><rect x="568.0" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.access$200 (4 samples, 0.03%)</title><rect x="568.0" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.17%)</title><rect x="568.4" y="563.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.17%)</title><rect x="568.4" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.16%)</title><rect x="568.4" y="531.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="571.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.16%)</title><rect x="568.4" y="515.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.08%)</title><rect x="569.2" y="499.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.2" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (13 samples, 0.10%)</title><rect x="570.4" y="563.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.4" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableRandomAccessList.&lt;init&gt; (13 samples, 0.10%)</title><rect x="570.4" y="547.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.4" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.&lt;init&gt; (13 samples, 0.10%)</title><rect x="570.4" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.4" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.&lt;init&gt; (13 samples, 0.10%)</title><rect x="570.4" y="515.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (5 samples, 0.04%)</title><rect x="570.8" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.8" y="510.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.02%)</title><rect x="571.3" y="499.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.sendAckFromResp (1,349 samples, 10.24%)</title><rect x="571.5" y="627.0" width="120.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.5" y="638.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,349 samples, 10.24%)</title><rect x="571.5" y="611.0" width="120.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.5" y="622.0">one/nio/http/Ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (14 samples, 0.11%)</title><rect x="574.7" y="595.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.11%)</title><rect x="574.7" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.11%)</title><rect x="574.7" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.7" y="574.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.02%)</title><rect x="575.0" y="547.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="578.0" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.05%)</title><rect x="575.3" y="547.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="578.3" y="558.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.05%)</title><rect x="575.3" y="531.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="578.3" y="542.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.05%)</title><rect x="575.4" y="515.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="578.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,263 samples, 9.59%)</title><rect x="575.9" y="595.0" width="113.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.9" y="606.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (42 samples, 0.32%)</title><rect x="576.2" y="579.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (26 samples, 0.20%)</title><rect x="577.6" y="563.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (26 samples, 0.20%)</title><rect x="577.6" y="547.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (26 samples, 0.20%)</title><rect x="577.6" y="531.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.6" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.02%)</title><rect x="579.6" y="515.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="582.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,218 samples, 9.24%)</title><rect x="579.9" y="579.0" width="109.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.9" y="590.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,218 samples, 9.24%)</title><rect x="579.9" y="563.0" width="109.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.9" y="574.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,212 samples, 9.20%)</title><rect x="580.5" y="547.0" width="108.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.5" y="558.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.02%)</title><rect x="580.8" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,205 samples, 9.15%)</title><rect x="581.1" y="531.0" width="107.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.1" y="542.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (36 samples, 0.27%)</title><rect x="582.0" y="515.0" width="3.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="585.0" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (21 samples, 0.16%)</title><rect x="583.3" y="499.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="586.3" y="510.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.02%)</title><rect x="583.5" y="483.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="586.5" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (4 samples, 0.03%)</title><rect x="583.8" y="483.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="586.8" y="494.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (11 samples, 0.08%)</title><rect x="584.1" y="483.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="587.1" y="494.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.04%)</title><rect x="584.7" y="467.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="587.7" y="478.0"></text>
</g>
<g>
<title>__libc_send (1,156 samples, 8.77%)</title><rect x="585.2" y="515.0" width="103.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="588.2" y="526.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,140 samples, 8.65%)</title><rect x="586.7" y="499.0" width="102.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="589.7" y="510.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (1,140 samples, 8.65%)</title><rect x="586.7" y="483.0" width="102.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="589.7" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,120 samples, 8.50%)</title><rect x="588.1" y="467.0" width="100.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.1" y="478.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (1,118 samples, 8.49%)</title><rect x="588.3" y="451.0" width="100.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="591.3" y="462.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,077 samples, 8.17%)</title><rect x="590.0" y="435.0" width="96.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="593.0" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (13 samples, 0.10%)</title><rect x="590.4" y="419.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="593.4" y="430.0"></text>
</g>
<g>
<title>inet_send_prepare (6 samples, 0.05%)</title><rect x="591.0" y="403.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="594.0" y="414.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.08%)</title><rect x="591.6" y="419.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="594.6" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.08%)</title><rect x="591.7" y="403.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="594.7" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,048 samples, 7.95%)</title><rect x="592.6" y="419.0" width="93.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="595.6" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.05%)</title><rect x="592.7" y="403.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.05%)</title><rect x="592.7" y="387.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="595.7" y="398.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.04%)</title><rect x="593.2" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="596.2" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.02%)</title><rect x="593.4" y="387.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="596.4" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,036 samples, 7.86%)</title><rect x="593.6" y="403.0" width="92.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="596.6" y="414.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.05%)</title><rect x="595.9" y="387.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="598.9" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.03%)</title><rect x="596.1" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.1" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (890 samples, 6.75%)</title><rect x="596.5" y="387.0" width="79.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="599.5" y="398.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (888 samples, 6.74%)</title><rect x="596.7" y="371.0" width="79.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.7" y="382.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (830 samples, 6.30%)</title><rect x="598.2" y="355.0" width="74.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="601.2" y="366.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (773 samples, 5.87%)</title><rect x="600.4" y="339.0" width="69.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="603.4" y="350.0">__ip_qu..</text>
</g>
<g>
<title>__sk_dst_check (10 samples, 0.08%)</title><rect x="600.7" y="323.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="603.7" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (7 samples, 0.05%)</title><rect x="601.0" y="307.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="604.0" y="318.0"></text>
</g>
<g>
<title>ip_local_out (21 samples, 0.16%)</title><rect x="601.6" y="323.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="604.6" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (20 samples, 0.15%)</title><rect x="601.7" y="307.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="604.7" y="318.0"></text>
</g>
<g>
<title>ip_send_check (12 samples, 0.09%)</title><rect x="601.9" y="291.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="604.9" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.05%)</title><rect x="603.0" y="291.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="606.0" y="302.0"></text>
</g>
<g>
<title>selinux_ipv4_output (3 samples, 0.02%)</title><rect x="603.2" y="275.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="606.2" y="286.0"></text>
</g>
<g>
<title>ip_output (738 samples, 5.60%)</title><rect x="603.5" y="323.0" width="66.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="606.5" y="334.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (715 samples, 5.43%)</title><rect x="604.1" y="307.0" width="64.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="607.1" y="318.0">ip_fini..</text>
</g>
<g>
<title>__dev_queue_xmit (58 samples, 0.44%)</title><rect x="605.2" y="291.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="608.2" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (33 samples, 0.25%)</title><rect x="606.6" y="275.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="609.6" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (30 samples, 0.23%)</title><rect x="606.9" y="259.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="609.9" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (8 samples, 0.06%)</title><rect x="607.8" y="243.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="610.8" y="254.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.05%)</title><rect x="608.5" y="243.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="611.5" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.05%)</title><rect x="608.5" y="227.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.5" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.04%)</title><rect x="608.6" y="211.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="611.6" y="222.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.03%)</title><rect x="609.2" y="243.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="612.2" y="254.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.05%)</title><rect x="609.7" y="275.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="612.7" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.03%)</title><rect x="609.9" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="612.9" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (645 samples, 4.90%)</title><rect x="610.4" y="291.0" width="57.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="613.4" y="302.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (644 samples, 4.89%)</title><rect x="610.5" y="275.0" width="57.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="613.5" y="286.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (633 samples, 4.80%)</title><rect x="611.4" y="259.0" width="56.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="614.4" y="270.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (633 samples, 4.80%)</title><rect x="611.4" y="243.0" width="56.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.4" y="254.0">__soft..</text>
</g>
<g>
<title>net_rx_action (619 samples, 4.70%)</title><rect x="612.6" y="227.0" width="55.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="615.6" y="238.0">net_r..</text>
</g>
<g>
<title>process_backlog (608 samples, 4.61%)</title><rect x="613.6" y="211.0" width="54.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="616.6" y="222.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (597 samples, 4.53%)</title><rect x="614.6" y="195.0" width="53.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="617.6" y="206.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.05%)</title><rect x="615.0" y="179.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="618.0" y="190.0"></text>
</g>
<g>
<title>ip_rcv (587 samples, 4.46%)</title><rect x="615.5" y="179.0" width="52.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="618.5" y="190.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (581 samples, 4.41%)</title><rect x="615.5" y="163.0" width="52.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="618.5" y="174.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (578 samples, 4.39%)</title><rect x="615.8" y="147.0" width="51.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="618.8" y="158.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (575 samples, 4.36%)</title><rect x="616.0" y="131.0" width="51.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="619.0" y="142.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.04%)</title><rect x="616.7" y="115.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="619.7" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (563 samples, 4.27%)</title><rect x="617.1" y="115.0" width="50.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="620.1" y="126.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (25 samples, 0.19%)</title><rect x="619.4" y="99.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.4" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (26 samples, 0.20%)</title><rect x="621.7" y="99.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="624.7" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (26 samples, 0.20%)</title><rect x="621.7" y="83.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="624.7" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (25 samples, 0.19%)</title><rect x="621.8" y="67.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="624.8" y="78.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (9 samples, 0.07%)</title><rect x="623.2" y="51.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="626.2" y="62.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.04%)</title><rect x="623.3" y="35.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="626.3" y="46.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (3 samples, 0.02%)</title><rect x="623.7" y="35.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.7" y="46.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (481 samples, 3.65%)</title><rect x="624.2" y="99.0" width="43.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="627.2" y="110.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (478 samples, 3.63%)</title><rect x="624.4" y="83.0" width="42.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.4" y="94.0">tcp_..</text>
</g>
<g>
<title>sk_reset_timer (16 samples, 0.12%)</title><rect x="626.0" y="67.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="629.0" y="78.0"></text>
</g>
<g>
<title>mod_timer (16 samples, 0.12%)</title><rect x="626.0" y="51.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="629.0" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.05%)</title><rect x="626.3" y="35.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.3" y="46.0"></text>
</g>
<g>
<title>lock_timer_base (5 samples, 0.04%)</title><rect x="627.0" y="35.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="630.0" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (274 samples, 2.08%)</title><rect x="627.4" y="67.0" width="24.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="630.4" y="78.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (268 samples, 2.03%)</title><rect x="627.9" y="51.0" width="24.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="630.9" y="62.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (266 samples, 2.02%)</title><rect x="628.1" y="35.0" width="23.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="631.1" y="46.0">_..</text>
</g>
<g>
<title>tcp_ack (138 samples, 1.05%)</title><rect x="651.9" y="67.0" width="12.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="654.9" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (54 samples, 0.41%)</title><rect x="655.1" y="51.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="658.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (13 samples, 0.10%)</title><rect x="655.1" y="35.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="658.1" y="46.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.06%)</title><rect x="656.2" y="35.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="659.2" y="46.0"></text>
</g>
<g>
<title>skb_release_data (32 samples, 0.24%)</title><rect x="657.0" y="35.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="660.0" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (12 samples, 0.09%)</title><rect x="659.9" y="51.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="662.9" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.03%)</title><rect x="661.0" y="51.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="664.0" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.05%)</title><rect x="661.4" y="51.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="664.4" y="62.0"></text>
</g>
<g>
<title>rb_first (7 samples, 0.05%)</title><rect x="662.0" y="51.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="665.0" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (6 samples, 0.05%)</title><rect x="662.7" y="51.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="665.7" y="62.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.02%)</title><rect x="664.0" y="51.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="667.0" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.04%)</title><rect x="664.3" y="67.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="667.3" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.03%)</title><rect x="664.7" y="67.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="667.7" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (13 samples, 0.10%)</title><rect x="665.1" y="67.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="668.1" y="78.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.06%)</title><rect x="665.6" y="51.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="668.6" y="62.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.05%)</title><rect x="665.7" y="35.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="668.7" y="46.0"></text>
</g>
<g>
<title>tcp_queue_rcv (11 samples, 0.08%)</title><rect x="666.3" y="67.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="669.3" y="78.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.02%)</title><rect x="667.5" y="163.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.5" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.02%)</title><rect x="667.8" y="163.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="670.8" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.12%)</title><rect x="668.2" y="307.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.2" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (14 samples, 0.11%)</title><rect x="668.2" y="291.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="671.2" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (12 samples, 0.09%)</title><rect x="668.3" y="275.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="671.3" y="286.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (4 samples, 0.03%)</title><rect x="669.0" y="259.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="672.0" y="270.0"></text>
</g>
<g>
<title>__skb_clone (13 samples, 0.10%)</title><rect x="669.6" y="339.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="672.6" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (7 samples, 0.05%)</title><rect x="670.1" y="323.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="673.1" y="334.0"></text>
</g>
<g>
<title>__tcp_select_window (6 samples, 0.05%)</title><rect x="670.7" y="339.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.7" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (5 samples, 0.04%)</title><rect x="671.4" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="674.4" y="350.0"></text>
</g>
<g>
<title>ktime_get (9 samples, 0.07%)</title><rect x="672.5" y="355.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="675.5" y="366.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.04%)</title><rect x="672.9" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="675.9" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (25 samples, 0.19%)</title><rect x="673.3" y="355.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.3" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.08%)</title><rect x="674.3" y="339.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="677.3" y="350.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.08%)</title><rect x="674.4" y="323.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="677.4" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.03%)</title><rect x="674.8" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="677.8" y="318.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.05%)</title><rect x="675.6" y="355.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="678.6" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (15 samples, 0.11%)</title><rect x="676.2" y="387.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.2" y="398.0"></text>
</g>
<g>
<title>copyin (9 samples, 0.07%)</title><rect x="676.4" y="371.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="679.4" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_string (9 samples, 0.07%)</title><rect x="676.4" y="355.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="679.4" y="366.0"></text>
</g>
<g>
<title>iov_iter_advance (4 samples, 0.03%)</title><rect x="677.2" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="680.2" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (15 samples, 0.11%)</title><rect x="677.6" y="387.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.6" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (15 samples, 0.11%)</title><rect x="677.6" y="371.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.6" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (51 samples, 0.39%)</title><rect x="678.9" y="387.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="681.9" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (44 samples, 0.33%)</title><rect x="679.5" y="371.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="682.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (11 samples, 0.08%)</title><rect x="680.5" y="355.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="683.5" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.08%)</title><rect x="680.5" y="339.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="683.5" y="350.0"></text>
</g>
<g>
<title>__ksize (13 samples, 0.10%)</title><rect x="681.5" y="355.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.5" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.07%)</title><rect x="682.7" y="355.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="685.7" y="366.0"></text>
</g>
<g>
<title>skb_entail (8 samples, 0.06%)</title><rect x="683.5" y="387.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="686.5" y="398.0"></text>
</g>
<g>
<title>tcp_chrono_start (3 samples, 0.02%)</title><rect x="683.9" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="686.9" y="382.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.02%)</title><rect x="684.3" y="387.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="687.3" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (20 samples, 0.15%)</title><rect x="684.5" y="387.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="687.5" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (20 samples, 0.15%)</title><rect x="684.5" y="371.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="687.5" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (8 samples, 0.06%)</title><rect x="685.5" y="355.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="688.5" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (22 samples, 0.17%)</title><rect x="686.4" y="435.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="689.4" y="446.0"></text>
</g>
<g>
<title>__fget_light (21 samples, 0.16%)</title><rect x="686.5" y="419.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="689.5" y="430.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.14%)</title><rect x="686.8" y="403.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="689.8" y="414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.02%)</title><rect x="688.5" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="691.5" y="478.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.02%)</title><rect x="688.5" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="691.5" y="462.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.02%)</title><rect x="688.5" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="691.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (37 samples, 0.28%)</title><rect x="689.0" y="595.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (24 samples, 0.18%)</title><rect x="690.2" y="579.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (24 samples, 0.18%)</title><rect x="690.2" y="563.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$Header.getHeader (172 samples, 1.31%)</title><rect x="692.3" y="627.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$Header.getHeader (172 samples, 1.31%)</title><rect x="692.3" y="611.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.15%)</title><rect x="696.6" y="595.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.15%)</title><rect x="696.6" y="579.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (20 samples, 0.15%)</title><rect x="696.6" y="563.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (47 samples, 0.36%)</title><rect x="698.4" y="595.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (47 samples, 0.36%)</title><rect x="698.4" y="579.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (49 samples, 0.37%)</title><rect x="702.6" y="595.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (49 samples, 0.37%)</title><rect x="702.6" y="579.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (45 samples, 0.34%)</title><rect x="702.6" y="563.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (22 samples, 0.17%)</title><rect x="704.5" y="547.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.5" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (22 samples, 0.17%)</title><rect x="704.5" y="531.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.5" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.isWhitespace (22 samples, 0.17%)</title><rect x="704.5" y="515.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="706.7" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.7" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="706.7" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.7" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.02%)</title><rect x="706.7" y="531.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="709.7" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.02%)</title><rect x="706.7" y="515.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="709.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.04%)</title><rect x="707.0" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.04%)</title><rect x="707.0" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.0" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.02%)</title><rect x="707.0" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="710.0" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.02%)</title><rect x="707.0" y="547.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="710.0" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.02%)</title><rect x="707.0" y="531.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="710.0" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.02%)</title><rect x="707.0" y="515.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="710.0" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.02%)</title><rect x="707.0" y="499.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="710.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.02%)</title><rect x="707.5" y="595.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.byteBufferFromString (78 samples, 0.59%)</title><rect x="707.7" y="627.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.02%)</title><rect x="707.7" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.02%)</title><rect x="707.7" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.02%)</title><rect x="707.7" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="707.7" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.7" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.02%)</title><rect x="707.7" y="547.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="710.7" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.02%)</title><rect x="707.7" y="531.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="710.7" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.02%)</title><rect x="707.7" y="515.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="710.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.57%)</title><rect x="708.0" y="611.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (75 samples, 0.57%)</title><rect x="708.0" y="595.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (66 samples, 0.50%)</title><rect x="708.5" y="579.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (66 samples, 0.50%)</title><rect x="708.5" y="563.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.5" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (66 samples, 0.50%)</title><rect x="708.5" y="547.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (58 samples, 0.44%)</title><rect x="708.5" y="531.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (58 samples, 0.44%)</title><rect x="708.5" y="515.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.5" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (10 samples, 0.08%)</title><rect x="712.0" y="499.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="715.0" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (8 samples, 0.06%)</title><rect x="712.9" y="499.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="715.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.06%)</title><rect x="713.7" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.06%)</title><rect x="713.7" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.02%)</title><rect x="714.5" y="579.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.isHomeInReplicas (16 samples, 0.12%)</title><rect x="714.7" y="627.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (31 samples, 0.24%)</title><rect x="716.2" y="627.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (31 samples, 0.24%)</title><rect x="716.2" y="611.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$23/513700442.apply (26 samples, 0.20%)</title><rect x="716.5" y="595.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.5" y="606.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.02%)</title><rect x="716.5" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (23 samples, 0.17%)</title><rect x="716.8" y="579.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$79/524095067.run (2,296 samples, 17.43%)</title><rect x="719.0" y="675.0" width="205.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.0" y="686.0">ru/mail/polis/service/s3pon..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$putImpl$4 (2,293 samples, 17.40%)</title><rect x="719.3" y="659.0" width="205.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.3" y="670.0">ru/mail/polis/service/s3pon..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.upsertWithTimeStamp (2,293 samples, 17.40%)</title><rect x="719.3" y="643.0" width="205.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.3" y="654.0">ru/mail/polis/s3ponia/Async..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,782 samples, 13.52%)</title><rect x="721.0" y="627.0" width="159.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.0" y="638.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="725.1" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="728.1" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.03%)</title><rect x="725.1" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="728.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (22 samples, 0.17%)</title><rect x="725.6" y="611.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (22 samples, 0.17%)</title><rect x="725.6" y="595.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (22 samples, 0.17%)</title><rect x="725.6" y="579.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.6" y="590.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="726.3" y="563.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="729.3" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.08%)</title><rect x="726.6" y="563.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="729.6" y="574.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.06%)</title><rect x="726.8" y="547.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="729.8" y="558.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.05%)</title><rect x="726.9" y="531.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="729.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,669 samples, 12.67%)</title><rect x="727.5" y="611.0" width="149.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.5" y="622.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (86 samples, 0.65%)</title><rect x="728.0" y="595.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.04%)</title><rect x="732.3" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.3" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.04%)</title><rect x="732.3" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="735.3" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.04%)</title><rect x="732.3" y="547.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="735.3" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.03%)</title><rect x="732.4" y="531.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="735.4" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="732.4" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="735.4" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (33 samples, 0.25%)</title><rect x="732.7" y="579.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (33 samples, 0.25%)</title><rect x="732.7" y="563.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (33 samples, 0.25%)</title><rect x="732.7" y="547.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.7" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="735.3" y="531.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="738.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,578 samples, 11.98%)</title><rect x="735.7" y="595.0" width="141.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.7" y="606.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.03%)</title><rect x="735.9" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="738.9" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.03%)</title><rect x="735.9" y="563.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="738.9" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.03%)</title><rect x="735.9" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="738.9" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="735.9" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="738.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,571 samples, 11.92%)</title><rect x="736.3" y="579.0" width="140.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.3" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,566 samples, 11.89%)</title><rect x="736.8" y="563.0" width="140.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.8" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,563 samples, 11.86%)</title><rect x="737.0" y="547.0" width="140.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.0" y="558.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (45 samples, 0.34%)</title><rect x="738.0" y="531.0" width="4.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="741.0" y="542.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (3 samples, 0.02%)</title><rect x="739.3" y="515.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="742.3" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.02%)</title><rect x="739.5" y="515.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="742.5" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.03%)</title><rect x="739.9" y="515.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="742.9" y="526.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (20 samples, 0.15%)</title><rect x="740.2" y="515.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="743.2" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (16 samples, 0.12%)</title><rect x="740.6" y="499.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="743.6" y="510.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (9 samples, 0.07%)</title><rect x="741.2" y="483.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="744.2" y="494.0"></text>
</g>
<g>
<title>__libc_send (1,500 samples, 11.38%)</title><rect x="742.0" y="531.0" width="134.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="745.0" y="542.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,481 samples, 11.24%)</title><rect x="743.7" y="515.0" width="132.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="746.7" y="526.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (1,481 samples, 11.24%)</title><rect x="743.7" y="499.0" width="132.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="746.7" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,456 samples, 11.05%)</title><rect x="745.8" y="483.0" width="130.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="748.8" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,452 samples, 11.02%)</title><rect x="746.2" y="467.0" width="130.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="749.2" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (7 samples, 0.05%)</title><rect x="748.0" y="451.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="751.0" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,398 samples, 10.61%)</title><rect x="748.8" y="451.0" width="125.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="751.8" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (11 samples, 0.08%)</title><rect x="749.1" y="435.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="752.1" y="446.0"></text>
</g>
<g>
<title>inet_send_prepare (6 samples, 0.05%)</title><rect x="749.6" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="752.6" y="430.0"></text>
</g>
<g>
<title>security_socket_sendmsg (21 samples, 0.16%)</title><rect x="750.1" y="435.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="753.1" y="446.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (3 samples, 0.02%)</title><rect x="750.3" y="419.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="753.3" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (16 samples, 0.12%)</title><rect x="750.5" y="419.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="753.5" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,362 samples, 10.34%)</title><rect x="752.0" y="435.0" width="122.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="755.0" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.06%)</title><rect x="752.2" y="419.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="755.2" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.05%)</title><rect x="752.3" y="403.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="755.3" y="414.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.05%)</title><rect x="752.9" y="419.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="755.9" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,346 samples, 10.22%)</title><rect x="753.4" y="419.0" width="120.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="756.4" y="430.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (10 samples, 0.08%)</title><rect x="756.6" y="403.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="759.6" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.05%)</title><rect x="756.8" y="387.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="759.8" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,107 samples, 8.40%)</title><rect x="757.5" y="403.0" width="99.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="760.5" y="414.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_write_xmit (1,106 samples, 8.39%)</title><rect x="757.6" y="387.0" width="99.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="760.6" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,036 samples, 7.86%)</title><rect x="759.9" y="371.0" width="92.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="762.9" y="382.0">__tcp_trans..</text>
</g>
<g>
<title>__ip_queue_xmit (954 samples, 7.24%)</title><rect x="763.4" y="355.0" width="85.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="766.4" y="366.0">__ip_queue..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.03%)</title><rect x="764.2" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="767.2" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.02%)</title><rect x="764.3" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="767.3" y="334.0"></text>
</g>
<g>
<title>ip_local_out (26 samples, 0.20%)</title><rect x="764.6" y="339.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="767.6" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (25 samples, 0.19%)</title><rect x="764.7" y="323.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="767.7" y="334.0"></text>
</g>
<g>
<title>ip_send_check (19 samples, 0.14%)</title><rect x="764.9" y="307.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="767.9" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.03%)</title><rect x="766.6" y="307.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="769.6" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_output (4 samples, 0.03%)</title><rect x="766.6" y="291.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="769.6" y="302.0"></text>
</g>
<g>
<title>ip_output (914 samples, 6.94%)</title><rect x="766.9" y="339.0" width="81.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="769.9" y="350.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.03%)</title><rect x="767.7" y="323.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="770.7" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.02%)</title><rect x="767.8" y="307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="770.8" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (874 samples, 6.63%)</title><rect x="768.1" y="323.0" width="78.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="771.1" y="334.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (56 samples, 0.43%)</title><rect x="769.7" y="307.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.7" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (27 samples, 0.20%)</title><rect x="771.1" y="291.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="774.1" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (23 samples, 0.17%)</title><rect x="771.5" y="275.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="774.5" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.03%)</title><rect x="772.0" y="259.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="775.0" y="270.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.07%)</title><rect x="772.4" y="259.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="775.4" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.06%)</title><rect x="772.5" y="243.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.5" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.06%)</title><rect x="772.5" y="227.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="775.5" y="238.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.02%)</title><rect x="773.3" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="776.3" y="270.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (8 samples, 0.06%)</title><rect x="773.6" y="291.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="776.6" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.04%)</title><rect x="774.3" y="291.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="777.3" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.02%)</title><rect x="774.5" y="275.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="777.5" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (800 samples, 6.07%)</title><rect x="774.7" y="307.0" width="71.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="777.7" y="318.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (800 samples, 6.07%)</title><rect x="774.7" y="291.0" width="71.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="777.7" y="302.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (789 samples, 5.99%)</title><rect x="775.7" y="275.0" width="70.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="778.7" y="286.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (789 samples, 5.99%)</title><rect x="775.7" y="259.0" width="70.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="778.7" y="270.0">__softir..</text>
</g>
<g>
<title>net_rx_action (767 samples, 5.82%)</title><rect x="777.7" y="243.0" width="68.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="780.7" y="254.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (756 samples, 5.74%)</title><rect x="778.7" y="227.0" width="67.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="781.7" y="238.0">process..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (742 samples, 5.63%)</title><rect x="779.9" y="211.0" width="66.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="782.9" y="222.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (15 samples, 0.11%)</title><rect x="780.0" y="195.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="783.0" y="206.0"></text>
</g>
<g>
<title>ip_rcv (726 samples, 5.51%)</title><rect x="781.4" y="195.0" width="65.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.4" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (712 samples, 5.40%)</title><rect x="781.6" y="179.0" width="63.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="784.6" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (706 samples, 5.36%)</title><rect x="782.2" y="163.0" width="63.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="785.2" y="174.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (701 samples, 5.32%)</title><rect x="782.6" y="147.0" width="62.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="785.6" y="158.0">ip_pro..</text>
</g>
<g>
<title>raw_local_deliver (4 samples, 0.03%)</title><rect x="784.0" y="131.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="787.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (681 samples, 5.17%)</title><rect x="784.4" y="131.0" width="61.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="787.4" y="142.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (26 samples, 0.20%)</title><rect x="787.8" y="115.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="790.8" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.03%)</title><rect x="789.8" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="792.8" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (35 samples, 0.27%)</title><rect x="790.2" y="115.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.2" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (32 samples, 0.24%)</title><rect x="790.5" y="99.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.5" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (27 samples, 0.20%)</title><rect x="790.9" y="83.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="793.9" y="94.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (15 samples, 0.11%)</title><rect x="792.0" y="67.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="795.0" y="78.0"></text>
</g>
<g>
<title>avc_has_perm (6 samples, 0.05%)</title><rect x="792.2" y="51.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="795.2" y="62.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (3 samples, 0.02%)</title><rect x="792.7" y="51.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="795.7" y="62.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (3 samples, 0.02%)</title><rect x="793.0" y="51.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="796.0" y="62.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (578 samples, 4.39%)</title><rect x="793.4" y="115.0" width="51.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="796.4" y="126.0">tcp_v..</text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.04%)</title><rect x="793.6" y="99.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="796.6" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (571 samples, 4.33%)</title><rect x="794.1" y="99.0" width="51.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="797.1" y="110.0">tcp_r..</text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.04%)</title><rect x="795.9" y="83.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="798.9" y="94.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.04%)</title><rect x="795.9" y="67.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="798.9" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (313 samples, 2.38%)</title><rect x="796.3" y="83.0" width="28.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="799.3" y="94.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (297 samples, 2.25%)</title><rect x="797.7" y="67.0" width="26.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="800.7" y="78.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.02%)</title><rect x="797.8" y="51.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (293 samples, 2.22%)</title><rect x="798.1" y="51.0" width="26.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="801.1" y="62.0">_..</text>
</g>
<g>
<title>tcp_ack (189 samples, 1.43%)</title><rect x="824.3" y="83.0" width="17.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="827.3" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (72 samples, 0.55%)</title><rect x="828.8" y="67.0" width="6.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="831.8" y="78.0"></text>
</g>
<g>
<title>__slab_free (11 samples, 0.08%)</title><rect x="828.8" y="51.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="831.8" y="62.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.08%)</title><rect x="829.8" y="51.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="832.8" y="62.0"></text>
</g>
<g>
<title>skb_release_data (49 samples, 0.37%)</title><rect x="830.9" y="51.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="833.9" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (10 samples, 0.08%)</title><rect x="835.4" y="67.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="838.4" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.04%)</title><rect x="836.4" y="67.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="839.4" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (14 samples, 0.11%)</title><rect x="836.9" y="67.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="839.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.03%)</title><rect x="837.8" y="51.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="840.8" y="62.0"></text>
</g>
<g>
<title>rb_first (10 samples, 0.08%)</title><rect x="838.1" y="67.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="841.1" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (6 samples, 0.05%)</title><rect x="839.0" y="67.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="842.0" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (4 samples, 0.03%)</title><rect x="839.7" y="67.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="842.7" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.02%)</title><rect x="840.3" y="67.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="843.3" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (6 samples, 0.05%)</title><rect x="840.7" y="67.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="843.7" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (15 samples, 0.11%)</title><rect x="841.3" y="83.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="844.3" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (4 samples, 0.03%)</title><rect x="842.6" y="83.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="845.6" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.03%)</title><rect x="843.0" y="83.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="846.0" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (17 samples, 0.13%)</title><rect x="843.3" y="83.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="846.3" y="94.0"></text>
</g>
<g>
<title>ktime_get (13 samples, 0.10%)</title><rect x="843.7" y="67.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="846.7" y="78.0"></text>
</g>
<g>
<title>read_tsc (11 samples, 0.08%)</title><rect x="843.9" y="51.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="846.9" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.03%)</title><rect x="844.8" y="83.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="847.8" y="94.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.02%)</title><rect x="845.4" y="179.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="848.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 0.06%)</title><rect x="845.7" y="179.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.7" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (7 samples, 0.05%)</title><rect x="845.7" y="163.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="848.7" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (27 samples, 0.20%)</title><rect x="846.4" y="323.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="849.4" y="334.0"></text>
</g>
<g>
<title>selinux_ip_postroute (24 samples, 0.18%)</title><rect x="846.4" y="307.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="849.4" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (20 samples, 0.15%)</title><rect x="846.7" y="291.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="849.7" y="302.0"></text>
</g>
<g>
<title>avc_has_perm (9 samples, 0.07%)</title><rect x="847.4" y="275.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="850.4" y="286.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (3 samples, 0.02%)</title><rect x="848.3" y="275.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="851.3" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.02%)</title><rect x="848.5" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="851.5" y="318.0"></text>
</g>
<g>
<title>__skb_clone (21 samples, 0.16%)</title><rect x="848.8" y="355.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="851.8" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (6 samples, 0.05%)</title><rect x="850.1" y="339.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="853.1" y="350.0"></text>
</g>
<g>
<title>__tcp_select_window (5 samples, 0.04%)</title><rect x="850.7" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="853.7" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.03%)</title><rect x="851.1" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="854.1" y="366.0"></text>
</g>
<g>
<title>ip_queue_xmit?[ipv6] (4 samples, 0.03%)</title><rect x="851.5" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="854.5" y="366.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (4 samples, 0.03%)</title><rect x="852.0" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="855.0" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.02%)</title><rect x="852.4" y="355.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="855.4" y="366.0"></text>
</g>
<g>
<title>ktime_get (11 samples, 0.08%)</title><rect x="852.7" y="371.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="855.7" y="382.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.05%)</title><rect x="853.2" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="856.2" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (24 samples, 0.18%)</title><rect x="853.8" y="371.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="856.8" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.09%)</title><rect x="854.6" y="355.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="857.6" y="366.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.09%)</title><rect x="854.6" y="339.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="857.6" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.02%)</title><rect x="855.4" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="858.4" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.06%)</title><rect x="856.0" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="859.0" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.02%)</title><rect x="856.4" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="859.4" y="366.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.02%)</title><rect x="856.4" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="859.4" y="350.0"></text>
</g>
<g>
<title>_copy_from_iter_full (30 samples, 0.23%)</title><rect x="856.7" y="403.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="859.7" y="414.0"></text>
</g>
<g>
<title>copyin (18 samples, 0.14%)</title><rect x="856.9" y="387.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="859.9" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (17 samples, 0.13%)</title><rect x="857.0" y="371.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="860.0" y="382.0"></text>
</g>
<g>
<title>iov_iter_advance (9 samples, 0.07%)</title><rect x="858.6" y="387.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="861.6" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (22 samples, 0.17%)</title><rect x="859.4" y="403.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.4" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (21 samples, 0.16%)</title><rect x="859.4" y="387.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="862.4" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (75 samples, 0.57%)</title><rect x="861.3" y="403.0" width="6.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="864.3" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (58 samples, 0.44%)</title><rect x="862.8" y="387.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="865.8" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.12%)</title><rect x="864.0" y="371.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="867.0" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (16 samples, 0.12%)</title><rect x="864.0" y="355.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.0" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.02%)</title><rect x="864.8" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="867.8" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (4 samples, 0.03%)</title><rect x="865.1" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="868.1" y="350.0"></text>
</g>
<g>
<title>__ksize (11 samples, 0.08%)</title><rect x="865.4" y="371.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="868.4" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.14%)</title><rect x="866.4" y="371.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="869.4" y="382.0"></text>
</g>
<g>
<title>skb_entail (11 samples, 0.08%)</title><rect x="868.0" y="403.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="871.0" y="414.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 0.04%)</title><rect x="869.0" y="403.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="872.0" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (8 samples, 0.06%)</title><rect x="869.5" y="403.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="872.5" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (37 samples, 0.28%)</title><rect x="870.2" y="403.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (34 samples, 0.26%)</title><rect x="870.5" y="387.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="873.5" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (13 samples, 0.10%)</title><rect x="872.3" y="371.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="875.3" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (4 samples, 0.03%)</title><rect x="873.5" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="876.5" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (25 samples, 0.19%)</title><rect x="874.0" y="451.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="877.0" y="462.0"></text>
</g>
<g>
<title>__fget_light (25 samples, 0.19%)</title><rect x="874.0" y="435.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="877.0" y="446.0"></text>
</g>
<g>
<title>__fget (19 samples, 0.14%)</title><rect x="874.5" y="419.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="877.5" y="430.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.03%)</title><rect x="876.4" y="531.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="879.4" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.02%)</title><rect x="876.7" y="531.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="879.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (40 samples, 0.30%)</title><rect x="877.0" y="611.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="880.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (32 samples, 0.24%)</title><rect x="877.7" y="595.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (32 samples, 0.24%)</title><rect x="877.7" y="579.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.04%)</title><rect x="880.6" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="883.6" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="880.6" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="883.6" y="622.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.02%)</title><rect x="880.7" y="595.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="883.7" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.02%)</title><rect x="880.7" y="579.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="883.7" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.02%)</title><rect x="880.7" y="563.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="883.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsertWithTimeStamp (487 samples, 3.70%)</title><rect x="881.0" y="627.0" width="43.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.0" y="638.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 0.07%)</title><rect x="881.3" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (9 samples, 0.07%)</title><rect x="881.3" y="595.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (9 samples, 0.07%)</title><rect x="881.3" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.3" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.02%)</title><rect x="881.3" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.3" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.02%)</title><rect x="881.3" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.3" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.02%)</title><rect x="881.3" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.3" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (3 samples, 0.02%)</title><rect x="881.3" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (6 samples, 0.05%)</title><rect x="881.6" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (6 samples, 0.05%)</title><rect x="881.6" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="884.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (4 samples, 0.03%)</title><rect x="882.1" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (4 samples, 0.03%)</title><rect x="882.1" y="595.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (4 samples, 0.03%)</title><rect x="882.1" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.1" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (4 samples, 0.03%)</title><rect x="882.1" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsertWithTimeStamp (471 samples, 3.57%)</title><rect x="882.5" y="611.0" width="42.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.5" y="622.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (471 samples, 3.57%)</title><rect x="882.5" y="595.0" width="42.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.5" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (443 samples, 3.36%)</title><rect x="885.0" y="579.0" width="39.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.0" y="590.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.09%)</title><rect x="887.3" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (403 samples, 3.06%)</title><rect x="888.6" y="563.0" width="36.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.6" y="574.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (403 samples, 3.06%)</title><rect x="888.6" y="547.0" width="36.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.6" y="558.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (159 samples, 1.21%)</title><rect x="910.4" y="531.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.4" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (159 samples, 1.21%)</title><rect x="910.4" y="515.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (56 samples, 0.43%)</title><rect x="919.6" y="499.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.6" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (56 samples, 0.43%)</title><rect x="919.6" y="483.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.6" y="494.0"></text>
</g>
<g>
<title>vectorizedMismatch (10 samples, 0.08%)</title><rect x="923.7" y="467.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="926.7" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,795 samples, 21.21%)</title><rect x="924.8" y="723.0" width="250.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.8" y="734.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13 samples, 0.10%)</title><rect x="926.5" y="707.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="929.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (208 samples, 1.58%)</title><rect x="927.7" y="707.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (191 samples, 1.45%)</title><rect x="929.2" y="691.0" width="17.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="932.2" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (7 samples, 0.05%)</title><rect x="930.6" y="675.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="933.6" y="686.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.03%)</title><rect x="930.8" y="659.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="933.8" y="670.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.03%)</title><rect x="930.8" y="643.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="933.8" y="654.0"></text>
</g>
<g>
<title>epoll_wait (165 samples, 1.25%)</title><rect x="931.3" y="675.0" width="14.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="934.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (154 samples, 1.17%)</title><rect x="932.2" y="659.0" width="13.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (154 samples, 1.17%)</title><rect x="932.2" y="643.0" width="13.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="935.2" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (135 samples, 1.02%)</title><rect x="933.9" y="627.0" width="12.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="936.9" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (132 samples, 1.00%)</title><rect x="934.1" y="611.0" width="11.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="937.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.11%)</title><rect x="934.3" y="595.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="937.3" y="606.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.08%)</title><rect x="934.8" y="579.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="937.8" y="590.0"></text>
</g>
<g>
<title>ep_poll (114 samples, 0.87%)</title><rect x="935.7" y="595.0" width="10.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="938.7" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (74 samples, 0.56%)</title><rect x="936.4" y="579.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="939.4" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (51 samples, 0.39%)</title><rect x="937.3" y="563.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="940.3" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (41 samples, 0.31%)</title><rect x="938.2" y="547.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="941.2" y="558.0"></text>
</g>
<g>
<title>sock_poll (35 samples, 0.27%)</title><rect x="938.7" y="531.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="941.7" y="542.0"></text>
</g>
<g>
<title>tcp_poll (22 samples, 0.17%)</title><rect x="939.9" y="515.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.9" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (9 samples, 0.07%)</title><rect x="941.0" y="499.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="944.0" y="510.0"></text>
</g>
<g>
<title>mutex_lock (9 samples, 0.07%)</title><rect x="941.8" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="944.8" y="574.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.04%)</title><rect x="942.2" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="945.2" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.02%)</title><rect x="942.4" y="531.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="945.4" y="542.0"></text>
</g>
<g>
<title>mutex_unlock (4 samples, 0.03%)</title><rect x="942.6" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="945.6" y="574.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (32 samples, 0.24%)</title><rect x="943.0" y="579.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="946.0" y="590.0"></text>
</g>
<g>
<title>schedule (30 samples, 0.23%)</title><rect x="943.2" y="563.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="946.2" y="574.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.16%)</title><rect x="944.0" y="547.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="947.0" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.05%)</title><rect x="945.3" y="531.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="948.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,541 samples, 19.29%)</title><rect x="946.3" y="707.0" width="227.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.3" y="718.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,496 samples, 18.94%)</title><rect x="950.3" y="691.0" width="223.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.3" y="702.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,325 samples, 10.06%)</title><rect x="951.3" y="675.0" width="118.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="954.3" y="686.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (732 samples, 5.56%)</title><rect x="964.3" y="659.0" width="65.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="967.3" y="670.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (732 samples, 5.56%)</title><rect x="964.3" y="643.0" width="65.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.3" y="654.0">one/nio..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (671 samples, 5.09%)</title><rect x="964.3" y="627.0" width="60.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.3" y="638.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (61 samples, 0.46%)</title><rect x="965.0" y="611.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.05%)</title><rect x="967.9" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.05%)</title><rect x="967.9" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.09%)</title><rect x="968.4" y="595.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.09%)</title><rect x="968.4" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (9 samples, 0.07%)</title><rect x="969.7" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.05%)</title><rect x="970.0" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.05%)</title><rect x="970.0" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="973.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.05%)</title><rect x="970.0" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (56 samples, 0.43%)</title><rect x="970.5" y="611.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (54 samples, 0.41%)</title><rect x="970.7" y="595.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.09%)</title><rect x="972.3" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (12 samples, 0.09%)</title><rect x="972.3" y="563.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.05%)</title><rect x="973.4" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.05%)</title><rect x="973.4" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.4" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.03%)</title><rect x="973.5" y="547.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="976.5" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.03%)</title><rect x="973.5" y="531.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="976.5" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.03%)</title><rect x="973.5" y="515.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="976.5" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.02%)</title><rect x="973.5" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="976.5" y="510.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (15 samples, 0.11%)</title><rect x="974.2" y="579.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.04%)</title><rect x="975.1" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.04%)</title><rect x="975.1" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="978.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.04%)</title><rect x="975.1" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.put (546 samples, 4.14%)</title><rect x="975.5" y="611.0" width="48.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="978.5" y="622.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1024250373.linkToTargetMethod (3 samples, 0.02%)</title><rect x="976.7" y="595.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="976.7" y="579.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$78/959660539.get$Lambda (3 samples, 0.02%)</title><rect x="976.7" y="563.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.02%)</title><rect x="976.7" y="547.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (528 samples, 4.01%)</title><rect x="976.9" y="595.0" width="47.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="979.9" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (500 samples, 3.79%)</title><rect x="979.5" y="579.0" width="44.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.5" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (72 samples, 0.55%)</title><rect x="982.7" y="563.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (72 samples, 0.55%)</title><rect x="982.7" y="547.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="985.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (72 samples, 0.55%)</title><rect x="982.7" y="531.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (72 samples, 0.55%)</title><rect x="982.7" y="515.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (72 samples, 0.55%)</title><rect x="982.7" y="499.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.10%)</title><rect x="989.1" y="563.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.10%)</title><rect x="989.1" y="547.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (13 samples, 0.10%)</title><rect x="989.1" y="531.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.09%)</title><rect x="989.2" y="515.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.09%)</title><rect x="989.2" y="499.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="992.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.07%)</title><rect x="989.5" y="483.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.05%)</title><rect x="989.7" y="467.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="992.7" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.05%)</title><rect x="989.7" y="451.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="992.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.04%)</title><rect x="989.8" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="992.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.04%)</title><rect x="989.8" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="992.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.04%)</title><rect x="989.8" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="992.8" y="414.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.04%)</title><rect x="989.8" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="992.8" y="398.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.03%)</title><rect x="989.8" y="371.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="992.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (378 samples, 2.87%)</title><rect x="990.3" y="563.0" width="33.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="993.3" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (378 samples, 2.87%)</title><rect x="990.3" y="547.0" width="33.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.3" y="558.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (378 samples, 2.87%)</title><rect x="990.3" y="531.0" width="33.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.3" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (378 samples, 2.87%)</title><rect x="990.3" y="515.0" width="33.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="993.3" y="526.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (368 samples, 2.79%)</title><rect x="991.2" y="499.0" width="32.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.2" y="510.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (60 samples, 0.46%)</title><rect x="992.0" y="483.0" width="5.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="995.0" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.03%)</title><rect x="992.8" y="467.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="995.8" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (12 samples, 0.09%)</title><rect x="993.2" y="467.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="996.2" y="478.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (16 samples, 0.12%)</title><rect x="994.3" y="467.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="997.3" y="478.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (5 samples, 0.04%)</title><rect x="995.9" y="467.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="998.9" y="478.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (11 samples, 0.08%)</title><rect x="996.4" y="467.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="999.4" y="478.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (296 samples, 2.25%)</title><rect x="997.6" y="483.0" width="26.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1000.6" y="494.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (272 samples, 2.06%)</title><rect x="999.8" y="467.0" width="24.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1002.8" y="478.0">e..</text>
</g>
<g>
<title>do_syscall_64 (272 samples, 2.06%)</title><rect x="999.8" y="451.0" width="24.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1002.8" y="462.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (260 samples, 1.97%)</title><rect x="1000.9" y="435.0" width="23.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1003.9" y="446.0">_..</text>
</g>
<g>
<title>do_futex (256 samples, 1.94%)</title><rect x="1001.2" y="419.0" width="22.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1004.2" y="430.0">d..</text>
</g>
<g>
<title>futex_wake (255 samples, 1.94%)</title><rect x="1001.3" y="403.0" width="22.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1004.3" y="414.0">f..</text>
</g>
<g>
<title>hash_futex (3 samples, 0.02%)</title><rect x="1003.5" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1006.5" y="398.0"></text>
</g>
<g>
<title>mark_wake_futex (15 samples, 0.11%)</title><rect x="1003.8" y="387.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1006.8" y="398.0"></text>
</g>
<g>
<title>wake_q_add_safe (8 samples, 0.06%)</title><rect x="1005.2" y="387.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1008.2" y="398.0"></text>
</g>
<g>
<title>wake_up_q (204 samples, 1.55%)</title><rect x="1005.9" y="387.0" width="18.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1008.9" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (204 samples, 1.55%)</title><rect x="1005.9" y="371.0" width="18.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1008.9" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (201 samples, 1.53%)</title><rect x="1006.1" y="355.0" width="18.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1009.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (59 samples, 0.45%)</title><rect x="1024.4" y="627.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1027.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.get (59 samples, 0.45%)</title><rect x="1024.4" y="611.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1027.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (12 samples, 0.09%)</title><rect x="1024.4" y="595.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (47 samples, 0.36%)</title><rect x="1025.5" y="595.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (47 samples, 0.36%)</title><rect x="1025.5" y="579.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (47 samples, 0.36%)</title><rect x="1025.5" y="563.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (201 samples, 1.53%)</title><rect x="1029.9" y="659.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1032.9" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.02%)</title><rect x="1030.5" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1033.5" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.02%)</title><rect x="1030.5" y="627.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1033.5" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.02%)</title><rect x="1030.5" y="611.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1033.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (36 samples, 0.27%)</title><rect x="1030.8" y="643.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.8" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.04%)</title><rect x="1030.8" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1033.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.03%)</title><rect x="1030.9" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1033.9" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.02%)</title><rect x="1030.9" y="595.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1033.9" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.02%)</title><rect x="1030.9" y="579.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1033.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (30 samples, 0.23%)</title><rect x="1031.3" y="627.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (30 samples, 0.23%)</title><rect x="1031.3" y="611.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1034.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (30 samples, 0.23%)</title><rect x="1031.3" y="595.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.05%)</title><rect x="1033.4" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (105 samples, 0.80%)</title><rect x="1034.0" y="643.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (103 samples, 0.78%)</title><rect x="1034.2" y="627.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1037.2" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="1042.5" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1045.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1042.9" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1042.9" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.03%)</title><rect x="1042.9" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.9" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.03%)</title><rect x="1042.9" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1045.9" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.03%)</title><rect x="1042.9" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1045.9" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.03%)</title><rect x="1042.9" y="531.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1045.9" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="1042.9" y="515.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1045.9" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.02%)</title><rect x="1042.9" y="499.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1045.9" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (50 samples, 0.38%)</title><rect x="1043.4" y="643.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (59 samples, 0.45%)</title><rect x="1048.0" y="659.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (31 samples, 0.24%)</title><rect x="1050.1" y="643.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (31 samples, 0.24%)</title><rect x="1050.1" y="627.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.02%)</title><rect x="1052.9" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="1052.9" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.9" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (187 samples, 1.42%)</title><rect x="1053.2" y="659.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1056.2" y="670.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (29 samples, 0.22%)</title><rect x="1054.8" y="643.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.8" y="654.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.06%)</title><rect x="1057.4" y="643.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1060.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (133 samples, 1.01%)</title><rect x="1058.1" y="643.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1061.1" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (10 samples, 0.08%)</title><rect x="1067.8" y="627.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1070.8" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.06%)</title><rect x="1067.9" y="611.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1070.9" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.05%)</title><rect x="1068.0" y="595.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1071.0" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.05%)</title><rect x="1068.0" y="579.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1071.0" y="590.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (3 samples, 0.02%)</title><rect x="1068.2" y="563.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1071.2" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.04%)</title><rect x="1068.7" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1071.7" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.03%)</title><rect x="1068.7" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1071.7" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.03%)</title><rect x="1068.7" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1071.7" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.03%)</title><rect x="1068.7" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1071.7" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.02%)</title><rect x="1068.8" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1071.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.06%)</title><rect x="1069.1" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1072.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.06%)</title><rect x="1069.1" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.06%)</title><rect x="1069.1" y="595.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.1" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.05%)</title><rect x="1069.2" y="579.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1072.2" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.04%)</title><rect x="1069.3" y="563.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1072.3" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.04%)</title><rect x="1069.3" y="547.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1072.3" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.04%)</title><rect x="1069.3" y="531.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1072.3" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.02%)</title><rect x="1069.4" y="515.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1072.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.07%)</title><rect x="1070.0" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1073.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.05%)</title><rect x="1070.3" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1073.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1,151 samples, 8.74%)</title><rect x="1070.8" y="675.0" width="103.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1073.8" y="686.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,132 samples, 8.59%)</title><rect x="1072.5" y="659.0" width="101.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.5" y="670.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (136 samples, 1.03%)</title><rect x="1075.2" y="643.0" width="12.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1078.2" y="654.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (11 samples, 0.08%)</title><rect x="1076.6" y="627.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1079.6" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (16 samples, 0.12%)</title><rect x="1077.6" y="627.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1080.6" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.02%)</title><rect x="1079.0" y="627.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1082.0" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.02%)</title><rect x="1079.5" y="627.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1082.5" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (85 samples, 0.65%)</title><rect x="1079.8" y="627.0" width="7.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1082.8" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (15 samples, 0.11%)</title><rect x="1080.8" y="611.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1083.8" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.02%)</title><rect x="1082.2" y="611.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1085.2" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (14 samples, 0.11%)</title><rect x="1082.4" y="611.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1085.4" y="622.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (41 samples, 0.31%)</title><rect x="1083.7" y="611.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1086.7" y="622.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (16 samples, 0.12%)</title><rect x="1085.9" y="595.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.9" y="606.0"></text>
</g>
<g>
<title>__libc_recv (939 samples, 7.13%)</title><rect x="1087.4" y="643.0" width="84.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1090.4" y="654.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (908 samples, 6.89%)</title><rect x="1090.1" y="627.0" width="81.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1093.1" y="638.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (908 samples, 6.89%)</title><rect x="1090.1" y="611.0" width="81.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1093.1" y="622.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_recvfrom (872 samples, 6.62%)</title><rect x="1093.3" y="595.0" width="78.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1096.3" y="606.0">__x64_sys..</text>
</g>
<g>
<title>__sys_recvfrom (858 samples, 6.51%)</title><rect x="1094.5" y="579.0" width="76.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1097.5" y="590.0">__sys_re..</text>
</g>
<g>
<title>fput_many (5 samples, 0.04%)</title><rect x="1096.1" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1099.1" y="574.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (754 samples, 5.72%)</title><rect x="1096.6" y="563.0" width="67.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1099.6" y="574.0">inet6_r..</text>
</g>
<g>
<title>tcp_recvmsg (730 samples, 5.54%)</title><rect x="1098.7" y="547.0" width="65.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1101.7" y="558.0">tcp_rec..</text>
</g>
<g>
<title>__kfree_skb (68 samples, 0.52%)</title><rect x="1115.7" y="531.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.7" y="542.0"></text>
</g>
<g>
<title>skb_release_all (60 samples, 0.46%)</title><rect x="1115.8" y="515.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1118.8" y="526.0"></text>
</g>
<g>
<title>skb_release_head_state (60 samples, 0.46%)</title><rect x="1115.8" y="499.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1118.8" y="510.0"></text>
</g>
<g>
<title>dst_release (44 samples, 0.33%)</title><rect x="1115.8" y="483.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1118.8" y="494.0"></text>
</g>
<g>
<title>sock_rfree (15 samples, 0.11%)</title><rect x="1119.8" y="483.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1122.8" y="494.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.05%)</title><rect x="1121.1" y="515.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1124.1" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.03%)</title><rect x="1121.8" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1124.8" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (13 samples, 0.10%)</title><rect x="1122.2" y="531.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1125.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.07%)</title><rect x="1122.6" y="515.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1125.6" y="526.0"></text>
</g>
<g>
<title>release_sock (22 samples, 0.17%)</title><rect x="1123.4" y="531.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1126.4" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.03%)</title><rect x="1124.0" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1127.0" y="526.0"></text>
</g>
<g>
<title>tcp_release_cb (11 samples, 0.08%)</title><rect x="1124.4" y="515.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1127.4" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (331 samples, 2.51%)</title><rect x="1125.3" y="531.0" width="29.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1128.3" y="542.0">sk..</text>
</g>
<g>
<title>__skb_datagram_iter (328 samples, 2.49%)</title><rect x="1125.6" y="515.0" width="29.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1128.6" y="526.0">__..</text>
</g>
<g>
<title>_copy_to_iter (110 samples, 0.83%)</title><rect x="1136.2" y="499.0" width="9.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1139.2" y="510.0"></text>
</g>
<g>
<title>copyout (105 samples, 0.80%)</title><rect x="1136.6" y="483.0" width="9.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1139.6" y="494.0"></text>
</g>
<g>
<title>copy_user_generic_string (104 samples, 0.79%)</title><rect x="1136.7" y="467.0" width="9.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1139.7" y="478.0"></text>
</g>
<g>
<title>simple_copy_to_iter (100 samples, 0.76%)</title><rect x="1146.0" y="499.0" width="9.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1149.0" y="510.0"></text>
</g>
<g>
<title>__check_object_size (97 samples, 0.74%)</title><rect x="1146.3" y="483.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1149.3" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (19 samples, 0.14%)</title><rect x="1152.7" y="467.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1155.7" y="478.0"></text>
</g>
<g>
<title>check_stack_object (7 samples, 0.05%)</title><rect x="1154.4" y="467.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1157.4" y="478.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (45 samples, 0.34%)</title><rect x="1155.0" y="531.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1158.0" y="542.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.02%)</title><rect x="1158.7" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1161.7" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (57 samples, 0.43%)</title><rect x="1159.0" y="531.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1162.0" y="542.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (33 samples, 0.25%)</title><rect x="1161.2" y="515.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.2" y="526.0"></text>
</g>
<g>
<title>ktime_get (30 samples, 0.23%)</title><rect x="1161.4" y="499.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1164.4" y="510.0"></text>
</g>
<g>
<title>read_tsc (21 samples, 0.16%)</title><rect x="1162.2" y="483.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1165.2" y="494.0"></text>
</g>
<g>
<title>sock_recvmsg (36 samples, 0.27%)</title><rect x="1164.1" y="563.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1167.1" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (33 samples, 0.25%)</title><rect x="1164.4" y="547.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.4" y="558.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (3 samples, 0.02%)</title><rect x="1164.5" y="531.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.5" y="542.0"></text>
</g>
<g>
<title>sock_has_perm (29 samples, 0.22%)</title><rect x="1164.7" y="531.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1167.7" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (45 samples, 0.34%)</title><rect x="1167.3" y="563.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1170.3" y="574.0"></text>
</g>
<g>
<title>__fget_light (44 samples, 0.33%)</title><rect x="1167.4" y="547.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1170.4" y="558.0"></text>
</g>
<g>
<title>__fget (32 samples, 0.24%)</title><rect x="1168.5" y="531.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1171.5" y="542.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.04%)</title><rect x="1171.5" y="643.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1174.5" y="654.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.02%)</title><rect x="1171.9" y="643.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1174.9" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (19 samples, 0.14%)</title><rect x="1172.2" y="643.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1175.2" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (14 samples, 0.11%)</title><rect x="1173.9" y="707.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.9" y="718.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.08%)</title><rect x="1174.2" y="691.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1177.2" y="702.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.06%)</title><rect x="1174.4" y="675.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1177.4" y="686.0"></text>
</g>
<g>
<title>start_thread (164 samples, 1.24%)</title><rect x="1175.3" y="723.0" width="14.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1178.3" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (164 samples, 1.24%)</title><rect x="1175.3" y="707.0" width="14.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1178.3" y="718.0"></text>
</g>
<g>
<title>Thread::call_run() (164 samples, 1.24%)</title><rect x="1175.3" y="691.0" width="14.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.3" y="702.0"></text>
</g>
<g>
<title>GangWorker::loop() (156 samples, 1.18%)</title><rect x="1175.3" y="675.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.3" y="686.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (150 samples, 1.14%)</title><rect x="1175.6" y="659.0" width="13.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.6" y="670.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (71 samples, 0.54%)</title><rect x="1175.7" y="643.0" width="6.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.7" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (24 samples, 0.18%)</title><rect x="1176.3" y="627.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.3" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (14 samples, 0.11%)</title><rect x="1177.2" y="611.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.2" y="622.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.02%)</title><rect x="1178.2" y="595.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.2" y="606.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (4 samples, 0.03%)</title><rect x="1178.4" y="627.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.4" y="638.0"></text>
</g>
<g>
<title>SpinPause (34 samples, 0.26%)</title><rect x="1178.8" y="627.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1181.8" y="638.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (55 samples, 0.42%)</title><rect x="1182.0" y="643.0" width="5.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.0" y="654.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (55 samples, 0.42%)</title><rect x="1182.0" y="627.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.0" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (55 samples, 0.42%)</title><rect x="1182.0" y="611.0" width="5.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.0" y="622.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (55 samples, 0.42%)</title><rect x="1182.0" y="595.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.0" y="606.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (54 samples, 0.41%)</title><rect x="1182.1" y="579.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.1" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (33 samples, 0.25%)</title><rect x="1182.4" y="563.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.4" y="574.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (3 samples, 0.02%)</title><rect x="1183.0" y="547.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.0" y="558.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (20 samples, 0.15%)</title><rect x="1183.3" y="547.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.3" y="558.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.03%)</title><rect x="1184.7" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.7" y="542.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.02%)</title><rect x="1185.1" y="547.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.1" y="558.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (18 samples, 0.14%)</title><rect x="1185.3" y="563.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.3" y="574.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (17 samples, 0.13%)</title><rect x="1185.3" y="547.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.3" y="558.0"></text>
</g>
<g>
<title>oopDesc::size() (3 samples, 0.02%)</title><rect x="1186.2" y="531.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="542.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (8 samples, 0.06%)</title><rect x="1187.0" y="643.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.0" y="654.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (8 samples, 0.06%)</title><rect x="1187.0" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.0" y="638.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (8 samples, 0.06%)</title><rect x="1187.0" y="611.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.0" y="622.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (4 samples, 0.03%)</title><rect x="1187.3" y="595.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.3" y="606.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (13 samples, 0.10%)</title><rect x="1187.7" y="643.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.7" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (9 samples, 0.07%)</title><rect x="1187.7" y="627.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.7" y="638.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (7 samples, 0.05%)</title><rect x="1187.9" y="611.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.9" y="622.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (7 samples, 0.05%)</title><rect x="1187.9" y="595.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.9" y="606.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (4 samples, 0.03%)</title><rect x="1187.9" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.9" y="590.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.02%)</title><rect x="1189.0" y="659.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.0" y="670.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.02%)</title><rect x="1189.0" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.0" y="654.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (3 samples, 0.02%)</title><rect x="1189.0" y="627.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.0" y="638.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.02%)</title><rect x="1189.0" y="611.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.0" y="622.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (3 samples, 0.02%)</title><rect x="1189.3" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.3" y="686.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.02%)</title><rect x="1189.3" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.3" y="670.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.02%)</title><rect x="1189.3" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.3" y="654.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.02%)</title><rect x="1189.3" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.3" y="638.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.02%)</title><rect x="1189.3" y="611.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.3" y="622.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.04%)</title><rect x="1189.6" y="675.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.6" y="686.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.04%)</title><rect x="1189.6" y="659.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.6" y="670.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.65] (3 samples, 0.02%)</title><rect x="1189.7" y="643.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.7" y="654.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.02%)</title><rect x="1189.7" y="627.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.7" y="638.0"></text>
</g>
</g>
</svg>
