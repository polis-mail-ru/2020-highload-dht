<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (4,589,825 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7,871 samples, 0.17%)</title><rect x="10.4" y="739.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.4" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7,832 samples, 0.17%)</title><rect x="10.4" y="723.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.94] (7,743 samples, 0.17%)</title><rect x="10.5" y="707.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7,442 samples, 0.16%)</title><rect x="10.5" y="691.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.5" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (6,491 samples, 0.14%)</title><rect x="10.6" y="675.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.6" y="686.0"></text>
</g>
<g>
<title>[no_Java_frame] (3,726 samples, 0.08%)</title><rect x="12.6" y="739.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="15.6" y="750.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3,187 samples, 0.07%)</title><rect x="13.6" y="739.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="16.6" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1,273 samples, 0.03%)</title><rect x="13.7" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.7" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1,111 samples, 0.02%)</title><rect x="13.7" y="707.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (4,176 samples, 0.09%)</title><rect x="14.4" y="739.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="17.4" y="750.0"></text>
</g>
<g>
<title>/lib64/ld-2.30.so (1,863 samples, 0.04%)</title><rect x="14.4" y="723.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="17.4" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1,351 samples, 0.03%)</title><rect x="15.0" y="723.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="18.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,192 samples, 0.03%)</title><rect x="15.0" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="18.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1,192 samples, 0.03%)</title><rect x="15.0" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.0" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1,093 samples, 0.02%)</title><rect x="15.0" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.0" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (5,980 samples, 0.13%)</title><rect x="15.5" y="739.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="18.5" y="750.0"></text>
</g>
<g>
<title>Interpreter (2,213 samples, 0.05%)</title><rect x="15.5" y="723.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="18.5" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2,154 samples, 0.05%)</title><rect x="16.5" y="723.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="19.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,053 samples, 0.04%)</title><rect x="16.5" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2,053 samples, 0.04%)</title><rect x="16.5" y="691.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="19.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1,964 samples, 0.04%)</title><rect x="16.5" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.5" y="686.0"></text>
</g>
<g>
<title>do_futex (1,928 samples, 0.04%)</title><rect x="16.5" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.5" y="670.0"></text>
</g>
<g>
<title>futex_wake (1,897 samples, 0.04%)</title><rect x="16.5" y="643.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="19.5" y="654.0"></text>
</g>
<g>
<title>wake_up_q (1,677 samples, 0.04%)</title><rect x="16.6" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.6" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (1,661 samples, 0.04%)</title><rect x="16.6" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1,630 samples, 0.04%)</title><rect x="16.6" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="19.6" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,168,597 samples, 25.46%)</title><rect x="17.2" y="739.0" width="300.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.2" y="750.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,168,313 samples, 25.45%)</title><rect x="17.3" y="723.0" width="300.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.3" y="734.0">java/util/concurrent/ThreadPoolExecutor$..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,167,891 samples, 25.45%)</title><rect x="17.3" y="707.0" width="300.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.3" y="718.0">java/util/concurrent/ThreadPoolExecutor...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (166,564 samples, 3.63%)</title><rect x="21.3" y="691.0" width="42.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.3" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (165,411 samples, 3.60%)</title><rect x="21.6" y="675.0" width="42.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.6" y="686.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (5,569 samples, 0.12%)</title><rect x="21.7" y="659.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5,569 samples, 0.12%)</title><rect x="21.7" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5,569 samples, 0.12%)</title><rect x="21.7" y="627.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5,569 samples, 0.12%)</title><rect x="21.7" y="611.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (87,156 samples, 1.90%)</title><rect x="23.1" y="659.0" width="22.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.1" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3,763 samples, 0.08%)</title><rect x="23.4" y="643.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3,753 samples, 0.08%)</title><rect x="23.4" y="627.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3,753 samples, 0.08%)</title><rect x="23.4" y="611.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (27,417 samples, 0.60%)</title><rect x="24.4" y="643.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27,417 samples, 0.60%)</title><rect x="24.4" y="627.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22,990 samples, 0.50%)</title><rect x="25.3" y="611.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22,990 samples, 0.50%)</title><rect x="25.3" y="595.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22,110 samples, 0.48%)</title><rect x="25.5" y="579.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.5" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3,901 samples, 0.08%)</title><rect x="25.7" y="563.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="28.7" y="574.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17,444 samples, 0.38%)</title><rect x="26.7" y="563.0" width="4.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="29.7" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16,150 samples, 0.35%)</title><rect x="27.1" y="547.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.1" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (16,150 samples, 0.35%)</title><rect x="27.1" y="531.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.1" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (15,522 samples, 0.34%)</title><rect x="27.2" y="515.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="30.2" y="526.0"></text>
</g>
<g>
<title>do_futex (15,303 samples, 0.33%)</title><rect x="27.3" y="499.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.3" y="510.0"></text>
</g>
<g>
<title>futex_wake (15,224 samples, 0.33%)</title><rect x="27.3" y="483.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.3" y="494.0"></text>
</g>
<g>
<title>mark_wake_futex (1,191 samples, 0.03%)</title><rect x="27.9" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="30.9" y="478.0"></text>
</g>
<g>
<title>wake_up_q (11,328 samples, 0.25%)</title><rect x="28.3" y="467.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="31.3" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (11,228 samples, 0.24%)</title><rect x="28.3" y="451.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11,104 samples, 0.24%)</title><rect x="28.4" y="435.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="31.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (6,598 samples, 0.14%)</title><rect x="31.4" y="643.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (6,598 samples, 0.14%)</title><rect x="31.4" y="627.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (47,709 samples, 1.04%)</title><rect x="33.1" y="643.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46,606 samples, 1.02%)</title><rect x="33.4" y="627.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.4" y="638.0"></text>
</g>
<g>
<title>Unsafe_Park (15,198 samples, 0.33%)</title><rect x="34.3" y="611.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="37.3" y="622.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1,838 samples, 0.04%)</title><rect x="35.1" y="595.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="38.1" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3,771 samples, 0.08%)</title><rect x="35.6" y="595.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.6" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1,338 samples, 0.03%)</title><rect x="36.7" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="39.7" y="606.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1,596 samples, 0.03%)</title><rect x="37.1" y="595.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="40.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (27,640 samples, 0.60%)</title><rect x="38.2" y="611.0" width="7.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="41.2" y="622.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1,977 samples, 0.04%)</title><rect x="38.3" y="595.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="41.3" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (23,750 samples, 0.52%)</title><rect x="38.9" y="595.0" width="6.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="41.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21,874 samples, 0.48%)</title><rect x="39.3" y="579.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="42.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (21,874 samples, 0.48%)</title><rect x="39.3" y="563.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="42.3" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (19,197 samples, 0.42%)</title><rect x="40.0" y="547.0" width="5.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.0" y="558.0"></text>
</g>
<g>
<title>do_futex (18,408 samples, 0.40%)</title><rect x="40.2" y="531.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.2" y="542.0"></text>
</g>
<g>
<title>futex_wait (17,719 samples, 0.39%)</title><rect x="40.4" y="515.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.4" y="526.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7,867 samples, 0.17%)</title><rect x="40.9" y="499.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.9" y="510.0"></text>
</g>
<g>
<title>plist_add (1,208 samples, 0.03%)</title><rect x="41.3" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="44.3" y="494.0"></text>
</g>
<g>
<title>schedule (5,244 samples, 0.11%)</title><rect x="41.6" y="483.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="44.6" y="494.0"></text>
</g>
<g>
<title>__schedule (4,344 samples, 0.09%)</title><rect x="41.8" y="467.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.8" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (1,999 samples, 0.04%)</title><rect x="42.4" y="451.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="45.4" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (7,854 samples, 0.17%)</title><rect x="42.9" y="499.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="45.9" y="510.0"></text>
</g>
<g>
<title>get_futex_value_locked (1,255 samples, 0.03%)</title><rect x="44.4" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.4" y="494.0"></text>
</g>
<g>
<title>hash_futex (1,000 samples, 0.02%)</title><rect x="44.7" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="47.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,737 samples, 0.06%)</title><rect x="45.6" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,402 samples, 0.05%)</title><rect x="45.6" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,402 samples, 0.05%)</title><rect x="45.6" y="627.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (69,559 samples, 1.52%)</title><rect x="46.3" y="659.0" width="17.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (69,559 samples, 1.52%)</title><rect x="46.3" y="643.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (69,559 samples, 1.52%)</title><rect x="46.3" y="627.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (69,551 samples, 1.52%)</title><rect x="46.3" y="611.0" width="17.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (67,182 samples, 1.46%)</title><rect x="46.9" y="595.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.9" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15,998 samples, 0.35%)</title><rect x="47.5" y="579.0" width="4.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="50.5" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1,186 samples, 0.03%)</title><rect x="47.8" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="50.8" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2,098 samples, 0.05%)</title><rect x="48.3" y="563.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="51.3" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3,998 samples, 0.09%)</title><rect x="48.9" y="563.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="51.9" y="574.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3,837 samples, 0.08%)</title><rect x="50.0" y="563.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="53.0" y="574.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1,518 samples, 0.03%)</title><rect x="51.2" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="54.2" y="574.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (48,347 samples, 1.05%)</title><rect x="51.7" y="579.0" width="12.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="54.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44,404 samples, 0.97%)</title><rect x="52.7" y="563.0" width="11.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="55.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (44,404 samples, 0.97%)</title><rect x="52.7" y="547.0" width="11.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="55.7" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (42,489 samples, 0.93%)</title><rect x="53.2" y="531.0" width="10.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="56.2" y="542.0"></text>
</g>
<g>
<title>do_futex (41,823 samples, 0.91%)</title><rect x="53.4" y="515.0" width="10.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="56.4" y="526.0"></text>
</g>
<g>
<title>futex_wake (41,634 samples, 0.91%)</title><rect x="53.4" y="499.0" width="10.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.4" y="510.0"></text>
</g>
<g>
<title>mark_wake_futex (3,625 samples, 0.08%)</title><rect x="55.3" y="483.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.3" y="494.0"></text>
</g>
<g>
<title>wake_q_add_safe (1,325 samples, 0.03%)</title><rect x="56.3" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="59.3" y="494.0"></text>
</g>
<g>
<title>wake_up_q (29,220 samples, 0.64%)</title><rect x="56.6" y="483.0" width="7.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="59.6" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (28,933 samples, 0.63%)</title><rect x="56.7" y="467.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28,576 samples, 0.62%)</title><rect x="56.8" y="451.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="59.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$67/649661413.run (974,179 samples, 21.22%)</title><rect x="64.2" y="691.0" width="250.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.2" y="702.0">ru/mail/polis/service/s3ponia/Asy..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$get$2 (973,663 samples, 21.21%)</title><rect x="64.3" y="675.0" width="250.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.3" y="686.0">ru/mail/polis/service/s3ponia/Asy..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getRaw (972,822 samples, 21.20%)</title><rect x="64.5" y="659.0" width="250.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.5" y="670.0">ru/mail/polis/s3ponia/AsyncServic..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/92579224.linkToTargetMethod (10,593 samples, 0.23%)</title><rect x="65.1" y="643.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="68.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/341890615.invoke (10,281 samples, 0.22%)</title><rect x="65.2" y="627.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1631237491.invokeStatic (1,440 samples, 0.03%)</title><rect x="66.4" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1,356 samples, 0.03%)</title><rect x="66.4" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.4" y="606.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1,356 samples, 0.03%)</title><rect x="66.4" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.4" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1,303 samples, 0.03%)</title><rect x="66.4" y="563.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="69.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/476800120.invoke (1,280 samples, 0.03%)</title><rect x="66.8" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,190 samples, 0.03%)</title><rect x="66.8" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1,144 samples, 0.02%)</title><rect x="66.8" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,144 samples, 0.02%)</title><rect x="66.8" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.8" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2,567 samples, 0.06%)</title><rect x="67.2" y="611.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="70.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (626,437 samples, 13.65%)</title><rect x="67.8" y="643.0" width="161.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.8" y="654.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (22,622 samples, 0.49%)</title><rect x="73.7" y="627.0" width="5.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="76.7" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (21,856 samples, 0.48%)</title><rect x="73.9" y="611.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="76.9" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (20,598 samples, 0.45%)</title><rect x="74.1" y="595.0" width="5.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="77.1" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (17,869 samples, 0.39%)</title><rect x="74.3" y="579.0" width="4.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="77.3" y="590.0"></text>
</g>
<g>
<title>SpinPause (2,183 samples, 0.05%)</title><rect x="78.9" y="579.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="81.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6,699 samples, 0.15%)</title><rect x="79.5" y="627.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6,354 samples, 0.14%)</title><rect x="79.6" y="611.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6,354 samples, 0.14%)</title><rect x="79.6" y="595.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,125 samples, 0.02%)</title><rect x="80.9" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (566,243 samples, 12.34%)</title><rect x="81.2" y="627.0" width="145.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.2" y="638.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (26,990 samples, 0.59%)</title><rect x="81.4" y="611.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13,679 samples, 0.30%)</title><rect x="84.8" y="595.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (13,679 samples, 0.30%)</title><rect x="84.8" y="579.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (13,645 samples, 0.30%)</title><rect x="84.8" y="563.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.8" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2,475 samples, 0.05%)</title><rect x="87.7" y="547.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="90.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (538,819 samples, 11.74%)</title><rect x="88.3" y="611.0" width="138.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.3" y="622.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (537,008 samples, 11.70%)</title><rect x="88.8" y="595.0" width="138.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.8" y="606.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (534,061 samples, 11.64%)</title><rect x="89.2" y="579.0" width="137.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.2" y="590.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (532,721 samples, 11.61%)</title><rect x="89.5" y="563.0" width="137.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.5" y="574.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (16,356 samples, 0.36%)</title><rect x="90.2" y="547.0" width="4.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="93.2" y="558.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1,565 samples, 0.03%)</title><rect x="91.2" y="531.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="94.2" y="542.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1,762 samples, 0.04%)</title><rect x="91.6" y="531.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="94.6" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7,609 samples, 0.17%)</title><rect x="92.3" y="531.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="95.3" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (1,790 samples, 0.04%)</title><rect x="93.0" y="515.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="96.0" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3,218 samples, 0.07%)</title><rect x="93.5" y="515.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="96.5" y="526.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1,190 samples, 0.03%)</title><rect x="94.0" y="499.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="97.0" y="510.0"></text>
</g>
<g>
<title>__libc_send (511,350 samples, 11.14%)</title><rect x="94.4" y="547.0" width="131.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="97.4" y="558.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (506,986 samples, 11.05%)</title><rect x="95.5" y="531.0" width="130.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.5" y="542.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (506,986 samples, 11.05%)</title><rect x="95.5" y="515.0" width="130.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="98.5" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (502,136 samples, 10.94%)</title><rect x="96.8" y="499.0" width="129.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.8" y="510.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (501,319 samples, 10.92%)</title><rect x="97.0" y="483.0" width="128.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.0" y="494.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (488,820 samples, 10.65%)</title><rect x="97.9" y="467.0" width="125.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="100.9" y="478.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (4,231 samples, 0.09%)</title><rect x="98.2" y="451.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="101.2" y="462.0"></text>
</g>
<g>
<title>inet_send_prepare (2,073 samples, 0.05%)</title><rect x="98.7" y="435.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="101.7" y="446.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4,627 samples, 0.10%)</title><rect x="99.3" y="451.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="102.3" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (3,600 samples, 0.08%)</title><rect x="99.5" y="435.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="102.5" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (478,987 samples, 10.44%)</title><rect x="100.5" y="451.0" width="123.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="103.5" y="462.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (3,481 samples, 0.08%)</title><rect x="100.6" y="435.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="103.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3,201 samples, 0.07%)</title><rect x="100.7" y="419.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.7" y="430.0"></text>
</g>
<g>
<title>release_sock (1,070 samples, 0.02%)</title><rect x="101.5" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="104.5" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (473,733 samples, 10.32%)</title><rect x="101.8" y="435.0" width="121.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="104.8" y="446.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (3,142 samples, 0.07%)</title><rect x="104.7" y="419.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="107.7" y="430.0"></text>
</g>
<g>
<title>__virt_addr_valid (2,461 samples, 0.05%)</title><rect x="104.8" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="107.8" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (398,355 samples, 8.68%)</title><rect x="105.5" y="419.0" width="102.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.5" y="430.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_write_xmit (397,721 samples, 8.67%)</title><rect x="105.7" y="403.0" width="102.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="108.7" y="414.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (380,741 samples, 8.30%)</title><rect x="107.3" y="387.0" width="97.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="110.3" y="398.0">__tcp_trans..</text>
</g>
<g>
<title>__ip_queue_xmit (354,650 samples, 7.73%)</title><rect x="110.1" y="371.0" width="91.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.1" y="382.0">__ip_queue_..</text>
</g>
<g>
<title>__sk_dst_check (3,113 samples, 0.07%)</title><rect x="110.8" y="355.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="113.8" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (2,396 samples, 0.05%)</title><rect x="110.9" y="339.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="113.9" y="350.0"></text>
</g>
<g>
<title>ip_local_out (9,682 samples, 0.21%)</title><rect x="111.7" y="355.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="114.7" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (9,191 samples, 0.20%)</title><rect x="111.8" y="339.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="114.8" y="350.0"></text>
</g>
<g>
<title>ip_send_check (5,228 samples, 0.11%)</title><rect x="112.1" y="323.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="115.1" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (2,623 samples, 0.06%)</title><rect x="113.5" y="323.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="116.5" y="334.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1,890 samples, 0.04%)</title><rect x="113.7" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.7" y="318.0"></text>
</g>
<g>
<title>netlbl_enabled (1,157 samples, 0.03%)</title><rect x="113.8" y="291.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="116.8" y="302.0"></text>
</g>
<g>
<title>ip_output (339,020 samples, 7.39%)</title><rect x="114.1" y="355.0" width="87.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="117.1" y="366.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (1,972 samples, 0.04%)</title><rect x="114.7" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.7" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (324,971 samples, 7.08%)</title><rect x="115.2" y="339.0" width="83.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="118.2" y="350.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (25,607 samples, 0.56%)</title><rect x="117.3" y="323.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="120.3" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (13,643 samples, 0.30%)</title><rect x="118.8" y="307.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="121.8" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (11,812 samples, 0.26%)</title><rect x="119.3" y="291.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="122.3" y="302.0"></text>
</g>
<g>
<title>eth_type_trans (1,933 samples, 0.04%)</title><rect x="119.9" y="275.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="122.9" y="286.0"></text>
</g>
<g>
<title>netif_rx (5,174 samples, 0.11%)</title><rect x="120.4" y="275.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.4" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (4,927 samples, 0.11%)</title><rect x="120.4" y="259.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="123.4" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4,598 samples, 0.10%)</title><rect x="120.5" y="243.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="123.5" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (1,549 samples, 0.03%)</title><rect x="121.9" y="275.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="124.9" y="286.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1,893 samples, 0.04%)</title><rect x="122.3" y="307.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="125.3" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (3,580 samples, 0.08%)</title><rect x="122.8" y="307.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="125.8" y="318.0"></text>
</g>
<g>
<title>netif_skb_features (2,132 samples, 0.05%)</title><rect x="123.1" y="291.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="126.1" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (291,308 samples, 6.35%)</title><rect x="123.9" y="323.0" width="74.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="126.9" y="334.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (290,521 samples, 6.33%)</title><rect x="124.1" y="307.0" width="74.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="127.1" y="318.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (287,118 samples, 6.26%)</title><rect x="124.9" y="291.0" width="73.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="127.9" y="302.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (287,118 samples, 6.26%)</title><rect x="124.9" y="275.0" width="73.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="127.9" y="286.0">__softir..</text>
</g>
<g>
<title>net_rx_action (279,398 samples, 6.09%)</title><rect x="126.9" y="259.0" width="71.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="129.9" y="270.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (274,636 samples, 5.98%)</title><rect x="128.1" y="243.0" width="70.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="131.1" y="254.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (269,837 samples, 5.88%)</title><rect x="129.4" y="227.0" width="69.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="132.4" y="238.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (6,298 samples, 0.14%)</title><rect x="129.8" y="211.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="132.8" y="222.0"></text>
</g>
<g>
<title>ip_rcv (261,968 samples, 5.71%)</title><rect x="131.4" y="211.0" width="67.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="134.4" y="222.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (256,595 samples, 5.59%)</title><rect x="131.6" y="195.0" width="66.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="134.6" y="206.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (254,906 samples, 5.55%)</title><rect x="132.1" y="179.0" width="65.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="135.1" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (254,178 samples, 5.54%)</title><rect x="132.3" y="163.0" width="65.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.3" y="174.0">ip_prot..</text>
</g>
<g>
<title>raw_local_deliver (1,745 samples, 0.04%)</title><rect x="133.4" y="147.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="136.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (247,922 samples, 5.40%)</title><rect x="133.9" y="147.0" width="63.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="136.9" y="158.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (9,610 samples, 0.21%)</title><rect x="137.5" y="131.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="140.5" y="142.0"></text>
</g>
<g>
<title>inet_ehashfn (1,185 samples, 0.03%)</title><rect x="139.7" y="115.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="142.7" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (12,817 samples, 0.28%)</title><rect x="140.1" y="131.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="143.1" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (12,157 samples, 0.26%)</title><rect x="140.3" y="115.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="143.3" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (10,732 samples, 0.23%)</title><rect x="140.6" y="99.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="143.6" y="110.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (6,925 samples, 0.15%)</title><rect x="141.6" y="83.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="144.6" y="94.0"></text>
</g>
<g>
<title>avc_has_perm (1,632 samples, 0.04%)</title><rect x="142.0" y="67.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="145.0" y="78.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1,869 samples, 0.04%)</title><rect x="142.4" y="67.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="145.4" y="78.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (1,782 samples, 0.04%)</title><rect x="142.9" y="67.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="145.9" y="78.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (208,793 samples, 4.55%)</title><rect x="143.5" y="131.0" width="53.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.5" y="142.0">tcp_v..</text>
</g>
<g>
<title>ipv4_dst_check (1,042 samples, 0.02%)</title><rect x="143.7" y="115.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="146.7" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (207,153 samples, 4.51%)</title><rect x="143.9" y="115.0" width="53.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="146.9" y="126.0">tcp_r..</text>
</g>
<g>
<title>sk_reset_timer (2,797 samples, 0.06%)</title><rect x="146.4" y="99.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="149.4" y="110.0"></text>
</g>
<g>
<title>mod_timer (2,425 samples, 0.05%)</title><rect x="146.5" y="83.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="149.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1,422 samples, 0.03%)</title><rect x="146.7" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="149.7" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (97,806 samples, 2.13%)</title><rect x="147.2" y="99.0" width="25.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="150.2" y="110.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (94,461 samples, 2.06%)</title><rect x="148.0" y="83.0" width="24.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="151.0" y="94.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (93,646 samples, 2.04%)</title><rect x="148.2" y="67.0" width="24.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="151.2" y="78.0">_..</text>
</g>
<g>
<title>tcp_ack (79,514 samples, 1.73%)</title><rect x="172.3" y="99.0" width="20.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="175.3" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (29,767 samples, 0.65%)</title><rect x="177.7" y="83.0" width="7.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="180.7" y="94.0"></text>
</g>
<g>
<title>__slab_free (6,744 samples, 0.15%)</title><rect x="177.7" y="67.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="180.7" y="78.0"></text>
</g>
<g>
<title>kfree (4,852 samples, 0.11%)</title><rect x="179.5" y="67.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="182.5" y="78.0"></text>
</g>
<g>
<title>skb_release_data (17,228 samples, 0.38%)</title><rect x="180.9" y="67.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="183.9" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (4,404 samples, 0.10%)</title><rect x="185.5" y="83.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.5" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1,003 samples, 0.02%)</title><rect x="186.6" y="83.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.6" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (1,279 samples, 0.03%)</title><rect x="186.8" y="83.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="189.8" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (6,202 samples, 0.14%)</title><rect x="187.2" y="83.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="190.2" y="94.0"></text>
</g>
<g>
<title>__slab_free (2,136 samples, 0.05%)</title><rect x="188.2" y="67.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.2" y="78.0"></text>
</g>
<g>
<title>rb_first (3,531 samples, 0.08%)</title><rect x="188.8" y="83.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="191.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4,244 samples, 0.09%)</title><rect x="189.8" y="83.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="192.8" y="94.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1,127 samples, 0.02%)</title><rect x="191.0" y="83.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="194.0" y="94.0"></text>
</g>
<g>
<title>tcp_rate_gen (1,069 samples, 0.02%)</title><rect x="191.5" y="83.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="194.5" y="94.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2,011 samples, 0.04%)</title><rect x="192.2" y="83.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="195.2" y="94.0"></text>
</g>
<g>
<title>tcp_check_space (4,998 samples, 0.11%)</title><rect x="192.7" y="99.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.7" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2,904 samples, 0.06%)</title><rect x="194.1" y="99.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="197.1" y="110.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6,043 samples, 0.13%)</title><rect x="194.9" y="99.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.9" y="110.0"></text>
</g>
<g>
<title>ktime_get (4,227 samples, 0.09%)</title><rect x="195.3" y="83.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.3" y="94.0"></text>
</g>
<g>
<title>read_tsc (2,947 samples, 0.06%)</title><rect x="195.7" y="67.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="198.7" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2,287 samples, 0.05%)</title><rect x="196.4" y="99.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.4" y="110.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1,005 samples, 0.02%)</title><rect x="197.2" y="131.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="200.2" y="142.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1,883 samples, 0.04%)</title><rect x="197.6" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="200.6" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish (2,569 samples, 0.06%)</title><rect x="198.1" y="195.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="201.1" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1,837 samples, 0.04%)</title><rect x="198.3" y="179.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="201.3" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (9,647 samples, 0.21%)</title><rect x="198.8" y="339.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="201.8" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute (8,469 samples, 0.18%)</title><rect x="199.0" y="323.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="202.0" y="334.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (6,961 samples, 0.15%)</title><rect x="199.4" y="307.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="202.4" y="318.0"></text>
</g>
<g>
<title>avc_has_perm (2,762 samples, 0.06%)</title><rect x="199.9" y="291.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="202.9" y="302.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (1,709 samples, 0.04%)</title><rect x="200.6" y="291.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.6" y="302.0"></text>
</g>
<g>
<title>__skb_clone (6,260 samples, 0.14%)</title><rect x="201.3" y="371.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="204.3" y="382.0"></text>
</g>
<g>
<title>__copy_skb_header (1,217 samples, 0.03%)</title><rect x="202.6" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="205.6" y="366.0"></text>
</g>
<g>
<title>__tcp_select_window (1,462 samples, 0.03%)</title><rect x="202.9" y="371.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="205.9" y="382.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (982 samples, 0.02%)</title><rect x="203.4" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="206.4" y="382.0"></text>
</g>
<g>
<title>ip_queue_xmit?[ipv6] (1,006 samples, 0.02%)</title><rect x="203.7" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="206.7" y="382.0"></text>
</g>
<g>
<title>tcp_established_options (1,126 samples, 0.02%)</title><rect x="204.2" y="371.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="207.2" y="382.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1,167 samples, 0.03%)</title><rect x="204.7" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="207.7" y="382.0"></text>
</g>
<g>
<title>ktime_get (3,383 samples, 0.07%)</title><rect x="205.2" y="387.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="208.2" y="398.0"></text>
</g>
<g>
<title>read_tsc (2,306 samples, 0.05%)</title><rect x="205.5" y="371.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="208.5" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4,653 samples, 0.10%)</title><rect x="206.1" y="387.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="209.1" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (1,595 samples, 0.03%)</title><rect x="206.4" y="371.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="209.4" y="382.0"></text>
</g>
<g>
<title>mod_timer (1,527 samples, 0.03%)</title><rect x="206.5" y="355.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.5" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1,836 samples, 0.04%)</title><rect x="207.3" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="210.3" y="398.0"></text>
</g>
<g>
<title>_copy_from_iter_full (9,596 samples, 0.21%)</title><rect x="207.9" y="419.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="210.9" y="430.0"></text>
</g>
<g>
<title>copyin (4,790 samples, 0.10%)</title><rect x="208.2" y="403.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="211.2" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (4,594 samples, 0.10%)</title><rect x="208.3" y="387.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="211.3" y="398.0"></text>
</g>
<g>
<title>iov_iter_advance (3,534 samples, 0.08%)</title><rect x="209.5" y="403.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="212.5" y="414.0"></text>
</g>
<g>
<title>sk_page_frag_refill (7,003 samples, 0.15%)</title><rect x="210.4" y="419.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="213.4" y="430.0"></text>
</g>
<g>
<title>skb_page_frag_refill (6,616 samples, 0.14%)</title><rect x="210.5" y="403.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="213.5" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (23,703 samples, 0.52%)</title><rect x="212.2" y="419.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="215.2" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (19,393 samples, 0.42%)</title><rect x="213.3" y="403.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="216.3" y="414.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6,174 samples, 0.13%)</title><rect x="214.4" y="387.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="217.4" y="398.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6,019 samples, 0.13%)</title><rect x="214.5" y="371.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.5" y="382.0"></text>
</g>
<g>
<title>__ksize (3,401 samples, 0.07%)</title><rect x="216.0" y="387.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="219.0" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5,229 samples, 0.11%)</title><rect x="216.9" y="387.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.9" y="398.0"></text>
</g>
<g>
<title>skb_entail (4,899 samples, 0.11%)</title><rect x="218.3" y="419.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.3" y="430.0"></text>
</g>
<g>
<title>tcp_chrono_start (1,222 samples, 0.03%)</title><rect x="219.2" y="403.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="222.2" y="414.0"></text>
</g>
<g>
<title>tcp_push (979 samples, 0.02%)</title><rect x="219.6" y="419.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="222.6" y="430.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2,222 samples, 0.05%)</title><rect x="219.8" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="222.8" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (10,201 samples, 0.22%)</title><rect x="220.4" y="419.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="223.4" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (9,261 samples, 0.20%)</title><rect x="220.6" y="403.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="223.6" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (3,432 samples, 0.07%)</title><rect x="222.1" y="387.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="225.1" y="398.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (1,341 samples, 0.03%)</title><rect x="223.0" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="226.0" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8,714 samples, 0.19%)</title><rect x="223.6" y="467.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="226.6" y="478.0"></text>
</g>
<g>
<title>__fget_light (8,213 samples, 0.18%)</title><rect x="223.7" y="451.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="226.7" y="462.0"></text>
</g>
<g>
<title>__fget (7,239 samples, 0.16%)</title><rect x="224.0" y="435.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="227.0" y="446.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1,263 samples, 0.03%)</title><rect x="225.9" y="547.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="228.9" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1,424 samples, 0.03%)</title><rect x="226.5" y="579.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="229.5" y="590.0"></text>
</g>
<g>
<title>gettimeofday (1,281 samples, 0.03%)</title><rect x="226.5" y="563.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="229.5" y="574.0"></text>
</g>
<g>
<title>[vdso] (1,099 samples, 0.02%)</title><rect x="226.5" y="547.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="229.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6,541 samples, 0.14%)</title><rect x="226.8" y="627.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4,699 samples, 0.10%)</title><rect x="227.3" y="611.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4,699 samples, 0.10%)</title><rect x="227.3" y="595.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,446 samples, 0.03%)</title><rect x="228.9" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2,465 samples, 0.05%)</title><rect x="229.4" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,277 samples, 0.05%)</title><rect x="229.4" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getRaw (317,824 samples, 6.92%)</title><rect x="230.0" y="643.0" width="81.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.0" y="654.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3,707 samples, 0.08%)</title><rect x="230.4" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.4" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2,737 samples, 0.06%)</title><rect x="230.6" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22,389 samples, 0.49%)</title><rect x="231.4" y="627.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (11,809 samples, 0.26%)</title><rect x="231.7" y="611.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7,399 samples, 0.16%)</title><rect x="231.8" y="595.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.8" y="606.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7,120 samples, 0.16%)</title><rect x="231.9" y="579.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (7,032 samples, 0.15%)</title><rect x="231.9" y="563.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6,752 samples, 0.15%)</title><rect x="232.0" y="547.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5,970 samples, 0.13%)</title><rect x="232.2" y="531.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1,487 samples, 0.03%)</title><rect x="232.4" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1,299 samples, 0.03%)</title><rect x="232.5" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/1143761155.getAsBoolean (3,499 samples, 0.08%)</title><rect x="232.8" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3,488 samples, 0.08%)</title><rect x="232.8" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3,313 samples, 0.07%)</title><rect x="232.8" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2,326 samples, 0.05%)</title><rect x="232.8" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2,326 samples, 0.05%)</title><rect x="232.8" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2,050 samples, 0.04%)</title><rect x="232.9" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1,627 samples, 0.04%)</title><rect x="233.0" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.0" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,741 samples, 0.06%)</title><rect x="233.8" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.8" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,563 samples, 0.06%)</title><rect x="233.8" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.8" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,019 samples, 0.02%)</title><rect x="234.5" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (6,987 samples, 0.15%)</title><rect x="234.8" y="611.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.8" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6,788 samples, 0.15%)</title><rect x="234.8" y="595.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.8" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2,152 samples, 0.05%)</title><rect x="236.0" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$143/113381980.apply (2,300 samples, 0.05%)</title><rect x="236.6" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (2,103 samples, 0.05%)</title><rect x="236.6" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,044 samples, 0.04%)</title><rect x="236.6" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.iteratorRaw (288,598 samples, 6.29%)</title><rect x="237.2" y="627.0" width="74.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.2" y="638.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (22,261 samples, 0.49%)</title><rect x="263.5" y="611.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (22,022 samples, 0.48%)</title><rect x="263.5" y="595.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2,060 samples, 0.04%)</title><rect x="263.7" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.7" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,016 samples, 0.02%)</title><rect x="264.5" y="579.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.5" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (17,417 samples, 0.38%)</title><rect x="264.7" y="579.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (17,326 samples, 0.38%)</title><rect x="264.8" y="563.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (16,519 samples, 0.36%)</title><rect x="265.0" y="547.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (13,368 samples, 0.29%)</title><rect x="265.0" y="531.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (3,826 samples, 0.08%)</title><rect x="265.0" y="515.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (3,799 samples, 0.08%)</title><rect x="265.0" y="499.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.0" y="510.0"></text>
</g>
<g>
<title>itable stub (2,097 samples, 0.05%)</title><rect x="265.1" y="483.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="268.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Sink.cancellationRequested (1,577 samples, 0.03%)</title><rect x="265.6" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/1143761155.getAsBoolean (9,397 samples, 0.20%)</title><rect x="266.0" y="515.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (9,345 samples, 0.20%)</title><rect x="266.0" y="499.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (9,328 samples, 0.20%)</title><rect x="266.0" y="483.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4,991 samples, 0.11%)</title><rect x="266.1" y="467.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4,856 samples, 0.11%)</title><rect x="266.1" y="451.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2,166 samples, 0.05%)</title><rect x="266.8" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (4,115 samples, 0.09%)</title><rect x="267.4" y="467.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable$$Lambda$81/1891008756.apply (1,160 samples, 0.03%)</title><rect x="268.1" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.lambda$iterator$2 (984 samples, 0.02%)</title><rect x="268.2" y="435.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (2,911 samples, 0.06%)</title><rect x="268.5" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,601 samples, 0.03%)</title><rect x="268.7" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1,567 samples, 0.03%)</title><rect x="268.7" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (1,306 samples, 0.03%)</title><rect x="268.7" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1,220 samples, 0.03%)</title><rect x="268.8" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,156 samples, 0.03%)</title><rect x="269.2" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.2" y="622.0"></text>
</g>
<g>
<title>itable stub (5,280 samples, 0.12%)</title><rect x="269.5" y="611.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="272.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3,184 samples, 0.07%)</title><rect x="271.0" y="611.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1,480 samples, 0.03%)</title><rect x="272.1" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,045 samples, 0.02%)</title><rect x="272.4" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.4" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,198 samples, 0.03%)</title><rect x="272.9" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.9" y="622.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.accept (1,028 samples, 0.02%)</title><rect x="273.2" y="611.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,526 samples, 0.03%)</title><rect x="273.4" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooHigh (1,354 samples, 0.03%)</title><rect x="274.0" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1,996 samples, 0.04%)</title><rect x="274.3" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (42,700 samples, 0.93%)</title><rect x="274.8" y="611.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (42,683 samples, 0.93%)</title><rect x="274.8" y="595.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (42,683 samples, 0.93%)</title><rect x="274.8" y="579.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.8" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7,887 samples, 0.17%)</title><rect x="275.0" y="563.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.0" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3,486 samples, 0.08%)</title><rect x="275.0" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2,035 samples, 0.04%)</title><rect x="275.4" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.4" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4,383 samples, 0.10%)</title><rect x="275.9" y="547.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.9" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (24,756 samples, 0.54%)</title><rect x="277.1" y="563.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.1" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (24,756 samples, 0.54%)</title><rect x="277.1" y="547.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.1" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (15,331 samples, 0.33%)</title><rect x="279.3" y="531.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.3" y="542.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (15,329 samples, 0.33%)</title><rect x="279.3" y="515.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.3" y="526.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (15,227 samples, 0.33%)</title><rect x="279.3" y="499.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.3" y="510.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (15,185 samples, 0.33%)</title><rect x="279.3" y="483.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (9,281 samples, 0.20%)</title><rect x="283.4" y="563.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.4" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3,263 samples, 0.07%)</title><rect x="284.0" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3,263 samples, 0.07%)</title><rect x="284.0" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.0" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1,181 samples, 0.03%)</title><rect x="284.3" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3,731 samples, 0.08%)</title><rect x="284.9" y="547.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3,731 samples, 0.08%)</title><rect x="284.9" y="531.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (2,516 samples, 0.05%)</title><rect x="285.1" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (5,424 samples, 0.12%)</title><rect x="285.8" y="611.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (5,413 samples, 0.12%)</title><rect x="285.8" y="595.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (4,896 samples, 0.11%)</title><rect x="286.0" y="579.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,225 samples, 0.03%)</title><rect x="287.3" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (2,202 samples, 0.05%)</title><rect x="287.7" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.get (1,654 samples, 0.04%)</title><rect x="288.3" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.hasNext (1,572 samples, 0.03%)</title><rect x="288.7" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,078 samples, 0.05%)</title><rect x="289.1" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (24,486 samples, 0.53%)</title><rect x="289.6" y="611.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (22,542 samples, 0.49%)</title><rect x="290.1" y="595.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21,339 samples, 0.46%)</title><rect x="290.4" y="579.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (19,699 samples, 0.43%)</title><rect x="290.5" y="563.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.5" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (19,571 samples, 0.43%)</title><rect x="290.6" y="547.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (17,837 samples, 0.39%)</title><rect x="291.0" y="531.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (16,976 samples, 0.37%)</title><rect x="291.2" y="515.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14,352 samples, 0.31%)</title><rect x="291.8" y="499.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (2,906 samples, 0.06%)</title><rect x="292.5" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (2,137 samples, 0.05%)</title><rect x="292.7" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/1143761155.getAsBoolean (8,709 samples, 0.19%)</title><rect x="293.2" y="483.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8,690 samples, 0.19%)</title><rect x="293.3" y="467.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8,587 samples, 0.19%)</title><rect x="293.3" y="451.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4,772 samples, 0.10%)</title><rect x="293.4" y="435.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4,772 samples, 0.10%)</title><rect x="293.4" y="419.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3,906 samples, 0.09%)</title><rect x="293.7" y="403.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3,228 samples, 0.07%)</title><rect x="294.7" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,718 samples, 0.04%)</title><rect x="294.8" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable$$Lambda$81/1891008756.apply (1,133 samples, 0.02%)</title><rect x="295.2" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.iterator (59,509 samples, 1.30%)</title><rect x="295.9" y="611.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.9" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (56,266 samples, 1.23%)</title><rect x="296.0" y="595.0" width="14.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (55,589 samples, 1.21%)</title><rect x="296.0" y="579.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (55,237 samples, 1.20%)</title><rect x="296.1" y="563.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (54,213 samples, 1.18%)</title><rect x="296.3" y="547.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (5,735 samples, 0.12%)</title><rect x="296.4" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (5,344 samples, 0.12%)</title><rect x="296.5" y="515.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3,393 samples, 0.07%)</title><rect x="297.0" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3,084 samples, 0.07%)</title><rect x="297.1" y="483.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3,084 samples, 0.07%)</title><rect x="297.1" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.1" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3,084 samples, 0.07%)</title><rect x="297.1" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (48,115 samples, 1.05%)</title><rect x="297.9" y="531.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (48,066 samples, 1.05%)</title><rect x="297.9" y="515.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3,631 samples, 0.08%)</title><rect x="298.0" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3,523 samples, 0.08%)</title><rect x="298.0" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3,523 samples, 0.08%)</title><rect x="298.0" y="467.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.0" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3,523 samples, 0.08%)</title><rect x="298.0" y="451.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (44,178 samples, 0.96%)</title><rect x="298.9" y="499.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (43,460 samples, 0.95%)</title><rect x="299.1" y="483.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (43,046 samples, 0.94%)</title><rect x="299.2" y="467.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (43,043 samples, 0.94%)</title><rect x="299.2" y="451.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.2" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (43,043 samples, 0.94%)</title><rect x="299.2" y="435.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1,028 samples, 0.02%)</title><rect x="311.0" y="595.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (1,463 samples, 0.03%)</title><rect x="311.3" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,368 samples, 0.03%)</title><rect x="311.4" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.getValue (1,361 samples, 0.03%)</title><rect x="311.7" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.7" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,262 samples, 0.03%)</title><rect x="311.8" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.fromByteBuffer (9,834 samples, 0.21%)</title><rect x="312.1" y="643.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2,022 samples, 0.04%)</title><rect x="312.6" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5,810 samples, 0.13%)</title><rect x="313.1" y="627.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5,241 samples, 0.11%)</title><rect x="313.3" y="611.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.getValue (1,755 samples, 0.04%)</title><rect x="314.2" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.2" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (11,412 samples, 0.25%)</title><rect x="314.6" y="691.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.6" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11,412 samples, 0.25%)</title><rect x="314.6" y="675.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.6" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$201/890540383.run (11,412 samples, 0.25%)</title><rect x="314.6" y="659.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.6" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (11,412 samples, 0.25%)</title><rect x="314.6" y="643.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.6" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (11,412 samples, 0.25%)</title><rect x="314.6" y="627.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.6" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (11,410 samples, 0.25%)</title><rect x="314.6" y="611.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.6" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (10,751 samples, 0.23%)</title><rect x="314.7" y="595.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.7" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10,275 samples, 0.22%)</title><rect x="314.8" y="579.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.8" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (10,240 samples, 0.22%)</title><rect x="314.8" y="563.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.8" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (10,234 samples, 0.22%)</title><rect x="314.8" y="547.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.8" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (10,228 samples, 0.22%)</title><rect x="314.8" y="531.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.8" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5,002 samples, 0.11%)</title><rect x="314.8" y="515.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4,997 samples, 0.11%)</title><rect x="314.8" y="499.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (4,317 samples, 0.09%)</title><rect x="314.9" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.9" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (4,308 samples, 0.09%)</title><rect x="314.9" y="467.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.9" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (3,524 samples, 0.08%)</title><rect x="314.9" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.9" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3,502 samples, 0.08%)</title><rect x="314.9" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.9" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3,502 samples, 0.08%)</title><rect x="314.9" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.9" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (3,500 samples, 0.08%)</title><rect x="314.9" y="403.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.9" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (3,497 samples, 0.08%)</title><rect x="314.9" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.9" y="398.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (3,474 samples, 0.08%)</title><rect x="314.9" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.9" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (3,472 samples, 0.08%)</title><rect x="314.9" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.9" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (3,469 samples, 0.08%)</title><rect x="314.9" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.9" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (3,440 samples, 0.07%)</title><rect x="314.9" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.9" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3,438 samples, 0.07%)</title><rect x="314.9" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.9" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3,438 samples, 0.07%)</title><rect x="314.9" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.9" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3,438 samples, 0.07%)</title><rect x="314.9" y="275.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.9" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3,433 samples, 0.07%)</title><rect x="314.9" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.9" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2,522 samples, 0.05%)</title><rect x="314.9" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.9" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (2,522 samples, 0.05%)</title><rect x="314.9" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.9" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2,515 samples, 0.05%)</title><rect x="314.9" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.9" y="222.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2,512 samples, 0.05%)</title><rect x="314.9" y="195.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.9" y="206.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1,317 samples, 0.03%)</title><rect x="315.1" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.1" y="190.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (3,455 samples, 0.08%)</title><rect x="316.1" y="515.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3,445 samples, 0.08%)</title><rect x="316.1" y="499.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.1" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3,445 samples, 0.08%)</title><rect x="316.1" y="483.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.1" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3,192 samples, 0.07%)</title><rect x="316.1" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.1" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3,166 samples, 0.07%)</title><rect x="316.1" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.1" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3,050 samples, 0.07%)</title><rect x="316.1" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.1" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3,010 samples, 0.07%)</title><rect x="316.1" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2,998 samples, 0.07%)</title><rect x="316.1" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2,976 samples, 0.06%)</title><rect x="316.1" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="319.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2,882 samples, 0.06%)</title><rect x="316.2" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2,835 samples, 0.06%)</title><rect x="316.2" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.2" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2,644 samples, 0.06%)</title><rect x="316.2" y="339.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.2" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2,640 samples, 0.06%)</title><rect x="316.2" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2,629 samples, 0.06%)</title><rect x="316.2" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (2,601 samples, 0.06%)</title><rect x="316.2" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2,596 samples, 0.06%)</title><rect x="316.2" y="275.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.2" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2,494 samples, 0.05%)</title><rect x="316.3" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.3" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2,400 samples, 0.05%)</title><rect x="316.3" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.3" y="254.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1,134 samples, 0.02%)</title><rect x="317.0" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1,114 samples, 0.02%)</title><rect x="317.0" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1,111 samples, 0.02%)</title><rect x="317.0" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1,094 samples, 0.02%)</title><rect x="317.0" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.0" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,278,033 samples, 71.42%)</title><rect x="318.1" y="739.0" width="842.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.1" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,554 samples, 0.10%)</title><rect x="320.8" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (56,648 samples, 1.23%)</title><rect x="322.1" y="723.0" width="14.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (52,718 samples, 1.15%)</title><rect x="323.1" y="707.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.1" y="718.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1,088 samples, 0.02%)</title><rect x="323.5" y="691.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="326.5" y="702.0"></text>
</g>
<g>
<title>epoll_wait (47,647 samples, 1.04%)</title><rect x="324.3" y="691.0" width="12.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="327.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44,848 samples, 0.98%)</title><rect x="325.0" y="675.0" width="11.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="328.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (44,848 samples, 0.98%)</title><rect x="325.0" y="659.0" width="11.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="328.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (39,751 samples, 0.87%)</title><rect x="326.3" y="643.0" width="10.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="329.3" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (38,709 samples, 0.84%)</title><rect x="326.6" y="627.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="329.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (5,151 samples, 0.11%)</title><rect x="326.8" y="611.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="329.8" y="622.0"></text>
</g>
<g>
<title>__fget (4,059 samples, 0.09%)</title><rect x="327.1" y="595.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="330.1" y="606.0"></text>
</g>
<g>
<title>ep_poll (32,554 samples, 0.71%)</title><rect x="328.1" y="611.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="331.1" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (18,416 samples, 0.40%)</title><rect x="329.4" y="595.0" width="4.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="332.4" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (13,301 samples, 0.29%)</title><rect x="330.2" y="579.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="333.2" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (10,330 samples, 0.23%)</title><rect x="330.9" y="563.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="333.9" y="574.0"></text>
</g>
<g>
<title>sock_poll (8,660 samples, 0.19%)</title><rect x="331.4" y="547.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="334.4" y="558.0"></text>
</g>
<g>
<title>tcp_poll (5,073 samples, 0.11%)</title><rect x="332.3" y="531.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="335.3" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (1,926 samples, 0.04%)</title><rect x="333.1" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="336.1" y="526.0"></text>
</g>
<g>
<title>mutex_lock (1,397 samples, 0.03%)</title><rect x="333.6" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="336.6" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8,897 samples, 0.19%)</title><rect x="334.2" y="595.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="337.2" y="606.0"></text>
</g>
<g>
<title>schedule (8,325 samples, 0.18%)</title><rect x="334.3" y="579.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="337.3" y="590.0"></text>
</g>
<g>
<title>__schedule (6,476 samples, 0.14%)</title><rect x="334.8" y="563.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="337.8" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (2,843 samples, 0.06%)</title><rect x="335.8" y="547.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="338.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,200,781 samples, 69.74%)</title><rect x="336.7" y="723.0" width="822.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.7" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,192,912 samples, 69.57%)</title><rect x="338.7" y="707.0" width="820.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.7" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,716,337 samples, 59.18%)</title><rect x="339.5" y="691.0" width="698.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.5" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (7,628 samples, 0.17%)</title><rect x="354.1" y="675.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.1" y="686.0"></text>
</g>
<g>
<title>itable stub (13,535 samples, 0.29%)</title><rect x="356.1" y="675.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="359.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,521,730 samples, 54.94%)</title><rect x="359.6" y="675.0" width="648.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.6" y="686.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,521,730 samples, 54.94%)</title><rect x="359.6" y="659.0" width="648.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.6" y="670.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (2,486,247 samples, 54.17%)</title><rect x="359.8" y="643.0" width="639.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.8" y="654.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (29,443 samples, 0.64%)</title><rect x="360.1" y="627.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5,427 samples, 0.12%)</title><rect x="363.7" y="611.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5,427 samples, 0.12%)</title><rect x="363.7" y="595.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="366.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,067 samples, 0.07%)</title><rect x="365.1" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,067 samples, 0.07%)</title><rect x="365.1" y="595.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.1" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1,495 samples, 0.03%)</title><rect x="366.2" y="611.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="369.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3,735 samples, 0.08%)</title><rect x="366.6" y="611.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1,527 samples, 0.03%)</title><rect x="367.2" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1,527 samples, 0.03%)</title><rect x="367.2" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1,527 samples, 0.03%)</title><rect x="367.2" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (30,272 samples, 0.66%)</title><rect x="367.6" y="627.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (30,110 samples, 0.66%)</title><rect x="367.7" y="611.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2,878 samples, 0.06%)</title><rect x="370.7" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2,878 samples, 0.06%)</title><rect x="370.7" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,548 samples, 0.03%)</title><rect x="371.4" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,548 samples, 0.03%)</title><rect x="371.4" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.4" y="590.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1,053 samples, 0.02%)</title><rect x="371.8" y="595.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="374.8" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2,342 samples, 0.05%)</title><rect x="372.1" y="595.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="375.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (10,636 samples, 0.23%)</title><rect x="372.7" y="595.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2,673 samples, 0.06%)</title><rect x="374.7" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2,673 samples, 0.06%)</title><rect x="374.7" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2,673 samples, 0.06%)</title><rect x="374.7" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.get (2,425,721 samples, 52.85%)</title><rect x="375.4" y="627.0" width="623.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.4" y="638.0">ru/mail/polis/service/s3ponia/AsyncService.get</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13,780 samples, 0.30%)</title><rect x="379.0" y="611.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13,212 samples, 0.29%)</title><rect x="379.1" y="595.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$67/649661413.get$Lambda (12,634 samples, 0.28%)</title><rect x="379.3" y="579.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$67/649661413.&lt;init&gt; (12,256 samples, 0.27%)</title><rect x="379.4" y="563.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getRaw (1,172 samples, 0.03%)</title><rect x="382.2" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (2,123 samples, 0.05%)</title><rect x="382.6" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="385.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (2,028 samples, 0.04%)</title><rect x="382.6" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (9,731 samples, 0.21%)</title><rect x="383.2" y="611.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (9,471 samples, 0.21%)</title><rect x="383.2" y="595.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.2" y="606.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (9,089 samples, 0.20%)</title><rect x="383.3" y="579.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.3" y="590.0"></text>
</g>
<g>
<title>java/util/TimSort.countRunAndMakeAscending (8,685 samples, 0.19%)</title><rect x="383.4" y="563.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.4" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$235/1205431470.compare (8,063 samples, 0.18%)</title><rect x="383.6" y="547.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.6" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7,275 samples, 0.16%)</title><rect x="383.8" y="531.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.8" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$ReverseComparator2.compare (3,827 samples, 0.08%)</title><rect x="383.8" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.8" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$215/1612274056.compare (3,718 samples, 0.08%)</title><rect x="383.8" y="499.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.8" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3,376 samples, 0.07%)</title><rect x="383.9" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$$Lambda$227/167743595.compare (3,304 samples, 0.07%)</title><rect x="384.8" y="515.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.lambda$valueResponseComparator$0 (2,528 samples, 0.06%)</title><rect x="385.0" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.isDead (2,401 samples, 0.05%)</title><rect x="385.0" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (196,338 samples, 4.28%)</title><rect x="385.7" y="611.0" width="50.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.7" y="622.0">java/..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$215/1612274056.compare (1,011 samples, 0.02%)</title><rect x="388.4" y="595.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (181,338 samples, 3.95%)</title><rect x="388.8" y="595.0" width="46.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.8" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (15,998 samples, 0.35%)</title><rect x="389.6" y="579.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (15,998 samples, 0.35%)</title><rect x="389.6" y="563.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (15,998 samples, 0.35%)</title><rect x="389.6" y="547.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (15,998 samples, 0.35%)</title><rect x="389.6" y="531.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (15,995 samples, 0.35%)</title><rect x="389.6" y="515.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8,946 samples, 0.19%)</title><rect x="393.7" y="579.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8,905 samples, 0.19%)</title><rect x="393.7" y="563.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="396.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8,684 samples, 0.19%)</title><rect x="393.8" y="547.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8,653 samples, 0.19%)</title><rect x="393.8" y="531.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8,653 samples, 0.19%)</title><rect x="393.8" y="515.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,164 samples, 0.05%)</title><rect x="395.4" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (1,301 samples, 0.03%)</title><rect x="395.6" y="483.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="398.6" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1,033 samples, 0.02%)</title><rect x="395.7" y="467.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="398.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (153,225 samples, 3.34%)</title><rect x="396.0" y="579.0" width="39.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.0" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (153,192 samples, 3.34%)</title><rect x="396.0" y="563.0" width="39.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.0" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (148,611 samples, 3.24%)</title><rect x="396.6" y="547.0" width="38.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.6" y="558.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (145,729 samples, 3.18%)</title><rect x="397.3" y="531.0" width="37.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.3" y="542.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (145,582 samples, 3.17%)</title><rect x="397.3" y="515.0" width="37.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.3" y="526.0">jdk..</text>
</g>
<g>
<title>Parker::unpark() (1,321 samples, 0.03%)</title><rect x="397.9" y="499.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="400.9" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark (28,008 samples, 0.61%)</title><rect x="398.9" y="499.0" width="7.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="401.9" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2,229 samples, 0.05%)</title><rect x="400.3" y="483.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="403.3" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6,468 samples, 0.14%)</title><rect x="400.9" y="483.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="403.9" y="494.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (6,104 samples, 0.13%)</title><rect x="402.7" y="483.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="405.7" y="494.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1,655 samples, 0.04%)</title><rect x="404.7" y="483.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="407.7" y="494.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3,803 samples, 0.08%)</title><rect x="405.1" y="483.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="408.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1,087 samples, 0.02%)</title><rect x="406.3" y="499.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="409.3" y="510.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (109,221 samples, 2.38%)</title><rect x="406.7" y="499.0" width="28.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="409.7" y="510.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101,754 samples, 2.22%)</title><rect x="408.6" y="483.0" width="26.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="411.6" y="494.0">e..</text>
</g>
<g>
<title>do_syscall_64 (101,754 samples, 2.22%)</title><rect x="408.6" y="467.0" width="26.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="411.6" y="478.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (97,850 samples, 2.13%)</title><rect x="409.6" y="451.0" width="25.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.6" y="462.0">_..</text>
</g>
<g>
<title>do_futex (96,154 samples, 2.09%)</title><rect x="410.0" y="435.0" width="24.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="413.0" y="446.0">d..</text>
</g>
<g>
<title>futex_wake (94,565 samples, 2.06%)</title><rect x="410.4" y="419.0" width="24.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="413.4" y="430.0">f..</text>
</g>
<g>
<title>get_futex_key (2,825 samples, 0.06%)</title><rect x="413.2" y="403.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="416.2" y="414.0"></text>
</g>
<g>
<title>hash_futex (1,243 samples, 0.03%)</title><rect x="413.9" y="403.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="416.9" y="414.0"></text>
</g>
<g>
<title>mark_wake_futex (5,576 samples, 0.12%)</title><rect x="414.2" y="403.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="417.2" y="414.0"></text>
</g>
<g>
<title>wake_q_add_safe (2,007 samples, 0.04%)</title><rect x="415.7" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="418.7" y="414.0"></text>
</g>
<g>
<title>wake_up_q (72,011 samples, 1.57%)</title><rect x="416.2" y="403.0" width="18.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="419.2" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (70,995 samples, 1.55%)</title><rect x="416.5" y="387.0" width="18.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="419.5" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (70,036 samples, 1.53%)</title><rect x="416.7" y="371.0" width="18.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="419.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getValues (1,809 samples, 0.04%)</title><rect x="434.9" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="437.9" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1,030 samples, 0.02%)</title><rect x="435.4" y="595.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="438.4" y="606.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1,720 samples, 0.04%)</title><rect x="435.7" y="595.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="438.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (611,279 samples, 13.32%)</title><rect x="436.1" y="611.0" width="157.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.1" y="622.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7,485 samples, 0.16%)</title><rect x="438.9" y="595.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7,049 samples, 0.15%)</title><rect x="439.0" y="579.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7,049 samples, 0.15%)</title><rect x="439.0" y="563.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,402 samples, 0.03%)</title><rect x="440.4" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="443.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (581,876 samples, 12.68%)</title><rect x="440.8" y="595.0" width="149.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.8" y="606.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23,547 samples, 0.51%)</title><rect x="440.9" y="579.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (12,360 samples, 0.27%)</title><rect x="443.8" y="563.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (12,360 samples, 0.27%)</title><rect x="443.8" y="547.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (12,351 samples, 0.27%)</title><rect x="443.8" y="531.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="446.8" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2,608 samples, 0.06%)</title><rect x="446.3" y="515.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="449.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (557,759 samples, 12.15%)</title><rect x="447.0" y="579.0" width="143.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.0" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (555,897 samples, 12.11%)</title><rect x="447.5" y="563.0" width="142.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.5" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (553,252 samples, 12.05%)</title><rect x="447.9" y="547.0" width="142.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.9" y="558.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (552,370 samples, 12.03%)</title><rect x="448.1" y="531.0" width="142.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.1" y="542.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (14,201 samples, 0.31%)</title><rect x="449.0" y="515.0" width="3.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="452.0" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1,212 samples, 0.03%)</title><rect x="450.3" y="499.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="453.3" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7,367 samples, 0.16%)</title><rect x="450.8" y="499.0" width="1.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="453.8" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (2,336 samples, 0.05%)</title><rect x="451.3" y="483.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="454.3" y="494.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2,931 samples, 0.06%)</title><rect x="451.9" y="483.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="454.9" y="494.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1,195 samples, 0.03%)</title><rect x="452.3" y="467.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="455.3" y="478.0"></text>
</g>
<g>
<title>__libc_send (532,066 samples, 11.59%)</title><rect x="452.7" y="515.0" width="136.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="455.7" y="526.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (527,524 samples, 11.49%)</title><rect x="453.8" y="499.0" width="135.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.8" y="510.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (527,524 samples, 11.49%)</title><rect x="453.8" y="483.0" width="135.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="456.8" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (521,928 samples, 11.37%)</title><rect x="455.3" y="467.0" width="134.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="458.3" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (520,909 samples, 11.35%)</title><rect x="455.5" y="451.0" width="134.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="458.5" y="462.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (507,969 samples, 11.07%)</title><rect x="456.5" y="435.0" width="130.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="459.5" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (4,116 samples, 0.09%)</title><rect x="456.8" y="419.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="459.8" y="430.0"></text>
</g>
<g>
<title>inet_send_prepare (1,962 samples, 0.04%)</title><rect x="457.3" y="403.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="460.3" y="414.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5,315 samples, 0.12%)</title><rect x="457.8" y="419.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="460.8" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (4,109 samples, 0.09%)</title><rect x="458.1" y="403.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="461.1" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (497,601 samples, 10.84%)</title><rect x="459.2" y="419.0" width="127.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="462.2" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2,609 samples, 0.06%)</title><rect x="459.4" y="403.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2,269 samples, 0.05%)</title><rect x="459.4" y="387.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="462.4" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (493,513 samples, 10.75%)</title><rect x="460.3" y="403.0" width="126.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="463.3" y="414.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (2,875 samples, 0.06%)</title><rect x="463.8" y="387.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="466.8" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (2,331 samples, 0.05%)</title><rect x="463.8" y="371.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="466.8" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (410,877 samples, 8.95%)</title><rect x="464.5" y="387.0" width="105.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="467.5" y="398.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (410,211 samples, 8.94%)</title><rect x="464.7" y="371.0" width="105.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="467.7" y="382.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (389,328 samples, 8.48%)</title><rect x="466.4" y="355.0" width="100.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="469.4" y="366.0">__tcp_transm..</text>
</g>
<g>
<title>__ip_queue_xmit (360,715 samples, 7.86%)</title><rect x="469.6" y="339.0" width="92.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="472.6" y="350.0">__ip_queue_..</text>
</g>
<g>
<title>__sk_dst_check (3,309 samples, 0.07%)</title><rect x="470.3" y="323.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="473.3" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (2,551 samples, 0.06%)</title><rect x="470.5" y="307.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="473.5" y="318.0"></text>
</g>
<g>
<title>ip_local_out (11,153 samples, 0.24%)</title><rect x="471.2" y="323.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="474.2" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (10,516 samples, 0.23%)</title><rect x="471.4" y="307.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="474.4" y="318.0"></text>
</g>
<g>
<title>ip_send_check (5,967 samples, 0.13%)</title><rect x="471.8" y="291.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="474.8" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (3,115 samples, 0.07%)</title><rect x="473.3" y="291.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="476.3" y="302.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2,259 samples, 0.05%)</title><rect x="473.5" y="275.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="476.5" y="286.0"></text>
</g>
<g>
<title>netlbl_enabled (1,376 samples, 0.03%)</title><rect x="473.7" y="259.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.7" y="270.0"></text>
</g>
<g>
<title>ip_output (343,155 samples, 7.48%)</title><rect x="474.1" y="323.0" width="88.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="477.1" y="334.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2,264 samples, 0.05%)</title><rect x="474.7" y="307.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.7" y="318.0"></text>
</g>
<g>
<title>ipv4_mtu (1,022 samples, 0.02%)</title><rect x="475.0" y="291.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.0" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (327,476 samples, 7.13%)</title><rect x="475.3" y="307.0" width="84.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="478.3" y="318.0">ip_finish_..</text>
</g>
<g>
<title>__dev_queue_xmit (27,462 samples, 0.60%)</title><rect x="477.6" y="291.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="480.6" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (15,377 samples, 0.34%)</title><rect x="479.3" y="275.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="482.3" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (13,217 samples, 0.29%)</title><rect x="479.8" y="259.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.8" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (1,979 samples, 0.04%)</title><rect x="480.6" y="243.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.6" y="254.0"></text>
</g>
<g>
<title>netif_rx (5,823 samples, 0.13%)</title><rect x="481.1" y="243.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="484.1" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (5,573 samples, 0.12%)</title><rect x="481.1" y="227.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.1" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5,197 samples, 0.11%)</title><rect x="481.2" y="211.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.2" y="222.0"></text>
</g>
<g>
<title>tcp_wfree (1,652 samples, 0.04%)</title><rect x="482.8" y="243.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="485.8" y="254.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1,490 samples, 0.03%)</title><rect x="483.2" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.2" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (3,493 samples, 0.08%)</title><rect x="483.6" y="275.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="486.6" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (1,957 samples, 0.04%)</title><rect x="484.0" y="259.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.0" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (290,895 samples, 6.34%)</title><rect x="484.7" y="291.0" width="74.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="487.7" y="302.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (290,028 samples, 6.32%)</title><rect x="484.9" y="275.0" width="74.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="487.9" y="286.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (286,895 samples, 6.25%)</title><rect x="485.7" y="259.0" width="73.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="488.7" y="270.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (286,895 samples, 6.25%)</title><rect x="485.7" y="243.0" width="73.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="488.7" y="254.0">__softir..</text>
</g>
<g>
<title>net_rx_action (278,834 samples, 6.08%)</title><rect x="487.8" y="227.0" width="71.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="490.8" y="238.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (273,726 samples, 5.96%)</title><rect x="489.1" y="211.0" width="70.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="492.1" y="222.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (268,747 samples, 5.86%)</title><rect x="490.4" y="195.0" width="69.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.4" y="206.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (6,760 samples, 0.15%)</title><rect x="490.8" y="179.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.8" y="190.0"></text>
</g>
<g>
<title>ip_rcv (260,315 samples, 5.67%)</title><rect x="492.5" y="179.0" width="66.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="495.5" y="190.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (254,926 samples, 5.55%)</title><rect x="492.8" y="163.0" width="65.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="495.8" y="174.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (253,245 samples, 5.52%)</title><rect x="493.2" y="147.0" width="65.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="496.2" y="158.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (252,512 samples, 5.50%)</title><rect x="493.4" y="131.0" width="64.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="496.4" y="142.0">ip_prot..</text>
</g>
<g>
<title>raw_local_deliver (1,959 samples, 0.04%)</title><rect x="494.5" y="115.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="497.5" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (246,250 samples, 5.37%)</title><rect x="495.0" y="115.0" width="63.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.0" y="126.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (11,007 samples, 0.24%)</title><rect x="498.8" y="99.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="501.8" y="110.0"></text>
</g>
<g>
<title>inet_ehashfn (1,242 samples, 0.03%)</title><rect x="501.3" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="504.3" y="94.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (13,314 samples, 0.29%)</title><rect x="501.7" y="99.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="504.7" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (12,716 samples, 0.28%)</title><rect x="501.9" y="83.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="504.9" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (11,208 samples, 0.24%)</title><rect x="502.3" y="67.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="505.3" y="78.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (7,390 samples, 0.16%)</title><rect x="503.3" y="51.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.3" y="62.0"></text>
</g>
<g>
<title>avc_has_perm (1,621 samples, 0.04%)</title><rect x="503.7" y="35.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="506.7" y="46.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1,942 samples, 0.04%)</title><rect x="504.2" y="35.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="507.2" y="46.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (1,787 samples, 0.04%)</title><rect x="504.7" y="35.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="507.7" y="46.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (204,378 samples, 4.45%)</title><rect x="505.3" y="99.0" width="52.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="508.3" y="110.0">tcp_v..</text>
</g>
<g>
<title>ipv4_dst_check (1,107 samples, 0.02%)</title><rect x="505.5" y="83.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="508.5" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (202,551 samples, 4.41%)</title><rect x="505.7" y="83.0" width="52.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="508.7" y="94.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (976 samples, 0.02%)</title><rect x="507.9" y="67.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="510.9" y="78.0"></text>
</g>
<g>
<title>sk_reset_timer (17,572 samples, 0.38%)</title><rect x="508.2" y="67.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="511.2" y="78.0"></text>
</g>
<g>
<title>mod_timer (17,169 samples, 0.37%)</title><rect x="508.3" y="51.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="511.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14,251 samples, 0.31%)</title><rect x="508.5" y="35.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="511.5" y="46.0"></text>
</g>
<g>
<title>lock_timer_base (2,136 samples, 0.05%)</title><rect x="512.2" y="35.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="515.2" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (91,465 samples, 1.99%)</title><rect x="512.8" y="67.0" width="23.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="515.8" y="78.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (88,816 samples, 1.94%)</title><rect x="513.4" y="51.0" width="22.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="516.4" y="62.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (87,436 samples, 1.90%)</title><rect x="513.8" y="35.0" width="22.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="516.8" y="46.0">_..</text>
</g>
<g>
<title>tcp_ack (67,313 samples, 1.47%)</title><rect x="536.3" y="67.0" width="17.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="539.3" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (23,858 samples, 0.52%)</title><rect x="541.0" y="51.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (6,126 samples, 0.13%)</title><rect x="541.0" y="35.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="544.0" y="46.0"></text>
</g>
<g>
<title>kfree (5,245 samples, 0.11%)</title><rect x="542.6" y="35.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="545.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (11,700 samples, 0.25%)</title><rect x="544.1" y="35.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="547.1" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (2,366 samples, 0.05%)</title><rect x="547.2" y="51.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="550.2" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (988 samples, 0.02%)</title><rect x="547.8" y="51.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="550.8" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (6,062 samples, 0.13%)</title><rect x="548.3" y="51.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="551.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (2,118 samples, 0.05%)</title><rect x="549.3" y="35.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="552.3" y="46.0"></text>
</g>
<g>
<title>rb_first (2,903 samples, 0.06%)</title><rect x="549.9" y="51.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="552.9" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3,918 samples, 0.09%)</title><rect x="550.7" y="51.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="553.7" y="62.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1,158 samples, 0.03%)</title><rect x="551.7" y="51.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="554.7" y="62.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1,810 samples, 0.04%)</title><rect x="553.1" y="51.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.1" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (2,517 samples, 0.05%)</title><rect x="553.6" y="67.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.6" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2,701 samples, 0.06%)</title><rect x="554.3" y="67.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="557.3" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5,218 samples, 0.11%)</title><rect x="555.0" y="67.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.0" y="78.0"></text>
</g>
<g>
<title>ktime_get (3,862 samples, 0.08%)</title><rect x="555.4" y="51.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="558.4" y="62.0"></text>
</g>
<g>
<title>read_tsc (2,885 samples, 0.06%)</title><rect x="555.6" y="35.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="558.6" y="46.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4,691 samples, 0.10%)</title><rect x="556.4" y="67.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="559.4" y="78.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (990 samples, 0.02%)</title><rect x="557.6" y="67.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="560.6" y="78.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1,009 samples, 0.02%)</title><rect x="557.8" y="99.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="560.8" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1,810 samples, 0.04%)</title><rect x="558.3" y="163.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="561.3" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (2,624 samples, 0.06%)</title><rect x="558.8" y="163.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="561.8" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1,953 samples, 0.04%)</title><rect x="558.9" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.9" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (10,831 samples, 0.24%)</title><rect x="559.5" y="307.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.5" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (9,491 samples, 0.21%)</title><rect x="559.7" y="291.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="562.7" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (7,787 samples, 0.17%)</title><rect x="560.2" y="275.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="563.2" y="286.0"></text>
</g>
<g>
<title>avc_has_perm (3,129 samples, 0.07%)</title><rect x="560.7" y="259.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="563.7" y="270.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (1,906 samples, 0.04%)</title><rect x="561.5" y="259.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="564.5" y="270.0"></text>
</g>
<g>
<title>__skb_clone (7,150 samples, 0.16%)</title><rect x="562.3" y="339.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="565.3" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (1,282 samples, 0.03%)</title><rect x="563.8" y="323.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="566.8" y="334.0"></text>
</g>
<g>
<title>__tcp_select_window (1,457 samples, 0.03%)</title><rect x="564.2" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="567.2" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1,284 samples, 0.03%)</title><rect x="564.7" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="567.7" y="350.0"></text>
</g>
<g>
<title>tcp_established_options (1,319 samples, 0.03%)</title><rect x="565.5" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="568.5" y="350.0"></text>
</g>
<g>
<title>ktime_get (3,524 samples, 0.08%)</title><rect x="566.5" y="355.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="569.5" y="366.0"></text>
</g>
<g>
<title>read_tsc (2,490 samples, 0.05%)</title><rect x="566.8" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="569.8" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7,989 samples, 0.17%)</title><rect x="567.4" y="355.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="570.4" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (5,358 samples, 0.12%)</title><rect x="567.8" y="339.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="570.8" y="350.0"></text>
</g>
<g>
<title>mod_timer (5,317 samples, 0.12%)</title><rect x="567.8" y="323.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="570.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3,822 samples, 0.08%)</title><rect x="568.0" y="307.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="571.0" y="318.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1,659 samples, 0.04%)</title><rect x="569.5" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="572.5" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (10,406 samples, 0.23%)</title><rect x="570.1" y="387.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="573.1" y="398.0"></text>
</g>
<g>
<title>copyin (5,497 samples, 0.12%)</title><rect x="570.4" y="371.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.4" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_string (5,137 samples, 0.11%)</title><rect x="570.5" y="355.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="573.5" y="366.0"></text>
</g>
<g>
<title>iov_iter_advance (3,674 samples, 0.08%)</title><rect x="571.9" y="371.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="574.9" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (7,416 samples, 0.16%)</title><rect x="572.8" y="387.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.8" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (7,193 samples, 0.16%)</title><rect x="572.9" y="371.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.9" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (25,767 samples, 0.56%)</title><rect x="574.7" y="387.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="577.7" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (21,028 samples, 0.46%)</title><rect x="575.9" y="371.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="578.9" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6,619 samples, 0.14%)</title><rect x="577.1" y="355.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="580.1" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6,433 samples, 0.14%)</title><rect x="577.2" y="339.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="580.2" y="350.0"></text>
</g>
<g>
<title>__ksize (3,528 samples, 0.08%)</title><rect x="578.8" y="355.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="581.8" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5,934 samples, 0.13%)</title><rect x="579.7" y="355.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.7" y="366.0"></text>
</g>
<g>
<title>skb_entail (5,403 samples, 0.12%)</title><rect x="581.3" y="387.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="584.3" y="398.0"></text>
</g>
<g>
<title>tcp_chrono_start (1,338 samples, 0.03%)</title><rect x="582.4" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="585.4" y="382.0"></text>
</g>
<g>
<title>tcp_push (1,062 samples, 0.02%)</title><rect x="582.8" y="387.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="585.8" y="398.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2,696 samples, 0.06%)</title><rect x="583.0" y="387.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="586.0" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (10,663 samples, 0.23%)</title><rect x="583.7" y="387.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="586.7" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (9,587 samples, 0.21%)</title><rect x="584.0" y="371.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.0" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (4,067 samples, 0.09%)</title><rect x="585.4" y="355.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="588.4" y="366.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (1,442 samples, 0.03%)</title><rect x="586.5" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="589.5" y="398.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1,138 samples, 0.02%)</title><rect x="586.8" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="589.8" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9,049 samples, 0.20%)</title><rect x="587.1" y="435.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="590.1" y="446.0"></text>
</g>
<g>
<title>__fget_light (8,505 samples, 0.19%)</title><rect x="587.3" y="419.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="590.3" y="430.0"></text>
</g>
<g>
<title>__fget (7,168 samples, 0.16%)</title><rect x="587.6" y="403.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="590.6" y="414.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1,597 samples, 0.03%)</title><rect x="589.5" y="515.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="592.5" y="526.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1,123 samples, 0.02%)</title><rect x="590.1" y="547.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="593.1" y="558.0"></text>
</g>
<g>
<title>gettimeofday (1,006 samples, 0.02%)</title><rect x="590.1" y="531.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="593.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10,015 samples, 0.22%)</title><rect x="590.4" y="595.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6,855 samples, 0.15%)</title><rect x="591.2" y="579.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6,855 samples, 0.15%)</title><rect x="591.2" y="563.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15,406 samples, 0.34%)</title><rect x="593.3" y="611.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4,181 samples, 0.09%)</title><rect x="594.7" y="595.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4,181 samples, 0.09%)</title><rect x="594.7" y="579.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,932 samples, 0.13%)</title><rect x="595.7" y="595.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,932 samples, 0.13%)</title><rect x="595.7" y="579.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.7" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1,360 samples, 0.03%)</title><rect x="596.9" y="563.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="599.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getRaw (245,185 samples, 5.34%)</title><rect x="597.4" y="611.0" width="63.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.4" y="622.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4,377 samples, 0.10%)</title><rect x="597.9" y="595.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.9" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3,159 samples, 0.07%)</title><rect x="598.2" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (25,133 samples, 0.55%)</title><rect x="599.1" y="595.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13,773 samples, 0.30%)</title><rect x="599.4" y="579.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (8,778 samples, 0.19%)</title><rect x="599.5" y="563.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.5" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8,479 samples, 0.18%)</title><rect x="599.6" y="547.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8,333 samples, 0.18%)</title><rect x="599.7" y="531.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8,056 samples, 0.18%)</title><rect x="599.7" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (7,334 samples, 0.16%)</title><rect x="599.9" y="499.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (2,809 samples, 0.06%)</title><rect x="600.1" y="483.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (2,604 samples, 0.06%)</title><rect x="600.2" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/1143761155.getAsBoolean (3,465 samples, 0.08%)</title><rect x="600.9" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3,444 samples, 0.08%)</title><rect x="600.9" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3,240 samples, 0.07%)</title><rect x="600.9" y="451.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2,418 samples, 0.05%)</title><rect x="600.9" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2,417 samples, 0.05%)</title><rect x="600.9" y="419.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2,264 samples, 0.05%)</title><rect x="601.0" y="403.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1,832 samples, 0.04%)</title><rect x="601.1" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.1" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,796 samples, 0.06%)</title><rect x="601.9" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.9" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,647 samples, 0.06%)</title><rect x="601.9" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.9" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,489 samples, 0.03%)</title><rect x="602.6" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.6" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,063 samples, 0.02%)</title><rect x="602.7" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.7" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,029 samples, 0.02%)</title><rect x="602.7" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (7,772 samples, 0.17%)</title><rect x="603.0" y="579.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.0" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7,536 samples, 0.16%)</title><rect x="603.0" y="563.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2,309 samples, 0.05%)</title><rect x="604.4" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$143/113381980.apply (2,153 samples, 0.05%)</title><rect x="605.0" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (1,880 samples, 0.04%)</title><rect x="605.0" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,825 samples, 0.04%)</title><rect x="605.0" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.0" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1,160 samples, 0.03%)</title><rect x="605.1" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.iteratorRaw (212,269 samples, 4.62%)</title><rect x="605.5" y="595.0" width="54.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.5" y="606.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (18,883 samples, 0.41%)</title><rect x="623.7" y="579.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (18,729 samples, 0.41%)</title><rect x="623.8" y="563.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,435 samples, 0.03%)</title><rect x="623.8" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.8" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (999 samples, 0.02%)</title><rect x="624.3" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.3" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (15,500 samples, 0.34%)</title><rect x="624.6" y="547.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (15,366 samples, 0.33%)</title><rect x="624.6" y="531.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (14,663 samples, 0.32%)</title><rect x="624.8" y="515.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (12,806 samples, 0.28%)</title><rect x="624.8" y="499.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (3,764 samples, 0.08%)</title><rect x="624.9" y="483.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (3,712 samples, 0.08%)</title><rect x="624.9" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.9" y="478.0"></text>
</g>
<g>
<title>itable stub (2,103 samples, 0.05%)</title><rect x="624.9" y="451.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="627.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Sink.cancellationRequested (1,485 samples, 0.03%)</title><rect x="625.5" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/1143761155.getAsBoolean (8,902 samples, 0.19%)</title><rect x="625.8" y="483.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8,827 samples, 0.19%)</title><rect x="625.9" y="467.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8,820 samples, 0.19%)</title><rect x="625.9" y="451.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4,740 samples, 0.10%)</title><rect x="625.9" y="435.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4,607 samples, 0.10%)</title><rect x="625.9" y="419.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2,047 samples, 0.04%)</title><rect x="626.6" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3,845 samples, 0.08%)</title><rect x="627.1" y="435.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (1,615 samples, 0.04%)</title><rect x="628.2" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,074 samples, 0.02%)</title><rect x="628.3" y="483.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1,048 samples, 0.02%)</title><rect x="628.3" y="467.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (981 samples, 0.02%)</title><rect x="628.3" y="451.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1,247 samples, 0.03%)</title><rect x="628.6" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="631.6" y="590.0"></text>
</g>
<g>
<title>itable stub (4,627 samples, 0.10%)</title><rect x="628.9" y="579.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="631.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1,454 samples, 0.03%)</title><rect x="630.3" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1,077 samples, 0.02%)</title><rect x="630.6" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1,744 samples, 0.04%)</title><rect x="630.9" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.9" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,446 samples, 0.03%)</title><rect x="631.7" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1,484 samples, 0.03%)</title><rect x="632.3" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooHigh (1,115 samples, 0.02%)</title><rect x="632.8" y="579.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1,060 samples, 0.02%)</title><rect x="633.0" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (26,596 samples, 0.58%)</title><rect x="633.3" y="579.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (26,533 samples, 0.58%)</title><rect x="633.3" y="563.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (26,532 samples, 0.58%)</title><rect x="633.3" y="547.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.3" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4,756 samples, 0.10%)</title><rect x="633.5" y="531.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.5" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2,365 samples, 0.05%)</title><rect x="633.5" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.5" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1,758 samples, 0.04%)</title><rect x="633.7" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.7" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2,383 samples, 0.05%)</title><rect x="634.1" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.1" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (15,713 samples, 0.34%)</title><rect x="634.7" y="531.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.7" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (15,710 samples, 0.34%)</title><rect x="634.7" y="515.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.7" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (11,236 samples, 0.24%)</title><rect x="635.8" y="499.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.8" y="510.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (11,235 samples, 0.24%)</title><rect x="635.8" y="483.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.8" y="494.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (11,218 samples, 0.24%)</title><rect x="635.8" y="467.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.8" y="478.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (11,201 samples, 0.24%)</title><rect x="635.8" y="451.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (5,208 samples, 0.11%)</title><rect x="638.8" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.8" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1,272 samples, 0.03%)</title><rect x="639.2" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.2" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1,270 samples, 0.03%)</title><rect x="639.2" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2,480 samples, 0.05%)</title><rect x="639.5" y="515.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2,480 samples, 0.05%)</title><rect x="639.5" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (2,037 samples, 0.04%)</title><rect x="639.6" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3,970 samples, 0.09%)</title><rect x="640.2" y="579.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3,952 samples, 0.09%)</title><rect x="640.2" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (3,513 samples, 0.08%)</title><rect x="640.3" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,068 samples, 0.02%)</title><rect x="641.3" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1,833 samples, 0.04%)</title><rect x="641.6" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.get (1,762 samples, 0.04%)</title><rect x="642.1" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.hasNext (1,874 samples, 0.04%)</title><rect x="642.5" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,386 samples, 0.05%)</title><rect x="643.0" y="579.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (25,160 samples, 0.55%)</title><rect x="643.6" y="579.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (23,186 samples, 0.51%)</title><rect x="644.1" y="563.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21,948 samples, 0.48%)</title><rect x="644.4" y="547.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (20,153 samples, 0.44%)</title><rect x="644.5" y="531.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.5" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (20,038 samples, 0.44%)</title><rect x="644.6" y="515.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18,243 samples, 0.40%)</title><rect x="645.0" y="499.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (17,392 samples, 0.38%)</title><rect x="645.2" y="483.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.2" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14,832 samples, 0.32%)</title><rect x="645.8" y="467.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (3,631 samples, 0.08%)</title><rect x="646.5" y="451.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (2,823 samples, 0.06%)</title><rect x="646.7" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$135/1143761155.getAsBoolean (8,568 samples, 0.19%)</title><rect x="647.4" y="451.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8,545 samples, 0.19%)</title><rect x="647.4" y="435.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8,340 samples, 0.18%)</title><rect x="647.5" y="419.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4,322 samples, 0.09%)</title><rect x="647.6" y="403.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4,322 samples, 0.09%)</title><rect x="647.6" y="387.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3,720 samples, 0.08%)</title><rect x="647.7" y="371.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (3,557 samples, 0.08%)</title><rect x="648.7" y="403.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,098 samples, 0.05%)</title><rect x="648.8" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable$$Lambda$81/1891008756.apply (1,096 samples, 0.02%)</title><rect x="649.3" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.iterator (38,088 samples, 0.83%)</title><rect x="650.1" y="579.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.1" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (36,405 samples, 0.79%)</title><rect x="650.2" y="563.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (36,030 samples, 0.78%)</title><rect x="650.2" y="547.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (35,980 samples, 0.78%)</title><rect x="650.2" y="531.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (35,737 samples, 0.78%)</title><rect x="650.3" y="515.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (3,666 samples, 0.08%)</title><rect x="650.3" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (3,325 samples, 0.07%)</title><rect x="650.4" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2,294 samples, 0.05%)</title><rect x="650.7" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2,087 samples, 0.05%)</title><rect x="650.7" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.7" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2,085 samples, 0.05%)</title><rect x="650.7" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.7" y="446.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2,085 samples, 0.05%)</title><rect x="650.7" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (31,789 samples, 0.69%)</title><rect x="651.3" y="499.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (31,723 samples, 0.69%)</title><rect x="651.3" y="483.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2,408 samples, 0.05%)</title><rect x="651.4" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2,358 samples, 0.05%)</title><rect x="651.4" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2,358 samples, 0.05%)</title><rect x="651.4" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.4" y="446.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2,358 samples, 0.05%)</title><rect x="651.4" y="419.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (29,063 samples, 0.63%)</title><rect x="652.0" y="467.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (28,048 samples, 0.61%)</title><rect x="652.2" y="451.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (27,697 samples, 0.60%)</title><rect x="652.3" y="435.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (27,697 samples, 0.60%)</title><rect x="652.3" y="419.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.3" y="430.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (27,697 samples, 0.60%)</title><rect x="652.3" y="403.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (1,442 samples, 0.03%)</title><rect x="660.1" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,350 samples, 0.03%)</title><rect x="660.1" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Value.getValue (4,098 samples, 0.09%)</title><rect x="660.5" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3,831 samples, 0.08%)</title><rect x="660.5" y="595.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.5" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3,677 samples, 0.08%)</title><rect x="660.6" y="579.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3,077 samples, 0.07%)</title><rect x="660.7" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2,983 samples, 0.06%)</title><rect x="660.8" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1,220 samples, 0.03%)</title><rect x="661.2" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getReplicationConfiguration (56,923 samples, 1.24%)</title><rect x="661.6" y="611.0" width="14.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.parseAndValidateReplicas (56,824 samples, 1.24%)</title><rect x="661.7" y="595.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$ReplicationConfiguration.parse (54,213 samples, 1.18%)</title><rect x="662.0" y="579.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (4,296 samples, 0.09%)</title><rect x="663.1" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (4,194 samples, 0.09%)</title><rect x="663.1" y="547.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (45,772 samples, 1.00%)</title><rect x="664.2" y="563.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (22,792 samples, 0.50%)</title><rect x="665.9" y="547.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (21,995 samples, 0.48%)</title><rect x="666.1" y="531.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (21,995 samples, 0.48%)</title><rect x="666.1" y="515.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (21,995 samples, 0.48%)</title><rect x="666.1" y="499.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (21,984 samples, 0.48%)</title><rect x="666.1" y="483.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (21,984 samples, 0.48%)</title><rect x="666.1" y="467.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21,984 samples, 0.48%)</title><rect x="666.1" y="451.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="462.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1,650 samples, 0.04%)</title><rect x="671.4" y="435.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="674.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (8,466 samples, 0.18%)</title><rect x="671.8" y="547.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,835 samples, 0.08%)</title><rect x="673.0" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,163 samples, 0.07%)</title><rect x="673.2" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,163 samples, 0.07%)</title><rect x="673.2" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,163 samples, 0.07%)</title><rect x="673.2" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,163 samples, 0.07%)</title><rect x="673.2" y="467.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,163 samples, 0.07%)</title><rect x="673.2" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,163 samples, 0.07%)</title><rect x="673.2" y="435.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7,126 samples, 0.16%)</title><rect x="674.1" y="547.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7,126 samples, 0.16%)</title><rect x="674.1" y="531.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7,124 samples, 0.16%)</title><rect x="674.1" y="515.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7,124 samples, 0.16%)</title><rect x="674.1" y="499.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7,124 samples, 0.16%)</title><rect x="674.1" y="483.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.all (1,260 samples, 0.03%)</title><rect x="675.9" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.all (1,195 samples, 0.03%)</title><rect x="676.0" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getValues (1,235,378 samples, 26.92%)</title><rect x="676.3" y="611.0" width="317.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.3" y="622.0">ru/mail/polis/s3ponia/AsyncServiceUtility.g..</text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getFutures (1,186,748 samples, 25.86%)</title><rect x="676.9" y="595.0" width="305.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.9" y="606.0">ru/mail/polis/s3ponia/AsyncServiceUtility..</text>
</g>
<g>
<title>java/lang/String.equals (5,797 samples, 0.13%)</title><rect x="680.1" y="579.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2,533 samples, 0.06%)</title><rect x="681.6" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9,243 samples, 0.20%)</title><rect x="682.2" y="579.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (7,840 samples, 0.17%)</title><rect x="684.6" y="579.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1,305 samples, 0.03%)</title><rect x="685.6" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.proxy (2,674 samples, 0.06%)</title><rect x="685.9" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="688.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.proxy (1,148,853 samples, 25.03%)</title><rect x="686.6" y="579.0" width="295.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.6" y="590.0">ru/mail/polis/s3ponia/AsyncServiceUtilit..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4,745 samples, 0.10%)</title><rect x="686.7" y="563.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/665726928.invoke (4,745 samples, 0.10%)</title><rect x="686.7" y="547.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,551 samples, 0.10%)</title><rect x="686.7" y="531.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3,627 samples, 0.08%)</title><rect x="686.9" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3,520 samples, 0.08%)</title><rect x="686.9" y="499.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,081 samples, 0.02%)</title><rect x="687.6" y="483.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6,257 samples, 0.14%)</title><rect x="687.9" y="563.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2,003 samples, 0.04%)</title><rect x="687.9" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.9" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4,232 samples, 0.09%)</title><rect x="688.4" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4,229 samples, 0.09%)</title><rect x="688.4" y="531.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4,229 samples, 0.09%)</title><rect x="688.4" y="515.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.4" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2,283 samples, 0.05%)</title><rect x="688.9" y="499.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="691.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,137,514 samples, 24.78%)</title><rect x="689.5" y="563.0" width="292.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.5" y="574.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,134,603 samples, 24.72%)</title><rect x="690.3" y="547.0" width="291.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.3" y="558.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (11,245 samples, 0.24%)</title><rect x="691.5" y="531.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11,245 samples, 0.24%)</title><rect x="691.5" y="515.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11,245 samples, 0.24%)</title><rect x="691.5" y="499.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (190,818 samples, 4.16%)</title><rect x="694.4" y="531.0" width="49.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.4" y="542.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5,013 samples, 0.11%)</title><rect x="700.1" y="515.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="703.1" y="526.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4,672 samples, 0.10%)</title><rect x="700.2" y="499.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="703.2" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4,541 samples, 0.10%)</title><rect x="700.2" y="483.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="703.2" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4,305 samples, 0.09%)</title><rect x="700.2" y="467.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="703.2" y="478.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (1,902 samples, 0.04%)</title><rect x="700.3" y="451.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="703.3" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (161,732 samples, 3.52%)</title><rect x="701.4" y="515.0" width="41.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.4" y="526.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (33,731 samples, 0.73%)</title><rect x="703.3" y="499.0" width="8.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="706.3" y="510.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (2,454 samples, 0.05%)</title><rect x="704.9" y="483.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="707.9" y="494.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2,599 samples, 0.06%)</title><rect x="705.5" y="483.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="708.5" y="494.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (980 samples, 0.02%)</title><rect x="706.2" y="483.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="709.2" y="494.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (20,313 samples, 0.44%)</title><rect x="706.6" y="483.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="709.6" y="494.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3,027 samples, 0.07%)</title><rect x="709.3" y="467.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="712.3" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (3,762 samples, 0.08%)</title><rect x="710.3" y="467.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="713.3" y="478.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2,264 samples, 0.05%)</title><rect x="711.2" y="467.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="714.2" y="478.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1,197 samples, 0.03%)</title><rect x="711.5" y="451.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="714.5" y="462.0"></text>
</g>
<g>
<title>__libc_recv (116,035 samples, 2.53%)</title><rect x="712.0" y="499.0" width="29.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="715.0" y="510.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (109,222 samples, 2.38%)</title><rect x="713.7" y="483.0" width="28.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="716.7" y="494.0">en..</text>
</g>
<g>
<title>do_syscall_64 (109,222 samples, 2.38%)</title><rect x="713.7" y="467.0" width="28.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="716.7" y="478.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (107,921 samples, 2.35%)</title><rect x="714.0" y="451.0" width="27.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="717.0" y="462.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (107,714 samples, 2.35%)</title><rect x="714.1" y="435.0" width="27.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="717.1" y="446.0">_..</text>
</g>
<g>
<title>fput_many (1,085 samples, 0.02%)</title><rect x="714.3" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="717.3" y="430.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (103,406 samples, 2.25%)</title><rect x="714.6" y="419.0" width="26.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="717.6" y="430.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (102,386 samples, 2.23%)</title><rect x="714.9" y="403.0" width="26.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="717.9" y="414.0">t..</text>
</g>
<g>
<title>__kfree_skb (1,260 samples, 0.03%)</title><rect x="715.9" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="718.9" y="398.0"></text>
</g>
<g>
<title>skb_release_all (1,045 samples, 0.02%)</title><rect x="715.9" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="718.9" y="382.0"></text>
</g>
<g>
<title>skb_release_head_state (1,037 samples, 0.02%)</title><rect x="715.9" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="718.9" y="366.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (37,879 samples, 0.83%)</title><rect x="716.4" y="387.0" width="9.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="719.4" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (37,105 samples, 0.81%)</title><rect x="716.5" y="371.0" width="9.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="719.5" y="382.0"></text>
</g>
<g>
<title>ip_output (36,014 samples, 0.78%)</title><rect x="716.8" y="355.0" width="9.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="719.8" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (34,622 samples, 0.75%)</title><rect x="716.9" y="339.0" width="8.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="719.9" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4,701 samples, 0.10%)</title><rect x="717.2" y="323.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.2" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2,856 samples, 0.06%)</title><rect x="717.4" y="307.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="720.4" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (2,550 samples, 0.06%)</title><rect x="717.5" y="291.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="720.5" y="302.0"></text>
</g>
<g>
<title>netif_rx (1,014 samples, 0.02%)</title><rect x="717.9" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="720.9" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (28,915 samples, 0.63%)</title><rect x="718.4" y="323.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="721.4" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (28,642 samples, 0.62%)</title><rect x="718.5" y="307.0" width="7.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="721.5" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (27,913 samples, 0.61%)</title><rect x="718.7" y="291.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="721.7" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (27,913 samples, 0.61%)</title><rect x="718.7" y="275.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="721.7" y="286.0"></text>
</g>
<g>
<title>net_rx_action (26,207 samples, 0.57%)</title><rect x="719.1" y="259.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="722.1" y="270.0"></text>
</g>
<g>
<title>process_backlog (25,216 samples, 0.55%)</title><rect x="719.4" y="243.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="722.4" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (24,329 samples, 0.53%)</title><rect x="719.6" y="227.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="722.6" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1,259 samples, 0.03%)</title><rect x="719.6" y="211.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="722.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv (22,862 samples, 0.50%)</title><rect x="720.0" y="211.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="723.0" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (21,844 samples, 0.48%)</title><rect x="720.0" y="195.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="723.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (21,594 samples, 0.47%)</title><rect x="720.1" y="179.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="723.1" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21,514 samples, 0.47%)</title><rect x="720.1" y="163.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="723.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20,585 samples, 0.45%)</title><rect x="720.3" y="147.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="723.3" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (1,610 samples, 0.04%)</title><rect x="720.8" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="723.8" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2,230 samples, 0.05%)</title><rect x="721.3" y="131.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="724.3" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2,124 samples, 0.05%)</title><rect x="721.3" y="115.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="724.3" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1,856 samples, 0.04%)</title><rect x="721.4" y="99.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="724.4" y="110.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (1,169 samples, 0.03%)</title><rect x="721.5" y="83.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="724.5" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14,135 samples, 0.31%)</title><rect x="721.9" y="131.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="724.9" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (13,816 samples, 0.30%)</title><rect x="722.0" y="115.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="725.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack (10,740 samples, 0.23%)</title><rect x="722.4" y="99.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="725.4" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (2,781 samples, 0.06%)</title><rect x="723.3" y="83.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="726.3" y="94.0"></text>
</g>
<g>
<title>kfree (1,195 samples, 0.03%)</title><rect x="723.5" y="67.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.5" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (1,451 samples, 0.03%)</title><rect x="724.3" y="83.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="727.3" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1,087 samples, 0.02%)</title><rect x="725.2" y="99.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="728.2" y="110.0"></text>
</g>
<g>
<title>ktime_get (1,007 samples, 0.02%)</title><rect x="725.3" y="83.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="728.3" y="94.0"></text>
</g>
<g>
<title>lock_sock_nested (1,099 samples, 0.02%)</title><rect x="726.1" y="387.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="729.1" y="398.0"></text>
</g>
<g>
<title>sk_wait_data (49,082 samples, 1.07%)</title><rect x="726.6" y="387.0" width="12.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="729.6" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1,157 samples, 0.03%)</title><rect x="726.8" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.8" y="382.0"></text>
</g>
<g>
<title>lock_sock_nested (36,463 samples, 0.79%)</title><rect x="727.2" y="371.0" width="9.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="730.2" y="382.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (36,319 samples, 0.79%)</title><rect x="727.3" y="355.0" width="9.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="730.3" y="366.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (36,268 samples, 0.79%)</title><rect x="727.3" y="339.0" width="9.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.3" y="350.0"></text>
</g>
<g>
<title>wait_woken (9,166 samples, 0.20%)</title><rect x="736.9" y="371.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="739.9" y="382.0"></text>
</g>
<g>
<title>schedule_timeout (8,833 samples, 0.19%)</title><rect x="736.9" y="355.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.9" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4,156 samples, 0.09%)</title><rect x="737.1" y="339.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="740.1" y="350.0"></text>
</g>
<g>
<title>schedule (3,657 samples, 0.08%)</title><rect x="738.3" y="339.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="741.3" y="350.0"></text>
</g>
<g>
<title>__schedule (3,279 samples, 0.07%)</title><rect x="738.4" y="323.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="741.4" y="334.0"></text>
</g>
<g>
<title>finish_task_switch (2,460 samples, 0.05%)</title><rect x="738.6" y="307.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="741.6" y="318.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5,808 samples, 0.13%)</title><rect x="739.2" y="387.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="742.2" y="398.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5,616 samples, 0.12%)</title><rect x="739.3" y="371.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="742.3" y="382.0"></text>
</g>
<g>
<title>_copy_to_iter (2,659 samples, 0.06%)</title><rect x="739.7" y="355.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="742.7" y="366.0"></text>
</g>
<g>
<title>copyout (1,980 samples, 0.04%)</title><rect x="739.9" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="742.9" y="350.0"></text>
</g>
<g>
<title>copy_user_generic_string (1,667 samples, 0.04%)</title><rect x="739.9" y="323.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="742.9" y="334.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1,341 samples, 0.03%)</title><rect x="740.4" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="743.4" y="366.0"></text>
</g>
<g>
<title>__check_object_size (1,283 samples, 0.03%)</title><rect x="740.4" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="743.4" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1,255 samples, 0.03%)</title><rect x="740.9" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="743.9" y="398.0"></text>
</g>
<g>
<title>sock_recvmsg (1,102 samples, 0.02%)</title><rect x="741.2" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="744.2" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1,027 samples, 0.02%)</title><rect x="741.5" y="419.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="744.5" y="430.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3,141 samples, 0.07%)</title><rect x="741.8" y="499.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="744.8" y="510.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1,371 samples, 0.03%)</title><rect x="742.6" y="499.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="745.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,510 samples, 0.03%)</title><rect x="743.0" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (206,012 samples, 4.49%)</title><rect x="743.4" y="531.0" width="53.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.4" y="542.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9,102 samples, 0.20%)</title><rect x="749.1" y="515.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9,067 samples, 0.20%)</title><rect x="749.1" y="499.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8,729 samples, 0.19%)</title><rect x="749.2" y="483.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3,353 samples, 0.07%)</title><rect x="750.5" y="467.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3,060 samples, 0.07%)</title><rect x="750.6" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (23,991 samples, 0.52%)</title><rect x="751.8" y="515.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18,711 samples, 0.41%)</title><rect x="753.2" y="499.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9,768 samples, 0.21%)</title><rect x="754.1" y="483.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5,293 samples, 0.12%)</title><rect x="756.6" y="483.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="759.6" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4,472 samples, 0.10%)</title><rect x="758.0" y="515.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="761.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (90,495 samples, 1.97%)</title><rect x="759.2" y="515.0" width="23.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.2" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1,303 samples, 0.03%)</title><rect x="763.3" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.3" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3,807 samples, 0.08%)</title><rect x="763.6" y="499.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.6" y="510.0"></text>
</g>
<g>
<title>__libc_recv (2,745 samples, 0.06%)</title><rect x="763.9" y="483.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="766.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,529 samples, 0.06%)</title><rect x="763.9" y="467.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.9" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (2,529 samples, 0.06%)</title><rect x="763.9" y="451.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="766.9" y="462.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2,524 samples, 0.05%)</title><rect x="763.9" y="435.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="766.9" y="446.0"></text>
</g>
<g>
<title>__sys_recvfrom (2,524 samples, 0.05%)</title><rect x="763.9" y="419.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="766.9" y="430.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (2,462 samples, 0.05%)</title><rect x="764.0" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="767.0" y="414.0"></text>
</g>
<g>
<title>tcp_recvmsg (2,449 samples, 0.05%)</title><rect x="764.0" y="387.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="767.0" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1,242 samples, 0.03%)</title><rect x="764.0" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="767.0" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1,204 samples, 0.03%)</title><rect x="764.0" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="767.0" y="366.0"></text>
</g>
<g>
<title>ip_output (1,158 samples, 0.03%)</title><rect x="764.0" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="767.0" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (1,096 samples, 0.02%)</title><rect x="764.0" y="323.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="767.0" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69,267 samples, 1.51%)</title><rect x="764.6" y="499.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.6" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (68,820 samples, 1.50%)</title><rect x="764.7" y="483.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.7" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14,249 samples, 0.31%)</title><rect x="782.4" y="515.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (9,405 samples, 0.20%)</title><rect x="786.1" y="515.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.1" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,147 samples, 0.05%)</title><rect x="788.0" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="791.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (30,080 samples, 0.66%)</title><rect x="788.5" y="515.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14,867 samples, 0.32%)</title><rect x="792.4" y="499.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14,867 samples, 0.32%)</title><rect x="792.4" y="483.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.4" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1,541 samples, 0.03%)</title><rect x="795.8" y="467.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="798.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (49,429 samples, 1.08%)</title><rect x="796.4" y="531.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21,169 samples, 0.46%)</title><rect x="803.6" y="515.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.6" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (21,169 samples, 0.46%)</title><rect x="803.6" y="499.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.charAt (21,169 samples, 0.46%)</title><rect x="803.6" y="483.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.6" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2,381 samples, 0.05%)</title><rect x="808.5" y="467.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="811.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (16,814 samples, 0.37%)</title><rect x="809.1" y="531.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9,071 samples, 0.20%)</title><rect x="811.1" y="515.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9,071 samples, 0.20%)</title><rect x="811.1" y="499.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.1" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2,086 samples, 0.05%)</title><rect x="812.9" y="483.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="815.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (83,667 samples, 1.82%)</title><rect x="813.7" y="531.0" width="21.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.7" y="542.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1,044 samples, 0.02%)</title><rect x="814.8" y="515.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="817.8" y="526.0"></text>
</g>
<g>
<title>setsockopt (78,211 samples, 1.70%)</title><rect x="815.0" y="515.0" width="20.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="818.0" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71,922 samples, 1.57%)</title><rect x="816.6" y="499.0" width="18.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="819.6" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (71,922 samples, 1.57%)</title><rect x="816.6" y="483.0" width="18.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="819.6" y="494.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (61,019 samples, 1.33%)</title><rect x="819.4" y="467.0" width="15.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="822.4" y="478.0"></text>
</g>
<g>
<title>__sys_setsockopt (59,089 samples, 1.29%)</title><rect x="819.9" y="451.0" width="15.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="822.9" y="462.0"></text>
</g>
<g>
<title>fput_many (3,877 samples, 0.08%)</title><rect x="820.9" y="435.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="823.9" y="446.0"></text>
</g>
<g>
<title>security_socket_setsockopt (10,509 samples, 0.23%)</title><rect x="821.9" y="435.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="824.9" y="446.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (9,304 samples, 0.20%)</title><rect x="822.2" y="419.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="825.2" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (5,123 samples, 0.11%)</title><rect x="823.3" y="403.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="826.3" y="414.0"></text>
</g>
<g>
<title>sock_setsockopt (30,748 samples, 0.67%)</title><rect x="824.6" y="435.0" width="7.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="827.6" y="446.0"></text>
</g>
<g>
<title>__get_user_4 (3,571 samples, 0.08%)</title><rect x="825.4" y="419.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="828.4" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (6,664 samples, 0.15%)</title><rect x="826.5" y="419.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.5" y="430.0"></text>
</g>
<g>
<title>_cond_resched (1,169 samples, 0.03%)</title><rect x="826.7" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="829.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4,547 samples, 0.10%)</title><rect x="827.0" y="403.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="830.0" y="414.0"></text>
</g>
<g>
<title>release_sock (7,282 samples, 0.16%)</title><rect x="828.2" y="419.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="831.2" y="430.0"></text>
</g>
<g>
<title>tcp_release_cb (3,217 samples, 0.07%)</title><rect x="829.3" y="403.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="832.3" y="414.0"></text>
</g>
<g>
<title>sock_set_timeout (9,382 samples, 0.20%)</title><rect x="830.1" y="419.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="833.1" y="430.0"></text>
</g>
<g>
<title>_copy_from_user (5,966 samples, 0.13%)</title><rect x="831.0" y="403.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="834.0" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (5,487 samples, 0.12%)</title><rect x="831.1" y="387.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="834.1" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10,223 samples, 0.22%)</title><rect x="832.5" y="435.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="835.5" y="446.0"></text>
</g>
<g>
<title>__fget_light (9,529 samples, 0.21%)</title><rect x="832.7" y="419.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="835.7" y="430.0"></text>
</g>
<g>
<title>__fget (8,217 samples, 0.18%)</title><rect x="833.0" y="403.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="836.0" y="414.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (523,100 samples, 11.40%)</title><rect x="835.2" y="531.0" width="134.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="838.2" y="542.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (10,214 samples, 0.22%)</title><rect x="835.9" y="515.0" width="2.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="838.9" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1,217 samples, 0.03%)</title><rect x="836.9" y="499.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="839.9" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4,456 samples, 0.10%)</title><rect x="837.4" y="499.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="840.4" y="510.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1,741 samples, 0.04%)</title><rect x="838.1" y="483.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="841.1" y="494.0"></text>
</g>
<g>
<title>__libc_send (508,191 samples, 11.07%)</title><rect x="838.5" y="515.0" width="130.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="841.5" y="526.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (503,087 samples, 10.96%)</title><rect x="839.8" y="499.0" width="129.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.8" y="510.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (503,087 samples, 10.96%)</title><rect x="839.8" y="483.0" width="129.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.8" y="494.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (498,901 samples, 10.87%)</title><rect x="840.8" y="467.0" width="128.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="843.8" y="478.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (497,482 samples, 10.84%)</title><rect x="841.2" y="451.0" width="127.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="844.2" y="462.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (492,845 samples, 10.74%)</title><rect x="842.0" y="435.0" width="126.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="845.0" y="446.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (2,020 samples, 0.04%)</title><rect x="842.5" y="419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="845.5" y="430.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2,935 samples, 0.06%)</title><rect x="843.0" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.0" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (1,060 samples, 0.02%)</title><rect x="843.5" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="846.5" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (485,839 samples, 10.59%)</title><rect x="843.8" y="419.0" width="124.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="846.8" y="430.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1,245 samples, 0.03%)</title><rect x="844.2" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="847.2" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (483,064 samples, 10.52%)</title><rect x="844.5" y="403.0" width="124.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="847.5" y="414.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (2,035 samples, 0.04%)</title><rect x="847.7" y="387.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="850.7" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (1,526 samples, 0.03%)</title><rect x="847.8" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="850.8" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (409,739 samples, 8.93%)</title><rect x="848.2" y="387.0" width="105.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="851.2" y="398.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (408,973 samples, 8.91%)</title><rect x="848.4" y="371.0" width="105.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="851.4" y="382.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (391,558 samples, 8.53%)</title><rect x="849.8" y="355.0" width="100.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="852.8" y="366.0">__tcp_transm..</text>
</g>
<g>
<title>__ip_queue_xmit (366,721 samples, 7.99%)</title><rect x="852.6" y="339.0" width="94.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="855.6" y="350.0">__ip_queue_..</text>
</g>
<g>
<title>__sk_dst_check (3,031 samples, 0.07%)</title><rect x="853.1" y="323.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="856.1" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (2,312 samples, 0.05%)</title><rect x="853.3" y="307.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="856.3" y="318.0"></text>
</g>
<g>
<title>ip_local_out (8,024 samples, 0.17%)</title><rect x="854.0" y="323.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="857.0" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (7,657 samples, 0.17%)</title><rect x="854.1" y="307.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="857.1" y="318.0"></text>
</g>
<g>
<title>ip_send_check (4,014 samples, 0.09%)</title><rect x="854.4" y="291.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="857.4" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (2,438 samples, 0.05%)</title><rect x="855.4" y="291.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="858.4" y="302.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1,693 samples, 0.04%)</title><rect x="855.6" y="275.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="858.6" y="286.0"></text>
</g>
<g>
<title>netlbl_enabled (1,039 samples, 0.02%)</title><rect x="855.8" y="259.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="858.8" y="270.0"></text>
</g>
<g>
<title>ip_output (353,195 samples, 7.70%)</title><rect x="856.0" y="323.0" width="90.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="859.0" y="334.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (1,969 samples, 0.04%)</title><rect x="856.6" y="307.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="859.6" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (339,940 samples, 7.41%)</title><rect x="857.1" y="307.0" width="87.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="860.1" y="318.0">ip_finish_..</text>
</g>
<g>
<title>__dev_queue_xmit (23,211 samples, 0.51%)</title><rect x="859.1" y="291.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.1" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (13,173 samples, 0.29%)</title><rect x="860.5" y="275.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="863.5" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (11,174 samples, 0.24%)</title><rect x="861.0" y="259.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="864.0" y="270.0"></text>
</g>
<g>
<title>eth_type_trans (1,820 samples, 0.04%)</title><rect x="861.6" y="243.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="864.6" y="254.0"></text>
</g>
<g>
<title>netif_rx (5,066 samples, 0.11%)</title><rect x="862.0" y="243.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="865.0" y="254.0"></text>
</g>
<g>
<title>netif_rx_internal (4,848 samples, 0.11%)</title><rect x="862.1" y="227.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="865.1" y="238.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4,512 samples, 0.10%)</title><rect x="862.2" y="211.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="865.2" y="222.0"></text>
</g>
<g>
<title>tcp_wfree (1,368 samples, 0.03%)</title><rect x="863.5" y="243.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="866.5" y="254.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1,166 samples, 0.03%)</title><rect x="863.9" y="275.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="866.9" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (2,912 samples, 0.06%)</title><rect x="864.2" y="275.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="867.2" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (1,639 samples, 0.04%)</title><rect x="864.5" y="259.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="867.5" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (309,068 samples, 6.73%)</title><rect x="865.1" y="291.0" width="79.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="868.1" y="302.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.0 (308,129 samples, 6.71%)</title><rect x="865.3" y="275.0" width="79.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="868.3" y="286.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (304,342 samples, 6.63%)</title><rect x="866.3" y="259.0" width="78.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="869.3" y="270.0">do_softir..</text>
</g>
<g>
<title>__softirqentry_text_start (304,342 samples, 6.63%)</title><rect x="866.3" y="243.0" width="78.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="869.3" y="254.0">__softirq..</text>
</g>
<g>
<title>net_rx_action (297,309 samples, 6.48%)</title><rect x="868.1" y="227.0" width="76.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="871.1" y="238.0">net_rx_a..</text>
</g>
<g>
<title>__kfree_skb_flush (1,234 samples, 0.03%)</title><rect x="869.0" y="211.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="872.0" y="222.0"></text>
</g>
<g>
<title>process_backlog (292,216 samples, 6.37%)</title><rect x="869.4" y="211.0" width="75.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="872.4" y="222.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (287,560 samples, 6.27%)</title><rect x="870.6" y="195.0" width="73.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="873.6" y="206.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (5,899 samples, 0.13%)</title><rect x="871.0" y="179.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="874.0" y="190.0"></text>
</g>
<g>
<title>ip_rcv (279,868 samples, 6.10%)</title><rect x="872.6" y="179.0" width="71.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="875.6" y="190.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (274,529 samples, 5.98%)</title><rect x="872.9" y="163.0" width="70.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="875.9" y="174.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (272,735 samples, 5.94%)</title><rect x="873.3" y="147.0" width="70.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="876.3" y="158.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (271,932 samples, 5.92%)</title><rect x="873.5" y="131.0" width="69.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="876.5" y="142.0">ip_prot..</text>
</g>
<g>
<title>raw_local_deliver (1,806 samples, 0.04%)</title><rect x="874.8" y="115.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (265,102 samples, 5.78%)</title><rect x="875.3" y="115.0" width="68.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="878.3" y="126.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (9,588 samples, 0.21%)</title><rect x="879.0" y="99.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="882.0" y="110.0"></text>
</g>
<g>
<title>inet_ehashfn (1,127 samples, 0.02%)</title><rect x="881.2" y="83.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="884.2" y="94.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (12,380 samples, 0.27%)</title><rect x="881.6" y="99.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="884.6" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (11,637 samples, 0.25%)</title><rect x="881.7" y="83.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="884.7" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (10,437 samples, 0.23%)</title><rect x="882.1" y="67.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="885.1" y="78.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (6,720 samples, 0.15%)</title><rect x="883.0" y="51.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="886.0" y="62.0"></text>
</g>
<g>
<title>avc_has_perm (1,642 samples, 0.04%)</title><rect x="883.4" y="35.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="886.4" y="46.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (1,832 samples, 0.04%)</title><rect x="883.8" y="35.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="886.8" y="46.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (1,494 samples, 0.03%)</title><rect x="884.3" y="35.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="887.3" y="46.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (226,069 samples, 4.93%)</title><rect x="884.9" y="99.0" width="58.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="887.9" y="110.0">tcp_v4..</text>
</g>
<g>
<title>ipv4_dst_check (1,131 samples, 0.02%)</title><rect x="885.1" y="83.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="888.1" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (224,117 samples, 4.88%)</title><rect x="885.4" y="83.0" width="57.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="888.4" y="94.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1,129 samples, 0.02%)</title><rect x="887.6" y="67.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="890.6" y="78.0"></text>
</g>
<g>
<title>sk_reset_timer (3,716 samples, 0.08%)</title><rect x="887.9" y="67.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="890.9" y="78.0"></text>
</g>
<g>
<title>mod_timer (3,198 samples, 0.07%)</title><rect x="888.1" y="51.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="891.1" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1,565 samples, 0.03%)</title><rect x="888.4" y="35.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="891.4" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (125,245 samples, 2.73%)</title><rect x="888.9" y="67.0" width="32.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="891.9" y="78.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (121,337 samples, 2.64%)</title><rect x="889.9" y="51.0" width="31.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="892.9" y="62.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (120,558 samples, 2.63%)</title><rect x="890.1" y="35.0" width="31.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.1" y="46.0">_r..</text>
</g>
<g>
<title>tcp_ack (70,843 samples, 1.54%)</title><rect x="921.1" y="67.0" width="18.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.1" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (26,676 samples, 0.58%)</title><rect x="925.7" y="51.0" width="6.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="928.7" y="62.0"></text>
</g>
<g>
<title>__slab_free (5,775 samples, 0.13%)</title><rect x="925.7" y="35.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="928.7" y="46.0"></text>
</g>
<g>
<title>kfree (4,685 samples, 0.10%)</title><rect x="927.2" y="35.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="930.2" y="46.0"></text>
</g>
<g>
<title>skb_release_data (15,475 samples, 0.34%)</title><rect x="928.5" y="35.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="931.5" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (3,893 samples, 0.08%)</title><rect x="932.6" y="51.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="935.6" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (980 samples, 0.02%)</title><rect x="933.6" y="51.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.6" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (6,143 samples, 0.13%)</title><rect x="934.1" y="51.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="937.1" y="62.0"></text>
</g>
<g>
<title>__slab_free (2,205 samples, 0.05%)</title><rect x="935.1" y="35.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="938.1" y="46.0"></text>
</g>
<g>
<title>rb_first (2,977 samples, 0.06%)</title><rect x="935.7" y="51.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="938.7" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3,733 samples, 0.08%)</title><rect x="936.5" y="51.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="939.5" y="62.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1,153 samples, 0.03%)</title><rect x="937.5" y="51.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="940.5" y="62.0"></text>
</g>
<g>
<title>tcp_rate_gen (1,022 samples, 0.02%)</title><rect x="938.0" y="51.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="941.0" y="62.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2,032 samples, 0.04%)</title><rect x="938.8" y="51.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="941.8" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (2,683 samples, 0.06%)</title><rect x="939.3" y="67.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="942.3" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2,864 samples, 0.06%)</title><rect x="940.1" y="67.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="943.1" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5,259 samples, 0.11%)</title><rect x="940.9" y="67.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="943.9" y="78.0"></text>
</g>
<g>
<title>ktime_get (3,856 samples, 0.08%)</title><rect x="941.2" y="51.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.2" y="62.0"></text>
</g>
<g>
<title>read_tsc (2,758 samples, 0.06%)</title><rect x="941.5" y="35.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="944.5" y="46.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2,139 samples, 0.05%)</title><rect x="942.2" y="67.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.2" y="78.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (982 samples, 0.02%)</title><rect x="943.0" y="99.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="946.0" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1,758 samples, 0.04%)</title><rect x="943.4" y="163.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="946.4" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (2,431 samples, 0.05%)</title><rect x="943.9" y="163.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="946.9" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1,705 samples, 0.04%)</title><rect x="944.1" y="147.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="947.1" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (8,652 samples, 0.19%)</title><rect x="944.6" y="307.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="947.6" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7,559 samples, 0.16%)</title><rect x="944.7" y="291.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="947.7" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (6,037 samples, 0.13%)</title><rect x="945.1" y="275.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="948.1" y="286.0"></text>
</g>
<g>
<title>avc_has_perm (2,572 samples, 0.06%)</title><rect x="945.6" y="259.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="948.6" y="270.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (1,430 samples, 0.03%)</title><rect x="946.2" y="259.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="949.2" y="270.0"></text>
</g>
<g>
<title>__skb_clone (5,745 samples, 0.13%)</title><rect x="946.8" y="339.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="949.8" y="350.0"></text>
</g>
<g>
<title>__copy_skb_header (1,095 samples, 0.02%)</title><rect x="948.0" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="951.0" y="334.0"></text>
</g>
<g>
<title>ip_queue_xmit?[ipv6] (998 samples, 0.02%)</title><rect x="948.8" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="951.8" y="350.0"></text>
</g>
<g>
<title>tcp_established_options (1,181 samples, 0.03%)</title><rect x="949.3" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.3" y="350.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1,451 samples, 0.03%)</title><rect x="949.9" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.9" y="350.0"></text>
</g>
<g>
<title>ktime_get (3,334 samples, 0.07%)</title><rect x="950.4" y="355.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="953.4" y="366.0"></text>
</g>
<g>
<title>read_tsc (2,344 samples, 0.05%)</title><rect x="950.7" y="339.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="953.7" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5,976 samples, 0.13%)</title><rect x="951.3" y="355.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="954.3" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (2,207 samples, 0.05%)</title><rect x="951.9" y="339.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="954.9" y="350.0"></text>
</g>
<g>
<title>mod_timer (2,069 samples, 0.05%)</title><rect x="951.9" y="323.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="954.9" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2,066 samples, 0.05%)</title><rect x="952.9" y="355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="955.9" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (10,009 samples, 0.22%)</title><rect x="953.6" y="387.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="956.6" y="398.0"></text>
</g>
<g>
<title>copyin (5,802 samples, 0.13%)</title><rect x="953.8" y="371.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="956.8" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_string (5,511 samples, 0.12%)</title><rect x="953.9" y="355.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="956.9" y="366.0"></text>
</g>
<g>
<title>iov_iter_advance (3,308 samples, 0.07%)</title><rect x="955.3" y="371.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="958.3" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (6,194 samples, 0.13%)</title><rect x="956.1" y="387.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="959.1" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5,999 samples, 0.13%)</title><rect x="956.2" y="371.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="959.2" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (22,605 samples, 0.49%)</title><rect x="957.7" y="387.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.7" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (18,401 samples, 0.40%)</title><rect x="958.8" y="371.0" width="4.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="961.8" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6,023 samples, 0.13%)</title><rect x="959.8" y="355.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="962.8" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5,853 samples, 0.13%)</title><rect x="959.9" y="339.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="962.9" y="350.0"></text>
</g>
<g>
<title>__ksize (3,000 samples, 0.07%)</title><rect x="961.4" y="355.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="964.4" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5,108 samples, 0.11%)</title><rect x="962.2" y="355.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="965.2" y="366.0"></text>
</g>
<g>
<title>skb_entail (4,472 samples, 0.10%)</title><rect x="963.5" y="387.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="966.5" y="398.0"></text>
</g>
<g>
<title>tcp_chrono_start (1,111 samples, 0.02%)</title><rect x="964.4" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="967.4" y="382.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4,134 samples, 0.09%)</title><rect x="965.0" y="387.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="968.0" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (8,381 samples, 0.18%)</title><rect x="966.0" y="387.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="969.0" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (7,255 samples, 0.16%)</title><rect x="966.3" y="371.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="969.3" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (3,300 samples, 0.07%)</title><rect x="967.3" y="355.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="970.3" y="366.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (1,086 samples, 0.02%)</title><rect x="968.2" y="387.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="971.2" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1,604 samples, 0.03%)</title><rect x="968.7" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="971.7" y="446.0"></text>
</g>
<g>
<title>__fget_light (1,278 samples, 0.03%)</title><rect x="968.8" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="971.8" y="430.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (27,061 samples, 0.59%)</title><rect x="969.6" y="531.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="972.6" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4,351 samples, 0.09%)</title><rect x="973.2" y="515.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="976.2" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4,147 samples, 0.09%)</title><rect x="973.3" y="499.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="976.3" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3,950 samples, 0.09%)</title><rect x="973.3" y="483.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="976.3" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (3,512 samples, 0.08%)</title><rect x="973.4" y="467.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="976.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Object.wait (1,004 samples, 0.02%)</title><rect x="974.4" y="515.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="977.4" y="526.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (7,684 samples, 0.17%)</title><rect x="974.6" y="515.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="977.6" y="526.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (20,773 samples, 0.45%)</title><rect x="976.6" y="531.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.6" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4,247 samples, 0.09%)</title><rect x="980.6" y="515.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="983.6" y="526.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4,081 samples, 0.09%)</title><rect x="980.7" y="499.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="983.7" y="510.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3,923 samples, 0.09%)</title><rect x="980.7" y="483.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="983.7" y="494.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.72] (3,476 samples, 0.08%)</title><rect x="980.7" y="467.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="983.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.getValuesFromFutures (46,186 samples, 1.01%)</title><rect x="982.0" y="595.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,427 samples, 0.03%)</title><rect x="982.9" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,339 samples, 0.03%)</title><rect x="982.9" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="985.9" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,289 samples, 0.03%)</title><rect x="982.9" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="985.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1,273 samples, 0.03%)</title><rect x="982.9" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="985.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1,268 samples, 0.03%)</title><rect x="982.9" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2,205 samples, 0.05%)</title><rect x="983.4" y="579.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3,682 samples, 0.08%)</title><rect x="984.0" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (2,376 samples, 0.05%)</title><rect x="984.3" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="987.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$Header.getHeader (1,913 samples, 0.04%)</title><rect x="984.4" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (4,065 samples, 0.09%)</title><rect x="984.9" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3,785 samples, 0.08%)</title><rect x="985.0" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/AsyncServiceUtility.getFutures (1,688 samples, 0.04%)</title><rect x="985.6" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.getDeadFlagTimeStamp (30,508 samples, 0.66%)</title><rect x="986.0" y="579.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (5,561 samples, 0.12%)</title><rect x="986.0" y="563.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (5,032 samples, 0.11%)</title><rect x="986.2" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2,489 samples, 0.05%)</title><rect x="986.4" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="989.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1,152 samples, 0.03%)</title><rect x="986.8" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="989.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.length (1,580 samples, 0.03%)</title><rect x="987.1" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$Header.getHeader (24,903 samples, 0.54%)</title><rect x="987.5" y="563.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility$Header.getHeader (24,753 samples, 0.54%)</title><rect x="987.5" y="547.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4,150 samples, 0.09%)</title><rect x="989.3" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4,150 samples, 0.09%)</title><rect x="989.3" y="515.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4,150 samples, 0.09%)</title><rect x="989.3" y="499.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.3" y="510.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5,663 samples, 0.12%)</title><rect x="990.3" y="531.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="993.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5,663 samples, 0.12%)</title><rect x="990.3" y="515.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="993.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (4,639 samples, 0.10%)</title><rect x="991.8" y="531.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (4,639 samples, 0.10%)</title><rect x="991.8" y="515.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (1,601 samples, 0.03%)</title><rect x="992.3" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="995.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (2,591 samples, 0.06%)</title><rect x="993.0" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.byteBufferFromString (7,844 samples, 0.17%)</title><rect x="993.9" y="611.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="996.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7,540 samples, 0.16%)</title><rect x="994.0" y="595.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="997.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7,468 samples, 0.16%)</title><rect x="994.0" y="579.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6,870 samples, 0.15%)</title><rect x="994.1" y="563.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6,856 samples, 0.15%)</title><rect x="994.1" y="547.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6,382 samples, 0.14%)</title><rect x="994.3" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2,500 samples, 0.05%)</title><rect x="994.4" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2,470 samples, 0.05%)</title><rect x="994.4" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.4" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2,438 samples, 0.05%)</title><rect x="994.4" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="997.4" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3,182 samples, 0.07%)</title><rect x="995.1" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2,286 samples, 0.05%)</title><rect x="995.1" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.1" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2,286 samples, 0.05%)</title><rect x="995.1" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="998.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/s3ponia/Utility.valueResponseComparator (7,268 samples, 0.16%)</title><rect x="996.2" y="611.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (3,077 samples, 0.07%)</title><rect x="996.9" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="999.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,804 samples, 0.04%)</title><rect x="997.0" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,698 samples, 0.04%)</title><rect x="997.0" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.0" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$215/1612274056.get$Lambda (1,577 samples, 0.03%)</title><rect x="997.1" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.1" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$215/1612274056.&lt;init&gt; (1,447 samples, 0.03%)</title><rect x="997.1" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (3,768 samples, 0.08%)</title><rect x="998.1" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (3,548 samples, 0.08%)</title><rect x="998.1" y="595.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (33,820 samples, 0.74%)</title><rect x="999.0" y="643.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (33,820 samples, 0.74%)</title><rect x="999.0" y="627.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1002.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6,546 samples, 0.14%)</title><rect x="999.0" y="611.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (27,274 samples, 0.59%)</title><rect x="1000.7" y="611.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1003.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (27,274 samples, 0.59%)</title><rect x="1000.7" y="595.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (27,274 samples, 0.59%)</title><rect x="1000.7" y="579.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.7" y="590.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2,823 samples, 0.06%)</title><rect x="1007.0" y="563.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1010.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (69,145 samples, 1.51%)</title><rect x="1007.9" y="675.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1010.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14,179 samples, 0.31%)</title><rect x="1008.5" y="659.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13,199 samples, 0.29%)</title><rect x="1008.7" y="643.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13,199 samples, 0.29%)</title><rect x="1008.7" y="627.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13,199 samples, 0.29%)</title><rect x="1008.7" y="611.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,107 samples, 0.05%)</title><rect x="1011.6" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43,329 samples, 0.94%)</title><rect x="1012.1" y="659.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (42,201 samples, 0.92%)</title><rect x="1012.4" y="643.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9,465 samples, 0.21%)</title><rect x="1023.2" y="659.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1026.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11,483 samples, 0.25%)</title><rect x="1025.7" y="675.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3,766 samples, 0.08%)</title><rect x="1027.7" y="659.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3,766 samples, 0.08%)</title><rect x="1027.7" y="643.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1030.7" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35,867 samples, 0.78%)</title><rect x="1028.6" y="675.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1031.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,947 samples, 0.06%)</title><rect x="1029.7" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28,908 samples, 0.63%)</title><rect x="1030.4" y="659.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.4" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1,099 samples, 0.02%)</title><rect x="1037.2" y="643.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1040.2" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (982 samples, 0.02%)</title><rect x="1037.2" y="627.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1040.2" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2,220 samples, 0.05%)</title><rect x="1037.9" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.9" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,416 samples, 0.03%)</title><rect x="1038.1" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (471,066 samples, 10.26%)</title><rect x="1038.4" y="691.0" width="121.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.4" y="702.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (463,327 samples, 10.09%)</title><rect x="1039.8" y="675.0" width="119.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1042.8" y="686.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (76,625 samples, 1.67%)</title><rect x="1043.1" y="659.0" width="19.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1046.1" y="670.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (8,291 samples, 0.18%)</title><rect x="1045.6" y="643.0" width="2.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1048.6" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3,964 samples, 0.09%)</title><rect x="1047.8" y="643.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.8" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2,961 samples, 0.06%)</title><rect x="1048.8" y="643.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1051.8" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (4,887 samples, 0.11%)</title><rect x="1049.7" y="643.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1052.7" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (43,229 samples, 0.94%)</title><rect x="1051.0" y="643.0" width="11.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1054.0" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3,842 samples, 0.08%)</title><rect x="1052.9" y="627.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1055.9" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2,091 samples, 0.05%)</title><rect x="1054.0" y="627.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1057.0" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.221] (8,816 samples, 0.19%)</title><rect x="1054.6" y="627.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1057.6" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (20,586 samples, 0.45%)</title><rect x="1056.8" y="627.0" width="5.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1059.8" y="638.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (12,474 samples, 0.27%)</title><rect x="1058.9" y="611.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1061.9" y="622.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2,576 samples, 0.06%)</title><rect x="1062.1" y="643.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.1" y="654.0"></text>
</g>
<g>
<title>__libc_recv (363,145 samples, 7.91%)</title><rect x="1062.8" y="659.0" width="93.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1065.8" y="670.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (348,962 samples, 7.60%)</title><rect x="1066.4" y="643.0" width="89.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1069.4" y="654.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (348,962 samples, 7.60%)</title><rect x="1066.4" y="627.0" width="89.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1069.4" y="638.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_recvfrom (338,660 samples, 7.38%)</title><rect x="1069.1" y="611.0" width="87.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1072.1" y="622.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_recvfrom (336,915 samples, 7.34%)</title><rect x="1069.5" y="595.0" width="86.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1072.5" y="606.0">__sys_recv..</text>
</g>
<g>
<title>fput_many (1,828 samples, 0.04%)</title><rect x="1070.8" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1073.8" y="590.0"></text>
</g>
<g>
<title>import_single_range (1,830 samples, 0.04%)</title><rect x="1071.2" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1074.2" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (296,893 samples, 6.47%)</title><rect x="1071.7" y="579.0" width="76.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.7" y="590.0">inet6_re..</text>
</g>
<g>
<title>tcp_recvmsg (288,824 samples, 6.29%)</title><rect x="1073.8" y="563.0" width="74.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1076.8" y="574.0">tcp_recv..</text>
</g>
<g>
<title>__kfree_skb (27,461 samples, 0.60%)</title><rect x="1087.1" y="547.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1090.1" y="558.0"></text>
</g>
<g>
<title>skb_release_all (23,799 samples, 0.52%)</title><rect x="1087.2" y="531.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1090.2" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (23,519 samples, 0.51%)</title><rect x="1087.3" y="515.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1090.3" y="526.0"></text>
</g>
<g>
<title>dst_release (17,456 samples, 0.38%)</title><rect x="1087.5" y="499.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1090.5" y="510.0"></text>
</g>
<g>
<title>sock_rfree (5,267 samples, 0.11%)</title><rect x="1092.0" y="499.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.0" y="510.0"></text>
</g>
<g>
<title>skb_release_data (3,264 samples, 0.07%)</title><rect x="1093.3" y="531.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1096.3" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2,123 samples, 0.05%)</title><rect x="1094.1" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1097.1" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1,291 samples, 0.03%)</title><rect x="1094.7" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1097.7" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1,198 samples, 0.03%)</title><rect x="1094.7" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1097.7" y="542.0"></text>
</g>
<g>
<title>ip_output (1,132 samples, 0.02%)</title><rect x="1094.7" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1097.7" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (1,068 samples, 0.02%)</title><rect x="1094.8" y="499.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1097.8" y="510.0"></text>
</g>
<g>
<title>kfree_skbmem (2,210 samples, 0.05%)</title><rect x="1095.1" y="547.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1098.1" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (39,424 samples, 0.86%)</title><rect x="1095.7" y="547.0" width="10.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1098.7" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1,369 samples, 0.03%)</title><rect x="1095.9" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1098.9" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (37,134 samples, 0.81%)</title><rect x="1096.2" y="531.0" width="9.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1099.2" y="542.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (35,100 samples, 0.76%)</title><rect x="1096.8" y="515.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1099.8" y="526.0"></text>
</g>
<g>
<title>release_sock (6,302 samples, 0.14%)</title><rect x="1105.8" y="547.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1108.8" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1,252 samples, 0.03%)</title><rect x="1106.2" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1109.2" y="542.0"></text>
</g>
<g>
<title>tcp_release_cb (3,341 samples, 0.07%)</title><rect x="1106.6" y="531.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.6" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (116,339 samples, 2.53%)</title><rect x="1107.4" y="547.0" width="29.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1110.4" y="558.0">sk..</text>
</g>
<g>
<title>__skb_datagram_iter (113,529 samples, 2.47%)</title><rect x="1108.1" y="531.0" width="29.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1111.1" y="542.0">__..</text>
</g>
<g>
<title>_copy_to_iter (41,532 samples, 0.90%)</title><rect x="1118.0" y="515.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1121.0" y="526.0"></text>
</g>
<g>
<title>copyout (37,827 samples, 0.82%)</title><rect x="1119.0" y="499.0" width="9.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.0" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_string (37,226 samples, 0.81%)</title><rect x="1119.1" y="483.0" width="9.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1122.1" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (33,475 samples, 0.73%)</title><rect x="1128.7" y="515.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1131.7" y="526.0"></text>
</g>
<g>
<title>__check_object_size (32,354 samples, 0.70%)</title><rect x="1129.0" y="499.0" width="8.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.0" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (9,889 samples, 0.22%)</title><rect x="1134.5" y="483.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1137.5" y="494.0"></text>
</g>
<g>
<title>check_stack_object (1,219 samples, 0.03%)</title><rect x="1137.0" y="483.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1140.0" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (17,102 samples, 0.37%)</title><rect x="1137.3" y="547.0" width="4.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1140.3" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (1,621 samples, 0.04%)</title><rect x="1141.3" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.3" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (24,563 samples, 0.54%)</title><rect x="1141.7" y="547.0" width="6.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1144.7" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (15,162 samples, 0.33%)</title><rect x="1144.1" y="531.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1147.1" y="542.0"></text>
</g>
<g>
<title>ktime_get (13,613 samples, 0.30%)</title><rect x="1144.5" y="515.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1147.5" y="526.0"></text>
</g>
<g>
<title>read_tsc (9,946 samples, 0.22%)</title><rect x="1145.5" y="499.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.5" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (14,159 samples, 0.31%)</title><rect x="1148.0" y="579.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1151.0" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13,276 samples, 0.29%)</title><rect x="1148.3" y="563.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1151.3" y="574.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1,782 samples, 0.04%)</title><rect x="1148.7" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1151.7" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (9,723 samples, 0.21%)</title><rect x="1149.2" y="547.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.2" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17,329 samples, 0.38%)</title><rect x="1151.7" y="579.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.7" y="590.0"></text>
</g>
<g>
<title>__fget_light (15,561 samples, 0.34%)</title><rect x="1152.1" y="563.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1155.1" y="574.0"></text>
</g>
<g>
<title>__fget (10,994 samples, 0.24%)</title><rect x="1153.3" y="547.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1156.3" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1,993 samples, 0.04%)</title><rect x="1156.2" y="659.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1159.2" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2,051 samples, 0.04%)</title><rect x="1156.7" y="659.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1159.7" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6,719 samples, 0.15%)</title><rect x="1157.2" y="659.0" width="1.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1160.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2,258 samples, 0.05%)</title><rect x="1159.0" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1162.0" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4,650 samples, 0.10%)</title><rect x="1159.6" y="723.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.6" y="734.0"></text>
</g>
<g>
<title>gettimeofday (3,706 samples, 0.08%)</title><rect x="1159.9" y="707.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1162.9" y="718.0"></text>
</g>
<g>
<title>[vdso] (3,150 samples, 0.07%)</title><rect x="1160.0" y="691.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1163.0" y="702.0"></text>
</g>
<g>
<title>start_thread (112,990 samples, 2.46%)</title><rect x="1161.0" y="739.0" width="29.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1164.0" y="750.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (112,990 samples, 2.46%)</title><rect x="1161.0" y="723.0" width="29.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1164.0" y="734.0">th..</text>
</g>
<g>
<title>Thread::call_run() (112,990 samples, 2.46%)</title><rect x="1161.0" y="707.0" width="29.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.0" y="718.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (52,003 samples, 1.13%)</title><rect x="1161.1" y="691.0" width="13.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.1" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (47,594 samples, 1.04%)</title><rect x="1161.3" y="675.0" width="12.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.3" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (35,859 samples, 0.78%)</title><rect x="1161.3" y="659.0" width="9.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.3" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1,737 samples, 0.04%)</title><rect x="1161.4" y="643.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.4" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1,114 samples, 0.02%)</title><rect x="1161.6" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.6" y="638.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (2,357 samples, 0.05%)</title><rect x="1161.9" y="643.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.9" y="654.0"></text>
</g>
<g>
<title>SpinPause (31,111 samples, 0.68%)</title><rect x="1162.5" y="643.0" width="8.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1165.5" y="654.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3,865 samples, 0.08%)</title><rect x="1170.5" y="659.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.5" y="670.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3,855 samples, 0.08%)</title><rect x="1170.5" y="643.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.5" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3,800 samples, 0.08%)</title><rect x="1170.5" y="627.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.5" y="638.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3,775 samples, 0.08%)</title><rect x="1170.5" y="611.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.5" y="622.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3,589 samples, 0.08%)</title><rect x="1170.5" y="595.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.5" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1,814 samples, 0.04%)</title><rect x="1170.6" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.6" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1,299 samples, 0.03%)</title><rect x="1170.7" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.7" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (1,695 samples, 0.04%)</title><rect x="1171.0" y="579.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.0" y="590.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1,392 samples, 0.03%)</title><rect x="1171.0" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.0" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1,562 samples, 0.03%)</title><rect x="1171.5" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.5" y="670.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1,541 samples, 0.03%)</title><rect x="1171.5" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.5" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1,502 samples, 0.03%)</title><rect x="1171.5" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.5" y="638.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6,096 samples, 0.13%)</title><rect x="1171.9" y="659.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.9" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4,811 samples, 0.10%)</title><rect x="1172.1" y="643.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.1" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3,866 samples, 0.08%)</title><rect x="1172.3" y="627.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.3" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3,517 samples, 0.08%)</title><rect x="1172.4" y="611.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.4" y="622.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3,036 samples, 0.07%)</title><rect x="1173.6" y="675.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.6" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2,931 samples, 0.06%)</title><rect x="1173.7" y="659.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.7" y="670.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (1,969 samples, 0.04%)</title><rect x="1173.8" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.8" y="654.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1,591 samples, 0.03%)</title><rect x="1173.9" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.9" y="638.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (56,365 samples, 1.23%)</title><rect x="1174.4" y="691.0" width="14.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.4" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (53,944 samples, 1.18%)</title><rect x="1174.4" y="675.0" width="13.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.4" y="686.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (53,722 samples, 1.17%)</title><rect x="1174.5" y="659.0" width="13.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.5" y="670.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (45,725 samples, 1.00%)</title><rect x="1174.5" y="643.0" width="11.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.5" y="654.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (45,709 samples, 1.00%)</title><rect x="1174.5" y="627.0" width="11.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.5" y="638.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (28,520 samples, 0.62%)</title><rect x="1174.5" y="611.0" width="7.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.5" y="622.0"></text>
</g>
<g>
<title>Matcher::match() (2,322 samples, 0.05%)</title><rect x="1174.9" y="595.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.9" y="606.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1,887 samples, 0.04%)</title><rect x="1175.0" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.0" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2,675 samples, 0.06%)</title><rect x="1175.5" y="595.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.5" y="606.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2,593 samples, 0.06%)</title><rect x="1175.5" y="579.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.5" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (21,913 samples, 0.48%)</title><rect x="1176.2" y="595.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.2" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1,294 samples, 0.03%)</title><rect x="1176.6" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.6" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1,120 samples, 0.02%)</title><rect x="1177.0" y="579.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.0" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1,955 samples, 0.04%)</title><rect x="1177.2" y="579.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.2" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5,014 samples, 0.11%)</title><rect x="1177.7" y="579.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.7" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2,091 samples, 0.05%)</title><rect x="1178.2" y="563.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.2" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1,910 samples, 0.04%)</title><rect x="1179.2" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.2" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2,571 samples, 0.06%)</title><rect x="1179.9" y="579.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.9" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1,481 samples, 0.03%)</title><rect x="1180.2" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.2" y="574.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2,195 samples, 0.05%)</title><rect x="1181.2" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.2" y="590.0"></text>
</g>
<g>
<title>Compile::Optimize() (11,241 samples, 0.24%)</title><rect x="1181.9" y="611.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.9" y="622.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3,373 samples, 0.07%)</title><rect x="1181.9" y="595.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.9" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3,342 samples, 0.07%)</title><rect x="1181.9" y="579.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.9" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3,181 samples, 0.07%)</title><rect x="1183.1" y="595.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.1" y="606.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2,537 samples, 0.06%)</title><rect x="1183.9" y="595.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.9" y="606.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2,390 samples, 0.05%)</title><rect x="1184.0" y="579.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.0" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5,060 samples, 0.11%)</title><rect x="1184.9" y="611.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.9" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5,059 samples, 0.11%)</title><rect x="1184.9" y="595.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5,003 samples, 0.11%)</title><rect x="1184.9" y="579.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4,991 samples, 0.11%)</title><rect x="1184.9" y="563.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4,956 samples, 0.11%)</title><rect x="1184.9" y="547.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (4,760 samples, 0.10%)</title><rect x="1184.9" y="531.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.9" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3,791 samples, 0.08%)</title><rect x="1184.9" y="515.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.9" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3,790 samples, 0.08%)</title><rect x="1184.9" y="499.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3,715 samples, 0.08%)</title><rect x="1184.9" y="483.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3,706 samples, 0.08%)</title><rect x="1184.9" y="467.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3,685 samples, 0.08%)</title><rect x="1184.9" y="451.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (3,351 samples, 0.07%)</title><rect x="1185.0" y="435.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.0" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2,880 samples, 0.06%)</title><rect x="1185.0" y="419.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.0" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2,880 samples, 0.06%)</title><rect x="1185.0" y="403.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2,805 samples, 0.06%)</title><rect x="1185.0" y="387.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2,790 samples, 0.06%)</title><rect x="1185.0" y="371.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.0" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2,769 samples, 0.06%)</title><rect x="1185.1" y="355.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2,537 samples, 0.06%)</title><rect x="1185.1" y="339.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.1" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2,181 samples, 0.05%)</title><rect x="1185.1" y="323.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.1" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2,180 samples, 0.05%)</title><rect x="1185.1" y="307.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2,104 samples, 0.05%)</title><rect x="1185.1" y="291.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2,086 samples, 0.05%)</title><rect x="1185.1" y="275.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.1" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2,057 samples, 0.04%)</title><rect x="1185.2" y="259.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.2" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1,748 samples, 0.04%)</title><rect x="1185.2" y="243.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.2" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1,548 samples, 0.03%)</title><rect x="1185.2" y="227.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.2" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1,542 samples, 0.03%)</title><rect x="1185.2" y="211.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.2" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1,459 samples, 0.03%)</title><rect x="1185.2" y="195.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.2" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1,440 samples, 0.03%)</title><rect x="1185.2" y="179.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.2" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1,419 samples, 0.03%)</title><rect x="1185.2" y="163.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.2" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (1,148 samples, 0.03%)</title><rect x="1185.3" y="147.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.3" y="158.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (973 samples, 0.02%)</title><rect x="1185.3" y="131.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.3" y="142.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (7,645 samples, 0.17%)</title><rect x="1186.2" y="643.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="654.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (7,642 samples, 0.17%)</title><rect x="1186.2" y="627.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.2" y="638.0"></text>
</g>
<g>
<title>Compilation::compile_method() (7,620 samples, 0.17%)</title><rect x="1186.2" y="611.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="622.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (7,177 samples, 0.16%)</title><rect x="1186.2" y="595.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="606.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (3,331 samples, 0.07%)</title><rect x="1186.2" y="579.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="590.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2,613 samples, 0.06%)</title><rect x="1186.3" y="563.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.3" y="574.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2,611 samples, 0.06%)</title><rect x="1186.3" y="547.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2,594 samples, 0.06%)</title><rect x="1186.3" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.3" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2,312 samples, 0.05%)</title><rect x="1186.4" y="515.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2,255 samples, 0.05%)</title><rect x="1186.4" y="499.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.4" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1,824 samples, 0.04%)</title><rect x="1186.5" y="483.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.5" y="494.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1,408 samples, 0.03%)</title><rect x="1186.5" y="467.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.5" y="478.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1,376 samples, 0.03%)</title><rect x="1186.5" y="451.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="462.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1,148 samples, 0.03%)</title><rect x="1186.5" y="435.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="446.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1,135 samples, 0.02%)</title><rect x="1186.5" y="419.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="430.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1,000 samples, 0.02%)</title><rect x="1187.1" y="579.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="590.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (2,730 samples, 0.06%)</title><rect x="1187.4" y="579.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.4" y="590.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1,893 samples, 0.04%)</title><rect x="1187.6" y="563.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.6" y="574.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1,902 samples, 0.04%)</title><rect x="1188.4" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="686.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1,855 samples, 0.04%)</title><rect x="1188.4" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.4" y="670.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1,837 samples, 0.04%)</title><rect x="1188.4" y="643.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.4" y="654.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1,308 samples, 0.03%)</title><rect x="1188.6" y="627.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1191.6" y="638.0"></text>
</g>
<g>
<title>VMThread::run() (3,681 samples, 0.08%)</title><rect x="1188.9" y="691.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="702.0"></text>
</g>
<g>
<title>VMThread::loop() (3,665 samples, 0.08%)</title><rect x="1189.0" y="675.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.0" y="686.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1,009 samples, 0.02%)</title><rect x="1189.0" y="659.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.0" y="670.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.65] (2,399 samples, 0.05%)</title><rect x="1189.2" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.2" y="670.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2,380 samples, 0.05%)</title><rect x="1189.3" y="643.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.3" y="654.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1,472 samples, 0.03%)</title><rect x="1189.3" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.3" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1,399 samples, 0.03%)</title><rect x="1189.3" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.3" y="622.0"></text>
</g>
</g>
</svg>
