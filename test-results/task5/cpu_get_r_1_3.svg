<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="821"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="821"> </text>
<g id="frames">
<g>
<title>all (9,399 samples, 100.00%)</title><rect x="10.0" y="787.0" width="1180.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="798.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (330 samples, 3.51%)</title><rect x="10.0" y="771.0" width="41.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="782.0">Sha..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.02%)</title><rect x="10.0" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.03%)</title><rect x="10.3" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.3" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (316 samples, 3.36%)</title><rect x="10.6" y="755.0" width="39.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.6" y="766.0">Obj..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.05%)</title><rect x="15.1" y="739.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.1" y="750.0"></text>
</g>
<g>
<title>Monitor::unlock() (4 samples, 0.04%)</title><rect x="15.8" y="739.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.8" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (266 samples, 2.83%)</title><rect x="16.3" y="739.0" width="33.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.3" y="750.0">Ob..</text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (158 samples, 1.68%)</title><rect x="24.2" y="723.0" width="19.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.2" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (5 samples, 0.05%)</title><rect x="43.3" y="707.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="46.3" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::UnlinkAfterAcquire(Thread*, ObjectWaiter*) (4 samples, 0.04%)</title><rect x="44.0" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="47.0" y="734.0"></text>
</g>
<g>
<title>SpinPause (35 samples, 0.37%)</title><rect x="44.5" y="723.0" width="4.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="47.5" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.03%)</title><rect x="49.2" y="723.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="52.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="49.2" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="49.2" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="52.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="49.3" y="675.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="52.3" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.03%)</title><rect x="49.7" y="739.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="52.7" y="750.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.02%)</title><rect x="50.0" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="53.0" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (8 samples, 0.09%)</title><rect x="50.3" y="755.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="53.3" y="766.0"></text>
</g>
<g>
<title>[no_Java_frame] (26 samples, 0.28%)</title><rect x="51.4" y="771.0" width="3.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="54.4" y="782.0"></text>
</g>
<g>
<title>[not_walkable_Java] (16 samples, 0.17%)</title><rect x="54.7" y="771.0" width="2.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="57.7" y="782.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.02%)</title><rect x="54.7" y="755.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="57.7" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="54.9" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="57.9" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.12%)</title><rect x="55.3" y="755.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="58.3" y="766.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (2 samples, 0.02%)</title><rect x="55.4" y="739.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="58.4" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (8 samples, 0.09%)</title><rect x="55.7" y="739.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="58.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.69%)</title><rect x="56.7" y="771.0" width="8.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="59.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (21 samples, 0.22%)</title><rect x="56.8" y="755.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="59.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.19%)</title><rect x="57.2" y="739.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="60.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.19%)</title><rect x="57.2" y="723.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.17%)</title><rect x="57.5" y="707.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.5" y="718.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.13%)</title><rect x="57.6" y="691.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="60.6" y="702.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.12%)</title><rect x="57.7" y="675.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="60.7" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.05%)</title><rect x="57.8" y="659.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="60.8" y="670.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.04%)</title><rect x="57.8" y="643.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="60.8" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.04%)</title><rect x="57.8" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.8" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.04%)</title><rect x="58.5" y="659.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="61.5" y="670.0"></text>
</g>
<g>
<title>get_timespec64 (3 samples, 0.03%)</title><rect x="59.1" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="62.1" y="702.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.03%)</title><rect x="59.1" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="62.1" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="59.2" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="62.2" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (38 samples, 0.40%)</title><rect x="59.5" y="755.0" width="4.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="62.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.39%)</title><rect x="59.6" y="739.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="62.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.39%)</title><rect x="59.6" y="723.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="62.6" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.34%)</title><rect x="60.2" y="707.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.2" y="718.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.33%)</title><rect x="60.3" y="691.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="63.3" y="702.0"></text>
</g>
<g>
<title>futex_wait (31 samples, 0.33%)</title><rect x="60.3" y="675.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.3" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.12%)</title><rect x="61.1" y="659.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="64.1" y="670.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.07%)</title><rect x="61.6" y="643.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="64.6" y="654.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.06%)</title><rect x="61.7" y="627.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="64.7" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (14 samples, 0.15%)</title><rect x="62.5" y="659.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="65.5" y="670.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.02%)</title><rect x="63.9" y="643.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="66.9" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.02%)</title><rect x="64.2" y="755.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="67.2" y="766.0"></text>
</g>
<g>
<title>[unknown_Java] (191 samples, 2.03%)</title><rect x="64.9" y="771.0" width="23.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="67.9" y="782.0">[..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.07%)</title><rect x="65.1" y="755.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="68.1" y="766.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (6 samples, 0.06%)</title><rect x="65.1" y="739.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="68.1" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (182 samples, 1.94%)</title><rect x="66.0" y="755.0" width="22.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="69.0" y="766.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (174 samples, 1.85%)</title><rect x="67.0" y="739.0" width="21.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="70.0" y="750.0">e..</text>
</g>
<g>
<title>do_syscall_64 (174 samples, 1.85%)</title><rect x="67.0" y="723.0" width="21.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="70.0" y="734.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (169 samples, 1.80%)</title><rect x="67.6" y="707.0" width="21.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.6" y="718.0">_..</text>
</g>
<g>
<title>do_futex (167 samples, 1.78%)</title><rect x="67.9" y="691.0" width="20.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.9" y="702.0"></text>
</g>
<g>
<title>futex_wake (166 samples, 1.77%)</title><rect x="68.0" y="675.0" width="20.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="71.0" y="686.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="70.1" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="73.1" y="670.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="70.4" y="659.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="73.4" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (18 samples, 0.19%)</title><rect x="70.6" y="659.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.6" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.04%)</title><rect x="72.4" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="75.4" y="654.0"></text>
</g>
<g>
<title>plist_del (2 samples, 0.02%)</title><rect x="72.6" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="75.6" y="638.0"></text>
</g>
<g>
<title>wake_q_add_safe (12 samples, 0.13%)</title><rect x="72.9" y="659.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="75.9" y="670.0"></text>
</g>
<g>
<title>wake_up_q (115 samples, 1.22%)</title><rect x="74.4" y="659.0" width="14.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="77.4" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (115 samples, 1.22%)</title><rect x="74.4" y="643.0" width="14.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="77.4" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (113 samples, 1.20%)</title><rect x="74.7" y="627.0" width="14.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.7" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.02%)</title><rect x="88.8" y="771.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="91.8" y="782.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.02%)</title><rect x="88.8" y="755.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="91.8" y="766.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="88.8" y="739.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="91.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7,502 samples, 79.82%)</title><rect x="89.1" y="771.0" width="941.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.1" y="782.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,502 samples, 79.82%)</title><rect x="89.1" y="755.0" width="941.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.1" y="766.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,502 samples, 79.82%)</title><rect x="89.1" y="739.0" width="941.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.1" y="750.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7,440 samples, 79.16%)</title><rect x="89.1" y="723.0" width="934.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.1" y="734.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (273 samples, 2.90%)</title><rect x="89.2" y="707.0" width="34.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.2" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (272 samples, 2.89%)</title><rect x="89.3" y="691.0" width="34.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.3" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (272 samples, 2.89%)</title><rect x="89.3" y="675.0" width="34.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.3" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.03%)</title><rect x="89.3" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.03%)</title><rect x="89.3" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$103/1892060115.accept (269 samples, 2.86%)</title><rect x="89.7" y="659.0" width="33.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.7" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (269 samples, 2.86%)</title><rect x="89.7" y="643.0" width="33.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.7" y="654.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (269 samples, 2.86%)</title><rect x="89.7" y="627.0" width="33.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.7" y="638.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (269 samples, 2.86%)</title><rect x="89.7" y="611.0" width="33.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.7" y="622.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.06%)</title><rect x="90.9" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.06%)</title><rect x="90.9" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.06%)</title><rect x="90.9" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.9" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.04%)</title><rect x="91.1" y="547.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="94.1" y="558.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.04%)</title><rect x="91.1" y="531.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="94.1" y="542.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.04%)</title><rect x="91.1" y="515.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="94.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (249 samples, 2.65%)</title><rect x="91.6" y="595.0" width="31.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.6" y="606.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.16%)</title><rect x="91.6" y="579.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.06%)</title><rect x="92.7" y="563.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.06%)</title><rect x="92.7" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.06%)</title><rect x="92.7" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.7" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="93.2" y="515.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="96.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (234 samples, 2.49%)</title><rect x="93.5" y="579.0" width="29.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.5" y="590.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (234 samples, 2.49%)</title><rect x="93.5" y="563.0" width="29.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.5" y="574.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (233 samples, 2.48%)</title><rect x="93.6" y="547.0" width="29.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.6" y="558.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (232 samples, 2.47%)</title><rect x="93.7" y="531.0" width="29.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.7" y="542.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (18 samples, 0.19%)</title><rect x="94.0" y="515.0" width="2.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="97.0" y="526.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (2 samples, 0.02%)</title><rect x="94.6" y="499.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="97.6" y="510.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (2 samples, 0.02%)</title><rect x="95.0" y="499.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="98.0" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="95.4" y="499.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="98.4" y="510.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (4 samples, 0.04%)</title><rect x="95.7" y="499.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="98.7" y="510.0"></text>
</g>
<g>
<title>__libc_send (212 samples, 2.26%)</title><rect x="96.2" y="515.0" width="26.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="99.2" y="526.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (210 samples, 2.23%)</title><rect x="96.5" y="499.0" width="26.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.5" y="510.0">e..</text>
</g>
<g>
<title>do_syscall_64 (210 samples, 2.23%)</title><rect x="96.5" y="483.0" width="26.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="99.5" y="494.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (207 samples, 2.20%)</title><rect x="96.8" y="467.0" width="25.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="99.8" y="478.0">_..</text>
</g>
<g>
<title>__sys_sendto (207 samples, 2.20%)</title><rect x="96.8" y="451.0" width="25.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.8" y="462.0">_..</text>
</g>
<g>
<title>sock_sendmsg (207 samples, 2.20%)</title><rect x="96.8" y="435.0" width="25.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="99.8" y="446.0">s..</text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.02%)</title><rect x="96.9" y="419.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="99.9" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (204 samples, 2.17%)</title><rect x="97.1" y="419.0" width="25.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="100.1" y="430.0">t..</text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="97.4" y="403.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="100.4" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (200 samples, 2.13%)</title><rect x="97.6" y="403.0" width="25.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.6" y="414.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (170 samples, 1.81%)</title><rect x="98.1" y="387.0" width="21.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.1" y="398.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (168 samples, 1.79%)</title><rect x="98.4" y="371.0" width="21.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="101.4" y="382.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (156 samples, 1.66%)</title><rect x="98.8" y="355.0" width="19.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="101.8" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (150 samples, 1.60%)</title><rect x="99.0" y="339.0" width="18.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.0" y="350.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="99.0" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.0" y="334.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.02%)</title><rect x="99.3" y="323.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="102.3" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.02%)</title><rect x="99.3" y="307.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="102.3" y="318.0"></text>
</g>
<g>
<title>ip_output (146 samples, 1.55%)</title><rect x="99.5" y="323.0" width="18.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="102.5" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (137 samples, 1.46%)</title><rect x="99.8" y="307.0" width="17.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="102.8" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.07%)</title><rect x="100.1" y="291.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="103.1" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.04%)</title><rect x="100.3" y="275.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="103.3" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.03%)</title><rect x="100.4" y="259.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="103.4" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (127 samples, 1.35%)</title><rect x="101.0" y="291.0" width="16.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="104.0" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (127 samples, 1.35%)</title><rect x="101.0" y="275.0" width="16.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="104.0" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (126 samples, 1.34%)</title><rect x="101.1" y="259.0" width="15.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="104.1" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (126 samples, 1.34%)</title><rect x="101.1" y="243.0" width="15.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="104.1" y="254.0"></text>
</g>
<g>
<title>net_rx_action (119 samples, 1.27%)</title><rect x="102.0" y="227.0" width="15.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="105.0" y="238.0"></text>
</g>
<g>
<title>process_backlog (118 samples, 1.26%)</title><rect x="102.2" y="211.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="105.2" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (116 samples, 1.23%)</title><rect x="102.4" y="195.0" width="14.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="105.4" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.03%)</title><rect x="102.4" y="179.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="105.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv (113 samples, 1.20%)</title><rect x="102.8" y="179.0" width="14.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (112 samples, 1.19%)</title><rect x="102.8" y="163.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.8" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (110 samples, 1.17%)</title><rect x="103.0" y="147.0" width="13.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="106.0" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (110 samples, 1.17%)</title><rect x="103.0" y="131.0" width="13.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="106.0" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.02%)</title><rect x="103.0" y="115.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.0" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (108 samples, 1.15%)</title><rect x="103.3" y="115.0" width="13.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="106.3" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.06%)</title><rect x="103.9" y="99.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.9" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (6 samples, 0.06%)</title><rect x="103.9" y="83.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="106.9" y="94.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (5 samples, 0.05%)</title><rect x="104.0" y="67.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="107.0" y="78.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.02%)</title><rect x="104.4" y="51.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="107.4" y="62.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (96 samples, 1.02%)</title><rect x="104.8" y="99.0" width="12.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="107.8" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (94 samples, 1.00%)</title><rect x="105.0" y="83.0" width="11.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="108.0" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="105.7" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="108.7" y="78.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="105.7" y="51.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="108.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="105.7" y="35.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="108.7" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (52 samples, 0.55%)</title><rect x="106.0" y="67.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="109.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (52 samples, 0.55%)</title><rect x="106.0" y="51.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.0" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (52 samples, 0.55%)</title><rect x="106.0" y="35.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="109.0" y="46.0"></text>
</g>
<g>
<title>tcp_ack (28 samples, 0.30%)</title><rect x="112.6" y="67.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="115.6" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.12%)</title><rect x="113.6" y="51.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="116.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.03%)</title><rect x="113.6" y="35.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.06%)</title><rect x="114.2" y="35.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="117.2" y="46.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="115.1" y="51.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="118.1" y="62.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.02%)</title><rect x="116.2" y="67.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.2" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.07%)</title><rect x="117.0" y="307.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="120.0" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (6 samples, 0.06%)</title><rect x="117.1" y="291.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="120.1" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (3 samples, 0.03%)</title><rect x="117.5" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.5" y="286.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.02%)</title><rect x="117.5" y="259.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="120.5" y="270.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.02%)</title><rect x="117.8" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="120.8" y="350.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.05%)</title><rect x="118.3" y="355.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="121.3" y="366.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="118.7" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.7" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.02%)</title><rect x="119.0" y="355.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="122.0" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.03%)</title><rect x="119.5" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.5" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.02%)</title><rect x="119.9" y="387.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.9" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.02%)</title><rect x="119.9" y="371.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="122.9" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.10%)</title><rect x="120.1" y="387.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="123.1" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.10%)</title><rect x="120.1" y="371.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.1" y="382.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.02%)</title><rect x="120.6" y="355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="123.6" y="366.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.02%)</title><rect x="120.6" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="123.6" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="121.0" y="355.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="124.0" y="366.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.03%)</title><rect x="121.4" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="124.4" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.09%)</title><rect x="121.7" y="387.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="124.7" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.07%)</title><rect x="121.9" y="371.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="124.9" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="122.5" y="355.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="125.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.05%)</title><rect x="122.9" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="123.1" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="123.1" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$214/27342804.get (8 samples, 0.09%)</title><rect x="123.5" y="707.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$putAsync$4 (8 samples, 0.09%)</title><rect x="123.5" y="691.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$97/1991432636.get (7,158 samples, 76.16%)</title><rect x="124.5" y="707.0" width="898.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.5" y="718.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda$97/1991432636.get</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$getAsync$6 (7,158 samples, 76.16%)</title><rect x="124.5" y="691.0" width="898.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.5" y="702.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$getAsync$6</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/DaoService.get (7,155 samples, 76.13%)</title><rect x="124.9" y="675.0" width="898.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.9" y="686.0">ru/mail/polis/service/s3ponia/DaoService.get</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (7,153 samples, 76.10%)</title><rect x="124.9" y="659.0" width="898.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.9" y="670.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (248 samples, 2.64%)</title><rect x="125.1" y="643.0" width="31.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.1" y="654.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (243 samples, 2.59%)</title><rect x="125.3" y="627.0" width="30.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.3" y="638.0">co..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (11 samples, 0.12%)</title><rect x="125.3" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.3" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (11 samples, 0.12%)</title><rect x="125.3" y="595.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.3" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (11 samples, 0.12%)</title><rect x="125.3" y="579.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.12%)</title><rect x="125.3" y="563.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.11%)</title><rect x="125.4" y="547.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$150/693662188.compare (10 samples, 0.11%)</title><rect x="125.4" y="531.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (9 samples, 0.10%)</title><rect x="125.5" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.5" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (8 samples, 0.09%)</title><rect x="125.5" y="499.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.5" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.07%)</title><rect x="125.6" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.6" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (7 samples, 0.07%)</title><rect x="125.6" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.06%)</title><rect x="125.8" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell$$Lambda$272/1492739350.apply (2 samples, 0.02%)</title><rect x="126.0" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (2 samples, 0.02%)</title><rect x="126.0" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="126.0" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="126.0" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="126.0" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.compareTo (2 samples, 0.02%)</title><rect x="126.3" y="435.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.compareTo (2 samples, 0.02%)</title><rect x="126.3" y="419.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.3" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (232 samples, 2.47%)</title><rect x="126.6" y="611.0" width="29.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.6" y="622.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (232 samples, 2.47%)</title><rect x="126.6" y="595.0" width="29.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.6" y="606.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (232 samples, 2.47%)</title><rect x="126.6" y="579.0" width="29.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.6" y="590.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (232 samples, 2.47%)</title><rect x="126.6" y="563.0" width="29.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.6" y="574.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (232 samples, 2.47%)</title><rect x="126.6" y="547.0" width="29.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.6" y="558.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (232 samples, 2.47%)</title><rect x="126.6" y="531.0" width="29.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.6" y="542.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (229 samples, 2.44%)</title><rect x="126.8" y="515.0" width="28.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.8" y="526.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (229 samples, 2.44%)</title><rect x="126.8" y="499.0" width="28.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.8" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (229 samples, 2.44%)</title><rect x="126.8" y="483.0" width="28.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.8" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (229 samples, 2.44%)</title><rect x="126.8" y="467.0" width="28.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.8" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (229 samples, 2.44%)</title><rect x="126.8" y="451.0" width="28.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.8" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (229 samples, 2.44%)</title><rect x="126.8" y="435.0" width="28.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.8" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (97 samples, 1.03%)</title><rect x="127.0" y="419.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (97 samples, 1.03%)</title><rect x="127.0" y="403.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (97 samples, 1.03%)</title><rect x="127.0" y="387.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.05%)</title><rect x="127.0" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.0" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.05%)</title><rect x="127.0" y="355.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.0" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.05%)</title><rect x="127.0" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.0" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.03%)</title><rect x="127.3" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.3" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.03%)</title><rect x="127.3" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (54 samples, 0.57%)</title><rect x="127.6" y="371.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.04%)</title><rect x="128.0" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.04%)</title><rect x="128.0" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.04%)</title><rect x="128.0" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (43 samples, 0.46%)</title><rect x="128.5" y="355.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (43 samples, 0.46%)</title><rect x="128.5" y="339.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (43 samples, 0.46%)</title><rect x="128.5" y="323.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.5" y="334.0"></text>
</g>
<g>
<title>__pread64 (40 samples, 0.43%)</title><rect x="128.9" y="307.0" width="5.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="131.9" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.36%)</title><rect x="129.6" y="291.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="132.6" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.36%)</title><rect x="129.6" y="275.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="132.6" y="286.0"></text>
</g>
<g>
<title>ksys_pread64 (27 samples, 0.29%)</title><rect x="130.5" y="259.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="133.5" y="270.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="130.6" y="243.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="133.6" y="254.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="130.6" y="227.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="133.6" y="238.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.23%)</title><rect x="131.2" y="243.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="134.2" y="254.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="131.4" y="227.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.4" y="238.0"></text>
</g>
<g>
<title>new_sync_read (15 samples, 0.16%)</title><rect x="131.7" y="227.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="134.7" y="238.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (3 samples, 0.03%)</title><rect x="131.7" y="211.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="134.7" y="222.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.13%)</title><rect x="132.0" y="211.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="135.0" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.02%)</title><rect x="132.7" y="195.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="135.7" y="206.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="132.7" y="179.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="135.7" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="132.7" y="163.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.7" y="174.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.03%)</title><rect x="132.9" y="195.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="135.9" y="206.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="133.0" y="179.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="136.0" y="190.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="133.3" y="195.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.3" y="206.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="133.5" y="227.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="136.5" y="238.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.02%)</title><rect x="133.7" y="211.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="136.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="133.9" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.9" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="133.9" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="133.9" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.03%)</title><rect x="133.9" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (23 samples, 0.24%)</title><rect x="134.4" y="371.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.4" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="135.9" y="355.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="138.9" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.04%)</title><rect x="135.9" y="339.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="138.9" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.03%)</title><rect x="135.9" y="323.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="138.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.06%)</title><rect x="136.5" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.5" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.04%)</title><rect x="136.7" y="339.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="139.7" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (4 samples, 0.04%)</title><rect x="136.7" y="323.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="139.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (15 samples, 0.16%)</title><rect x="137.3" y="371.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.3" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.07%)</title><rect x="138.2" y="355.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="141.2" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.07%)</title><rect x="138.2" y="339.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="141.2" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.03%)</title><rect x="138.3" y="323.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="141.3" y="334.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.03%)</title><rect x="138.7" y="323.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="141.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (130 samples, 1.38%)</title><rect x="139.2" y="419.0" width="16.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (127 samples, 1.35%)</title><rect x="139.6" y="403.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (127 samples, 1.35%)</title><rect x="139.6" y="387.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.05%)</title><rect x="139.6" y="371.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.6" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.05%)</title><rect x="139.6" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.6" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.05%)</title><rect x="139.6" y="339.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.6" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="139.8" y="323.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="142.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (64 samples, 0.68%)</title><rect x="140.2" y="371.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (9 samples, 0.10%)</title><rect x="140.4" y="355.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.4" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (9 samples, 0.10%)</title><rect x="140.4" y="339.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (9 samples, 0.10%)</title><rect x="140.4" y="323.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (46 samples, 0.49%)</title><rect x="141.6" y="355.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (46 samples, 0.49%)</title><rect x="141.6" y="339.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (43 samples, 0.46%)</title><rect x="141.9" y="323.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.9" y="334.0"></text>
</g>
<g>
<title>__pread64 (39 samples, 0.41%)</title><rect x="142.3" y="307.0" width="4.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="145.3" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.39%)</title><rect x="142.6" y="291.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="145.6" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.39%)</title><rect x="142.6" y="275.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="145.6" y="286.0"></text>
</g>
<g>
<title>ksys_pread64 (34 samples, 0.36%)</title><rect x="143.0" y="259.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.0" y="270.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.06%)</title><rect x="143.0" y="243.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="146.0" y="254.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.06%)</title><rect x="143.0" y="227.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="146.0" y="238.0"></text>
</g>
<g>
<title>vfs_read (28 samples, 0.30%)</title><rect x="143.7" y="243.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.7" y="254.0"></text>
</g>
<g>
<title>new_sync_read (23 samples, 0.24%)</title><rect x="144.0" y="227.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="147.0" y="238.0"></text>
</g>
<g>
<title>generic_file_read_iter (20 samples, 0.21%)</title><rect x="144.3" y="211.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="147.3" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.06%)</title><rect x="144.8" y="195.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="147.8" y="206.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.04%)</title><rect x="145.1" y="179.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="148.1" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.04%)</title><rect x="145.1" y="163.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="148.1" y="174.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.05%)</title><rect x="145.6" y="195.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="148.6" y="206.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.05%)</title><rect x="145.6" y="179.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="148.6" y="190.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="146.0" y="163.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="149.0" y="174.0"></text>
</g>
<g>
<title>touch_atime (5 samples, 0.05%)</title><rect x="146.2" y="195.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="149.2" y="206.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="146.8" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="149.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="147.3" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.3" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="147.3" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.3" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="147.3" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.03%)</title><rect x="147.3" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="147.7" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.7" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.04%)</title><rect x="147.7" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.04%)</title><rect x="147.7" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (4 samples, 0.04%)</title><rect x="147.7" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (27 samples, 0.29%)</title><rect x="148.2" y="371.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.2" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.09%)</title><rect x="150.0" y="355.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="153.0" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.09%)</title><rect x="150.0" y="339.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="153.0" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (5 samples, 0.05%)</title><rect x="150.1" y="323.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="153.1" y="334.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="150.7" y="323.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="153.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.05%)</title><rect x="151.0" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.0" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="151.4" y="339.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="154.4" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.02%)</title><rect x="151.4" y="323.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="154.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (31 samples, 0.33%)</title><rect x="151.6" y="371.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.6" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.14%)</title><rect x="153.5" y="355.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="156.5" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.13%)</title><rect x="153.5" y="339.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="156.5" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (9 samples, 0.10%)</title><rect x="153.6" y="323.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="156.6" y="334.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="154.8" y="323.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="157.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="155.1" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.1" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="155.1" y="339.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="158.1" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (3 samples, 0.03%)</title><rect x="155.1" y="323.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="158.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$150/693662188.compare (2 samples, 0.02%)</title><rect x="155.5" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (2 samples, 0.02%)</title><rect x="155.5" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.5" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (2 samples, 0.02%)</title><rect x="155.5" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.5" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.02%)</title><rect x="155.5" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.5" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (2 samples, 0.02%)</title><rect x="155.5" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.02%)</title><rect x="155.5" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.02%)</title><rect x="155.8" y="627.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.8" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="155.8" y="611.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.cellsIterator (6,903 samples, 73.44%)</title><rect x="156.3" y="643.0" width="866.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.3" y="654.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.cellsIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (457 samples, 4.86%)</title><rect x="156.3" y="627.0" width="57.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.3" y="638.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (457 samples, 4.86%)</title><rect x="156.3" y="611.0" width="57.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.3" y="622.0">com/go..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (413 samples, 4.39%)</title><rect x="156.6" y="595.0" width="51.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.6" y="606.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (413 samples, 4.39%)</title><rect x="156.6" y="579.0" width="51.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.6" y="590.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (413 samples, 4.39%)</title><rect x="156.6" y="563.0" width="51.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.6" y="574.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (404 samples, 4.30%)</title><rect x="157.4" y="547.0" width="50.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.4" y="558.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (404 samples, 4.30%)</title><rect x="157.4" y="531.0" width="50.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.4" y="542.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (404 samples, 4.30%)</title><rect x="157.4" y="515.0" width="50.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.4" y="526.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (395 samples, 4.20%)</title><rect x="157.4" y="499.0" width="49.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.4" y="510.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (395 samples, 4.20%)</title><rect x="157.4" y="483.0" width="49.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.4" y="494.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (395 samples, 4.20%)</title><rect x="157.4" y="467.0" width="49.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.4" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (395 samples, 4.20%)</title><rect x="157.4" y="451.0" width="49.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.4" y="462.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (395 samples, 4.20%)</title><rect x="157.4" y="435.0" width="49.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.4" y="446.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (394 samples, 4.19%)</title><rect x="157.5" y="419.0" width="49.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.5" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (152 samples, 1.62%)</title><rect x="157.6" y="403.0" width="19.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.04%)</title><rect x="157.8" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="157.8" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="157.8" y="355.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.8" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.04%)</title><rect x="157.8" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="158.0" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (146 samples, 1.55%)</title><rect x="158.4" y="387.0" width="18.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (146 samples, 1.55%)</title><rect x="158.4" y="371.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (7 samples, 0.07%)</title><rect x="158.5" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.5" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (7 samples, 0.07%)</title><rect x="158.5" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.5" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.07%)</title><rect x="158.5" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.5" y="334.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.05%)</title><rect x="158.8" y="307.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.8" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.05%)</title><rect x="158.8" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (82 samples, 0.87%)</title><rect x="159.4" y="355.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.4" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.04%)</title><rect x="159.8" y="339.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="162.8" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="160.0" y="323.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="163.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (14 samples, 0.15%)</title><rect x="160.3" y="339.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (14 samples, 0.15%)</title><rect x="160.3" y="323.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (14 samples, 0.15%)</title><rect x="160.3" y="307.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (58 samples, 0.62%)</title><rect x="162.0" y="339.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (58 samples, 0.62%)</title><rect x="162.0" y="323.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (55 samples, 0.59%)</title><rect x="162.4" y="307.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.4" y="318.0"></text>
</g>
<g>
<title>__pread64 (50 samples, 0.53%)</title><rect x="162.8" y="291.0" width="6.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="165.8" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.50%)</title><rect x="163.2" y="275.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="166.2" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.50%)</title><rect x="163.2" y="259.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="166.2" y="270.0"></text>
</g>
<g>
<title>ksys_pread64 (38 samples, 0.40%)</title><rect x="164.3" y="243.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="167.3" y="254.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.07%)</title><rect x="164.3" y="227.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="167.3" y="238.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.05%)</title><rect x="164.5" y="211.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="167.5" y="222.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="165.3" y="227.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.3" y="238.0"></text>
</g>
<g>
<title>vfs_read (27 samples, 0.29%)</title><rect x="165.7" y="227.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.7" y="238.0"></text>
</g>
<g>
<title>new_sync_read (22 samples, 0.23%)</title><rect x="165.9" y="211.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="168.9" y="222.0"></text>
</g>
<g>
<title>generic_file_read_iter (22 samples, 0.23%)</title><rect x="165.9" y="195.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="168.9" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (8 samples, 0.09%)</title><rect x="166.4" y="179.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="169.4" y="190.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.04%)</title><rect x="166.9" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="169.9" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.04%)</title><rect x="166.9" y="147.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="169.9" y="158.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.06%)</title><rect x="167.4" y="179.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="170.4" y="190.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.06%)</title><rect x="167.4" y="163.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="170.4" y="174.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="167.9" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="170.9" y="158.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.02%)</title><rect x="167.9" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="170.9" y="142.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.04%)</title><rect x="168.2" y="179.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="171.2" y="190.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.03%)</title><rect x="168.7" y="211.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="171.7" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="169.3" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="169.3" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.3" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="169.3" y="307.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.02%)</title><rect x="169.4" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (35 samples, 0.37%)</title><rect x="169.7" y="355.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.7" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.16%)</title><rect x="171.2" y="339.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="174.2" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (13 samples, 0.14%)</title><rect x="171.2" y="323.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="174.2" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (9 samples, 0.10%)</title><rect x="171.7" y="307.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="174.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (8 samples, 0.09%)</title><rect x="173.1" y="339.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.1" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.07%)</title><rect x="173.2" y="323.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="176.2" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (7 samples, 0.07%)</title><rect x="173.2" y="307.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="176.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (21 samples, 0.22%)</title><rect x="174.1" y="355.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.1" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.06%)</title><rect x="175.6" y="339.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="178.6" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.05%)</title><rect x="175.7" y="323.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="178.7" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (5 samples, 0.05%)</title><rect x="175.7" y="307.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="178.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="176.3" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.3" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="176.3" y="323.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="179.3" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (3 samples, 0.03%)</title><rect x="176.3" y="307.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="179.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (241 samples, 2.56%)</title><rect x="176.7" y="403.0" width="30.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.7" y="414.0">ru..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (239 samples, 2.54%)</title><rect x="177.0" y="387.0" width="30.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.0" y="398.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (239 samples, 2.54%)</title><rect x="177.0" y="371.0" width="30.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.0" y="382.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="177.0" y="355.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.0" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="177.0" y="339.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (15 samples, 0.16%)</title><rect x="177.2" y="355.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.2" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (15 samples, 0.16%)</title><rect x="177.2" y="339.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.2" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (15 samples, 0.16%)</title><rect x="177.2" y="323.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.2" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.06%)</title><rect x="178.0" y="307.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="181.0" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (5 samples, 0.05%)</title><rect x="178.1" y="291.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="181.1" y="302.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="178.9" y="307.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="178.9" y="291.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="181.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (121 samples, 1.29%)</title><rect x="179.1" y="355.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (21 samples, 0.22%)</title><rect x="179.6" y="339.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (21 samples, 0.22%)</title><rect x="179.6" y="323.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (21 samples, 0.22%)</title><rect x="179.6" y="307.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (84 samples, 0.89%)</title><rect x="182.2" y="339.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (84 samples, 0.89%)</title><rect x="182.2" y="323.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (79 samples, 0.84%)</title><rect x="182.9" y="307.0" width="9.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.9" y="318.0"></text>
</g>
<g>
<title>__pread64 (72 samples, 0.77%)</title><rect x="183.5" y="291.0" width="9.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="186.5" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 0.73%)</title><rect x="183.9" y="275.0" width="8.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="186.9" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (69 samples, 0.73%)</title><rect x="183.9" y="259.0" width="8.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="186.9" y="270.0"></text>
</g>
<g>
<title>ksys_pread64 (61 samples, 0.65%)</title><rect x="184.9" y="243.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.9" y="254.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.14%)</title><rect x="184.9" y="227.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="187.9" y="238.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.13%)</title><rect x="185.0" y="211.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="188.0" y="222.0"></text>
</g>
<g>
<title>vfs_read (48 samples, 0.51%)</title><rect x="186.5" y="227.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="189.5" y="238.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="186.6" y="211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="189.6" y="222.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="186.9" y="211.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="189.9" y="222.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.04%)</title><rect x="187.1" y="211.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="190.1" y="222.0"></text>
</g>
<g>
<title>new_sync_read (30 samples, 0.32%)</title><rect x="187.6" y="211.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="190.6" y="222.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (5 samples, 0.05%)</title><rect x="187.8" y="195.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="190.8" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (23 samples, 0.24%)</title><rect x="188.4" y="195.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="191.4" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (8 samples, 0.09%)</title><rect x="188.7" y="179.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="191.7" y="190.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.06%)</title><rect x="188.9" y="163.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="191.9" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.06%)</title><rect x="188.9" y="147.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="191.9" y="158.0"></text>
</g>
<g>
<title>pagecache_get_page (12 samples, 0.13%)</title><rect x="189.7" y="179.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="192.7" y="190.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.12%)</title><rect x="189.8" y="163.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.8" y="174.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.04%)</title><rect x="190.7" y="147.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="193.7" y="158.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.10%)</title><rect x="191.4" y="211.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="194.4" y="222.0"></text>
</g>
<g>
<title>selinux_file_permission (6 samples, 0.06%)</title><rect x="191.8" y="195.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="194.8" y="206.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.02%)</title><rect x="192.3" y="179.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="195.3" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.07%)</title><rect x="192.8" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.8" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.07%)</title><rect x="192.8" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.8" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (7 samples, 0.07%)</title><rect x="192.8" y="307.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (7 samples, 0.07%)</title><rect x="192.8" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (5 samples, 0.05%)</title><rect x="193.7" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.05%)</title><rect x="193.7" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.05%)</title><rect x="193.7" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="196.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.05%)</title><rect x="193.7" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.02%)</title><rect x="194.0" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (58 samples, 0.62%)</title><rect x="194.3" y="355.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.3" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.23%)</title><rect x="197.9" y="339.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="200.9" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (18 samples, 0.19%)</title><rect x="198.1" y="323.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="201.1" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (15 samples, 0.16%)</title><rect x="198.3" y="307.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="201.3" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.02%)</title><rect x="199.9" y="291.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="202.9" y="302.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.02%)</title><rect x="200.3" y="323.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="203.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.07%)</title><rect x="200.7" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.7" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.07%)</title><rect x="200.7" y="323.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="203.7" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (6 samples, 0.06%)</title><rect x="200.7" y="307.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="203.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (43 samples, 0.46%)</title><rect x="201.6" y="355.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.6" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (24 samples, 0.26%)</title><rect x="203.3" y="339.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="206.3" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (20 samples, 0.21%)</title><rect x="203.6" y="323.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="206.6" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (12 samples, 0.13%)</title><rect x="204.3" y="307.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="207.3" y="318.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="205.9" y="307.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="208.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.05%)</title><rect x="206.4" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.4" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="206.4" y="323.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="209.4" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (5 samples, 0.05%)</title><rect x="206.4" y="307.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="209.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$150/693662188.compare (9 samples, 0.10%)</title><rect x="207.0" y="499.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (9 samples, 0.10%)</title><rect x="207.0" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.0" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (9 samples, 0.10%)</title><rect x="207.0" y="467.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.10%)</title><rect x="207.0" y="451.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (9 samples, 0.10%)</title><rect x="207.0" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 0.10%)</title><rect x="207.0" y="419.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.04%)</title><rect x="207.0" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="207.1" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.1" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="207.1" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.1" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="207.1" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell$$Lambda$272/1492739350.apply (5 samples, 0.05%)</title><rect x="207.5" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (5 samples, 0.05%)</title><rect x="207.5" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.5" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="207.9" y="371.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.9" y="382.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="208.1" y="547.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="211.1" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (40 samples, 0.43%)</title><rect x="208.5" y="595.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (40 samples, 0.43%)</title><rect x="208.5" y="579.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.5" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.02%)</title><rect x="209.1" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (33 samples, 0.35%)</title><rect x="209.4" y="563.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (27 samples, 0.29%)</title><rect x="209.5" y="547.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="212.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$173/990926064.getAsBoolean (24 samples, 0.26%)</title><rect x="209.9" y="531.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (24 samples, 0.26%)</title><rect x="209.9" y="515.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (24 samples, 0.26%)</title><rect x="209.9" y="499.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (22 samples, 0.23%)</title><rect x="210.1" y="483.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (7 samples, 0.07%)</title><rect x="210.2" y="467.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/242355057.accept (7 samples, 0.07%)</title><rect x="210.2" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.07%)</title><rect x="210.2" y="435.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.07%)</title><rect x="210.2" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.07%)</title><rect x="210.2" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.07%)</title><rect x="210.2" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.07%)</title><rect x="210.2" y="371.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.2" y="382.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="210.2" y="355.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="213.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable$$Lambda$112/1313930385.apply (4 samples, 0.04%)</title><rect x="210.6" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="213.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.09%)</title><rect x="211.1" y="467.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (3 samples, 0.03%)</title><rect x="211.5" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/242355057.accept (3 samples, 0.03%)</title><rect x="211.5" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.03%)</title><rect x="211.5" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.03%)</title><rect x="211.5" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="214.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="211.5" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.03%)</title><rect x="211.5" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.5" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="211.5" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable$$Lambda$117/1151899617.apply (3 samples, 0.03%)</title><rect x="211.5" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$162/669452280.accept (2 samples, 0.02%)</title><rect x="211.9" y="451.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$87/1654631630.apply (5 samples, 0.05%)</title><rect x="212.3" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.05%)</title><rect x="212.3" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.05%)</title><rect x="212.3" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.05%)</title><rect x="212.3" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.05%)</title><rect x="212.3" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (4 samples, 0.04%)</title><rect x="213.0" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.04%)</title><rect x="213.0" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="213.6" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.6" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="213.6" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.6" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (3 samples, 0.03%)</title><rect x="213.9" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.03%)</title><rect x="213.9" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.9" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.03%)</title><rect x="213.9" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.02%)</title><rect x="213.9" y="579.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="213.9" y="563.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.9" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="213.9" y="547.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (6,073 samples, 64.61%)</title><rect x="214.3" y="627.0" width="762.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.3" y="638.0">java/util/Collections$UnmodifiableMap.forEach</text>
</g>
<g>
<title>java/util/TreeMap.forEach (6,072 samples, 64.60%)</title><rect x="214.3" y="611.0" width="762.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.3" y="622.0">java/util/TreeMap.forEach</text>
</g>
<g>
<title>java/util/TreeMap.successor (8 samples, 0.09%)</title><rect x="214.3" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$137/821447616.accept (6,064 samples, 64.52%)</title><rect x="215.3" y="595.0" width="761.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.3" y="606.0">ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$137/821447616.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$cellsIterator$2 (6,064 samples, 64.52%)</title><rect x="215.3" y="579.0" width="761.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.3" y="590.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$cellsIterator$2</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.iterator (6,064 samples, 64.52%)</title><rect x="215.3" y="563.0" width="761.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.3" y="574.0">ru/mail/polis/dao/s3ponia/DiskTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt; (6,064 samples, 64.52%)</title><rect x="215.3" y="547.0" width="761.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.3" y="558.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex (6,064 samples, 64.52%)</title><rect x="215.3" y="531.0" width="761.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.3" y="542.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (30 samples, 0.32%)</title><rect x="215.6" y="515.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.6" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (27 samples, 0.29%)</title><rect x="215.9" y="499.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.13%)</title><rect x="217.8" y="483.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.04%)</title><rect x="218.0" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (6 samples, 0.06%)</title><rect x="218.5" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (6,031 samples, 64.17%)</title><rect x="219.4" y="515.0" width="757.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.4" y="526.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (6,031 samples, 64.17%)</title><rect x="219.4" y="499.0" width="757.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.4" y="510.0">ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (6,026 samples, 64.11%)</title><rect x="220.0" y="483.0" width="756.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.0" y="494.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (2,316 samples, 24.64%)</title><rect x="224.3" y="467.0" width="290.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.3" y="478.0">ru/mail/polis/dao/s3ponia/DiskTable$Laz..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (44 samples, 0.47%)</title><rect x="225.8" y="451.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.46%)</title><rect x="225.9" y="435.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (43 samples, 0.46%)</title><rect x="225.9" y="419.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.9" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (43 samples, 0.46%)</title><rect x="225.9" y="403.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (19 samples, 0.20%)</title><rect x="225.9" y="387.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (19 samples, 0.20%)</title><rect x="225.9" y="371.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (24 samples, 0.26%)</title><rect x="228.3" y="387.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (24 samples, 0.26%)</title><rect x="228.3" y="371.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.3" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.03%)</title><rect x="230.7" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.7" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="231.1" y="355.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,260 samples, 24.05%)</title><rect x="231.3" y="451.0" width="283.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.3" y="462.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,260 samples, 24.05%)</title><rect x="231.3" y="435.0" width="283.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.3" y="446.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (17 samples, 0.18%)</title><rect x="231.3" y="419.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.3" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (17 samples, 0.18%)</title><rect x="231.3" y="403.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.3" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.03%)</title><rect x="233.1" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.1" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.03%)</title><rect x="233.1" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.03%)</title><rect x="233.1" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (102 samples, 1.09%)</title><rect x="233.5" y="419.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.5" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (102 samples, 1.09%)</title><rect x="233.5" y="403.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.5" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (102 samples, 1.09%)</title><rect x="233.5" y="387.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.5" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (21 samples, 0.22%)</title><rect x="239.9" y="371.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="242.9" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (2 samples, 0.02%)</title><rect x="240.0" y="355.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="243.0" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (14 samples, 0.15%)</title><rect x="240.3" y="355.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="243.3" y="366.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.02%)</title><rect x="242.3" y="355.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="245.3" y="366.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (2 samples, 0.02%)</title><rect x="242.5" y="371.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="245.5" y="382.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (28 samples, 0.30%)</title><rect x="242.8" y="371.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (28 samples, 0.30%)</title><rect x="242.8" y="355.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,262 samples, 13.43%)</title><rect x="246.3" y="419.0" width="158.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.3" y="430.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (23 samples, 0.24%)</title><rect x="251.4" y="403.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="254.4" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (20 samples, 0.21%)</title><rect x="251.5" y="387.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="254.5" y="398.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (3 samples, 0.03%)</title><rect x="253.7" y="371.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="256.7" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (166 samples, 1.77%)</title><rect x="254.4" y="403.0" width="20.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.4" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (166 samples, 1.77%)</title><rect x="254.4" y="387.0" width="20.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (166 samples, 1.77%)</title><rect x="254.4" y="371.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (889 samples, 9.46%)</title><rect x="275.3" y="403.0" width="111.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.3" y="414.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (889 samples, 9.46%)</title><rect x="275.3" y="387.0" width="111.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.3" y="398.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (864 samples, 9.19%)</title><rect x="278.4" y="371.0" width="108.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.4" y="382.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (13 samples, 0.14%)</title><rect x="283.4" y="355.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="286.4" y="366.0"></text>
</g>
<g>
<title>__pread64 (795 samples, 8.46%)</title><rect x="285.1" y="355.0" width="99.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="288.1" y="366.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (753 samples, 8.01%)</title><rect x="290.3" y="339.0" width="94.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="293.3" y="350.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (753 samples, 8.01%)</title><rect x="290.3" y="323.0" width="94.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="293.3" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (13 samples, 0.14%)</title><rect x="300.6" y="307.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="303.6" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (657 samples, 6.99%)</title><rect x="302.4" y="307.0" width="82.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="305.4" y="318.0">ksys_prea..</text>
</g>
<g>
<title>__fget_light (122 samples, 1.30%)</title><rect x="303.5" y="291.0" width="15.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="306.5" y="302.0"></text>
</g>
<g>
<title>__fget (110 samples, 1.17%)</title><rect x="305.0" y="275.0" width="13.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.0" y="286.0"></text>
</g>
<g>
<title>fput_many (15 samples, 0.16%)</title><rect x="318.8" y="291.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="321.8" y="302.0"></text>
</g>
<g>
<title>vfs_read (511 samples, 5.44%)</title><rect x="320.7" y="291.0" width="64.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.7" y="302.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (13 samples, 0.14%)</title><rect x="323.5" y="275.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="326.5" y="286.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.11%)</title><rect x="325.1" y="275.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="328.1" y="286.0"></text>
</g>
<g>
<title>fsnotify (40 samples, 0.43%)</title><rect x="326.4" y="275.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="329.4" y="286.0"></text>
</g>
<g>
<title>new_sync_read (362 samples, 3.85%)</title><rect x="331.4" y="275.0" width="45.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.4" y="286.0">new_..</text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (42 samples, 0.45%)</title><rect x="333.9" y="259.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="336.9" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (299 samples, 3.18%)</title><rect x="339.2" y="259.0" width="37.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="342.2" y="270.0">gen..</text>
</g>
<g>
<title>copy_page_to_iter (115 samples, 1.22%)</title><rect x="349.1" y="243.0" width="14.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="352.1" y="254.0"></text>
</g>
<g>
<title>_cond_resched (4 samples, 0.04%)</title><rect x="352.9" y="227.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="355.9" y="238.0"></text>
</g>
<g>
<title>copyout (81 samples, 0.86%)</title><rect x="353.4" y="227.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="356.4" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_string (79 samples, 0.84%)</title><rect x="353.6" y="211.0" width="9.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="356.6" y="222.0"></text>
</g>
<g>
<title>mark_page_accessed (4 samples, 0.04%)</title><rect x="363.5" y="243.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="366.5" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (72 samples, 0.77%)</title><rect x="364.0" y="243.0" width="9.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="367.0" y="254.0"></text>
</g>
<g>
<title>find_get_entry (69 samples, 0.73%)</title><rect x="364.4" y="227.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="367.4" y="238.0"></text>
</g>
<g>
<title>PageHuge (2 samples, 0.02%)</title><rect x="368.7" y="211.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.7" y="222.0"></text>
</g>
<g>
<title>xas_load (33 samples, 0.35%)</title><rect x="368.9" y="211.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.9" y="222.0"></text>
</g>
<g>
<title>xas_start (10 samples, 0.11%)</title><rect x="371.8" y="195.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.8" y="206.0"></text>
</g>
<g>
<title>touch_atime (29 samples, 0.31%)</title><rect x="373.1" y="243.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="376.1" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.06%)</title><rect x="376.0" y="227.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="379.0" y="238.0"></text>
</g>
<g>
<title>security_file_permission (63 samples, 0.67%)</title><rect x="377.0" y="275.0" width="7.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="380.0" y="286.0"></text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.07%)</title><rect x="378.5" y="259.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="381.5" y="270.0"></text>
</g>
<g>
<title>selinux_file_permission (44 samples, 0.47%)</title><rect x="379.4" y="259.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="382.4" y="270.0"></text>
</g>
<g>
<title>__inode_security_revalidate (4 samples, 0.04%)</title><rect x="384.4" y="243.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.4" y="254.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="384.9" y="355.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="387.9" y="366.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (7 samples, 0.07%)</title><rect x="385.1" y="355.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="388.1" y="366.0"></text>
</g>
<g>
<title>convertReturnVal (5 samples, 0.05%)</title><rect x="386.0" y="355.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="389.0" y="366.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="386.6" y="355.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="389.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (76 samples, 0.81%)</title><rect x="386.9" y="403.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.9" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (76 samples, 0.81%)</title><rect x="386.9" y="387.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.9" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (76 samples, 0.81%)</title><rect x="386.9" y="371.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (73 samples, 0.78%)</title><rect x="387.3" y="355.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (66 samples, 0.70%)</title><rect x="396.4" y="403.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (66 samples, 0.70%)</title><rect x="396.4" y="387.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.4" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (66 samples, 0.70%)</title><rect x="396.4" y="371.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (66 samples, 0.70%)</title><rect x="396.4" y="355.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.4" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="402.8" y="339.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="405.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 0.10%)</title><rect x="403.2" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.2" y="350.0"></text>
</g>
<g>
<title>unsafe_arraycopy (3 samples, 0.03%)</title><rect x="404.3" y="339.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="407.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (484 samples, 5.15%)</title><rect x="404.7" y="419.0" width="60.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.7" y="430.0">sun/ni..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (181 samples, 1.93%)</title><rect x="430.2" y="403.0" width="22.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="433.2" y="414.0">S..</text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (5 samples, 0.05%)</title><rect x="430.3" y="387.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="433.3" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (162 samples, 1.72%)</title><rect x="431.0" y="387.0" width="20.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="434.0" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (102 samples, 1.09%)</title><rect x="436.1" y="371.0" width="12.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="439.1" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (7 samples, 0.07%)</title><rect x="448.0" y="355.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="451.0" y="366.0"></text>
</g>
<g>
<title>SpinPause (19 samples, 0.20%)</title><rect x="448.9" y="371.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="451.9" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.07%)</title><rect x="451.3" y="387.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="454.3" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (4 samples, 0.04%)</title><rect x="451.4" y="371.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="454.4" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (2 samples, 0.02%)</title><rect x="451.9" y="371.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="454.9" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (6 samples, 0.06%)</title><rect x="452.2" y="387.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="455.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (99 samples, 1.05%)</title><rect x="453.0" y="403.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.0" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (64 samples, 0.68%)</title><rect x="457.4" y="387.0" width="8.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="460.4" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (62 samples, 0.66%)</title><rect x="457.6" y="371.0" width="7.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="460.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (395 samples, 4.20%)</title><rect x="465.5" y="419.0" width="49.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.5" y="430.0">sun/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (211 samples, 2.24%)</title><rect x="481.3" y="403.0" width="26.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="484.3" y="414.0">S..</text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (3 samples, 0.03%)</title><rect x="481.5" y="387.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="484.5" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (186 samples, 1.98%)</title><rect x="481.9" y="387.0" width="23.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="484.9" y="398.0">O..</text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (3 samples, 0.03%)</title><rect x="487.1" y="371.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="490.1" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (124 samples, 1.32%)</title><rect x="487.4" y="371.0" width="15.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="490.4" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (7 samples, 0.07%)</title><rect x="502.1" y="355.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="505.1" y="366.0"></text>
</g>
<g>
<title>SpinPause (18 samples, 0.19%)</title><rect x="503.0" y="371.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="506.0" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (15 samples, 0.16%)</title><rect x="505.3" y="387.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="508.3" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (10 samples, 0.11%)</title><rect x="505.4" y="371.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="508.4" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (4 samples, 0.04%)</title><rect x="506.7" y="371.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="509.7" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (5 samples, 0.05%)</title><rect x="507.2" y="387.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="510.2" y="398.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (2 samples, 0.02%)</title><rect x="507.8" y="403.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="510.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (56 samples, 0.60%)</title><rect x="508.0" y="403.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.0" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (55 samples, 0.59%)</title><rect x="508.2" y="387.0" width="6.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="511.2" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (52 samples, 0.55%)</title><rect x="508.4" y="371.0" width="6.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="511.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (3,676 samples, 39.11%)</title><rect x="515.1" y="467.0" width="461.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.1" y="478.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.03%)</title><rect x="518.1" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,648 samples, 38.81%)</title><rect x="518.6" y="451.0" width="458.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.6" y="462.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,645 samples, 38.78%)</title><rect x="519.0" y="435.0" width="457.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.0" y="446.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (34 samples, 0.36%)</title><rect x="519.0" y="419.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.0" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (34 samples, 0.36%)</title><rect x="519.0" y="403.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.0" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (17 samples, 0.18%)</title><rect x="521.1" y="387.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.1" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (17 samples, 0.18%)</title><rect x="521.1" y="371.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (17 samples, 0.18%)</title><rect x="521.1" y="355.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (182 samples, 1.94%)</title><rect x="523.2" y="419.0" width="22.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.2" y="430.0">s..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (182 samples, 1.94%)</title><rect x="523.2" y="403.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.2" y="414.0">j..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (182 samples, 1.94%)</title><rect x="523.2" y="387.0" width="22.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.2" y="398.0">j..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (32 samples, 0.34%)</title><rect x="534.2" y="371.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="537.2" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (28 samples, 0.30%)</title><rect x="534.4" y="355.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="537.4" y="366.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (3 samples, 0.03%)</title><rect x="537.5" y="339.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="540.5" y="350.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="537.9" y="355.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="540.9" y="366.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (3 samples, 0.03%)</title><rect x="538.2" y="371.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="541.2" y="382.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (60 samples, 0.64%)</title><rect x="538.5" y="371.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="541.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (60 samples, 0.64%)</title><rect x="538.5" y="355.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2,008 samples, 21.36%)</title><rect x="546.1" y="419.0" width="252.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.1" y="430.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="554.7" y="403.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="557.7" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (37 samples, 0.39%)</title><rect x="555.1" y="403.0" width="4.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="558.1" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (27 samples, 0.29%)</title><rect x="555.5" y="387.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="558.5" y="398.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (5 samples, 0.05%)</title><rect x="558.3" y="371.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="561.3" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="558.9" y="387.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="561.9" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="559.1" y="387.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="562.1" y="398.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.03%)</title><rect x="559.4" y="387.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="562.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="559.8" y="403.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="562.8" y="414.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="559.8" y="387.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="562.8" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="559.8" y="371.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="562.8" y="382.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (3 samples, 0.03%)</title><rect x="560.1" y="403.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="563.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (250 samples, 2.66%)</title><rect x="560.5" y="403.0" width="31.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.5" y="414.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (250 samples, 2.66%)</title><rect x="560.5" y="387.0" width="31.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.5" y="398.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.get (250 samples, 2.66%)</title><rect x="560.5" y="371.0" width="31.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.5" y="382.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,410 samples, 15.00%)</title><rect x="591.9" y="403.0" width="177.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.9" y="414.0">sun/nio/ch/IOUtil.readI..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,410 samples, 15.00%)</title><rect x="591.9" y="387.0" width="177.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.9" y="398.0">sun/nio/ch/FileDispatch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,356 samples, 14.43%)</title><rect x="598.7" y="371.0" width="170.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.7" y="382.0">sun/nio/ch/FileDispatc..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (9 samples, 0.10%)</title><rect x="605.0" y="355.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="608.0" y="366.0"></text>
</g>
<g>
<title>__pread64 (1,262 samples, 13.43%)</title><rect x="606.1" y="355.0" width="158.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="609.1" y="366.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,188 samples, 12.64%)</title><rect x="615.4" y="339.0" width="149.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="618.4" y="350.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>do_syscall_64 (1,188 samples, 12.64%)</title><rect x="615.4" y="323.0" width="149.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="618.4" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (20 samples, 0.21%)</title><rect x="634.7" y="307.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="637.7" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (1,014 samples, 10.79%)</title><rect x="637.2" y="307.0" width="127.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="640.2" y="318.0">ksys_pread64</text>
</g>
<g>
<title>__fget_light (183 samples, 1.95%)</title><rect x="639.2" y="291.0" width="23.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="642.2" y="302.0">_..</text>
</g>
<g>
<title>__fget (167 samples, 1.78%)</title><rect x="641.2" y="275.0" width="21.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="644.2" y="286.0"></text>
</g>
<g>
<title>fput_many (33 samples, 0.35%)</title><rect x="662.3" y="291.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="665.3" y="302.0"></text>
</g>
<g>
<title>vfs_read (781 samples, 8.31%)</title><rect x="666.5" y="291.0" width="98.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="669.5" y="302.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (7 samples, 0.07%)</title><rect x="668.7" y="275.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.7" y="286.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.17%)</title><rect x="669.6" y="275.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.6" y="286.0"></text>
</g>
<g>
<title>fsnotify (71 samples, 0.76%)</title><rect x="671.6" y="275.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="674.6" y="286.0"></text>
</g>
<g>
<title>new_sync_read (544 samples, 5.79%)</title><rect x="680.5" y="275.0" width="68.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="683.5" y="286.0">new_syn..</text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (53 samples, 0.56%)</title><rect x="685.2" y="259.0" width="6.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="688.2" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (451 samples, 4.80%)</title><rect x="691.8" y="259.0" width="56.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="694.8" y="270.0">generi..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.05%)</title><rect x="706.0" y="243.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="709.0" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (133 samples, 1.42%)</title><rect x="706.7" y="243.0" width="16.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="709.7" y="254.0"></text>
</g>
<g>
<title>_cond_resched (6 samples, 0.06%)</title><rect x="709.8" y="227.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="712.8" y="238.0"></text>
</g>
<g>
<title>copyout (102 samples, 1.09%)</title><rect x="710.5" y="227.0" width="12.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="713.5" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_string (95 samples, 1.01%)</title><rect x="711.4" y="211.0" width="11.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="714.4" y="222.0"></text>
</g>
<g>
<title>mark_page_accessed (9 samples, 0.10%)</title><rect x="723.3" y="243.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="726.3" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (144 samples, 1.53%)</title><rect x="724.5" y="243.0" width="18.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="727.5" y="254.0"></text>
</g>
<g>
<title>find_get_entry (134 samples, 1.43%)</title><rect x="725.7" y="227.0" width="16.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="728.7" y="238.0"></text>
</g>
<g>
<title>xas_load (46 samples, 0.49%)</title><rect x="736.8" y="211.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="739.8" y="222.0"></text>
</g>
<g>
<title>xas_start (18 samples, 0.19%)</title><rect x="740.3" y="195.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="743.3" y="206.0"></text>
</g>
<g>
<title>touch_atime (47 samples, 0.50%)</title><rect x="742.6" y="243.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.6" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (10 samples, 0.11%)</title><rect x="747.2" y="227.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.2" y="238.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.03%)</title><rect x="748.5" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="751.5" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="748.8" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="751.8" y="286.0"></text>
</g>
<g>
<title>security_file_permission (123 samples, 1.31%)</title><rect x="749.1" y="275.0" width="15.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="752.1" y="286.0"></text>
</g>
<g>
<title>__fsnotify_parent (17 samples, 0.18%)</title><rect x="751.1" y="259.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="754.1" y="270.0"></text>
</g>
<g>
<title>selinux_file_permission (90 samples, 0.96%)</title><rect x="753.2" y="259.0" width="11.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.2" y="270.0"></text>
</g>
<g>
<title>__inode_security_revalidate (9 samples, 0.10%)</title><rect x="763.3" y="243.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="766.3" y="254.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.03%)</title><rect x="764.0" y="227.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="767.0" y="238.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.03%)</title><rect x="764.0" y="211.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="767.0" y="222.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.09%)</title><rect x="764.5" y="355.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="767.5" y="366.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (12 samples, 0.13%)</title><rect x="765.5" y="355.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="768.5" y="366.0"></text>
</g>
<g>
<title>convertReturnVal (10 samples, 0.11%)</title><rect x="767.0" y="355.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="770.0" y="366.0"></text>
</g>
<g>
<title>fdval (5 samples, 0.05%)</title><rect x="768.3" y="355.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="771.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (120 samples, 1.28%)</title><rect x="768.9" y="403.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.9" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (120 samples, 1.28%)</title><rect x="768.9" y="387.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.9" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (120 samples, 1.28%)</title><rect x="768.9" y="371.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (118 samples, 1.26%)</title><rect x="769.2" y="355.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (113 samples, 1.20%)</title><rect x="784.0" y="403.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="787.0" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (113 samples, 1.20%)</title><rect x="784.0" y="387.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.0" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (113 samples, 1.20%)</title><rect x="784.0" y="371.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (113 samples, 1.20%)</title><rect x="784.0" y="355.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.0" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.10%)</title><rect x="793.2" y="339.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="796.2" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.05%)</title><rect x="794.4" y="339.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="797.4" y="350.0"></text>
</g>
<g>
<title>jshort_arraycopy (2 samples, 0.02%)</title><rect x="795.0" y="339.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="798.0" y="350.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="795.3" y="339.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="798.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.19%)</title><rect x="795.5" y="339.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.5" y="350.0"></text>
</g>
<g>
<title>unsafe_arraycopy (3 samples, 0.03%)</title><rect x="797.8" y="339.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="800.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (851 samples, 9.05%)</title><rect x="798.2" y="419.0" width="106.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.2" y="430.0">sun/nio/ch/Na..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (292 samples, 3.11%)</title><rect x="845.3" y="403.0" width="36.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="848.3" y="414.0">Sha..</text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (9 samples, 0.10%)</title><rect x="845.5" y="387.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="848.5" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (265 samples, 2.82%)</title><rect x="846.6" y="387.0" width="33.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="849.6" y="398.0">Ob..</text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (2 samples, 0.02%)</title><rect x="852.9" y="371.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="855.9" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (182 samples, 1.94%)</title><rect x="853.2" y="371.0" width="22.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="856.2" y="382.0">O..</text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (14 samples, 0.15%)</title><rect x="874.3" y="355.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="877.3" y="366.0"></text>
</g>
<g>
<title>SpinPause (30 samples, 0.32%)</title><rect x="876.0" y="371.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="879.0" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (13 samples, 0.14%)</title><rect x="879.9" y="387.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="882.9" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (9 samples, 0.10%)</title><rect x="880.0" y="371.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="883.0" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (3 samples, 0.03%)</title><rect x="881.2" y="371.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="884.2" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (2 samples, 0.02%)</title><rect x="881.5" y="387.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="884.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (184 samples, 1.96%)</title><rect x="881.9" y="403.0" width="23.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="884.9" y="414.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (119 samples, 1.27%)</title><rect x="889.4" y="387.0" width="15.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="892.4" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (114 samples, 1.21%)</title><rect x="890.1" y="371.0" width="14.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="893.1" y="382.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (5 samples, 0.05%)</title><rect x="904.4" y="387.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="907.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (570 samples, 6.06%)</title><rect x="905.0" y="419.0" width="71.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.0" y="430.0">sun/nio/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (278 samples, 2.96%)</title><rect x="933.1" y="403.0" width="34.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="936.1" y="414.0">Sh..</text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (11 samples, 0.12%)</title><rect x="933.6" y="387.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="936.6" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (240 samples, 2.55%)</title><rect x="935.0" y="387.0" width="30.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="938.0" y="398.0">Ob..</text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (3 samples, 0.03%)</title><rect x="939.9" y="371.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="942.9" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (169 samples, 1.80%)</title><rect x="940.3" y="371.0" width="21.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="943.3" y="382.0">O..</text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (9 samples, 0.10%)</title><rect x="960.4" y="355.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="963.4" y="366.0"></text>
</g>
<g>
<title>SpinPause (28 samples, 0.30%)</title><rect x="961.5" y="371.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="964.5" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (20 samples, 0.21%)</title><rect x="965.1" y="387.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="968.1" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (11 samples, 0.12%)</title><rect x="965.4" y="371.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="968.4" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (7 samples, 0.07%)</title><rect x="966.8" y="371.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="969.8" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (3 samples, 0.03%)</title><rect x="967.7" y="387.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="970.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (68 samples, 0.72%)</title><rect x="968.0" y="403.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.0" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (68 samples, 0.72%)</title><rect x="968.0" y="387.0" width="8.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="971.0" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (63 samples, 0.67%)</title><rect x="968.7" y="371.0" width="7.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="971.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (10 samples, 0.11%)</title><rect x="976.7" y="627.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (10 samples, 0.11%)</title><rect x="976.7" y="611.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="979.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (10 samples, 0.11%)</title><rect x="976.7" y="595.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="976.7" y="579.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="979.7" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="976.7" y="563.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="979.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (8 samples, 0.09%)</title><rect x="976.9" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="979.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (8 samples, 0.09%)</title><rect x="976.9" y="563.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (18 samples, 0.19%)</title><rect x="978.0" y="627.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (18 samples, 0.19%)</title><rect x="978.0" y="611.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (4 samples, 0.04%)</title><rect x="978.0" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (14 samples, 0.15%)</title><rect x="978.5" y="595.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.5" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (7 samples, 0.07%)</title><rect x="979.3" y="579.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.3" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (4 samples, 0.04%)</title><rect x="979.7" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="982.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (260 samples, 2.77%)</title><rect x="980.2" y="627.0" width="32.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="983.2" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (260 samples, 2.77%)</title><rect x="980.2" y="611.0" width="32.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.2" y="622.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (258 samples, 2.74%)</title><rect x="980.5" y="595.0" width="32.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.5" y="606.0">co..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (22 samples, 0.23%)</title><rect x="980.5" y="579.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.5" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (22 samples, 0.23%)</title><rect x="980.5" y="563.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.5" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (22 samples, 0.23%)</title><rect x="980.5" y="547.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 0.23%)</title><rect x="980.5" y="531.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 0.23%)</title><rect x="980.5" y="515.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="983.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$150/693662188.compare (21 samples, 0.22%)</title><rect x="980.6" y="499.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (21 samples, 0.22%)</title><rect x="980.6" y="483.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.6" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (19 samples, 0.20%)</title><rect x="980.6" y="467.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (19 samples, 0.20%)</title><rect x="980.6" y="451.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (18 samples, 0.19%)</title><rect x="980.7" y="435.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.7" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 0.19%)</title><rect x="980.7" y="419.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="981.3" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="981.3" y="387.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.3" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="981.5" y="371.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.compareTo (2 samples, 0.02%)</title><rect x="981.7" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell$$Lambda$272/1492739350.apply (3 samples, 0.03%)</title><rect x="982.0" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="985.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (3 samples, 0.03%)</title><rect x="982.0" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="985.0" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="982.0" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="985.0" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="982.1" y="355.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="982.1" y="339.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="985.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="982.1" y="323.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="985.1" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="982.1" y="307.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell$$Lambda$273/1556540113.apply (2 samples, 0.02%)</title><rect x="982.3" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.compareTo (3 samples, 0.03%)</title><rect x="982.6" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="985.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.compareTo (3 samples, 0.03%)</title><rect x="982.6" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="985.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$ReverseComparator2.compare (2 samples, 0.02%)</title><rect x="982.6" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (2 samples, 0.02%)</title><rect x="982.6" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="985.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.02%)</title><rect x="982.6" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (2 samples, 0.02%)</title><rect x="982.6" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="985.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.02%)</title><rect x="982.6" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (236 samples, 2.51%)</title><rect x="983.2" y="579.0" width="29.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.2" y="590.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (236 samples, 2.51%)</title><rect x="983.2" y="563.0" width="29.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.2" y="574.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (236 samples, 2.51%)</title><rect x="983.2" y="547.0" width="29.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.2" y="558.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (236 samples, 2.51%)</title><rect x="983.2" y="531.0" width="29.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.2" y="542.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (235 samples, 2.50%)</title><rect x="983.4" y="515.0" width="29.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.4" y="526.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (235 samples, 2.50%)</title><rect x="983.4" y="499.0" width="29.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.4" y="510.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (233 samples, 2.48%)</title><rect x="983.4" y="483.0" width="29.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.4" y="494.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (233 samples, 2.48%)</title><rect x="983.4" y="467.0" width="29.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.4" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (233 samples, 2.48%)</title><rect x="983.4" y="451.0" width="29.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="986.4" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (233 samples, 2.48%)</title><rect x="983.4" y="435.0" width="29.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.4" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (233 samples, 2.48%)</title><rect x="983.4" y="419.0" width="29.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.4" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (233 samples, 2.48%)</title><rect x="983.4" y="403.0" width="29.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.4" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (91 samples, 0.97%)</title><rect x="983.4" y="387.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="986.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (89 samples, 0.95%)</title><rect x="983.6" y="371.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (89 samples, 0.95%)</title><rect x="983.6" y="355.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="986.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.03%)</title><rect x="983.7" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.7" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.03%)</title><rect x="983.7" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.7" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.03%)</title><rect x="983.7" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (52 samples, 0.55%)</title><rect x="984.1" y="339.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.1" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.09%)</title><rect x="984.2" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.09%)</title><rect x="984.2" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="987.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.09%)</title><rect x="984.2" y="291.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="987.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (36 samples, 0.38%)</title><rect x="985.2" y="323.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="988.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (36 samples, 0.38%)</title><rect x="985.2" y="307.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (35 samples, 0.37%)</title><rect x="985.4" y="291.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="988.4" y="302.0"></text>
</g>
<g>
<title>__pread64 (32 samples, 0.34%)</title><rect x="985.5" y="275.0" width="4.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="988.5" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.31%)</title><rect x="985.9" y="259.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="988.9" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.31%)</title><rect x="985.9" y="243.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="988.9" y="254.0"></text>
</g>
<g>
<title>ksys_pread64 (26 samples, 0.28%)</title><rect x="986.2" y="227.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="989.2" y="238.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="986.2" y="211.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="989.2" y="222.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="986.2" y="195.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="989.2" y="206.0"></text>
</g>
<g>
<title>vfs_read (23 samples, 0.24%)</title><rect x="986.6" y="211.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="989.6" y="222.0"></text>
</g>
<g>
<title>new_sync_read (17 samples, 0.18%)</title><rect x="986.9" y="195.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="989.9" y="206.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (2 samples, 0.02%)</title><rect x="987.1" y="179.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="990.1" y="190.0"></text>
</g>
<g>
<title>generic_file_read_iter (12 samples, 0.13%)</title><rect x="987.4" y="179.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="990.4" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.03%)</title><rect x="988.1" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.1" y="174.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.03%)</title><rect x="988.1" y="147.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="991.1" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.03%)</title><rect x="988.1" y="131.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="991.1" y="142.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="988.6" y="163.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="991.6" y="174.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="988.6" y="147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="991.6" y="158.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.04%)</title><rect x="989.0" y="195.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.0" y="206.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.04%)</title><rect x="989.0" y="179.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.0" y="190.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="989.5" y="275.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="992.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="989.8" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.8" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.04%)</title><rect x="989.8" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.8" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.04%)</title><rect x="989.8" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (4 samples, 0.04%)</title><rect x="989.8" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="990.3" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="993.3" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="990.3" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="993.3" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="990.3" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.03%)</title><rect x="990.3" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="993.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (16 samples, 0.17%)</title><rect x="990.6" y="339.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.6" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.05%)</title><rect x="991.9" y="323.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="994.9" y="334.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (2 samples, 0.02%)</title><rect x="991.9" y="307.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.9" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.02%)</title><rect x="992.1" y="307.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="995.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (17 samples, 0.18%)</title><rect x="992.6" y="339.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.6" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.09%)</title><rect x="993.4" y="323.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="996.4" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.06%)</title><rect x="993.5" y="307.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="996.5" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.03%)</title><rect x="993.8" y="291.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="996.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="994.4" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.4" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.03%)</title><rect x="994.4" y="307.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="997.4" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.02%)</title><rect x="994.5" y="291.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="997.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (142 samples, 1.51%)</title><rect x="994.8" y="387.0" width="17.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (141 samples, 1.50%)</title><rect x="994.9" y="371.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (141 samples, 1.50%)</title><rect x="994.9" y="355.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (9 samples, 0.10%)</title><rect x="994.9" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.9" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (9 samples, 0.10%)</title><rect x="994.9" y="323.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.9" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.10%)</title><rect x="994.9" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.9" y="318.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.06%)</title><rect x="994.9" y="291.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="997.9" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (5 samples, 0.05%)</title><rect x="994.9" y="275.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="997.9" y="286.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.03%)</title><rect x="995.7" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.7" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.03%)</title><rect x="995.7" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (70 samples, 0.74%)</title><rect x="996.0" y="339.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.0" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (13 samples, 0.14%)</title><rect x="996.7" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (13 samples, 0.14%)</title><rect x="996.7" y="307.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (13 samples, 0.14%)</title><rect x="996.7" y="291.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (46 samples, 0.49%)</title><rect x="998.3" y="323.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (46 samples, 0.49%)</title><rect x="998.3" y="307.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (45 samples, 0.48%)</title><rect x="998.4" y="291.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.4" y="302.0"></text>
</g>
<g>
<title>__pread64 (44 samples, 0.47%)</title><rect x="998.5" y="275.0" width="5.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1001.5" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.47%)</title><rect x="998.5" y="259.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1001.5" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.47%)</title><rect x="998.5" y="243.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1001.5" y="254.0"></text>
</g>
<g>
<title>ksys_pread64 (41 samples, 0.44%)</title><rect x="998.9" y="227.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1001.9" y="238.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.06%)</title><rect x="998.9" y="211.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1001.9" y="222.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.05%)</title><rect x="999.0" y="195.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1002.0" y="206.0"></text>
</g>
<g>
<title>vfs_read (34 samples, 0.36%)</title><rect x="999.8" y="211.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1002.8" y="222.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="999.9" y="195.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1002.9" y="206.0"></text>
</g>
<g>
<title>new_sync_read (24 samples, 0.26%)</title><rect x="1000.2" y="195.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.2" y="206.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (2 samples, 0.02%)</title><rect x="1000.3" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.3" y="190.0"></text>
</g>
<g>
<title>generic_file_read_iter (21 samples, 0.22%)</title><rect x="1000.6" y="179.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1003.6" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.06%)</title><rect x="1001.2" y="163.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1004.2" y="174.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.04%)</title><rect x="1001.4" y="147.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1004.4" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.04%)</title><rect x="1001.4" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1004.4" y="142.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.07%)</title><rect x="1002.1" y="163.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1005.1" y="174.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.07%)</title><rect x="1002.1" y="147.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1005.1" y="158.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="1002.9" y="163.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1005.9" y="174.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.07%)</title><rect x="1003.2" y="195.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1006.2" y="206.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="1003.2" y="179.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1006.2" y="190.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.04%)</title><rect x="1003.6" y="179.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1006.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.04%)</title><rect x="1004.1" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.1" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.04%)</title><rect x="1004.1" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.04%)</title><rect x="1004.1" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.03%)</title><rect x="1004.2" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="1004.6" y="323.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="1004.6" y="307.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="1004.6" y="291.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (2 samples, 0.02%)</title><rect x="1004.6" y="275.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.6" y="286.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1004.6" y="259.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1007.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (40 samples, 0.43%)</title><rect x="1004.8" y="339.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.8" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.14%)</title><rect x="1007.0" y="323.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1010.0" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.12%)</title><rect x="1007.1" y="307.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1010.1" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (10 samples, 0.11%)</title><rect x="1007.2" y="291.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1010.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (10 samples, 0.11%)</title><rect x="1008.6" y="323.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.6" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.06%)</title><rect x="1009.1" y="307.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1012.1" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (5 samples, 0.05%)</title><rect x="1009.2" y="291.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1012.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (22 samples, 0.23%)</title><rect x="1009.8" y="339.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.8" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.16%)</title><rect x="1010.6" y="323.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1013.6" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (14 samples, 0.15%)</title><rect x="1010.7" y="307.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1013.7" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (10 samples, 0.11%)</title><rect x="1011.1" y="291.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1014.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$150/693662188.compare (2 samples, 0.02%)</title><rect x="1012.6" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (2 samples, 0.02%)</title><rect x="1012.6" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.6" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (2 samples, 0.02%)</title><rect x="1012.6" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.02%)</title><rect x="1012.6" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (2 samples, 0.02%)</title><rect x="1012.6" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.02%)</title><rect x="1012.6" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1015.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.iterator (80 samples, 0.85%)</title><rect x="1012.9" y="627.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1015.9" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (73 samples, 0.78%)</title><rect x="1012.9" y="611.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (73 samples, 0.78%)</title><rect x="1012.9" y="595.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1015.9" y="606.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="1012.9" y="579.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1015.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (69 samples, 0.73%)</title><rect x="1013.2" y="579.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1016.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (69 samples, 0.73%)</title><rect x="1013.2" y="563.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (2 samples, 0.02%)</title><rect x="1013.2" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (2 samples, 0.02%)</title><rect x="1013.2" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.02%)</title><rect x="1013.2" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1016.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (67 samples, 0.71%)</title><rect x="1013.5" y="547.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1016.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (67 samples, 0.71%)</title><rect x="1013.5" y="531.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (67 samples, 0.71%)</title><rect x="1013.5" y="515.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="1014.2" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (59 samples, 0.63%)</title><rect x="1014.5" y="499.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.21%)</title><rect x="1019.4" y="483.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1022.4" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.19%)</title><rect x="1019.6" y="467.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="1019.8" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.8" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.12%)</title><rect x="1020.1" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.03%)</title><rect x="1021.5" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.5" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.02%)</title><rect x="1021.6" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1024.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.02%)</title><rect x="1022.0" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1025.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (3 samples, 0.03%)</title><rect x="1022.5" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1022.6" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1025.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1022.6" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1025.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1022.6" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1025.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1022.6" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1025.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.getValue (2 samples, 0.02%)</title><rect x="1022.9" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="1022.9" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1025.9" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1022.9" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1025.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1022.9" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1025.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1022.9" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1025.9" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1022.9" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1025.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="1022.9" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1025.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="1022.9" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.9" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="1022.9" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.02%)</title><rect x="1023.2" y="723.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1026.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.02%)</title><rect x="1023.2" y="707.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.02%)</title><rect x="1023.2" y="691.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1026.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (55 samples, 0.59%)</title><rect x="1023.4" y="723.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1026.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (54 samples, 0.57%)</title><rect x="1023.5" y="707.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1026.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (31 samples, 0.33%)</title><rect x="1023.8" y="691.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.02%)</title><rect x="1023.8" y="675.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.02%)</title><rect x="1023.8" y="659.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.02%)</title><rect x="1023.8" y="643.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1026.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.02%)</title><rect x="1024.0" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.02%)</title><rect x="1024.0" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 0.29%)</title><rect x="1024.3" y="675.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 0.28%)</title><rect x="1024.4" y="659.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1027.4" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.10%)</title><rect x="1024.4" y="643.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1027.4" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.02%)</title><rect x="1025.0" y="627.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1028.0" y="638.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.02%)</title><rect x="1025.3" y="627.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1028.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.17%)</title><rect x="1025.5" y="643.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1028.5" y="654.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="1025.5" y="627.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1028.5" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (13 samples, 0.14%)</title><rect x="1025.8" y="627.0" width="1.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1028.8" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.13%)</title><rect x="1025.9" y="611.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1028.9" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.13%)</title><rect x="1025.9" y="595.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1028.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.13%)</title><rect x="1025.9" y="579.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1028.9" y="590.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.13%)</title><rect x="1025.9" y="563.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1028.9" y="574.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.13%)</title><rect x="1025.9" y="547.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1028.9" y="558.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.04%)</title><rect x="1026.2" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.2" y="542.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.04%)</title><rect x="1026.2" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1029.2" y="526.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.02%)</title><rect x="1026.4" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1029.4" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.06%)</title><rect x="1026.7" y="531.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.22%)</title><rect x="1027.7" y="691.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.22%)</title><rect x="1027.7" y="675.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.22%)</title><rect x="1027.7" y="659.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.22%)</title><rect x="1027.7" y="643.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.20%)</title><rect x="1027.9" y="627.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.9" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.09%)</title><rect x="1027.9" y="611.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1030.9" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.04%)</title><rect x="1027.9" y="595.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1030.9" y="606.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="1028.4" y="595.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1031.4" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.12%)</title><rect x="1028.9" y="611.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1031.9" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.09%)</title><rect x="1029.3" y="595.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1032.3" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.09%)</title><rect x="1029.3" y="579.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1032.3" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.06%)</title><rect x="1029.6" y="563.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1032.6" y="574.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.06%)</title><rect x="1029.6" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1032.6" y="558.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.06%)</title><rect x="1029.6" y="531.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1032.6" y="542.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.05%)</title><rect x="1029.7" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1032.7" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.05%)</title><rect x="1029.7" y="499.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1032.7" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.05%)</title><rect x="1029.7" y="483.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1032.7" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (5 samples, 0.05%)</title><rect x="1030.3" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.3" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.05%)</title><rect x="1030.3" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.3" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$258/1575505991.run (5 samples, 0.05%)</title><rect x="1030.3" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.3" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (5 samples, 0.05%)</title><rect x="1030.3" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.3" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (5 samples, 0.05%)</title><rect x="1030.3" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.3" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (5 samples, 0.05%)</title><rect x="1030.3" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.3" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (5 samples, 0.05%)</title><rect x="1030.3" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.3" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.04%)</title><rect x="1030.3" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.3" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.03%)</title><rect x="1030.4" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.4" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.03%)</title><rect x="1030.4" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.4" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (3 samples, 0.03%)</title><rect x="1030.4" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.4" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="1030.4" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="1030.4" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (2 samples, 0.02%)</title><rect x="1030.4" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.4" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (2 samples, 0.02%)</title><rect x="1030.4" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.4" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.02%)</title><rect x="1030.4" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.4" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (2 samples, 0.02%)</title><rect x="1030.4" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.4" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (2 samples, 0.02%)</title><rect x="1030.4" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.4" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (2 samples, 0.02%)</title><rect x="1030.4" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.4" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (2 samples, 0.02%)</title><rect x="1030.4" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.4" y="430.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (2 samples, 0.02%)</title><rect x="1030.4" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.4" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (2 samples, 0.02%)</title><rect x="1030.4" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.4" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (2 samples, 0.02%)</title><rect x="1030.4" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1033.4" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 0.02%)</title><rect x="1030.4" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.4" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.02%)</title><rect x="1030.4" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.4" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.02%)</title><rect x="1030.4" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.4" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.02%)</title><rect x="1030.4" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.4" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.02%)</title><rect x="1030.4" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1033.4" y="302.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,240 samples, 13.19%)</title><rect x="1030.9" y="771.0" width="155.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.9" y="782.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (38 samples, 0.40%)</title><rect x="1032.2" y="755.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1032.4" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1035.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.02%)</title><rect x="1032.4" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (34 samples, 0.36%)</title><rect x="1032.7" y="739.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.7" y="750.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 0.33%)</title><rect x="1033.1" y="723.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1036.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.33%)</title><rect x="1033.1" y="707.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1036.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.33%)</title><rect x="1033.1" y="691.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1036.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (27 samples, 0.29%)</title><rect x="1033.6" y="675.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1036.6" y="686.0"></text>
</g>
<g>
<title>do_epoll_wait (27 samples, 0.29%)</title><rect x="1033.6" y="659.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1036.6" y="670.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.09%)</title><rect x="1033.6" y="643.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1036.6" y="654.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.04%)</title><rect x="1034.1" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1037.1" y="638.0"></text>
</g>
<g>
<title>ep_poll (19 samples, 0.20%)</title><rect x="1034.6" y="643.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.6" y="654.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (13 samples, 0.14%)</title><rect x="1034.6" y="627.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.6" y="638.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.10%)</title><rect x="1034.8" y="611.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.8" y="622.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.03%)</title><rect x="1035.6" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1038.6" y="606.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.06%)</title><rect x="1036.2" y="627.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1039.2" y="638.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.05%)</title><rect x="1036.3" y="611.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1039.3" y="622.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.04%)</title><rect x="1036.5" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1039.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,192 samples, 12.68%)</title><rect x="1037.0" y="755.0" width="149.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.0" y="766.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,186 samples, 12.62%)</title><rect x="1037.7" y="739.0" width="148.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1040.7" y="750.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,002 samples, 10.66%)</title><rect x="1037.7" y="723.0" width="125.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.7" y="734.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (941 samples, 10.01%)</title><rect x="1040.6" y="707.0" width="118.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.6" y="718.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (940 samples, 10.00%)</title><rect x="1040.7" y="691.0" width="118.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1043.7" y="702.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (924 samples, 9.83%)</title><rect x="1040.7" y="675.0" width="116.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.7" y="686.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.10%)</title><rect x="1040.9" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="1041.5" y="643.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="1041.5" y="627.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.07%)</title><rect x="1042.0" y="659.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.07%)</title><rect x="1042.0" y="643.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.03%)</title><rect x="1042.5" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/HttpService.entity (906 samples, 9.64%)</title><rect x="1042.9" y="659.0" width="113.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.9" y="670.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.entity (905 samples, 9.63%)</title><rect x="1043.0" y="643.0" width="113.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.0" y="654.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1332005802.linkToTargetMethod (3 samples, 0.03%)</title><rect x="1044.2" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2008432884.invoke (3 samples, 0.03%)</title><rect x="1044.2" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1438640388.invokeStatic (2 samples, 0.02%)</title><rect x="1044.4" y="595.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.02%)</title><rect x="1044.4" y="579.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.02%)</title><rect x="1044.4" y="563.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (12 samples, 0.13%)</title><rect x="1044.6" y="627.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.13%)</title><rect x="1044.6" y="611.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (12 samples, 0.13%)</title><rect x="1044.6" y="595.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1047.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (12 samples, 0.13%)</title><rect x="1044.6" y="579.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.07%)</title><rect x="1044.6" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1047.6" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (6 samples, 0.06%)</title><rect x="1044.6" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (5 samples, 0.05%)</title><rect x="1044.7" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.05%)</title><rect x="1044.7" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1047.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$87/1654631630.apply (5 samples, 0.05%)</title><rect x="1044.7" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.05%)</title><rect x="1044.7" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1047.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.04%)</title><rect x="1044.7" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1047.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.05%)</title><rect x="1045.5" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.04%)</title><rect x="1045.6" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1045.7" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1045.7" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (260 samples, 2.77%)</title><rect x="1046.1" y="627.0" width="32.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.1" y="638.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.04%)</title><rect x="1047.6" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="1047.6" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="1047.6" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.6" y="590.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.02%)</title><rect x="1047.8" y="563.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1050.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (240 samples, 2.55%)</title><rect x="1048.1" y="611.0" width="30.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.1" y="622.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.09%)</title><rect x="1048.4" y="595.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.04%)</title><rect x="1048.9" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.04%)</title><rect x="1048.9" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1051.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.04%)</title><rect x="1048.9" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (230 samples, 2.45%)</title><rect x="1049.4" y="595.0" width="28.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.4" y="606.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (230 samples, 2.45%)</title><rect x="1049.4" y="579.0" width="28.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1052.4" y="590.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (230 samples, 2.45%)</title><rect x="1049.4" y="563.0" width="28.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.4" y="574.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (229 samples, 2.44%)</title><rect x="1049.5" y="547.0" width="28.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.5" y="558.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.04%)</title><rect x="1049.9" y="531.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1052.9" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="1050.1" y="515.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1053.1" y="526.0"></text>
</g>
<g>
<title>__libc_send (220 samples, 2.34%)</title><rect x="1050.4" y="531.0" width="27.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1053.4" y="542.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (216 samples, 2.30%)</title><rect x="1050.9" y="515.0" width="27.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1053.9" y="526.0">e..</text>
</g>
<g>
<title>do_syscall_64 (216 samples, 2.30%)</title><rect x="1050.9" y="499.0" width="27.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1053.9" y="510.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (215 samples, 2.29%)</title><rect x="1051.0" y="483.0" width="27.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1054.0" y="494.0">_..</text>
</g>
<g>
<title>__sys_sendto (215 samples, 2.29%)</title><rect x="1051.0" y="467.0" width="27.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1054.0" y="478.0">_..</text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="1051.4" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1054.4" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (208 samples, 2.21%)</title><rect x="1051.8" y="451.0" width="26.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1054.8" y="462.0">s..</text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.04%)</title><rect x="1051.9" y="435.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1054.9" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.03%)</title><rect x="1052.0" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1055.0" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (203 samples, 2.16%)</title><rect x="1052.4" y="435.0" width="25.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.4" y="446.0">t..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="1052.5" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1055.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="1052.5" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1055.5" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (200 samples, 2.13%)</title><rect x="1052.8" y="419.0" width="25.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1055.8" y="430.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (175 samples, 1.86%)</title><rect x="1052.9" y="403.0" width="22.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1055.9" y="414.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (175 samples, 1.86%)</title><rect x="1052.9" y="387.0" width="22.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1055.9" y="398.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (159 samples, 1.69%)</title><rect x="1053.2" y="371.0" width="19.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1056.2" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (150 samples, 1.60%)</title><rect x="1053.5" y="355.0" width="18.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1056.5" y="366.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="1053.5" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1056.5" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="1053.5" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1056.5" y="334.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.04%)</title><rect x="1053.8" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1056.8" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.04%)</title><rect x="1053.8" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1056.8" y="334.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.03%)</title><rect x="1053.8" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1056.8" y="318.0"></text>
</g>
<g>
<title>ip_output (144 samples, 1.53%)</title><rect x="1054.3" y="339.0" width="18.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1057.3" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (138 samples, 1.47%)</title><rect x="1054.4" y="323.0" width="17.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1057.4" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.15%)</title><rect x="1055.3" y="307.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1058.3" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.07%)</title><rect x="1055.8" y="291.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1058.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.07%)</title><rect x="1055.8" y="275.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1058.8" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.03%)</title><rect x="1056.3" y="259.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1059.3" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="1056.8" y="291.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1059.8" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (117 samples, 1.24%)</title><rect x="1057.0" y="307.0" width="14.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1060.0" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (117 samples, 1.24%)</title><rect x="1057.0" y="291.0" width="14.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1060.0" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (113 samples, 1.20%)</title><rect x="1057.5" y="275.0" width="14.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1060.5" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (113 samples, 1.20%)</title><rect x="1057.5" y="259.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1060.5" y="270.0"></text>
</g>
<g>
<title>net_rx_action (109 samples, 1.16%)</title><rect x="1058.1" y="243.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1061.1" y="254.0"></text>
</g>
<g>
<title>process_backlog (106 samples, 1.13%)</title><rect x="1058.4" y="227.0" width="13.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1061.4" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (103 samples, 1.10%)</title><rect x="1058.8" y="211.0" width="12.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1061.8" y="222.0"></text>
</g>
<g>
<title>ip_rcv (102 samples, 1.09%)</title><rect x="1058.9" y="195.0" width="12.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1061.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (98 samples, 1.04%)</title><rect x="1059.1" y="179.0" width="12.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1062.1" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (97 samples, 1.03%)</title><rect x="1059.2" y="163.0" width="12.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1062.2" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (97 samples, 1.03%)</title><rect x="1059.2" y="147.0" width="12.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1062.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (97 samples, 1.03%)</title><rect x="1059.2" y="131.0" width="12.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1062.2" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.04%)</title><rect x="1059.7" y="115.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1062.7" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.03%)</title><rect x="1060.2" y="115.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1063.2" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.03%)</title><rect x="1060.2" y="99.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1063.2" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.02%)</title><rect x="1060.3" y="83.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1063.3" y="94.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (2 samples, 0.02%)</title><rect x="1060.3" y="67.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1063.3" y="78.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (85 samples, 0.90%)</title><rect x="1060.7" y="115.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.7" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (83 samples, 0.88%)</title><rect x="1060.9" y="99.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1063.9" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.09%)</title><rect x="1061.2" y="83.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1064.2" y="94.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.09%)</title><rect x="1061.2" y="67.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1064.2" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.09%)</title><rect x="1061.2" y="51.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1064.2" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (38 samples, 0.40%)</title><rect x="1062.2" y="83.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1065.2" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (36 samples, 0.38%)</title><rect x="1062.4" y="67.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1065.4" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.37%)</title><rect x="1062.6" y="51.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.6" y="62.0"></text>
</g>
<g>
<title>tcp_ack (32 samples, 0.34%)</title><rect x="1067.0" y="83.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1070.0" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.16%)</title><rect x="1067.5" y="67.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1070.5" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="1067.5" y="51.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1070.5" y="62.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.06%)</title><rect x="1067.7" y="51.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1070.7" y="62.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.06%)</title><rect x="1068.6" y="51.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1071.6" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.03%)</title><rect x="1069.5" y="67.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1072.5" y="78.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.03%)</title><rect x="1069.9" y="67.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1072.9" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.02%)</title><rect x="1070.7" y="67.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1073.7" y="78.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.02%)</title><rect x="1071.5" y="179.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1074.5" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.05%)</title><rect x="1071.7" y="323.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1074.7" y="334.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.04%)</title><rect x="1071.9" y="307.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1074.9" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (2 samples, 0.02%)</title><rect x="1072.1" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1075.1" y="302.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.02%)</title><rect x="1072.1" y="275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1075.1" y="286.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.02%)</title><rect x="1072.4" y="355.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1075.4" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="1072.4" y="339.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1075.4" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.03%)</title><rect x="1072.7" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1075.7" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.12%)</title><rect x="1073.1" y="371.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1076.1" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.11%)</title><rect x="1073.1" y="355.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1076.1" y="366.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.11%)</title><rect x="1073.1" y="339.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1076.1" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.07%)</title><rect x="1073.4" y="323.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1076.4" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="1074.5" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1077.5" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.02%)</title><rect x="1074.9" y="403.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1077.9" y="414.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.03%)</title><rect x="1075.1" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1078.1" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.03%)</title><rect x="1075.1" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1078.1" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.09%)</title><rect x="1075.5" y="403.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1078.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.06%)</title><rect x="1075.8" y="387.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1078.8" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.04%)</title><rect x="1076.0" y="371.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1079.0" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.04%)</title><rect x="1076.0" y="355.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1079.0" y="366.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.09%)</title><rect x="1076.8" y="403.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1079.8" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.07%)</title><rect x="1076.9" y="387.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1079.9" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="1077.4" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1080.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.04%)</title><rect x="1078.3" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="1078.3" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1081.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="1078.3" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.entity (88 samples, 0.94%)</title><rect x="1078.9" y="627.0" width="11.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1081.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.getAsync (80 samples, 0.85%)</title><rect x="1079.0" y="611.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (80 samples, 0.85%)</title><rect x="1079.0" y="595.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (80 samples, 0.85%)</title><rect x="1079.0" y="579.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1082.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (80 samples, 0.85%)</title><rect x="1079.0" y="563.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1082.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (77 samples, 0.82%)</title><rect x="1079.4" y="547.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (9 samples, 0.10%)</title><rect x="1079.4" y="531.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (9 samples, 0.10%)</title><rect x="1079.4" y="515.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1082.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (9 samples, 0.10%)</title><rect x="1079.4" y="499.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1082.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (9 samples, 0.10%)</title><rect x="1079.4" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1082.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (9 samples, 0.10%)</title><rect x="1079.4" y="467.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (68 samples, 0.72%)</title><rect x="1080.5" y="531.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (68 samples, 0.72%)</title><rect x="1080.5" y="515.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1083.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (68 samples, 0.72%)</title><rect x="1080.5" y="499.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (68 samples, 0.72%)</title><rect x="1080.5" y="483.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1083.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (68 samples, 0.72%)</title><rect x="1080.5" y="467.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.5" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.13%)</title><rect x="1080.7" y="451.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1083.7" y="462.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.03%)</title><rect x="1080.8" y="435.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1083.8" y="446.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (6 samples, 0.06%)</title><rect x="1081.2" y="435.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1084.2" y="446.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (54 samples, 0.57%)</title><rect x="1082.3" y="451.0" width="6.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1085.3" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (52 samples, 0.55%)</title><rect x="1082.5" y="435.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1085.5" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (52 samples, 0.55%)</title><rect x="1082.5" y="419.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1085.5" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (49 samples, 0.52%)</title><rect x="1082.9" y="403.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1085.9" y="414.0"></text>
</g>
<g>
<title>do_futex (47 samples, 0.50%)</title><rect x="1083.2" y="387.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1086.2" y="398.0"></text>
</g>
<g>
<title>futex_wake (47 samples, 0.50%)</title><rect x="1083.2" y="371.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.2" y="382.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="1083.5" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1086.5" y="366.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.05%)</title><rect x="1083.8" y="355.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1086.8" y="366.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.03%)</title><rect x="1084.0" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1087.0" y="350.0"></text>
</g>
<g>
<title>plist_del (2 samples, 0.02%)</title><rect x="1084.2" y="323.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1087.2" y="334.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.38%)</title><rect x="1084.5" y="355.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1087.5" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.38%)</title><rect x="1084.5" y="339.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1087.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.38%)</title><rect x="1084.5" y="323.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1087.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.putAsync (4 samples, 0.04%)</title><rect x="1089.1" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1092.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4 samples, 0.04%)</title><rect x="1089.1" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4 samples, 0.04%)</title><rect x="1089.1" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.04%)</title><rect x="1089.1" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (3 samples, 0.03%)</title><rect x="1089.6" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (10 samples, 0.11%)</title><rect x="1089.9" y="627.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (10 samples, 0.11%)</title><rect x="1089.9" y="611.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1090.3" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1090.3" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="1090.3" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="1090.6" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="1090.6" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (2 samples, 0.02%)</title><rect x="1090.9" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (2 samples, 0.02%)</title><rect x="1090.9" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (2 samples, 0.02%)</title><rect x="1090.9" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (8 samples, 0.09%)</title><rect x="1091.2" y="627.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1094.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (8 samples, 0.09%)</title><rect x="1091.2" y="611.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1094.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$29/905735620.apply (2 samples, 0.02%)</title><rect x="1091.9" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.02%)</title><rect x="1091.9" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.resolveGetProxyResult (44 samples, 0.47%)</title><rect x="1092.2" y="627.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.2" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.03%)</title><rect x="1092.2" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (2 samples, 0.02%)</title><rect x="1092.2" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (4 samples, 0.04%)</title><rect x="1092.6" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1092.6" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1092.7" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (32 samples, 0.34%)</title><rect x="1093.1" y="611.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (32 samples, 0.34%)</title><rect x="1093.1" y="595.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (31 samples, 0.33%)</title><rect x="1093.2" y="579.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (31 samples, 0.33%)</title><rect x="1093.2" y="563.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (24 samples, 0.26%)</title><rect x="1093.2" y="547.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (19 samples, 0.20%)</title><rect x="1093.3" y="531.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (19 samples, 0.20%)</title><rect x="1093.3" y="515.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$190/481289543.apply (15 samples, 0.16%)</title><rect x="1093.6" y="499.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.fromResponse (15 samples, 0.16%)</title><rect x="1093.6" y="483.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.07%)</title><rect x="1093.6" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.07%)</title><rect x="1093.6" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (3 samples, 0.03%)</title><rect x="1094.1" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.getDeadFlagTimeStampFromResponse (8 samples, 0.09%)</title><rect x="1094.5" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (8 samples, 0.09%)</title><rect x="1094.5" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (8 samples, 0.09%)</title><rect x="1094.5" y="435.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1094.6" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1094.6" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="1094.6" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="1095.0" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.03%)</title><rect x="1095.0" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$87/1654631630.apply (2 samples, 0.02%)</title><rect x="1095.5" y="499.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="1095.5" y="483.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.02%)</title><rect x="1095.5" y="467.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.02%)</title><rect x="1095.5" y="451.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.02%)</title><rect x="1095.5" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (2 samples, 0.02%)</title><rect x="1095.7" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (2 samples, 0.02%)</title><rect x="1095.7" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (2 samples, 0.02%)</title><rect x="1095.7" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$11/274773041.get (2 samples, 0.02%)</title><rect x="1095.7" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1095.7" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.7" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1095.7" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.07%)</title><rect x="1096.2" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (4 samples, 0.04%)</title><rect x="1096.6" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1099.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1096.6" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1096.6" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1099.6" y="510.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.04%)</title><rect x="1096.6" y="483.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1099.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (4 samples, 0.04%)</title><rect x="1097.1" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1097.1" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1097.1" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1100.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1097.1" y="563.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1100.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.04%)</title><rect x="1097.1" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parseOrDefault (26 samples, 0.28%)</title><rect x="1097.7" y="627.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parse (24 samples, 0.26%)</title><rect x="1098.0" y="611.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1101.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (3 samples, 0.03%)</title><rect x="1098.0" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (3 samples, 0.03%)</title><rect x="1098.0" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2 samples, 0.02%)</title><rect x="1098.1" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (21 samples, 0.22%)</title><rect x="1098.4" y="595.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (10 samples, 0.11%)</title><rect x="1098.6" y="579.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (9 samples, 0.10%)</title><rect x="1098.7" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1101.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (9 samples, 0.10%)</title><rect x="1098.7" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (9 samples, 0.10%)</title><rect x="1098.7" y="531.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (9 samples, 0.10%)</title><rect x="1098.7" y="515.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1101.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.10%)</title><rect x="1098.7" y="499.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1101.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.10%)</title><rect x="1098.7" y="483.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1101.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (5 samples, 0.05%)</title><rect x="1099.9" y="579.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.9" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.04%)</title><rect x="1100.5" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1103.5" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.04%)</title><rect x="1100.5" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1103.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.04%)</title><rect x="1100.5" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.04%)</title><rect x="1100.5" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.04%)</title><rect x="1100.5" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1103.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxyReplicas (443 samples, 4.71%)</title><rect x="1101.0" y="627.0" width="55.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.0" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxy (435 samples, 4.63%)</title><rect x="1102.0" y="611.0" width="54.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.0" y="622.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (435 samples, 4.63%)</title><rect x="1102.0" y="595.0" width="54.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.0" y="606.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (435 samples, 4.63%)</title><rect x="1102.0" y="579.0" width="54.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.0" y="590.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.06%)</title><rect x="1102.4" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.06%)</title><rect x="1102.4" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.06%)</title><rect x="1102.4" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (85 samples, 0.90%)</title><rect x="1103.1" y="563.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.1" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (12 samples, 0.13%)</title><rect x="1105.4" y="547.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1108.4" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.11%)</title><rect x="1105.6" y="531.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1108.6" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.11%)</title><rect x="1105.6" y="515.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1108.6" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (10 samples, 0.11%)</title><rect x="1105.6" y="499.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1108.6" y="510.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="1105.6" y="483.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1108.6" y="494.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (8 samples, 0.09%)</title><rect x="1105.9" y="483.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1108.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (55 samples, 0.59%)</title><rect x="1106.9" y="547.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.9" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (27 samples, 0.29%)</title><rect x="1108.3" y="531.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1111.3" y="542.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="1108.5" y="515.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1111.5" y="526.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.02%)</title><rect x="1108.9" y="515.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1111.9" y="526.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (2 samples, 0.02%)</title><rect x="1109.1" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1112.1" y="526.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (18 samples, 0.19%)</title><rect x="1109.4" y="515.0" width="2.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1112.4" y="526.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (3 samples, 0.03%)</title><rect x="1111.2" y="499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1114.2" y="510.0"></text>
</g>
<g>
<title>__libc_recv (15 samples, 0.16%)</title><rect x="1111.7" y="531.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1114.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.13%)</title><rect x="1112.0" y="515.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1115.0" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.13%)</title><rect x="1112.0" y="499.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1115.0" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.12%)</title><rect x="1112.0" y="483.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1115.0" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.11%)</title><rect x="1112.2" y="467.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1115.2" y="478.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (9 samples, 0.10%)</title><rect x="1112.2" y="451.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1115.2" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 0.10%)</title><rect x="1112.2" y="435.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1115.2" y="446.0"></text>
</g>
<g>
<title>sk_wait_data (6 samples, 0.06%)</title><rect x="1112.4" y="419.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1115.4" y="430.0"></text>
</g>
<g>
<title>wait_woken (4 samples, 0.04%)</title><rect x="1112.7" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1115.7" y="414.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.04%)</title><rect x="1112.7" y="387.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1115.7" y="398.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="1113.5" y="531.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1116.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (66 samples, 0.70%)</title><rect x="1113.8" y="563.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.05%)</title><rect x="1114.2" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.05%)</title><rect x="1114.2" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.05%)</title><rect x="1114.2" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.04%)</title><rect x="1114.2" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.04%)</title><rect x="1114.2" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.2" y="494.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.04%)</title><rect x="1114.2" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.18%)</title><rect x="1114.9" y="547.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (5 samples, 0.05%)</title><rect x="1115.9" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.04%)</title><rect x="1116.6" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1116.7" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (21 samples, 0.22%)</title><rect x="1117.1" y="547.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.1" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1117.2" y="531.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1120.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.18%)</title><rect x="1117.6" y="531.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.6" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.18%)</title><rect x="1117.6" y="515.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1119.7" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (5 samples, 0.05%)</title><rect x="1120.1" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.1" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.02%)</title><rect x="1120.4" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (11 samples, 0.12%)</title><rect x="1120.7" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="1121.6" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="1121.6" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.6" y="526.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1121.8" y="499.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1124.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (20 samples, 0.21%)</title><rect x="1122.1" y="563.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.06%)</title><rect x="1124.6" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.04%)</title><rect x="1124.8" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.04%)</title><rect x="1124.8" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (29 samples, 0.31%)</title><rect x="1125.5" y="563.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.5" y="574.0"></text>
</g>
<g>
<title>setsockopt (29 samples, 0.31%)</title><rect x="1125.5" y="547.0" width="3.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1128.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.27%)</title><rect x="1126.0" y="531.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1129.0" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.27%)</title><rect x="1126.0" y="515.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1129.0" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (23 samples, 0.24%)</title><rect x="1126.2" y="499.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1129.2" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (22 samples, 0.23%)</title><rect x="1126.3" y="483.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1129.3" y="494.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="1126.9" y="467.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1129.9" y="478.0"></text>
</g>
<g>
<title>sock_setsockopt (12 samples, 0.13%)</title><rect x="1127.2" y="467.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1130.2" y="478.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.03%)</title><rect x="1127.4" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1130.4" y="462.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="1127.7" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1130.7" y="462.0"></text>
</g>
<g>
<title>sock_set_timeout (6 samples, 0.06%)</title><rect x="1128.0" y="451.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1131.0" y="462.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.02%)</title><rect x="1128.5" y="435.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1131.5" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.02%)</title><rect x="1128.5" y="419.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1131.5" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.03%)</title><rect x="1128.7" y="467.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1131.7" y="478.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="1128.7" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1131.7" y="462.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="1128.9" y="435.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1131.9" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (212 samples, 2.26%)</title><rect x="1129.1" y="563.0" width="26.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.1" y="574.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (6 samples, 0.06%)</title><rect x="1129.2" y="547.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1132.2" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.03%)</title><rect x="1129.6" y="531.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1132.6" y="542.0"></text>
</g>
<g>
<title>__libc_send (204 samples, 2.17%)</title><rect x="1130.0" y="547.0" width="25.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1133.0" y="558.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (204 samples, 2.17%)</title><rect x="1130.0" y="531.0" width="25.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1133.0" y="542.0">e..</text>
</g>
<g>
<title>do_syscall_64 (204 samples, 2.17%)</title><rect x="1130.0" y="515.0" width="25.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1133.0" y="526.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (203 samples, 2.16%)</title><rect x="1130.1" y="499.0" width="25.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1133.1" y="510.0">_..</text>
</g>
<g>
<title>__sys_sendto (203 samples, 2.16%)</title><rect x="1130.1" y="483.0" width="25.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1133.1" y="494.0">_..</text>
</g>
<g>
<title>sock_sendmsg (201 samples, 2.14%)</title><rect x="1130.4" y="467.0" width="25.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1133.4" y="478.0">s..</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (2 samples, 0.02%)</title><rect x="1130.6" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1133.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (196 samples, 2.09%)</title><rect x="1131.0" y="451.0" width="24.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1134.0" y="462.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (195 samples, 2.07%)</title><rect x="1131.1" y="435.0" width="24.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1134.1" y="446.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (159 samples, 1.69%)</title><rect x="1132.2" y="419.0" width="20.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1135.2" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (158 samples, 1.68%)</title><rect x="1132.4" y="403.0" width="19.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1135.4" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (148 samples, 1.57%)</title><rect x="1132.6" y="387.0" width="18.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1135.6" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (134 samples, 1.43%)</title><rect x="1133.3" y="371.0" width="16.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1136.3" y="382.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.03%)</title><rect x="1133.4" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1136.4" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="1133.4" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1136.4" y="350.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.03%)</title><rect x="1133.4" y="323.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1136.4" y="334.0"></text>
</g>
<g>
<title>ip_output (130 samples, 1.38%)</title><rect x="1133.8" y="355.0" width="16.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1136.8" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (125 samples, 1.33%)</title><rect x="1134.1" y="339.0" width="15.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1137.1" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.06%)</title><rect x="1134.5" y="323.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.5" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.04%)</title><rect x="1134.8" y="307.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1137.8" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.04%)</title><rect x="1134.8" y="291.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.8" y="302.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.02%)</title><rect x="1135.0" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1138.0" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.02%)</title><rect x="1135.0" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1138.0" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="1135.0" y="243.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1138.0" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (116 samples, 1.23%)</title><rect x="1135.3" y="323.0" width="14.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1138.3" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (116 samples, 1.23%)</title><rect x="1135.3" y="307.0" width="14.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1138.3" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (114 samples, 1.21%)</title><rect x="1135.5" y="291.0" width="14.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1138.5" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (114 samples, 1.21%)</title><rect x="1135.5" y="275.0" width="14.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1138.5" y="286.0"></text>
</g>
<g>
<title>net_rx_action (113 samples, 1.20%)</title><rect x="1135.6" y="259.0" width="14.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1138.6" y="270.0"></text>
</g>
<g>
<title>process_backlog (110 samples, 1.17%)</title><rect x="1136.0" y="243.0" width="13.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1139.0" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (107 samples, 1.14%)</title><rect x="1136.4" y="227.0" width="13.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1139.4" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.02%)</title><rect x="1136.6" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1139.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv (103 samples, 1.10%)</title><rect x="1136.9" y="211.0" width="12.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.9" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (102 samples, 1.09%)</title><rect x="1136.9" y="195.0" width="12.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (101 samples, 1.07%)</title><rect x="1137.0" y="179.0" width="12.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1140.0" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (101 samples, 1.07%)</title><rect x="1137.0" y="163.0" width="12.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1140.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (100 samples, 1.06%)</title><rect x="1137.1" y="147.0" width="12.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1140.1" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.03%)</title><rect x="1137.6" y="131.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1140.6" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.05%)</title><rect x="1138.1" y="131.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1141.1" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.05%)</title><rect x="1138.1" y="115.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1141.1" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (5 samples, 0.05%)</title><rect x="1138.1" y="99.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1141.1" y="110.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (5 samples, 0.05%)</title><rect x="1138.1" y="83.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1141.1" y="94.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.02%)</title><rect x="1138.3" y="67.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1141.3" y="78.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (87 samples, 0.93%)</title><rect x="1138.8" y="131.0" width="10.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1141.8" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (87 samples, 0.93%)</title><rect x="1138.8" y="115.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1141.8" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (53 samples, 0.56%)</title><rect x="1139.4" y="99.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1142.4" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (49 samples, 0.52%)</title><rect x="1139.9" y="83.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1142.9" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (49 samples, 0.52%)</title><rect x="1139.9" y="67.0" width="6.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1142.9" y="78.0"></text>
</g>
<g>
<title>tcp_ack (26 samples, 0.28%)</title><rect x="1146.1" y="99.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1149.1" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.15%)</title><rect x="1146.4" y="83.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1149.4" y="94.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.05%)</title><rect x="1146.4" y="67.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1149.4" y="78.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.10%)</title><rect x="1147.1" y="67.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1150.1" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.03%)</title><rect x="1148.3" y="83.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1151.3" y="94.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.03%)</title><rect x="1148.7" y="83.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1151.7" y="94.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.03%)</title><rect x="1150.1" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.1" y="382.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.03%)</title><rect x="1150.1" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1153.1" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.03%)</title><rect x="1150.8" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.8" y="382.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="1151.2" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1154.2" y="398.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="1151.2" y="371.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1154.2" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.06%)</title><rect x="1151.5" y="387.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.5" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="1151.8" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1154.8" y="382.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="1151.8" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1154.8" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.04%)</title><rect x="1152.2" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1155.2" y="430.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.03%)</title><rect x="1152.3" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1155.3" y="414.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.04%)</title><rect x="1152.7" y="419.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1155.7" y="430.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.04%)</title><rect x="1152.7" y="403.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1155.7" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.09%)</title><rect x="1153.2" y="419.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1156.2" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.09%)</title><rect x="1153.2" y="403.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1156.2" y="414.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.05%)</title><rect x="1153.6" y="387.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1156.6" y="398.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.03%)</title><rect x="1154.2" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1157.2" y="430.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.02%)</title><rect x="1154.6" y="419.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.6" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.05%)</title><rect x="1154.8" y="419.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.8" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.04%)</title><rect x="1155.0" y="403.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1158.0" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="1155.2" y="387.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1158.2" y="398.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (4 samples, 0.04%)</title><rect x="1155.7" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1158.7" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.wait (2 samples, 0.02%)</title><rect x="1156.0" y="547.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.0" y="558.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.03%)</title><rect x="1156.2" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1159.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.05%)</title><rect x="1156.7" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.05%)</title><rect x="1156.7" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.7" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.04%)</title><rect x="1156.9" y="643.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1159.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.04%)</title><rect x="1156.9" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.04%)</title><rect x="1156.9" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.12%)</title><rect x="1157.4" y="675.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.12%)</title><rect x="1157.4" y="659.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.12%)</title><rect x="1157.4" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.4" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (3 samples, 0.03%)</title><rect x="1157.6" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.6" y="638.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.06%)</title><rect x="1158.0" y="627.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1161.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22 samples, 0.23%)</title><rect x="1158.7" y="707.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1159.0" y="691.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1159.0" y="675.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1159.0" y="659.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="1159.0" y="643.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.14%)</title><rect x="1159.2" y="691.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1162.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.14%)</title><rect x="1159.2" y="675.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.05%)</title><rect x="1160.9" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.04%)</title><rect x="1161.5" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.13%)</title><rect x="1162.0" y="707.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.12%)</title><rect x="1162.1" y="691.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (183 samples, 1.95%)</title><rect x="1163.6" y="723.0" width="23.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.6" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (180 samples, 1.92%)</title><rect x="1164.0" y="707.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.0" y="718.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (27 samples, 0.29%)</title><rect x="1164.5" y="691.0" width="3.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1167.5" y="702.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (2 samples, 0.02%)</title><rect x="1164.5" y="675.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1167.5" y="686.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (5 samples, 0.05%)</title><rect x="1165.1" y="675.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.1" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.15%)</title><rect x="1165.9" y="675.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1168.9" y="686.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (2 samples, 0.02%)</title><rect x="1166.8" y="659.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.8" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.05%)</title><rect x="1167.0" y="659.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1170.0" y="670.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (4 samples, 0.04%)</title><rect x="1167.2" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.2" y="654.0"></text>
</g>
<g>
<title>__libc_recv (143 samples, 1.52%)</title><rect x="1167.9" y="691.0" width="18.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1170.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (134 samples, 1.43%)</title><rect x="1169.0" y="675.0" width="16.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (134 samples, 1.43%)</title><rect x="1169.0" y="659.0" width="16.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (130 samples, 1.38%)</title><rect x="1169.5" y="643.0" width="16.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.5" y="654.0"></text>
</g>
<g>
<title>__sys_recvfrom (130 samples, 1.38%)</title><rect x="1169.5" y="627.0" width="16.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1172.5" y="638.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.02%)</title><rect x="1169.8" y="611.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.8" y="622.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (110 samples, 1.17%)</title><rect x="1170.0" y="611.0" width="13.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1173.0" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (107 samples, 1.14%)</title><rect x="1170.4" y="595.0" width="13.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1173.4" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.16%)</title><rect x="1172.9" y="579.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1175.9" y="590.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.13%)</title><rect x="1173.2" y="563.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1176.2" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (12 samples, 0.13%)</title><rect x="1173.2" y="547.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.2" y="558.0"></text>
</g>
<g>
<title>dst_release (8 samples, 0.09%)</title><rect x="1173.2" y="531.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.2" y="542.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.04%)</title><rect x="1174.2" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1177.2" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="1174.8" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1177.8" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (50 samples, 0.53%)</title><rect x="1175.6" y="579.0" width="6.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1178.6" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (48 samples, 0.51%)</title><rect x="1175.8" y="563.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1178.8" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (19 samples, 0.20%)</title><rect x="1177.4" y="547.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1180.4" y="558.0"></text>
</g>
<g>
<title>copyout (16 samples, 0.17%)</title><rect x="1177.8" y="531.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1180.8" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_string (16 samples, 0.17%)</title><rect x="1177.8" y="515.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1180.8" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (16 samples, 0.17%)</title><rect x="1179.8" y="547.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.8" y="558.0"></text>
</g>
<g>
<title>__check_object_size (16 samples, 0.17%)</title><rect x="1179.8" y="531.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1182.8" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.06%)</title><rect x="1181.1" y="515.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1184.1" y="526.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.04%)</title><rect x="1181.8" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1184.8" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (12 samples, 0.13%)</title><rect x="1182.3" y="579.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1185.3" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (9 samples, 0.10%)</title><rect x="1182.7" y="563.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1185.7" y="574.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.09%)</title><rect x="1182.8" y="547.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1185.8" y="558.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.05%)</title><rect x="1183.2" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.2" y="542.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.06%)</title><rect x="1183.8" y="611.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.8" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.05%)</title><rect x="1184.0" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1187.0" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.03%)</title><rect x="1184.2" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1187.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.11%)</title><rect x="1184.6" y="611.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1187.6" y="622.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.11%)</title><rect x="1184.6" y="595.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1187.6" y="606.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.06%)</title><rect x="1185.1" y="579.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1188.1" y="590.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.02%)</title><rect x="1186.0" y="691.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1189.0" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.03%)</title><rect x="1186.2" y="691.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1189.2" y="702.0"></text>
</g>
<g>
<title>start_thread (27 samples, 0.29%)</title><rect x="1186.6" y="771.0" width="3.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1189.6" y="782.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (27 samples, 0.29%)</title><rect x="1186.6" y="755.0" width="3.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1189.6" y="766.0"></text>
</g>
<g>
<title>Thread::call_run() (27 samples, 0.29%)</title><rect x="1186.6" y="739.0" width="3.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.6" y="750.0"></text>
</g>
<g>
<title>GangWorker::loop() (18 samples, 0.19%)</title><rect x="1186.6" y="723.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.6" y="734.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (13 samples, 0.14%)</title><rect x="1186.7" y="707.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.7" y="718.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.10%)</title><rect x="1186.7" y="691.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.7" y="702.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.09%)</title><rect x="1186.9" y="675.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1189.9" y="686.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="1187.9" y="691.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.9" y="702.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="1187.9" y="675.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.9" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.02%)</title><rect x="1187.9" y="659.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.9" y="670.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 0.02%)</title><rect x="1187.9" y="643.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.9" y="654.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.02%)</title><rect x="1187.9" y="627.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.9" y="638.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.02%)</title><rect x="1187.9" y="611.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.9" y="622.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="1188.1" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.1" y="702.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.02%)</title><rect x="1188.1" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="686.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.03%)</title><rect x="1188.5" y="707.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.5" y="718.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.03%)</title><rect x="1188.5" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.5" y="702.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (3 samples, 0.03%)</title><rect x="1188.5" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.5" y="686.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.03%)</title><rect x="1188.5" y="659.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.5" y="670.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (3 samples, 0.03%)</title><rect x="1188.5" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.5" y="654.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (8 samples, 0.09%)</title><rect x="1188.9" y="723.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.9" y="734.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (8 samples, 0.09%)</title><rect x="1188.9" y="707.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.9" y="718.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (8 samples, 0.09%)</title><rect x="1188.9" y="691.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.9" y="702.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 0.09%)</title><rect x="1188.9" y="675.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.9" y="686.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (8 samples, 0.09%)</title><rect x="1188.9" y="659.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.9" y="670.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (4 samples, 0.04%)</title><rect x="1188.9" y="643.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.03%)</title><rect x="1189.0" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="638.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.02%)</title><rect x="1189.4" y="643.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
</g>
</svg>
