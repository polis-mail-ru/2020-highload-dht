<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="885"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="885"> </text>
<g id="frames">
<g>
<title>all (21,221 samples, 100.00%)</title><rect x="10.0" y="851.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="862.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.08%)</title><rect x="10.3" y="835.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.3" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (17 samples, 0.08%)</title><rect x="10.3" y="819.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (17 samples, 0.08%)</title><rect x="10.3" y="803.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (17 samples, 0.08%)</title><rect x="10.3" y="787.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.3" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (14 samples, 0.07%)</title><rect x="10.5" y="771.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.5" y="782.0"></text>
</g>
<g>
<title>[no_Java_frame] (6 samples, 0.03%)</title><rect x="11.3" y="835.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.3" y="846.0"></text>
</g>
<g>
<title>[not_walkable_Java] (34 samples, 0.16%)</title><rect x="11.6" y="835.0" width="1.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="14.6" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.04%)</title><rect x="11.8" y="819.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.8" y="830.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (5 samples, 0.02%)</title><rect x="12.0" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.0" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (12 samples, 0.06%)</title><rect x="12.3" y="819.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.3" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (11 samples, 0.05%)</title><rect x="12.3" y="803.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.3" y="814.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.02%)</title><rect x="12.3" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.3" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.02%)</title><rect x="12.6" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="798.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (5 samples, 0.02%)</title><rect x="12.6" y="771.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.04%)</title><rect x="12.9" y="819.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.9" y="830.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (6 samples, 0.03%)</title><rect x="13.1" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.03%)</title><rect x="13.5" y="835.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="16.5" y="846.0"></text>
</g>
<g>
<title>[unknown_Java] (22 samples, 0.10%)</title><rect x="13.9" y="835.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="16.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.03%)</title><rect x="13.9" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.9" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (5 samples, 0.02%)</title><rect x="14.0" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.0" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.02%)</title><rect x="14.4" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.4" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.02%)</title><rect x="14.8" y="819.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="17.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="14.8" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="17.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="14.8" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.02%)</title><rect x="14.8" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="17.8" y="782.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.02%)</title><rect x="14.8" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="17.8" y="766.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.02%)</title><rect x="14.8" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="17.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (6,463 samples, 30.46%)</title><rect x="15.3" y="835.0" width="359.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.3" y="846.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,463 samples, 30.46%)</title><rect x="15.3" y="819.0" width="359.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.3" y="830.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,463 samples, 30.46%)</title><rect x="15.3" y="803.0" width="359.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.3" y="814.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5,165 samples, 24.34%)</title><rect x="15.5" y="787.0" width="287.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.5" y="798.0">java/util/concurrent/CompletableFuture$..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,706 samples, 17.46%)</title><rect x="16.6" y="771.0" width="206.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.6" y="782.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (188 samples, 0.89%)</title><rect x="16.9" y="755.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (98 samples, 0.46%)</title><rect x="16.9" y="739.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (98 samples, 0.46%)</title><rect x="16.9" y="723.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$102/1868583790.apply (90 samples, 0.42%)</title><rect x="22.3" y="739.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$putAsync$5 (90 samples, 0.42%)</title><rect x="22.3" y="723.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (86 samples, 0.41%)</title><rect x="22.6" y="707.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.04%)</title><rect x="25.8" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.8" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.04%)</title><rect x="25.8" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.8" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.04%)</title><rect x="25.8" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.8" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.04%)</title><rect x="25.8" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.8" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.04%)</title><rect x="25.8" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.8" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.04%)</title><rect x="25.8" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.8" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.03%)</title><rect x="25.9" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="28.9" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.03%)</title><rect x="25.9" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="28.9" y="590.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.02%)</title><rect x="26.0" y="563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.0" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.02%)</title><rect x="26.0" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (9 samples, 0.04%)</title><rect x="26.3" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.04%)</title><rect x="26.3" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.3" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.02%)</title><rect x="26.3" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.3" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.04%)</title><rect x="26.8" y="691.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="29.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3,512 samples, 16.55%)</title><rect x="27.3" y="755.0" width="195.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.3" y="766.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3,509 samples, 16.54%)</title><rect x="27.5" y="739.0" width="195.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.5" y="750.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13 samples, 0.06%)</title><rect x="27.5" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (13 samples, 0.06%)</title><rect x="27.5" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$104/1056165277.accept (3,496 samples, 16.47%)</title><rect x="28.2" y="723.0" width="194.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.2" y="734.0">ru/mail/polis/service/s3p..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (3,496 samples, 16.47%)</title><rect x="28.2" y="707.0" width="194.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.2" y="718.0">ru/mail/polis/service/s3p..</text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (3,496 samples, 16.47%)</title><rect x="28.2" y="691.0" width="194.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.2" y="702.0">ru/mail/polis/util/Utilit..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,495 samples, 16.47%)</title><rect x="28.2" y="675.0" width="194.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.2" y="686.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,130 samples, 14.75%)</title><rect x="31.9" y="659.0" width="174.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.9" y="670.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (142 samples, 0.67%)</title><rect x="32.4" y="643.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.4" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="36.4" y="627.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="39.4" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.04%)</title><rect x="37.0" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.0" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.04%)</title><rect x="37.0" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="40.0" y="622.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.03%)</title><rect x="37.1" y="595.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="40.1" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.03%)</title><rect x="37.1" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="40.1" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.02%)</title><rect x="37.1" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="40.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (50 samples, 0.24%)</title><rect x="37.5" y="627.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.5" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (50 samples, 0.24%)</title><rect x="37.5" y="611.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (50 samples, 0.24%)</title><rect x="37.5" y="595.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,980 samples, 14.04%)</title><rect x="40.2" y="643.0" width="165.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.2" y="654.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.03%)</title><rect x="40.2" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="43.2" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="40.2" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="43.2" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="40.2" y="595.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="43.2" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.02%)</title><rect x="40.2" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="43.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,972 samples, 14.00%)</title><rect x="40.6" y="627.0" width="165.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.6" y="638.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2,954 samples, 13.92%)</title><rect x="41.6" y="611.0" width="164.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.6" y="622.0">one/nio/net/Session$A..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2,936 samples, 13.84%)</title><rect x="42.6" y="595.0" width="163.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.6" y="606.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (85 samples, 0.40%)</title><rect x="43.3" y="579.0" width="4.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="46.3" y="590.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (9 samples, 0.04%)</title><rect x="44.3" y="563.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="47.3" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (23 samples, 0.11%)</title><rect x="45.4" y="563.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="48.4" y="574.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (6 samples, 0.03%)</title><rect x="45.8" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="48.8" y="558.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (10 samples, 0.05%)</title><rect x="46.1" y="547.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="49.1" y="558.0"></text>
</g>
<g>
<title>jni_GetIntField (19 samples, 0.09%)</title><rect x="46.7" y="563.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="49.7" y="574.0"></text>
</g>
<g>
<title>__libc_send (2,829 samples, 13.33%)</title><rect x="48.0" y="579.0" width="157.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="51.0" y="590.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,793 samples, 13.16%)</title><rect x="50.0" y="563.0" width="155.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="53.0" y="574.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (2,793 samples, 13.16%)</title><rect x="50.0" y="547.0" width="155.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.0" y="558.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (2,761 samples, 13.01%)</title><rect x="51.8" y="531.0" width="153.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.8" y="542.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (2,756 samples, 12.99%)</title><rect x="52.1" y="515.0" width="153.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="55.1" y="526.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (6 samples, 0.03%)</title><rect x="53.1" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="56.1" y="510.0"></text>
</g>
<g>
<title>sock_sendmsg (2,691 samples, 12.68%)</title><rect x="53.6" y="499.0" width="149.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="56.6" y="510.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (17 samples, 0.08%)</title><rect x="54.0" y="483.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="57.0" y="494.0"></text>
</g>
<g>
<title>inet_send_prepare (8 samples, 0.04%)</title><rect x="54.5" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="57.5" y="478.0"></text>
</g>
<g>
<title>security_socket_sendmsg (26 samples, 0.12%)</title><rect x="54.9" y="483.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="57.9" y="494.0"></text>
</g>
<g>
<title>sock_has_perm (21 samples, 0.10%)</title><rect x="55.2" y="467.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="58.2" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (2,641 samples, 12.45%)</title><rect x="56.4" y="483.0" width="146.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.4" y="494.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (15 samples, 0.07%)</title><rect x="56.7" y="467.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (14 samples, 0.07%)</title><rect x="56.8" y="451.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="59.8" y="462.0"></text>
</g>
<g>
<title>release_sock (10 samples, 0.05%)</title><rect x="57.5" y="467.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="60.5" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2,610 samples, 12.30%)</title><rect x="58.1" y="467.0" width="145.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="61.1" y="478.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (9 samples, 0.04%)</title><rect x="63.3" y="451.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="66.3" y="462.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.03%)</title><rect x="63.4" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="66.4" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2,177 samples, 10.26%)</title><rect x="63.8" y="451.0" width="121.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.8" y="462.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_write_xmit (2,170 samples, 10.23%)</title><rect x="64.2" y="435.0" width="120.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="67.2" y="446.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (2,010 samples, 9.47%)</title><rect x="67.3" y="419.0" width="111.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.3" y="430.0">__tcp_transmi..</text>
</g>
<g>
<title>__ip_queue_xmit (1,875 samples, 8.84%)</title><rect x="69.4" y="403.0" width="104.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="72.4" y="414.0">__ip_queue_x..</text>
</g>
<g>
<title>__sk_dst_check (14 samples, 0.07%)</title><rect x="70.3" y="387.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="73.3" y="398.0"></text>
</g>
<g>
<title>ipv4_dst_check (12 samples, 0.06%)</title><rect x="70.4" y="371.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.4" y="382.0"></text>
</g>
<g>
<title>ip_local_out (38 samples, 0.18%)</title><rect x="71.1" y="387.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="74.1" y="398.0"></text>
</g>
<g>
<title>__ip_local_out (38 samples, 0.18%)</title><rect x="71.1" y="371.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="74.1" y="382.0"></text>
</g>
<g>
<title>ip_send_check (25 samples, 0.12%)</title><rect x="71.4" y="355.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="74.4" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.03%)</title><rect x="72.8" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="75.8" y="366.0"></text>
</g>
<g>
<title>ip_output (1,807 samples, 8.52%)</title><rect x="73.2" y="387.0" width="100.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.2" y="398.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (8 samples, 0.04%)</title><rect x="74.1" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="77.1" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (1,754 samples, 8.27%)</title><rect x="74.5" y="371.0" width="97.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="77.5" y="382.0">ip_finish_o..</text>
</g>
<g>
<title>__dev_queue_xmit (92 samples, 0.43%)</title><rect x="76.7" y="355.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="79.7" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (51 samples, 0.24%)</title><rect x="78.1" y="339.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.1" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (49 samples, 0.23%)</title><rect x="78.2" y="323.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.2" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (10 samples, 0.05%)</title><rect x="78.7" y="307.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="81.7" y="318.0"></text>
</g>
<g>
<title>netif_rx (20 samples, 0.09%)</title><rect x="79.2" y="307.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="82.2" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (19 samples, 0.09%)</title><rect x="79.3" y="291.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="82.3" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (18 samples, 0.08%)</title><rect x="79.3" y="275.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="82.3" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (7 samples, 0.03%)</title><rect x="80.6" y="307.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="83.6" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (11 samples, 0.05%)</title><rect x="81.0" y="339.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="84.0" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (7 samples, 0.03%)</title><rect x="81.2" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="84.2" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,622 samples, 7.64%)</title><rect x="81.8" y="355.0" width="90.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="84.8" y="366.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (1,617 samples, 7.62%)</title><rect x="82.1" y="339.0" width="89.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.1" y="350.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (1,588 samples, 7.48%)</title><rect x="83.7" y="323.0" width="88.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="86.7" y="334.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (1,588 samples, 7.48%)</title><rect x="83.7" y="307.0" width="88.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="86.7" y="318.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (1,556 samples, 7.33%)</title><rect x="85.5" y="291.0" width="86.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="88.5" y="302.0">net_rx_act..</text>
</g>
<g>
<title>__kfree_skb_flush (9 samples, 0.04%)</title><rect x="86.4" y="275.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="89.4" y="286.0"></text>
</g>
<g>
<title>process_backlog (1,530 samples, 7.21%)</title><rect x="87.0" y="275.0" width="85.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="90.0" y="286.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (1,511 samples, 7.12%)</title><rect x="88.0" y="259.0" width="84.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.0" y="270.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (21 samples, 0.10%)</title><rect x="88.2" y="243.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1,486 samples, 7.00%)</title><rect x="89.4" y="243.0" width="82.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="92.4" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1,464 samples, 6.90%)</title><rect x="89.8" y="227.0" width="81.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.8" y="238.0">ip_local_..</text>
</g>
<g>
<title>ip_local_deliver_finish (1,452 samples, 6.84%)</title><rect x="90.5" y="211.0" width="80.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="93.5" y="222.0">ip_local_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1,448 samples, 6.82%)</title><rect x="90.7" y="195.0" width="80.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="93.7" y="206.0">ip_protoc..</text>
</g>
<g>
<title>raw_local_deliver (8 samples, 0.04%)</title><rect x="91.9" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="94.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1,419 samples, 6.69%)</title><rect x="92.3" y="179.0" width="78.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="95.3" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (45 samples, 0.21%)</title><rect x="96.3" y="163.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="99.3" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (37 samples, 0.17%)</title><rect x="98.9" y="163.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="101.9" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (34 samples, 0.16%)</title><rect x="99.0" y="147.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="102.0" y="158.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (32 samples, 0.15%)</title><rect x="99.1" y="131.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="102.1" y="142.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (12 samples, 0.06%)</title><rect x="100.2" y="115.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="103.2" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1,257 samples, 5.92%)</title><rect x="101.0" y="163.0" width="69.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="104.0" y="174.0">tcp_v4_..</text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.02%)</title><rect x="101.3" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.3" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (1,246 samples, 5.87%)</title><rect x="101.6" y="147.0" width="69.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="104.6" y="158.0">tcp_rcv..</text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.03%)</title><rect x="103.8" y="131.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="106.8" y="142.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.02%)</title><rect x="103.9" y="115.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.9" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (698 samples, 3.29%)</title><rect x="104.2" y="131.0" width="38.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="107.2" y="142.0">soc..</text>
</g>
<g>
<title>__wake_up_common_lock (662 samples, 3.12%)</title><rect x="106.2" y="115.0" width="36.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="109.2" y="126.0">__w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (658 samples, 3.10%)</title><rect x="106.4" y="99.0" width="36.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="109.4" y="110.0">_ra..</text>
</g>
<g>
<title>tcp_ack (383 samples, 1.80%)</title><rect x="143.0" y="131.0" width="21.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="146.0" y="142.0">t..</text>
</g>
<g>
<title>__kfree_skb (121 samples, 0.57%)</title><rect x="150.8" y="115.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="153.8" y="126.0"></text>
</g>
<g>
<title>__slab_free (37 samples, 0.17%)</title><rect x="150.8" y="99.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="153.8" y="110.0"></text>
</g>
<g>
<title>kfree (13 samples, 0.06%)</title><rect x="152.9" y="99.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="155.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (69 samples, 0.33%)</title><rect x="153.7" y="99.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="156.7" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (17 samples, 0.08%)</title><rect x="157.6" y="115.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="160.6" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.02%)</title><rect x="158.7" y="115.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="161.7" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (30 samples, 0.14%)</title><rect x="159.0" y="115.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="162.0" y="126.0"></text>
</g>
<g>
<title>__slab_free (13 samples, 0.06%)</title><rect x="159.9" y="99.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="162.9" y="110.0"></text>
</g>
<g>
<title>rb_first (27 samples, 0.13%)</title><rect x="160.6" y="115.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.6" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (13 samples, 0.06%)</title><rect x="162.1" y="115.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.1" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (5 samples, 0.02%)</title><rect x="163.2" y="115.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="166.2" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (12 samples, 0.06%)</title><rect x="163.6" y="115.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="166.6" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (16 samples, 0.08%)</title><rect x="164.3" y="131.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="167.3" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (33 samples, 0.16%)</title><rect x="165.2" y="131.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.2" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (61 samples, 0.29%)</title><rect x="167.1" y="131.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="170.1" y="142.0"></text>
</g>
<g>
<title>ktime_get (37 samples, 0.17%)</title><rect x="168.4" y="115.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="171.4" y="126.0"></text>
</g>
<g>
<title>read_tsc (22 samples, 0.10%)</title><rect x="169.3" y="99.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="172.3" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.03%)</title><rect x="171.2" y="227.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 0.04%)</title><rect x="171.6" y="227.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (7 samples, 0.03%)</title><rect x="171.6" y="211.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="174.6" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (29 samples, 0.14%)</title><rect x="172.1" y="371.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="175.1" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute (26 samples, 0.12%)</title><rect x="172.1" y="355.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="175.1" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (24 samples, 0.11%)</title><rect x="172.2" y="339.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="175.2" y="350.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.02%)</title><rect x="172.6" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="175.6" y="334.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (9 samples, 0.04%)</title><rect x="172.9" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="175.9" y="334.0"></text>
</g>
<g>
<title>__skb_clone (44 samples, 0.21%)</title><rect x="173.7" y="403.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="176.7" y="414.0"></text>
</g>
<g>
<title>__copy_skb_header (6 samples, 0.03%)</title><rect x="175.8" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.8" y="398.0"></text>
</g>
<g>
<title>__tcp_select_window (16 samples, 0.08%)</title><rect x="176.1" y="403.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="179.1" y="414.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (8 samples, 0.04%)</title><rect x="177.1" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="180.1" y="414.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (5 samples, 0.02%)</title><rect x="178.0" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="181.0" y="414.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (8 samples, 0.04%)</title><rect x="178.3" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="181.3" y="414.0"></text>
</g>
<g>
<title>tcp_v4_send_check (7 samples, 0.03%)</title><rect x="178.7" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.7" y="414.0"></text>
</g>
<g>
<title>ktime_get (22 samples, 0.10%)</title><rect x="179.1" y="419.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.1" y="430.0"></text>
</g>
<g>
<title>read_tsc (14 samples, 0.07%)</title><rect x="179.5" y="403.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.5" y="414.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (67 samples, 0.32%)</title><rect x="180.3" y="419.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.3" y="430.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (8 samples, 0.04%)</title><rect x="183.3" y="403.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="186.3" y="414.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.02%)</title><rect x="183.8" y="403.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="186.8" y="414.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (11 samples, 0.05%)</title><rect x="184.0" y="419.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.0" y="430.0"></text>
</g>
<g>
<title>_copy_from_iter_full (42 samples, 0.20%)</title><rect x="184.8" y="451.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="187.8" y="462.0"></text>
</g>
<g>
<title>copyin (27 samples, 0.13%)</title><rect x="185.1" y="435.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="188.1" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (27 samples, 0.13%)</title><rect x="185.1" y="419.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.1" y="430.0"></text>
</g>
<g>
<title>iov_iter_advance (10 samples, 0.05%)</title><rect x="186.6" y="435.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="189.6" y="446.0"></text>
</g>
<g>
<title>sk_page_frag_refill (38 samples, 0.18%)</title><rect x="187.2" y="451.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="190.2" y="462.0"></text>
</g>
<g>
<title>skb_page_frag_refill (36 samples, 0.17%)</title><rect x="187.3" y="435.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="190.3" y="446.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (127 samples, 0.60%)</title><rect x="189.3" y="451.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="192.3" y="462.0"></text>
</g>
<g>
<title>__alloc_skb (107 samples, 0.50%)</title><rect x="190.3" y="435.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="193.3" y="446.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (28 samples, 0.13%)</title><rect x="192.7" y="419.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="195.7" y="430.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (27 samples, 0.13%)</title><rect x="192.8" y="403.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="195.8" y="414.0"></text>
</g>
<g>
<title>__slab_alloc (9 samples, 0.04%)</title><rect x="193.6" y="387.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="196.6" y="398.0"></text>
</g>
<g>
<title>__ksize (20 samples, 0.09%)</title><rect x="194.3" y="419.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="197.3" y="430.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (16 samples, 0.08%)</title><rect x="195.4" y="419.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="198.4" y="430.0"></text>
</g>
<g>
<title>skb_entail (39 samples, 0.18%)</title><rect x="196.3" y="451.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="199.3" y="462.0"></text>
</g>
<g>
<title>tcp_chrono_start (21 samples, 0.10%)</title><rect x="197.3" y="435.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="200.3" y="446.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (7 samples, 0.03%)</title><rect x="198.7" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="201.7" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (69 samples, 0.33%)</title><rect x="199.1" y="451.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="202.1" y="462.0"></text>
</g>
<g>
<title>tcp_current_mss (68 samples, 0.32%)</title><rect x="199.2" y="435.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="202.2" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (26 samples, 0.12%)</title><rect x="201.5" y="419.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="204.5" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (38 samples, 0.18%)</title><rect x="203.2" y="499.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="206.2" y="510.0"></text>
</g>
<g>
<title>__fget_light (37 samples, 0.17%)</title><rect x="203.3" y="483.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="206.3" y="494.0"></text>
</g>
<g>
<title>__fget (32 samples, 0.15%)</title><rect x="203.6" y="467.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="206.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (284 samples, 1.34%)</title><rect x="206.0" y="659.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (257 samples, 1.21%)</title><rect x="207.5" y="643.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (257 samples, 1.21%)</title><rect x="207.5" y="627.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.5" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (15 samples, 0.07%)</title><rect x="221.7" y="659.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="224.7" y="670.0"></text>
</g>
<g>
<title>gettimeofday (13 samples, 0.06%)</title><rect x="221.9" y="643.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="224.9" y="654.0"></text>
</g>
<g>
<title>[vdso] (11 samples, 0.05%)</title><rect x="222.0" y="627.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="225.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$94/1605766242.get (1,438 samples, 6.78%)</title><rect x="222.7" y="771.0" width="80.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.7" y="782.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$putAsync$4 (1,438 samples, 6.78%)</title><rect x="222.7" y="755.0" width="80.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.7" y="766.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/DaoService.put (1,438 samples, 6.78%)</title><rect x="222.7" y="739.0" width="80.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.7" y="750.0">ru/mail/p..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.03%)</title><rect x="223.0" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="226.0" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="223.0" y="707.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="226.0" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="223.0" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="226.0" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="223.0" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="226.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (125 samples, 0.59%)</title><rect x="223.4" y="723.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.04%)</title><rect x="228.5" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.5" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.04%)</title><rect x="228.5" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.5" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.04%)</title><rect x="228.5" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.04%)</title><rect x="228.5" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.5" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.04%)</title><rect x="228.5" y="643.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="231.5" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.03%)</title><rect x="228.6" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="231.6" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.03%)</title><rect x="228.6" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="231.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (13 samples, 0.06%)</title><rect x="229.0" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.06%)</title><rect x="229.0" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.03%)</title><rect x="229.4" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.4" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.03%)</title><rect x="229.4" y="659.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="232.4" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.03%)</title><rect x="229.4" y="643.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="232.4" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.03%)</title><rect x="229.4" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="232.4" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.03%)</title><rect x="229.4" y="611.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="232.4" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.02%)</title><rect x="229.5" y="595.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="232.5" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (10 samples, 0.05%)</title><rect x="229.8" y="707.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="232.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsertWithTimeStamp (1,302 samples, 6.14%)</title><rect x="230.3" y="723.0" width="72.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.3" y="734.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (94 samples, 0.44%)</title><rect x="230.3" y="707.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (94 samples, 0.44%)</title><rect x="230.3" y="691.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (49 samples, 0.23%)</title><rect x="232.8" y="675.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.8" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (22 samples, 0.10%)</title><rect x="232.8" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.8" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (22 samples, 0.10%)</title><rect x="232.8" y="643.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (25 samples, 0.12%)</title><rect x="234.0" y="659.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (25 samples, 0.12%)</title><rect x="234.0" y="643.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (12 samples, 0.06%)</title><rect x="235.5" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (12 samples, 0.06%)</title><rect x="235.5" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (8 samples, 0.04%)</title><rect x="235.5" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsertWithTimeStamp (1,093 samples, 5.15%)</title><rect x="236.2" y="707.0" width="60.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.2" y="718.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1,088 samples, 5.13%)</title><rect x="236.2" y="691.0" width="60.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="239.2" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1,027 samples, 4.84%)</title><rect x="239.6" y="675.0" width="57.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.6" y="686.0">java/u..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (25 samples, 0.12%)</title><rect x="248.5" y="659.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (840 samples, 3.96%)</title><rect x="250.0" y="659.0" width="46.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.0" y="670.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (840 samples, 3.96%)</title><rect x="250.0" y="643.0" width="46.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.0" y="654.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (840 samples, 3.96%)</title><rect x="250.0" y="627.0" width="46.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.0" y="638.0">java..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (220 samples, 1.04%)</title><rect x="284.5" y="611.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.5" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (29 samples, 0.14%)</title><rect x="295.1" y="595.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="298.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.of (5 samples, 0.02%)</title><rect x="296.7" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.flush (103 samples, 0.49%)</title><rect x="297.0" y="707.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.save (103 samples, 0.49%)</title><rect x="297.0" y="691.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.saveTo (103 samples, 0.49%)</title><rect x="297.0" y="675.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (94 samples, 0.44%)</title><rect x="297.5" y="659.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (91 samples, 0.43%)</title><rect x="297.6" y="643.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.6" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (5 samples, 0.02%)</title><rect x="297.8" y="627.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (81 samples, 0.38%)</title><rect x="298.0" y="627.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (81 samples, 0.38%)</title><rect x="298.0" y="611.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (81 samples, 0.38%)</title><rect x="298.0" y="595.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.0" y="606.0"></text>
</g>
<g>
<title>__libc_write (78 samples, 0.37%)</title><rect x="298.2" y="579.0" width="4.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="301.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (77 samples, 0.36%)</title><rect x="298.3" y="563.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="301.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (77 samples, 0.36%)</title><rect x="298.3" y="547.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.3" y="558.0"></text>
</g>
<g>
<title>ksys_write (73 samples, 0.34%)</title><rect x="298.5" y="531.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="301.5" y="542.0"></text>
</g>
<g>
<title>vfs_write (73 samples, 0.34%)</title><rect x="298.5" y="515.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="301.5" y="526.0"></text>
</g>
<g>
<title>new_sync_write (66 samples, 0.31%)</title><rect x="298.8" y="499.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="301.8" y="510.0"></text>
</g>
<g>
<title>ext4_file_write_iter?[ext4] (65 samples, 0.31%)</title><rect x="298.9" y="483.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="301.9" y="494.0"></text>
</g>
<g>
<title>__generic_file_write_iter (63 samples, 0.30%)</title><rect x="298.9" y="467.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.9" y="478.0"></text>
</g>
<g>
<title>generic_perform_write (61 samples, 0.29%)</title><rect x="299.0" y="451.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="302.0" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_begin?[ext4] (17 samples, 0.08%)</title><rect x="299.1" y="435.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="302.1" y="446.0"></text>
</g>
<g>
<title>jbd2__journal_start?[jbd2] (11 samples, 0.05%)</title><rect x="299.4" y="419.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="302.4" y="430.0"></text>
</g>
<g>
<title>start_this_handle?[jbd2] (8 samples, 0.04%)</title><rect x="299.6" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="302.6" y="414.0"></text>
</g>
<g>
<title>ext4_da_write_end?[ext4] (38 samples, 0.18%)</title><rect x="300.0" y="435.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="303.0" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_stop?[ext4] (5 samples, 0.02%)</title><rect x="300.1" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="303.1" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_stop?[jbd2] (5 samples, 0.02%)</title><rect x="300.1" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="303.1" y="414.0"></text>
</g>
<g>
<title>generic_write_end (32 samples, 0.15%)</title><rect x="300.4" y="419.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="303.4" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (30 samples, 0.14%)</title><rect x="300.5" y="403.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="303.5" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode?[ext4] (29 samples, 0.14%)</title><rect x="300.5" y="387.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="303.5" y="398.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty?[ext4] (26 samples, 0.12%)</title><rect x="300.7" y="371.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="303.7" y="382.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty?[ext4] (18 samples, 0.08%)</title><rect x="300.8" y="355.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="303.8" y="366.0"></text>
</g>
<g>
<title>ext4_inode_csum_set?[ext4] (13 samples, 0.06%)</title><rect x="301.1" y="339.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="304.1" y="350.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0?[ext4] (13 samples, 0.06%)</title><rect x="301.1" y="323.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="304.1" y="334.0"></text>
</g>
<g>
<title>chksum_update (12 samples, 0.06%)</title><rect x="301.1" y="307.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="304.1" y="318.0"></text>
</g>
<g>
<title>__crc32c_le (10 samples, 0.05%)</title><rect x="301.2" y="291.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="304.2" y="302.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write?[ext4] (6 samples, 0.03%)</title><rect x="301.8" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="304.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (92 samples, 0.43%)</title><rect x="302.7" y="787.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (92 samples, 0.43%)</title><rect x="302.7" y="771.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (92 samples, 0.43%)</title><rect x="302.7" y="755.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.02%)</title><rect x="306.0" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (28 samples, 0.13%)</title><rect x="306.3" y="739.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6 samples, 0.03%)</title><rect x="307.5" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,194 samples, 5.63%)</title><rect x="307.8" y="787.0" width="66.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.8" y="798.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,187 samples, 5.59%)</title><rect x="308.2" y="771.0" width="66.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.2" y="782.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (706 samples, 3.33%)</title><rect x="308.4" y="755.0" width="39.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.4" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.03%)</title><rect x="308.4" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.4" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="308.4" y="723.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="311.4" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.02%)</title><rect x="308.5" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="311.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.02%)</title><rect x="308.5" y="691.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="311.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.02%)</title><rect x="308.5" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="311.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (414 samples, 1.95%)</title><rect x="308.9" y="739.0" width="23.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.9" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (414 samples, 1.95%)</title><rect x="308.9" y="723.0" width="23.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.9" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (374 samples, 1.76%)</title><rect x="311.0" y="707.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (374 samples, 1.76%)</title><rect x="311.0" y="691.0" width="20.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (370 samples, 1.74%)</title><rect x="311.3" y="675.0" width="20.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.3" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (23 samples, 0.11%)</title><rect x="312.0" y="659.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="315.0" y="670.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (6 samples, 0.03%)</title><rect x="312.2" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="315.2" y="654.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (334 samples, 1.57%)</title><rect x="313.3" y="659.0" width="18.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="316.3" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (304 samples, 1.43%)</title><rect x="314.9" y="643.0" width="16.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="317.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (304 samples, 1.43%)</title><rect x="314.9" y="627.0" width="16.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="317.9" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (301 samples, 1.42%)</title><rect x="315.1" y="611.0" width="16.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="318.1" y="622.0"></text>
</g>
<g>
<title>do_futex (296 samples, 1.39%)</title><rect x="315.4" y="595.0" width="16.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="318.4" y="606.0"></text>
</g>
<g>
<title>futex_wake (293 samples, 1.38%)</title><rect x="315.6" y="579.0" width="16.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="318.6" y="590.0"></text>
</g>
<g>
<title>wake_up_q (276 samples, 1.30%)</title><rect x="316.5" y="563.0" width="15.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="319.5" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (272 samples, 1.28%)</title><rect x="316.7" y="547.0" width="15.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="319.7" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (270 samples, 1.27%)</title><rect x="316.8" y="531.0" width="15.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="319.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (9 samples, 0.04%)</title><rect x="332.0" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (9 samples, 0.04%)</title><rect x="332.0" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (274 samples, 1.29%)</title><rect x="332.5" y="739.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (271 samples, 1.28%)</title><rect x="332.6" y="723.0" width="15.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (85 samples, 0.40%)</title><rect x="332.7" y="707.0" width="4.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="335.7" y="718.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (8 samples, 0.04%)</title><rect x="333.8" y="691.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="336.8" y="702.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (21 samples, 0.10%)</title><rect x="334.4" y="691.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="337.4" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (9 samples, 0.04%)</title><rect x="335.8" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="338.8" y="702.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (9 samples, 0.04%)</title><rect x="336.3" y="691.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="339.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (183 samples, 0.86%)</title><rect x="337.4" y="707.0" width="10.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="340.4" y="718.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (15 samples, 0.07%)</title><rect x="337.4" y="691.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="340.4" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (157 samples, 0.74%)</title><rect x="338.2" y="691.0" width="8.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="341.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (142 samples, 0.67%)</title><rect x="339.1" y="675.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (142 samples, 0.67%)</title><rect x="339.1" y="659.0" width="7.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="342.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (123 samples, 0.58%)</title><rect x="340.1" y="643.0" width="6.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="343.1" y="654.0"></text>
</g>
<g>
<title>do_futex (117 samples, 0.55%)</title><rect x="340.4" y="627.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="343.4" y="638.0"></text>
</g>
<g>
<title>futex_wait (114 samples, 0.54%)</title><rect x="340.6" y="611.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="343.6" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (38 samples, 0.18%)</title><rect x="341.7" y="595.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="344.7" y="606.0"></text>
</g>
<g>
<title>schedule (26 samples, 0.12%)</title><rect x="342.4" y="579.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="345.4" y="590.0"></text>
</g>
<g>
<title>__schedule (20 samples, 0.09%)</title><rect x="342.7" y="563.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="345.7" y="574.0"></text>
</g>
<g>
<title>futex_wait_setup (56 samples, 0.26%)</title><rect x="343.8" y="595.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="346.8" y="606.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.02%)</title><rect x="345.2" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.2" y="590.0"></text>
</g>
<g>
<title>get_futex_value_locked (15 samples, 0.07%)</title><rect x="345.5" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="348.5" y="590.0"></text>
</g>
<g>
<title>hash_futex (11 samples, 0.05%)</title><rect x="346.3" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.3" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (6 samples, 0.03%)</title><rect x="347.2" y="691.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="350.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (21 samples, 0.10%)</title><rect x="347.7" y="755.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (21 samples, 0.10%)</title><rect x="347.7" y="739.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (21 samples, 0.10%)</title><rect x="347.7" y="723.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.04%)</title><rect x="348.4" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.04%)</title><rect x="348.4" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.03%)</title><rect x="348.5" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.02%)</title><rect x="348.6" y="659.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="351.6" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.02%)</title><rect x="348.6" y="643.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="351.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (456 samples, 2.15%)</title><rect x="348.9" y="755.0" width="25.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.9" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (456 samples, 2.15%)</title><rect x="348.9" y="739.0" width="25.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.9" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (456 samples, 2.15%)</title><rect x="348.9" y="723.0" width="25.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.9" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (456 samples, 2.15%)</title><rect x="348.9" y="707.0" width="25.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.9" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (444 samples, 2.09%)</title><rect x="349.5" y="691.0" width="24.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.5" y="702.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.10%)</title><rect x="350.1" y="675.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="353.1" y="686.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (412 samples, 1.94%)</title><rect x="351.3" y="675.0" width="22.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="354.3" y="686.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (385 samples, 1.81%)</title><rect x="352.8" y="659.0" width="21.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="355.8" y="670.0">e..</text>
</g>
<g>
<title>do_syscall_64 (385 samples, 1.81%)</title><rect x="352.8" y="643.0" width="21.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="355.8" y="654.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (378 samples, 1.78%)</title><rect x="353.2" y="627.0" width="21.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.2" y="638.0">_..</text>
</g>
<g>
<title>do_futex (375 samples, 1.77%)</title><rect x="353.4" y="611.0" width="20.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="356.4" y="622.0"></text>
</g>
<g>
<title>futex_wake (374 samples, 1.76%)</title><rect x="353.4" y="595.0" width="20.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="356.4" y="606.0"></text>
</g>
<g>
<title>wake_up_q (355 samples, 1.67%)</title><rect x="354.5" y="579.0" width="19.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="357.5" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (352 samples, 1.66%)</title><rect x="354.6" y="563.0" width="19.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="357.6" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (349 samples, 1.64%)</title><rect x="354.8" y="547.0" width="19.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="357.8" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (9 samples, 0.04%)</title><rect x="374.2" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.2" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.04%)</title><rect x="374.2" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.2" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$146/1420162154.run (9 samples, 0.04%)</title><rect x="374.2" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.2" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (9 samples, 0.04%)</title><rect x="374.2" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.2" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (9 samples, 0.04%)</title><rect x="374.2" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.2" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (9 samples, 0.04%)</title><rect x="374.2" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.2" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (8 samples, 0.04%)</title><rect x="374.3" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.3" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.03%)</title><rect x="374.3" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.3" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (6 samples, 0.03%)</title><rect x="374.3" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.3" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (6 samples, 0.03%)</title><rect x="374.3" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.3" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (6 samples, 0.03%)</title><rect x="374.3" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.3" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13,383 samples, 63.06%)</title><rect x="374.7" y="835.0" width="744.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.7" y="846.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 0.09%)</title><rect x="378.2" y="819.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (401 samples, 1.89%)</title><rect x="379.4" y="819.0" width="22.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.4" y="830.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (382 samples, 1.80%)</title><rect x="380.5" y="803.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.5" y="814.0">o..</text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.04%)</title><rect x="381.3" y="787.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="384.3" y="798.0"></text>
</g>
<g>
<title>epoll_wait (360 samples, 1.70%)</title><rect x="381.7" y="787.0" width="20.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="384.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (343 samples, 1.62%)</title><rect x="382.7" y="771.0" width="19.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="385.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (343 samples, 1.62%)</title><rect x="382.7" y="755.0" width="19.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="385.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (306 samples, 1.44%)</title><rect x="384.7" y="739.0" width="17.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="387.7" y="750.0"></text>
</g>
<g>
<title>do_epoll_wait (303 samples, 1.43%)</title><rect x="384.9" y="723.0" width="16.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="387.9" y="734.0"></text>
</g>
<g>
<title>__fget_light (19 samples, 0.09%)</title><rect x="385.1" y="707.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="388.1" y="718.0"></text>
</g>
<g>
<title>__fget (17 samples, 0.08%)</title><rect x="385.2" y="691.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="388.2" y="702.0"></text>
</g>
<g>
<title>ep_poll (279 samples, 1.31%)</title><rect x="386.1" y="707.0" width="15.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="389.1" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (198 samples, 0.93%)</title><rect x="388.0" y="691.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="391.0" y="702.0"></text>
</g>
<g>
<title>ep_send_events_proc (167 samples, 0.79%)</title><rect x="388.8" y="675.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="391.8" y="686.0"></text>
</g>
<g>
<title>__list_del_entry_valid (7 samples, 0.03%)</title><rect x="389.9" y="659.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="392.9" y="670.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (141 samples, 0.66%)</title><rect x="390.3" y="659.0" width="7.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="393.3" y="670.0"></text>
</g>
<g>
<title>sock_poll (125 samples, 0.59%)</title><rect x="391.2" y="643.0" width="6.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="394.2" y="654.0"></text>
</g>
<g>
<title>tcp_poll (87 samples, 0.41%)</title><rect x="393.3" y="627.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="396.3" y="638.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (34 samples, 0.16%)</title><rect x="396.2" y="611.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="399.2" y="622.0"></text>
</g>
<g>
<title>mutex_lock (14 samples, 0.07%)</title><rect x="398.1" y="675.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.1" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (46 samples, 0.22%)</title><rect x="399.1" y="691.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="402.1" y="702.0"></text>
</g>
<g>
<title>schedule (43 samples, 0.20%)</title><rect x="399.2" y="675.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="402.2" y="686.0"></text>
</g>
<g>
<title>__schedule (29 samples, 0.14%)</title><rect x="400.0" y="659.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="403.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12,867 samples, 60.63%)</title><rect x="401.7" y="819.0" width="715.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.7" y="830.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12,862 samples, 60.61%)</title><rect x="402.0" y="803.0" width="715.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.0" y="814.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (11,622 samples, 54.77%)</title><rect x="402.6" y="787.0" width="646.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.6" y="798.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.06%)</title><rect x="411.8" y="771.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="414.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (10,227 samples, 48.19%)</title><rect x="412.5" y="771.0" width="568.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.5" y="782.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (10,227 samples, 48.19%)</title><rect x="412.5" y="755.0" width="568.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.5" y="766.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (10,113 samples, 47.66%)</title><rect x="412.5" y="739.0" width="562.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.5" y="750.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (78 samples, 0.37%)</title><rect x="412.6" y="723.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.07%)</title><rect x="415.0" y="707.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (14 samples, 0.07%)</title><rect x="415.0" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (13 samples, 0.06%)</title><rect x="416.2" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.04%)</title><rect x="416.4" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.04%)</title><rect x="416.4" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.04%)</title><rect x="416.4" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (94 samples, 0.44%)</title><rect x="416.9" y="723.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (92 samples, 0.43%)</title><rect x="417.0" y="707.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.05%)</title><rect x="418.6" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.05%)</title><rect x="418.6" y="675.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.6" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.04%)</title><rect x="419.5" y="691.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="422.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (37 samples, 0.17%)</title><rect x="420.0" y="691.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.06%)</title><rect x="421.4" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.06%)</title><rect x="421.4" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.06%)</title><rect x="421.4" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/HttpService.entity (9,931 samples, 46.80%)</title><rect x="422.1" y="723.0" width="552.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.1" y="734.0">ru/mail/polis/service/s3ponia/HttpService.entity</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.entity (9,922 samples, 46.76%)</title><rect x="422.6" y="707.0" width="551.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.6" y="718.0">ru/mail/polis/service/s3ponia/ReplicatedService.entity</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/544444343.linkToTargetMethod (18 samples, 0.08%)</title><rect x="430.5" y="691.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/999969171.invoke (18 samples, 0.08%)</title><rect x="430.5" y="675.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1401215963.invokeStatic (18 samples, 0.08%)</title><rect x="430.5" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (18 samples, 0.08%)</title><rect x="430.5" y="643.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="433.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (18 samples, 0.08%)</title><rect x="430.5" y="627.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (105 samples, 0.49%)</title><rect x="431.5" y="691.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (105 samples, 0.49%)</title><rect x="431.5" y="675.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (105 samples, 0.49%)</title><rect x="431.5" y="659.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (105 samples, 0.49%)</title><rect x="431.5" y="643.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (79 samples, 0.37%)</title><rect x="431.5" y="627.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.5" y="638.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (70 samples, 0.33%)</title><rect x="431.5" y="611.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (43 samples, 0.20%)</title><rect x="433.0" y="595.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (41 samples, 0.19%)</title><rect x="433.1" y="579.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$88/1090963215.apply (40 samples, 0.19%)</title><rect x="433.2" y="563.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (40 samples, 0.19%)</title><rect x="433.2" y="547.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.2" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (29 samples, 0.14%)</title><rect x="433.2" y="531.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.05%)</title><rect x="434.8" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="437.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (11 samples, 0.05%)</title><rect x="434.8" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (11 samples, 0.05%)</title><rect x="434.8" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (5 samples, 0.02%)</title><rect x="435.4" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (5 samples, 0.02%)</title><rect x="435.4" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (5 samples, 0.02%)</title><rect x="435.4" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$11/274773041.get (5 samples, 0.02%)</title><rect x="435.4" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.02%)</title><rect x="435.4" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.4" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (5 samples, 0.02%)</title><rect x="435.4" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="438.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (26 samples, 0.12%)</title><rect x="435.9" y="627.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,958 samples, 9.23%)</title><rect x="437.4" y="691.0" width="108.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.4" y="702.0">one/nio/http/..</text>
</g>
<g>
<title>gettimeofday (5 samples, 0.02%)</title><rect x="438.9" y="675.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="441.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,824 samples, 8.60%)</title><rect x="439.5" y="675.0" width="101.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.5" y="686.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (101 samples, 0.48%)</title><rect x="439.8" y="659.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (42 samples, 0.20%)</title><rect x="442.9" y="643.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (42 samples, 0.20%)</title><rect x="442.9" y="627.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.charAt (42 samples, 0.20%)</title><rect x="442.9" y="611.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,718 samples, 8.10%)</title><rect x="445.4" y="659.0" width="95.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.4" y="670.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,718 samples, 8.10%)</title><rect x="445.4" y="643.0" width="95.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.4" y="654.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,705 samples, 8.03%)</title><rect x="446.1" y="627.0" width="94.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.1" y="638.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,695 samples, 7.99%)</title><rect x="446.7" y="611.0" width="94.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.7" y="622.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (40 samples, 0.19%)</title><rect x="446.9" y="595.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="449.9" y="606.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (14 samples, 0.07%)</title><rect x="447.8" y="579.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="450.8" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (10 samples, 0.05%)</title><rect x="448.1" y="563.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="451.1" y="574.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (7 samples, 0.03%)</title><rect x="448.2" y="547.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="451.2" y="558.0"></text>
</g>
<g>
<title>__libc_send (1,647 samples, 7.76%)</title><rect x="449.2" y="595.0" width="91.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="452.2" y="606.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,629 samples, 7.68%)</title><rect x="450.2" y="579.0" width="90.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="453.2" y="590.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (1,629 samples, 7.68%)</title><rect x="450.2" y="563.0" width="90.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="453.2" y="574.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_sendto (1,612 samples, 7.60%)</title><rect x="451.0" y="547.0" width="89.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="454.0" y="558.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (1,609 samples, 7.58%)</title><rect x="451.2" y="531.0" width="89.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="454.2" y="542.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,563 samples, 7.37%)</title><rect x="452.2" y="515.0" width="86.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="455.2" y="526.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (6 samples, 0.03%)</title><rect x="452.5" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="455.5" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (19 samples, 0.09%)</title><rect x="452.8" y="499.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.8" y="510.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (5 samples, 0.02%)</title><rect x="452.8" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="455.8" y="494.0"></text>
</g>
<g>
<title>sock_has_perm (13 samples, 0.06%)</title><rect x="453.1" y="483.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="456.1" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,534 samples, 7.23%)</title><rect x="453.8" y="499.0" width="85.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="456.8" y="510.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (9 samples, 0.04%)</title><rect x="454.3" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="457.3" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,517 samples, 7.15%)</title><rect x="454.8" y="483.0" width="84.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="457.8" y="494.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.02%)</title><rect x="457.2" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="460.2" y="478.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,288 samples, 6.07%)</title><rect x="457.5" y="467.0" width="71.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.5" y="478.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (1,282 samples, 6.04%)</title><rect x="457.8" y="451.0" width="71.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.8" y="462.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (1,197 samples, 5.64%)</title><rect x="459.5" y="435.0" width="66.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="462.5" y="446.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (1,124 samples, 5.30%)</title><rect x="460.8" y="419.0" width="62.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.8" y="430.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (20 samples, 0.09%)</title><rect x="461.8" y="403.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.8" y="414.0"></text>
</g>
<g>
<title>__ip_local_out (20 samples, 0.09%)</title><rect x="461.8" y="387.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="464.8" y="398.0"></text>
</g>
<g>
<title>ip_send_check (13 samples, 0.06%)</title><rect x="461.9" y="371.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.9" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="462.6" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.6" y="382.0"></text>
</g>
<g>
<title>ip_output (1,085 samples, 5.11%)</title><rect x="463.0" y="403.0" width="60.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="466.0" y="414.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output2 (1,057 samples, 4.98%)</title><rect x="463.6" y="387.0" width="58.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.6" y="398.0">ip_fin..</text>
</g>
<g>
<title>__dev_queue_xmit (40 samples, 0.19%)</title><rect x="464.5" y="371.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="467.5" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (23 samples, 0.11%)</title><rect x="465.2" y="355.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="468.2" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (23 samples, 0.11%)</title><rect x="465.2" y="339.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="468.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (8 samples, 0.04%)</title><rect x="465.6" y="323.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.6" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.03%)</title><rect x="465.6" y="307.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="468.6" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.02%)</title><rect x="465.7" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="468.7" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,000 samples, 4.71%)</title><rect x="466.7" y="371.0" width="55.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="469.7" y="382.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (996 samples, 4.69%)</title><rect x="467.0" y="355.0" width="55.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.0" y="366.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (981 samples, 4.62%)</title><rect x="467.8" y="339.0" width="54.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="470.8" y="350.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (981 samples, 4.62%)</title><rect x="467.8" y="323.0" width="54.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="470.8" y="334.0">__sof..</text>
</g>
<g>
<title>net_rx_action (955 samples, 4.50%)</title><rect x="469.2" y="307.0" width="53.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="472.2" y="318.0">net_r..</text>
</g>
<g>
<title>process_backlog (935 samples, 4.41%)</title><rect x="470.4" y="291.0" width="51.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="473.4" y="302.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (920 samples, 4.34%)</title><rect x="471.2" y="275.0" width="51.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="474.2" y="286.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.04%)</title><rect x="471.8" y="259.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="474.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv (900 samples, 4.24%)</title><rect x="472.3" y="259.0" width="50.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="475.3" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (885 samples, 4.17%)</title><rect x="472.6" y="243.0" width="49.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="475.6" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (878 samples, 4.14%)</title><rect x="473.0" y="227.0" width="48.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="476.0" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (875 samples, 4.12%)</title><rect x="473.2" y="211.0" width="48.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="476.2" y="222.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (869 samples, 4.10%)</title><rect x="473.5" y="195.0" width="48.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="476.5" y="206.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (22 samples, 0.10%)</title><rect x="475.2" y="179.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="478.2" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (22 samples, 0.10%)</title><rect x="476.5" y="179.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="479.5" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (21 samples, 0.10%)</title><rect x="476.5" y="163.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="479.5" y="174.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (19 samples, 0.09%)</title><rect x="476.6" y="147.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="479.6" y="158.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (10 samples, 0.05%)</title><rect x="477.1" y="131.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="480.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (791 samples, 3.73%)</title><rect x="477.8" y="179.0" width="44.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="480.8" y="190.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (785 samples, 3.70%)</title><rect x="478.1" y="163.0" width="43.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="481.1" y="174.0">tcp_..</text>
</g>
<g>
<title>sk_reset_timer (19 samples, 0.09%)</title><rect x="479.8" y="147.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="482.8" y="158.0"></text>
</g>
<g>
<title>mod_timer (19 samples, 0.09%)</title><rect x="479.8" y="131.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="482.8" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.07%)</title><rect x="479.9" y="115.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="482.9" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (522 samples, 2.46%)</title><rect x="480.8" y="147.0" width="29.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="483.8" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (505 samples, 2.38%)</title><rect x="481.7" y="131.0" width="28.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="484.7" y="142.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (504 samples, 2.38%)</title><rect x="481.8" y="115.0" width="28.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="484.8" y="126.0">_r..</text>
</g>
<g>
<title>tcp_ack (176 samples, 0.83%)</title><rect x="509.8" y="147.0" width="9.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="512.8" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (65 samples, 0.31%)</title><rect x="512.9" y="131.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="515.9" y="142.0"></text>
</g>
<g>
<title>__slab_free (15 samples, 0.07%)</title><rect x="512.9" y="115.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="515.9" y="126.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.05%)</title><rect x="513.7" y="115.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="516.7" y="126.0"></text>
</g>
<g>
<title>skb_release_data (38 samples, 0.18%)</title><rect x="514.4" y="115.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="517.4" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (12 samples, 0.06%)</title><rect x="516.6" y="131.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="519.6" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (12 samples, 0.06%)</title><rect x="517.5" y="131.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="520.5" y="142.0"></text>
</g>
<g>
<title>rb_first (8 samples, 0.04%)</title><rect x="518.1" y="131.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="521.1" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (6 samples, 0.03%)</title><rect x="519.3" y="131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="522.3" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.03%)</title><rect x="519.9" y="147.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="522.9" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (22 samples, 0.10%)</title><rect x="520.2" y="147.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="523.2" y="158.0"></text>
</g>
<g>
<title>ktime_get (14 samples, 0.07%)</title><rect x="520.7" y="131.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="523.7" y="142.0"></text>
</g>
<g>
<title>read_tsc (10 samples, 0.05%)</title><rect x="520.9" y="115.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="523.9" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.02%)</title><rect x="521.5" y="147.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="524.5" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish (7 samples, 0.03%)</title><rect x="522.0" y="243.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (6 samples, 0.03%)</title><rect x="522.0" y="227.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="525.0" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.08%)</title><rect x="522.4" y="387.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.4" y="398.0"></text>
</g>
<g>
<title>selinux_ip_postroute (12 samples, 0.06%)</title><rect x="522.4" y="371.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="525.4" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (9 samples, 0.04%)</title><rect x="522.6" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="525.6" y="366.0"></text>
</g>
<g>
<title>__skb_clone (17 samples, 0.08%)</title><rect x="523.3" y="419.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="526.3" y="430.0"></text>
</g>
<g>
<title>__tcp_select_window (13 samples, 0.06%)</title><rect x="524.2" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="527.2" y="430.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (6 samples, 0.03%)</title><rect x="525.0" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="528.0" y="430.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (5 samples, 0.02%)</title><rect x="525.5" y="419.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="528.5" y="430.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.02%)</title><rect x="525.7" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="528.7" y="430.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.04%)</title><rect x="526.0" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="529.0" y="446.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.03%)</title><rect x="526.1" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="529.1" y="430.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (39 samples, 0.18%)</title><rect x="526.5" y="435.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="529.5" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.06%)</title><rect x="527.6" y="419.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="530.6" y="430.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.06%)</title><rect x="527.6" y="403.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="530.6" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.02%)</title><rect x="528.0" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="531.0" y="398.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (6 samples, 0.03%)</title><rect x="528.4" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="531.4" y="430.0"></text>
</g>
<g>
<title>_copy_from_iter_full (22 samples, 0.10%)</title><rect x="529.1" y="467.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="532.1" y="478.0"></text>
</g>
<g>
<title>copyin (7 samples, 0.03%)</title><rect x="529.2" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="532.2" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.03%)</title><rect x="529.2" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="532.2" y="446.0"></text>
</g>
<g>
<title>iov_iter_advance (13 samples, 0.06%)</title><rect x="529.6" y="451.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="532.6" y="462.0"></text>
</g>
<g>
<title>sk_page_frag_refill (23 samples, 0.11%)</title><rect x="530.4" y="467.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="533.4" y="478.0"></text>
</g>
<g>
<title>skb_page_frag_refill (23 samples, 0.11%)</title><rect x="530.4" y="451.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="533.4" y="462.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (71 samples, 0.33%)</title><rect x="531.6" y="467.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="534.6" y="478.0"></text>
</g>
<g>
<title>__alloc_skb (66 samples, 0.31%)</title><rect x="531.9" y="451.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="534.9" y="462.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (20 samples, 0.09%)</title><rect x="532.7" y="435.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="535.7" y="446.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (20 samples, 0.09%)</title><rect x="532.7" y="419.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="535.7" y="430.0"></text>
</g>
<g>
<title>__slab_alloc (7 samples, 0.03%)</title><rect x="533.3" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="536.3" y="414.0"></text>
</g>
<g>
<title>__ksize (18 samples, 0.08%)</title><rect x="533.9" y="435.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="536.9" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (13 samples, 0.06%)</title><rect x="534.9" y="435.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="537.9" y="446.0"></text>
</g>
<g>
<title>skb_entail (20 samples, 0.09%)</title><rect x="535.6" y="467.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="538.6" y="478.0"></text>
</g>
<g>
<title>tcp_chrono_start (12 samples, 0.06%)</title><rect x="536.0" y="451.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="539.0" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (32 samples, 0.15%)</title><rect x="536.9" y="467.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.9" y="478.0"></text>
</g>
<g>
<title>tcp_current_mss (29 samples, 0.14%)</title><rect x="537.0" y="451.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="540.0" y="462.0"></text>
</g>
<g>
<title>ipv4_mtu (13 samples, 0.06%)</title><rect x="537.9" y="435.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="540.9" y="446.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (7 samples, 0.03%)</title><rect x="538.6" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="541.6" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (27 samples, 0.13%)</title><rect x="539.1" y="515.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.1" y="526.0"></text>
</g>
<g>
<title>__fget_light (27 samples, 0.13%)</title><rect x="539.1" y="499.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="542.1" y="510.0"></text>
</g>
<g>
<title>__fget (23 samples, 0.11%)</title><rect x="539.4" y="483.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="542.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (89 samples, 0.42%)</title><rect x="540.9" y="675.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (80 samples, 0.38%)</title><rect x="541.4" y="659.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (80 samples, 0.38%)</title><rect x="541.4" y="643.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.4" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.03%)</title><rect x="545.9" y="675.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="548.9" y="686.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.03%)</title><rect x="545.9" y="659.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="548.9" y="670.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.02%)</title><rect x="546.0" y="643.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="549.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (62 samples, 0.29%)</title><rect x="546.3" y="691.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.3" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.04%)</title><rect x="549.2" y="675.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="552.2" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.05%)</title><rect x="549.8" y="691.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="552.8" y="702.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.05%)</title><rect x="549.8" y="675.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="552.8" y="686.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.04%)</title><rect x="549.8" y="659.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="552.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.entity (559 samples, 2.63%)</title><rect x="550.3" y="691.0" width="31.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.3" y="702.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (52 samples, 0.25%)</title><rect x="550.6" y="675.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (27 samples, 0.13%)</title><rect x="552.0" y="659.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (24 samples, 0.11%)</title><rect x="552.2" y="643.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$104/1056165277.accept (24 samples, 0.11%)</title><rect x="552.2" y="627.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (24 samples, 0.11%)</title><rect x="552.2" y="611.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (24 samples, 0.11%)</title><rect x="552.2" y="595.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 0.06%)</title><rect x="552.8" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 0.06%)</title><rect x="552.8" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.05%)</title><rect x="552.9" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.05%)</title><rect x="552.9" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 0.05%)</title><rect x="552.9" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 0.05%)</title><rect x="552.9" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.9" y="510.0"></text>
</g>
<g>
<title>__libc_send (9 samples, 0.04%)</title><rect x="553.0" y="483.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="556.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.04%)</title><rect x="553.0" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="556.0" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="553.0" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="556.0" y="462.0"></text>
</g>
<g>
<title>__x64_sys_sendto (9 samples, 0.04%)</title><rect x="553.0" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="556.0" y="446.0"></text>
</g>
<g>
<title>__sys_sendto (9 samples, 0.04%)</title><rect x="553.0" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="556.0" y="430.0"></text>
</g>
<g>
<title>sock_sendmsg (9 samples, 0.04%)</title><rect x="553.0" y="403.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="556.0" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (9 samples, 0.04%)</title><rect x="553.0" y="387.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.0" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (9 samples, 0.04%)</title><rect x="553.0" y="371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="556.0" y="382.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (9 samples, 0.04%)</title><rect x="553.0" y="355.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.0" y="366.0"></text>
</g>
<g>
<title>tcp_write_xmit (9 samples, 0.04%)</title><rect x="553.0" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="556.0" y="350.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 0.04%)</title><rect x="553.0" y="323.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="556.0" y="334.0"></text>
</g>
<g>
<title>__ip_queue_xmit (8 samples, 0.04%)</title><rect x="553.0" y="307.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="556.0" y="318.0"></text>
</g>
<g>
<title>ip_output (8 samples, 0.04%)</title><rect x="553.0" y="291.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="556.0" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (8 samples, 0.04%)</title><rect x="553.0" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="556.0" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (7 samples, 0.03%)</title><rect x="553.0" y="259.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="556.0" y="270.0"></text>
</g>
<g>
<title>do_softirq.part.0 (7 samples, 0.03%)</title><rect x="553.0" y="243.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="556.0" y="254.0"></text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 0.03%)</title><rect x="553.0" y="227.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="556.0" y="238.0"></text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 0.03%)</title><rect x="553.0" y="211.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="556.0" y="222.0"></text>
</g>
<g>
<title>net_rx_action (7 samples, 0.03%)</title><rect x="553.0" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.0" y="206.0"></text>
</g>
<g>
<title>process_backlog (7 samples, 0.03%)</title><rect x="553.0" y="179.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="556.0" y="190.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (7 samples, 0.03%)</title><rect x="553.0" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="556.0" y="174.0"></text>
</g>
<g>
<title>ip_rcv (7 samples, 0.03%)</title><rect x="553.0" y="147.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="556.0" y="158.0"></text>
</g>
<g>
<title>ip_local_deliver (7 samples, 0.03%)</title><rect x="553.0" y="131.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="556.0" y="142.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (7 samples, 0.03%)</title><rect x="553.0" y="115.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="556.0" y="126.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (7 samples, 0.03%)</title><rect x="553.0" y="99.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.0" y="110.0"></text>
</g>
<g>
<title>tcp_v4_rcv (7 samples, 0.03%)</title><rect x="553.0" y="83.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="556.0" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.03%)</title><rect x="553.0" y="67.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="556.0" y="78.0"></text>
</g>
<g>
<title>tcp_rcv_established (7 samples, 0.03%)</title><rect x="553.0" y="51.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="556.0" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.02%)</title><rect x="553.0" y="35.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="556.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.putAsync (436 samples, 2.05%)</title><rect x="553.5" y="675.0" width="24.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.5" y="686.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (422 samples, 1.99%)</title><rect x="553.6" y="659.0" width="23.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.6" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (356 samples, 1.68%)</title><rect x="557.1" y="643.0" width="19.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (354 samples, 1.67%)</title><rect x="557.2" y="627.0" width="19.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (354 samples, 1.67%)</title><rect x="557.2" y="611.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (67 samples, 0.32%)</title><rect x="560.9" y="595.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (67 samples, 0.32%)</title><rect x="560.9" y="579.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (67 samples, 0.32%)</title><rect x="560.9" y="563.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (67 samples, 0.32%)</title><rect x="560.9" y="547.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (67 samples, 0.32%)</title><rect x="560.9" y="531.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (26 samples, 0.12%)</title><rect x="564.7" y="595.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (26 samples, 0.12%)</title><rect x="564.7" y="579.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (25 samples, 0.12%)</title><rect x="564.7" y="563.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (24 samples, 0.11%)</title><rect x="564.7" y="547.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (24 samples, 0.11%)</title><rect x="564.7" y="531.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.05%)</title><rect x="565.4" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.4" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.02%)</title><rect x="565.4" y="499.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="568.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="565.7" y="499.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="568.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (194 samples, 0.91%)</title><rect x="566.1" y="595.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (194 samples, 0.91%)</title><rect x="566.1" y="579.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (194 samples, 0.91%)</title><rect x="566.1" y="563.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (194 samples, 0.91%)</title><rect x="566.1" y="547.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (185 samples, 0.87%)</title><rect x="566.6" y="531.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.6" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (27 samples, 0.13%)</title><rect x="566.8" y="515.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="569.8" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.03%)</title><rect x="567.2" y="499.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="570.2" y="510.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (8 samples, 0.04%)</title><rect x="567.5" y="499.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="570.5" y="510.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (152 samples, 0.72%)</title><rect x="568.4" y="515.0" width="8.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="571.4" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (145 samples, 0.68%)</title><rect x="568.8" y="499.0" width="8.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="571.8" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (145 samples, 0.68%)</title><rect x="568.8" y="483.0" width="8.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="571.8" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (143 samples, 0.67%)</title><rect x="568.9" y="467.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="571.9" y="478.0"></text>
</g>
<g>
<title>do_futex (142 samples, 0.67%)</title><rect x="569.0" y="451.0" width="7.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="572.0" y="462.0"></text>
</g>
<g>
<title>futex_wake (139 samples, 0.66%)</title><rect x="569.2" y="435.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="572.2" y="446.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.03%)</title><rect x="570.6" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="573.6" y="430.0"></text>
</g>
<g>
<title>wake_up_q (106 samples, 0.50%)</title><rect x="571.0" y="419.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="574.0" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (106 samples, 0.50%)</title><rect x="571.0" y="403.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="574.0" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (105 samples, 0.49%)</title><rect x="571.1" y="387.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="574.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (12 samples, 0.06%)</title><rect x="577.1" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (12 samples, 0.06%)</title><rect x="577.1" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="580.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (65 samples, 0.31%)</title><rect x="577.7" y="675.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (62 samples, 0.29%)</title><rect x="577.9" y="659.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.06%)</title><rect x="580.0" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.06%)</title><rect x="580.0" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (5 samples, 0.02%)</title><rect x="580.6" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (5 samples, 0.02%)</title><rect x="580.6" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.02%)</title><rect x="580.6" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.6" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.03%)</title><rect x="581.0" y="643.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="584.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (118 samples, 0.56%)</title><rect x="581.4" y="691.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (116 samples, 0.55%)</title><rect x="581.5" y="675.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.08%)</title><rect x="583.9" y="659.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="586.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.08%)</title><rect x="583.9" y="643.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (18 samples, 0.08%)</title><rect x="583.9" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (44 samples, 0.21%)</title><rect x="584.9" y="659.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (44 samples, 0.21%)</title><rect x="584.9" y="643.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.9" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.03%)</title><rect x="587.6" y="659.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="590.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (38 samples, 0.18%)</title><rect x="588.0" y="691.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (23 samples, 0.11%)</title><rect x="588.5" y="675.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parse (5 samples, 0.02%)</title><rect x="589.8" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parseOrDefault (145 samples, 0.68%)</title><rect x="590.1" y="691.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parse (129 samples, 0.61%)</title><rect x="591.0" y="675.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (16 samples, 0.08%)</title><rect x="591.7" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (16 samples, 0.08%)</title><rect x="591.7" y="643.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (99 samples, 0.47%)</title><rect x="592.6" y="659.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (46 samples, 0.22%)</title><rect x="593.7" y="643.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (45 samples, 0.21%)</title><rect x="593.7" y="627.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (45 samples, 0.21%)</title><rect x="593.7" y="611.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (45 samples, 0.21%)</title><rect x="593.7" y="595.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (45 samples, 0.21%)</title><rect x="593.7" y="579.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (45 samples, 0.21%)</title><rect x="593.7" y="563.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (45 samples, 0.21%)</title><rect x="593.7" y="547.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.7" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.04%)</title><rect x="595.7" y="531.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="598.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (11 samples, 0.05%)</title><rect x="596.2" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (23 samples, 0.11%)</title><rect x="596.9" y="643.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (23 samples, 0.11%)</title><rect x="596.9" y="627.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (23 samples, 0.11%)</title><rect x="596.9" y="611.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.9" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (23 samples, 0.11%)</title><rect x="596.9" y="595.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.9" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.11%)</title><rect x="596.9" y="579.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxyReplicas (6,742 samples, 31.77%)</title><rect x="598.1" y="691.0" width="374.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.1" y="702.0">ru/mail/polis/util/Proxy.proxyReplicas</text>
</g>
<g>
<title>java/util/ArrayList.add (164 samples, 0.77%)</title><rect x="598.4" y="675.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (164 samples, 0.77%)</title><rect x="598.4" y="659.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (164 samples, 0.77%)</title><rect x="598.4" y="643.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (164 samples, 0.77%)</title><rect x="598.4" y="627.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (164 samples, 0.77%)</title><rect x="598.4" y="611.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxy (6,574 samples, 30.98%)</title><rect x="607.5" y="675.0" width="365.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.5" y="686.0">ru/mail/polis/util/Proxy.proxy</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,574 samples, 30.98%)</title><rect x="607.5" y="659.0" width="365.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.5" y="670.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,445 samples, 30.37%)</title><rect x="614.5" y="643.0" width="358.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.5" y="654.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1,288 samples, 6.07%)</title><rect x="616.2" y="627.0" width="71.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.2" y="638.0">one/nio/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (132 samples, 0.62%)</title><rect x="650.8" y="611.0" width="7.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="653.8" y="622.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (128 samples, 0.60%)</title><rect x="650.9" y="595.0" width="7.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="653.9" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (126 samples, 0.59%)</title><rect x="651.0" y="579.0" width="7.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="654.0" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (125 samples, 0.59%)</title><rect x="651.0" y="563.0" width="7.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="654.0" y="574.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (14 samples, 0.07%)</title><rect x="651.2" y="547.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="654.2" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (30 samples, 0.14%)</title><rect x="652.0" y="547.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="655.0" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (9 samples, 0.04%)</title><rect x="652.2" y="531.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="655.2" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (6 samples, 0.03%)</title><rect x="652.4" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="655.4" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (16 samples, 0.08%)</title><rect x="652.7" y="531.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="655.7" y="542.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (6 samples, 0.03%)</title><rect x="653.2" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="656.2" y="526.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (78 samples, 0.37%)</title><rect x="653.6" y="547.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="656.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (512 samples, 2.41%)</title><rect x="658.1" y="611.0" width="28.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.1" y="622.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (208 samples, 0.98%)</title><rect x="659.7" y="595.0" width="11.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="662.7" y="606.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (8 samples, 0.04%)</title><rect x="661.1" y="579.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="664.1" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.03%)</title><rect x="661.5" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="664.5" y="590.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (5 samples, 0.02%)</title><rect x="661.9" y="579.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="664.9" y="590.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (16 samples, 0.08%)</title><rect x="662.4" y="579.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="665.4" y="590.0"></text>
</g>
<g>
<title>jni_GetIntField (20 samples, 0.09%)</title><rect x="663.4" y="579.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="666.4" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (121 samples, 0.57%)</title><rect x="664.5" y="579.0" width="6.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="667.5" y="590.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (29 samples, 0.14%)</title><rect x="667.8" y="563.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="670.8" y="574.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (26 samples, 0.12%)</title><rect x="669.6" y="563.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="672.6" y="574.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (20 samples, 0.09%)</title><rect x="669.9" y="547.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="672.9" y="558.0"></text>
</g>
<g>
<title>__libc_recv (256 samples, 1.21%)</title><rect x="671.3" y="595.0" width="14.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="674.3" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (229 samples, 1.08%)</title><rect x="672.8" y="579.0" width="12.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="675.8" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (229 samples, 1.08%)</title><rect x="672.8" y="563.0" width="12.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="675.8" y="574.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (213 samples, 1.00%)</title><rect x="673.6" y="547.0" width="11.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="676.6" y="558.0"></text>
</g>
<g>
<title>__sys_recvfrom (210 samples, 0.99%)</title><rect x="673.8" y="531.0" width="11.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.8" y="542.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (167 samples, 0.79%)</title><rect x="674.0" y="515.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="677.0" y="526.0"></text>
</g>
<g>
<title>tcp_recvmsg (162 samples, 0.76%)</title><rect x="674.3" y="499.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="677.3" y="510.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.03%)</title><rect x="675.3" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="678.3" y="494.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.03%)</title><rect x="675.8" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="678.8" y="494.0"></text>
</g>
<g>
<title>sk_wait_data (103 samples, 0.49%)</title><rect x="676.3" y="483.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="679.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.08%)</title><rect x="676.4" y="467.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="679.4" y="478.0"></text>
</g>
<g>
<title>release_sock (13 samples, 0.06%)</title><rect x="677.5" y="467.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="680.5" y="478.0"></text>
</g>
<g>
<title>wait_woken (68 samples, 0.32%)</title><rect x="678.2" y="467.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="681.2" y="478.0"></text>
</g>
<g>
<title>schedule_timeout (63 samples, 0.30%)</title><rect x="678.5" y="451.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="681.5" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (39 samples, 0.18%)</title><rect x="678.6" y="435.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="681.6" y="446.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.09%)</title><rect x="680.9" y="435.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="683.9" y="446.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.06%)</title><rect x="681.3" y="419.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="684.3" y="430.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (15 samples, 0.07%)</title><rect x="682.0" y="483.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="685.0" y="494.0"></text>
</g>
<g>
<title>__skb_datagram_iter (15 samples, 0.07%)</title><rect x="682.0" y="467.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="685.0" y="478.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.02%)</title><rect x="682.2" y="451.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="685.2" y="462.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.02%)</title><rect x="682.2" y="435.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="685.2" y="446.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.03%)</title><rect x="682.4" y="451.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="685.4" y="462.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.03%)</title><rect x="682.4" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="685.4" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.02%)</title><rect x="683.0" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="686.0" y="494.0"></text>
</g>
<g>
<title>sock_recvmsg (22 samples, 0.10%)</title><rect x="683.3" y="515.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="686.3" y="526.0"></text>
</g>
<g>
<title>security_socket_recvmsg (20 samples, 0.09%)</title><rect x="683.4" y="499.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="686.4" y="510.0"></text>
</g>
<g>
<title>sock_has_perm (14 samples, 0.07%)</title><rect x="683.7" y="483.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="686.7" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.08%)</title><rect x="684.5" y="515.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="687.5" y="526.0"></text>
</g>
<g>
<title>__fget_light (17 samples, 0.08%)</title><rect x="684.5" y="499.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="687.5" y="510.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.06%)</title><rect x="684.7" y="483.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="687.7" y="494.0"></text>
</g>
<g>
<title>jni_GetIntField (9 samples, 0.04%)</title><rect x="685.7" y="595.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="688.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (9 samples, 0.04%)</title><rect x="686.6" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (12 samples, 0.06%)</title><rect x="687.2" y="611.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="690.2" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (12 samples, 0.06%)</title><rect x="687.2" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="690.2" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (12 samples, 0.06%)</title><rect x="687.2" y="579.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="690.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (561 samples, 2.64%)</title><rect x="687.8" y="627.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.8" y="638.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.03%)</title><rect x="689.0" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.03%)</title><rect x="689.0" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.coder (5 samples, 0.02%)</title><rect x="689.1" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (8 samples, 0.04%)</title><rect x="689.4" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.20%)</title><rect x="689.9" y="611.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (8 samples, 0.04%)</title><rect x="690.5" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.coder (8 samples, 0.04%)</title><rect x="690.5" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.12%)</title><rect x="690.9" y="595.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.02%)</title><rect x="691.0" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.09%)</title><rect x="691.3" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (269 samples, 1.27%)</title><rect x="692.3" y="611.0" width="15.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.3" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (192 samples, 0.90%)</title><rect x="696.6" y="595.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (188 samples, 0.89%)</title><rect x="696.8" y="579.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (8 samples, 0.04%)</title><rect x="706.8" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.8" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (8 samples, 0.04%)</title><rect x="706.8" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.8" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (8 samples, 0.04%)</title><rect x="706.8" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="709.8" y="542.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.02%)</title><rect x="707.0" y="515.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="710.0" y="526.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.02%)</title><rect x="707.0" y="499.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="710.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (39 samples, 0.18%)</title><rect x="707.3" y="611.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (20 samples, 0.09%)</title><rect x="709.5" y="611.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (132 samples, 0.62%)</title><rect x="710.6" y="611.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (88 samples, 0.41%)</title><rect x="712.6" y="595.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (88 samples, 0.41%)</title><rect x="712.6" y="579.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.02%)</title><rect x="717.5" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.02%)</title><rect x="717.5" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.02%)</title><rect x="717.5" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (14 samples, 0.07%)</title><rect x="717.9" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.05%)</title><rect x="717.9" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.9" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.03%)</title><rect x="718.1" y="579.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="721.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.02%)</title><rect x="718.7" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (501 samples, 2.36%)</title><rect x="719.0" y="627.0" width="27.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.0" y="638.0">o..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.04%)</title><rect x="738.3" y="611.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="741.3" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (140 samples, 0.66%)</title><rect x="738.8" y="611.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (140 samples, 0.66%)</title><rect x="738.8" y="595.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (140 samples, 0.66%)</title><rect x="738.8" y="579.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.8" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (10 samples, 0.05%)</title><rect x="745.9" y="563.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="748.9" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.02%)</title><rect x="746.6" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="749.6" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.02%)</title><rect x="746.6" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="749.6" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.02%)</title><rect x="746.6" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="749.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (284 samples, 1.34%)</title><rect x="746.9" y="627.0" width="15.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (54 samples, 0.25%)</title><rect x="758.9" y="611.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (53 samples, 0.25%)</title><rect x="759.0" y="595.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.0" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.02%)</title><rect x="762.0" y="611.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="765.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7 samples, 0.03%)</title><rect x="762.3" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 0.08%)</title><rect x="762.7" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.7" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (443 samples, 2.09%)</title><rect x="763.6" y="627.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.6" y="638.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (44 samples, 0.21%)</title><rect x="764.2" y="611.0" width="2.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="767.2" y="622.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (16 samples, 0.08%)</title><rect x="764.7" y="595.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="767.7" y="606.0"></text>
</g>
<g>
<title>jni_GetIntField (20 samples, 0.09%)</title><rect x="765.6" y="595.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="768.6" y="606.0"></text>
</g>
<g>
<title>setsockopt (384 samples, 1.81%)</title><rect x="766.8" y="611.0" width="21.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="769.8" y="622.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (357 samples, 1.68%)</title><rect x="768.3" y="595.0" width="19.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="771.3" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (357 samples, 1.68%)</title><rect x="768.3" y="579.0" width="19.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="771.3" y="590.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (326 samples, 1.54%)</title><rect x="770.1" y="563.0" width="18.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="773.1" y="574.0"></text>
</g>
<g>
<title>__sys_setsockopt (323 samples, 1.52%)</title><rect x="770.2" y="547.0" width="18.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="773.2" y="558.0"></text>
</g>
<g>
<title>fput_many (35 samples, 0.16%)</title><rect x="771.2" y="531.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="774.2" y="542.0"></text>
</g>
<g>
<title>security_socket_setsockopt (45 samples, 0.21%)</title><rect x="773.2" y="531.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="776.2" y="542.0"></text>
</g>
<g>
<title>selinux_netlbl_socket_setsockopt (6 samples, 0.03%)</title><rect x="773.2" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="776.2" y="526.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (38 samples, 0.18%)</title><rect x="773.6" y="515.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="776.6" y="526.0"></text>
</g>
<g>
<title>sock_has_perm (27 samples, 0.13%)</title><rect x="774.2" y="499.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="777.2" y="510.0"></text>
</g>
<g>
<title>sock_setsockopt (173 samples, 0.82%)</title><rect x="775.7" y="531.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="778.7" y="542.0"></text>
</g>
<g>
<title>__get_user_4 (17 samples, 0.08%)</title><rect x="776.5" y="515.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.5" y="526.0"></text>
</g>
<g>
<title>lock_sock_nested (37 samples, 0.17%)</title><rect x="777.5" y="515.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="780.5" y="526.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.02%)</title><rect x="777.6" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="780.6" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (29 samples, 0.14%)</title><rect x="777.9" y="499.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="780.9" y="510.0"></text>
</g>
<g>
<title>release_sock (65 samples, 0.31%)</title><rect x="779.5" y="515.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="782.5" y="526.0"></text>
</g>
<g>
<title>tcp_release_cb (36 samples, 0.17%)</title><rect x="781.1" y="499.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="784.1" y="510.0"></text>
</g>
<g>
<title>sock_set_timeout (39 samples, 0.18%)</title><rect x="783.1" y="515.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="786.1" y="526.0"></text>
</g>
<g>
<title>_copy_from_user (28 samples, 0.13%)</title><rect x="783.7" y="499.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="786.7" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_string (23 samples, 0.11%)</title><rect x="784.0" y="483.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="787.0" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (52 samples, 0.25%)</title><rect x="785.3" y="531.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="788.3" y="542.0"></text>
</g>
<g>
<title>__fget_light (51 samples, 0.24%)</title><rect x="785.4" y="515.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="788.4" y="526.0"></text>
</g>
<g>
<title>__fget (40 samples, 0.19%)</title><rect x="786.0" y="499.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="789.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (3,025 samples, 14.25%)</title><rect x="788.3" y="627.0" width="168.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.3" y="638.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (78 samples, 0.37%)</title><rect x="789.1" y="611.0" width="4.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="792.1" y="622.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (18 samples, 0.08%)</title><rect x="789.9" y="595.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="792.9" y="606.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (7 samples, 0.03%)</title><rect x="791.0" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="794.0" y="606.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (16 samples, 0.08%)</title><rect x="791.6" y="595.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="794.6" y="606.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.03%)</title><rect x="792.2" y="579.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="795.2" y="590.0"></text>
</g>
<g>
<title>jni_GetIntField (10 samples, 0.05%)</title><rect x="792.5" y="595.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="795.5" y="606.0"></text>
</g>
<g>
<title>__libc_send (2,925 samples, 13.78%)</title><rect x="793.4" y="611.0" width="162.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="796.4" y="622.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,887 samples, 13.60%)</title><rect x="795.5" y="595.0" width="160.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="798.5" y="606.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (2,887 samples, 13.60%)</title><rect x="795.5" y="579.0" width="160.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="798.5" y="590.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (2,857 samples, 13.46%)</title><rect x="796.9" y="563.0" width="158.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="799.9" y="574.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (2,856 samples, 13.46%)</title><rect x="796.9" y="547.0" width="158.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="799.9" y="558.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (11 samples, 0.05%)</title><rect x="797.5" y="531.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="800.5" y="542.0"></text>
</g>
<g>
<title>sock_sendmsg (2,829 samples, 13.33%)</title><rect x="798.1" y="531.0" width="157.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="801.1" y="542.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (10 samples, 0.05%)</title><rect x="798.8" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="801.8" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.06%)</title><rect x="799.4" y="515.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="802.4" y="526.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (6 samples, 0.03%)</title><rect x="799.6" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="802.6" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg (2,794 samples, 13.17%)</title><rect x="800.1" y="515.0" width="155.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="803.1" y="526.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (17 samples, 0.08%)</title><rect x="800.5" y="499.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="803.5" y="510.0"></text>
</g>
<g>
<title>tcp_release_cb (9 samples, 0.04%)</title><rect x="800.9" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.9" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2,770 samples, 13.05%)</title><rect x="801.4" y="499.0" width="154.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="804.4" y="510.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (10 samples, 0.05%)</title><rect x="806.0" y="483.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="809.0" y="494.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2,341 samples, 11.03%)</title><rect x="806.5" y="483.0" width="130.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="809.5" y="494.0">__tcp_push_pendi..</text>
</g>
<g>
<title>tcp_write_xmit (2,338 samples, 11.02%)</title><rect x="806.7" y="467.0" width="130.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="809.7" y="478.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (2,204 samples, 10.39%)</title><rect x="808.4" y="451.0" width="122.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="811.4" y="462.0">__tcp_transmit_..</text>
</g>
<g>
<title>__ip_queue_xmit (2,074 samples, 9.77%)</title><rect x="811.4" y="435.0" width="115.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="814.4" y="446.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (7 samples, 0.03%)</title><rect x="812.7" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="815.7" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.03%)</title><rect x="812.7" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="815.7" y="414.0"></text>
</g>
<g>
<title>ip_local_out (39 samples, 0.18%)</title><rect x="813.2" y="419.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="816.2" y="430.0"></text>
</g>
<g>
<title>__ip_local_out (37 samples, 0.17%)</title><rect x="813.3" y="403.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="816.3" y="414.0"></text>
</g>
<g>
<title>ip_send_check (25 samples, 0.12%)</title><rect x="813.4" y="387.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="816.4" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.05%)</title><rect x="814.8" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="817.8" y="398.0"></text>
</g>
<g>
<title>selinux_ipv4_output (9 samples, 0.04%)</title><rect x="814.8" y="371.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="817.8" y="382.0"></text>
</g>
<g>
<title>netlbl_enabled (5 samples, 0.02%)</title><rect x="815.1" y="355.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.1" y="366.0"></text>
</g>
<g>
<title>ip_output (2,004 samples, 9.44%)</title><rect x="815.3" y="419.0" width="111.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.3" y="430.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (10 samples, 0.05%)</title><rect x="816.2" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="819.2" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.03%)</title><rect x="816.4" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="819.4" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (1,954 samples, 9.21%)</title><rect x="816.8" y="403.0" width="108.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="819.8" y="414.0">ip_finish_out..</text>
</g>
<g>
<title>__dev_queue_xmit (84 samples, 0.40%)</title><rect x="818.1" y="387.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="821.1" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (49 samples, 0.23%)</title><rect x="819.2" y="371.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="822.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (44 samples, 0.21%)</title><rect x="819.5" y="355.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="822.5" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (15 samples, 0.07%)</title><rect x="820.0" y="339.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="823.0" y="350.0"></text>
</g>
<g>
<title>netif_rx (13 samples, 0.06%)</title><rect x="820.8" y="339.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="823.8" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (13 samples, 0.06%)</title><rect x="820.8" y="323.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="823.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (13 samples, 0.06%)</title><rect x="820.8" y="307.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="823.8" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.02%)</title><rect x="821.7" y="339.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="824.7" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.04%)</title><rect x="822.2" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="825.2" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.02%)</title><rect x="822.3" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="825.3" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,845 samples, 8.69%)</title><rect x="822.8" y="387.0" width="102.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="825.8" y="398.0">__local_bh_e..</text>
</g>
<g>
<title>do_softirq.part.0 (1,839 samples, 8.67%)</title><rect x="823.1" y="371.0" width="102.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="826.1" y="382.0">do_softirq.p..</text>
</g>
<g>
<title>do_softirq_own_stack (1,810 samples, 8.53%)</title><rect x="824.7" y="355.0" width="100.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="827.7" y="366.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (1,810 samples, 8.53%)</title><rect x="824.7" y="339.0" width="100.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="827.7" y="350.0">__softirqent..</text>
</g>
<g>
<title>net_rx_action (1,778 samples, 8.38%)</title><rect x="826.5" y="323.0" width="98.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.5" y="334.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (8 samples, 0.04%)</title><rect x="827.7" y="307.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="830.7" y="318.0"></text>
</g>
<g>
<title>process_backlog (1,747 samples, 8.23%)</title><rect x="828.2" y="307.0" width="97.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="831.2" y="318.0">process_bac..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (1,727 samples, 8.14%)</title><rect x="829.3" y="291.0" width="96.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="832.3" y="302.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_core (12 samples, 0.06%)</title><rect x="829.8" y="275.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="832.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1,706 samples, 8.04%)</title><rect x="830.5" y="275.0" width="94.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="833.5" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1,685 samples, 7.94%)</title><rect x="831.0" y="259.0" width="93.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="834.0" y="270.0">ip_local_de..</text>
</g>
<g>
<title>ip_local_deliver_finish (1,671 samples, 7.87%)</title><rect x="831.7" y="243.0" width="93.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="834.7" y="254.0">ip_local_de..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1,669 samples, 7.86%)</title><rect x="831.8" y="227.0" width="92.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="834.8" y="238.0">ip_protocol..</text>
</g>
<g>
<title>tcp_v4_rcv (1,646 samples, 7.76%)</title><rect x="833.1" y="211.0" width="91.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="836.1" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (60 samples, 0.28%)</title><rect x="837.2" y="195.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="840.2" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (9 samples, 0.04%)</title><rect x="840.0" y="179.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="843.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (54 samples, 0.25%)</title><rect x="840.6" y="195.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="843.6" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (52 samples, 0.25%)</title><rect x="840.7" y="179.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="843.7" y="190.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (44 samples, 0.21%)</title><rect x="841.2" y="163.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="844.2" y="174.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (32 samples, 0.15%)</title><rect x="841.9" y="147.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="844.9" y="158.0"></text>
</g>
<g>
<title>avc_has_perm (7 samples, 0.03%)</title><rect x="842.4" y="131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="845.4" y="142.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (8 samples, 0.04%)</title><rect x="842.7" y="131.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="845.7" y="142.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (7 samples, 0.03%)</title><rect x="843.2" y="131.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="846.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1,449 samples, 6.83%)</title><rect x="843.9" y="195.0" width="80.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="846.9" y="206.0">tcp_v4_do..</text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.03%)</title><rect x="843.9" y="179.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="846.9" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1,442 samples, 6.80%)</title><rect x="844.2" y="179.0" width="80.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="847.2" y="190.0">tcp_rcv_e..</text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.02%)</title><rect x="846.7" y="163.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="849.7" y="174.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.02%)</title><rect x="846.7" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="849.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (841 samples, 3.96%)</title><rect x="847.0" y="163.0" width="46.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="850.0" y="174.0">sock..</text>
</g>
<g>
<title>__wake_up_common_lock (799 samples, 3.77%)</title><rect x="849.4" y="147.0" width="44.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="852.4" y="158.0">__wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (795 samples, 3.75%)</title><rect x="849.6" y="131.0" width="44.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="852.6" y="142.0">_raw..</text>
</g>
<g>
<title>tcp_ack (456 samples, 2.15%)</title><rect x="893.8" y="163.0" width="25.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="896.8" y="174.0">t..</text>
</g>
<g>
<title>__kfree_skb (159 samples, 0.75%)</title><rect x="902.2" y="147.0" width="8.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="905.2" y="158.0"></text>
</g>
<g>
<title>__slab_free (49 samples, 0.23%)</title><rect x="902.2" y="131.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="905.2" y="142.0"></text>
</g>
<g>
<title>kfree (15 samples, 0.07%)</title><rect x="904.9" y="131.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="907.9" y="142.0"></text>
</g>
<g>
<title>skb_release_data (93 samples, 0.44%)</title><rect x="905.9" y="131.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="908.9" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (29 samples, 0.14%)</title><rect x="911.0" y="147.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="914.0" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.03%)</title><rect x="912.6" y="147.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="915.6" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.03%)</title><rect x="913.0" y="147.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="916.0" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (30 samples, 0.14%)</title><rect x="913.4" y="147.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.4" y="158.0"></text>
</g>
<g>
<title>__slab_free (10 samples, 0.05%)</title><rect x="914.5" y="131.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="917.5" y="142.0"></text>
</g>
<g>
<title>rb_first (24 samples, 0.11%)</title><rect x="915.1" y="147.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="918.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (12 samples, 0.06%)</title><rect x="916.4" y="147.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="919.4" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (6 samples, 0.03%)</title><rect x="917.5" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="920.5" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.02%)</title><rect x="917.9" y="147.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.9" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (18 samples, 0.08%)</title><rect x="918.1" y="147.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="921.1" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (13 samples, 0.06%)</title><rect x="919.1" y="163.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="922.1" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (19 samples, 0.09%)</title><rect x="919.9" y="163.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="922.9" y="174.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (15 samples, 0.07%)</title><rect x="921.0" y="163.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="924.0" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (39 samples, 0.18%)</title><rect x="921.8" y="163.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="924.8" y="174.0"></text>
</g>
<g>
<title>ktime_get (21 samples, 0.10%)</title><rect x="922.8" y="147.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="925.8" y="158.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.03%)</title><rect x="923.6" y="131.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="926.6" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.02%)</title><rect x="924.0" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.0" y="174.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.02%)</title><rect x="924.7" y="259.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 0.04%)</title><rect x="924.9" y="259.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="927.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (6 samples, 0.03%)</title><rect x="925.0" y="243.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="928.0" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (22 samples, 0.10%)</title><rect x="925.5" y="403.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="928.5" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute (19 samples, 0.09%)</title><rect x="925.6" y="387.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.6" y="398.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (15 samples, 0.07%)</title><rect x="925.8" y="371.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="928.8" y="382.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.02%)</title><rect x="925.9" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="928.9" y="366.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (7 samples, 0.03%)</title><rect x="926.2" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="929.2" y="366.0"></text>
</g>
<g>
<title>__skb_clone (29 samples, 0.14%)</title><rect x="926.8" y="435.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.8" y="446.0"></text>
</g>
<g>
<title>__copy_skb_header (8 samples, 0.04%)</title><rect x="927.9" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="930.9" y="430.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (19 samples, 0.09%)</title><rect x="928.7" y="435.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="931.7" y="446.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (5 samples, 0.02%)</title><rect x="930.2" y="435.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="933.2" y="446.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (6 samples, 0.03%)</title><rect x="930.4" y="435.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="933.4" y="446.0"></text>
</g>
<g>
<title>ktime_get (20 samples, 0.09%)</title><rect x="931.0" y="451.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="934.0" y="462.0"></text>
</g>
<g>
<title>read_tsc (13 samples, 0.06%)</title><rect x="931.4" y="435.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="934.4" y="446.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (74 samples, 0.35%)</title><rect x="932.1" y="451.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="935.1" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.06%)</title><rect x="934.5" y="435.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="937.5" y="446.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.06%)</title><rect x="934.5" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="937.5" y="430.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (14 samples, 0.07%)</title><rect x="935.3" y="435.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="938.3" y="446.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (9 samples, 0.04%)</title><rect x="936.2" y="451.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="939.2" y="462.0"></text>
</g>
<g>
<title>_copy_from_iter_full (77 samples, 0.36%)</title><rect x="936.7" y="483.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="939.7" y="494.0"></text>
</g>
<g>
<title>copyin (37 samples, 0.17%)</title><rect x="936.9" y="467.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="939.9" y="478.0"></text>
</g>
<g>
<title>copy_user_generic_string (37 samples, 0.17%)</title><rect x="936.9" y="451.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.9" y="462.0"></text>
</g>
<g>
<title>iov_iter_advance (37 samples, 0.17%)</title><rect x="938.9" y="467.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="941.9" y="478.0"></text>
</g>
<g>
<title>sk_page_frag_refill (29 samples, 0.14%)</title><rect x="941.0" y="483.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="944.0" y="494.0"></text>
</g>
<g>
<title>skb_page_frag_refill (27 samples, 0.13%)</title><rect x="941.1" y="467.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="944.1" y="478.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (112 samples, 0.53%)</title><rect x="942.6" y="483.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="945.6" y="494.0"></text>
</g>
<g>
<title>__alloc_skb (101 samples, 0.48%)</title><rect x="943.2" y="467.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="946.2" y="478.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (25 samples, 0.12%)</title><rect x="944.9" y="451.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="947.9" y="462.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (22 samples, 0.10%)</title><rect x="945.1" y="435.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="948.1" y="446.0"></text>
</g>
<g>
<title>__ksize (22 samples, 0.10%)</title><rect x="946.3" y="451.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="949.3" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (24 samples, 0.11%)</title><rect x="947.5" y="451.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="950.5" y="462.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.03%)</title><rect x="948.4" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="951.4" y="446.0"></text>
</g>
<g>
<title>skb_entail (37 samples, 0.17%)</title><rect x="948.8" y="483.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="951.8" y="494.0"></text>
</g>
<g>
<title>tcp_chrono_start (13 samples, 0.06%)</title><rect x="950.2" y="467.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="953.2" y="478.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (18 samples, 0.08%)</title><rect x="951.1" y="483.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="954.1" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (53 samples, 0.25%)</title><rect x="952.1" y="483.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="955.1" y="494.0"></text>
</g>
<g>
<title>tcp_current_mss (48 samples, 0.23%)</title><rect x="952.3" y="467.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="955.3" y="478.0"></text>
</g>
<g>
<title>ipv4_mtu (23 samples, 0.11%)</title><rect x="953.7" y="451.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="956.7" y="462.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (6 samples, 0.03%)</title><rect x="955.1" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="958.1" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.02%)</title><rect x="955.5" y="531.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="958.5" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.02%)</title><rect x="955.7" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="958.7" y="574.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (138 samples, 0.65%)</title><rect x="956.5" y="627.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.5" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (32 samples, 0.15%)</title><rect x="961.9" y="611.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="964.9" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (30 samples, 0.14%)</title><rect x="962.0" y="595.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="965.0" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (26 samples, 0.12%)</title><rect x="962.2" y="579.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.2" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (6 samples, 0.03%)</title><rect x="963.3" y="563.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="966.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.wait (8 samples, 0.04%)</title><rect x="963.7" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.7" y="622.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (152 samples, 0.72%)</title><rect x="964.1" y="627.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="967.1" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (47 samples, 0.22%)</title><rect x="969.6" y="611.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="972.6" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (39 samples, 0.18%)</title><rect x="969.7" y="595.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="972.7" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (35 samples, 0.16%)</title><rect x="969.9" y="579.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="972.9" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (16 samples, 0.08%)</title><rect x="971.0" y="563.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="974.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Utility.arrayContains (23 samples, 0.11%)</title><rect x="973.0" y="691.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (6 samples, 0.03%)</title><rect x="974.0" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.entity (9 samples, 0.04%)</title><rect x="974.4" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (111 samples, 0.52%)</title><rect x="974.9" y="739.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="977.9" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (111 samples, 0.52%)</title><rect x="974.9" y="723.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (40 samples, 0.19%)</title><rect x="974.9" y="707.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="977.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (71 samples, 0.33%)</title><rect x="977.1" y="707.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (71 samples, 0.33%)</title><rect x="977.1" y="691.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (71 samples, 0.33%)</title><rect x="977.1" y="675.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (559 samples, 2.63%)</title><rect x="981.1" y="771.0" width="31.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.1" y="782.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (36 samples, 0.17%)</title><rect x="982.1" y="755.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.1" y="766.0"></text>
</g>
<g>
<title>itable stub (45 samples, 0.21%)</title><rect x="984.1" y="755.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="987.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (134 samples, 0.63%)</title><rect x="986.6" y="755.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="989.6" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.03%)</title><rect x="986.7" y="739.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="989.7" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (6 samples, 0.03%)</title><rect x="986.7" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="989.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (127 samples, 0.60%)</title><rect x="987.0" y="739.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (127 samples, 0.60%)</title><rect x="987.0" y="723.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="990.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (127 samples, 0.60%)</title><rect x="987.0" y="707.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.10%)</title><rect x="992.8" y="691.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.8" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (262 samples, 1.23%)</title><rect x="994.0" y="755.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (260 samples, 1.23%)</title><rect x="994.2" y="739.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.2" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.02%)</title><rect x="1008.2" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1011.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (65 samples, 0.31%)</title><rect x="1008.6" y="755.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1011.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (369 samples, 1.74%)</title><rect x="1012.4" y="771.0" width="20.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (65 samples, 0.31%)</title><rect x="1029.1" y="755.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (62 samples, 0.29%)</title><rect x="1029.2" y="739.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1032.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (285 samples, 1.34%)</title><rect x="1032.9" y="771.0" width="15.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (268 samples, 1.26%)</title><rect x="1033.8" y="755.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.8" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.05%)</title><rect x="1047.5" y="739.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.5" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.05%)</title><rect x="1047.5" y="723.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.5" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.05%)</title><rect x="1047.6" y="707.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.6" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (10 samples, 0.05%)</title><rect x="1047.6" y="691.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1050.6" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.02%)</title><rect x="1048.2" y="739.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1051.2" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.02%)</title><rect x="1048.2" y="723.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1051.2" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.02%)</title><rect x="1048.2" y="707.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1051.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 0.05%)</title><rect x="1048.8" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.8" y="798.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (11 samples, 0.05%)</title><rect x="1048.8" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1,219 samples, 5.74%)</title><rect x="1049.4" y="787.0" width="67.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.4" y="798.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,191 samples, 5.61%)</title><rect x="1050.3" y="771.0" width="66.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.3" y="782.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (188 samples, 0.89%)</title><rect x="1051.3" y="755.0" width="10.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1054.3" y="766.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (23 samples, 0.11%)</title><rect x="1052.2" y="739.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1055.2" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (7 samples, 0.03%)</title><rect x="1053.7" y="739.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1056.7" y="750.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (15 samples, 0.07%)</title><rect x="1054.1" y="739.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1057.1" y="750.0"></text>
</g>
<g>
<title>jni_GetIntField (11 samples, 0.05%)</title><rect x="1055.3" y="739.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1058.3" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (97 samples, 0.46%)</title><rect x="1055.9" y="739.0" width="5.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1058.9" y="750.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (27 samples, 0.13%)</title><rect x="1057.0" y="723.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1060.0" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (44 samples, 0.21%)</title><rect x="1058.8" y="723.0" width="2.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1061.8" y="734.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (21 samples, 0.10%)</title><rect x="1060.1" y="707.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.1" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (6 samples, 0.03%)</title><rect x="1061.4" y="739.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1064.4" y="750.0"></text>
</g>
<g>
<title>__libc_recv (959 samples, 4.52%)</title><rect x="1061.8" y="755.0" width="53.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1064.8" y="766.0">__lib..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (933 samples, 4.40%)</title><rect x="1063.2" y="739.0" width="51.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1066.2" y="750.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (933 samples, 4.40%)</title><rect x="1063.2" y="723.0" width="51.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1066.2" y="734.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_recvfrom (908 samples, 4.28%)</title><rect x="1064.6" y="707.0" width="50.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1067.6" y="718.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (906 samples, 4.27%)</title><rect x="1064.7" y="691.0" width="50.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1067.7" y="702.0">__sys..</text>
</g>
<g>
<title>fput_many (11 samples, 0.05%)</title><rect x="1065.5" y="675.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1068.5" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (837 samples, 3.94%)</title><rect x="1066.2" y="675.0" width="46.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1069.2" y="686.0">inet..</text>
</g>
<g>
<title>tcp_recvmsg (825 samples, 3.89%)</title><rect x="1066.8" y="659.0" width="45.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1069.8" y="670.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (66 samples, 0.31%)</title><rect x="1073.0" y="643.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1076.0" y="654.0"></text>
</g>
<g>
<title>skb_release_all (46 samples, 0.22%)</title><rect x="1073.0" y="627.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1076.0" y="638.0"></text>
</g>
<g>
<title>skb_release_head_state (45 samples, 0.21%)</title><rect x="1073.1" y="611.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1076.1" y="622.0"></text>
</g>
<g>
<title>dst_release (30 samples, 0.14%)</title><rect x="1073.2" y="595.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1076.2" y="606.0"></text>
</g>
<g>
<title>sock_rfree (13 samples, 0.06%)</title><rect x="1074.8" y="595.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1077.8" y="606.0"></text>
</g>
<g>
<title>skb_release_data (19 samples, 0.09%)</title><rect x="1075.6" y="627.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1078.6" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (8 samples, 0.04%)</title><rect x="1076.6" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1079.6" y="654.0"></text>
</g>
<g>
<title>kfree_skbmem (93 samples, 0.44%)</title><rect x="1077.2" y="643.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1080.2" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (10 samples, 0.05%)</title><rect x="1082.3" y="643.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1085.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.04%)</title><rect x="1082.5" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1085.5" y="638.0"></text>
</g>
<g>
<title>release_sock (21 samples, 0.10%)</title><rect x="1082.9" y="643.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.9" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (18 samples, 0.08%)</title><rect x="1083.1" y="627.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1086.1" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (331 samples, 1.56%)</title><rect x="1084.1" y="643.0" width="18.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1087.1" y="654.0"></text>
</g>
<g>
<title>__skb_datagram_iter (327 samples, 1.54%)</title><rect x="1084.3" y="627.0" width="18.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1087.3" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (132 samples, 0.62%)</title><rect x="1089.4" y="611.0" width="7.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1092.4" y="622.0"></text>
</g>
<g>
<title>copyout (128 samples, 0.60%)</title><rect x="1089.6" y="595.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1092.6" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (128 samples, 0.60%)</title><rect x="1089.6" y="579.0" width="7.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1092.6" y="590.0"></text>
</g>
<g>
<title>simple_copy_to_iter (104 samples, 0.49%)</title><rect x="1096.7" y="611.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1099.7" y="622.0"></text>
</g>
<g>
<title>__check_object_size (102 samples, 0.48%)</title><rect x="1096.8" y="595.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1099.8" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (21 samples, 0.10%)</title><rect x="1101.1" y="579.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1104.1" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (39 samples, 0.18%)</title><rect x="1102.5" y="643.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1105.5" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (145 samples, 0.68%)</title><rect x="1104.6" y="643.0" width="8.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1107.6" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (32 samples, 0.15%)</title><rect x="1110.9" y="627.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1113.9" y="638.0"></text>
</g>
<g>
<title>ktime_get (29 samples, 0.14%)</title><rect x="1111.1" y="611.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1114.1" y="622.0"></text>
</g>
<g>
<title>read_tsc (21 samples, 0.10%)</title><rect x="1111.5" y="595.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.5" y="606.0"></text>
</g>
<g>
<title>sock_recvmsg (16 samples, 0.08%)</title><rect x="1112.7" y="675.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1115.7" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (16 samples, 0.08%)</title><rect x="1112.7" y="659.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1115.7" y="670.0"></text>
</g>
<g>
<title>sock_has_perm (15 samples, 0.07%)</title><rect x="1112.8" y="643.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1115.8" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (27 samples, 0.13%)</title><rect x="1113.6" y="675.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1116.6" y="686.0"></text>
</g>
<g>
<title>__fget_light (27 samples, 0.13%)</title><rect x="1113.6" y="659.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.6" y="670.0"></text>
</g>
<g>
<title>__fget (26 samples, 0.12%)</title><rect x="1113.7" y="643.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1116.7" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.03%)</title><rect x="1115.1" y="755.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1118.1" y="766.0"></text>
</g>
<g>
<title>jni_GetIntField (6 samples, 0.03%)</title><rect x="1115.4" y="755.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1118.4" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.07%)</title><rect x="1115.8" y="755.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1118.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (12 samples, 0.06%)</title><rect x="1116.5" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.5" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (30 samples, 0.14%)</title><rect x="1117.2" y="819.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1120.2" y="830.0"></text>
</g>
<g>
<title>gettimeofday (28 samples, 0.13%)</title><rect x="1117.3" y="803.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1120.3" y="814.0"></text>
</g>
<g>
<title>[vdso] (23 samples, 0.11%)</title><rect x="1117.6" y="787.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1120.6" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.03%)</title><rect x="1118.9" y="835.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1121.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1118.9" y="819.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1121.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1118.9" y="803.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1121.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="1118.9" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1121.9" y="798.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="1118.9" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1121.9" y="782.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="1118.9" y="755.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1121.9" y="766.0"></text>
</g>
<g>
<title>start_thread (1,272 samples, 5.99%)</title><rect x="1119.3" y="835.0" width="70.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1122.3" y="846.0">start_th..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1,272 samples, 5.99%)</title><rect x="1119.3" y="819.0" width="70.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1122.3" y="830.0">thread_n..</text>
</g>
<g>
<title>Thread::call_run() (1,272 samples, 5.99%)</title><rect x="1119.3" y="803.0" width="70.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1122.3" y="814.0">Thread::..</text>
</g>
<g>
<title>GangWorker::loop() (1,197 samples, 5.64%)</title><rect x="1119.3" y="787.0" width="66.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1122.3" y="798.0">GangWor..</text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (7 samples, 0.03%)</title><rect x="1119.3" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1122.3" y="782.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1,164 samples, 5.49%)</title><rect x="1119.7" y="771.0" width="64.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1122.7" y="782.0">G1ParTa..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (117 samples, 0.55%)</title><rect x="1119.7" y="755.0" width="6.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.7" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (9 samples, 0.04%)</title><rect x="1120.2" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.2" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (61 samples, 0.29%)</title><rect x="1120.7" y="739.0" width="3.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1123.7" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (28 samples, 0.13%)</title><rect x="1122.5" y="723.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1125.5" y="734.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.04%)</title><rect x="1123.6" y="707.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1126.6" y="718.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (7 samples, 0.03%)</title><rect x="1123.7" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1126.7" y="702.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (23 samples, 0.11%)</title><rect x="1124.1" y="739.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1127.1" y="750.0"></text>
</g>
<g>
<title>SpinPause (12 samples, 0.06%)</title><rect x="1125.6" y="739.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1128.6" y="750.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (971 samples, 4.58%)</title><rect x="1126.4" y="755.0" width="54.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1129.4" y="766.0">G1Rem..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (970 samples, 4.57%)</title><rect x="1126.5" y="739.0" width="53.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.5" y="750.0">G1Rem..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (969 samples, 4.57%)</title><rect x="1126.5" y="723.0" width="53.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1129.5" y="734.0">G1Col..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (969 samples, 4.57%)</title><rect x="1126.5" y="707.0" width="53.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1129.5" y="718.0">Dirty..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (963 samples, 4.54%)</title><rect x="1126.8" y="691.0" width="53.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.8" y="702.0">G1Ref..</text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (377 samples, 1.78%)</title><rect x="1126.8" y="675.0" width="21.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1129.8" y="686.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (59 samples, 0.28%)</title><rect x="1133.9" y="659.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1136.9" y="670.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (14 samples, 0.07%)</title><rect x="1136.5" y="643.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.5" y="654.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (64 samples, 0.30%)</title><rect x="1137.2" y="659.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.2" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (120 samples, 0.57%)</title><rect x="1141.0" y="659.0" width="6.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.0" y="670.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringUpdateRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringUpdateRSClosure, OopClosure, G1ScanObjsDuringUpdateRSClosure&gt;(void (G1ScanObjsDuringUpdateRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringUpdateRSClosure*, unsigned int*) (100 samples, 0.47%)</title><rect x="1142.1" y="643.0" width="5.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1145.1" y="654.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (5 samples, 0.02%)</title><rect x="1147.4" y="627.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.4" y="638.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (574 samples, 2.70%)</title><rect x="1147.8" y="675.0" width="31.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.8" y="686.0">G1..</text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (20 samples, 0.09%)</title><rect x="1163.4" y="659.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.4" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (262 samples, 1.23%)</title><rect x="1164.5" y="659.0" width="14.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.5" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (57 samples, 0.27%)</title><rect x="1175.9" y="643.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.9" y="654.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanEvacuatedObjClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanEvacuatedObjClosure, OopClosure, G1ScanEvacuatedObjClosure&gt;(void (G1ScanEvacuatedObjClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanEvacuatedObjClosure*, unsigned int*) (43 samples, 0.20%)</title><rect x="1176.7" y="627.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.7" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.02%)</title><rect x="1179.3" y="659.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.3" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (7 samples, 0.03%)</title><rect x="1179.7" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.7" y="686.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (30 samples, 0.14%)</title><rect x="1180.4" y="755.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.4" y="766.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (29 samples, 0.14%)</title><rect x="1180.4" y="739.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="750.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (28 samples, 0.13%)</title><rect x="1180.5" y="723.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.5" y="734.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (23 samples, 0.11%)</title><rect x="1180.8" y="707.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.8" y="718.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (12 samples, 0.06%)</title><rect x="1181.0" y="691.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.0" y="702.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (6 samples, 0.03%)</title><rect x="1181.7" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.7" y="702.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (40 samples, 0.19%)</title><rect x="1182.1" y="755.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.1" y="766.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (32 samples, 0.15%)</title><rect x="1182.1" y="739.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.1" y="750.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (6 samples, 0.03%)</title><rect x="1182.1" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.1" y="734.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (26 samples, 0.12%)</title><rect x="1182.4" y="723.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (26 samples, 0.12%)</title><rect x="1182.4" y="707.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (23 samples, 0.11%)</title><rect x="1182.6" y="691.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.6" y="702.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (8 samples, 0.04%)</title><rect x="1183.0" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.0" y="686.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (7 samples, 0.03%)</title><rect x="1183.0" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.0" y="670.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (6 samples, 0.03%)</title><rect x="1183.1" y="643.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.1" y="654.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (8 samples, 0.04%)</title><rect x="1183.9" y="739.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.9" y="750.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (8 samples, 0.04%)</title><rect x="1184.5" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.5" y="782.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (6 samples, 0.03%)</title><rect x="1184.6" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.6" y="766.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (12 samples, 0.06%)</title><rect x="1185.1" y="771.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.1" y="782.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (11 samples, 0.05%)</title><rect x="1185.2" y="755.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.2" y="766.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (9 samples, 0.04%)</title><rect x="1185.2" y="739.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.2" y="750.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.03%)</title><rect x="1185.3" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="734.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (7 samples, 0.03%)</title><rect x="1185.3" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.3" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (43 samples, 0.20%)</title><rect x="1185.8" y="787.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.8" y="798.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (39 samples, 0.18%)</title><rect x="1185.8" y="771.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.8" y="782.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (39 samples, 0.18%)</title><rect x="1185.8" y="755.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.8" y="766.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (38 samples, 0.18%)</title><rect x="1185.8" y="739.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.8" y="750.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (38 samples, 0.18%)</title><rect x="1185.8" y="723.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.8" y="734.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (26 samples, 0.12%)</title><rect x="1185.8" y="707.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.8" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (19 samples, 0.09%)</title><rect x="1186.2" y="691.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.2" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.03%)</title><rect x="1186.4" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>Compile::Optimize() (10 samples, 0.05%)</title><rect x="1187.3" y="707.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.3" y="718.0"></text>
</g>
<g>
<title>VMThread::run() (32 samples, 0.15%)</title><rect x="1188.2" y="787.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>VMThread::loop() (32 samples, 0.15%)</title><rect x="1188.2" y="771.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (29 samples, 0.14%)</title><rect x="1188.3" y="755.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.3" y="766.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (29 samples, 0.14%)</title><rect x="1188.3" y="739.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (28 samples, 0.13%)</title><rect x="1188.3" y="723.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (28 samples, 0.13%)</title><rect x="1188.3" y="707.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.3" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (21 samples, 0.10%)</title><rect x="1188.5" y="691.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.5" y="702.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (16 samples, 0.08%)</title><rect x="1188.6" y="675.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.6" y="686.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (15 samples, 0.07%)</title><rect x="1188.7" y="659.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (14 samples, 0.07%)</title><rect x="1188.7" y="643.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
</g>
</svg>
