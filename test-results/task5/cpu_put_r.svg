<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (5,513 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.07%)</title><rect x="10.2" y="867.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.2" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="10.4" y="851.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.05%)</title><rect x="10.4" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.05%)</title><rect x="10.4" y="819.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.4" y="830.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (3 samples, 0.05%)</title><rect x="10.4" y="803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="11.1" y="867.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.1" y="878.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (2 samples, 0.04%)</title><rect x="11.1" y="851.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="14.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="11.1" y="835.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="14.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="11.1" y="819.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="14.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="11.1" y="803.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="14.1" y="814.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="11.1" y="787.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="14.1" y="798.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="11.1" y="771.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="14.1" y="782.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 0.11%)</title><rect x="11.5" y="867.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="14.5" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="11.5" y="851.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.5" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.05%)</title><rect x="11.5" y="835.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.5" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="12.1" y="851.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,739 samples, 31.54%)</title><rect x="13.2" y="867.0" width="372.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.2" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,739 samples, 31.54%)</title><rect x="13.2" y="851.0" width="372.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.2" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,739 samples, 31.54%)</title><rect x="13.2" y="835.0" width="372.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.2" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,486 samples, 26.95%)</title><rect x="13.9" y="819.0" width="318.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.9" y="830.0">java/util/concurrent/CompletableFuture$Asyn..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,022 samples, 18.54%)</title><rect x="17.1" y="803.0" width="218.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.1" y="814.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (19 samples, 0.34%)</title><rect x="18.8" y="787.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.07%)</title><rect x="19.4" y="771.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.07%)</title><rect x="19.4" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.11%)</title><rect x="20.3" y="771.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$128/1268322720.apply (6 samples, 0.11%)</title><rect x="21.6" y="771.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$putAsync$5 (6 samples, 0.11%)</title><rect x="21.6" y="755.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.09%)</title><rect x="21.8" y="739.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.8" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="22.0" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="25.0" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="22.4" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="25.4" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="22.4" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="25.4" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="22.4" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="25.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="22.4" y="675.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="22.4" y="659.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="25.4" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="22.4" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="25.4" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.04%)</title><rect x="22.4" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (993 samples, 18.01%)</title><rect x="22.8" y="787.0" width="212.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.8" y="798.0">java/util/concurrent/Complet..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8 samples, 0.15%)</title><rect x="22.8" y="771.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (985 samples, 17.87%)</title><rect x="24.6" y="771.0" width="210.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.6" y="782.0">java/util/concurrent/Complet..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="24.6" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="24.6" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$130/1610207105.accept (983 samples, 17.83%)</title><rect x="25.0" y="755.0" width="210.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.0" y="766.0">ru/mail/polis/service/s3poni..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (983 samples, 17.83%)</title><rect x="25.0" y="739.0" width="210.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.0" y="750.0">ru/mail/polis/service/s3poni..</text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (983 samples, 17.83%)</title><rect x="25.0" y="723.0" width="210.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.0" y="734.0">ru/mail/polis/util/Utility.s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (983 samples, 17.83%)</title><rect x="25.0" y="707.0" width="210.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.0" y="718.0">one/nio/http/HttpSession.sen..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (20 samples, 0.36%)</title><rect x="29.3" y="691.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (20 samples, 0.36%)</title><rect x="29.3" y="675.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.36%)</title><rect x="29.3" y="659.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.3" y="670.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="30.1" y="643.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="33.1" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (12 samples, 0.22%)</title><rect x="31.0" y="643.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.0" y="654.0"></text>
</g>
<g>
<title>gettimeofday (12 samples, 0.22%)</title><rect x="31.0" y="627.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="34.0" y="638.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.22%)</title><rect x="31.0" y="611.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="34.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (920 samples, 16.69%)</title><rect x="33.5" y="691.0" width="197.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.5" y="702.0">one/nio/http/HttpSession.w..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (30 samples, 0.54%)</title><rect x="34.0" y="675.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="37.4" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.4" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="37.4" y="643.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.4" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="37.6" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="40.6" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="37.6" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="40.6" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="37.6" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.6" y="606.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="37.6" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="40.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.20%)</title><rect x="38.0" y="659.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (11 samples, 0.20%)</title><rect x="38.0" y="643.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.20%)</title><rect x="38.0" y="627.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.0" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (888 samples, 16.11%)</title><rect x="40.4" y="675.0" width="190.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.4" y="686.0">one/nio/net/Session.write</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="40.4" y="659.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="43.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (885 samples, 16.05%)</title><rect x="41.0" y="659.0" width="189.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.0" y="670.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (882 samples, 16.00%)</title><rect x="41.7" y="643.0" width="188.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.7" y="654.0">one/nio/net/Session$Arra..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.05%)</title><rect x="42.7" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.7" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (874 samples, 15.85%)</title><rect x="43.4" y="627.0" width="187.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.4" y="638.0">one/nio/net/NativeSocket..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (36 samples, 0.65%)</title><rect x="44.5" y="611.0" width="7.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="47.5" y="622.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (4 samples, 0.07%)</title><rect x="46.0" y="595.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="49.0" y="606.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="46.8" y="595.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="49.8" y="606.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (19 samples, 0.34%)</title><rect x="47.9" y="595.0" width="4.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="50.9" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.09%)</title><rect x="49.2" y="579.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="52.2" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.11%)</title><rect x="50.2" y="579.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="53.2" y="590.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (5 samples, 0.09%)</title><rect x="50.5" y="563.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="53.5" y="574.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (2 samples, 0.04%)</title><rect x="51.5" y="579.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="54.5" y="590.0"></text>
</g>
<g>
<title>__libc_send (830 samples, 15.06%)</title><rect x="52.2" y="611.0" width="177.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="55.2" y="622.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (818 samples, 14.84%)</title><rect x="54.7" y="595.0" width="175.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.7" y="606.0">entry_SYSCALL_64_after_..</text>
</g>
<g>
<title>do_syscall_64 (818 samples, 14.84%)</title><rect x="54.7" y="579.0" width="175.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="57.7" y="590.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (805 samples, 14.60%)</title><rect x="57.3" y="563.0" width="172.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.3" y="574.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (803 samples, 14.57%)</title><rect x="57.7" y="547.0" width="171.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.7" y="558.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (774 samples, 14.04%)</title><rect x="58.6" y="531.0" width="165.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="61.6" y="542.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (10 samples, 0.18%)</title><rect x="58.6" y="515.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="61.6" y="526.0"></text>
</g>
<g>
<title>inet_send_prepare (6 samples, 0.11%)</title><rect x="59.4" y="499.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="62.4" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.18%)</title><rect x="60.7" y="515.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="63.7" y="526.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.04%)</title><rect x="60.9" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="63.9" y="510.0"></text>
</g>
<g>
<title>sock_has_perm (7 samples, 0.13%)</title><rect x="61.4" y="499.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="64.4" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg (754 samples, 13.68%)</title><rect x="62.9" y="515.0" width="161.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="65.9" y="526.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="63.3" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="66.3" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="63.3" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="66.3" y="494.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.11%)</title><rect x="63.9" y="499.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="66.9" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="64.4" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="67.4" y="494.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="64.8" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="67.8" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (743 samples, 13.48%)</title><rect x="65.2" y="499.0" width="159.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.2" y="510.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.13%)</title><rect x="70.4" y="483.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="73.4" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.09%)</title><rect x="70.6" y="467.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="73.6" y="478.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (623 samples, 11.30%)</title><rect x="71.9" y="483.0" width="133.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="74.9" y="494.0">__tcp_push_pendin..</text>
</g>
<g>
<title>tcp_write_xmit (621 samples, 11.26%)</title><rect x="72.3" y="467.0" width="132.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="75.3" y="478.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (586 samples, 10.63%)</title><rect x="75.1" y="451.0" width="125.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="78.1" y="462.0">__tcp_transmit_..</text>
</g>
<g>
<title>__ip_queue_xmit (551 samples, 9.99%)</title><rect x="78.7" y="435.0" width="117.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="81.7" y="446.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.09%)</title><rect x="80.0" y="419.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="83.0" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="80.4" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="83.4" y="414.0"></text>
</g>
<g>
<title>ip_local_out (8 samples, 0.15%)</title><rect x="81.1" y="419.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="84.1" y="430.0"></text>
</g>
<g>
<title>__ip_local_out (8 samples, 0.15%)</title><rect x="81.1" y="403.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.1" y="414.0"></text>
</g>
<g>
<title>ip_send_check (7 samples, 0.13%)</title><rect x="81.1" y="387.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="84.1" y="398.0"></text>
</g>
<g>
<title>ip_output (532 samples, 9.65%)</title><rect x="82.8" y="419.0" width="113.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="85.8" y="430.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (5 samples, 0.09%)</title><rect x="83.8" y="403.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="86.8" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.07%)</title><rect x="84.1" y="387.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="87.1" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (508 samples, 9.21%)</title><rect x="84.9" y="403.0" width="108.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="87.9" y="414.0">ip_finish_out..</text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.34%)</title><rect x="88.3" y="387.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.3" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (14 samples, 0.25%)</title><rect x="89.0" y="371.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="92.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.22%)</title><rect x="89.4" y="355.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="92.4" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.04%)</title><rect x="89.8" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="92.8" y="350.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.11%)</title><rect x="90.3" y="339.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="93.3" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.11%)</title><rect x="90.3" y="323.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="93.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.07%)</title><rect x="90.7" y="307.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="93.7" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.04%)</title><rect x="91.5" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.5" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (473 samples, 8.58%)</title><rect x="92.4" y="387.0" width="101.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="95.4" y="398.0">__local_bh_e..</text>
</g>
<g>
<title>do_softirq.part.0 (471 samples, 8.54%)</title><rect x="92.8" y="371.0" width="100.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="95.8" y="382.0">do_softirq.p..</text>
</g>
<g>
<title>do_softirq_own_stack (464 samples, 8.42%)</title><rect x="94.3" y="355.0" width="99.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="97.3" y="366.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (464 samples, 8.42%)</title><rect x="94.3" y="339.0" width="99.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.3" y="350.0">__softirqent..</text>
</g>
<g>
<title>net_rx_action (449 samples, 8.14%)</title><rect x="97.5" y="323.0" width="96.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.5" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (441 samples, 8.00%)</title><rect x="99.3" y="307.0" width="94.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="102.3" y="318.0">process_bac..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (424 samples, 7.69%)</title><rect x="102.9" y="291.0" width="90.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.9" y="302.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (10 samples, 0.18%)</title><rect x="103.3" y="275.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="106.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (412 samples, 7.47%)</title><rect x="105.5" y="275.0" width="88.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="108.5" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (410 samples, 7.44%)</title><rect x="105.7" y="259.0" width="87.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.7" y="270.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (404 samples, 7.33%)</title><rect x="107.0" y="243.0" width="86.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="110.0" y="254.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (402 samples, 7.29%)</title><rect x="107.4" y="227.0" width="86.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.4" y="238.0">ip_protoco..</text>
</g>
<g>
<title>tcp_v4_rcv (398 samples, 7.22%)</title><rect x="108.2" y="211.0" width="85.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="111.2" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (12 samples, 0.22%)</title><rect x="112.7" y="195.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="115.7" y="206.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="115.3" y="195.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="118.3" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (19 samples, 0.34%)</title><rect x="115.7" y="195.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="118.7" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (18 samples, 0.33%)</title><rect x="115.9" y="179.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="118.9" y="190.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (15 samples, 0.27%)</title><rect x="116.6" y="163.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="119.6" y="174.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (8 samples, 0.15%)</title><rect x="118.1" y="147.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="121.1" y="158.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.05%)</title><rect x="118.5" y="131.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="121.5" y="142.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (2 samples, 0.04%)</title><rect x="119.2" y="131.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="122.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (341 samples, 6.19%)</title><rect x="119.8" y="195.0" width="73.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="122.8" y="206.0">tcp_v4_d..</text>
</g>
<g>
<title>tcp_rcv_established (338 samples, 6.13%)</title><rect x="120.4" y="179.0" width="72.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="123.4" y="190.0">tcp_rcv_..</text>
</g>
<g>
<title>sock_def_readable (201 samples, 3.65%)</title><rect x="123.7" y="163.0" width="43.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="126.7" y="174.0">sock..</text>
</g>
<g>
<title>__wake_up_common_lock (195 samples, 3.54%)</title><rect x="124.9" y="147.0" width="41.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="127.9" y="158.0">__w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (193 samples, 3.50%)</title><rect x="125.4" y="131.0" width="41.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="128.4" y="142.0">_ra..</text>
</g>
<g>
<title>tcp_ack (97 samples, 1.76%)</title><rect x="166.7" y="163.0" width="20.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="169.7" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (36 samples, 0.65%)</title><rect x="172.0" y="147.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="175.0" y="158.0"></text>
</g>
<g>
<title>__slab_free (11 samples, 0.20%)</title><rect x="172.0" y="131.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="175.0" y="142.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="174.6" y="131.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="177.6" y="142.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="174.6" y="115.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="177.6" y="126.0"></text>
</g>
<g>
<title>skb_release_data (22 samples, 0.40%)</title><rect x="175.0" y="131.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="178.0" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (7 samples, 0.13%)</title><rect x="179.7" y="147.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.7" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.11%)</title><rect x="181.4" y="147.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="184.4" y="158.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.07%)</title><rect x="181.9" y="131.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.9" y="142.0"></text>
</g>
<g>
<title>rb_first (5 samples, 0.09%)</title><rect x="182.7" y="147.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="185.7" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (6 samples, 0.11%)</title><rect x="184.0" y="147.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.0" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.04%)</title><rect x="185.3" y="147.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="188.3" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="185.7" y="147.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.7" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (5 samples, 0.09%)</title><rect x="186.4" y="147.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="189.4" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (9 samples, 0.16%)</title><rect x="187.4" y="163.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="190.4" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.11%)</title><rect x="189.6" y="163.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.6" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.15%)</title><rect x="190.9" y="163.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="193.9" y="174.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.09%)</title><rect x="191.5" y="147.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="194.5" y="158.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.07%)</title><rect x="191.7" y="131.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="194.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.04%)</title><rect x="193.0" y="195.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="196.0" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.25%)</title><rect x="193.6" y="403.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="196.6" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute (9 samples, 0.16%)</title><rect x="194.3" y="387.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="197.3" y="398.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (8 samples, 0.15%)</title><rect x="194.5" y="371.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="197.5" y="382.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.09%)</title><rect x="194.9" y="355.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="197.9" y="366.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.04%)</title><rect x="196.2" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="199.2" y="398.0"></text>
</g>
<g>
<title>__skb_clone (9 samples, 0.16%)</title><rect x="196.6" y="435.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="199.6" y="446.0"></text>
</g>
<g>
<title>__copy_skb_header (6 samples, 0.11%)</title><rect x="197.3" y="419.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.3" y="430.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.05%)</title><rect x="198.6" y="435.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="201.6" y="446.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="199.6" y="435.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="202.6" y="446.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.09%)</title><rect x="200.5" y="451.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="203.5" y="462.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.07%)</title><rect x="200.7" y="435.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="203.7" y="446.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.25%)</title><rect x="201.8" y="451.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="204.8" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.11%)</title><rect x="202.6" y="435.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.6" y="446.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.11%)</title><rect x="202.6" y="419.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="203.3" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="206.3" y="414.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (3 samples, 0.05%)</title><rect x="203.9" y="435.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="206.9" y="446.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.04%)</title><rect x="204.8" y="451.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="207.8" y="462.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.13%)</title><rect x="205.2" y="483.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="208.2" y="494.0"></text>
</g>
<g>
<title>copyin (6 samples, 0.11%)</title><rect x="205.2" y="467.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="208.2" y="478.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.11%)</title><rect x="205.2" y="451.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="208.2" y="462.0"></text>
</g>
<g>
<title>sk_page_frag_refill (10 samples, 0.18%)</title><rect x="206.7" y="483.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="209.7" y="494.0"></text>
</g>
<g>
<title>skb_page_frag_refill (10 samples, 0.18%)</title><rect x="206.7" y="467.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="209.7" y="478.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (40 samples, 0.73%)</title><rect x="208.8" y="483.0" width="8.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="211.8" y="494.0"></text>
</g>
<g>
<title>__alloc_skb (32 samples, 0.58%)</title><rect x="210.6" y="467.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="213.6" y="478.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.18%)</title><rect x="211.8" y="451.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="214.8" y="462.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.18%)</title><rect x="211.8" y="435.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="214.8" y="446.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="213.6" y="419.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="216.6" y="430.0"></text>
</g>
<g>
<title>__ksize (6 samples, 0.11%)</title><rect x="214.0" y="451.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="217.0" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (10 samples, 0.18%)</title><rect x="215.3" y="451.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="218.3" y="462.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.09%)</title><rect x="216.3" y="435.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.3" y="446.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.11%)</title><rect x="217.4" y="483.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="220.4" y="494.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.05%)</title><rect x="218.7" y="483.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.7" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (21 samples, 0.38%)</title><rect x="219.3" y="483.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="222.3" y="494.0"></text>
</g>
<g>
<title>tcp_current_mss (18 samples, 0.33%)</title><rect x="220.0" y="467.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="223.0" y="478.0"></text>
</g>
<g>
<title>ipv4_mtu (8 samples, 0.15%)</title><rect x="222.1" y="451.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="225.1" y="462.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (2 samples, 0.04%)</title><rect x="223.8" y="483.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="226.8" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (25 samples, 0.45%)</title><rect x="224.3" y="531.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="227.3" y="542.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.42%)</title><rect x="224.7" y="515.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="227.7" y="526.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.33%)</title><rect x="225.8" y="499.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="228.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.42%)</title><rect x="230.5" y="691.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.22%)</title><rect x="232.8" y="675.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.22%)</title><rect x="232.8" y="659.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.04%)</title><rect x="235.4" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$121/1169830266.get (449 samples, 8.14%)</title><rect x="235.8" y="803.0" width="96.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.8" y="814.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$putAsync$4 (449 samples, 8.14%)</title><rect x="235.8" y="787.0" width="96.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.8" y="798.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/DaoService.put (449 samples, 8.14%)</title><rect x="235.8" y="771.0" width="96.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.8" y="782.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.13%)</title><rect x="235.8" y="755.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.8" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.09%)</title><rect x="236.0" y="739.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="239.0" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.05%)</title><rect x="236.0" y="723.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="239.0" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="236.0" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="239.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="236.0" y="691.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="239.0" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="236.7" y="723.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="239.7" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="236.7" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="239.7" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="236.7" y="691.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="239.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="236.7" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="239.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.upsertWithTimeStamp (442 samples, 8.02%)</title><rect x="237.3" y="755.0" width="94.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="240.3" y="766.0">ru/mail/pol..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (24 samples, 0.44%)</title><rect x="237.3" y="739.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (24 samples, 0.44%)</title><rect x="237.3" y="723.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (24 samples, 0.44%)</title><rect x="237.3" y="707.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (23 samples, 0.42%)</title><rect x="237.5" y="691.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (23 samples, 0.42%)</title><rect x="237.5" y="675.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (9 samples, 0.16%)</title><rect x="242.4" y="739.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (9 samples, 0.16%)</title><rect x="242.4" y="723.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (9 samples, 0.16%)</title><rect x="242.4" y="707.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (9 samples, 0.16%)</title><rect x="242.4" y="691.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.upsertWithTimeStamp (370 samples, 6.71%)</title><rect x="244.4" y="739.0" width="79.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.4" y="750.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (365 samples, 6.62%)</title><rect x="244.4" y="723.0" width="78.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.4" y="734.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (352 samples, 6.38%)</title><rect x="247.2" y="707.0" width="75.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.2" y="718.0">java/uti..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.15%)</title><rect x="251.4" y="691.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (324 samples, 5.88%)</title><rect x="253.1" y="691.0" width="69.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.1" y="702.0">java/ut..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (148 samples, 2.68%)</title><rect x="290.8" y="675.0" width="31.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.8" y="686.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (148 samples, 2.68%)</title><rect x="290.8" y="659.0" width="31.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.8" y="670.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (148 samples, 2.68%)</title><rect x="290.8" y="643.0" width="31.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.8" y="654.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (61 samples, 1.11%)</title><rect x="309.4" y="627.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.4" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (61 samples, 1.11%)</title><rect x="309.4" y="611.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.4" y="622.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.07%)</title><rect x="321.6" y="595.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="324.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.of (5 samples, 0.09%)</title><rect x="322.5" y="723.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.5" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.09%)</title><rect x="322.5" y="707.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="325.5" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.09%)</title><rect x="322.5" y="691.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="325.5" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.07%)</title><rect x="322.7" y="675.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="325.7" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.07%)</title><rect x="322.7" y="659.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="325.7" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (4 samples, 0.07%)</title><rect x="322.7" y="643.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="325.7" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="322.9" y="627.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="325.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.flush (39 samples, 0.71%)</title><rect x="323.6" y="739.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.save (39 samples, 0.71%)</title><rect x="323.6" y="723.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskManager.saveTo (39 samples, 0.71%)</title><rect x="323.6" y="707.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (35 samples, 0.63%)</title><rect x="324.4" y="691.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (35 samples, 0.63%)</title><rect x="324.4" y="675.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (33 samples, 0.60%)</title><rect x="324.4" y="659.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="327.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (33 samples, 0.60%)</title><rect x="324.4" y="643.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (33 samples, 0.60%)</title><rect x="324.4" y="627.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.4" y="638.0"></text>
</g>
<g>
<title>__libc_write (32 samples, 0.58%)</title><rect x="324.6" y="611.0" width="6.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="327.6" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.56%)</title><rect x="324.9" y="595.0" width="6.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="327.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.56%)</title><rect x="324.9" y="579.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="327.9" y="590.0"></text>
</g>
<g>
<title>ksys_write (31 samples, 0.56%)</title><rect x="324.9" y="563.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="327.9" y="574.0"></text>
</g>
<g>
<title>vfs_write (30 samples, 0.54%)</title><rect x="325.1" y="547.0" width="6.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="328.1" y="558.0"></text>
</g>
<g>
<title>new_sync_write (30 samples, 0.54%)</title><rect x="325.1" y="531.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="328.1" y="542.0"></text>
</g>
<g>
<title>ext4_file_write_iter?[ext4] (29 samples, 0.53%)</title><rect x="325.3" y="515.0" width="6.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.3" y="526.0"></text>
</g>
<g>
<title>__generic_file_write_iter (29 samples, 0.53%)</title><rect x="325.3" y="499.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="328.3" y="510.0"></text>
</g>
<g>
<title>generic_perform_write (29 samples, 0.53%)</title><rect x="325.3" y="483.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.3" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_begin?[ext4] (8 samples, 0.15%)</title><rect x="325.3" y="467.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.3" y="478.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.04%)</title><rect x="325.5" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="328.5" y="462.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.04%)</title><rect x="325.5" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="328.5" y="446.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="325.5" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="328.5" y="430.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.04%)</title><rect x="325.5" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.5" y="414.0"></text>
</g>
<g>
<title>jbd2__journal_start?[jbd2] (5 samples, 0.09%)</title><rect x="325.9" y="451.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="328.9" y="462.0"></text>
</g>
<g>
<title>start_this_handle?[jbd2] (5 samples, 0.09%)</title><rect x="325.9" y="435.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="328.9" y="446.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.04%)</title><rect x="326.1" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="329.1" y="430.0"></text>
</g>
<g>
<title>add_transaction_credits?[jbd2] (2 samples, 0.04%)</title><rect x="326.6" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="329.6" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_end?[ext4] (20 samples, 0.36%)</title><rect x="327.0" y="467.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="330.0" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_stop?[ext4] (4 samples, 0.07%)</title><rect x="327.0" y="451.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="330.0" y="462.0"></text>
</g>
<g>
<title>jbd2_journal_stop?[jbd2] (4 samples, 0.07%)</title><rect x="327.0" y="435.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.0" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="327.4" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="330.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="327.4" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="330.4" y="414.0"></text>
</g>
<g>
<title>generic_write_end (16 samples, 0.29%)</title><rect x="327.8" y="451.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="330.8" y="462.0"></text>
</g>
<g>
<title>__mark_inode_dirty (15 samples, 0.27%)</title><rect x="327.8" y="435.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="330.8" y="446.0"></text>
</g>
<g>
<title>ext4_dirty_inode?[ext4] (14 samples, 0.25%)</title><rect x="328.1" y="419.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="331.1" y="430.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty?[ext4] (13 samples, 0.24%)</title><rect x="328.3" y="403.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="331.3" y="414.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty?[ext4] (10 samples, 0.18%)</title><rect x="328.5" y="387.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="331.5" y="398.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata?[ext4] (4 samples, 0.07%)</title><rect x="328.7" y="371.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="331.7" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata?[jbd2] (3 samples, 0.05%)</title><rect x="328.9" y="355.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="331.9" y="366.0"></text>
</g>
<g>
<title>ext4_inode_csum_set?[ext4] (5 samples, 0.09%)</title><rect x="329.6" y="371.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="332.6" y="382.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0?[ext4] (5 samples, 0.09%)</title><rect x="329.6" y="355.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.6" y="366.0"></text>
</g>
<g>
<title>chksum_update (5 samples, 0.09%)</title><rect x="329.6" y="339.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="332.6" y="350.0"></text>
</g>
<g>
<title>__crc32c_le (5 samples, 0.09%)</title><rect x="329.6" y="323.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="332.6" y="334.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write?[ext4] (2 samples, 0.04%)</title><rect x="330.6" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="333.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (17 samples, 0.31%)</title><rect x="331.9" y="819.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.31%)</title><rect x="331.9" y="803.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.31%)</title><rect x="331.9" y="787.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.31%)</title><rect x="331.9" y="771.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (227 samples, 4.12%)</title><rect x="335.6" y="819.0" width="48.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.6" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (226 samples, 4.10%)</title><rect x="335.8" y="803.0" width="48.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.8" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (6 samples, 0.11%)</title><rect x="335.8" y="787.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.11%)</title><rect x="335.8" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.11%)</title><rect x="335.8" y="755.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.11%)</title><rect x="335.8" y="739.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (119 samples, 2.16%)</title><rect x="337.1" y="787.0" width="25.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.1" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (5 samples, 0.09%)</title><rect x="337.1" y="771.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.09%)</title><rect x="337.1" y="755.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.07%)</title><rect x="338.1" y="771.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.07%)</title><rect x="338.1" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.07%)</title><rect x="338.1" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.05%)</title><rect x="338.3" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="338.3" y="707.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="341.3" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.05%)</title><rect x="338.3" y="691.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="341.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="338.3" y="675.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="341.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="338.3" y="659.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="341.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="338.3" y="643.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="341.3" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="338.6" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="341.6" y="638.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="338.6" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="341.6" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="338.6" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="341.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (16 samples, 0.29%)</title><rect x="339.0" y="771.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.29%)</title><rect x="339.0" y="755.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.15%)</title><rect x="340.5" y="739.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="343.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.15%)</title><rect x="340.5" y="723.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.15%)</title><rect x="340.5" y="707.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="343.5" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.11%)</title><rect x="340.9" y="691.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="343.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="341.1" y="675.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="344.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.09%)</title><rect x="341.1" y="659.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="344.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="341.3" y="643.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="344.3" y="654.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.07%)</title><rect x="341.3" y="627.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="344.3" y="638.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="341.3" y="611.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="344.3" y="622.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="341.3" y="595.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="344.3" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="341.3" y="579.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="344.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="341.3" y="563.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="344.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (93 samples, 1.69%)</title><rect x="342.6" y="771.0" width="19.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (89 samples, 1.61%)</title><rect x="343.5" y="755.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (27 samples, 0.49%)</title><rect x="344.3" y="739.0" width="5.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="347.3" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.05%)</title><rect x="346.0" y="723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="349.0" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.05%)</title><rect x="346.7" y="723.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="349.7" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (4 samples, 0.07%)</title><rect x="347.3" y="723.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="350.3" y="734.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.05%)</title><rect x="348.2" y="723.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="351.2" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="349.0" y="723.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="352.0" y="734.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.05%)</title><rect x="349.5" y="723.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="352.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.05%)</title><rect x="350.1" y="739.0" width="12.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="353.1" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (7 samples, 0.13%)</title><rect x="350.1" y="723.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="353.1" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (48 samples, 0.87%)</title><rect x="351.6" y="723.0" width="10.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="354.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.76%)</title><rect x="352.9" y="707.0" width="9.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="355.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.76%)</title><rect x="352.9" y="691.0" width="9.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="355.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (38 samples, 0.69%)</title><rect x="353.7" y="675.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="356.7" y="686.0"></text>
</g>
<g>
<title>do_futex (37 samples, 0.67%)</title><rect x="354.0" y="659.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="357.0" y="670.0"></text>
</g>
<g>
<title>futex_wait (36 samples, 0.65%)</title><rect x="354.2" y="643.0" width="7.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="357.2" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 0.33%)</title><rect x="355.0" y="627.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="358.0" y="638.0"></text>
</g>
<g>
<title>plist_add (4 samples, 0.07%)</title><rect x="356.3" y="611.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="359.3" y="622.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.15%)</title><rect x="357.2" y="611.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="360.2" y="622.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.11%)</title><rect x="357.6" y="595.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="360.6" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="358.5" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="361.5" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (14 samples, 0.25%)</title><rect x="358.9" y="627.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="361.9" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="361.9" y="723.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="364.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.05%)</title><rect x="362.5" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (12 samples, 0.22%)</title><rect x="363.2" y="787.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (9 samples, 0.16%)</title><rect x="363.8" y="771.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (9 samples, 0.16%)</title><rect x="363.8" y="755.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="366.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.16%)</title><rect x="363.8" y="739.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.16%)</title><rect x="363.8" y="723.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="366.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.05%)</title><rect x="365.1" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="365.1" y="691.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="368.1" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="365.1" y="675.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="368.1" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="365.1" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="368.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="365.1" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="368.1" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="365.1" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="368.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (86 samples, 1.56%)</title><rect x="365.7" y="787.0" width="18.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (86 samples, 1.56%)</title><rect x="365.7" y="771.0" width="18.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (86 samples, 1.56%)</title><rect x="365.7" y="755.0" width="18.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (86 samples, 1.56%)</title><rect x="365.7" y="739.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (83 samples, 1.51%)</title><rect x="366.4" y="723.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.4" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.29%)</title><rect x="366.6" y="707.0" width="3.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="369.6" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="367.0" y="691.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="370.0" y="702.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (9 samples, 0.16%)</title><rect x="367.4" y="691.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="370.4" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.04%)</title><rect x="369.4" y="691.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="372.4" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (66 samples, 1.20%)</title><rect x="370.0" y="707.0" width="14.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="373.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 1.12%)</title><rect x="370.9" y="691.0" width="13.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="373.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (62 samples, 1.12%)</title><rect x="370.9" y="675.0" width="13.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="373.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (61 samples, 1.11%)</title><rect x="371.1" y="659.0" width="13.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="374.1" y="670.0"></text>
</g>
<g>
<title>do_futex (60 samples, 1.09%)</title><rect x="371.3" y="643.0" width="12.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="374.3" y="654.0"></text>
</g>
<g>
<title>futex_wake (59 samples, 1.07%)</title><rect x="371.5" y="627.0" width="12.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.5" y="638.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.05%)</title><rect x="373.4" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.4" y="622.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.05%)</title><rect x="374.1" y="611.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="377.1" y="622.0"></text>
</g>
<g>
<title>wake_up_q (44 samples, 0.80%)</title><rect x="374.7" y="611.0" width="9.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="377.7" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (44 samples, 0.80%)</title><rect x="374.7" y="595.0" width="9.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="377.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (44 samples, 0.80%)</title><rect x="374.7" y="579.0" width="9.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="377.7" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (6 samples, 0.11%)</title><rect x="384.1" y="819.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.1" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.11%)</title><rect x="384.1" y="803.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.1" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$108/416194564.run (6 samples, 0.11%)</title><rect x="384.1" y="787.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.1" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (6 samples, 0.11%)</title><rect x="384.1" y="771.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.1" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (6 samples, 0.11%)</title><rect x="384.1" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.1" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (6 samples, 0.11%)</title><rect x="384.1" y="739.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.1" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (4 samples, 0.07%)</title><rect x="384.4" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.4" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.04%)</title><rect x="384.4" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.4" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 0.04%)</title><rect x="384.4" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.4" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (2 samples, 0.04%)</title><rect x="384.4" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.4" y="686.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (2 samples, 0.04%)</title><rect x="384.4" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.4" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,671 samples, 66.59%)</title><rect x="385.4" y="867.0" width="785.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.4" y="878.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="388.6" y="851.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="391.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.05%)</title><rect x="389.1" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (99 samples, 1.80%)</title><rect x="389.7" y="851.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.7" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (93 samples, 1.69%)</title><rect x="391.0" y="835.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.0" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.04%)</title><rect x="392.3" y="819.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="395.3" y="830.0"></text>
</g>
<g>
<title>epoll_wait (85 samples, 1.54%)</title><rect x="392.7" y="819.0" width="18.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="395.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 1.49%)</title><rect x="393.3" y="803.0" width="17.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="396.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (82 samples, 1.49%)</title><rect x="393.3" y="787.0" width="17.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="396.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (75 samples, 1.36%)</title><rect x="394.8" y="771.0" width="16.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="397.8" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (71 samples, 1.29%)</title><rect x="395.7" y="755.0" width="15.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="398.7" y="766.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.24%)</title><rect x="396.1" y="739.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="399.1" y="750.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.20%)</title><rect x="396.6" y="723.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="399.6" y="734.0"></text>
</g>
<g>
<title>ep_poll (56 samples, 1.02%)</title><rect x="398.9" y="739.0" width="12.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.9" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (38 samples, 0.69%)</title><rect x="401.3" y="723.0" width="8.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="404.3" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (28 samples, 0.51%)</title><rect x="402.3" y="707.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="405.3" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (20 samples, 0.36%)</title><rect x="404.0" y="691.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="407.0" y="702.0"></text>
</g>
<g>
<title>sock_poll (14 samples, 0.25%)</title><rect x="405.3" y="675.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="408.3" y="686.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.15%)</title><rect x="406.6" y="659.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.6" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (2 samples, 0.04%)</title><rect x="407.9" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="410.9" y="654.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.07%)</title><rect x="408.3" y="707.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="411.3" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.13%)</title><rect x="409.4" y="723.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="412.4" y="734.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.13%)</title><rect x="409.4" y="707.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="412.4" y="718.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="410.5" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="413.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,545 samples, 64.30%)</title><rect x="410.9" y="851.0" width="758.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.9" y="862.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,537 samples, 64.16%)</title><rect x="412.6" y="835.0" width="757.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.6" y="846.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,025 samples, 54.87%)</title><rect x="412.6" y="819.0" width="647.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.6" y="830.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (15 samples, 0.27%)</title><rect x="423.5" y="803.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.5" y="814.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.11%)</title><rect x="426.7" y="803.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="429.7" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="428.0" y="803.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="431.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,694 samples, 48.87%)</title><rect x="428.9" y="803.0" width="576.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.9" y="814.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,694 samples, 48.87%)</title><rect x="428.9" y="787.0" width="576.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.9" y="798.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,676 samples, 48.54%)</title><rect x="428.9" y="771.0" width="572.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.9" y="782.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 0.38%)</title><rect x="429.1" y="755.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.15%)</title><rect x="430.2" y="739.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.15%)</title><rect x="430.2" y="723.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="431.9" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="431.9" y="723.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.9" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="432.7" y="739.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="435.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="433.2" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (25 samples, 0.45%)</title><rect x="433.6" y="755.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="436.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.44%)</title><rect x="433.8" y="739.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.13%)</title><rect x="437.4" y="723.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="438.1" y="707.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="438.1" y="691.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title><rect x="438.1" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="441.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/HttpService.entity (2,627 samples, 47.65%)</title><rect x="438.9" y="755.0" width="562.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="441.9" y="766.0">ru/mail/polis/service/s3ponia/HttpService.entity</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.entity (2,626 samples, 47.63%)</title><rect x="439.1" y="739.0" width="562.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.1" y="750.0">ru/mail/polis/service/s3ponia/ReplicatedService.entity</text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="444.3" y="723.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="447.3" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="444.3" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="447.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/997010294.linkToTargetMethod (6 samples, 0.11%)</title><rect x="444.9" y="723.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="447.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1269787814.invoke (6 samples, 0.11%)</title><rect x="444.9" y="707.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="444.9" y="691.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.09%)</title><rect x="444.9" y="675.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.09%)</title><rect x="444.9" y="659.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (12 samples, 0.22%)</title><rect x="446.2" y="723.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.20%)</title><rect x="446.4" y="707.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (11 samples, 0.20%)</title><rect x="446.4" y="691.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.20%)</title><rect x="446.4" y="675.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (9 samples, 0.16%)</title><rect x="446.4" y="659.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (9 samples, 0.16%)</title><rect x="446.4" y="643.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (9 samples, 0.16%)</title><rect x="446.4" y="627.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.tryAdvance (3 samples, 0.05%)</title><rect x="446.9" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (2 samples, 0.04%)</title><rect x="447.1" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (2 samples, 0.04%)</title><rect x="447.1" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/292917034.accept (2 samples, 0.04%)</title><rect x="447.1" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="447.1" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="447.1" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="447.1" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="447.1" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="447.1" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.cancellationRequested (4 samples, 0.07%)</title><rect x="447.5" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.tryAdvance (2 samples, 0.04%)</title><rect x="447.9" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.04%)</title><rect x="448.4" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (3 samples, 0.05%)</title><rect x="448.8" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (3 samples, 0.05%)</title><rect x="448.8" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1.&lt;init&gt; (3 samples, 0.05%)</title><rect x="448.8" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatefulOp.&lt;init&gt; (3 samples, 0.05%)</title><rect x="448.8" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (3 samples, 0.05%)</title><rect x="448.8" y="659.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.05%)</title><rect x="448.8" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.8" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="449.4" y="723.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="452.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (489 samples, 8.87%)</title><rect x="450.1" y="723.0" width="104.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.1" y="734.0">one/nio/http..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.16%)</title><rect x="451.6" y="707.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.16%)</title><rect x="451.6" y="691.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.16%)</title><rect x="451.6" y="675.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.6" y="686.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="452.4" y="659.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="455.4" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="453.1" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="456.1" y="670.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="453.1" y="643.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="456.1" y="654.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="453.1" y="627.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="456.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (459 samples, 8.33%)</title><rect x="453.5" y="707.0" width="98.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.5" y="718.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 0.36%)</title><rect x="454.3" y="691.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.11%)</title><rect x="457.3" y="675.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.11%)</title><rect x="457.3" y="659.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="460.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.11%)</title><rect x="457.3" y="643.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (435 samples, 7.89%)</title><rect x="458.6" y="691.0" width="93.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.6" y="702.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session.write (435 samples, 7.89%)</title><rect x="458.6" y="675.0" width="93.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.6" y="686.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (434 samples, 7.87%)</title><rect x="458.8" y="659.0" width="92.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.8" y="670.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.05%)</title><rect x="459.9" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (426 samples, 7.73%)</title><rect x="460.6" y="643.0" width="91.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.6" y="654.0">one/nio/net..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.18%)</title><rect x="461.4" y="627.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="464.4" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="463.1" y="611.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="466.1" y="622.0"></text>
</g>
<g>
<title>__libc_send (411 samples, 7.46%)</title><rect x="463.5" y="627.0" width="88.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="466.5" y="638.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (404 samples, 7.33%)</title><rect x="465.0" y="611.0" width="86.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="468.0" y="622.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (404 samples, 7.33%)</title><rect x="465.0" y="595.0" width="86.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="468.0" y="606.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_sendto (399 samples, 7.24%)</title><rect x="465.9" y="579.0" width="85.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.9" y="590.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (398 samples, 7.22%)</title><rect x="466.1" y="563.0" width="85.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.1" y="574.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (392 samples, 7.11%)</title><rect x="466.5" y="547.0" width="83.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.5" y="558.0">sock_send..</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (4 samples, 0.07%)</title><rect x="466.8" y="531.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="469.8" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="467.6" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="470.6" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (385 samples, 6.98%)</title><rect x="468.0" y="531.0" width="82.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="471.0" y="542.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (4 samples, 0.07%)</title><rect x="468.5" y="515.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="471.5" y="526.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="468.9" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="471.9" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (379 samples, 6.87%)</title><rect x="469.3" y="515.0" width="81.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="472.3" y="526.0">tcp_sendm..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="472.1" y="499.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="475.1" y="510.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (325 samples, 5.90%)</title><rect x="472.8" y="499.0" width="69.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="475.8" y="510.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (323 samples, 5.86%)</title><rect x="473.2" y="483.0" width="69.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.2" y="494.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (291 samples, 5.28%)</title><rect x="474.3" y="467.0" width="62.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="477.3" y="478.0">__tcp_..</text>
</g>
<g>
<title>__ip_queue_xmit (265 samples, 4.81%)</title><rect x="476.2" y="451.0" width="56.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="479.2" y="462.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.05%)</title><rect x="476.8" y="435.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="479.8" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="476.8" y="419.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="479.8" y="430.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.13%)</title><rect x="477.5" y="435.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="480.5" y="446.0"></text>
</g>
<g>
<title>__ip_local_out (7 samples, 0.13%)</title><rect x="477.5" y="419.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="480.5" y="430.0"></text>
</g>
<g>
<title>ip_send_check (7 samples, 0.13%)</title><rect x="477.5" y="403.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="480.5" y="414.0"></text>
</g>
<g>
<title>ip_output (252 samples, 4.57%)</title><rect x="479.0" y="435.0" width="53.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.0" y="446.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output2 (242 samples, 4.39%)</title><rect x="479.6" y="419.0" width="51.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="482.6" y="430.0">ip_fi..</text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.22%)</title><rect x="480.2" y="403.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="483.2" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.11%)</title><rect x="480.9" y="387.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="483.9" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.09%)</title><rect x="481.1" y="371.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="484.1" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="482.2" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="485.2" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (227 samples, 4.12%)</title><rect x="482.8" y="403.0" width="48.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.8" y="414.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (226 samples, 4.10%)</title><rect x="483.0" y="387.0" width="48.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="486.0" y="398.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (224 samples, 4.06%)</title><rect x="483.5" y="371.0" width="47.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.5" y="382.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (224 samples, 4.06%)</title><rect x="483.5" y="355.0" width="47.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.5" y="366.0">__so..</text>
</g>
<g>
<title>net_rx_action (222 samples, 4.03%)</title><rect x="483.9" y="339.0" width="47.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.9" y="350.0">net_..</text>
</g>
<g>
<title>process_backlog (219 samples, 3.97%)</title><rect x="484.5" y="323.0" width="46.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="487.5" y="334.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (218 samples, 3.95%)</title><rect x="484.7" y="307.0" width="46.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="487.7" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="484.7" y="291.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (216 samples, 3.92%)</title><rect x="485.2" y="291.0" width="46.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="488.2" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (213 samples, 3.86%)</title><rect x="485.4" y="275.0" width="45.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="488.4" y="286.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (210 samples, 3.81%)</title><rect x="486.0" y="259.0" width="45.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="489.0" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (209 samples, 3.79%)</title><rect x="486.2" y="243.0" width="44.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="489.2" y="254.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (209 samples, 3.79%)</title><rect x="486.2" y="227.0" width="44.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="489.2" y="238.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.16%)</title><rect x="488.4" y="211.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="491.4" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.09%)</title><rect x="490.3" y="211.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="493.3" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.09%)</title><rect x="490.3" y="195.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.3" y="206.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.07%)</title><rect x="490.5" y="179.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.5" y="190.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (3 samples, 0.05%)</title><rect x="490.7" y="163.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="493.7" y="174.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (2 samples, 0.04%)</title><rect x="490.9" y="147.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="493.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (182 samples, 3.30%)</title><rect x="491.6" y="211.0" width="38.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="494.6" y="222.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (182 samples, 3.30%)</title><rect x="491.6" y="195.0" width="38.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="494.6" y="206.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.18%)</title><rect x="493.3" y="179.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="496.3" y="190.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.18%)</title><rect x="493.3" y="163.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.3" y="174.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.16%)</title><rect x="493.3" y="147.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="496.3" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (107 samples, 1.94%)</title><rect x="495.4" y="179.0" width="22.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="498.4" y="190.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (106 samples, 1.92%)</title><rect x="495.7" y="163.0" width="22.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="498.7" y="174.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (105 samples, 1.90%)</title><rect x="495.9" y="147.0" width="22.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="498.9" y="158.0">_..</text>
</g>
<g>
<title>tcp_ack (50 samples, 0.91%)</title><rect x="518.3" y="179.0" width="10.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.3" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.27%)</title><rect x="521.3" y="163.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="524.3" y="174.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="521.3" y="147.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="524.3" y="158.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.05%)</title><rect x="522.0" y="147.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="525.0" y="158.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.16%)</title><rect x="522.6" y="147.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.6" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.07%)</title><rect x="524.6" y="163.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="527.6" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.07%)</title><rect x="525.4" y="163.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="528.4" y="174.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="525.8" y="147.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.8" y="158.0"></text>
</g>
<g>
<title>rb_first (5 samples, 0.09%)</title><rect x="526.3" y="163.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="529.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.05%)</title><rect x="527.3" y="163.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="530.3" y="174.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.04%)</title><rect x="528.6" y="163.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="531.6" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.05%)</title><rect x="529.0" y="179.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="532.0" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="529.7" y="179.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="532.7" y="190.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="529.7" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="532.7" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.04%)</title><rect x="530.1" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="533.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.04%)</title><rect x="530.5" y="211.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="533.5" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.13%)</title><rect x="531.4" y="419.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="534.4" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (5 samples, 0.09%)</title><rect x="531.8" y="403.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="534.8" y="414.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.07%)</title><rect x="532.0" y="387.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="535.0" y="398.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.07%)</title><rect x="532.9" y="451.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="535.9" y="462.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.05%)</title><rect x="533.1" y="435.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="536.1" y="446.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="533.8" y="451.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.8" y="462.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="534.4" y="451.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="537.4" y="462.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (4 samples, 0.07%)</title><rect x="535.3" y="451.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="538.3" y="462.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.04%)</title><rect x="536.1" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="539.1" y="462.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="536.5" y="467.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="539.5" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (21 samples, 0.38%)</title><rect x="537.2" y="467.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="540.2" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.24%)</title><rect x="538.9" y="451.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.9" y="462.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.22%)</title><rect x="539.1" y="435.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="542.1" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.11%)</title><rect x="540.2" y="419.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="543.2" y="430.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="541.7" y="467.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.7" y="478.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.11%)</title><rect x="542.3" y="499.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="545.3" y="510.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.09%)</title><rect x="542.3" y="483.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="545.3" y="494.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.09%)</title><rect x="542.3" y="467.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="545.3" y="478.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.09%)</title><rect x="543.6" y="499.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.6" y="510.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.09%)</title><rect x="543.6" y="483.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="546.6" y="494.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.20%)</title><rect x="544.7" y="499.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="547.7" y="510.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.20%)</title><rect x="544.7" y="483.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="547.7" y="494.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.09%)</title><rect x="545.1" y="467.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.1" y="478.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.09%)</title><rect x="545.1" y="451.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.1" y="462.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.04%)</title><rect x="546.2" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="549.2" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.04%)</title><rect x="546.6" y="467.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="549.6" y="478.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.07%)</title><rect x="547.0" y="499.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="550.0" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="547.9" y="499.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="550.9" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.15%)</title><rect x="548.3" y="499.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="551.3" y="510.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.11%)</title><rect x="548.7" y="483.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="551.7" y="494.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="549.4" y="467.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="552.4" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="550.4" y="547.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="553.4" y="558.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="550.4" y="531.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.4" y="542.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.07%)</title><rect x="550.4" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="553.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.25%)</title><rect x="551.7" y="707.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.22%)</title><rect x="552.2" y="691.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.22%)</title><rect x="552.2" y="675.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.entity (327 samples, 5.93%)</title><rect x="554.9" y="723.0" width="70.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.9" y="734.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (29 samples, 0.53%)</title><rect x="555.2" y="707.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (29 samples, 0.53%)</title><rect x="555.2" y="691.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (29 samples, 0.53%)</title><rect x="555.2" y="675.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$130/1610207105.accept (29 samples, 0.53%)</title><rect x="555.2" y="659.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (29 samples, 0.53%)</title><rect x="555.2" y="643.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (29 samples, 0.53%)</title><rect x="555.2" y="627.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 0.34%)</title><rect x="557.3" y="611.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 0.34%)</title><rect x="557.3" y="595.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="557.3" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.31%)</title><rect x="557.7" y="579.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.31%)</title><rect x="557.7" y="563.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (17 samples, 0.31%)</title><rect x="557.7" y="547.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (16 samples, 0.29%)</title><rect x="557.9" y="531.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.9" y="542.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.05%)</title><rect x="557.9" y="515.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="560.9" y="526.0"></text>
</g>
<g>
<title>__libc_send (13 samples, 0.24%)</title><rect x="558.6" y="515.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="561.6" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.24%)</title><rect x="558.6" y="499.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="561.6" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.24%)</title><rect x="558.6" y="483.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="561.6" y="494.0"></text>
</g>
<g>
<title>__x64_sys_sendto (13 samples, 0.24%)</title><rect x="558.6" y="467.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="561.6" y="478.0"></text>
</g>
<g>
<title>__sys_sendto (13 samples, 0.24%)</title><rect x="558.6" y="451.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="561.6" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (13 samples, 0.24%)</title><rect x="558.6" y="435.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="561.6" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (13 samples, 0.24%)</title><rect x="558.6" y="419.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="561.6" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (13 samples, 0.24%)</title><rect x="558.6" y="403.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="561.6" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (13 samples, 0.24%)</title><rect x="558.6" y="387.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.6" y="398.0"></text>
</g>
<g>
<title>tcp_write_xmit (13 samples, 0.24%)</title><rect x="558.6" y="371.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="561.6" y="382.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (11 samples, 0.20%)</title><rect x="558.8" y="355.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="561.8" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (11 samples, 0.20%)</title><rect x="558.8" y="339.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="561.8" y="350.0"></text>
</g>
<g>
<title>ip_output (11 samples, 0.20%)</title><rect x="558.8" y="323.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.8" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 0.18%)</title><rect x="559.0" y="307.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="562.0" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.05%)</title><rect x="559.0" y="291.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="562.0" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="559.0" y="275.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="562.0" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="559.0" y="259.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="562.0" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (7 samples, 0.13%)</title><rect x="559.7" y="291.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="562.7" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (7 samples, 0.13%)</title><rect x="559.7" y="275.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="562.7" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 0.13%)</title><rect x="559.7" y="259.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="562.7" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 0.13%)</title><rect x="559.7" y="243.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="562.7" y="254.0"></text>
</g>
<g>
<title>net_rx_action (7 samples, 0.13%)</title><rect x="559.7" y="227.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="562.7" y="238.0"></text>
</g>
<g>
<title>process_backlog (7 samples, 0.13%)</title><rect x="559.7" y="211.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="562.7" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (7 samples, 0.13%)</title><rect x="559.7" y="195.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="562.7" y="206.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 0.11%)</title><rect x="559.9" y="179.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="562.9" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 0.11%)</title><rect x="559.9" y="163.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="562.9" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 0.11%)</title><rect x="559.9" y="147.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="562.9" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (6 samples, 0.11%)</title><rect x="559.9" y="131.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="562.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (6 samples, 0.11%)</title><rect x="559.9" y="115.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.09%)</title><rect x="560.1" y="99.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="563.1" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.09%)</title><rect x="560.1" y="83.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="563.1" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.09%)</title><rect x="560.1" y="67.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="563.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.09%)</title><rect x="560.1" y="51.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="563.1" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.09%)</title><rect x="560.1" y="35.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="563.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.putAsync (279 samples, 5.06%)</title><rect x="561.4" y="707.0" width="59.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.4" y="718.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (276 samples, 5.01%)</title><rect x="561.6" y="691.0" width="59.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.6" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (276 samples, 5.01%)</title><rect x="561.6" y="675.0" width="59.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.6" y="686.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (276 samples, 5.01%)</title><rect x="561.6" y="659.0" width="59.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.6" y="670.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (251 samples, 4.55%)</title><rect x="566.9" y="643.0" width="53.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.9" y="654.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (21 samples, 0.38%)</title><rect x="570.4" y="627.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (21 samples, 0.38%)</title><rect x="570.4" y="611.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (21 samples, 0.38%)</title><rect x="570.4" y="595.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (21 samples, 0.38%)</title><rect x="570.4" y="579.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (214 samples, 3.88%)</title><rect x="574.9" y="627.0" width="45.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.9" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (214 samples, 3.88%)</title><rect x="574.9" y="611.0" width="45.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.9" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (214 samples, 3.88%)</title><rect x="574.9" y="595.0" width="45.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.9" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (214 samples, 3.88%)</title><rect x="574.9" y="579.0" width="45.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.9" y="590.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (214 samples, 3.88%)</title><rect x="574.9" y="563.0" width="45.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.9" y="574.0">jdk/..</text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (2 samples, 0.04%)</title><rect x="575.3" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="578.3" y="558.0"></text>
</g>
<g>
<title>Unsafe_Unpark (49 samples, 0.89%)</title><rect x="576.1" y="547.0" width="10.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="579.1" y="558.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (2 samples, 0.04%)</title><rect x="576.6" y="531.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="579.6" y="542.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.04%)</title><rect x="577.2" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="580.2" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_from_native(JavaThreadState) (2 samples, 0.04%)</title><rect x="577.8" y="531.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="580.8" y="542.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="578.3" y="531.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="581.3" y="542.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.11%)</title><rect x="578.7" y="531.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="581.7" y="542.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.04%)</title><rect x="580.0" y="531.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="583.0" y="542.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (14 samples, 0.25%)</title><rect x="580.4" y="531.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="583.4" y="542.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (5 samples, 0.09%)</title><rect x="583.6" y="531.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="586.6" y="542.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (9 samples, 0.16%)</title><rect x="584.7" y="531.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="587.7" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="586.6" y="547.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="589.6" y="558.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (155 samples, 2.81%)</title><rect x="587.5" y="547.0" width="33.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="590.5" y="558.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (145 samples, 2.63%)</title><rect x="589.6" y="531.0" width="31.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="592.6" y="542.0">en..</text>
</g>
<g>
<title>do_syscall_64 (145 samples, 2.63%)</title><rect x="589.6" y="515.0" width="31.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="592.6" y="526.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (137 samples, 2.49%)</title><rect x="591.3" y="499.0" width="29.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="594.3" y="510.0">__..</text>
</g>
<g>
<title>do_futex (134 samples, 2.43%)</title><rect x="592.0" y="483.0" width="28.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.0" y="494.0">do..</text>
</g>
<g>
<title>futex_wake (133 samples, 2.41%)</title><rect x="592.2" y="467.0" width="28.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="595.2" y="478.0">fu..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="595.2" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="598.2" y="462.0"></text>
</g>
<g>
<title>mark_wake_futex (10 samples, 0.18%)</title><rect x="595.8" y="451.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="598.8" y="462.0"></text>
</g>
<g>
<title>wake_q_add_safe (5 samples, 0.09%)</title><rect x="598.0" y="451.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="601.0" y="462.0"></text>
</g>
<g>
<title>wake_up_q (101 samples, 1.83%)</title><rect x="599.0" y="451.0" width="21.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="602.0" y="462.0">w..</text>
</g>
<g>
<title>try_to_wake_up (99 samples, 1.80%)</title><rect x="599.5" y="435.0" width="21.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.5" y="446.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (98 samples, 1.78%)</title><rect x="599.7" y="419.0" width="21.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="602.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.04%)</title><rect x="620.7" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.04%)</title><rect x="620.7" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (18 samples, 0.33%)</title><rect x="621.1" y="707.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (16 samples, 0.29%)</title><rect x="621.5" y="691.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="621.9" y="675.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="621.9" y="659.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title><rect x="621.9" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="622.8" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="622.8" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (7 samples, 0.13%)</title><rect x="623.2" y="675.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (7 samples, 0.13%)</title><rect x="623.2" y="659.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (7 samples, 0.13%)</title><rect x="623.2" y="643.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.2" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="624.3" y="627.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="627.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (34 samples, 0.62%)</title><rect x="624.9" y="723.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (31 samples, 0.56%)</title><rect x="625.6" y="707.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.25%)</title><rect x="627.5" y="691.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.25%)</title><rect x="627.5" y="675.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (14 samples, 0.25%)</title><rect x="627.5" y="659.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.09%)</title><rect x="630.5" y="691.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.09%)</title><rect x="630.5" y="675.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (3 samples, 0.05%)</title><rect x="631.6" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (3 samples, 0.05%)</title><rect x="631.6" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (3 samples, 0.05%)</title><rect x="631.6" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (8 samples, 0.15%)</title><rect x="632.2" y="723.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ModularPolicy.getNodeReplicas (8 samples, 0.15%)</title><rect x="632.2" y="707.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ServiceFactory$$Lambda$29/2011482127.apply (5 samples, 0.09%)</title><rect x="632.9" y="691.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (5 samples, 0.09%)</title><rect x="632.9" y="675.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.9" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="633.5" y="659.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="636.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parseOrDefault (29 samples, 0.53%)</title><rect x="633.9" y="723.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parse (28 samples, 0.51%)</title><rect x="634.1" y="707.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (23 samples, 0.42%)</title><rect x="635.2" y="691.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (9 samples, 0.16%)</title><rect x="635.9" y="675.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (9 samples, 0.16%)</title><rect x="635.9" y="659.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (9 samples, 0.16%)</title><rect x="635.9" y="643.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (9 samples, 0.16%)</title><rect x="635.9" y="627.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (9 samples, 0.16%)</title><rect x="635.9" y="611.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.16%)</title><rect x="635.9" y="595.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.16%)</title><rect x="635.9" y="579.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (3 samples, 0.05%)</title><rect x="637.8" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.8" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.15%)</title><rect x="638.4" y="675.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.15%)</title><rect x="638.4" y="659.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="641.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.15%)</title><rect x="638.4" y="643.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.15%)</title><rect x="638.4" y="627.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.15%)</title><rect x="638.4" y="611.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.04%)</title><rect x="639.7" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxyReplicas (1,679 samples, 30.46%)</title><rect x="640.1" y="723.0" width="359.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.1" y="734.0">ru/mail/polis/util/Proxy.proxyReplicas</text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.45%)</title><rect x="640.3" y="707.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.3" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.45%)</title><rect x="640.3" y="691.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (25 samples, 0.45%)</title><rect x="640.3" y="675.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.3" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (25 samples, 0.45%)</title><rect x="640.3" y="659.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.45%)</title><rect x="640.3" y="643.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxy (1,653 samples, 29.98%)</title><rect x="645.7" y="707.0" width="353.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.7" y="718.0">ru/mail/polis/util/Proxy.proxy</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,653 samples, 29.98%)</title><rect x="645.7" y="691.0" width="353.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.7" y="702.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,638 samples, 29.71%)</title><rect x="648.9" y="675.0" width="350.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.9" y="686.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (18 samples, 0.33%)</title><rect x="649.3" y="659.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (18 samples, 0.33%)</title><rect x="649.3" y="643.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (18 samples, 0.33%)</title><rect x="649.3" y="627.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (404 samples, 7.33%)</title><rect x="653.2" y="659.0" width="86.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.2" y="670.0">one/nio/ht..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (30 samples, 0.54%)</title><rect x="672.5" y="643.0" width="6.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="675.5" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (29 samples, 0.53%)</title><rect x="672.7" y="627.0" width="6.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="675.7" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (26 samples, 0.47%)</title><rect x="673.3" y="611.0" width="5.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="676.3" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (25 samples, 0.45%)</title><rect x="673.3" y="595.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="676.3" y="606.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (9 samples, 0.16%)</title><rect x="674.0" y="579.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="677.0" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.07%)</title><rect x="674.6" y="563.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="677.6" y="574.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (2 samples, 0.04%)</title><rect x="674.8" y="547.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="677.8" y="558.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.04%)</title><rect x="675.4" y="563.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="678.4" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (13 samples, 0.24%)</title><rect x="675.9" y="579.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="678.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (282 samples, 5.12%)</title><rect x="678.9" y="643.0" width="60.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.9" y="654.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (62 samples, 1.12%)</title><rect x="681.2" y="627.0" width="13.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="684.2" y="638.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (6 samples, 0.11%)</title><rect x="682.9" y="611.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="685.9" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.11%)</title><rect x="684.2" y="611.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="687.2" y="622.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (5 samples, 0.09%)</title><rect x="685.7" y="611.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="688.7" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (33 samples, 0.60%)</title><rect x="687.0" y="611.0" width="7.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="690.0" y="622.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (6 samples, 0.11%)</title><rect x="692.6" y="595.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="695.6" y="606.0"></text>
</g>
<g>
<title>__libc_recv (202 samples, 3.66%)</title><rect x="694.5" y="627.0" width="43.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="697.5" y="638.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (195 samples, 3.54%)</title><rect x="696.0" y="611.0" width="41.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="699.0" y="622.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (195 samples, 3.54%)</title><rect x="696.0" y="595.0" width="41.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="699.0" y="606.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (184 samples, 3.34%)</title><rect x="698.4" y="579.0" width="39.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.4" y="590.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (180 samples, 3.27%)</title><rect x="699.2" y="563.0" width="38.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="702.2" y="574.0">__s..</text>
</g>
<g>
<title>fput_many (4 samples, 0.07%)</title><rect x="699.6" y="547.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="702.6" y="558.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (159 samples, 2.88%)</title><rect x="700.7" y="547.0" width="34.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="703.7" y="558.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (154 samples, 2.79%)</title><rect x="701.8" y="531.0" width="32.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="704.8" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (117 samples, 2.12%)</title><rect x="703.1" y="515.0" width="25.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="706.1" y="526.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (116 samples, 2.10%)</title><rect x="703.3" y="499.0" width="24.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="706.3" y="510.0">_..</text>
</g>
<g>
<title>ip_output (116 samples, 2.10%)</title><rect x="703.3" y="483.0" width="24.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="706.3" y="494.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (116 samples, 2.10%)</title><rect x="703.3" y="467.0" width="24.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="706.3" y="478.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.15%)</title><rect x="704.6" y="451.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="707.6" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.07%)</title><rect x="704.6" y="435.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="707.6" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.07%)</title><rect x="704.6" y="419.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="707.6" y="430.0"></text>
</g>
<g>
<title>__sock_wfree (2 samples, 0.04%)</title><rect x="704.6" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.6" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.05%)</title><rect x="705.6" y="435.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.6" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (102 samples, 1.85%)</title><rect x="706.3" y="451.0" width="21.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.3" y="462.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (102 samples, 1.85%)</title><rect x="706.3" y="435.0" width="21.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="709.3" y="446.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (102 samples, 1.85%)</title><rect x="706.3" y="419.0" width="21.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="709.3" y="430.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (102 samples, 1.85%)</title><rect x="706.3" y="403.0" width="21.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="709.3" y="414.0">_..</text>
</g>
<g>
<title>net_rx_action (99 samples, 1.80%)</title><rect x="706.9" y="387.0" width="21.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.9" y="398.0">n..</text>
</g>
<g>
<title>process_backlog (94 samples, 1.71%)</title><rect x="708.0" y="371.0" width="20.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="711.0" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (91 samples, 1.65%)</title><rect x="708.6" y="355.0" width="19.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="711.6" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.07%)</title><rect x="708.6" y="339.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="711.6" y="350.0"></text>
</g>
<g>
<title>ip_rcv (87 samples, 1.58%)</title><rect x="709.5" y="339.0" width="18.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="712.5" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (84 samples, 1.52%)</title><rect x="709.5" y="323.0" width="18.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="712.5" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (82 samples, 1.49%)</title><rect x="709.9" y="307.0" width="17.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="712.9" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (82 samples, 1.49%)</title><rect x="709.9" y="291.0" width="17.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="712.9" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (82 samples, 1.49%)</title><rect x="709.9" y="275.0" width="17.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="712.9" y="286.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.09%)</title><rect x="711.0" y="259.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="714.0" y="270.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.04%)</title><rect x="711.6" y="243.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="714.6" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (13 samples, 0.24%)</title><rect x="712.0" y="259.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="715.0" y="270.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (13 samples, 0.24%)</title><rect x="712.0" y="243.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="715.0" y="254.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (11 samples, 0.20%)</title><rect x="712.5" y="227.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="715.5" y="238.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (7 samples, 0.13%)</title><rect x="713.3" y="211.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="716.3" y="222.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (4 samples, 0.07%)</title><rect x="713.8" y="195.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="716.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (59 samples, 1.07%)</title><rect x="714.8" y="259.0" width="12.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="717.8" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (58 samples, 1.05%)</title><rect x="715.0" y="243.0" width="12.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="718.0" y="254.0"></text>
</g>
<g>
<title>tcp_ack (51 samples, 0.93%)</title><rect x="715.9" y="227.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="718.9" y="238.0"></text>
</g>
<g>
<title>__kfree_skb (18 samples, 0.33%)</title><rect x="718.9" y="211.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="721.9" y="222.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="718.9" y="195.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.9" y="206.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.15%)</title><rect x="719.3" y="195.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="722.3" y="206.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.13%)</title><rect x="721.3" y="195.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="724.3" y="206.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.07%)</title><rect x="723.0" y="211.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.0" y="222.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.13%)</title><rect x="723.8" y="211.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.8" y="222.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="724.7" y="195.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="727.7" y="206.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.05%)</title><rect x="725.5" y="211.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="728.5" y="222.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="727.0" y="227.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.0" y="238.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="727.0" y="211.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="730.0" y="222.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.04%)</title><rect x="727.5" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="730.5" y="334.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="728.1" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="731.1" y="526.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="728.7" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="731.7" y="526.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="728.7" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="731.7" y="510.0"></text>
</g>
<g>
<title>sk_wait_data (26 samples, 0.47%)</title><rect x="729.2" y="515.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="732.2" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="729.4" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.4" y="510.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.04%)</title><rect x="729.8" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="732.8" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.04%)</title><rect x="729.8" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="732.8" y="494.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.09%)</title><rect x="730.5" y="499.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="733.5" y="510.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.07%)</title><rect x="730.7" y="483.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="733.7" y="494.0"></text>
</g>
<g>
<title>wait_woken (15 samples, 0.27%)</title><rect x="731.5" y="499.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="734.5" y="510.0"></text>
</g>
<g>
<title>schedule_timeout (13 samples, 0.24%)</title><rect x="732.0" y="483.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="735.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.15%)</title><rect x="732.2" y="467.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="735.2" y="478.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.04%)</title><rect x="733.9" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="736.9" y="478.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="734.3" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="737.3" y="478.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 0.16%)</title><rect x="734.7" y="547.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="737.7" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.15%)</title><rect x="735.0" y="531.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="738.0" y="542.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (3 samples, 0.05%)</title><rect x="735.2" y="515.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="738.2" y="526.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.07%)</title><rect x="735.8" y="515.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="738.8" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.09%)</title><rect x="736.7" y="547.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="739.7" y="558.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.09%)</title><rect x="736.7" y="531.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="739.7" y="542.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.07%)</title><rect x="736.9" y="515.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.9" y="526.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="737.7" y="627.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="740.7" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="738.8" y="627.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="741.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.04%)</title><rect x="739.2" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (183 samples, 3.32%)</title><rect x="739.7" y="659.0" width="39.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.7" y="670.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (11 samples, 0.20%)</title><rect x="741.6" y="643.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.20%)</title><rect x="741.6" y="627.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.20%)</title><rect x="741.6" y="611.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (8 samples, 0.15%)</title><rect x="742.0" y="595.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.0" y="606.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (7 samples, 0.13%)</title><rect x="742.2" y="579.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.2" y="590.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (5 samples, 0.09%)</title><rect x="742.7" y="563.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.33%)</title><rect x="743.9" y="643.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.18%)</title><rect x="745.7" y="627.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.16%)</title><rect x="745.7" y="611.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="747.2" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (104 samples, 1.89%)</title><rect x="747.8" y="643.0" width="22.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.8" y="654.0">o..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.13%)</title><rect x="748.7" y="627.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="751.7" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (93 samples, 1.69%)</title><rect x="750.1" y="627.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.1" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (93 samples, 1.69%)</title><rect x="750.1" y="611.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.1" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="769.6" y="595.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="772.6" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="769.6" y="579.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="772.6" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="769.6" y="563.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="772.6" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="769.6" y="547.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="772.6" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="769.6" y="531.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="772.6" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="769.6" y="515.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="772.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.20%)</title><rect x="770.1" y="643.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (7 samples, 0.13%)</title><rect x="772.4" y="643.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="773.5" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (23 samples, 0.42%)</title><rect x="773.9" y="643.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.15%)</title><rect x="777.1" y="627.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.15%)</title><rect x="777.1" y="611.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (95 samples, 1.72%)</title><rect x="778.8" y="659.0" width="20.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.8" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.09%)</title><rect x="793.2" y="643.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="796.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (23 samples, 0.42%)</title><rect x="794.2" y="643.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (23 samples, 0.42%)</title><rect x="794.2" y="627.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.charAt (23 samples, 0.42%)</title><rect x="794.2" y="611.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (25 samples, 0.45%)</title><rect x="799.2" y="659.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.27%)</title><rect x="801.3" y="643.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.27%)</title><rect x="801.3" y="627.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.3" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.07%)</title><rect x="804.5" y="659.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (112 samples, 2.03%)</title><rect x="805.4" y="659.0" width="23.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.4" y="670.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.04%)</title><rect x="806.4" y="643.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="809.4" y="654.0"></text>
</g>
<g>
<title>setsockopt (104 samples, 1.89%)</title><rect x="806.9" y="643.0" width="22.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="809.9" y="654.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (102 samples, 1.85%)</title><rect x="807.3" y="627.0" width="21.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="810.3" y="638.0">e..</text>
</g>
<g>
<title>do_syscall_64 (102 samples, 1.85%)</title><rect x="807.3" y="611.0" width="21.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="810.3" y="622.0">d..</text>
</g>
<g>
<title>__x64_sys_setsockopt (85 samples, 1.54%)</title><rect x="810.9" y="595.0" width="18.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="813.9" y="606.0"></text>
</g>
<g>
<title>__sys_setsockopt (84 samples, 1.52%)</title><rect x="811.2" y="579.0" width="17.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="814.2" y="590.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.13%)</title><rect x="812.2" y="563.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="815.2" y="574.0"></text>
</g>
<g>
<title>security_socket_setsockopt (12 samples, 0.22%)</title><rect x="813.7" y="563.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="816.7" y="574.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (11 samples, 0.20%)</title><rect x="813.9" y="547.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="816.9" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.07%)</title><rect x="815.4" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="818.4" y="542.0"></text>
</g>
<g>
<title>sock_setsockopt (41 samples, 0.74%)</title><rect x="816.3" y="563.0" width="8.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="819.3" y="574.0"></text>
</g>
<g>
<title>__get_user_4 (6 samples, 0.11%)</title><rect x="816.3" y="547.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="819.3" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (12 samples, 0.22%)</title><rect x="817.8" y="547.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="820.8" y="558.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.05%)</title><rect x="817.8" y="531.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="820.8" y="542.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.04%)</title><rect x="818.0" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="821.0" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.16%)</title><rect x="818.4" y="531.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="821.4" y="542.0"></text>
</g>
<g>
<title>release_sock (9 samples, 0.16%)</title><rect x="820.4" y="547.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="823.4" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.09%)</title><rect x="821.2" y="531.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="824.2" y="542.0"></text>
</g>
<g>
<title>sock_set_timeout (13 samples, 0.24%)</title><rect x="822.3" y="547.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="825.3" y="558.0"></text>
</g>
<g>
<title>_copy_from_user (9 samples, 0.16%)</title><rect x="823.1" y="531.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="826.1" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 0.15%)</title><rect x="823.4" y="515.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="826.4" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (19 samples, 0.34%)</title><rect x="825.1" y="563.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.1" y="574.0"></text>
</g>
<g>
<title>__fget_light (19 samples, 0.34%)</title><rect x="825.1" y="547.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="828.1" y="558.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.33%)</title><rect x="825.3" y="531.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="828.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (753 samples, 13.66%)</title><rect x="829.3" y="659.0" width="161.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.3" y="670.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (19 samples, 0.34%)</title><rect x="830.4" y="643.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="833.4" y="654.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.05%)</title><rect x="831.3" y="627.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="834.3" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="832.1" y="627.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="835.1" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.15%)</title><rect x="832.6" y="627.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="835.6" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.07%)</title><rect x="833.4" y="611.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="836.4" y="622.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (2 samples, 0.04%)</title><rect x="833.8" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="836.8" y="606.0"></text>
</g>
<g>
<title>__libc_send (725 samples, 13.15%)</title><rect x="834.5" y="643.0" width="155.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="837.5" y="654.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (716 samples, 12.99%)</title><rect x="836.4" y="627.0" width="153.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="839.4" y="638.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>do_syscall_64 (716 samples, 12.99%)</title><rect x="836.4" y="611.0" width="153.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="839.4" y="622.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (712 samples, 12.91%)</title><rect x="837.3" y="595.0" width="152.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="840.3" y="606.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (711 samples, 12.90%)</title><rect x="837.5" y="579.0" width="152.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.5" y="590.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (703 samples, 12.75%)</title><rect x="838.8" y="563.0" width="150.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="841.8" y="574.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg?[ipv6] (2 samples, 0.04%)</title><rect x="841.1" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="844.1" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.11%)</title><rect x="841.5" y="547.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="844.5" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.05%)</title><rect x="842.2" y="531.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="845.2" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (684 samples, 12.41%)</title><rect x="842.8" y="547.0" width="146.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="845.8" y="558.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="843.0" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="846.0" y="542.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="843.5" y="531.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="846.5" y="542.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="843.7" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="846.7" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (678 samples, 12.30%)</title><rect x="844.1" y="531.0" width="145.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="847.1" y="542.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.07%)</title><rect x="849.0" y="515.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="852.0" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="849.2" y="499.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="852.2" y="510.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (553 samples, 10.03%)</title><rect x="849.9" y="515.0" width="118.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="852.9" y="526.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (552 samples, 10.01%)</title><rect x="850.1" y="499.0" width="118.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="853.1" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (517 samples, 9.38%)</title><rect x="851.8" y="483.0" width="110.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="854.8" y="494.0">__tcp_transmi..</text>
</g>
<g>
<title>__ip_queue_xmit (487 samples, 8.83%)</title><rect x="853.5" y="467.0" width="104.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="856.5" y="478.0">__ip_queue_x..</text>
</g>
<g>
<title>ip_local_out (17 samples, 0.31%)</title><rect x="855.2" y="451.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="858.2" y="462.0"></text>
</g>
<g>
<title>__ip_local_out (17 samples, 0.31%)</title><rect x="855.2" y="435.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="858.2" y="446.0"></text>
</g>
<g>
<title>ip_send_check (9 samples, 0.16%)</title><rect x="855.7" y="419.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="858.7" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.11%)</title><rect x="857.6" y="419.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="860.6" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_output (3 samples, 0.05%)</title><rect x="858.2" y="403.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="861.2" y="414.0"></text>
</g>
<g>
<title>ip_output (462 samples, 8.38%)</title><rect x="858.9" y="451.0" width="98.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="861.9" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (445 samples, 8.07%)</title><rect x="859.3" y="435.0" width="95.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="862.3" y="446.0">ip_finish_o..</text>
</g>
<g>
<title>__dev_queue_xmit (24 samples, 0.44%)</title><rect x="861.7" y="419.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="864.7" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (19 samples, 0.34%)</title><rect x="862.5" y="403.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="865.5" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.24%)</title><rect x="863.8" y="387.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="866.8" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.07%)</title><rect x="864.9" y="371.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="867.9" y="382.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="865.7" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="868.7" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="865.7" y="355.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="868.7" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="865.7" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="868.7" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.04%)</title><rect x="866.2" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="869.2" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (410 samples, 7.44%)</title><rect x="866.8" y="419.0" width="87.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="869.8" y="430.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (408 samples, 7.40%)</title><rect x="867.2" y="403.0" width="87.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="870.2" y="414.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (403 samples, 7.31%)</title><rect x="868.3" y="387.0" width="86.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="871.3" y="398.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (403 samples, 7.31%)</title><rect x="868.3" y="371.0" width="86.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="871.3" y="382.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (383 samples, 6.95%)</title><rect x="872.6" y="355.0" width="82.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="875.6" y="366.0">net_rx_ac..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.04%)</title><rect x="873.9" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="876.9" y="350.0"></text>
</g>
<g>
<title>process_backlog (375 samples, 6.80%)</title><rect x="874.3" y="339.0" width="80.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="877.3" y="350.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (366 samples, 6.64%)</title><rect x="876.2" y="323.0" width="78.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="879.2" y="334.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (8 samples, 0.15%)</title><rect x="876.2" y="307.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.2" y="318.0"></text>
</g>
<g>
<title>ip_rcv (358 samples, 6.49%)</title><rect x="877.9" y="307.0" width="76.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="880.9" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (352 samples, 6.38%)</title><rect x="878.1" y="291.0" width="75.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="881.1" y="302.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (349 samples, 6.33%)</title><rect x="878.8" y="275.0" width="74.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="881.8" y="286.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (346 samples, 6.28%)</title><rect x="879.4" y="259.0" width="74.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="882.4" y="270.0">ip_proto..</text>
</g>
<g>
<title>tcp_v4_rcv (341 samples, 6.19%)</title><rect x="880.5" y="243.0" width="73.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="883.5" y="254.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (21 samples, 0.38%)</title><rect x="885.4" y="227.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="888.4" y="238.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.05%)</title><rect x="889.3" y="211.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="892.3" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (13 samples, 0.24%)</title><rect x="889.9" y="227.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="892.9" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (12 samples, 0.22%)</title><rect x="890.1" y="211.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.1" y="222.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (11 samples, 0.20%)</title><rect x="890.3" y="195.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="893.3" y="206.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (7 samples, 0.13%)</title><rect x="891.2" y="179.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="894.2" y="190.0"></text>
</g>
<g>
<title>selinux_netlbl_sock_rcv_skb (4 samples, 0.07%)</title><rect x="891.4" y="163.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.4" y="174.0"></text>
</g>
<g>
<title>selinux_parse_skb.constprop.0 (2 samples, 0.04%)</title><rect x="892.3" y="163.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="895.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (282 samples, 5.12%)</title><rect x="892.9" y="227.0" width="60.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="895.9" y="238.0">tcp_v4..</text>
</g>
<g>
<title>tcp_rcv_established (281 samples, 5.10%)</title><rect x="893.1" y="211.0" width="60.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="896.1" y="222.0">tcp_rc..</text>
</g>
<g>
<title>sock_def_readable (166 samples, 3.01%)</title><rect x="895.7" y="195.0" width="35.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="898.7" y="206.0">soc..</text>
</g>
<g>
<title>__wake_up_common_lock (160 samples, 2.90%)</title><rect x="897.0" y="179.0" width="34.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="900.0" y="190.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (159 samples, 2.88%)</title><rect x="897.2" y="163.0" width="34.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="900.2" y="174.0">_r..</text>
</g>
<g>
<title>tcp_ack (75 samples, 1.36%)</title><rect x="931.2" y="195.0" width="16.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="934.2" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (25 samples, 0.45%)</title><rect x="934.2" y="179.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.2" y="190.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.07%)</title><rect x="934.2" y="163.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="937.2" y="174.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.05%)</title><rect x="935.1" y="163.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="938.1" y="174.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.33%)</title><rect x="935.7" y="163.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="938.7" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (9 samples, 0.16%)</title><rect x="939.8" y="179.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="942.8" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.09%)</title><rect x="941.9" y="179.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.9" y="190.0"></text>
</g>
<g>
<title>rb_first (6 samples, 0.11%)</title><rect x="943.0" y="179.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="946.0" y="190.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.09%)</title><rect x="944.3" y="179.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="947.3" y="190.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.04%)</title><rect x="945.6" y="179.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="948.6" y="190.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.05%)</title><rect x="946.0" y="179.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="949.0" y="190.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.04%)</title><rect x="946.9" y="179.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.9" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.07%)</title><rect x="947.3" y="195.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="950.3" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.05%)</title><rect x="948.3" y="195.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="951.3" y="206.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.07%)</title><rect x="949.0" y="195.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="952.0" y="206.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (4 samples, 0.07%)</title><rect x="949.8" y="195.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="952.8" y="206.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (11 samples, 0.20%)</title><rect x="950.7" y="195.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="953.7" y="206.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.15%)</title><rect x="951.3" y="179.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="954.3" y="190.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.11%)</title><rect x="951.8" y="163.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="954.8" y="174.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.05%)</title><rect x="953.5" y="291.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="956.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.04%)</title><rect x="954.1" y="291.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.1" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.27%)</title><rect x="954.6" y="435.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="957.6" y="446.0"></text>
</g>
<g>
<title>selinux_ip_postroute (11 samples, 0.20%)</title><rect x="955.4" y="419.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="958.4" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (9 samples, 0.16%)</title><rect x="955.8" y="403.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="958.8" y="414.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.07%)</title><rect x="956.7" y="387.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="959.7" y="398.0"></text>
</g>
<g>
<title>__skb_clone (10 samples, 0.18%)</title><rect x="957.8" y="467.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="960.8" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.07%)</title><rect x="959.1" y="451.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="962.1" y="462.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="960.3" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="963.3" y="478.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.04%)</title><rect x="960.8" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="963.8" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.04%)</title><rect x="961.2" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.2" y="478.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.07%)</title><rect x="961.6" y="467.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="964.6" y="478.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="962.5" y="483.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="965.5" y="494.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="962.5" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="965.5" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.25%)</title><rect x="963.1" y="483.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="966.1" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.16%)</title><rect x="964.0" y="467.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="967.0" y="478.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.16%)</title><rect x="964.0" y="451.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="967.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="965.3" y="435.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="968.3" y="446.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.13%)</title><rect x="966.1" y="483.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="969.1" y="494.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (3 samples, 0.05%)</title><rect x="967.6" y="483.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.6" y="494.0"></text>
</g>
<g>
<title>_copy_from_iter_full (12 samples, 0.22%)</title><rect x="968.3" y="515.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="971.3" y="526.0"></text>
</g>
<g>
<title>copyin (7 samples, 0.13%)</title><rect x="968.9" y="499.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="971.9" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.11%)</title><rect x="969.1" y="483.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="972.1" y="494.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.04%)</title><rect x="970.4" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="973.4" y="510.0"></text>
</g>
<g>
<title>sk_page_frag_refill (8 samples, 0.15%)</title><rect x="970.8" y="515.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="973.8" y="526.0"></text>
</g>
<g>
<title>skb_page_frag_refill (8 samples, 0.15%)</title><rect x="970.8" y="499.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="973.8" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.62%)</title><rect x="972.5" y="515.0" width="7.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="975.5" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (28 samples, 0.51%)</title><rect x="973.6" y="499.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="976.6" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.13%)</title><rect x="974.9" y="483.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="977.9" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.11%)</title><rect x="975.1" y="467.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.1" y="478.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="976.0" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="979.0" y="462.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.05%)</title><rect x="976.4" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="979.4" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.22%)</title><rect x="977.0" y="483.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="980.0" y="494.0"></text>
</g>
<g>
<title>skb_entail (9 samples, 0.16%)</title><rect x="979.8" y="515.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="982.8" y="526.0"></text>
</g>
<g>
<title>tcp_chrono_start (3 samples, 0.05%)</title><rect x="981.1" y="499.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="984.1" y="510.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.07%)</title><rect x="981.7" y="515.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.7" y="526.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (8 samples, 0.15%)</title><rect x="982.6" y="515.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="985.6" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (20 samples, 0.36%)</title><rect x="984.3" y="515.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="987.3" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (18 samples, 0.33%)</title><rect x="984.7" y="499.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="987.7" y="510.0"></text>
</g>
<g>
<title>ipv4_mtu (9 samples, 0.16%)</title><rect x="986.7" y="483.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="989.7" y="494.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (3 samples, 0.05%)</title><rect x="988.6" y="515.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="991.6" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="989.2" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.2" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.05%)</title><rect x="989.9" y="643.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="992.9" y="654.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (22 samples, 0.40%)</title><rect x="990.5" y="659.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.5" y="670.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (20 samples, 0.36%)</title><rect x="995.2" y="659.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Utility.isHomeInReplicas (8 samples, 0.15%)</title><rect x="999.5" y="723.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.entity (2 samples, 0.04%)</title><rect x="1001.2" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1004.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (18 samples, 0.33%)</title><rect x="1001.6" y="771.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1004.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (18 samples, 0.33%)</title><rect x="1001.6" y="755.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.07%)</title><rect x="1001.6" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (14 samples, 0.25%)</title><rect x="1002.5" y="739.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1005.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (14 samples, 0.25%)</title><rect x="1002.5" y="723.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (14 samples, 0.25%)</title><rect x="1002.5" y="707.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (95 samples, 1.72%)</title><rect x="1005.5" y="803.0" width="20.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1008.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.18%)</title><rect x="1006.4" y="787.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.18%)</title><rect x="1006.4" y="771.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.18%)</title><rect x="1006.4" y="755.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1009.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.18%)</title><rect x="1006.4" y="739.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (45 samples, 0.82%)</title><rect x="1008.5" y="787.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1011.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 0.80%)</title><rect x="1008.7" y="771.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1011.7" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="1017.3" y="755.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1020.3" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="1017.3" y="739.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1020.3" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="1017.3" y="723.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.3" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="1017.3" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1020.3" y="718.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="1017.3" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1020.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="1017.3" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (36 samples, 0.65%)</title><rect x="1018.1" y="787.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1021.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.25%)</title><rect x="1025.8" y="803.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1028.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.16%)</title><rect x="1026.5" y="787.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.16%)</title><rect x="1026.5" y="771.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1029.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="1028.4" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="1028.4" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1031.4" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="1028.4" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.4" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="1028.4" y="739.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1031.4" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="1028.4" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1031.4" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="1028.4" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1031.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (146 samples, 2.65%)</title><rect x="1028.8" y="803.0" width="31.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.8" y="814.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (55 samples, 1.00%)</title><rect x="1048.3" y="787.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (511 samples, 9.27%)</title><rect x="1060.3" y="819.0" width="109.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.3" y="830.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (496 samples, 9.00%)</title><rect x="1063.3" y="803.0" width="106.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.3" y="814.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (96 samples, 1.74%)</title><rect x="1067.4" y="787.0" width="20.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1070.4" y="798.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (9 samples, 0.16%)</title><rect x="1069.7" y="771.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1072.7" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="1071.6" y="771.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1074.6" y="782.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.05%)</title><rect x="1072.5" y="771.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1075.5" y="782.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (11 samples, 0.20%)</title><rect x="1073.1" y="771.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1076.1" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (54 samples, 0.98%)</title><rect x="1075.5" y="771.0" width="11.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1078.5" y="782.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (8 samples, 0.15%)</title><rect x="1080.6" y="755.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1083.6" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (19 samples, 0.34%)</title><rect x="1082.6" y="755.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1085.6" y="766.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (8 samples, 0.15%)</title><rect x="1084.9" y="739.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1087.9" y="750.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (2 samples, 0.04%)</title><rect x="1086.6" y="755.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1089.6" y="766.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="1087.3" y="771.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.3" y="782.0"></text>
</g>
<g>
<title>__libc_recv (374 samples, 6.78%)</title><rect x="1087.9" y="787.0" width="80.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1090.9" y="798.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (355 samples, 6.44%)</title><rect x="1092.0" y="771.0" width="76.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1095.0" y="782.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (355 samples, 6.44%)</title><rect x="1092.0" y="755.0" width="76.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1095.0" y="766.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_recvfrom (348 samples, 6.31%)</title><rect x="1093.5" y="739.0" width="74.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1096.5" y="750.0">__x64_sy..</text>
</g>
<g>
<title>__sys_recvfrom (346 samples, 6.28%)</title><rect x="1093.9" y="723.0" width="74.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1096.9" y="734.0">__sys_re..</text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (305 samples, 5.53%)</title><rect x="1095.4" y="707.0" width="65.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1098.4" y="718.0">inet6_r..</text>
</g>
<g>
<title>tcp_recvmsg (299 samples, 5.42%)</title><rect x="1096.7" y="691.0" width="64.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1099.7" y="702.0">tcp_rec..</text>
</g>
<g>
<title>__kfree_skb (31 samples, 0.56%)</title><rect x="1108.5" y="675.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1111.5" y="686.0"></text>
</g>
<g>
<title>skb_release_all (26 samples, 0.47%)</title><rect x="1108.7" y="659.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1111.7" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (26 samples, 0.47%)</title><rect x="1108.7" y="643.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1111.7" y="654.0"></text>
</g>
<g>
<title>dst_release (17 samples, 0.31%)</title><rect x="1108.7" y="627.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1111.7" y="638.0"></text>
</g>
<g>
<title>sock_rfree (9 samples, 0.16%)</title><rect x="1112.3" y="627.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1115.3" y="638.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.07%)</title><rect x="1114.2" y="659.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1117.2" y="670.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="1115.3" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1118.3" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="1115.7" y="675.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1118.7" y="686.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="1115.7" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1118.7" y="670.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.04%)</title><rect x="1115.7" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1118.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="1116.2" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1119.2" y="670.0"></text>
</g>
<g>
<title>release_sock (9 samples, 0.16%)</title><rect x="1116.6" y="675.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1119.6" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1117.4" y="659.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1120.4" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="1118.1" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1121.1" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (142 samples, 2.58%)</title><rect x="1118.5" y="675.0" width="30.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1121.5" y="686.0">sk..</text>
</g>
<g>
<title>__skb_datagram_iter (137 samples, 2.49%)</title><rect x="1119.6" y="659.0" width="29.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1122.6" y="670.0">__..</text>
</g>
<g>
<title>_copy_to_iter (55 samples, 1.00%)</title><rect x="1127.9" y="643.0" width="11.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1130.9" y="654.0"></text>
</g>
<g>
<title>copyout (52 samples, 0.94%)</title><rect x="1128.6" y="627.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1131.6" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (51 samples, 0.93%)</title><rect x="1128.8" y="611.0" width="10.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1131.8" y="622.0"></text>
</g>
<g>
<title>simple_copy_to_iter (43 samples, 0.78%)</title><rect x="1139.7" y="643.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1142.7" y="654.0"></text>
</g>
<g>
<title>__check_object_size (40 samples, 0.73%)</title><rect x="1140.3" y="627.0" width="8.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1143.3" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.18%)</title><rect x="1146.5" y="611.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1149.5" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (22 samples, 0.40%)</title><rect x="1148.9" y="675.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1151.9" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (33 samples, 0.60%)</title><rect x="1153.6" y="675.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.6" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (16 samples, 0.29%)</title><rect x="1157.3" y="659.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1160.3" y="670.0"></text>
</g>
<g>
<title>ktime_get (14 samples, 0.25%)</title><rect x="1157.7" y="643.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1160.7" y="654.0"></text>
</g>
<g>
<title>read_tsc (10 samples, 0.18%)</title><rect x="1158.5" y="627.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1161.5" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.33%)</title><rect x="1160.7" y="707.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.7" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (18 samples, 0.33%)</title><rect x="1160.7" y="691.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1163.7" y="702.0"></text>
</g>
<g>
<title>sock_has_perm (14 samples, 0.25%)</title><rect x="1161.5" y="675.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1164.5" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.29%)</title><rect x="1164.5" y="707.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1167.5" y="718.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.27%)</title><rect x="1164.7" y="691.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.7" y="702.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.24%)</title><rect x="1165.2" y="675.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1168.2" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="1168.0" y="787.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1171.0" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="1168.6" y="787.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1171.6" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.13%)</title><rect x="1169.7" y="851.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.7" y="862.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="1169.9" y="835.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1172.9" y="846.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="1170.3" y="835.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1173.3" y="846.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="1170.3" y="819.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1173.3" y="830.0"></text>
</g>
<g>
<title>start_thread (88 samples, 1.60%)</title><rect x="1171.2" y="867.0" width="18.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1174.2" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (88 samples, 1.60%)</title><rect x="1171.2" y="851.0" width="18.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1174.2" y="862.0"></text>
</g>
<g>
<title>Thread::call_run() (88 samples, 1.60%)</title><rect x="1171.2" y="835.0" width="18.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.2" y="846.0"></text>
</g>
<g>
<title>GangWorker::loop() (57 samples, 1.03%)</title><rect x="1171.2" y="819.0" width="12.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.2" y="830.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (50 samples, 0.91%)</title><rect x="1171.4" y="803.0" width="10.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.4" y="814.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (17 samples, 0.31%)</title><rect x="1171.6" y="787.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.6" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.15%)</title><rect x="1171.6" y="771.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.6" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.09%)</title><rect x="1172.2" y="755.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.2" y="766.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.04%)</title><rect x="1173.3" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.3" y="782.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.11%)</title><rect x="1173.7" y="771.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1176.7" y="782.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (25 samples, 0.45%)</title><rect x="1175.2" y="787.0" width="5.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.2" y="798.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (25 samples, 0.45%)</title><rect x="1175.2" y="771.0" width="5.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.2" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (25 samples, 0.45%)</title><rect x="1175.2" y="755.0" width="5.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.2" y="766.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (25 samples, 0.45%)</title><rect x="1175.2" y="739.0" width="5.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.2" y="750.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (22 samples, 0.40%)</title><rect x="1175.7" y="723.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.7" y="734.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (12 samples, 0.22%)</title><rect x="1175.7" y="707.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.7" y="718.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (3 samples, 0.05%)</title><rect x="1176.7" y="691.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.7" y="702.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 0.04%)</title><rect x="1176.9" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.9" y="686.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (3 samples, 0.05%)</title><rect x="1177.6" y="691.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.6" y="702.0"></text>
</g>
<g>
<title>EnableIf&lt;!IsSame&lt;G1ScanObjsDuringUpdateRSClosure, OopClosure&gt;::value, void&gt;::type call_do_oop&lt;unsigned int, G1ScanObjsDuringUpdateRSClosure, OopClosure, G1ScanObjsDuringUpdateRSClosure&gt;(void (G1ScanObjsDuringUpdateRSClosure::*)(unsigned int*), void (OopClosure::*)(unsigned int*), G1ScanObjsDuringUpdateRSClosure*, unsigned int*) (3 samples, 0.05%)</title><rect x="1177.6" y="675.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.6" y="686.0"></text>
</g>
<g>
<title>G1ScanClosureBase::trim_queue_partially() (9 samples, 0.16%)</title><rect x="1178.2" y="707.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.2" y="718.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (4 samples, 0.07%)</title><rect x="1178.4" y="691.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.4" y="702.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.07%)</title><rect x="1179.3" y="691.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.3" y="702.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.05%)</title><rect x="1179.5" y="675.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.5" y="686.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.05%)</title><rect x="1179.5" y="659.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.5" y="670.0"></text>
</g>
<g>
<title>do_user_addr_fault (3 samples, 0.05%)</title><rect x="1179.5" y="643.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1182.5" y="654.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="1179.5" y="627.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.5" y="638.0"></text>
</g>
<g>
<title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="1179.5" y="611.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.5" y="622.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.11%)</title><rect x="1180.8" y="787.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.8" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (5 samples, 0.09%)</title><rect x="1180.8" y="771.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.8" y="782.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.05%)</title><rect x="1181.2" y="755.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.2" y="766.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.05%)</title><rect x="1181.2" y="739.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.2" y="750.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1181.4" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.4" y="734.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.04%)</title><rect x="1181.4" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.4" y="718.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (4 samples, 0.07%)</title><rect x="1182.5" y="803.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.5" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (4 samples, 0.07%)</title><rect x="1182.5" y="787.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.5" y="798.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (29 samples, 0.53%)</title><rect x="1183.4" y="819.0" width="6.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.4" y="830.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (29 samples, 0.53%)</title><rect x="1183.4" y="803.0" width="6.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.4" y="814.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (29 samples, 0.53%)</title><rect x="1183.4" y="787.0" width="6.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.4" y="798.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (28 samples, 0.51%)</title><rect x="1183.4" y="771.0" width="6.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.4" y="782.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (28 samples, 0.51%)</title><rect x="1183.4" y="755.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.4" y="766.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (14 samples, 0.25%)</title><rect x="1183.4" y="739.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.4" y="750.0"></text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.04%)</title><rect x="1183.4" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.4" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (11 samples, 0.20%)</title><rect x="1184.0" y="723.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.0" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.04%)</title><rect x="1184.2" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.04%)</title><rect x="1184.6" y="707.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.6" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.04%)</title><rect x="1185.3" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="718.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.04%)</title><rect x="1185.3" y="691.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.3" y="702.0"></text>
</g>
<g>
<title>Compile::Optimize() (11 samples, 0.20%)</title><rect x="1186.4" y="739.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="750.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (3 samples, 0.05%)</title><rect x="1186.6" y="723.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.6" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.05%)</title><rect x="1186.6" y="707.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.6" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.05%)</title><rect x="1187.2" y="723.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.2" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.04%)</title><rect x="1187.9" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.9" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.04%)</title><rect x="1187.9" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.9" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1188.7" y="739.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.7" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1188.7" y="723.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1188.7" y="707.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1188.7" y="691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1188.7" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1188.7" y="659.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1188.7" y="643.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1188.7" y="627.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1188.7" y="611.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1188.7" y="595.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1188.7" y="579.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1188.7" y="563.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="574.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.04%)</title><rect x="1189.6" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.04%)</title><rect x="1189.6" y="803.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.6" y="814.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (2 samples, 0.04%)</title><rect x="1189.6" y="787.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.6" y="798.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1189.6" y="771.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.6" y="782.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1189.6" y="755.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.6" y="766.0"></text>
</g>
</g>
</svg>
