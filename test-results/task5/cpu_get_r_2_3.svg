<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="821"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="821"> </text>
<g id="frames">
<g>
<title>all (14,520 samples, 100.00%)</title><rect x="10.0" y="787.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="798.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (244 samples, 1.68%)</title><rect x="10.0" y="771.0" width="19.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (234 samples, 1.61%)</title><rect x="10.2" y="755.0" width="19.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.2" y="766.0"></text>
</g>
<g>
<title>Monitor::unlock() (4 samples, 0.03%)</title><rect x="13.9" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.9" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (181 samples, 1.25%)</title><rect x="14.2" y="739.0" width="14.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.2" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (118 samples, 0.81%)</title><rect x="17.2" y="723.0" width="9.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="20.2" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (10 samples, 0.07%)</title><rect x="25.9" y="707.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="28.9" y="718.0"></text>
</g>
<g>
<title>SpinPause (18 samples, 0.12%)</title><rect x="26.9" y="723.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="29.9" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.03%)</title><rect x="28.9" y="739.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="31.9" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (7 samples, 0.05%)</title><rect x="29.3" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="32.3" y="766.0"></text>
</g>
<g>
<title>[no_Java_frame] (29 samples, 0.20%)</title><rect x="29.8" y="771.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="32.8" y="782.0"></text>
</g>
<g>
<title>[not_walkable_Java] (14 samples, 0.10%)</title><rect x="32.2" y="771.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="35.2" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="32.3" y="755.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="35.3" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.03%)</title><rect x="32.3" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="35.3" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.03%)</title><rect x="32.8" y="755.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="35.8" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (4 samples, 0.03%)</title><rect x="32.8" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="35.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.28%)</title><rect x="33.3" y="771.0" width="3.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="36.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (10 samples, 0.07%)</title><rect x="33.3" y="755.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="36.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.07%)</title><rect x="33.3" y="739.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.07%)</title><rect x="33.3" y="723.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.06%)</title><rect x="33.5" y="707.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="36.5" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.05%)</title><rect x="33.5" y="691.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="36.5" y="702.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.04%)</title><rect x="33.6" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.6" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (28 samples, 0.19%)</title><rect x="34.1" y="755.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="37.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.18%)</title><rect x="34.3" y="739.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="37.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.18%)</title><rect x="34.3" y="723.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="37.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.15%)</title><rect x="34.6" y="707.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.6" y="718.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.14%)</title><rect x="34.8" y="691.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.8" y="702.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.14%)</title><rect x="34.8" y="675.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="37.8" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (15 samples, 0.10%)</title><rect x="35.2" y="659.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="38.2" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (162 samples, 1.12%)</title><rect x="36.7" y="771.0" width="13.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="39.7" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.08%)</title><rect x="37.1" y="755.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="40.1" y="766.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (11 samples, 0.08%)</title><rect x="37.1" y="739.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="40.1" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (145 samples, 1.00%)</title><rect x="38.0" y="755.0" width="11.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="41.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (137 samples, 0.94%)</title><rect x="38.7" y="739.0" width="11.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="41.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (137 samples, 0.94%)</title><rect x="38.7" y="723.0" width="11.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="41.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (131 samples, 0.90%)</title><rect x="39.2" y="707.0" width="10.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="42.2" y="718.0"></text>
</g>
<g>
<title>do_futex (128 samples, 0.88%)</title><rect x="39.4" y="691.0" width="10.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="42.4" y="702.0"></text>
</g>
<g>
<title>futex_wake (127 samples, 0.87%)</title><rect x="39.5" y="675.0" width="10.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="42.5" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (12 samples, 0.08%)</title><rect x="41.9" y="659.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="44.9" y="670.0"></text>
</g>
<g>
<title>wake_q_add_safe (7 samples, 0.05%)</title><rect x="42.8" y="659.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="45.8" y="670.0"></text>
</g>
<g>
<title>wake_up_q (79 samples, 0.54%)</title><rect x="43.4" y="659.0" width="6.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.4" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (78 samples, 0.54%)</title><rect x="43.5" y="643.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="46.5" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (78 samples, 0.54%)</title><rect x="43.5" y="627.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="46.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11,947 samples, 82.28%)</title><rect x="50.0" y="771.0" width="970.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.0" y="782.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,947 samples, 82.28%)</title><rect x="50.0" y="755.0" width="970.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.0" y="766.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,947 samples, 82.28%)</title><rect x="50.0" y="739.0" width="970.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.0" y="750.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (11,830 samples, 81.47%)</title><rect x="50.0" y="723.0" width="961.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.0" y="734.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (530 samples, 3.65%)</title><rect x="50.0" y="707.0" width="43.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.0" y="718.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (529 samples, 3.64%)</title><rect x="50.1" y="691.0" width="43.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.1" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (529 samples, 3.64%)</title><rect x="50.1" y="675.0" width="43.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.1" y="686.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.05%)</title><rect x="50.1" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (7 samples, 0.05%)</title><rect x="50.1" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$103/1892060115.accept (522 samples, 3.60%)</title><rect x="50.6" y="659.0" width="42.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.6" y="670.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (522 samples, 3.60%)</title><rect x="50.6" y="643.0" width="42.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.6" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (522 samples, 3.60%)</title><rect x="50.6" y="627.0" width="42.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.6" y="638.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (522 samples, 3.60%)</title><rect x="50.6" y="611.0" width="42.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.6" y="622.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (13 samples, 0.09%)</title><rect x="51.7" y="595.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.09%)</title><rect x="51.7" y="579.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.09%)</title><rect x="51.7" y="563.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.7" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.04%)</title><rect x="52.3" y="547.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="55.3" y="558.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="52.3" y="531.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="55.3" y="542.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.03%)</title><rect x="52.3" y="515.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="55.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (480 samples, 3.31%)</title><rect x="52.7" y="595.0" width="39.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.7" y="606.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (28 samples, 0.19%)</title><rect x="52.8" y="579.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (15 samples, 0.10%)</title><rect x="53.9" y="563.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (15 samples, 0.10%)</title><rect x="53.9" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (15 samples, 0.10%)</title><rect x="53.9" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (451 samples, 3.11%)</title><rect x="55.1" y="579.0" width="36.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.1" y="590.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (451 samples, 3.11%)</title><rect x="55.1" y="563.0" width="36.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.1" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (447 samples, 3.08%)</title><rect x="55.4" y="547.0" width="36.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.4" y="558.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (445 samples, 3.06%)</title><rect x="55.6" y="531.0" width="36.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.6" y="542.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (11 samples, 0.08%)</title><rect x="55.9" y="515.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="58.9" y="526.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (4 samples, 0.03%)</title><rect x="56.0" y="499.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="59.0" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.04%)</title><rect x="56.3" y="499.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="59.3" y="510.0"></text>
</g>
<g>
<title>__libc_send (430 samples, 2.96%)</title><rect x="56.8" y="515.0" width="35.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="59.8" y="526.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (424 samples, 2.92%)</title><rect x="57.3" y="499.0" width="34.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="60.3" y="510.0">en..</text>
</g>
<g>
<title>do_syscall_64 (424 samples, 2.92%)</title><rect x="57.3" y="483.0" width="34.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.3" y="494.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (419 samples, 2.89%)</title><rect x="57.7" y="467.0" width="34.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="60.7" y="478.0">__..</text>
</g>
<g>
<title>__sys_sendto (417 samples, 2.87%)</title><rect x="57.9" y="451.0" width="33.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="60.9" y="462.0">__..</text>
</g>
<g>
<title>sock_sendmsg (406 samples, 2.80%)</title><rect x="58.0" y="435.0" width="33.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.0" y="446.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (398 samples, 2.74%)</title><rect x="58.7" y="419.0" width="32.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="61.7" y="430.0">tc..</text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.03%)</title><rect x="58.8" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="61.8" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.03%)</title><rect x="58.8" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="61.8" y="398.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.04%)</title><rect x="59.1" y="403.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.1" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (387 samples, 2.67%)</title><rect x="59.6" y="403.0" width="31.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="62.6" y="414.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (337 samples, 2.32%)</title><rect x="60.3" y="387.0" width="27.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="63.3" y="398.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (336 samples, 2.31%)</title><rect x="60.4" y="371.0" width="27.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="63.4" y="382.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (309 samples, 2.13%)</title><rect x="60.8" y="355.0" width="25.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="63.8" y="366.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (289 samples, 1.99%)</title><rect x="61.4" y="339.0" width="23.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="64.4" y="350.0">_..</text>
</g>
<g>
<title>ip_local_out (8 samples, 0.06%)</title><rect x="61.6" y="323.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="64.6" y="334.0"></text>
</g>
<g>
<title>__ip_local_out (8 samples, 0.06%)</title><rect x="61.6" y="307.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="64.6" y="318.0"></text>
</g>
<g>
<title>ip_send_check (6 samples, 0.04%)</title><rect x="61.8" y="291.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="64.8" y="302.0"></text>
</g>
<g>
<title>ip_output (279 samples, 1.92%)</title><rect x="62.3" y="323.0" width="22.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="65.3" y="334.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (267 samples, 1.84%)</title><rect x="62.7" y="307.0" width="21.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="65.7" y="318.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.10%)</title><rect x="63.5" y="291.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="66.5" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.04%)</title><rect x="63.6" y="275.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="66.6" y="286.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.04%)</title><rect x="63.6" y="259.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="66.6" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (242 samples, 1.67%)</title><rect x="64.7" y="291.0" width="19.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="67.7" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (242 samples, 1.67%)</title><rect x="64.7" y="275.0" width="19.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="67.7" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (238 samples, 1.64%)</title><rect x="65.0" y="259.0" width="19.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="68.0" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (238 samples, 1.64%)</title><rect x="65.0" y="243.0" width="19.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="68.0" y="254.0"></text>
</g>
<g>
<title>net_rx_action (232 samples, 1.60%)</title><rect x="65.5" y="227.0" width="18.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="68.5" y="238.0"></text>
</g>
<g>
<title>process_backlog (225 samples, 1.55%)</title><rect x="66.1" y="211.0" width="18.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.1" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (222 samples, 1.53%)</title><rect x="66.3" y="195.0" width="18.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="69.3" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.03%)</title><rect x="66.5" y="179.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="69.5" y="190.0"></text>
</g>
<g>
<title>ip_rcv (216 samples, 1.49%)</title><rect x="66.8" y="179.0" width="17.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (213 samples, 1.47%)</title><rect x="66.9" y="163.0" width="17.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="69.9" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (211 samples, 1.45%)</title><rect x="67.0" y="147.0" width="17.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.0" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (210 samples, 1.45%)</title><rect x="67.1" y="131.0" width="17.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="70.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (206 samples, 1.42%)</title><rect x="67.5" y="115.0" width="16.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="70.5" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.07%)</title><rect x="68.3" y="99.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="71.3" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (181 samples, 1.25%)</title><rect x="69.4" y="99.0" width="14.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="72.4" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (181 samples, 1.25%)</title><rect x="69.4" y="83.0" width="14.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="72.4" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.03%)</title><rect x="69.7" y="67.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="72.7" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (104 samples, 0.72%)</title><rect x="70.0" y="67.0" width="8.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (101 samples, 0.70%)</title><rect x="70.2" y="51.0" width="8.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="73.2" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (101 samples, 0.70%)</title><rect x="70.2" y="35.0" width="8.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="73.2" y="46.0"></text>
</g>
<g>
<title>tcp_ack (56 samples, 0.39%)</title><rect x="78.4" y="67.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.4" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (24 samples, 0.17%)</title><rect x="79.2" y="51.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.2" y="62.0"></text>
</g>
<g>
<title>skb_release_data (16 samples, 0.11%)</title><rect x="79.9" y="35.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="82.9" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (5 samples, 0.03%)</title><rect x="81.2" y="51.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="84.2" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.03%)</title><rect x="81.8" y="51.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="84.8" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.04%)</title><rect x="83.0" y="67.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="86.0" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.05%)</title><rect x="84.4" y="307.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="87.4" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.05%)</title><rect x="84.4" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="87.4" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (7 samples, 0.05%)</title><rect x="84.4" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="87.4" y="286.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.04%)</title><rect x="84.9" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.9" y="350.0"></text>
</g>
<g>
<title>ktime_get (9 samples, 0.06%)</title><rect x="85.9" y="355.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="88.9" y="366.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.03%)</title><rect x="86.3" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="89.3" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.08%)</title><rect x="86.6" y="355.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.6" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.06%)</title><rect x="86.8" y="339.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="89.8" y="350.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.06%)</title><rect x="86.8" y="323.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="89.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="87.0" y="307.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="90.0" y="318.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.03%)</title><rect x="87.7" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.7" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (6 samples, 0.04%)</title><rect x="88.0" y="387.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.0" y="398.0"></text>
</g>
<g>
<title>skb_page_frag_refill (6 samples, 0.04%)</title><rect x="88.0" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="91.0" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (18 samples, 0.12%)</title><rect x="88.5" y="387.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="91.5" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (17 samples, 0.12%)</title><rect x="88.6" y="371.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.6" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.06%)</title><rect x="89.3" y="355.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.3" y="366.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.03%)</title><rect x="90.0" y="387.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="93.0" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.04%)</title><rect x="90.5" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="93.5" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.04%)</title><rect x="90.5" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="93.5" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.06%)</title><rect x="91.0" y="435.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="94.0" y="446.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.06%)</title><rect x="91.0" y="419.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.0" y="430.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.04%)</title><rect x="91.3" y="403.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="94.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.11%)</title><rect x="91.8" y="595.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.08%)</title><rect x="92.1" y="579.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.08%)</title><rect x="92.1" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$214/27342804.get (11 samples, 0.08%)</title><rect x="93.1" y="707.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$putAsync$4 (11 samples, 0.08%)</title><rect x="93.1" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$97/1991432636.get (11,288 samples, 77.74%)</title><rect x="94.0" y="707.0" width="917.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.0" y="718.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda$97/1991432636.get</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$getAsync$6 (11,288 samples, 77.74%)</title><rect x="94.0" y="691.0" width="917.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.0" y="702.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$getAsync$6</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/DaoService.get (11,283 samples, 77.71%)</title><rect x="94.4" y="675.0" width="917.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.4" y="686.0">ru/mail/polis/service/s3ponia/DaoService.get</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1332005802.linkToTargetMethod (11 samples, 0.08%)</title><rect x="94.4" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2008432884.invoke (11 samples, 0.08%)</title><rect x="94.4" y="643.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1438640388.invokeStatic (11 samples, 0.08%)</title><rect x="94.4" y="627.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (11 samples, 0.08%)</title><rect x="94.4" y="611.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (11 samples, 0.08%)</title><rect x="94.4" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (11,272 samples, 77.63%)</title><rect x="95.3" y="659.0" width="916.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.3" y="670.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (9 samples, 0.06%)</title><rect x="95.3" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.3" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.05%)</title><rect x="95.5" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (331 samples, 2.28%)</title><rect x="96.1" y="643.0" width="26.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.1" y="654.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (322 samples, 2.22%)</title><rect x="96.1" y="627.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.1" y="638.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 0.06%)</title><rect x="96.1" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.1" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (9 samples, 0.06%)</title><rect x="96.1" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.1" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (9 samples, 0.06%)</title><rect x="96.1" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.06%)</title><rect x="96.1" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.06%)</title><rect x="96.1" y="547.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$150/693662188.compare (7 samples, 0.05%)</title><rect x="96.3" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (6 samples, 0.04%)</title><rect x="96.4" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.4" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (6 samples, 0.04%)</title><rect x="96.4" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.4" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.04%)</title><rect x="96.4" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.4" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (6 samples, 0.04%)</title><rect x="96.4" y="467.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.4" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.04%)</title><rect x="96.4" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell$$Lambda$272/1492739350.apply (5 samples, 0.03%)</title><rect x="96.5" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (5 samples, 0.03%)</title><rect x="96.5" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.5" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="96.5" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.03%)</title><rect x="96.5" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.5" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="96.5" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="96.5" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (313 samples, 2.16%)</title><rect x="96.9" y="611.0" width="25.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (313 samples, 2.16%)</title><rect x="96.9" y="595.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.9" y="606.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (311 samples, 2.14%)</title><rect x="97.0" y="579.0" width="25.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.0" y="590.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (311 samples, 2.14%)</title><rect x="97.0" y="563.0" width="25.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.0" y="574.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (311 samples, 2.14%)</title><rect x="97.0" y="547.0" width="25.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.0" y="558.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (311 samples, 2.14%)</title><rect x="97.0" y="531.0" width="25.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.0" y="542.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (308 samples, 2.12%)</title><rect x="97.0" y="515.0" width="25.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.0" y="526.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (308 samples, 2.12%)</title><rect x="97.0" y="499.0" width="25.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.0" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (308 samples, 2.12%)</title><rect x="97.0" y="483.0" width="25.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.0" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (308 samples, 2.12%)</title><rect x="97.0" y="467.0" width="25.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.0" y="478.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (308 samples, 2.12%)</title><rect x="97.0" y="451.0" width="25.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.0" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (307 samples, 2.11%)</title><rect x="97.1" y="435.0" width="25.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.1" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (104 samples, 0.72%)</title><rect x="97.3" y="419.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (101 samples, 0.70%)</title><rect x="97.5" y="403.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (101 samples, 0.70%)</title><rect x="97.5" y="387.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (62 samples, 0.43%)</title><rect x="97.8" y="371.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (50 samples, 0.34%)</title><rect x="98.3" y="355.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (50 samples, 0.34%)</title><rect x="98.3" y="339.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (50 samples, 0.34%)</title><rect x="98.3" y="323.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.3" y="334.0"></text>
</g>
<g>
<title>__pread64 (46 samples, 0.32%)</title><rect x="98.6" y="307.0" width="3.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="101.6" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.31%)</title><rect x="98.7" y="291.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="101.7" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 0.31%)</title><rect x="98.7" y="275.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.7" y="286.0"></text>
</g>
<g>
<title>ksys_pread64 (38 samples, 0.26%)</title><rect x="99.2" y="259.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="102.2" y="270.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.07%)</title><rect x="99.2" y="243.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="102.2" y="254.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.06%)</title><rect x="99.3" y="227.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.3" y="238.0"></text>
</g>
<g>
<title>vfs_read (27 samples, 0.19%)</title><rect x="100.1" y="243.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="103.1" y="254.0"></text>
</g>
<g>
<title>new_sync_read (20 samples, 0.14%)</title><rect x="100.3" y="227.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.3" y="238.0"></text>
</g>
<g>
<title>generic_file_read_iter (15 samples, 0.10%)</title><rect x="100.7" y="211.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="103.7" y="222.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.04%)</title><rect x="101.3" y="195.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="104.3" y="206.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.04%)</title><rect x="101.3" y="179.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.3" y="190.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.03%)</title><rect x="101.9" y="227.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="104.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (19 samples, 0.13%)</title><rect x="102.8" y="371.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.8" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.05%)</title><rect x="103.3" y="355.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="106.3" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.05%)</title><rect x="103.3" y="339.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="106.3" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (5 samples, 0.03%)</title><rect x="103.5" y="323.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="106.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.04%)</title><rect x="103.9" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (17 samples, 0.12%)</title><rect x="104.4" y="371.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (201 samples, 1.38%)</title><rect x="105.7" y="419.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (199 samples, 1.37%)</title><rect x="105.9" y="403.0" width="16.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (199 samples, 1.37%)</title><rect x="105.9" y="387.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.03%)</title><rect x="106.1" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.1" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.03%)</title><rect x="106.1" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.1" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.03%)</title><rect x="106.1" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (133 samples, 0.92%)</title><rect x="106.4" y="371.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (19 samples, 0.13%)</title><rect x="106.6" y="355.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.6" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (19 samples, 0.13%)</title><rect x="106.6" y="339.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (19 samples, 0.13%)</title><rect x="106.6" y="323.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (92 samples, 0.63%)</title><rect x="108.2" y="355.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (92 samples, 0.63%)</title><rect x="108.2" y="339.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (90 samples, 0.62%)</title><rect x="108.3" y="323.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.3" y="334.0"></text>
</g>
<g>
<title>__pread64 (82 samples, 0.56%)</title><rect x="108.7" y="307.0" width="6.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="111.7" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (77 samples, 0.53%)</title><rect x="109.1" y="291.0" width="6.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.1" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (77 samples, 0.53%)</title><rect x="109.1" y="275.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="112.1" y="286.0"></text>
</g>
<g>
<title>ksys_pread64 (61 samples, 0.42%)</title><rect x="110.4" y="259.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="113.4" y="270.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.07%)</title><rect x="110.4" y="243.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="113.4" y="254.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.07%)</title><rect x="110.4" y="227.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="113.4" y="238.0"></text>
</g>
<g>
<title>vfs_read (50 samples, 0.34%)</title><rect x="111.3" y="243.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="114.3" y="254.0"></text>
</g>
<g>
<title>new_sync_read (39 samples, 0.27%)</title><rect x="111.7" y="227.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="114.7" y="238.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (5 samples, 0.03%)</title><rect x="112.0" y="211.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="115.0" y="222.0"></text>
</g>
<g>
<title>generic_file_read_iter (31 samples, 0.21%)</title><rect x="112.4" y="211.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="115.4" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (11 samples, 0.08%)</title><rect x="113.1" y="195.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="116.1" y="206.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.05%)</title><rect x="113.5" y="179.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="116.5" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.05%)</title><rect x="113.5" y="163.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.5" y="174.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.05%)</title><rect x="114.0" y="195.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="117.0" y="206.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.04%)</title><rect x="114.1" y="179.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="117.1" y="190.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.03%)</title><rect x="114.6" y="195.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="117.6" y="206.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.04%)</title><rect x="114.9" y="227.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="117.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.05%)</title><rect x="115.6" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.6" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.05%)</title><rect x="115.6" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.6" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (7 samples, 0.05%)</title><rect x="115.6" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (7 samples, 0.05%)</title><rect x="115.6" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (12 samples, 0.08%)</title><rect x="116.2" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.2" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (12 samples, 0.08%)</title><rect x="116.2" y="339.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.2" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (12 samples, 0.08%)</title><rect x="116.2" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (12 samples, 0.08%)</title><rect x="116.2" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (35 samples, 0.24%)</title><rect x="117.2" y="371.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.2" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.06%)</title><rect x="118.6" y="355.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.6" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.05%)</title><rect x="118.6" y="339.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="121.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (9 samples, 0.06%)</title><rect x="119.3" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.3" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.05%)</title><rect x="119.5" y="339.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="122.5" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (7 samples, 0.05%)</title><rect x="119.5" y="323.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="122.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (25 samples, 0.17%)</title><rect x="120.0" y="371.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.0" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.05%)</title><rect x="120.8" y="355.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="123.8" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.05%)</title><rect x="120.8" y="339.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="123.8" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (6 samples, 0.04%)</title><rect x="120.9" y="323.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="123.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.06%)</title><rect x="121.4" y="355.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.4" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.06%)</title><rect x="121.4" y="339.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="124.4" y="350.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (8 samples, 0.06%)</title><rect x="121.4" y="323.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="124.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (8 samples, 0.06%)</title><rect x="122.3" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.cellsIterator (10,932 samples, 75.29%)</title><rect x="123.0" y="643.0" width="888.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.0" y="654.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.cellsIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (713 samples, 4.91%)</title><rect x="123.0" y="627.0" width="57.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.0" y="638.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (713 samples, 4.91%)</title><rect x="123.0" y="611.0" width="57.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.0" y="622.0">com/go..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (655 samples, 4.51%)</title><rect x="123.1" y="595.0" width="53.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.1" y="606.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (655 samples, 4.51%)</title><rect x="123.1" y="579.0" width="53.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.1" y="590.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (655 samples, 4.51%)</title><rect x="123.1" y="563.0" width="53.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.1" y="574.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (649 samples, 4.47%)</title><rect x="123.6" y="547.0" width="52.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.6" y="558.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (648 samples, 4.46%)</title><rect x="123.7" y="531.0" width="52.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.7" y="542.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (648 samples, 4.46%)</title><rect x="123.7" y="515.0" width="52.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.7" y="526.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (629 samples, 4.33%)</title><rect x="123.8" y="499.0" width="51.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.8" y="510.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (628 samples, 4.33%)</title><rect x="123.9" y="483.0" width="51.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.9" y="494.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (628 samples, 4.33%)</title><rect x="123.9" y="467.0" width="51.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.9" y="478.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (628 samples, 4.33%)</title><rect x="123.9" y="451.0" width="51.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="126.9" y="462.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (628 samples, 4.33%)</title><rect x="123.9" y="435.0" width="51.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.9" y="446.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (628 samples, 4.33%)</title><rect x="123.9" y="419.0" width="51.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.9" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (230 samples, 1.58%)</title><rect x="124.0" y="403.0" width="18.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.05%)</title><rect x="124.1" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.1" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.05%)</title><rect x="124.1" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.1" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.05%)</title><rect x="124.1" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.1" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.05%)</title><rect x="124.1" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (220 samples, 1.52%)</title><rect x="124.8" y="387.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (220 samples, 1.52%)</title><rect x="124.8" y="371.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.03%)</title><rect x="125.0" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.0" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.03%)</title><rect x="125.0" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.0" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.03%)</title><rect x="125.0" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (135 samples, 0.93%)</title><rect x="125.4" y="355.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (16 samples, 0.11%)</title><rect x="125.9" y="339.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (16 samples, 0.11%)</title><rect x="125.9" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (16 samples, 0.11%)</title><rect x="125.9" y="307.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (97 samples, 0.67%)</title><rect x="127.2" y="339.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (97 samples, 0.67%)</title><rect x="127.2" y="323.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (95 samples, 0.65%)</title><rect x="127.3" y="307.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.3" y="318.0"></text>
</g>
<g>
<title>__pread64 (85 samples, 0.59%)</title><rect x="127.8" y="291.0" width="6.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="130.8" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 0.55%)</title><rect x="128.2" y="275.0" width="6.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="131.2" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (80 samples, 0.55%)</title><rect x="128.2" y="259.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="131.2" y="270.0"></text>
</g>
<g>
<title>ksys_pread64 (71 samples, 0.49%)</title><rect x="129.0" y="243.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="132.0" y="254.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.03%)</title><rect x="129.0" y="227.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="132.0" y="238.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.03%)</title><rect x="129.3" y="227.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="132.3" y="238.0"></text>
</g>
<g>
<title>vfs_read (63 samples, 0.43%)</title><rect x="129.6" y="227.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="132.6" y="238.0"></text>
</g>
<g>
<title>fsnotify (6 samples, 0.04%)</title><rect x="130.0" y="211.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="133.0" y="222.0"></text>
</g>
<g>
<title>new_sync_read (42 samples, 0.29%)</title><rect x="130.5" y="211.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="133.5" y="222.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (4 samples, 0.03%)</title><rect x="130.5" y="195.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="133.5" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (34 samples, 0.23%)</title><rect x="130.8" y="195.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="133.8" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (13 samples, 0.09%)</title><rect x="131.4" y="179.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="134.4" y="190.0"></text>
</g>
<g>
<title>copyout (9 samples, 0.06%)</title><rect x="131.7" y="163.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="134.7" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_string (9 samples, 0.06%)</title><rect x="131.7" y="147.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="134.7" y="158.0"></text>
</g>
<g>
<title>pagecache_get_page (11 samples, 0.08%)</title><rect x="132.6" y="179.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="135.6" y="190.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.08%)</title><rect x="132.6" y="163.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="135.6" y="174.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.03%)</title><rect x="133.1" y="147.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="136.1" y="158.0"></text>
</g>
<g>
<title>iov_iter_init (4 samples, 0.03%)</title><rect x="133.6" y="195.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="136.6" y="206.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.05%)</title><rect x="134.2" y="211.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="137.2" y="222.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.05%)</title><rect x="134.2" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="137.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.05%)</title><rect x="135.1" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.1" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.05%)</title><rect x="135.1" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.1" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (7 samples, 0.05%)</title><rect x="135.1" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (7 samples, 0.05%)</title><rect x="135.1" y="291.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (9 samples, 0.06%)</title><rect x="135.6" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.6" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.06%)</title><rect x="135.6" y="323.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (9 samples, 0.06%)</title><rect x="135.6" y="307.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (9 samples, 0.06%)</title><rect x="135.6" y="291.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (46 samples, 0.32%)</title><rect x="136.4" y="355.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.4" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.10%)</title><rect x="137.8" y="339.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="140.8" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (14 samples, 0.10%)</title><rect x="137.8" y="323.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="140.8" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (7 samples, 0.05%)</title><rect x="138.4" y="307.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="141.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (14 samples, 0.10%)</title><rect x="139.0" y="339.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.0" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.07%)</title><rect x="139.3" y="323.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="142.3" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (10 samples, 0.07%)</title><rect x="139.3" y="307.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="142.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (32 samples, 0.22%)</title><rect x="140.1" y="355.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.1" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.08%)</title><rect x="141.3" y="339.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="144.3" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.08%)</title><rect x="141.3" y="323.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="144.3" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (7 samples, 0.05%)</title><rect x="141.4" y="307.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="144.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.04%)</title><rect x="142.2" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.2" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.04%)</title><rect x="142.2" y="323.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="145.2" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (5 samples, 0.03%)</title><rect x="142.3" y="307.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="145.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (396 samples, 2.73%)</title><rect x="142.7" y="403.0" width="32.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.7" y="414.0">ru..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (393 samples, 2.71%)</title><rect x="143.0" y="387.0" width="31.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.0" y="398.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (393 samples, 2.71%)</title><rect x="143.0" y="371.0" width="31.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.0" y="382.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.05%)</title><rect x="143.0" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.0" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.05%)</title><rect x="143.0" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.0" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.03%)</title><rect x="143.1" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.1" y="334.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.03%)</title><rect x="143.1" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.03%)</title><rect x="143.1" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (13 samples, 0.09%)</title><rect x="143.5" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.5" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (13 samples, 0.09%)</title><rect x="143.5" y="339.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.5" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (13 samples, 0.09%)</title><rect x="143.5" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.5" y="334.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.03%)</title><rect x="144.3" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.3" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.03%)</title><rect x="144.3" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (230 samples, 1.58%)</title><rect x="144.6" y="355.0" width="18.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.6" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (22 samples, 0.15%)</title><rect x="144.8" y="339.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (22 samples, 0.15%)</title><rect x="144.8" y="323.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (22 samples, 0.15%)</title><rect x="144.8" y="307.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (180 samples, 1.24%)</title><rect x="146.6" y="339.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (180 samples, 1.24%)</title><rect x="146.6" y="323.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (172 samples, 1.18%)</title><rect x="147.3" y="307.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.3" y="318.0"></text>
</g>
<g>
<title>__pread64 (160 samples, 1.10%)</title><rect x="147.5" y="291.0" width="13.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="150.5" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (147 samples, 1.01%)</title><rect x="148.6" y="275.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="151.6" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (147 samples, 1.01%)</title><rect x="148.6" y="259.0" width="11.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="151.6" y="270.0"></text>
</g>
<g>
<title>ksys_pread64 (133 samples, 0.92%)</title><rect x="149.7" y="243.0" width="10.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.7" y="254.0"></text>
</g>
<g>
<title>__fget_light (22 samples, 0.15%)</title><rect x="149.8" y="227.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.8" y="238.0"></text>
</g>
<g>
<title>__fget (22 samples, 0.15%)</title><rect x="149.8" y="211.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="152.8" y="222.0"></text>
</g>
<g>
<title>vfs_read (108 samples, 0.74%)</title><rect x="151.7" y="227.0" width="8.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="154.7" y="238.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.05%)</title><rect x="152.4" y="211.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="155.4" y="222.0"></text>
</g>
<g>
<title>new_sync_read (76 samples, 0.52%)</title><rect x="152.9" y="211.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="155.9" y="222.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (5 samples, 0.03%)</title><rect x="153.3" y="195.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="156.3" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (66 samples, 0.45%)</title><rect x="153.7" y="195.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="156.7" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (18 samples, 0.12%)</title><rect x="155.4" y="179.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="158.4" y="190.0"></text>
</g>
<g>
<title>copyout (11 samples, 0.08%)</title><rect x="156.0" y="163.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="159.0" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_string (10 samples, 0.07%)</title><rect x="156.0" y="147.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="159.0" y="158.0"></text>
</g>
<g>
<title>pagecache_get_page (23 samples, 0.16%)</title><rect x="156.8" y="179.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="159.8" y="190.0"></text>
</g>
<g>
<title>find_get_entry (23 samples, 0.16%)</title><rect x="156.8" y="163.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="159.8" y="174.0"></text>
</g>
<g>
<title>xas_load (9 samples, 0.06%)</title><rect x="158.0" y="147.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="161.0" y="158.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.03%)</title><rect x="158.7" y="179.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="161.7" y="190.0"></text>
</g>
<g>
<title>security_file_permission (16 samples, 0.11%)</title><rect x="159.2" y="211.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="162.2" y="222.0"></text>
</g>
<g>
<title>selinux_file_permission (9 samples, 0.06%)</title><rect x="159.8" y="195.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="162.8" y="206.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.03%)</title><rect x="160.5" y="291.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="163.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.06%)</title><rect x="161.2" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.2" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.06%)</title><rect x="161.2" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="164.2" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.06%)</title><rect x="161.2" y="307.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (8 samples, 0.06%)</title><rect x="161.2" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (17 samples, 0.12%)</title><rect x="161.9" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (17 samples, 0.12%)</title><rect x="161.9" y="323.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.9" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (17 samples, 0.12%)</title><rect x="161.9" y="307.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (17 samples, 0.12%)</title><rect x="161.9" y="291.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="164.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (104 samples, 0.72%)</title><rect x="163.3" y="355.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.3" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (42 samples, 0.29%)</title><rect x="166.4" y="339.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="169.4" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (38 samples, 0.26%)</title><rect x="166.5" y="323.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="169.5" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (28 samples, 0.19%)</title><rect x="167.1" y="307.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="170.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (23 samples, 0.16%)</title><rect x="169.9" y="339.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.9" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.10%)</title><rect x="170.5" y="323.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="173.5" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (14 samples, 0.10%)</title><rect x="170.6" y="307.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="173.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (39 samples, 0.27%)</title><rect x="171.7" y="355.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.7" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.08%)</title><rect x="173.2" y="339.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="176.2" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.05%)</title><rect x="173.3" y="323.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="176.3" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (6 samples, 0.04%)</title><rect x="173.3" y="307.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="176.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 0.07%)</title><rect x="174.1" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.1" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.07%)</title><rect x="174.1" y="323.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="177.1" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (10 samples, 0.07%)</title><rect x="174.1" y="307.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="177.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$150/693662188.compare (18 samples, 0.12%)</title><rect x="174.9" y="499.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (15 samples, 0.10%)</title><rect x="175.1" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.1" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (15 samples, 0.10%)</title><rect x="175.1" y="467.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.1" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.10%)</title><rect x="175.1" y="451.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.1" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (15 samples, 0.10%)</title><rect x="175.1" y="435.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.1" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.10%)</title><rect x="175.1" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.04%)</title><rect x="175.1" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.04%)</title><rect x="175.1" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.1" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.04%)</title><rect x="175.1" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell$$Lambda$272/1492739350.apply (8 samples, 0.06%)</title><rect x="175.7" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (8 samples, 0.06%)</title><rect x="175.7" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="176.0" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.0" y="382.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (56 samples, 0.39%)</title><rect x="176.4" y="595.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (56 samples, 0.39%)</title><rect x="176.4" y="579.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (49 samples, 0.34%)</title><rect x="176.9" y="563.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (4 samples, 0.03%)</title><rect x="177.0" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (29 samples, 0.20%)</title><rect x="177.3" y="547.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$173/990926064.getAsBoolean (25 samples, 0.17%)</title><rect x="177.7" y="531.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (25 samples, 0.17%)</title><rect x="177.7" y="515.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (25 samples, 0.17%)</title><rect x="177.7" y="499.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (22 samples, 0.15%)</title><rect x="177.9" y="483.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (6 samples, 0.04%)</title><rect x="178.1" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/242355057.accept (6 samples, 0.04%)</title><rect x="178.1" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="178.1" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="178.1" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="178.1" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="178.1" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="178.1" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (13 samples, 0.09%)</title><rect x="178.6" y="467.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (6 samples, 0.04%)</title><rect x="179.0" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/242355057.accept (6 samples, 0.04%)</title><rect x="179.0" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="179.0" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="179.0" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="179.0" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="179.0" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="179.0" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable$$Lambda$117/1151899617.apply (5 samples, 0.03%)</title><rect x="179.0" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (5 samples, 0.03%)</title><rect x="179.7" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (10 samples, 0.07%)</title><rect x="180.1" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.06%)</title><rect x="180.1" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (15 samples, 0.10%)</title><rect x="181.1" y="627.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.05%)</title><rect x="181.6" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.03%)</title><rect x="181.8" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.8" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (9,620 samples, 66.25%)</title><rect x="182.3" y="627.0" width="781.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.3" y="638.0">java/util/Collections$UnmodifiableMap.forEach</text>
</g>
<g>
<title>java/util/TreeMap.forEach (9,604 samples, 66.14%)</title><rect x="183.6" y="611.0" width="780.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.6" y="622.0">java/util/TreeMap.forEach</text>
</g>
<g>
<title>java/util/TreeMap.successor (10 samples, 0.07%)</title><rect x="183.6" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$137/821447616.accept (9,594 samples, 66.07%)</title><rect x="184.4" y="595.0" width="779.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.4" y="606.0">ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$137/821447616.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$cellsIterator$2 (9,594 samples, 66.07%)</title><rect x="184.4" y="579.0" width="779.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.4" y="590.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$cellsIterator$2</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.iterator (9,594 samples, 66.07%)</title><rect x="184.4" y="563.0" width="779.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.4" y="574.0">ru/mail/polis/dao/s3ponia/DiskTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt; (9,594 samples, 66.07%)</title><rect x="184.4" y="547.0" width="779.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.4" y="558.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex (9,593 samples, 66.07%)</title><rect x="184.5" y="531.0" width="779.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.5" y="542.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (82 samples, 0.56%)</title><rect x="185.5" y="515.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.5" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (75 samples, 0.52%)</title><rect x="186.0" y="499.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (9,499 samples, 65.42%)</title><rect x="192.1" y="515.0" width="772.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.1" y="526.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (9,499 samples, 65.42%)</title><rect x="192.1" y="499.0" width="772.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.1" y="510.0">ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (9,489 samples, 65.35%)</title><rect x="192.9" y="483.0" width="771.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.9" y="494.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (3,777 samples, 26.01%)</title><rect x="196.3" y="467.0" width="307.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.3" y="478.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyC..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (90 samples, 0.62%)</title><rect x="198.1" y="451.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.1" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.04%)</title><rect x="198.1" y="435.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="201.1" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="198.1" y="419.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="201.1" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="198.1" y="403.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="201.1" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="198.1" y="387.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="201.1" y="398.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="198.1" y="371.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="201.1" y="382.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="198.1" y="355.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="201.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (84 samples, 0.58%)</title><rect x="198.5" y="435.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (82 samples, 0.56%)</title><rect x="198.7" y="419.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.7" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (82 samples, 0.56%)</title><rect x="198.7" y="403.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (39 samples, 0.27%)</title><rect x="198.7" y="387.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (39 samples, 0.27%)</title><rect x="198.7" y="371.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.7" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.06%)</title><rect x="201.1" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (43 samples, 0.30%)</title><rect x="201.9" y="387.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (43 samples, 0.30%)</title><rect x="201.9" y="371.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.9" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (9 samples, 0.06%)</title><rect x="204.5" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,666 samples, 25.25%)</title><rect x="205.4" y="451.0" width="297.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.4" y="462.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,666 samples, 25.25%)</title><rect x="205.4" y="435.0" width="297.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.4" y="446.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (34 samples, 0.23%)</title><rect x="205.4" y="419.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.4" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (34 samples, 0.23%)</title><rect x="205.4" y="403.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.4" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (14 samples, 0.10%)</title><rect x="207.0" y="387.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.0" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (14 samples, 0.10%)</title><rect x="207.0" y="371.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (14 samples, 0.10%)</title><rect x="207.0" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (121 samples, 0.83%)</title><rect x="208.1" y="419.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.1" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (121 samples, 0.83%)</title><rect x="208.1" y="403.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.1" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (121 samples, 0.83%)</title><rect x="208.1" y="387.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.1" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (23 samples, 0.16%)</title><rect x="211.6" y="371.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="214.6" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (21 samples, 0.14%)</title><rect x="211.8" y="355.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="214.8" y="366.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (54 samples, 0.37%)</title><rect x="213.6" y="371.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (54 samples, 0.37%)</title><rect x="213.6" y="355.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2,390 samples, 16.46%)</title><rect x="218.0" y="419.0" width="194.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.0" y="430.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.10%)</title><rect x="221.9" y="403.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="224.9" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (14 samples, 0.10%)</title><rect x="222.0" y="387.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="225.0" y="398.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (6 samples, 0.04%)</title><rect x="223.2" y="403.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="226.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (303 samples, 2.09%)</title><rect x="223.7" y="403.0" width="24.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.7" y="414.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (303 samples, 2.09%)</title><rect x="223.7" y="387.0" width="24.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="226.7" y="398.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.get (303 samples, 2.09%)</title><rect x="223.7" y="371.0" width="24.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.7" y="382.0">j..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,765 samples, 12.16%)</title><rect x="248.4" y="403.0" width="143.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.4" y="414.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,765 samples, 12.16%)</title><rect x="248.4" y="387.0" width="143.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.4" y="398.0">sun/nio/ch/FileDis..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,702 samples, 11.72%)</title><rect x="253.5" y="371.0" width="138.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.5" y="382.0">sun/nio/ch/FileDi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (21 samples, 0.14%)</title><rect x="259.8" y="355.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="262.8" y="366.0"></text>
</g>
<g>
<title>fdval (4 samples, 0.03%)</title><rect x="261.2" y="339.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="264.2" y="350.0"></text>
</g>
<g>
<title>__pread64 (1,550 samples, 10.67%)</title><rect x="261.5" y="355.0" width="126.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="264.5" y="366.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,446 samples, 9.96%)</title><rect x="270.0" y="339.0" width="117.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="273.0" y="350.0">entry_SYSCALL_..</text>
</g>
<g>
<title>do_syscall_64 (1,446 samples, 9.96%)</title><rect x="270.0" y="323.0" width="117.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="273.0" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (24 samples, 0.17%)</title><rect x="284.8" y="307.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="287.8" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (1,239 samples, 8.53%)</title><rect x="286.8" y="307.0" width="100.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="289.8" y="318.0">ksys_pread64</text>
</g>
<g>
<title>__fget_light (191 samples, 1.32%)</title><rect x="288.0" y="291.0" width="15.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="291.0" y="302.0"></text>
</g>
<g>
<title>__fget (170 samples, 1.17%)</title><rect x="289.7" y="275.0" width="13.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="292.7" y="286.0"></text>
</g>
<g>
<title>fput_many (41 samples, 0.28%)</title><rect x="303.7" y="291.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.7" y="302.0"></text>
</g>
<g>
<title>vfs_read (990 samples, 6.82%)</title><rect x="307.0" y="291.0" width="80.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="310.0" y="302.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (11 samples, 0.08%)</title><rect x="309.3" y="275.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="312.3" y="286.0"></text>
</g>
<g>
<title>__vfs_read (26 samples, 0.18%)</title><rect x="310.2" y="275.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.2" y="286.0"></text>
</g>
<g>
<title>fsnotify (68 samples, 0.47%)</title><rect x="312.3" y="275.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="315.3" y="286.0"></text>
</g>
<g>
<title>new_sync_read (714 samples, 4.92%)</title><rect x="317.8" y="275.0" width="58.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="320.8" y="286.0">new_sy..</text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (66 samples, 0.45%)</title><rect x="322.7" y="259.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="325.7" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (577 samples, 3.97%)</title><rect x="328.1" y="259.0" width="46.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="331.1" y="270.0">gene..</text>
</g>
<g>
<title>copy_page_to_iter (196 samples, 1.35%)</title><rect x="342.5" y="243.0" width="16.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="345.5" y="254.0"></text>
</g>
<g>
<title>copyout (156 samples, 1.07%)</title><rect x="345.8" y="227.0" width="12.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="348.8" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_string (149 samples, 1.03%)</title><rect x="346.4" y="211.0" width="12.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="349.4" y="222.0"></text>
</g>
<g>
<title>mark_page_accessed (10 samples, 0.07%)</title><rect x="358.5" y="243.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="361.5" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (133 samples, 0.92%)</title><rect x="359.3" y="243.0" width="10.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="362.3" y="254.0"></text>
</g>
<g>
<title>find_get_entry (123 samples, 0.85%)</title><rect x="360.1" y="227.0" width="10.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="363.1" y="238.0"></text>
</g>
<g>
<title>xas_load (50 samples, 0.34%)</title><rect x="366.0" y="211.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="369.0" y="222.0"></text>
</g>
<g>
<title>xas_start (18 samples, 0.12%)</title><rect x="368.6" y="195.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="371.6" y="206.0"></text>
</g>
<g>
<title>touch_atime (60 samples, 0.41%)</title><rect x="370.1" y="243.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="373.1" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (14 samples, 0.10%)</title><rect x="373.8" y="227.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="376.8" y="238.0"></text>
</g>
<g>
<title>iov_iter_init (11 samples, 0.08%)</title><rect x="375.0" y="259.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="378.0" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="375.9" y="275.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="378.9" y="286.0"></text>
</g>
<g>
<title>security_file_permission (138 samples, 0.95%)</title><rect x="376.3" y="275.0" width="11.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="379.3" y="286.0"></text>
</g>
<g>
<title>__fsnotify_parent (20 samples, 0.14%)</title><rect x="378.4" y="259.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="381.4" y="270.0"></text>
</g>
<g>
<title>selinux_file_permission (91 samples, 0.63%)</title><rect x="380.1" y="259.0" width="7.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="383.1" y="270.0"></text>
</g>
<g>
<title>__inode_security_revalidate (8 samples, 0.06%)</title><rect x="386.8" y="243.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="389.8" y="254.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.03%)</title><rect x="387.0" y="227.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.0" y="238.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.03%)</title><rect x="387.1" y="211.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="390.1" y="222.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (22 samples, 0.15%)</title><rect x="387.5" y="355.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="390.5" y="366.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (9 samples, 0.06%)</title><rect x="389.3" y="355.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="392.3" y="366.0"></text>
</g>
<g>
<title>convertReturnVal (11 samples, 0.08%)</title><rect x="390.0" y="355.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="393.0" y="366.0"></text>
</g>
<g>
<title>fdval (11 samples, 0.08%)</title><rect x="390.9" y="355.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="393.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (138 samples, 0.95%)</title><rect x="391.8" y="403.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.8" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (138 samples, 0.95%)</title><rect x="391.8" y="387.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.8" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (138 samples, 0.95%)</title><rect x="391.8" y="371.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (125 samples, 0.86%)</title><rect x="392.8" y="355.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (113 samples, 0.78%)</title><rect x="403.0" y="403.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.0" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (113 samples, 0.78%)</title><rect x="403.0" y="387.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.0" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (113 samples, 0.78%)</title><rect x="403.0" y="371.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (113 samples, 0.78%)</title><rect x="403.0" y="355.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.0" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="410.0" y="339.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="413.0" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="410.3" y="339.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="413.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.12%)</title><rect x="410.6" y="339.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (706 samples, 4.86%)</title><rect x="412.2" y="419.0" width="57.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.2" y="430.0">sun/ni..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (195 samples, 1.34%)</title><rect x="440.0" y="403.0" width="15.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="443.0" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (163 samples, 1.12%)</title><rect x="440.3" y="387.0" width="13.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="443.3" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (101 samples, 0.70%)</title><rect x="443.9" y="371.0" width="8.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="446.9" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (5 samples, 0.03%)</title><rect x="451.7" y="355.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="454.7" y="366.0"></text>
</g>
<g>
<title>SpinPause (18 samples, 0.12%)</title><rect x="452.1" y="371.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="455.1" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (24 samples, 0.17%)</title><rect x="453.6" y="387.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="456.6" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (17 samples, 0.12%)</title><rect x="453.8" y="371.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="456.8" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (4 samples, 0.03%)</title><rect x="455.2" y="371.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="458.2" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (4 samples, 0.03%)</title><rect x="455.5" y="387.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="458.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (168 samples, 1.16%)</title><rect x="455.9" y="403.0" width="13.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.9" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (114 samples, 0.79%)</title><rect x="460.1" y="387.0" width="9.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="463.1" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (108 samples, 0.74%)</title><rect x="460.4" y="371.0" width="8.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="463.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (415 samples, 2.86%)</title><rect x="469.6" y="419.0" width="33.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.6" y="430.0">su..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (156 samples, 1.07%)</title><rect x="484.8" y="403.0" width="12.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="487.8" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (132 samples, 0.91%)</title><rect x="485.3" y="387.0" width="10.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="488.3" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (91 samples, 0.63%)</title><rect x="487.2" y="371.0" width="7.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="490.2" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (4 samples, 0.03%)</title><rect x="494.3" y="355.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="497.3" y="366.0"></text>
</g>
<g>
<title>SpinPause (17 samples, 0.12%)</title><rect x="494.6" y="371.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="497.6" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.11%)</title><rect x="496.0" y="387.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="499.0" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (8 samples, 0.06%)</title><rect x="496.3" y="371.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="499.3" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (4 samples, 0.03%)</title><rect x="497.0" y="371.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="500.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (71 samples, 0.49%)</title><rect x="497.5" y="403.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.5" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (70 samples, 0.48%)</title><rect x="497.6" y="387.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="500.6" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (60 samples, 0.41%)</title><rect x="498.3" y="371.0" width="4.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="501.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (5,670 samples, 39.05%)</title><rect x="503.3" y="467.0" width="460.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.3" y="478.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.10%)</title><rect x="507.8" y="451.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.8" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.05%)</title><rect x="508.2" y="435.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="511.2" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.05%)</title><rect x="508.2" y="419.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="511.2" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (7 samples, 0.05%)</title><rect x="508.2" y="403.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="511.2" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.05%)</title><rect x="508.2" y="387.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="511.2" y="398.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (4 samples, 0.03%)</title><rect x="508.5" y="371.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="511.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5,598 samples, 38.55%)</title><rect x="509.1" y="451.0" width="455.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.1" y="462.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5,591 samples, 38.51%)</title><rect x="509.7" y="435.0" width="454.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.7" y="446.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (54 samples, 0.37%)</title><rect x="509.7" y="419.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.7" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (54 samples, 0.37%)</title><rect x="509.7" y="403.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.7" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (29 samples, 0.20%)</title><rect x="511.7" y="387.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.7" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (29 samples, 0.20%)</title><rect x="511.7" y="371.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (29 samples, 0.20%)</title><rect x="511.7" y="355.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (201 samples, 1.38%)</title><rect x="514.1" y="419.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.1" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (201 samples, 1.38%)</title><rect x="514.1" y="403.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.1" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (201 samples, 1.38%)</title><rect x="514.1" y="387.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.1" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.15%)</title><rect x="519.1" y="371.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="522.1" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (18 samples, 0.12%)</title><rect x="519.1" y="355.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="522.1" y="366.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (6 samples, 0.04%)</title><rect x="520.0" y="339.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="523.0" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (115 samples, 0.79%)</title><rect x="521.1" y="371.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (115 samples, 0.79%)</title><rect x="521.1" y="355.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3,589 samples, 24.72%)</title><rect x="530.4" y="419.0" width="291.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.4" y="430.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.15%)</title><rect x="536.5" y="403.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="539.5" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (18 samples, 0.12%)</title><rect x="536.7" y="387.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="539.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (411 samples, 2.83%)</title><rect x="538.7" y="403.0" width="33.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.7" y="414.0">ja..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (411 samples, 2.83%)</title><rect x="538.7" y="387.0" width="33.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.7" y="398.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.get (411 samples, 2.83%)</title><rect x="538.7" y="371.0" width="33.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.7" y="382.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2,667 samples, 18.37%)</title><rect x="572.1" y="403.0" width="216.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.1" y="414.0">sun/nio/ch/IOUtil.readIntoNa..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2,667 samples, 18.37%)</title><rect x="572.1" y="387.0" width="216.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.1" y="398.0">sun/nio/ch/FileDispatcherImp..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2,574 samples, 17.73%)</title><rect x="579.7" y="371.0" width="209.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.7" y="382.0">sun/nio/ch/FileDispatcherIm..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (35 samples, 0.24%)</title><rect x="587.8" y="355.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="590.8" y="366.0"></text>
</g>
<g>
<title>fdval (6 samples, 0.04%)</title><rect x="590.2" y="339.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="593.2" y="350.0"></text>
</g>
<g>
<title>__pread64 (2,367 samples, 16.30%)</title><rect x="590.7" y="355.0" width="192.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="593.7" y="366.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,228 samples, 15.34%)</title><rect x="601.9" y="339.0" width="181.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="604.9" y="350.0">entry_SYSCALL_64_after_..</text>
</g>
<g>
<title>do_syscall_64 (2,228 samples, 15.34%)</title><rect x="601.9" y="323.0" width="181.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="604.9" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (37 samples, 0.25%)</title><rect x="622.4" y="307.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="625.4" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (1,937 samples, 13.34%)</title><rect x="625.5" y="307.0" width="157.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="628.5" y="318.0">ksys_pread64</text>
</g>
<g>
<title>__fget_light (301 samples, 2.07%)</title><rect x="627.5" y="291.0" width="24.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="630.5" y="302.0">_..</text>
</g>
<g>
<title>__fget (274 samples, 1.89%)</title><rect x="629.7" y="275.0" width="22.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="632.7" y="286.0">_..</text>
</g>
<g>
<title>fput_many (63 samples, 0.43%)</title><rect x="652.2" y="291.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="655.2" y="302.0"></text>
</g>
<g>
<title>vfs_read (1,546 samples, 10.65%)</title><rect x="657.3" y="291.0" width="125.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="660.3" y="302.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (37 samples, 0.25%)</title><rect x="661.4" y="275.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="664.4" y="286.0"></text>
</g>
<g>
<title>__vfs_read (35 samples, 0.24%)</title><rect x="664.4" y="275.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="667.4" y="286.0"></text>
</g>
<g>
<title>fsnotify (120 samples, 0.83%)</title><rect x="667.3" y="275.0" width="9.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="670.3" y="286.0"></text>
</g>
<g>
<title>new_sync_read (1,069 samples, 7.36%)</title><rect x="677.0" y="275.0" width="86.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="680.0" y="286.0">new_sync_r..</text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (108 samples, 0.74%)</title><rect x="682.2" y="259.0" width="8.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="685.2" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (875 samples, 6.03%)</title><rect x="691.0" y="259.0" width="71.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="694.0" y="270.0">generic_..</text>
</g>
<g>
<title>copy_page_to_iter (300 samples, 2.07%)</title><rect x="709.0" y="243.0" width="24.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="712.0" y="254.0">c..</text>
</g>
<g>
<title>_cond_resched (10 samples, 0.07%)</title><rect x="714.8" y="227.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="717.8" y="238.0"></text>
</g>
<g>
<title>copyout (218 samples, 1.50%)</title><rect x="715.6" y="227.0" width="17.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="718.6" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_string (211 samples, 1.45%)</title><rect x="716.2" y="211.0" width="17.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="719.2" y="222.0"></text>
</g>
<g>
<title>mark_page_accessed (15 samples, 0.10%)</title><rect x="733.4" y="243.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="736.4" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (252 samples, 1.74%)</title><rect x="734.6" y="243.0" width="20.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="737.6" y="254.0"></text>
</g>
<g>
<title>find_get_entry (236 samples, 1.63%)</title><rect x="735.9" y="227.0" width="19.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="738.9" y="238.0"></text>
</g>
<g>
<title>xas_load (79 samples, 0.54%)</title><rect x="748.6" y="211.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="751.6" y="222.0"></text>
</g>
<g>
<title>xas_start (29 samples, 0.20%)</title><rect x="752.7" y="195.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.7" y="206.0"></text>
</g>
<g>
<title>touch_atime (87 samples, 0.60%)</title><rect x="755.1" y="243.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="758.1" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (19 samples, 0.13%)</title><rect x="760.6" y="227.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="763.6" y="238.0"></text>
</g>
<g>
<title>iov_iter_init (22 samples, 0.15%)</title><rect x="762.1" y="259.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="765.1" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="763.9" y="275.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="766.9" y="286.0"></text>
</g>
<g>
<title>security_file_permission (229 samples, 1.58%)</title><rect x="764.3" y="275.0" width="18.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="767.3" y="286.0"></text>
</g>
<g>
<title>__fsnotify_parent (29 samples, 0.20%)</title><rect x="767.1" y="259.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="770.1" y="270.0"></text>
</g>
<g>
<title>selinux_file_permission (165 samples, 1.14%)</title><rect x="769.5" y="259.0" width="13.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="772.5" y="270.0"></text>
</g>
<g>
<title>__inode_security_revalidate (27 samples, 0.19%)</title><rect x="780.5" y="243.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="783.5" y="254.0"></text>
</g>
<g>
<title>_cond_resched (6 samples, 0.04%)</title><rect x="782.2" y="227.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="785.2" y="238.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.03%)</title><rect x="782.4" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="785.4" y="222.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (26 samples, 0.18%)</title><rect x="783.0" y="355.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="786.0" y="366.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (16 samples, 0.11%)</title><rect x="785.1" y="355.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="788.1" y="366.0"></text>
</g>
<g>
<title>convertReturnVal (21 samples, 0.14%)</title><rect x="786.4" y="355.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="789.4" y="366.0"></text>
</g>
<g>
<title>fdval (9 samples, 0.06%)</title><rect x="788.1" y="355.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="791.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (191 samples, 1.32%)</title><rect x="788.9" y="403.0" width="15.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.9" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (191 samples, 1.32%)</title><rect x="788.9" y="387.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.9" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (191 samples, 1.32%)</title><rect x="788.9" y="371.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (181 samples, 1.25%)</title><rect x="789.7" y="355.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (217 samples, 1.49%)</title><rect x="804.4" y="403.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (217 samples, 1.49%)</title><rect x="804.4" y="387.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.4" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (217 samples, 1.49%)</title><rect x="804.4" y="371.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (217 samples, 1.49%)</title><rect x="804.4" y="355.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.4" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="816.6" y="339.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="819.6" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="817.3" y="339.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="820.3" y="350.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (10 samples, 0.07%)</title><rect x="818.0" y="339.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="821.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 0.22%)</title><rect x="818.9" y="339.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.9" y="350.0"></text>
</g>
<g>
<title>unsafe_arraycopy (7 samples, 0.05%)</title><rect x="821.5" y="339.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="824.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1,128 samples, 7.77%)</title><rect x="822.1" y="419.0" width="91.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.1" y="430.0">sun/nio/ch/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (293 samples, 2.02%)</title><rect x="871.5" y="403.0" width="23.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="874.5" y="414.0">S..</text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (10 samples, 0.07%)</title><rect x="871.7" y="387.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="874.7" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (247 samples, 1.70%)</title><rect x="872.5" y="387.0" width="20.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="875.5" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (167 samples, 1.15%)</title><rect x="876.6" y="371.0" width="13.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="879.6" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (4 samples, 0.03%)</title><rect x="889.9" y="355.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="892.9" y="366.0"></text>
</g>
<g>
<title>SpinPause (28 samples, 0.19%)</title><rect x="890.2" y="371.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="893.2" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (29 samples, 0.20%)</title><rect x="892.6" y="387.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="895.6" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (20 samples, 0.14%)</title><rect x="893.0" y="371.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="896.0" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (4 samples, 0.03%)</title><rect x="894.6" y="371.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="897.6" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (5 samples, 0.03%)</title><rect x="894.9" y="387.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="897.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (226 samples, 1.56%)</title><rect x="895.4" y="403.0" width="18.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.4" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (140 samples, 0.96%)</title><rect x="902.0" y="387.0" width="11.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="905.0" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (139 samples, 0.96%)</title><rect x="902.0" y="371.0" width="11.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="905.0" y="382.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (5 samples, 0.03%)</title><rect x="913.4" y="387.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="916.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (619 samples, 4.26%)</title><rect x="913.8" y="419.0" width="50.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.8" y="430.0">sun/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (263 samples, 1.81%)</title><rect x="935.1" y="403.0" width="21.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="938.1" y="414.0">S..</text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (7 samples, 0.05%)</title><rect x="935.3" y="387.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="938.3" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (232 samples, 1.60%)</title><rect x="935.9" y="387.0" width="18.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="938.9" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (142 samples, 0.98%)</title><rect x="940.5" y="371.0" width="11.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="943.5" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (8 samples, 0.06%)</title><rect x="951.3" y="355.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="954.3" y="366.0"></text>
</g>
<g>
<title>SpinPause (33 samples, 0.23%)</title><rect x="952.0" y="371.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="955.0" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.11%)</title><rect x="954.7" y="387.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="957.7" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (9 samples, 0.06%)</title><rect x="954.9" y="371.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="957.9" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (5 samples, 0.03%)</title><rect x="955.6" y="371.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="958.6" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (5 samples, 0.03%)</title><rect x="956.0" y="387.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="959.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (94 samples, 0.65%)</title><rect x="956.4" y="403.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.4" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (93 samples, 0.64%)</title><rect x="956.5" y="387.0" width="7.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="959.5" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (85 samples, 0.59%)</title><rect x="957.0" y="371.0" width="6.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="960.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (17 samples, 0.12%)</title><rect x="964.1" y="627.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (17 samples, 0.12%)</title><rect x="964.1" y="611.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (9 samples, 0.06%)</title><rect x="964.7" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.03%)</title><rect x="964.7" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.7" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.03%)</title><rect x="964.7" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (5 samples, 0.03%)</title><rect x="965.1" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="968.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (5 samples, 0.03%)</title><rect x="965.1" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (359 samples, 2.47%)</title><rect x="965.5" y="627.0" width="29.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.5" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (359 samples, 2.47%)</title><rect x="965.5" y="611.0" width="29.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.5" y="622.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (357 samples, 2.46%)</title><rect x="965.7" y="595.0" width="29.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.7" y="606.0">co..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (19 samples, 0.13%)</title><rect x="965.7" y="579.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.7" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (19 samples, 0.13%)</title><rect x="965.7" y="563.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.7" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (19 samples, 0.13%)</title><rect x="965.7" y="547.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="968.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.13%)</title><rect x="965.7" y="531.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.13%)</title><rect x="965.7" y="515.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$150/693662188.compare (18 samples, 0.12%)</title><rect x="965.8" y="499.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (17 samples, 0.12%)</title><rect x="965.9" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.9" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (17 samples, 0.12%)</title><rect x="965.9" y="467.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.9" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (17 samples, 0.12%)</title><rect x="965.9" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (17 samples, 0.12%)</title><rect x="965.9" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (17 samples, 0.12%)</title><rect x="965.9" y="419.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell$$Lambda$272/1492739350.apply (12 samples, 0.08%)</title><rect x="966.3" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Table$Cell.getKey (12 samples, 0.08%)</title><rect x="966.3" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.08%)</title><rect x="966.3" y="371.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (12 samples, 0.08%)</title><rect x="966.3" y="355.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.08%)</title><rect x="966.3" y="339.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.08%)</title><rect x="966.3" y="323.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.3" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="966.5" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.5" y="318.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.03%)</title><rect x="966.9" y="291.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="969.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (338 samples, 2.33%)</title><rect x="967.2" y="579.0" width="27.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.2" y="590.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (338 samples, 2.33%)</title><rect x="967.2" y="563.0" width="27.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.2" y="574.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (338 samples, 2.33%)</title><rect x="967.2" y="547.0" width="27.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.2" y="558.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (337 samples, 2.32%)</title><rect x="967.3" y="531.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.3" y="542.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (337 samples, 2.32%)</title><rect x="967.3" y="515.0" width="27.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.3" y="526.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (337 samples, 2.32%)</title><rect x="967.3" y="499.0" width="27.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.3" y="510.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (331 samples, 2.28%)</title><rect x="967.4" y="483.0" width="26.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.4" y="494.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (331 samples, 2.28%)</title><rect x="967.4" y="467.0" width="26.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.4" y="478.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (331 samples, 2.28%)</title><rect x="967.4" y="451.0" width="26.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.4" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (331 samples, 2.28%)</title><rect x="967.4" y="435.0" width="26.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.4" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (331 samples, 2.28%)</title><rect x="967.4" y="419.0" width="26.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.4" y="430.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (331 samples, 2.28%)</title><rect x="967.4" y="403.0" width="26.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.4" y="414.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (131 samples, 0.90%)</title><rect x="967.7" y="387.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (130 samples, 0.90%)</title><rect x="967.7" y="371.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (130 samples, 0.90%)</title><rect x="967.7" y="355.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (5 samples, 0.03%)</title><rect x="967.8" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.8" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.03%)</title><rect x="967.8" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.8" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.03%)</title><rect x="967.8" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (90 samples, 0.62%)</title><rect x="968.2" y="339.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.06%)</title><rect x="968.5" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.06%)</title><rect x="968.5" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (8 samples, 0.06%)</title><rect x="968.5" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (66 samples, 0.45%)</title><rect x="969.2" y="323.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (66 samples, 0.45%)</title><rect x="969.2" y="307.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (64 samples, 0.44%)</title><rect x="969.4" y="291.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.4" y="302.0"></text>
</g>
<g>
<title>__pread64 (59 samples, 0.41%)</title><rect x="969.6" y="275.0" width="4.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="972.6" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 0.39%)</title><rect x="969.8" y="259.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="972.8" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.39%)</title><rect x="969.8" y="243.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="972.8" y="254.0"></text>
</g>
<g>
<title>ksys_pread64 (50 samples, 0.34%)</title><rect x="970.3" y="227.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="973.3" y="238.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.06%)</title><rect x="970.4" y="211.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="973.4" y="222.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.05%)</title><rect x="970.6" y="195.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="973.6" y="206.0"></text>
</g>
<g>
<title>vfs_read (37 samples, 0.25%)</title><rect x="971.4" y="211.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="974.4" y="222.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.06%)</title><rect x="971.6" y="195.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="974.6" y="206.0"></text>
</g>
<g>
<title>new_sync_read (23 samples, 0.16%)</title><rect x="972.3" y="195.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="975.3" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (17 samples, 0.12%)</title><rect x="972.7" y="179.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="975.7" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.05%)</title><rect x="973.1" y="163.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="976.1" y="174.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.05%)</title><rect x="973.1" y="147.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="976.1" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.05%)</title><rect x="973.1" y="131.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="976.1" y="142.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.03%)</title><rect x="973.7" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="976.7" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (9 samples, 0.06%)</title><rect x="974.6" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="977.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.06%)</title><rect x="974.6" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (9 samples, 0.06%)</title><rect x="974.6" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="977.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (7 samples, 0.05%)</title><rect x="974.7" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (26 samples, 0.18%)</title><rect x="975.5" y="339.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.5" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.06%)</title><rect x="976.5" y="323.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="979.5" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.06%)</title><rect x="976.5" y="307.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="979.5" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (7 samples, 0.05%)</title><rect x="976.6" y="291.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="979.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.04%)</title><rect x="977.2" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.06%)</title><rect x="977.6" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (197 samples, 1.36%)</title><rect x="978.3" y="387.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.3" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (194 samples, 1.34%)</title><rect x="978.5" y="371.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (194 samples, 1.34%)</title><rect x="978.5" y="355.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (8 samples, 0.06%)</title><rect x="978.5" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.5" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (8 samples, 0.06%)</title><rect x="978.5" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.5" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.06%)</title><rect x="978.5" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (119 samples, 0.82%)</title><rect x="979.2" y="339.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="982.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (18 samples, 0.12%)</title><rect x="979.3" y="323.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (18 samples, 0.12%)</title><rect x="979.3" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (18 samples, 0.12%)</title><rect x="979.3" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (89 samples, 0.61%)</title><rect x="980.7" y="323.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (89 samples, 0.61%)</title><rect x="980.7" y="307.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (84 samples, 0.58%)</title><rect x="981.1" y="291.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.1" y="302.0"></text>
</g>
<g>
<title>__pread64 (77 samples, 0.53%)</title><rect x="981.6" y="275.0" width="6.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="984.6" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 0.49%)</title><rect x="982.1" y="259.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="985.1" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 0.49%)</title><rect x="982.1" y="243.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="985.1" y="254.0"></text>
</g>
<g>
<title>ksys_pread64 (58 samples, 0.40%)</title><rect x="983.2" y="227.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="986.2" y="238.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.06%)</title><rect x="983.3" y="211.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="986.3" y="222.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.05%)</title><rect x="983.3" y="195.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="986.3" y="206.0"></text>
</g>
<g>
<title>vfs_read (47 samples, 0.32%)</title><rect x="984.1" y="211.0" width="3.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="987.1" y="222.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.03%)</title><rect x="984.2" y="195.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="987.2" y="206.0"></text>
</g>
<g>
<title>new_sync_read (35 samples, 0.24%)</title><rect x="984.6" y="195.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="987.6" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (33 samples, 0.23%)</title><rect x="984.7" y="179.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="987.7" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.07%)</title><rect x="985.5" y="163.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="988.5" y="174.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.05%)</title><rect x="985.7" y="147.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="988.7" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_string (7 samples, 0.05%)</title><rect x="985.7" y="131.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="988.7" y="142.0"></text>
</g>
<g>
<title>pagecache_get_page (9 samples, 0.06%)</title><rect x="986.3" y="163.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="989.3" y="174.0"></text>
</g>
<g>
<title>find_get_entry (8 samples, 0.06%)</title><rect x="986.3" y="147.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.3" y="158.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.03%)</title><rect x="986.7" y="131.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.7" y="142.0"></text>
</g>
<g>
<title>touch_atime (5 samples, 0.03%)</title><rect x="987.0" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="990.0" y="174.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.03%)</title><rect x="987.5" y="195.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="990.5" y="206.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.03%)</title><rect x="987.6" y="179.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="990.6" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.03%)</title><rect x="988.0" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.0" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.03%)</title><rect x="988.0" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="991.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.03%)</title><rect x="988.0" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="991.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (5 samples, 0.03%)</title><rect x="988.0" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="991.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.04%)</title><rect x="988.4" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.4" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.04%)</title><rect x="988.4" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="991.4" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.04%)</title><rect x="988.4" y="291.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (6 samples, 0.04%)</title><rect x="988.4" y="275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="991.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (39 samples, 0.27%)</title><rect x="988.9" y="339.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="991.9" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (21 samples, 0.14%)</title><rect x="990.0" y="323.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="993.0" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (18 samples, 0.12%)</title><rect x="990.0" y="307.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="993.0" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (9 samples, 0.06%)</title><rect x="990.7" y="291.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="993.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.03%)</title><rect x="991.7" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (28 samples, 0.19%)</title><rect x="992.0" y="339.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.0" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.06%)</title><rect x="993.3" y="323.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="996.3" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.06%)</title><rect x="993.3" y="307.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="996.3" y="318.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (6 samples, 0.04%)</title><rect x="993.3" y="291.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="996.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.03%)</title><rect x="993.9" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.9" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="993.9" y="307.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="996.9" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (5 samples, 0.03%)</title><rect x="993.9" y="291.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="996.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$150/693662188.compare (5 samples, 0.03%)</title><rect x="994.3" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (5 samples, 0.03%)</title><rect x="994.3" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.3" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$201/949715758.compare (5 samples, 0.03%)</title><rect x="994.3" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.3" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="994.3" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="997.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$193/1228238398.compare (5 samples, 0.03%)</title><rect x="994.3" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.3" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="994.3" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.iterator (205 samples, 1.41%)</title><rect x="994.7" y="627.0" width="16.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.7" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (192 samples, 1.32%)</title><rect x="995.4" y="611.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (191 samples, 1.32%)</title><rect x="995.4" y="595.0" width="15.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="998.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (185 samples, 1.27%)</title><rect x="995.6" y="579.0" width="15.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (185 samples, 1.27%)</title><rect x="995.6" y="563.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (184 samples, 1.27%)</title><rect x="995.7" y="547.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (184 samples, 1.27%)</title><rect x="995.7" y="531.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.09%)</title><rect x="995.7" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.04%)</title><rect x="996.3" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.04%)</title><rect x="996.3" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.3" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.04%)</title><rect x="996.3" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (171 samples, 1.18%)</title><rect x="996.7" y="515.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="999.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (155 samples, 1.07%)</title><rect x="998.0" y="499.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (66 samples, 0.45%)</title><rect x="1005.3" y="483.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (66 samples, 0.45%)</title><rect x="1005.3" y="467.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1008.3" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (66 samples, 0.45%)</title><rect x="1005.3" y="451.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.characteristics (4 samples, 0.03%)</title><rect x="1010.6" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1013.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (13 samples, 0.09%)</title><rect x="1011.4" y="723.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.09%)</title><rect x="1011.4" y="707.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.09%)</title><rect x="1011.4" y="691.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.05%)</title><rect x="1011.6" y="675.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (98 samples, 0.67%)</title><rect x="1012.4" y="723.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (98 samples, 0.67%)</title><rect x="1012.4" y="707.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1015.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (67 samples, 0.46%)</title><rect x="1013.0" y="691.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (15 samples, 0.10%)</title><rect x="1013.3" y="675.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.10%)</title><rect x="1013.3" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1016.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.06%)</title><rect x="1013.7" y="643.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1016.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.06%)</title><rect x="1013.7" y="627.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.06%)</title><rect x="1013.8" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1016.8" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.04%)</title><rect x="1014.0" y="595.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1017.0" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="1014.0" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1017.0" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="1014.0" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1017.0" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="1014.1" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1017.1" y="558.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="1014.1" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1017.1" y="542.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="1014.1" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1017.1" y="526.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.03%)</title><rect x="1014.1" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1017.1" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.03%)</title><rect x="1014.1" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1017.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.03%)</title><rect x="1014.1" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1017.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 0.32%)</title><rect x="1014.6" y="675.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 0.32%)</title><rect x="1014.6" y="659.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1017.6" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (15 samples, 0.10%)</title><rect x="1014.6" y="643.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1017.6" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.03%)</title><rect x="1015.0" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1018.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.20%)</title><rect x="1015.8" y="643.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1018.8" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (25 samples, 0.17%)</title><rect x="1015.9" y="627.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1018.9" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.15%)</title><rect x="1016.2" y="611.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1019.2" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.15%)</title><rect x="1016.2" y="595.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1019.2" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.13%)</title><rect x="1016.4" y="579.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1019.4" y="590.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.13%)</title><rect x="1016.4" y="563.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1019.4" y="574.0"></text>
</g>
<g>
<title>futex_wait (19 samples, 0.13%)</title><rect x="1016.4" y="547.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1019.4" y="558.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.05%)</title><rect x="1016.5" y="531.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1019.5" y="542.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.03%)</title><rect x="1016.7" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1019.7" y="526.0"></text>
</g>
<g>
<title>futex_wait_setup (11 samples, 0.08%)</title><rect x="1017.1" y="531.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1020.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.17%)</title><rect x="1018.4" y="691.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1021.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.17%)</title><rect x="1018.4" y="675.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1021.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.17%)</title><rect x="1018.4" y="659.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1021.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.17%)</title><rect x="1018.4" y="643.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.16%)</title><rect x="1018.5" y="627.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.5" y="638.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (20 samples, 0.14%)</title><rect x="1018.8" y="611.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1021.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.14%)</title><rect x="1018.8" y="595.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1021.8" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.14%)</title><rect x="1018.8" y="579.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1021.8" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.14%)</title><rect x="1018.8" y="563.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1021.8" y="574.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.13%)</title><rect x="1018.9" y="547.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1021.9" y="558.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.12%)</title><rect x="1018.9" y="531.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1021.9" y="542.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.07%)</title><rect x="1019.6" y="515.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1022.6" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.07%)</title><rect x="1019.6" y="499.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1022.6" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.07%)</title><rect x="1019.6" y="483.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1022.6" y="494.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (6 samples, 0.04%)</title><rect x="1020.4" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.4" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.04%)</title><rect x="1020.4" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1023.4" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$258/1575505991.run (6 samples, 0.04%)</title><rect x="1020.4" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.4" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (6 samples, 0.04%)</title><rect x="1020.4" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.4" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (6 samples, 0.04%)</title><rect x="1020.4" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.4" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (6 samples, 0.04%)</title><rect x="1020.4" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.4" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (5 samples, 0.03%)</title><rect x="1020.5" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1023.5" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.03%)</title><rect x="1020.5" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.5" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (5 samples, 0.03%)</title><rect x="1020.5" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1023.5" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (5 samples, 0.03%)</title><rect x="1020.5" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.5" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (5 samples, 0.03%)</title><rect x="1020.5" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.5" y="574.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,031 samples, 13.99%)</title><rect x="1020.9" y="771.0" width="165.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.9" y="782.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (69 samples, 0.48%)</title><rect x="1021.9" y="755.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (62 samples, 0.43%)</title><rect x="1022.5" y="739.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1025.5" y="750.0"></text>
</g>
<g>
<title>epoll_wait (57 samples, 0.39%)</title><rect x="1022.9" y="723.0" width="4.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1025.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 0.38%)</title><rect x="1023.1" y="707.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1026.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (55 samples, 0.38%)</title><rect x="1023.1" y="691.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1026.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (50 samples, 0.34%)</title><rect x="1023.5" y="675.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1026.5" y="686.0"></text>
</g>
<g>
<title>do_epoll_wait (48 samples, 0.33%)</title><rect x="1023.6" y="659.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1026.6" y="670.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.04%)</title><rect x="1023.7" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1026.7" y="654.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.03%)</title><rect x="1023.8" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1026.8" y="638.0"></text>
</g>
<g>
<title>ep_poll (41 samples, 0.28%)</title><rect x="1024.2" y="643.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1027.2" y="654.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (20 samples, 0.14%)</title><rect x="1025.0" y="627.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1028.0" y="638.0"></text>
</g>
<g>
<title>ep_send_events_proc (12 samples, 0.08%)</title><rect x="1025.4" y="611.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1028.4" y="622.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (9 samples, 0.06%)</title><rect x="1025.6" y="595.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1028.6" y="606.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.03%)</title><rect x="1025.9" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1028.9" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.08%)</title><rect x="1026.7" y="627.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1029.7" y="638.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.07%)</title><rect x="1026.7" y="611.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1029.7" y="622.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.06%)</title><rect x="1026.8" y="595.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1029.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,947 samples, 13.41%)</title><rect x="1027.5" y="755.0" width="158.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.5" y="766.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,936 samples, 13.33%)</title><rect x="1028.4" y="739.0" width="157.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1031.4" y="750.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,662 samples, 11.45%)</title><rect x="1028.5" y="723.0" width="135.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1031.5" y="734.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,545 samples, 10.64%)</title><rect x="1031.6" y="707.0" width="125.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.6" y="718.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,541 samples, 10.61%)</title><rect x="1031.9" y="691.0" width="125.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.9" y="702.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,519 samples, 10.46%)</title><rect x="1031.9" y="675.0" width="123.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1034.9" y="686.0">RequestHandler0..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.12%)</title><rect x="1031.9" y="659.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1034.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="1032.8" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="1032.8" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.08%)</title><rect x="1033.4" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1036.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.08%)</title><rect x="1033.4" y="643.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.03%)</title><rect x="1034.0" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1037.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/HttpService.entity (1,488 samples, 10.25%)</title><rect x="1034.4" y="659.0" width="120.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.4" y="670.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.entity (1,485 samples, 10.23%)</title><rect x="1034.6" y="643.0" width="120.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1037.6" y="654.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1332005802.linkToTargetMethod (5 samples, 0.03%)</title><rect x="1035.5" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2008432884.invoke (5 samples, 0.03%)</title><rect x="1035.5" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1438640388.invokeStatic (5 samples, 0.03%)</title><rect x="1035.5" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (5 samples, 0.03%)</title><rect x="1035.5" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1038.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (5 samples, 0.03%)</title><rect x="1035.5" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1038.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (11 samples, 0.08%)</title><rect x="1035.9" y="627.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.08%)</title><rect x="1035.9" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (11 samples, 0.08%)</title><rect x="1035.9" y="595.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.08%)</title><rect x="1035.9" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.03%)</title><rect x="1035.9" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.9" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (4 samples, 0.03%)</title><rect x="1035.9" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.04%)</title><rect x="1036.3" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1039.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (271 samples, 1.87%)</title><rect x="1036.9" y="627.0" width="22.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.9" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (257 samples, 1.77%)</title><rect x="1037.4" y="611.0" width="20.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.06%)</title><rect x="1037.4" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (249 samples, 1.71%)</title><rect x="1038.0" y="595.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.0" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (249 samples, 1.71%)</title><rect x="1038.0" y="579.0" width="20.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (248 samples, 1.71%)</title><rect x="1038.1" y="563.0" width="20.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1041.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (247 samples, 1.70%)</title><rect x="1038.2" y="547.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1041.2" y="558.0"></text>
</g>
<g>
<title>__libc_send (240 samples, 1.65%)</title><rect x="1038.8" y="531.0" width="19.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1041.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (235 samples, 1.62%)</title><rect x="1039.2" y="515.0" width="19.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1042.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (235 samples, 1.62%)</title><rect x="1039.2" y="499.0" width="19.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1042.2" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (234 samples, 1.61%)</title><rect x="1039.2" y="483.0" width="19.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1042.2" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (234 samples, 1.61%)</title><rect x="1039.2" y="467.0" width="19.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1042.2" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (231 samples, 1.59%)</title><rect x="1039.2" y="451.0" width="18.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1042.2" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (229 samples, 1.58%)</title><rect x="1039.4" y="435.0" width="18.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1042.4" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (226 samples, 1.56%)</title><rect x="1039.7" y="419.0" width="18.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1042.7" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (198 samples, 1.36%)</title><rect x="1040.1" y="403.0" width="16.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1043.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (195 samples, 1.34%)</title><rect x="1040.4" y="387.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1043.4" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (181 samples, 1.25%)</title><rect x="1040.7" y="371.0" width="14.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1043.7" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (166 samples, 1.14%)</title><rect x="1041.1" y="355.0" width="13.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1044.1" y="366.0"></text>
</g>
<g>
<title>ip_output (159 samples, 1.10%)</title><rect x="1041.7" y="339.0" width="12.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1044.7" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (150 samples, 1.03%)</title><rect x="1041.9" y="323.0" width="12.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1044.9" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.05%)</title><rect x="1042.6" y="307.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1045.6" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.03%)</title><rect x="1042.7" y="291.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1045.7" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (135 samples, 0.93%)</title><rect x="1043.2" y="307.0" width="10.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1046.2" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (134 samples, 0.92%)</title><rect x="1043.2" y="291.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1046.2" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (134 samples, 0.92%)</title><rect x="1043.2" y="275.0" width="10.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1046.2" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (134 samples, 0.92%)</title><rect x="1043.2" y="259.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1046.2" y="270.0"></text>
</g>
<g>
<title>net_rx_action (131 samples, 0.90%)</title><rect x="1043.5" y="243.0" width="10.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1046.5" y="254.0"></text>
</g>
<g>
<title>process_backlog (126 samples, 0.87%)</title><rect x="1043.9" y="227.0" width="10.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1046.9" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (123 samples, 0.85%)</title><rect x="1044.1" y="211.0" width="10.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1047.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv (121 samples, 0.83%)</title><rect x="1044.3" y="195.0" width="9.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1047.3" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (117 samples, 0.81%)</title><rect x="1044.5" y="179.0" width="9.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1047.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (116 samples, 0.80%)</title><rect x="1044.6" y="163.0" width="9.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1047.6" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (116 samples, 0.80%)</title><rect x="1044.6" y="147.0" width="9.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1047.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (111 samples, 0.76%)</title><rect x="1045.0" y="131.0" width="9.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1048.0" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="1045.3" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1048.3" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.03%)</title><rect x="1045.7" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1048.7" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.03%)</title><rect x="1045.7" y="99.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1048.7" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.03%)</title><rect x="1045.7" y="83.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1048.7" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (93 samples, 0.64%)</title><rect x="1046.2" y="115.0" width="7.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1049.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (92 samples, 0.63%)</title><rect x="1046.2" y="99.0" width="7.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1049.2" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (55 samples, 0.38%)</title><rect x="1046.7" y="83.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1049.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 0.37%)</title><rect x="1046.8" y="67.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1049.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (54 samples, 0.37%)</title><rect x="1046.8" y="51.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1049.8" y="62.0"></text>
</g>
<g>
<title>tcp_ack (23 samples, 0.16%)</title><rect x="1051.2" y="83.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1054.2" y="94.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.04%)</title><rect x="1054.1" y="323.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1057.1" y="334.0"></text>
</g>
<g>
<title>selinux_ip_postroute (5 samples, 0.03%)</title><rect x="1054.1" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1057.1" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (5 samples, 0.03%)</title><rect x="1054.1" y="291.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1057.1" y="302.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.03%)</title><rect x="1054.2" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1057.2" y="286.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.03%)</title><rect x="1054.6" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1057.6" y="366.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.03%)</title><rect x="1055.4" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1058.4" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.03%)</title><rect x="1055.7" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1058.7" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.03%)</title><rect x="1055.7" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1058.7" y="366.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.03%)</title><rect x="1055.7" y="339.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1058.7" y="350.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.03%)</title><rect x="1056.2" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1059.2" y="414.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.03%)</title><rect x="1056.6" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1059.6" y="414.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.03%)</title><rect x="1056.6" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1059.6" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.05%)</title><rect x="1056.9" y="403.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1059.9" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.04%)</title><rect x="1057.0" y="387.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1060.0" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.04%)</title><rect x="1057.5" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1060.5" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.04%)</title><rect x="1057.5" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1060.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.06%)</title><rect x="1058.3" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1061.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.03%)</title><rect x="1058.6" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.03%)</title><rect x="1058.6" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.entity (164 samples, 1.13%)</title><rect x="1058.9" y="627.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.getAsync (147 samples, 1.01%)</title><rect x="1059.2" y="611.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (145 samples, 1.00%)</title><rect x="1059.3" y="595.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (145 samples, 1.00%)</title><rect x="1059.3" y="579.0" width="11.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (145 samples, 1.00%)</title><rect x="1059.3" y="563.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1062.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (141 samples, 0.97%)</title><rect x="1059.6" y="547.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (13 samples, 0.09%)</title><rect x="1060.1" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (13 samples, 0.09%)</title><rect x="1060.1" y="515.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (13 samples, 0.09%)</title><rect x="1060.1" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (13 samples, 0.09%)</title><rect x="1060.1" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (13 samples, 0.09%)</title><rect x="1060.1" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (120 samples, 0.83%)</title><rect x="1061.4" y="531.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (120 samples, 0.83%)</title><rect x="1061.4" y="515.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (120 samples, 0.83%)</title><rect x="1061.4" y="499.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (120 samples, 0.83%)</title><rect x="1061.4" y="483.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (119 samples, 0.82%)</title><rect x="1061.4" y="467.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.4" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (25 samples, 0.17%)</title><rect x="1061.7" y="451.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1064.7" y="462.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (91 samples, 0.63%)</title><rect x="1063.7" y="451.0" width="7.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1066.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 0.60%)</title><rect x="1064.0" y="435.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1067.0" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (87 samples, 0.60%)</title><rect x="1064.0" y="419.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1067.0" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (84 samples, 0.58%)</title><rect x="1064.3" y="403.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1067.3" y="414.0"></text>
</g>
<g>
<title>do_futex (82 samples, 0.56%)</title><rect x="1064.4" y="387.0" width="6.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1067.4" y="398.0"></text>
</g>
<g>
<title>futex_wake (81 samples, 0.56%)</title><rect x="1064.5" y="371.0" width="6.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1067.5" y="382.0"></text>
</g>
<g>
<title>wake_up_q (60 samples, 0.41%)</title><rect x="1066.2" y="355.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1069.2" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (60 samples, 0.41%)</title><rect x="1066.2" y="339.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (60 samples, 0.41%)</title><rect x="1066.2" y="323.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1069.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.putAsync (5 samples, 0.03%)</title><rect x="1071.1" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (5 samples, 0.03%)</title><rect x="1071.1" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (5 samples, 0.03%)</title><rect x="1071.1" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.03%)</title><rect x="1071.1" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (7 samples, 0.05%)</title><rect x="1071.5" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1074.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (6 samples, 0.04%)</title><rect x="1071.6" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (4 samples, 0.03%)</title><rect x="1071.8" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1074.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (4 samples, 0.03%)</title><rect x="1071.8" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (4 samples, 0.03%)</title><rect x="1071.8" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (12 samples, 0.08%)</title><rect x="1072.2" y="627.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1075.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (12 samples, 0.08%)</title><rect x="1072.2" y="611.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (4 samples, 0.03%)</title><rect x="1072.8" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (4 samples, 0.03%)</title><rect x="1072.8" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (4 samples, 0.03%)</title><rect x="1072.8" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.resolveGetProxyResult (64 samples, 0.44%)</title><rect x="1073.5" y="627.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1076.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (49 samples, 0.34%)</title><rect x="1074.7" y="611.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1077.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (49 samples, 0.34%)</title><rect x="1074.7" y="595.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (47 samples, 0.32%)</title><rect x="1074.8" y="579.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (47 samples, 0.32%)</title><rect x="1074.8" y="563.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1077.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (40 samples, 0.28%)</title><rect x="1074.8" y="547.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (35 samples, 0.24%)</title><rect x="1074.9" y="531.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (34 samples, 0.23%)</title><rect x="1075.0" y="515.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1078.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (6 samples, 0.04%)</title><rect x="1075.4" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1078.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$12/242355057.accept (6 samples, 0.04%)</title><rect x="1075.4" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1078.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="1075.4" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="1075.4" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="1075.4" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1078.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="1075.4" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1078.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="1075.4" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1078.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$190/481289543.apply (4 samples, 0.03%)</title><rect x="1075.6" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1078.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$190/481289543.apply (23 samples, 0.16%)</title><rect x="1075.9" y="499.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1078.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.fromResponse (23 samples, 0.16%)</title><rect x="1075.9" y="483.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1078.9" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.03%)</title><rect x="1075.9" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1078.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.03%)</title><rect x="1075.9" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.getDeadFlagTimeStampFromResponse (18 samples, 0.12%)</title><rect x="1076.3" y="467.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (18 samples, 0.12%)</title><rect x="1076.3" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (16 samples, 0.11%)</title><rect x="1076.5" y="435.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1076.5" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1076.5" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.04%)</title><rect x="1076.5" y="387.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1079.5" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="1077.0" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1080.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="1077.0" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1080.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.stripLeading (4 samples, 0.03%)</title><rect x="1077.4" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.stripLeading (4 samples, 0.03%)</title><rect x="1077.4" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (4 samples, 0.03%)</title><rect x="1077.4" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1080.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (4 samples, 0.03%)</title><rect x="1077.8" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1080.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (4 samples, 0.03%)</title><rect x="1077.8" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$11/274773041.get (4 samples, 0.03%)</title><rect x="1077.8" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1080.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1077.8" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.8" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1077.8" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1080.8" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1077.8" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.05%)</title><rect x="1078.1" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (7 samples, 0.05%)</title><rect x="1078.1" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (7 samples, 0.05%)</title><rect x="1078.1" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (7 samples, 0.05%)</title><rect x="1078.1" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1081.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parseOrDefault (13 samples, 0.09%)</title><rect x="1078.7" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parse (13 samples, 0.09%)</title><rect x="1078.7" y="611.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (10 samples, 0.07%)</title><rect x="1078.9" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1081.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (7 samples, 0.05%)</title><rect x="1078.9" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (7 samples, 0.05%)</title><rect x="1078.9" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (7 samples, 0.05%)</title><rect x="1078.9" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (7 samples, 0.05%)</title><rect x="1078.9" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1081.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (7 samples, 0.05%)</title><rect x="1078.9" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1081.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.05%)</title><rect x="1078.9" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.05%)</title><rect x="1078.9" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxyReplicas (930 samples, 6.40%)</title><rect x="1079.7" y="627.0" width="75.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.7" y="638.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxy (913 samples, 6.29%)</title><rect x="1081.1" y="611.0" width="74.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.1" y="622.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (913 samples, 6.29%)</title><rect x="1081.1" y="595.0" width="74.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1084.1" y="606.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (906 samples, 6.24%)</title><rect x="1081.7" y="579.0" width="73.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1084.7" y="590.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.06%)</title><rect x="1082.2" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.06%)</title><rect x="1082.2" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.06%)</title><rect x="1082.2" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1085.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (160 samples, 1.10%)</title><rect x="1082.9" y="563.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.9" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (15 samples, 0.10%)</title><rect x="1085.8" y="547.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1088.8" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (14 samples, 0.10%)</title><rect x="1085.8" y="531.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1088.8" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.10%)</title><rect x="1085.8" y="515.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.8" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.09%)</title><rect x="1085.8" y="499.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1088.8" y="510.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation() (4 samples, 0.03%)</title><rect x="1085.9" y="483.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1088.9" y="494.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (6 samples, 0.04%)</title><rect x="1086.4" y="483.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1089.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (109 samples, 0.75%)</title><rect x="1087.0" y="547.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.0" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (43 samples, 0.30%)</title><rect x="1087.5" y="531.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1090.5" y="542.0"></text>
</g>
<g>
<title>/lib64/libc-2.30.so (5 samples, 0.03%)</title><rect x="1087.9" y="515.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1090.9" y="526.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (27 samples, 0.19%)</title><rect x="1088.8" y="515.0" width="2.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1091.8" y="526.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (5 samples, 0.03%)</title><rect x="1090.1" y="499.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1093.1" y="510.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.03%)</title><rect x="1090.6" y="499.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1093.6" y="510.0"></text>
</g>
<g>
<title>__libc_recv (52 samples, 0.36%)</title><rect x="1091.0" y="531.0" width="4.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1094.0" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.33%)</title><rect x="1091.3" y="515.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1094.3" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.33%)</title><rect x="1091.3" y="499.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.3" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (48 samples, 0.33%)</title><rect x="1091.3" y="483.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1094.3" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (46 samples, 0.32%)</title><rect x="1091.5" y="467.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1094.5" y="478.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (37 samples, 0.25%)</title><rect x="1091.7" y="451.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1094.7" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (36 samples, 0.25%)</title><rect x="1091.8" y="435.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1094.8" y="446.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (16 samples, 0.11%)</title><rect x="1092.1" y="419.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1095.1" y="430.0"></text>
</g>
<g>
<title>__ip_queue_xmit (16 samples, 0.11%)</title><rect x="1092.1" y="403.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1095.1" y="414.0"></text>
</g>
<g>
<title>ip_output (16 samples, 0.11%)</title><rect x="1092.1" y="387.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1095.1" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (16 samples, 0.11%)</title><rect x="1092.1" y="371.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1095.1" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (14 samples, 0.10%)</title><rect x="1092.2" y="355.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1095.2" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (14 samples, 0.10%)</title><rect x="1092.2" y="339.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.2" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (14 samples, 0.10%)</title><rect x="1092.2" y="323.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1095.2" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (14 samples, 0.10%)</title><rect x="1092.2" y="307.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1095.2" y="318.0"></text>
</g>
<g>
<title>net_rx_action (12 samples, 0.08%)</title><rect x="1092.4" y="291.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1095.4" y="302.0"></text>
</g>
<g>
<title>process_backlog (12 samples, 0.08%)</title><rect x="1092.4" y="275.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1095.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (12 samples, 0.08%)</title><rect x="1092.4" y="259.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1095.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv (11 samples, 0.08%)</title><rect x="1092.5" y="243.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1095.5" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (11 samples, 0.08%)</title><rect x="1092.5" y="227.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1095.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (11 samples, 0.08%)</title><rect x="1092.5" y="211.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.5" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (11 samples, 0.08%)</title><rect x="1092.5" y="195.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1095.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (11 samples, 0.08%)</title><rect x="1092.5" y="179.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1095.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 0.04%)</title><rect x="1092.9" y="163.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.9" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.04%)</title><rect x="1092.9" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1095.9" y="158.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.03%)</title><rect x="1092.9" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1095.9" y="142.0"></text>
</g>
<g>
<title>sk_wait_data (16 samples, 0.11%)</title><rect x="1093.5" y="419.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1096.5" y="430.0"></text>
</g>
<g>
<title>wait_woken (12 samples, 0.08%)</title><rect x="1093.8" y="403.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1096.8" y="414.0"></text>
</g>
<g>
<title>schedule_timeout (12 samples, 0.08%)</title><rect x="1093.8" y="387.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1096.8" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.04%)</title><rect x="1093.8" y="371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1096.8" y="382.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.03%)</title><rect x="1094.3" y="371.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1097.3" y="382.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.03%)</title><rect x="1094.4" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1097.4" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.03%)</title><rect x="1094.9" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1097.9" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.03%)</title><rect x="1094.9" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1097.9" y="446.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.03%)</title><rect x="1095.2" y="531.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1098.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (137 samples, 0.94%)</title><rect x="1095.9" y="563.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.03%)</title><rect x="1096.4" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="1096.4" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="1096.4" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.13%)</title><rect x="1096.8" y="547.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.07%)</title><rect x="1097.5" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.07%)</title><rect x="1097.5" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1100.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (65 samples, 0.45%)</title><rect x="1098.3" y="547.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.3" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="1098.7" y="531.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1101.7" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 0.37%)</title><rect x="1099.2" y="531.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1102.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 0.37%)</title><rect x="1099.2" y="515.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1102.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 0.10%)</title><rect x="1103.6" y="547.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (6 samples, 0.04%)</title><rect x="1104.8" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.03%)</title><rect x="1105.0" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (21 samples, 0.14%)</title><rect x="1105.3" y="547.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.11%)</title><rect x="1105.7" y="531.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.11%)</title><rect x="1105.7" y="515.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (46 samples, 0.32%)</title><rect x="1107.0" y="563.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.07%)</title><rect x="1110.0" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.0" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (10 samples, 0.07%)</title><rect x="1110.0" y="531.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.07%)</title><rect x="1110.0" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1113.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (9 samples, 0.06%)</title><rect x="1110.8" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.05%)</title><rect x="1110.9" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.05%)</title><rect x="1110.9" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1113.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (74 samples, 0.51%)</title><rect x="1111.5" y="563.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.5" y="574.0"></text>
</g>
<g>
<title>setsockopt (67 samples, 0.46%)</title><rect x="1112.1" y="547.0" width="5.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1115.1" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 0.41%)</title><rect x="1112.7" y="531.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1115.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (59 samples, 0.41%)</title><rect x="1112.7" y="515.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1115.7" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (53 samples, 0.37%)</title><rect x="1113.2" y="499.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1116.2" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (51 samples, 0.35%)</title><rect x="1113.4" y="483.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1116.4" y="494.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.03%)</title><rect x="1113.8" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1116.8" y="478.0"></text>
</g>
<g>
<title>security_socket_setsockopt (11 samples, 0.08%)</title><rect x="1114.2" y="467.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1117.2" y="478.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (9 samples, 0.06%)</title><rect x="1114.3" y="451.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1117.3" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (8 samples, 0.06%)</title><rect x="1114.4" y="435.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1117.4" y="446.0"></text>
</g>
<g>
<title>sock_setsockopt (18 samples, 0.12%)</title><rect x="1115.1" y="467.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1118.1" y="478.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.04%)</title><rect x="1115.3" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1118.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.04%)</title><rect x="1115.3" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1118.3" y="446.0"></text>
</g>
<g>
<title>sock_set_timeout (7 samples, 0.05%)</title><rect x="1116.0" y="451.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1119.0" y="462.0"></text>
</g>
<g>
<title>_copy_from_user (5 samples, 0.03%)</title><rect x="1116.1" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1119.1" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.03%)</title><rect x="1116.2" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.2" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.08%)</title><rect x="1116.5" y="467.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1119.5" y="478.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.08%)</title><rect x="1116.5" y="451.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1119.5" y="462.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.08%)</title><rect x="1116.6" y="435.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1119.6" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (448 samples, 3.09%)</title><rect x="1117.5" y="563.0" width="36.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.5" y="574.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (7 samples, 0.05%)</title><rect x="1117.8" y="547.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1120.8" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.03%)</title><rect x="1118.0" y="531.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1121.0" y="542.0"></text>
</g>
<g>
<title>__libc_send (436 samples, 3.00%)</title><rect x="1118.4" y="547.0" width="35.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1121.4" y="558.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (428 samples, 2.95%)</title><rect x="1119.1" y="531.0" width="34.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1122.1" y="542.0">en..</text>
</g>
<g>
<title>do_syscall_64 (428 samples, 2.95%)</title><rect x="1119.1" y="515.0" width="34.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1122.1" y="526.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (425 samples, 2.93%)</title><rect x="1119.3" y="499.0" width="34.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1122.3" y="510.0">__..</text>
</g>
<g>
<title>__sys_sendto (424 samples, 2.92%)</title><rect x="1119.4" y="483.0" width="34.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1122.4" y="494.0">__..</text>
</g>
<g>
<title>sock_sendmsg (417 samples, 2.87%)</title><rect x="1119.7" y="467.0" width="33.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.7" y="478.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (416 samples, 2.87%)</title><rect x="1119.8" y="451.0" width="33.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1122.8" y="462.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (413 samples, 2.84%)</title><rect x="1120.0" y="435.0" width="33.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1123.0" y="446.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (337 samples, 2.32%)</title><rect x="1121.1" y="419.0" width="27.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1124.1" y="430.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (337 samples, 2.32%)</title><rect x="1121.1" y="403.0" width="27.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1124.1" y="414.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (318 samples, 2.19%)</title><rect x="1121.4" y="387.0" width="25.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1124.4" y="398.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (301 samples, 2.07%)</title><rect x="1122.1" y="371.0" width="24.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1125.1" y="382.0">_..</text>
</g>
<g>
<title>ip_local_out (9 samples, 0.06%)</title><rect x="1122.5" y="355.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.5" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (9 samples, 0.06%)</title><rect x="1122.5" y="339.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.5" y="350.0"></text>
</g>
<g>
<title>ip_send_check (6 samples, 0.04%)</title><rect x="1122.6" y="323.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.6" y="334.0"></text>
</g>
<g>
<title>ip_output (286 samples, 1.97%)</title><rect x="1123.3" y="355.0" width="23.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1126.3" y="366.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (276 samples, 1.90%)</title><rect x="1123.5" y="339.0" width="22.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1126.5" y="350.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.10%)</title><rect x="1123.9" y="323.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1126.9" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.06%)</title><rect x="1124.3" y="307.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1127.3" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.05%)</title><rect x="1124.3" y="291.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1127.3" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (256 samples, 1.76%)</title><rect x="1125.1" y="323.0" width="20.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1128.1" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (254 samples, 1.75%)</title><rect x="1125.3" y="307.0" width="20.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1128.3" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (250 samples, 1.72%)</title><rect x="1125.6" y="291.0" width="20.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1128.6" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (250 samples, 1.72%)</title><rect x="1125.6" y="275.0" width="20.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1128.6" y="286.0"></text>
</g>
<g>
<title>net_rx_action (243 samples, 1.67%)</title><rect x="1126.2" y="259.0" width="19.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1129.2" y="270.0"></text>
</g>
<g>
<title>process_backlog (238 samples, 1.64%)</title><rect x="1126.6" y="243.0" width="19.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1129.6" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (235 samples, 1.62%)</title><rect x="1126.9" y="227.0" width="19.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1129.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv (231 samples, 1.59%)</title><rect x="1127.2" y="211.0" width="18.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1130.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (227 samples, 1.56%)</title><rect x="1127.2" y="195.0" width="18.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1130.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (224 samples, 1.54%)</title><rect x="1127.4" y="179.0" width="18.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1130.4" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (222 samples, 1.53%)</title><rect x="1127.6" y="163.0" width="18.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1130.6" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (4 samples, 0.03%)</title><rect x="1127.9" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1130.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (214 samples, 1.47%)</title><rect x="1128.2" y="147.0" width="17.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1131.2" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.06%)</title><rect x="1129.0" y="131.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1132.0" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.07%)</title><rect x="1129.8" y="131.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1132.8" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (10 samples, 0.07%)</title><rect x="1129.8" y="115.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1132.8" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (9 samples, 0.06%)</title><rect x="1129.9" y="99.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.9" y="110.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (5 samples, 0.03%)</title><rect x="1130.2" y="83.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1133.2" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (184 samples, 1.27%)</title><rect x="1130.6" y="131.0" width="14.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1133.6" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (183 samples, 1.26%)</title><rect x="1130.7" y="115.0" width="14.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1133.7" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.03%)</title><rect x="1131.2" y="99.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1134.2" y="110.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.03%)</title><rect x="1131.3" y="83.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1134.3" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.03%)</title><rect x="1131.3" y="67.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1134.3" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (105 samples, 0.72%)</title><rect x="1131.7" y="99.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1134.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (100 samples, 0.69%)</title><rect x="1132.1" y="83.0" width="8.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1135.1" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (100 samples, 0.69%)</title><rect x="1132.1" y="67.0" width="8.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1135.1" y="78.0"></text>
</g>
<g>
<title>tcp_ack (54 samples, 0.37%)</title><rect x="1140.2" y="99.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1143.2" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (24 samples, 0.17%)</title><rect x="1140.7" y="83.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1143.7" y="94.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.04%)</title><rect x="1140.8" y="67.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1143.8" y="78.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.10%)</title><rect x="1141.5" y="67.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1144.5" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.03%)</title><rect x="1142.7" y="83.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1145.7" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.04%)</title><rect x="1145.1" y="99.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1148.1" y="110.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.04%)</title><rect x="1145.1" y="83.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1148.1" y="94.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.04%)</title><rect x="1145.1" y="67.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1148.1" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.04%)</title><rect x="1146.0" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.0" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute (4 samples, 0.03%)</title><rect x="1146.1" y="323.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1149.1" y="334.0"></text>
</g>
<g>
<title>selinux_ip_postroute_compat (4 samples, 0.03%)</title><rect x="1146.1" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.1" y="318.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.03%)</title><rect x="1146.9" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1149.9" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.04%)</title><rect x="1147.5" y="387.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1150.5" y="398.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.04%)</title><rect x="1148.0" y="387.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1151.0" y="398.0"></text>
</g>
<g>
<title>_copy_from_iter_full (12 samples, 0.08%)</title><rect x="1148.5" y="419.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1151.5" y="430.0"></text>
</g>
<g>
<title>copyin (8 samples, 0.06%)</title><rect x="1148.5" y="403.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1151.5" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 0.06%)</title><rect x="1148.5" y="387.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1151.5" y="398.0"></text>
</g>
<g>
<title>iov_iter_advance (4 samples, 0.03%)</title><rect x="1149.1" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1152.1" y="414.0"></text>
</g>
<g>
<title>sk_page_frag_refill (7 samples, 0.05%)</title><rect x="1149.4" y="419.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1152.4" y="430.0"></text>
</g>
<g>
<title>skb_page_frag_refill (7 samples, 0.05%)</title><rect x="1149.4" y="403.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1152.4" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (26 samples, 0.18%)</title><rect x="1150.0" y="419.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.0" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (22 samples, 0.15%)</title><rect x="1150.3" y="403.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1153.3" y="414.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.03%)</title><rect x="1150.7" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1153.7" y="398.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.03%)</title><rect x="1150.7" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1153.7" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.08%)</title><rect x="1151.2" y="387.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1154.2" y="398.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.03%)</title><rect x="1152.1" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1155.1" y="430.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.03%)</title><rect x="1152.5" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.5" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.06%)</title><rect x="1152.8" y="419.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1155.8" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.04%)</title><rect x="1153.0" y="403.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1156.0" y="414.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (8 samples, 0.06%)</title><rect x="1153.9" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.9" y="574.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (9 samples, 0.06%)</title><rect x="1154.6" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.05%)</title><rect x="1155.4" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.05%)</title><rect x="1155.4" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1158.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.03%)</title><rect x="1155.5" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.03%)</title><rect x="1155.5" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.03%)</title><rect x="1155.5" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1158.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (15 samples, 0.10%)</title><rect x="1155.9" y="675.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1158.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.10%)</title><rect x="1155.9" y="659.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.10%)</title><rect x="1155.9" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1158.9" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (10 samples, 0.07%)</title><rect x="1155.9" y="627.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.9" y="638.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="1156.8" y="627.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1159.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (34 samples, 0.23%)</title><rect x="1157.2" y="707.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.15%)</title><rect x="1157.7" y="691.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.15%)</title><rect x="1157.7" y="675.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.03%)</title><rect x="1159.5" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.10%)</title><rect x="1159.9" y="707.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.21%)</title><rect x="1161.1" y="707.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.19%)</title><rect x="1161.3" y="691.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (272 samples, 1.87%)</title><rect x="1163.6" y="723.0" width="22.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.6" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (268 samples, 1.85%)</title><rect x="1163.9" y="707.0" width="21.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.9" y="718.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (35 samples, 0.24%)</title><rect x="1164.3" y="691.0" width="2.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1167.3" y="702.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (6 samples, 0.04%)</title><rect x="1164.6" y="675.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.6" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (23 samples, 0.16%)</title><rect x="1165.2" y="675.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1168.2" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (13 samples, 0.09%)</title><rect x="1165.9" y="659.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1168.9" y="670.0"></text>
</g>
<g>
<title>ResourceMark::~ResourceMark() (6 samples, 0.04%)</title><rect x="1166.4" y="643.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.4" y="654.0"></text>
</g>
<g>
<title>__libc_recv (218 samples, 1.50%)</title><rect x="1167.2" y="691.0" width="17.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1170.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (215 samples, 1.48%)</title><rect x="1167.4" y="675.0" width="17.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (215 samples, 1.48%)</title><rect x="1167.4" y="659.0" width="17.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1170.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (205 samples, 1.41%)</title><rect x="1168.2" y="643.0" width="16.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1171.2" y="654.0"></text>
</g>
<g>
<title>__sys_recvfrom (205 samples, 1.41%)</title><rect x="1168.2" y="627.0" width="16.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.2" y="638.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (173 samples, 1.19%)</title><rect x="1169.0" y="611.0" width="14.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.0" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (167 samples, 1.15%)</title><rect x="1169.5" y="595.0" width="13.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1172.5" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.10%)</title><rect x="1172.9" y="579.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1175.9" y="590.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.08%)</title><rect x="1172.9" y="563.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1175.9" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (11 samples, 0.08%)</title><rect x="1172.9" y="547.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1175.9" y="558.0"></text>
</g>
<g>
<title>dst_release (8 samples, 0.06%)</title><rect x="1172.9" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1175.9" y="542.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.03%)</title><rect x="1173.7" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1176.7" y="574.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (82 samples, 0.56%)</title><rect x="1174.6" y="579.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1177.6" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (81 samples, 0.56%)</title><rect x="1174.6" y="563.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1177.6" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (32 samples, 0.22%)</title><rect x="1177.1" y="547.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1180.1" y="558.0"></text>
</g>
<g>
<title>copyout (32 samples, 0.22%)</title><rect x="1177.1" y="531.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1180.1" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_string (31 samples, 0.21%)</title><rect x="1177.2" y="515.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.2" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (19 samples, 0.13%)</title><rect x="1179.7" y="547.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1182.7" y="558.0"></text>
</g>
<g>
<title>__check_object_size (18 samples, 0.12%)</title><rect x="1179.8" y="531.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1182.8" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.04%)</title><rect x="1180.5" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1183.5" y="526.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.06%)</title><rect x="1181.2" y="579.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1184.2" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (15 samples, 0.10%)</title><rect x="1181.9" y="579.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.9" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (10 samples, 0.07%)</title><rect x="1182.3" y="563.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.3" y="574.0"></text>
</g>
<g>
<title>ktime_get (9 samples, 0.06%)</title><rect x="1182.4" y="547.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1185.4" y="558.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.05%)</title><rect x="1182.5" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1185.5" y="542.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.03%)</title><rect x="1183.1" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1186.1" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.03%)</title><rect x="1183.2" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1186.2" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.12%)</title><rect x="1183.5" y="611.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.09%)</title><rect x="1183.8" y="595.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1186.8" y="606.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.05%)</title><rect x="1184.3" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1187.3" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.04%)</title><rect x="1185.2" y="691.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1188.2" y="702.0"></text>
</g>
<g>
<title>start_thread (49 samples, 0.34%)</title><rect x="1185.9" y="771.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1188.9" y="782.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (49 samples, 0.34%)</title><rect x="1185.9" y="755.0" width="4.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>Thread::call_run() (49 samples, 0.34%)</title><rect x="1185.9" y="739.0" width="4.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>GangWorker::loop() (39 samples, 0.27%)</title><rect x="1185.9" y="723.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (34 samples, 0.23%)</title><rect x="1186.0" y="707.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.0" y="718.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (18 samples, 0.12%)</title><rect x="1186.0" y="691.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.0" y="702.0"></text>
</g>
<g>
<title>SpinPause (16 samples, 0.11%)</title><rect x="1186.2" y="675.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1189.2" y="686.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.03%)</title><rect x="1187.6" y="691.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.6" y="702.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (5 samples, 0.03%)</title><rect x="1187.6" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.6" y="686.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.03%)</title><rect x="1187.6" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.6" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (10 samples, 0.07%)</title><rect x="1188.0" y="691.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.0" y="702.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (10 samples, 0.07%)</title><rect x="1188.0" y="675.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.0" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (9 samples, 0.06%)</title><rect x="1188.0" y="659.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="670.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (9 samples, 0.06%)</title><rect x="1188.0" y="643.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="654.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (9 samples, 0.06%)</title><rect x="1188.0" y="627.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.0" y="638.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.03%)</title><rect x="1188.5" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.5" y="622.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (6 samples, 0.04%)</title><rect x="1189.1" y="723.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5 samples, 0.03%)</title><rect x="1189.1" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 0.03%)</title><rect x="1189.1" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.1" y="702.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 0.03%)</title><rect x="1189.1" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples, 0.03%)</title><rect x="1189.1" y="659.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="670.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.03%)</title><rect x="1189.6" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.6" y="734.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.03%)</title><rect x="1189.6" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.6" y="718.0"></text>
</g>
</g>
</svg>
