<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="821"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="821"> </text>
<g id="frames">
<g>
<title>all (21,563 samples, 100.00%)</title><rect x="10.0" y="787.0" width="1180.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="798.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (175 samples, 0.81%)</title><rect x="10.1" y="771.0" width="9.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.1" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.02%)</title><rect x="10.1" y="755.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.1" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (167 samples, 0.77%)</title><rect x="10.4" y="755.0" width="9.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.4" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (134 samples, 0.62%)</title><rect x="12.2" y="739.0" width="7.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.2" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (78 samples, 0.36%)</title><rect x="13.9" y="723.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.9" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (8 samples, 0.04%)</title><rect x="17.8" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="20.8" y="718.0"></text>
</g>
<g>
<title>SpinPause (21 samples, 0.10%)</title><rect x="18.3" y="723.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="21.3" y="734.0"></text>
</g>
<g>
<title>[no_Java_frame] (12 samples, 0.06%)</title><rect x="19.7" y="771.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="22.7" y="782.0"></text>
</g>
<g>
<title>[not_walkable_Java] (22 samples, 0.10%)</title><rect x="20.3" y="771.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="23.3" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.05%)</title><rect x="20.6" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="23.6" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (10 samples, 0.05%)</title><rect x="20.6" y="739.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="23.6" y="750.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.02%)</title><rect x="20.7" y="723.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.7" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.03%)</title><rect x="21.2" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="24.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.10%)</title><rect x="21.5" y="771.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="24.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (9 samples, 0.04%)</title><rect x="21.5" y="755.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="24.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.04%)</title><rect x="21.5" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="24.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.04%)</title><rect x="21.5" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="24.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.04%)</title><rect x="21.6" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="24.6" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.03%)</title><rect x="21.6" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="24.6" y="702.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.03%)</title><rect x="21.6" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="24.6" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (11 samples, 0.05%)</title><rect x="22.0" y="755.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="25.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.05%)</title><rect x="22.0" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="25.0" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.05%)</title><rect x="22.0" y="723.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="25.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.04%)</title><rect x="22.1" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="25.1" y="718.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.04%)</title><rect x="22.2" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="25.2" y="702.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.04%)</title><rect x="22.2" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="25.2" y="686.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.02%)</title><rect x="22.4" y="659.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="25.4" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (120 samples, 0.56%)</title><rect x="22.7" y="771.0" width="6.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="25.7" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.03%)</title><rect x="22.7" y="755.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="25.7" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (6 samples, 0.03%)</title><rect x="22.7" y="739.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="25.7" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (35 samples, 0.16%)</title><rect x="23.0" y="755.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="26.0" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (33 samples, 0.15%)</title><rect x="23.1" y="739.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="26.1" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (78 samples, 0.36%)</title><rect x="25.0" y="755.0" width="4.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="28.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 0.34%)</title><rect x="25.2" y="739.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="28.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 0.34%)</title><rect x="25.2" y="723.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="28.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (73 samples, 0.34%)</title><rect x="25.3" y="707.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="28.3" y="718.0"></text>
</g>
<g>
<title>do_futex (73 samples, 0.34%)</title><rect x="25.3" y="691.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="28.3" y="702.0"></text>
</g>
<g>
<title>futex_wake (72 samples, 0.33%)</title><rect x="25.3" y="675.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="28.3" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.03%)</title><rect x="26.0" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 0.23%)</title><rect x="26.6" y="659.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.6" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (49 samples, 0.23%)</title><rect x="26.6" y="643.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.6" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (49 samples, 0.23%)</title><rect x="26.6" y="627.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (19,793 samples, 91.79%)</title><rect x="29.4" y="771.0" width="1083.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.4" y="782.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19,793 samples, 91.79%)</title><rect x="29.4" y="755.0" width="1083.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.4" y="766.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19,793 samples, 91.79%)</title><rect x="29.4" y="739.0" width="1083.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.4" y="750.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (19,706 samples, 91.39%)</title><rect x="29.4" y="723.0" width="1078.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.4" y="734.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (395 samples, 1.83%)</title><rect x="29.6" y="707.0" width="21.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.6" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (394 samples, 1.83%)</title><rect x="29.6" y="691.0" width="21.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.6" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (394 samples, 1.83%)</title><rect x="29.6" y="675.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.6" y="686.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$104/1056165277.accept (393 samples, 1.82%)</title><rect x="29.7" y="659.0" width="21.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.7" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (393 samples, 1.82%)</title><rect x="29.7" y="643.0" width="21.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.7" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (393 samples, 1.82%)</title><rect x="29.7" y="627.0" width="21.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.7" y="638.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (393 samples, 1.82%)</title><rect x="29.7" y="611.0" width="21.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.7" y="622.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (367 samples, 1.70%)</title><rect x="30.4" y="595.0" width="20.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.08%)</title><rect x="30.4" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.03%)</title><rect x="31.0" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.03%)</title><rect x="31.0" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.03%)</title><rect x="31.0" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (350 samples, 1.62%)</title><rect x="31.3" y="579.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (350 samples, 1.62%)</title><rect x="31.3" y="563.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (347 samples, 1.61%)</title><rect x="31.5" y="547.0" width="19.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (342 samples, 1.59%)</title><rect x="31.8" y="531.0" width="18.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.8" y="542.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.04%)</title><rect x="32.0" y="515.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="35.0" y="526.0"></text>
</g>
<g>
<title>__libc_send (328 samples, 1.52%)</title><rect x="32.5" y="515.0" width="17.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="35.5" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (326 samples, 1.51%)</title><rect x="32.6" y="499.0" width="17.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="35.6" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (326 samples, 1.51%)</title><rect x="32.6" y="483.0" width="17.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="35.6" y="494.0"></text>
</g>
<g>
<title>__x64_sys_sendto (324 samples, 1.50%)</title><rect x="32.7" y="467.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.7" y="478.0"></text>
</g>
<g>
<title>__sys_sendto (324 samples, 1.50%)</title><rect x="32.7" y="451.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="35.7" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (315 samples, 1.46%)</title><rect x="32.9" y="435.0" width="17.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.9" y="446.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.02%)</title><rect x="33.1" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="36.1" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (306 samples, 1.42%)</title><rect x="33.4" y="419.0" width="16.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="36.4" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (298 samples, 1.38%)</title><rect x="33.8" y="403.0" width="16.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.8" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (260 samples, 1.21%)</title><rect x="34.1" y="387.0" width="14.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.1" y="398.0"></text>
</g>
<g>
<title>tcp_write_xmit (260 samples, 1.21%)</title><rect x="34.1" y="371.0" width="14.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="37.1" y="382.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (246 samples, 1.14%)</title><rect x="34.6" y="355.0" width="13.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="37.6" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (226 samples, 1.05%)</title><rect x="35.0" y="339.0" width="12.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="38.0" y="350.0"></text>
</g>
<g>
<title>ip_output (218 samples, 1.01%)</title><rect x="35.4" y="323.0" width="11.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="38.4" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (212 samples, 0.98%)</title><rect x="35.6" y="307.0" width="11.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="38.6" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.04%)</title><rect x="35.9" y="291.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="38.9" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (196 samples, 0.91%)</title><rect x="36.4" y="291.0" width="10.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="39.4" y="302.0"></text>
</g>
<g>
<title>do_softirq.part.0 (195 samples, 0.90%)</title><rect x="36.5" y="275.0" width="10.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="39.5" y="286.0"></text>
</g>
<g>
<title>do_softirq_own_stack (188 samples, 0.87%)</title><rect x="36.9" y="259.0" width="10.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.9" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (188 samples, 0.87%)</title><rect x="36.9" y="243.0" width="10.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="39.9" y="254.0"></text>
</g>
<g>
<title>net_rx_action (185 samples, 0.86%)</title><rect x="37.0" y="227.0" width="10.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="40.0" y="238.0"></text>
</g>
<g>
<title>process_backlog (177 samples, 0.82%)</title><rect x="37.5" y="211.0" width="9.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="40.5" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (173 samples, 0.80%)</title><rect x="37.7" y="195.0" width="9.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="40.7" y="206.0"></text>
</g>
<g>
<title>ip_rcv (171 samples, 0.79%)</title><rect x="37.8" y="179.0" width="9.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="40.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (167 samples, 0.77%)</title><rect x="37.8" y="163.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="40.8" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (167 samples, 0.77%)</title><rect x="37.8" y="147.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="40.8" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (167 samples, 0.77%)</title><rect x="37.8" y="131.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="40.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (165 samples, 0.77%)</title><rect x="37.9" y="115.0" width="9.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="40.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (142 samples, 0.66%)</title><rect x="39.1" y="99.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="42.1" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (140 samples, 0.65%)</title><rect x="39.2" y="83.0" width="7.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="42.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (79 samples, 0.37%)</title><rect x="39.6" y="67.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.6" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (75 samples, 0.35%)</title><rect x="39.8" y="51.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="42.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (75 samples, 0.35%)</title><rect x="39.8" y="35.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="42.8" y="46.0"></text>
</g>
<g>
<title>tcp_ack (38 samples, 0.18%)</title><rect x="43.9" y="67.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.9" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (18 samples, 0.08%)</title><rect x="44.1" y="51.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="47.1" y="62.0"></text>
</g>
<g>
<title>skb_release_data (13 samples, 0.06%)</title><rect x="44.4" y="35.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.4" y="46.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.02%)</title><rect x="45.2" y="51.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.2" y="62.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.04%)</title><rect x="46.2" y="67.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="49.2" y="78.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.02%)</title><rect x="47.3" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="50.3" y="350.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.03%)</title><rect x="48.0" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.0" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.02%)</title><rect x="48.4" y="387.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.4" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.05%)</title><rect x="48.7" y="387.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.7" y="398.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.05%)</title><rect x="48.7" y="371.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="51.7" y="382.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.04%)</title><rect x="49.6" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="52.6" y="398.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.03%)</title><rect x="49.6" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="52.6" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (6 samples, 0.03%)</title><rect x="49.7" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.7" y="366.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.03%)</title><rect x="50.1" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="53.1" y="446.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="50.1" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.04%)</title><rect x="50.5" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.02%)</title><rect x="50.7" y="579.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.02%)</title><rect x="50.7" y="563.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.7" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.02%)</title><rect x="50.9" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="53.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$170/426943754.get (19,307 samples, 89.54%)</title><rect x="51.2" y="707.0" width="1056.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.2" y="718.0">ru/mail/polis/service/s3ponia/AsyncService$$Lambda$170/426943754.get</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$getAsync$6 (19,302 samples, 89.51%)</title><rect x="51.5" y="691.0" width="1056.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.5" y="702.0">ru/mail/polis/service/s3ponia/AsyncService.lambda$getAsync$6</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/DaoService.get (19,302 samples, 89.51%)</title><rect x="51.5" y="675.0" width="1056.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.5" y="686.0">ru/mail/polis/service/s3ponia/DaoService.get</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (19,295 samples, 89.48%)</title><rect x="51.9" y="659.0" width="1055.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.9" y="670.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (527 samples, 2.44%)</title><rect x="51.9" y="643.0" width="28.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.9" y="654.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (505 samples, 2.34%)</title><rect x="52.4" y="627.0" width="27.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.4" y="638.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (32 samples, 0.15%)</title><rect x="52.6" y="611.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.6" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (32 samples, 0.15%)</title><rect x="52.6" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.6" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (31 samples, 0.14%)</title><rect x="52.6" y="579.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (29 samples, 0.13%)</title><rect x="52.7" y="563.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.12%)</title><rect x="53.0" y="547.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.04%)</title><rect x="53.0" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$178/1664825914.compare (15 samples, 0.07%)</title><rect x="53.5" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (15 samples, 0.07%)</title><rect x="53.5" y="515.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.5" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/1688686519.compare (12 samples, 0.06%)</title><rect x="53.5" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.5" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.06%)</title><rect x="53.5" y="483.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.5" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$189/630867340.compare (12 samples, 0.06%)</title><rect x="53.5" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.5" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.06%)</title><rect x="53.5" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.02%)</title><rect x="53.6" y="435.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.02%)</title><rect x="53.6" y="419.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.6" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (468 samples, 2.17%)</title><rect x="54.3" y="611.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.3" y="622.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (468 samples, 2.17%)</title><rect x="54.3" y="595.0" width="25.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.3" y="606.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (468 samples, 2.17%)</title><rect x="54.3" y="579.0" width="25.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.3" y="590.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (468 samples, 2.17%)</title><rect x="54.3" y="563.0" width="25.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.3" y="574.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (468 samples, 2.17%)</title><rect x="54.3" y="547.0" width="25.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.3" y="558.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (468 samples, 2.17%)</title><rect x="54.3" y="531.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.3" y="542.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (449 samples, 2.08%)</title><rect x="54.3" y="515.0" width="24.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.3" y="526.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (443 samples, 2.05%)</title><rect x="54.6" y="499.0" width="24.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.6" y="510.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (443 samples, 2.05%)</title><rect x="54.6" y="483.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.6" y="494.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (443 samples, 2.05%)</title><rect x="54.6" y="467.0" width="24.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.6" y="478.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (443 samples, 2.05%)</title><rect x="54.6" y="451.0" width="24.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.6" y="462.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (443 samples, 2.05%)</title><rect x="54.6" y="435.0" width="24.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.6" y="446.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (151 samples, 0.70%)</title><rect x="54.6" y="419.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.6" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (149 samples, 0.69%)</title><rect x="54.7" y="403.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (149 samples, 0.69%)</title><rect x="54.7" y="387.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.03%)</title><rect x="54.9" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.9" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.03%)</title><rect x="54.9" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (109 samples, 0.51%)</title><rect x="55.3" y="371.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.05%)</title><rect x="55.3" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.3" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.05%)</title><rect x="55.4" y="339.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (9 samples, 0.04%)</title><rect x="55.4" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (90 samples, 0.42%)</title><rect x="55.9" y="355.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (88 samples, 0.41%)</title><rect x="56.0" y="339.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (88 samples, 0.41%)</title><rect x="56.0" y="323.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.0" y="334.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (5 samples, 0.02%)</title><rect x="56.0" y="307.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="59.0" y="318.0"></text>
</g>
<g>
<title>__pread64 (81 samples, 0.38%)</title><rect x="56.3" y="307.0" width="4.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="59.3" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (77 samples, 0.36%)</title><rect x="56.5" y="291.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="59.5" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (77 samples, 0.36%)</title><rect x="56.5" y="275.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.5" y="286.0"></text>
</g>
<g>
<title>ksys_pread64 (65 samples, 0.30%)</title><rect x="57.2" y="259.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="60.2" y="270.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.03%)</title><rect x="57.2" y="243.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.2" y="254.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.02%)</title><rect x="57.3" y="227.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.3" y="238.0"></text>
</g>
<g>
<title>vfs_read (57 samples, 0.26%)</title><rect x="57.6" y="243.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.6" y="254.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.02%)</title><rect x="57.8" y="227.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="60.8" y="238.0"></text>
</g>
<g>
<title>new_sync_read (35 samples, 0.16%)</title><rect x="58.1" y="227.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="61.1" y="238.0"></text>
</g>
<g>
<title>generic_file_read_iter (31 samples, 0.14%)</title><rect x="58.3" y="211.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="61.3" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (12 samples, 0.06%)</title><rect x="58.8" y="195.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="61.8" y="206.0"></text>
</g>
<g>
<title>copyout (9 samples, 0.04%)</title><rect x="59.0" y="179.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="62.0" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_string (9 samples, 0.04%)</title><rect x="59.0" y="163.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.0" y="174.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.03%)</title><rect x="59.5" y="195.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="62.5" y="206.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.03%)</title><rect x="59.5" y="179.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="62.5" y="190.0"></text>
</g>
<g>
<title>security_file_permission (12 samples, 0.06%)</title><rect x="60.1" y="227.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="63.1" y="238.0"></text>
</g>
<g>
<title>selinux_file_permission (8 samples, 0.04%)</title><rect x="60.3" y="211.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="63.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.03%)</title><rect x="60.8" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (22 samples, 0.10%)</title><rect x="61.3" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.3" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="61.9" y="355.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="64.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.03%)</title><rect x="62.2" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (7 samples, 0.03%)</title><rect x="62.5" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (292 samples, 1.35%)</title><rect x="62.9" y="419.0" width="15.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.9" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (292 samples, 1.35%)</title><rect x="62.9" y="403.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (292 samples, 1.35%)</title><rect x="62.9" y="387.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (241 samples, 1.12%)</title><rect x="63.0" y="371.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.0" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (82 samples, 0.38%)</title><rect x="63.0" y="355.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (82 samples, 0.38%)</title><rect x="63.0" y="339.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (70 samples, 0.32%)</title><rect x="63.0" y="323.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (70 samples, 0.32%)</title><rect x="63.0" y="307.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (12 samples, 0.06%)</title><rect x="66.9" y="323.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (12 samples, 0.06%)</title><rect x="66.9" y="307.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (151 samples, 0.70%)</title><rect x="67.5" y="355.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (149 samples, 0.69%)</title><rect x="67.6" y="339.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (149 samples, 0.69%)</title><rect x="67.6" y="323.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.6" y="334.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (8 samples, 0.04%)</title><rect x="67.8" y="307.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="70.8" y="318.0"></text>
</g>
<g>
<title>jni_GetIntField (5 samples, 0.02%)</title><rect x="68.0" y="291.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="71.0" y="302.0"></text>
</g>
<g>
<title>__pread64 (136 samples, 0.63%)</title><rect x="68.3" y="307.0" width="7.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="71.3" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (130 samples, 0.60%)</title><rect x="68.6" y="291.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="71.6" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (130 samples, 0.60%)</title><rect x="68.6" y="275.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="71.6" y="286.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.02%)</title><rect x="69.5" y="259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="72.5" y="270.0"></text>
</g>
<g>
<title>ksys_pread64 (109 samples, 0.51%)</title><rect x="69.8" y="259.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="72.8" y="270.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.06%)</title><rect x="69.9" y="243.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="72.9" y="254.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.05%)</title><rect x="70.0" y="227.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="73.0" y="238.0"></text>
</g>
<g>
<title>vfs_read (93 samples, 0.43%)</title><rect x="70.6" y="243.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="73.6" y="254.0"></text>
</g>
<g>
<title>fsnotify (8 samples, 0.04%)</title><rect x="71.0" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.0" y="238.0"></text>
</g>
<g>
<title>new_sync_read (64 samples, 0.30%)</title><rect x="71.4" y="227.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="74.4" y="238.0"></text>
</g>
<g>
<title>generic_file_read_iter (51 samples, 0.24%)</title><rect x="72.1" y="211.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="75.1" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (14 samples, 0.06%)</title><rect x="72.7" y="195.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="75.7" y="206.0"></text>
</g>
<g>
<title>copyout (10 samples, 0.05%)</title><rect x="72.9" y="179.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="75.9" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_string (10 samples, 0.05%)</title><rect x="72.9" y="163.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="75.9" y="174.0"></text>
</g>
<g>
<title>pagecache_get_page (20 samples, 0.09%)</title><rect x="73.5" y="195.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="76.5" y="206.0"></text>
</g>
<g>
<title>find_get_entry (18 samples, 0.08%)</title><rect x="73.6" y="179.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="76.6" y="190.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.04%)</title><rect x="74.1" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.1" y="174.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.02%)</title><rect x="74.3" y="147.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="77.3" y="158.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.03%)</title><rect x="74.6" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="77.6" y="206.0"></text>
</g>
<g>
<title>security_file_permission (15 samples, 0.07%)</title><rect x="74.9" y="227.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="77.9" y="238.0"></text>
</g>
<g>
<title>selinux_file_permission (13 samples, 0.06%)</title><rect x="75.0" y="211.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.02%)</title><rect x="75.8" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (39 samples, 0.18%)</title><rect x="76.2" y="371.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.2" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.06%)</title><rect x="77.0" y="355.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="80.0" y="366.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (13 samples, 0.06%)</title><rect x="77.0" y="339.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="80.0" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (10 samples, 0.05%)</title><rect x="77.2" y="323.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="80.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (9 samples, 0.04%)</title><rect x="77.8" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (10 samples, 0.05%)</title><rect x="78.3" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.3" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="78.3" y="355.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="81.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$178/1664825914.compare (19 samples, 0.09%)</title><rect x="78.9" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (18 samples, 0.08%)</title><rect x="79.0" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.0" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/1688686519.compare (14 samples, 0.06%)</title><rect x="79.1" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.1" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (14 samples, 0.06%)</title><rect x="79.1" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.1" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$189/630867340.compare (14 samples, 0.06%)</title><rect x="79.1" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.1" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (14 samples, 0.06%)</title><rect x="79.1" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.03%)</title><rect x="79.2" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.02%)</title><rect x="79.3" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (14 samples, 0.06%)</title><rect x="80.0" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.0" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.03%)</title><rect x="80.4" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.02%)</title><rect x="80.5" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.cellsIterator (18,767 samples, 87.03%)</title><rect x="80.8" y="643.0" width="1027.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.8" y="654.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.cellsIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,242 samples, 5.76%)</title><rect x="80.8" y="627.0" width="67.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.8" y="638.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,242 samples, 5.76%)</title><rect x="80.8" y="611.0" width="67.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.8" y="622.0">com/goo..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,177 samples, 5.46%)</title><rect x="81.8" y="595.0" width="64.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.8" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,177 samples, 5.46%)</title><rect x="81.8" y="579.0" width="64.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.8" y="590.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,172 samples, 5.44%)</title><rect x="81.9" y="563.0" width="64.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.9" y="574.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,172 samples, 5.44%)</title><rect x="81.9" y="547.0" width="64.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.9" y="558.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,172 samples, 5.44%)</title><rect x="81.9" y="531.0" width="64.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.9" y="542.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,172 samples, 5.44%)</title><rect x="81.9" y="515.0" width="64.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.9" y="526.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,120 samples, 5.19%)</title><rect x="81.9" y="499.0" width="61.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.9" y="510.0">com/go..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (1,097 samples, 5.09%)</title><rect x="82.9" y="483.0" width="60.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.9" y="494.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (1,097 samples, 5.09%)</title><rect x="82.9" y="467.0" width="60.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.9" y="478.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (1,097 samples, 5.09%)</title><rect x="82.9" y="451.0" width="60.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.9" y="462.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (1,097 samples, 5.09%)</title><rect x="82.9" y="435.0" width="60.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.9" y="446.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (1,097 samples, 5.09%)</title><rect x="82.9" y="419.0" width="60.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.9" y="430.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (371 samples, 1.72%)</title><rect x="82.9" y="403.0" width="20.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (366 samples, 1.70%)</title><rect x="83.2" y="387.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (365 samples, 1.69%)</title><rect x="83.3" y="371.0" width="19.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.02%)</title><rect x="83.5" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.5" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.02%)</title><rect x="83.5" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (287 samples, 1.33%)</title><rect x="84.0" y="355.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (20 samples, 0.09%)</title><rect x="84.2" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (20 samples, 0.09%)</title><rect x="84.2" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (15 samples, 0.07%)</title><rect x="84.4" y="307.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (9 samples, 0.04%)</title><rect x="84.8" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (6 samples, 0.03%)</title><rect x="84.9" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (245 samples, 1.14%)</title><rect x="85.3" y="339.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (242 samples, 1.12%)</title><rect x="85.5" y="323.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (242 samples, 1.12%)</title><rect x="85.5" y="307.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.5" y="318.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (14 samples, 0.06%)</title><rect x="85.9" y="291.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="88.9" y="302.0"></text>
</g>
<g>
<title>jni_GetIntField (10 samples, 0.05%)</title><rect x="86.1" y="275.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="89.1" y="286.0"></text>
</g>
<g>
<title>__pread64 (211 samples, 0.98%)</title><rect x="86.7" y="291.0" width="11.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="89.7" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (198 samples, 0.92%)</title><rect x="87.4" y="275.0" width="10.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.4" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (198 samples, 0.92%)</title><rect x="87.4" y="259.0" width="10.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="90.4" y="270.0"></text>
</g>
<g>
<title>ksys_pread64 (166 samples, 0.77%)</title><rect x="89.1" y="243.0" width="9.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.1" y="254.0"></text>
</g>
<g>
<title>__fget_light (22 samples, 0.10%)</title><rect x="89.3" y="227.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="92.3" y="238.0"></text>
</g>
<g>
<title>__fget (20 samples, 0.09%)</title><rect x="89.4" y="211.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.4" y="222.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.03%)</title><rect x="90.5" y="227.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="93.5" y="238.0"></text>
</g>
<g>
<title>vfs_read (134 samples, 0.62%)</title><rect x="90.9" y="227.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.9" y="238.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.02%)</title><rect x="91.3" y="211.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.3" y="222.0"></text>
</g>
<g>
<title>fsnotify (9 samples, 0.04%)</title><rect x="91.6" y="211.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.6" y="222.0"></text>
</g>
<g>
<title>new_sync_read (86 samples, 0.40%)</title><rect x="92.1" y="211.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="95.1" y="222.0"></text>
</g>
<g>
<title>generic_file_read_iter (74 samples, 0.34%)</title><rect x="92.6" y="195.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="95.6" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (26 samples, 0.12%)</title><rect x="93.7" y="179.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="96.7" y="190.0"></text>
</g>
<g>
<title>copyout (16 samples, 0.07%)</title><rect x="94.3" y="163.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="97.3" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_string (16 samples, 0.07%)</title><rect x="94.3" y="147.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="97.3" y="158.0"></text>
</g>
<g>
<title>pagecache_get_page (23 samples, 0.11%)</title><rect x="95.1" y="179.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="98.1" y="190.0"></text>
</g>
<g>
<title>find_get_entry (22 samples, 0.10%)</title><rect x="95.2" y="163.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="98.2" y="174.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.03%)</title><rect x="96.1" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="99.1" y="158.0"></text>
</g>
<g>
<title>touch_atime (5 samples, 0.02%)</title><rect x="96.4" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.4" y="190.0"></text>
</g>
<g>
<title>security_file_permission (26 samples, 0.12%)</title><rect x="96.8" y="211.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="99.8" y="222.0"></text>
</g>
<g>
<title>__fsnotify_parent (9 samples, 0.04%)</title><rect x="96.9" y="195.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="99.9" y="206.0"></text>
</g>
<g>
<title>selinux_file_permission (15 samples, 0.07%)</title><rect x="97.4" y="195.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (10 samples, 0.05%)</title><rect x="98.7" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.03%)</title><rect x="98.9" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (8 samples, 0.04%)</title><rect x="99.3" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (38 samples, 0.18%)</title><rect x="99.7" y="355.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.7" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="100.7" y="339.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="103.7" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.02%)</title><rect x="100.7" y="323.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="103.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (13 samples, 0.06%)</title><rect x="101.1" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.1" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="101.4" y="323.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="104.4" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (5 samples, 0.02%)</title><rect x="101.5" y="307.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="104.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (27 samples, 0.13%)</title><rect x="101.8" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (726 samples, 3.37%)</title><rect x="103.2" y="403.0" width="39.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.2" y="414.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.02%)</title><rect x="103.3" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.02%)</title><rect x="103.3" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (720 samples, 3.34%)</title><rect x="103.6" y="387.0" width="39.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.6" y="398.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (718 samples, 3.33%)</title><rect x="103.7" y="371.0" width="39.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.7" y="382.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.02%)</title><rect x="103.7" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (617 samples, 2.86%)</title><rect x="104.0" y="355.0" width="33.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.0" y="366.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (207 samples, 0.96%)</title><rect x="104.1" y="339.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (206 samples, 0.96%)</title><rect x="104.2" y="323.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (169 samples, 0.78%)</title><rect x="104.2" y="307.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (169 samples, 0.78%)</title><rect x="104.2" y="291.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.2" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.04%)</title><rect x="112.6" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (35 samples, 0.16%)</title><rect x="113.5" y="307.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (35 samples, 0.16%)</title><rect x="113.5" y="291.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.5" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (382 samples, 1.77%)</title><rect x="115.5" y="339.0" width="20.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (377 samples, 1.75%)</title><rect x="115.7" y="323.0" width="20.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (377 samples, 1.75%)</title><rect x="115.7" y="307.0" width="20.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.7" y="318.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (26 samples, 0.12%)</title><rect x="116.4" y="291.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="119.4" y="302.0"></text>
</g>
<g>
<title>jni_GetIntField (19 samples, 0.09%)</title><rect x="116.8" y="275.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="119.8" y="286.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (9 samples, 0.04%)</title><rect x="117.3" y="259.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="120.3" y="270.0"></text>
</g>
<g>
<title>__pread64 (322 samples, 1.49%)</title><rect x="117.8" y="291.0" width="17.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="120.8" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (303 samples, 1.41%)</title><rect x="118.8" y="275.0" width="16.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="121.8" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (303 samples, 1.41%)</title><rect x="118.8" y="259.0" width="16.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.8" y="270.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.04%)</title><rect x="120.6" y="243.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="123.6" y="254.0"></text>
</g>
<g>
<title>ksys_pread64 (263 samples, 1.22%)</title><rect x="121.0" y="243.0" width="14.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="124.0" y="254.0"></text>
</g>
<g>
<title>__fget_light (50 samples, 0.23%)</title><rect x="121.2" y="227.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="124.2" y="238.0"></text>
</g>
<g>
<title>__fget (45 samples, 0.21%)</title><rect x="121.5" y="211.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="124.5" y="222.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.02%)</title><rect x="123.9" y="227.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="126.9" y="238.0"></text>
</g>
<g>
<title>vfs_read (205 samples, 0.95%)</title><rect x="124.2" y="227.0" width="11.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="127.2" y="238.0"></text>
</g>
<g>
<title>fsnotify (12 samples, 0.06%)</title><rect x="124.9" y="211.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="127.9" y="222.0"></text>
</g>
<g>
<title>new_sync_read (141 samples, 0.65%)</title><rect x="125.6" y="211.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="128.6" y="222.0"></text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (13 samples, 0.06%)</title><rect x="126.1" y="195.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="129.1" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (117 samples, 0.54%)</title><rect x="126.8" y="195.0" width="6.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="129.8" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (39 samples, 0.18%)</title><rect x="128.0" y="179.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="131.0" y="190.0"></text>
</g>
<g>
<title>copyout (28 samples, 0.13%)</title><rect x="128.6" y="163.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="131.6" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_string (26 samples, 0.12%)</title><rect x="128.7" y="147.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.7" y="158.0"></text>
</g>
<g>
<title>pagecache_get_page (48 samples, 0.22%)</title><rect x="130.2" y="179.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="133.2" y="190.0"></text>
</g>
<g>
<title>find_get_entry (44 samples, 0.20%)</title><rect x="130.4" y="163.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="133.4" y="174.0"></text>
</g>
<g>
<title>xas_load (14 samples, 0.06%)</title><rect x="132.0" y="147.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="135.0" y="158.0"></text>
</g>
<g>
<title>touch_atime (7 samples, 0.03%)</title><rect x="132.8" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="135.8" y="190.0"></text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.02%)</title><rect x="132.9" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.9" y="174.0"></text>
</g>
<g>
<title>security_file_permission (39 samples, 0.18%)</title><rect x="133.3" y="211.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="136.3" y="222.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.03%)</title><rect x="133.3" y="195.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="136.3" y="206.0"></text>
</g>
<g>
<title>selinux_file_permission (32 samples, 0.15%)</title><rect x="133.7" y="195.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="136.7" y="206.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.03%)</title><rect x="135.4" y="291.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="138.4" y="302.0"></text>
</g>
<g>
<title>fdval (5 samples, 0.02%)</title><rect x="136.1" y="291.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="139.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (17 samples, 0.08%)</title><rect x="136.4" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.4" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.03%)</title><rect x="136.6" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.6" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.02%)</title><rect x="136.7" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.03%)</title><rect x="137.0" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (8 samples, 0.04%)</title><rect x="137.3" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.3" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.04%)</title><rect x="137.3" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.3" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.04%)</title><rect x="137.3" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (80 samples, 0.37%)</title><rect x="137.7" y="355.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.7" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.08%)</title><rect x="139.9" y="339.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="142.9" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (16 samples, 0.07%)</title><rect x="139.9" y="323.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="142.9" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (11 samples, 0.05%)</title><rect x="140.1" y="307.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="143.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (22 samples, 0.10%)</title><rect x="140.9" y="339.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.9" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.04%)</title><rect x="141.6" y="323.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="144.6" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (8 samples, 0.04%)</title><rect x="141.6" y="307.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="144.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (16 samples, 0.07%)</title><rect x="142.1" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.1" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.05%)</title><rect x="142.1" y="339.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="145.1" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.04%)</title><rect x="142.1" y="323.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="145.1" y="334.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (6 samples, 0.03%)</title><rect x="142.2" y="307.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="145.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.03%)</title><rect x="142.6" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.6" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.02%)</title><rect x="142.7" y="323.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="145.7" y="334.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (5 samples, 0.02%)</title><rect x="142.7" y="307.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="145.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$178/1664825914.compare (51 samples, 0.24%)</title><rect x="143.2" y="499.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (42 samples, 0.19%)</title><rect x="143.7" y="483.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.7" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/1688686519.compare (36 samples, 0.17%)</title><rect x="143.7" y="467.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.7" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (36 samples, 0.17%)</title><rect x="143.7" y="451.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$189/630867340.compare (35 samples, 0.16%)</title><rect x="143.8" y="435.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.8" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (35 samples, 0.16%)</title><rect x="143.8" y="419.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.09%)</title><rect x="143.9" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.07%)</title><rect x="144.1" y="387.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.1" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (12 samples, 0.06%)</title><rect x="144.2" y="371.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.compareTo (10 samples, 0.05%)</title><rect x="145.2" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.compareTo (10 samples, 0.05%)</title><rect x="145.2" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (5 samples, 0.02%)</title><rect x="145.3" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.3" y="382.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (41 samples, 0.19%)</title><rect x="146.2" y="595.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (37 samples, 0.17%)</title><rect x="146.4" y="579.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (36 samples, 0.17%)</title><rect x="146.4" y="563.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (19 samples, 0.09%)</title><rect x="146.5" y="547.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$165/1407830340.getAsBoolean (15 samples, 0.07%)</title><rect x="146.8" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.06%)</title><rect x="146.8" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.06%)</title><rect x="146.8" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (12 samples, 0.06%)</title><rect x="146.9" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (6 samples, 0.03%)</title><rect x="147.2" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (7 samples, 0.03%)</title><rect x="147.6" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (8 samples, 0.04%)</title><rect x="148.0" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.hasNext (5 samples, 0.02%)</title><rect x="148.5" y="595.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.5" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (17,248 samples, 79.99%)</title><rect x="148.8" y="627.0" width="943.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.8" y="638.0">java/util/Collections$UnmodifiableMap.forEach</text>
</g>
<g>
<title>java/util/TreeMap.forEach (17,242 samples, 79.96%)</title><rect x="148.8" y="611.0" width="943.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.8" y="622.0">java/util/TreeMap.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$175/1915527538.accept (17,233 samples, 79.92%)</title><rect x="149.3" y="595.0" width="943.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.3" y="606.0">ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$175/1915527538.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$cellsIterator$2 (17,226 samples, 79.89%)</title><rect x="149.7" y="579.0" width="942.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.7" y="590.0">ru/mail/polis/dao/s3ponia/PersistenceDAO.lambda$cellsIterator$2</text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.03%)</title><rect x="149.9" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.iterator (17,217 samples, 79.85%)</title><rect x="150.2" y="563.0" width="942.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.2" y="574.0">ru/mail/polis/dao/s3ponia/DiskTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt; (17,217 samples, 79.85%)</title><rect x="150.2" y="547.0" width="942.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.2" y="558.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex (17,217 samples, 79.85%)</title><rect x="150.2" y="531.0" width="942.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.2" y="542.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getElementIndex</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (254 samples, 1.18%)</title><rect x="153.2" y="515.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.2" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.02%)</title><rect x="156.5" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.5" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (173 samples, 0.80%)</title><rect x="156.8" y="499.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (42 samples, 0.19%)</title><rect x="164.0" y="483.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (20 samples, 0.09%)</title><rect x="164.8" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.8" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (7 samples, 0.03%)</title><rect x="165.9" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (7 samples, 0.03%)</title><rect x="166.3" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.3" y="510.0"></text>
</g>
<g>
<title>java/lang/Byte.compare (7 samples, 0.03%)</title><rect x="166.3" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.03%)</title><rect x="166.7" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.02%)</title><rect x="166.8" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (16,908 samples, 78.41%)</title><rect x="167.1" y="515.0" width="925.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.1" y="526.0">ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (16,901 samples, 78.38%)</title><rect x="167.4" y="499.0" width="924.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.4" y="510.0">ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (16,897 samples, 78.36%)</title><rect x="167.7" y="483.0" width="924.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.7" y="494.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (6,138 samples, 28.47%)</title><rect x="167.7" y="467.0" width="335.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.7" y="478.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCell...</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (36 samples, 0.17%)</title><rect x="167.8" y="451.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (6 samples, 0.03%)</title><rect x="169.8" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6,089 samples, 28.24%)</title><rect x="170.3" y="451.0" width="333.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.3" y="462.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6,083 samples, 28.21%)</title><rect x="170.7" y="435.0" width="332.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.7" y="446.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (204 samples, 0.95%)</title><rect x="176.2" y="419.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.2" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (204 samples, 0.95%)</title><rect x="176.2" y="403.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (6 samples, 0.03%)</title><rect x="181.4" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.4" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (99 samples, 0.46%)</title><rect x="181.8" y="387.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.8" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (68 samples, 0.32%)</title><rect x="182.7" y="371.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (68 samples, 0.32%)</title><rect x="182.7" y="355.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.7" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.03%)</title><rect x="185.3" y="339.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="188.3" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.02%)</title><rect x="185.7" y="339.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="188.7" y="350.0"></text>
</g>
<g>
<title>unsafe_arraycopy (6 samples, 0.03%)</title><rect x="186.1" y="339.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="189.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/SharedSecrets.getJavaLangAccess (14 samples, 0.06%)</title><rect x="186.4" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (147 samples, 0.68%)</title><rect x="187.4" y="419.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.4" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (146 samples, 0.68%)</title><rect x="187.5" y="403.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.5" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (85 samples, 0.39%)</title><rect x="190.8" y="387.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.8" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (42 samples, 0.19%)</title><rect x="193.0" y="371.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (42 samples, 0.19%)</title><rect x="193.0" y="355.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4,377 samples, 20.30%)</title><rect x="195.6" y="419.0" width="239.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.6" y="430.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (354 samples, 1.64%)</title><rect x="198.2" y="403.0" width="19.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.2" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (307 samples, 1.42%)</title><rect x="200.8" y="387.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="203.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (267 samples, 1.24%)</title><rect x="202.8" y="371.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.8" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (141 samples, 0.65%)</title><rect x="209.7" y="355.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="212.7" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (33 samples, 0.15%)</title><rect x="209.7" y="339.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (105 samples, 0.49%)</title><rect x="211.7" y="339.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3,650 samples, 16.93%)</title><rect x="217.8" y="403.0" width="199.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.8" y="414.0">sun/nio/ch/IOUtil.readInto..</text>
</g>
<g>
<title>java/nio/Buffer.position (16 samples, 0.07%)</title><rect x="221.2" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.2" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.08%)</title><rect x="222.2" y="387.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.2" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.06%)</title><rect x="222.3" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.3" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (14 samples, 0.06%)</title><rect x="222.3" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="225.3" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (14 samples, 0.06%)</title><rect x="222.3" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3,552 samples, 16.47%)</title><rect x="223.1" y="387.0" width="194.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.1" y="398.0">sun/nio/ch/FileDispatcher..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3,543 samples, 16.43%)</title><rect x="223.6" y="371.0" width="193.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.6" y="382.0">sun/nio/ch/FileDispatcher..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (270 samples, 1.25%)</title><rect x="228.8" y="355.0" width="14.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="231.8" y="366.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (11 samples, 0.05%)</title><rect x="231.7" y="339.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="234.7" y="350.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (12 samples, 0.06%)</title><rect x="232.3" y="339.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="235.3" y="350.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (11 samples, 0.05%)</title><rect x="232.9" y="339.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="235.9" y="350.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (9 samples, 0.04%)</title><rect x="233.5" y="339.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="236.5" y="350.0"></text>
</g>
<g>
<title>fdval (6 samples, 0.03%)</title><rect x="234.0" y="339.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="237.0" y="350.0"></text>
</g>
<g>
<title>jni_GetIntField (162 samples, 0.75%)</title><rect x="234.4" y="339.0" width="8.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="237.4" y="350.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (73 samples, 0.34%)</title><rect x="239.2" y="323.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="242.2" y="334.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (7 samples, 0.03%)</title><rect x="243.2" y="339.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="246.2" y="350.0"></text>
</g>
<g>
<title>__pread64 (3,051 samples, 14.15%)</title><rect x="243.6" y="355.0" width="167.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="246.6" y="366.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,823 samples, 13.09%)</title><rect x="256.1" y="339.0" width="154.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="259.1" y="350.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (2,823 samples, 13.09%)</title><rect x="256.1" y="323.0" width="154.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="259.1" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (46 samples, 0.21%)</title><rect x="273.1" y="307.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="276.1" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (2,465 samples, 11.43%)</title><rect x="275.7" y="307.0" width="134.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.7" y="318.0">ksys_pread64</text>
</g>
<g>
<title>__fget_light (349 samples, 1.62%)</title><rect x="276.9" y="291.0" width="19.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="279.9" y="302.0"></text>
</g>
<g>
<title>__fget (293 samples, 1.36%)</title><rect x="280.0" y="275.0" width="16.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.0" y="286.0"></text>
</g>
<g>
<title>fput_many (50 samples, 0.23%)</title><rect x="296.2" y="291.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="299.2" y="302.0"></text>
</g>
<g>
<title>vfs_read (2,040 samples, 9.46%)</title><rect x="298.9" y="291.0" width="111.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="301.9" y="302.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (30 samples, 0.14%)</title><rect x="302.3" y="275.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="305.3" y="286.0"></text>
</g>
<g>
<title>__vfs_read (42 samples, 0.19%)</title><rect x="303.9" y="275.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.9" y="286.0"></text>
</g>
<g>
<title>fsnotify (182 samples, 0.84%)</title><rect x="306.2" y="275.0" width="10.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="309.2" y="286.0"></text>
</g>
<g>
<title>new_sync_read (1,382 samples, 6.41%)</title><rect x="316.2" y="275.0" width="75.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="319.2" y="286.0">new_sync..</text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (133 samples, 0.62%)</title><rect x="321.4" y="259.0" width="7.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.4" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (1,139 samples, 5.28%)</title><rect x="328.7" y="259.0" width="62.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="331.7" y="270.0">generi..</text>
</g>
<g>
<title>_cond_resched (6 samples, 0.03%)</title><rect x="345.0" y="243.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="348.0" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (425 samples, 1.97%)</title><rect x="345.3" y="243.0" width="23.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="348.3" y="254.0">c..</text>
</g>
<g>
<title>_cond_resched (20 samples, 0.09%)</title><rect x="349.9" y="227.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="352.9" y="238.0"></text>
</g>
<g>
<title>rcu_all_qs (10 samples, 0.05%)</title><rect x="350.5" y="211.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="353.5" y="222.0"></text>
</g>
<g>
<title>copyout (321 samples, 1.49%)</title><rect x="351.0" y="227.0" width="17.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="354.0" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_string (306 samples, 1.42%)</title><rect x="351.9" y="211.0" width="16.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="354.9" y="222.0"></text>
</g>
<g>
<title>mark_page_accessed (22 samples, 0.10%)</title><rect x="368.6" y="243.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="371.6" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (270 samples, 1.25%)</title><rect x="369.8" y="243.0" width="14.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="372.8" y="254.0"></text>
</g>
<g>
<title>find_get_entry (247 samples, 1.15%)</title><rect x="371.1" y="227.0" width="13.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="374.1" y="238.0"></text>
</g>
<g>
<title>xas_load (102 samples, 0.47%)</title><rect x="379.0" y="211.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="382.0" y="222.0"></text>
</g>
<g>
<title>xas_start (36 samples, 0.17%)</title><rect x="382.6" y="195.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.6" y="206.0"></text>
</g>
<g>
<title>touch_atime (118 samples, 0.55%)</title><rect x="384.6" y="243.0" width="6.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.6" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (34 samples, 0.16%)</title><rect x="389.2" y="227.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="392.2" y="238.0"></text>
</g>
<g>
<title>iov_iter_init (14 samples, 0.06%)</title><rect x="391.0" y="259.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="394.0" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.02%)</title><rect x="391.8" y="275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="394.8" y="286.0"></text>
</g>
<g>
<title>security_file_permission (338 samples, 1.57%)</title><rect x="392.1" y="275.0" width="18.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="395.1" y="286.0"></text>
</g>
<g>
<title>__fsnotify_parent (60 samples, 0.28%)</title><rect x="395.4" y="259.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="398.4" y="270.0"></text>
</g>
<g>
<title>selinux_file_permission (218 samples, 1.01%)</title><rect x="398.6" y="259.0" width="12.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.6" y="270.0"></text>
</g>
<g>
<title>__inode_security_revalidate (26 samples, 0.12%)</title><rect x="408.9" y="243.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="411.9" y="254.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.02%)</title><rect x="410.0" y="227.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.0" y="238.0"></text>
</g>
<g>
<title>avc_policy_seqno (5 samples, 0.02%)</title><rect x="410.3" y="243.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="413.3" y="254.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (40 samples, 0.19%)</title><rect x="410.6" y="355.0" width="2.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="413.6" y="366.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (42 samples, 0.19%)</title><rect x="412.8" y="355.0" width="2.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="415.8" y="366.0"></text>
</g>
<g>
<title>convertReturnVal (20 samples, 0.09%)</title><rect x="415.1" y="355.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="418.1" y="366.0"></text>
</g>
<g>
<title>fdval (21 samples, 0.10%)</title><rect x="416.2" y="355.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="419.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (143 samples, 0.66%)</title><rect x="417.5" y="403.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.5" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (66 samples, 0.31%)</title><rect x="419.0" y="387.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.0" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (50 samples, 0.23%)</title><rect x="419.9" y="371.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (50 samples, 0.23%)</title><rect x="422.6" y="387.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (5 samples, 0.02%)</title><rect x="425.1" y="371.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (179 samples, 0.83%)</title><rect x="425.4" y="403.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (87 samples, 0.40%)</title><rect x="429.5" y="387.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.5" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (87 samples, 0.40%)</title><rect x="429.5" y="371.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (57 samples, 0.26%)</title><rect x="431.2" y="355.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (16 samples, 0.07%)</title><rect x="434.3" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.3" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (792 samples, 3.67%)</title><rect x="435.1" y="419.0" width="43.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.1" y="430.0">sun/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (164 samples, 0.76%)</title><rect x="457.2" y="403.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="460.2" y="414.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (6 samples, 0.03%)</title><rect x="457.4" y="387.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="460.4" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (133 samples, 0.62%)</title><rect x="457.7" y="387.0" width="7.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="460.7" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (89 samples, 0.41%)</title><rect x="459.1" y="371.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="462.1" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (6 samples, 0.03%)</title><rect x="463.6" y="355.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="466.6" y="366.0"></text>
</g>
<g>
<title>SpinPause (17 samples, 0.08%)</title><rect x="464.0" y="371.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="467.0" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (21 samples, 0.10%)</title><rect x="465.0" y="387.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="468.0" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (15 samples, 0.07%)</title><rect x="465.0" y="371.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="468.0" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (5 samples, 0.02%)</title><rect x="465.8" y="371.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="468.8" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="466.2" y="403.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="469.2" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (5 samples, 0.02%)</title><rect x="466.2" y="387.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="469.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (217 samples, 1.01%)</title><rect x="466.6" y="403.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.6" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (121 samples, 0.56%)</title><rect x="471.6" y="387.0" width="6.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="474.6" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (113 samples, 0.52%)</title><rect x="472.0" y="371.0" width="6.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="475.0" y="382.0"></text>
</g>
<g>
<title>pthread_self@GLIBC_2.2.5 (5 samples, 0.02%)</title><rect x="478.2" y="387.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="481.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (451 samples, 2.09%)</title><rect x="478.5" y="419.0" width="24.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.5" y="430.0">s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (138 samples, 0.64%)</title><rect x="493.4" y="403.0" width="7.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="496.4" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (120 samples, 0.56%)</title><rect x="493.9" y="387.0" width="6.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="496.9" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (69 samples, 0.32%)</title><rect x="495.7" y="371.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="498.7" y="382.0"></text>
</g>
<g>
<title>SpinPause (17 samples, 0.08%)</title><rect x="499.5" y="371.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="502.5" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.04%)</title><rect x="500.4" y="387.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="503.4" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.03%)</title><rect x="501.0" y="403.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="504.0" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (5 samples, 0.02%)</title><rect x="501.0" y="387.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="504.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (33 samples, 0.15%)</title><rect x="501.4" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.4" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (33 samples, 0.15%)</title><rect x="501.4" y="387.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="504.4" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (31 samples, 0.14%)</title><rect x="501.5" y="371.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="504.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.03%)</title><rect x="503.2" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (10,759 samples, 49.90%)</title><rect x="503.6" y="467.0" width="588.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.6" y="478.0">ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (117 samples, 0.54%)</title><rect x="503.8" y="451.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.8" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (13 samples, 0.06%)</title><rect x="504.0" y="435.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="507.0" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.05%)</title><rect x="504.2" y="419.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="507.2" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (10 samples, 0.05%)</title><rect x="504.2" y="403.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="507.2" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.04%)</title><rect x="504.2" y="387.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="507.2" y="398.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (8 samples, 0.04%)</title><rect x="504.2" y="371.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="507.2" y="382.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.03%)</title><rect x="504.3" y="355.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="507.3" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (99 samples, 0.46%)</title><rect x="504.8" y="435.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.8" y="446.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.02%)</title><rect x="505.2" y="419.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="508.2" y="430.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.02%)</title><rect x="505.2" y="403.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="508.2" y="414.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.02%)</title><rect x="505.2" y="387.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="508.2" y="398.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.02%)</title><rect x="505.2" y="371.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="508.2" y="382.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (5 samples, 0.02%)</title><rect x="505.2" y="355.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="508.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (85 samples, 0.39%)</title><rect x="505.5" y="419.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.5" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (14 samples, 0.06%)</title><rect x="509.4" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.02%)</title><rect x="509.6" y="387.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="509.8" y="387.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.02%)</title><rect x="509.9" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10,636 samples, 49.33%)</title><rect x="510.3" y="451.0" width="582.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.3" y="462.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (7 samples, 0.03%)</title><rect x="511.5" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.5" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (6 samples, 0.03%)</title><rect x="511.5" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10,607 samples, 49.19%)</title><rect x="511.9" y="435.0" width="580.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="514.9" y="446.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (86 samples, 0.40%)</title><rect x="512.7" y="419.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.7" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (75 samples, 0.35%)</title><rect x="513.3" y="403.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.3" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (50 samples, 0.23%)</title><rect x="514.7" y="387.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.7" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (33 samples, 0.15%)</title><rect x="515.6" y="371.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (30 samples, 0.14%)</title><rect x="515.8" y="355.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (8,966 samples, 41.58%)</title><rect x="517.4" y="419.0" width="490.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.4" y="430.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3,104 samples, 14.40%)</title><rect x="521.0" y="403.0" width="169.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.0" y="414.0">java/nio/HeapByteBuffe..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3,096 samples, 14.36%)</title><rect x="521.4" y="387.0" width="169.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.4" y="398.0">java/nio/DirectByteBuf..</text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2,489 samples, 11.54%)</title><rect x="521.9" y="371.0" width="136.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.9" y="382.0">java/nio/ByteBuff..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2,484 samples, 11.52%)</title><rect x="522.2" y="355.0" width="135.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.2" y="366.0">java/nio/DirectBy..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.04%)</title><rect x="644.0" y="339.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="647.0" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (7 samples, 0.03%)</title><rect x="644.0" y="323.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="647.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (31 samples, 0.14%)</title><rect x="644.5" y="339.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.5" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (59 samples, 0.27%)</title><rect x="646.2" y="339.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.02%)</title><rect x="649.4" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (13 samples, 0.06%)</title><rect x="649.7" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (14 samples, 0.06%)</title><rect x="650.6" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.6" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (24 samples, 0.11%)</title><rect x="651.4" y="339.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (14 samples, 0.06%)</title><rect x="652.7" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (12 samples, 0.06%)</title><rect x="653.5" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.03%)</title><rect x="654.5" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (17 samples, 0.08%)</title><rect x="655.0" y="339.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.04%)</title><rect x="655.9" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (28 samples, 0.13%)</title><rect x="656.3" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (28 samples, 0.13%)</title><rect x="658.1" y="371.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.1" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (28 samples, 0.13%)</title><rect x="658.1" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.1" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (10 samples, 0.05%)</title><rect x="658.3" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.3" y="350.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.04%)</title><rect x="658.9" y="339.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="661.9" y="350.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (6 samples, 0.03%)</title><rect x="659.3" y="339.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="662.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (569 samples, 2.64%)</title><rect x="659.7" y="371.0" width="31.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.7" y="382.0">jd..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (566 samples, 2.62%)</title><rect x="659.8" y="355.0" width="31.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.8" y="366.0">jd..</text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (12 samples, 0.06%)</title><rect x="685.6" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (83 samples, 0.38%)</title><rect x="686.3" y="339.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (82 samples, 0.38%)</title><rect x="686.3" y="323.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.3" y="334.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (23 samples, 0.11%)</title><rect x="689.6" y="307.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5,506 samples, 25.53%)</title><rect x="690.9" y="403.0" width="301.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.9" y="414.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.10%)</title><rect x="691.6" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.6" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.10%)</title><rect x="691.6" y="371.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (22 samples, 0.10%)</title><rect x="691.6" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.6" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (16 samples, 0.07%)</title><rect x="692.0" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5,470 samples, 25.37%)</title><rect x="692.8" y="387.0" width="299.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.8" y="398.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5,462 samples, 25.33%)</title><rect x="693.3" y="371.0" width="298.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.3" y="382.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (396 samples, 1.84%)</title><rect x="702.2" y="355.0" width="21.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="705.2" y="366.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (12 samples, 0.06%)</title><rect x="705.4" y="339.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="708.4" y="350.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (25 samples, 0.12%)</title><rect x="706.0" y="339.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="709.0" y="350.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (23 samples, 0.11%)</title><rect x="707.4" y="339.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="710.4" y="350.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (13 samples, 0.06%)</title><rect x="708.7" y="339.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="711.7" y="350.0"></text>
</g>
<g>
<title>fdval (12 samples, 0.06%)</title><rect x="709.4" y="339.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="712.4" y="350.0"></text>
</g>
<g>
<title>jni_GetIntField (241 samples, 1.12%)</title><rect x="710.0" y="339.0" width="13.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="713.0" y="350.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (94 samples, 0.44%)</title><rect x="718.1" y="323.0" width="5.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="721.1" y="334.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ul, false&gt;(_jobject*) (12 samples, 0.06%)</title><rect x="723.2" y="339.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="726.2" y="350.0"></text>
</g>
<g>
<title>__pread64 (4,730 samples, 21.94%)</title><rect x="723.9" y="355.0" width="258.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="726.9" y="366.0">__pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4,379 samples, 20.31%)</title><rect x="743.1" y="339.0" width="239.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="746.1" y="350.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (4,379 samples, 20.31%)</title><rect x="743.1" y="323.0" width="239.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.1" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (84 samples, 0.39%)</title><rect x="769.0" y="307.0" width="4.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.0" y="318.0"></text>
</g>
<g>
<title>ksys_pread64 (3,818 samples, 17.71%)</title><rect x="773.8" y="307.0" width="208.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="776.8" y="318.0">ksys_pread64</text>
</g>
<g>
<title>__fget_light (536 samples, 2.49%)</title><rect x="776.1" y="291.0" width="29.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="779.1" y="302.0">__..</text>
</g>
<g>
<title>__fget (462 samples, 2.14%)</title><rect x="780.2" y="275.0" width="25.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="783.2" y="286.0">_..</text>
</g>
<g>
<title>fput (7 samples, 0.03%)</title><rect x="805.5" y="291.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="808.5" y="302.0"></text>
</g>
<g>
<title>fput_many (84 samples, 0.39%)</title><rect x="805.8" y="291.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="808.8" y="302.0"></text>
</g>
<g>
<title>vfs_read (3,148 samples, 14.60%)</title><rect x="810.4" y="291.0" width="172.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="813.4" y="302.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (53 samples, 0.25%)</title><rect x="816.7" y="275.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="819.7" y="286.0"></text>
</g>
<g>
<title>__vfs_read (62 samples, 0.29%)</title><rect x="819.6" y="275.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="822.6" y="286.0"></text>
</g>
<g>
<title>fsnotify (250 samples, 1.16%)</title><rect x="823.0" y="275.0" width="13.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="826.0" y="286.0"></text>
</g>
<g>
<title>new_sync_read (2,144 samples, 9.94%)</title><rect x="836.7" y="275.0" width="117.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="839.7" y="286.0">new_sync_read</text>
</g>
<g>
<title>ext4_file_read_iter?[ext4] (177 samples, 0.82%)</title><rect x="844.0" y="259.0" width="9.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="847.0" y="270.0"></text>
</g>
<g>
<title>generic_file_read_iter (1,798 samples, 8.34%)</title><rect x="853.7" y="259.0" width="98.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="856.7" y="270.0">generic_file..</text>
</g>
<g>
<title>_cond_resched (6 samples, 0.03%)</title><rect x="875.3" y="243.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="878.3" y="254.0"></text>
</g>
<g>
<title>copy_page_to_iter (611 samples, 2.83%)</title><rect x="875.7" y="243.0" width="33.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="878.7" y="254.0">co..</text>
</g>
<g>
<title>_cond_resched (18 samples, 0.08%)</title><rect x="883.8" y="227.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="886.8" y="238.0"></text>
</g>
<g>
<title>rcu_all_qs (8 samples, 0.04%)</title><rect x="884.3" y="211.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="887.3" y="222.0"></text>
</g>
<g>
<title>copyout (445 samples, 2.06%)</title><rect x="884.8" y="227.0" width="24.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="887.8" y="238.0">c..</text>
</g>
<g>
<title>copy_user_generic_string (424 samples, 1.97%)</title><rect x="885.9" y="211.0" width="23.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="888.9" y="222.0">c..</text>
</g>
<g>
<title>mark_page_accessed (37 samples, 0.17%)</title><rect x="909.1" y="243.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="912.1" y="254.0"></text>
</g>
<g>
<title>pagecache_get_page (586 samples, 2.72%)</title><rect x="911.1" y="243.0" width="32.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.1" y="254.0">pa..</text>
</g>
<g>
<title>find_get_entry (544 samples, 2.52%)</title><rect x="913.4" y="227.0" width="29.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="916.4" y="238.0">fi..</text>
</g>
<g>
<title>PageHuge (10 samples, 0.05%)</title><rect x="930.7" y="211.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="933.7" y="222.0"></text>
</g>
<g>
<title>xas_load (218 samples, 1.01%)</title><rect x="931.3" y="211.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="934.3" y="222.0"></text>
</g>
<g>
<title>xas_start (59 samples, 0.27%)</title><rect x="940.0" y="195.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="943.0" y="206.0"></text>
</g>
<g>
<title>touch_atime (163 samples, 0.76%)</title><rect x="943.2" y="243.0" width="8.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="946.2" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (42 samples, 0.19%)</title><rect x="949.8" y="227.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="952.8" y="238.0"></text>
</g>
<g>
<title>iov_iter_init (35 samples, 0.16%)</title><rect x="952.1" y="259.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="955.1" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (15 samples, 0.07%)</title><rect x="954.0" y="275.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="957.0" y="286.0"></text>
</g>
<g>
<title>security_file_permission (509 samples, 2.36%)</title><rect x="954.9" y="275.0" width="27.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="957.9" y="286.0">s..</text>
</g>
<g>
<title>__fsnotify_parent (80 samples, 0.37%)</title><rect x="959.4" y="259.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.4" y="270.0"></text>
</g>
<g>
<title>selinux_file_permission (344 samples, 1.60%)</title><rect x="963.9" y="259.0" width="18.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="966.9" y="270.0"></text>
</g>
<g>
<title>__inode_security_revalidate (43 samples, 0.20%)</title><rect x="980.3" y="243.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="983.3" y="254.0"></text>
</g>
<g>
<title>_cond_resched (8 samples, 0.04%)</title><rect x="982.2" y="227.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="985.2" y="238.0"></text>
</g>
<g>
<title>rcu_all_qs (7 samples, 0.03%)</title><rect x="982.3" y="211.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="985.3" y="222.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (49 samples, 0.23%)</title><rect x="982.7" y="355.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="985.7" y="366.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (57 samples, 0.26%)</title><rect x="985.4" y="355.0" width="3.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="988.4" y="366.0"></text>
</g>
<g>
<title>convertReturnVal (34 samples, 0.16%)</title><rect x="988.5" y="355.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="991.5" y="366.0"></text>
</g>
<g>
<title>fdval (30 samples, 0.14%)</title><rect x="990.4" y="355.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="993.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (227 samples, 1.05%)</title><rect x="992.2" y="403.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.2" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (92 samples, 0.43%)</title><rect x="994.8" y="387.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.8" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (67 samples, 0.31%)</title><rect x="996.2" y="371.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="999.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (87 samples, 0.40%)</title><rect x="999.8" y="387.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.8" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="1004.0" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="1004.0" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="1004.0" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.0" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.04%)</title><rect x="1004.0" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (63 samples, 0.29%)</title><rect x="1004.6" y="403.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1007.6" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (59 samples, 0.27%)</title><rect x="1004.7" y="387.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1007.7" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (59 samples, 0.27%)</title><rect x="1004.7" y="371.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1007.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1,200 samples, 5.57%)</title><rect x="1008.0" y="419.0" width="65.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1011.0" y="430.0">sun/nio..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (246 samples, 1.14%)</title><rect x="1041.0" y="403.0" width="13.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1044.0" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (198 samples, 0.92%)</title><rect x="1041.6" y="387.0" width="10.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1044.6" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (117 samples, 0.54%)</title><rect x="1044.4" y="371.0" width="6.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1047.4" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (5 samples, 0.02%)</title><rect x="1050.5" y="355.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1053.5" y="366.0"></text>
</g>
<g>
<title>SpinPause (29 samples, 0.13%)</title><rect x="1050.8" y="371.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1053.8" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (30 samples, 0.14%)</title><rect x="1052.4" y="387.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1055.4" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (19 samples, 0.09%)</title><rect x="1052.4" y="371.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1055.4" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (11 samples, 0.05%)</title><rect x="1053.5" y="371.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1056.5" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromJavaNoAsyncException::~ThreadInVMfromJavaNoAsyncException() (5 samples, 0.02%)</title><rect x="1054.1" y="387.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1057.1" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.03%)</title><rect x="1054.5" y="403.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1057.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (342 samples, 1.59%)</title><rect x="1055.0" y="403.0" width="18.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.0" y="414.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (5 samples, 0.02%)</title><rect x="1062.4" y="387.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1065.4" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (194 samples, 0.90%)</title><rect x="1062.8" y="387.0" width="10.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1065.8" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (181 samples, 0.84%)</title><rect x="1063.4" y="371.0" width="9.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1066.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (340 samples, 1.58%)</title><rect x="1073.7" y="419.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1076.7" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (210 samples, 0.97%)</title><rect x="1075.4" y="403.0" width="11.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1078.4" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (183 samples, 0.85%)</title><rect x="1075.7" y="387.0" width="10.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1078.7" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (119 samples, 0.55%)</title><rect x="1078.0" y="371.0" width="6.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.0" y="382.0"></text>
</g>
<g>
<title>ObjectMonitor::NotRunnable(Thread*, Thread*) (10 samples, 0.05%)</title><rect x="1083.9" y="355.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1086.9" y="366.0"></text>
</g>
<g>
<title>SpinPause (23 samples, 0.11%)</title><rect x="1084.5" y="371.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1087.5" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.08%)</title><rect x="1085.8" y="387.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1088.8" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (11 samples, 0.05%)</title><rect x="1086.1" y="371.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (100 samples, 0.46%)</title><rect x="1086.8" y="403.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.8" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (100 samples, 0.46%)</title><rect x="1086.8" y="387.0" width="5.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.8" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (87 samples, 0.40%)</title><rect x="1087.4" y="371.0" width="4.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1090.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.iterator (6 samples, 0.03%)</title><rect x="1092.4" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.4" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.03%)</title><rect x="1092.4" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.03%)</title><rect x="1092.4" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (6 samples, 0.03%)</title><rect x="1092.4" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="1092.4" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.4" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="1092.4" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.03%)</title><rect x="1092.7" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.03%)</title><rect x="1092.7" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.03%)</title><rect x="1092.7" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (11 samples, 0.05%)</title><rect x="1093.0" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (7 samples, 0.03%)</title><rect x="1093.2" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (5 samples, 0.02%)</title><rect x="1093.4" y="595.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (163 samples, 0.76%)</title><rect x="1093.6" y="627.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (163 samples, 0.76%)</title><rect x="1093.6" y="611.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (163 samples, 0.76%)</title><rect x="1093.6" y="595.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.6" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (13 samples, 0.06%)</title><rect x="1093.6" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.6" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (13 samples, 0.06%)</title><rect x="1093.6" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.6" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (13 samples, 0.06%)</title><rect x="1093.6" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.05%)</title><rect x="1093.7" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.05%)</title><rect x="1093.7" y="515.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$178/1664825914.compare (11 samples, 0.05%)</title><rect x="1093.7" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (11 samples, 0.05%)</title><rect x="1093.7" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.7" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$205/1688686519.compare (9 samples, 0.04%)</title><rect x="1093.7" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.7" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.04%)</title><rect x="1093.7" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$189/630867340.compare (9 samples, 0.04%)</title><rect x="1093.7" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.7" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 0.04%)</title><rect x="1093.7" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="1093.7" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="1093.7" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.7" y="398.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.04%)</title><rect x="1093.7" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.7" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (150 samples, 0.70%)</title><rect x="1094.3" y="579.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1097.3" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (150 samples, 0.70%)</title><rect x="1094.3" y="563.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.3" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (150 samples, 0.70%)</title><rect x="1094.3" y="547.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (150 samples, 0.70%)</title><rect x="1094.3" y="531.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (150 samples, 0.70%)</title><rect x="1094.3" y="515.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (150 samples, 0.70%)</title><rect x="1094.3" y="499.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (145 samples, 0.67%)</title><rect x="1094.3" y="483.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1097.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (144 samples, 0.67%)</title><rect x="1094.4" y="467.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.next (144 samples, 0.67%)</title><rect x="1094.4" y="451.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$DiskTableIterator.getLazyCell (144 samples, 0.67%)</title><rect x="1094.4" y="435.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable.readLazyCell (144 samples, 0.67%)</title><rect x="1094.4" y="419.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.&lt;init&gt; (144 samples, 0.67%)</title><rect x="1094.4" y="403.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readKey (54 samples, 0.25%)</title><rect x="1094.4" y="387.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (53 samples, 0.25%)</title><rect x="1094.5" y="371.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (53 samples, 0.25%)</title><rect x="1094.5" y="355.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.5" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (39 samples, 0.18%)</title><rect x="1094.6" y="339.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (32 samples, 0.15%)</title><rect x="1094.8" y="323.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (32 samples, 0.15%)</title><rect x="1094.8" y="307.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 0.15%)</title><rect x="1094.8" y="291.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.8" y="302.0"></text>
</g>
<g>
<title>__pread64 (26 samples, 0.12%)</title><rect x="1095.0" y="275.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1098.0" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.11%)</title><rect x="1095.2" y="259.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1098.2" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.11%)</title><rect x="1095.2" y="243.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1098.2" y="254.0"></text>
</g>
<g>
<title>ksys_pread64 (20 samples, 0.09%)</title><rect x="1095.3" y="227.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1098.3" y="238.0"></text>
</g>
<g>
<title>vfs_read (18 samples, 0.08%)</title><rect x="1095.4" y="211.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1098.4" y="222.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.06%)</title><rect x="1095.6" y="195.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1098.6" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (10 samples, 0.05%)</title><rect x="1095.7" y="179.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1098.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.03%)</title><rect x="1096.7" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (6 samples, 0.03%)</title><rect x="1097.0" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1100.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/DiskTable$LazyCell.readValue (90 samples, 0.42%)</title><rect x="1097.4" y="387.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1100.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (89 samples, 0.41%)</title><rect x="1097.4" y="371.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (89 samples, 0.41%)</title><rect x="1097.4" y="355.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1100.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (68 samples, 0.32%)</title><rect x="1097.4" y="339.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1100.4" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (27 samples, 0.13%)</title><rect x="1097.4" y="323.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1100.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (27 samples, 0.13%)</title><rect x="1097.4" y="307.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (23 samples, 0.11%)</title><rect x="1097.4" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1100.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (23 samples, 0.11%)</title><rect x="1097.4" y="275.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (38 samples, 0.18%)</title><rect x="1098.9" y="323.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (37 samples, 0.17%)</title><rect x="1098.9" y="307.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (37 samples, 0.17%)</title><rect x="1098.9" y="291.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.9" y="302.0"></text>
</g>
<g>
<title>__pread64 (33 samples, 0.15%)</title><rect x="1099.0" y="275.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1102.0" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.15%)</title><rect x="1099.1" y="259.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1102.1" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.15%)</title><rect x="1099.1" y="243.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1102.1" y="254.0"></text>
</g>
<g>
<title>ksys_pread64 (24 samples, 0.11%)</title><rect x="1099.5" y="227.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1102.5" y="238.0"></text>
</g>
<g>
<title>vfs_read (19 samples, 0.09%)</title><rect x="1099.8" y="211.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1102.8" y="222.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.07%)</title><rect x="1099.9" y="195.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1102.9" y="206.0"></text>
</g>
<g>
<title>generic_file_read_iter (15 samples, 0.07%)</title><rect x="1099.9" y="179.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1102.9" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.03%)</title><rect x="1100.2" y="163.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1103.2" y="174.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.03%)</title><rect x="1100.2" y="147.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1103.2" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_string (6 samples, 0.03%)</title><rect x="1100.2" y="131.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1103.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (17 samples, 0.08%)</title><rect x="1101.1" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1104.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.03%)</title><rect x="1101.7" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1104.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/PersistenceDAO$$Lambda$178/1664825914.compare (5 samples, 0.02%)</title><rect x="1102.3" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1105.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/ICell.compareTo (5 samples, 0.02%)</title><rect x="1102.3" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/MemTable.iterator (95 samples, 0.44%)</title><rect x="1102.6" y="627.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.6" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (90 samples, 0.42%)</title><rect x="1102.6" y="611.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (90 samples, 0.42%)</title><rect x="1102.6" y="595.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (90 samples, 0.42%)</title><rect x="1102.6" y="579.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1105.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (90 samples, 0.42%)</title><rect x="1102.6" y="563.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (83 samples, 0.38%)</title><rect x="1102.9" y="547.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (81 samples, 0.38%)</title><rect x="1103.0" y="531.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1106.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.04%)</title><rect x="1103.2" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="1103.2" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.2" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.02%)</title><rect x="1103.4" y="483.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.4" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.02%)</title><rect x="1103.4" y="467.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1106.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (70 samples, 0.32%)</title><rect x="1103.6" y="515.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (40 samples, 0.19%)</title><rect x="1105.3" y="499.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (40 samples, 0.19%)</title><rect x="1105.3" y="483.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.17%)</title><rect x="1105.5" y="467.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.5" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (28 samples, 0.13%)</title><rect x="1105.8" y="451.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1108.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (8 samples, 0.04%)</title><rect x="1107.8" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1110.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.04%)</title><rect x="1107.8" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.04%)</title><rect x="1107.8" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="1107.9" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (75 samples, 0.35%)</title><rect x="1108.2" y="723.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (74 samples, 0.34%)</title><rect x="1108.2" y="707.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (42 samples, 0.19%)</title><rect x="1108.3" y="691.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (24 samples, 0.11%)</title><rect x="1108.3" y="675.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.11%)</title><rect x="1108.3" y="659.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.08%)</title><rect x="1108.6" y="643.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1111.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.08%)</title><rect x="1108.6" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1111.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.08%)</title><rect x="1108.7" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.7" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (15 samples, 0.07%)</title><rect x="1108.8" y="595.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1111.8" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.07%)</title><rect x="1108.8" y="579.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1111.8" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.07%)</title><rect x="1108.8" y="563.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1111.8" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.07%)</title><rect x="1108.8" y="547.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1111.8" y="558.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.07%)</title><rect x="1108.8" y="531.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1111.8" y="542.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.06%)</title><rect x="1108.8" y="515.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1111.8" y="526.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.06%)</title><rect x="1109.0" y="499.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1112.0" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.06%)</title><rect x="1109.0" y="483.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1112.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.05%)</title><rect x="1109.0" y="467.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1112.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.08%)</title><rect x="1109.6" y="675.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1112.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.08%)</title><rect x="1109.6" y="659.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.6" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.02%)</title><rect x="1109.7" y="643.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1112.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.05%)</title><rect x="1110.0" y="643.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1113.0" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.04%)</title><rect x="1110.1" y="627.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1113.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1110.2" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1113.2" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1110.2" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1113.2" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="1110.2" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1113.2" y="590.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.02%)</title><rect x="1110.3" y="563.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.3" y="574.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.02%)</title><rect x="1110.3" y="547.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1113.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (31 samples, 0.14%)</title><rect x="1110.6" y="691.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1113.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (31 samples, 0.14%)</title><rect x="1110.6" y="675.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.14%)</title><rect x="1110.6" y="659.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 0.14%)</title><rect x="1110.6" y="643.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.13%)</title><rect x="1110.7" y="627.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.7" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.02%)</title><rect x="1110.7" y="611.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1113.7" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (24 samples, 0.11%)</title><rect x="1111.0" y="611.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1114.0" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.11%)</title><rect x="1111.0" y="595.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1114.0" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.11%)</title><rect x="1111.0" y="579.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1114.0" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (24 samples, 0.11%)</title><rect x="1111.0" y="563.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1114.0" y="574.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.11%)</title><rect x="1111.0" y="547.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.0" y="558.0"></text>
</g>
<g>
<title>futex_wake (24 samples, 0.11%)</title><rect x="1111.0" y="531.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.0" y="542.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.09%)</title><rect x="1111.2" y="515.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1114.2" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.09%)</title><rect x="1111.2" y="499.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1114.2" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.09%)</title><rect x="1111.2" y="483.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1114.2" y="494.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,347 samples, 6.25%)</title><rect x="1112.5" y="771.0" width="73.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.5" y="782.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (48 samples, 0.22%)</title><rect x="1113.1" y="755.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1116.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (41 samples, 0.19%)</title><rect x="1113.4" y="739.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1116.4" y="750.0"></text>
</g>
<g>
<title>epoll_wait (37 samples, 0.17%)</title><rect x="1113.7" y="723.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1116.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.16%)</title><rect x="1113.8" y="707.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1116.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.16%)</title><rect x="1113.8" y="691.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1116.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (29 samples, 0.13%)</title><rect x="1114.1" y="675.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1117.1" y="686.0"></text>
</g>
<g>
<title>do_epoll_wait (29 samples, 0.13%)</title><rect x="1114.1" y="659.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.02%)</title><rect x="1114.1" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1117.1" y="654.0"></text>
</g>
<g>
<title>ep_poll (24 samples, 0.11%)</title><rect x="1114.4" y="643.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1117.4" y="654.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (16 samples, 0.07%)</title><rect x="1114.7" y="627.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1117.7" y="638.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.06%)</title><rect x="1114.8" y="611.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1117.8" y="622.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (11 samples, 0.05%)</title><rect x="1114.9" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1117.9" y="606.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.04%)</title><rect x="1115.0" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1118.0" y="590.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.03%)</title><rect x="1115.2" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1118.2" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free?[ipv6] (5 samples, 0.02%)</title><rect x="1115.2" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1118.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,288 samples, 5.97%)</title><rect x="1115.7" y="755.0" width="70.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.7" y="766.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,281 samples, 5.94%)</title><rect x="1116.1" y="739.0" width="70.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.1" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,119 samples, 5.19%)</title><rect x="1116.1" y="723.0" width="61.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.1" y="734.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,026 samples, 4.76%)</title><rect x="1116.6" y="707.0" width="56.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.6" y="718.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,023 samples, 4.74%)</title><rect x="1116.7" y="691.0" width="56.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.7" y="702.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,016 samples, 4.71%)</title><rect x="1116.7" y="675.0" width="55.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.7" y="686.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.02%)</title><rect x="1116.7" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.05%)</title><rect x="1117.0" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.05%)</title><rect x="1117.0" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/HttpService.entity (1,001 samples, 4.64%)</title><rect x="1117.5" y="659.0" width="54.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.5" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.entity (1,001 samples, 4.64%)</title><rect x="1117.5" y="643.0" width="54.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.5" y="654.0">ru/ma..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (9 samples, 0.04%)</title><rect x="1117.7" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.04%)</title><rect x="1117.7" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (9 samples, 0.04%)</title><rect x="1117.7" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.04%)</title><rect x="1117.7" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.03%)</title><rect x="1117.8" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.8" y="574.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (7 samples, 0.03%)</title><rect x="1117.8" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (6 samples, 0.03%)</title><rect x="1117.8" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.02%)</title><rect x="1117.9" y="515.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$88/1090963215.apply (5 samples, 0.02%)</title><rect x="1117.9" y="499.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.9" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.02%)</title><rect x="1117.9" y="483.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (198 samples, 0.92%)</title><rect x="1118.2" y="627.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (190 samples, 0.88%)</title><rect x="1118.4" y="611.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.06%)</title><rect x="1118.4" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (178 samples, 0.83%)</title><rect x="1119.1" y="595.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1122.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (178 samples, 0.83%)</title><rect x="1119.1" y="579.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (178 samples, 0.83%)</title><rect x="1119.1" y="563.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (178 samples, 0.83%)</title><rect x="1119.1" y="547.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.1" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.03%)</title><rect x="1119.1" y="531.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1122.1" y="542.0"></text>
</g>
<g>
<title>__libc_send (170 samples, 0.79%)</title><rect x="1119.5" y="531.0" width="9.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1122.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (167 samples, 0.77%)</title><rect x="1119.7" y="515.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.7" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (167 samples, 0.77%)</title><rect x="1119.7" y="499.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1122.7" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (166 samples, 0.77%)</title><rect x="1119.7" y="483.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.7" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (166 samples, 0.77%)</title><rect x="1119.7" y="467.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1122.7" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (160 samples, 0.74%)</title><rect x="1119.9" y="451.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1122.9" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (159 samples, 0.74%)</title><rect x="1120.0" y="435.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1123.0" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (156 samples, 0.72%)</title><rect x="1120.1" y="419.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.1" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (144 samples, 0.67%)</title><rect x="1120.2" y="403.0" width="7.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1123.2" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (144 samples, 0.67%)</title><rect x="1120.2" y="387.0" width="7.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1123.2" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (129 samples, 0.60%)</title><rect x="1120.4" y="371.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1123.4" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (123 samples, 0.57%)</title><rect x="1120.4" y="355.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1123.4" y="366.0"></text>
</g>
<g>
<title>ip_output (120 samples, 0.56%)</title><rect x="1120.6" y="339.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1123.6" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (117 samples, 0.54%)</title><rect x="1120.7" y="323.0" width="6.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1123.7" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.03%)</title><rect x="1120.9" y="307.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1123.9" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (106 samples, 0.49%)</title><rect x="1121.3" y="307.0" width="5.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1124.3" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (105 samples, 0.49%)</title><rect x="1121.3" y="291.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.3" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (104 samples, 0.48%)</title><rect x="1121.4" y="275.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1124.4" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (104 samples, 0.48%)</title><rect x="1121.4" y="259.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1124.4" y="270.0"></text>
</g>
<g>
<title>net_rx_action (103 samples, 0.48%)</title><rect x="1121.4" y="243.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1124.4" y="254.0"></text>
</g>
<g>
<title>process_backlog (102 samples, 0.47%)</title><rect x="1121.5" y="227.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1124.5" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (102 samples, 0.47%)</title><rect x="1121.5" y="211.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv (100 samples, 0.46%)</title><rect x="1121.6" y="195.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1124.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (98 samples, 0.45%)</title><rect x="1121.7" y="179.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1124.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (97 samples, 0.45%)</title><rect x="1121.8" y="163.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1124.8" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (97 samples, 0.45%)</title><rect x="1121.8" y="147.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1124.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (96 samples, 0.45%)</title><rect x="1121.8" y="131.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1124.8" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.03%)</title><rect x="1122.1" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.1" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.03%)</title><rect x="1122.4" y="115.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.4" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (7 samples, 0.03%)</title><rect x="1122.4" y="99.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1125.4" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.03%)</title><rect x="1122.4" y="83.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1125.4" y="94.0"></text>
</g>
<g>
<title>selinux_sock_rcv_skb_compat (5 samples, 0.02%)</title><rect x="1122.5" y="67.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.5" y="78.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (78 samples, 0.36%)</title><rect x="1122.8" y="115.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.8" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (78 samples, 0.36%)</title><rect x="1122.8" y="99.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1125.8" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.02%)</title><rect x="1123.0" y="83.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1126.0" y="94.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.02%)</title><rect x="1123.0" y="67.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1126.0" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (48 samples, 0.22%)</title><rect x="1123.3" y="83.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1126.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (48 samples, 0.22%)</title><rect x="1123.3" y="67.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1126.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (48 samples, 0.22%)</title><rect x="1123.3" y="51.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1126.3" y="62.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.06%)</title><rect x="1125.9" y="83.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1128.9" y="94.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.04%)</title><rect x="1127.5" y="371.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1130.5" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.03%)</title><rect x="1127.6" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1130.6" y="366.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.03%)</title><rect x="1127.6" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1130.6" y="350.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="1128.2" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1131.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.entity (76 samples, 0.35%)</title><rect x="1129.0" y="627.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.03%)</title><rect x="1129.1" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.03%)</title><rect x="1129.1" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.02%)</title><rect x="1129.2" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1132.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService$$Lambda$104/1056165277.accept (5 samples, 0.02%)</title><rect x="1129.2" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.lambda$entity$1 (5 samples, 0.02%)</title><rect x="1129.2" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Utility.sendResponse (5 samples, 0.02%)</title><rect x="1129.2" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/AsyncService.getAsync (59 samples, 0.27%)</title><rect x="1129.5" y="611.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1132.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (55 samples, 0.26%)</title><rect x="1129.7" y="595.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (55 samples, 0.26%)</title><rect x="1129.7" y="579.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (54 samples, 0.25%)</title><rect x="1129.7" y="563.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (54 samples, 0.25%)</title><rect x="1129.7" y="547.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (7 samples, 0.03%)</title><rect x="1129.9" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1132.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.03%)</title><rect x="1129.9" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.03%)</title><rect x="1129.9" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.03%)</title><rect x="1129.9" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (7 samples, 0.03%)</title><rect x="1129.9" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (42 samples, 0.19%)</title><rect x="1130.4" y="531.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (42 samples, 0.19%)</title><rect x="1130.4" y="515.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (42 samples, 0.19%)</title><rect x="1130.4" y="499.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (42 samples, 0.19%)</title><rect x="1130.4" y="483.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (41 samples, 0.19%)</title><rect x="1130.5" y="467.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.5" y="478.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (35 samples, 0.16%)</title><rect x="1130.8" y="451.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1133.8" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.15%)</title><rect x="1130.9" y="435.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1133.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.15%)</title><rect x="1130.9" y="419.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1133.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.15%)</title><rect x="1131.0" y="403.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1134.0" y="414.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.15%)</title><rect x="1131.0" y="387.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1134.0" y="398.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 0.15%)</title><rect x="1131.0" y="371.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1134.0" y="382.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 0.11%)</title><rect x="1131.4" y="355.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1134.4" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 0.10%)</title><rect x="1131.5" y="339.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1134.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.10%)</title><rect x="1131.5" y="323.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1134.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (12 samples, 0.06%)</title><rect x="1133.2" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (12 samples, 0.06%)</title><rect x="1133.2" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService.resolveGetProxyResult (72 samples, 0.33%)</title><rect x="1134.1" y="627.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (25 samples, 0.12%)</title><rect x="1135.8" y="611.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (23 samples, 0.11%)</title><rect x="1135.9" y="595.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (23 samples, 0.11%)</title><rect x="1135.9" y="579.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (23 samples, 0.11%)</title><rect x="1135.9" y="563.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (17 samples, 0.08%)</title><rect x="1136.1" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (17 samples, 0.08%)</title><rect x="1136.1" y="531.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17 samples, 0.08%)</title><rect x="1136.1" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicatedService$$Lambda$230/1347301794.apply (16 samples, 0.07%)</title><rect x="1136.2" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.fromResponse (15 samples, 0.07%)</title><rect x="1136.2" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/s3ponia/Value.getDeadFlagTimeStampFromResponse (15 samples, 0.07%)</title><rect x="1136.2" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (12 samples, 0.06%)</title><rect x="1136.4" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/Header.getHeader (11 samples, 0.05%)</title><rect x="1136.4" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.02%)</title><rect x="1136.7" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.02%)</title><rect x="1136.7" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (6 samples, 0.03%)</title><rect x="1137.2" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parseOrDefault (9 samples, 0.04%)</title><rect x="1138.0" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/s3ponia/ReplicationConfiguration.parse (9 samples, 0.04%)</title><rect x="1138.0" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (6 samples, 0.03%)</title><rect x="1138.2" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (5 samples, 0.02%)</title><rect x="1138.2" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (5 samples, 0.02%)</title><rect x="1138.2" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.02%)</title><rect x="1138.2" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.02%)</title><rect x="1138.2" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (5 samples, 0.02%)</title><rect x="1138.2" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.02%)</title><rect x="1138.2" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.02%)</title><rect x="1138.2" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxyReplicas (617 samples, 2.86%)</title><rect x="1138.5" y="627.0" width="33.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.5" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/util/Proxy.proxy (617 samples, 2.86%)</title><rect x="1138.5" y="611.0" width="33.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.5" y="622.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (617 samples, 2.86%)</title><rect x="1138.5" y="595.0" width="33.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.5" y="606.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (617 samples, 2.86%)</title><rect x="1138.5" y="579.0" width="33.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.5" y="590.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (122 samples, 0.57%)</title><rect x="1138.9" y="563.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.9" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (39 samples, 0.18%)</title><rect x="1140.3" y="547.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.3" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (35 samples, 0.16%)</title><rect x="1140.5" y="531.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.5" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (35 samples, 0.16%)</title><rect x="1140.5" y="515.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1143.5" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (34 samples, 0.16%)</title><rect x="1140.6" y="499.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.6" y="510.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (8 samples, 0.04%)</title><rect x="1140.9" y="483.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.9" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (5 samples, 0.02%)</title><rect x="1141.0" y="467.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.0" y="478.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (21 samples, 0.10%)</title><rect x="1141.3" y="483.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (58 samples, 0.27%)</title><rect x="1142.4" y="547.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.4" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.08%)</title><rect x="1142.9" y="531.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1145.9" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.06%)</title><rect x="1143.1" y="515.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1146.1" y="526.0"></text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (5 samples, 0.02%)</title><rect x="1143.5" y="499.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.5" y="510.0"></text>
</g>
<g>
<title>__libc_recv (29 samples, 0.13%)</title><rect x="1143.9" y="531.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1146.9" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.13%)</title><rect x="1144.0" y="515.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1147.0" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.13%)</title><rect x="1144.0" y="499.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1147.0" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (25 samples, 0.12%)</title><rect x="1144.1" y="483.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1147.1" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (25 samples, 0.12%)</title><rect x="1144.1" y="467.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1147.1" y="478.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (18 samples, 0.08%)</title><rect x="1144.3" y="451.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1147.3" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 0.07%)</title><rect x="1144.4" y="435.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1147.4" y="446.0"></text>
</g>
<g>
<title>sk_wait_data (11 samples, 0.05%)</title><rect x="1144.6" y="419.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1147.6" y="430.0"></text>
</g>
<g>
<title>wait_woken (7 samples, 0.03%)</title><rect x="1144.9" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1147.9" y="414.0"></text>
</g>
<g>
<title>schedule_timeout (7 samples, 0.03%)</title><rect x="1144.9" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1147.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (93 samples, 0.43%)</title><rect x="1145.6" y="563.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.05%)</title><rect x="1145.7" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.02%)</title><rect x="1145.7" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.coder (5 samples, 0.02%)</title><rect x="1145.7" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1148.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.02%)</title><rect x="1146.0" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (51 samples, 0.24%)</title><rect x="1146.3" y="547.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.3" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.18%)</title><rect x="1147.0" y="531.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.0" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.18%)</title><rect x="1147.0" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (11 samples, 0.05%)</title><rect x="1149.1" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (13 samples, 0.06%)</title><rect x="1149.7" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1152.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.05%)</title><rect x="1149.9" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.05%)</title><rect x="1149.9" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1152.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (5 samples, 0.02%)</title><rect x="1150.4" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (30 samples, 0.14%)</title><rect x="1150.7" y="563.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.08%)</title><rect x="1151.4" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.4" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.04%)</title><rect x="1151.4" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1154.4" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.03%)</title><rect x="1151.9" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (33 samples, 0.15%)</title><rect x="1152.4" y="563.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.04%)</title><rect x="1153.4" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.04%)</title><rect x="1153.4" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1156.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (40 samples, 0.19%)</title><rect x="1154.2" y="563.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.2" y="574.0"></text>
</g>
<g>
<title>setsockopt (35 samples, 0.16%)</title><rect x="1154.4" y="547.0" width="1.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1157.4" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.15%)</title><rect x="1154.6" y="531.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.15%)</title><rect x="1154.6" y="515.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1157.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (28 samples, 0.13%)</title><rect x="1154.8" y="499.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1157.8" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (27 samples, 0.13%)</title><rect x="1154.9" y="483.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1157.9" y="494.0"></text>
</g>
<g>
<title>security_socket_setsockopt (9 samples, 0.04%)</title><rect x="1155.0" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1158.0" y="478.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (8 samples, 0.04%)</title><rect x="1155.0" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.0" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.02%)</title><rect x="1155.2" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1158.2" y="446.0"></text>
</g>
<g>
<title>sock_setsockopt (11 samples, 0.05%)</title><rect x="1155.5" y="467.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1158.5" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.02%)</title><rect x="1156.1" y="467.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1159.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (265 samples, 1.23%)</title><rect x="1156.3" y="563.0" width="14.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1159.3" y="574.0"></text>
</g>
<g>
<title>__libc_send (261 samples, 1.21%)</title><rect x="1156.5" y="547.0" width="14.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1159.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (258 samples, 1.20%)</title><rect x="1156.6" y="531.0" width="14.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1159.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (258 samples, 1.20%)</title><rect x="1156.6" y="515.0" width="14.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1159.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (254 samples, 1.18%)</title><rect x="1156.8" y="499.0" width="13.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1159.8" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (251 samples, 1.16%)</title><rect x="1157.0" y="483.0" width="13.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.0" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (249 samples, 1.15%)</title><rect x="1157.1" y="467.0" width="13.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1160.1" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (242 samples, 1.12%)</title><rect x="1157.4" y="451.0" width="13.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.4" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (239 samples, 1.11%)</title><rect x="1157.6" y="435.0" width="13.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.6" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (195 samples, 0.90%)</title><rect x="1158.4" y="419.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1161.4" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (194 samples, 0.90%)</title><rect x="1158.5" y="403.0" width="10.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1161.5" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (180 samples, 0.83%)</title><rect x="1158.6" y="387.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1161.6" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (172 samples, 0.80%)</title><rect x="1158.8" y="371.0" width="9.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1161.8" y="382.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.02%)</title><rect x="1159.0" y="355.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.0" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.02%)</title><rect x="1159.0" y="339.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.0" y="350.0"></text>
</g>
<g>
<title>ip_output (164 samples, 0.76%)</title><rect x="1159.2" y="355.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1162.2" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (160 samples, 0.74%)</title><rect x="1159.4" y="339.0" width="8.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1162.4" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (151 samples, 0.70%)</title><rect x="1159.9" y="323.0" width="8.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1162.9" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (149 samples, 0.69%)</title><rect x="1160.0" y="307.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.0" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (144 samples, 0.67%)</title><rect x="1160.3" y="291.0" width="7.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.3" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (144 samples, 0.67%)</title><rect x="1160.3" y="275.0" width="7.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1163.3" y="286.0"></text>
</g>
<g>
<title>net_rx_action (140 samples, 0.65%)</title><rect x="1160.5" y="259.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.5" y="270.0"></text>
</g>
<g>
<title>process_backlog (138 samples, 0.64%)</title><rect x="1160.6" y="243.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1163.6" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (137 samples, 0.64%)</title><rect x="1160.7" y="227.0" width="7.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1163.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv (136 samples, 0.63%)</title><rect x="1160.7" y="211.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (136 samples, 0.63%)</title><rect x="1160.7" y="195.0" width="7.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (134 samples, 0.62%)</title><rect x="1160.8" y="179.0" width="7.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.8" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (134 samples, 0.62%)</title><rect x="1160.8" y="163.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1163.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (132 samples, 0.61%)</title><rect x="1160.9" y="147.0" width="7.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.9" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.03%)</title><rect x="1161.5" y="131.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1164.5" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.02%)</title><rect x="1161.6" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.6" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (5 samples, 0.02%)</title><rect x="1161.6" y="99.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.6" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (114 samples, 0.53%)</title><rect x="1161.9" y="131.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.9" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (114 samples, 0.53%)</title><rect x="1161.9" y="115.0" width="6.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1164.9" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (77 samples, 0.36%)</title><rect x="1162.1" y="99.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1165.1" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (75 samples, 0.35%)</title><rect x="1162.2" y="83.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1165.2" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (74 samples, 0.34%)</title><rect x="1162.3" y="67.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1165.3" y="78.0"></text>
</g>
<g>
<title>tcp_ack (23 samples, 0.11%)</title><rect x="1166.3" y="99.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1169.3" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.05%)</title><rect x="1166.7" y="83.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1169.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.04%)</title><rect x="1166.9" y="67.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.9" y="78.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.03%)</title><rect x="1168.7" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1171.7" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.02%)</title><rect x="1168.7" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1171.7" y="382.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.02%)</title><rect x="1168.7" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1171.7" y="366.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.05%)</title><rect x="1169.4" y="419.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1172.4" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.04%)</title><rect x="1169.6" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1172.6" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.02%)</title><rect x="1170.2" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.2" y="430.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (13 samples, 0.06%)</title><rect x="1170.8" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.8" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.wait (6 samples, 0.03%)</title><rect x="1171.2" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.2" y="558.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (13 samples, 0.06%)</title><rect x="1171.6" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.notify (6 samples, 0.03%)</title><rect x="1171.9" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.9" y="558.0"></text>
</g>
<g>
<title>JVM_MonitorNotify (6 samples, 0.03%)</title><rect x="1171.9" y="531.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1174.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.02%)</title><rect x="1172.3" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1175.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.02%)</title><rect x="1172.3" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.02%)</title><rect x="1172.3" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.02%)</title><rect x="1172.3" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 0.17%)</title><rect x="1172.7" y="707.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1175.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.09%)</title><rect x="1173.3" y="691.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.07%)</title><rect x="1173.5" y="675.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.03%)</title><rect x="1174.4" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (20 samples, 0.09%)</title><rect x="1174.7" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (19 samples, 0.09%)</title><rect x="1174.7" y="691.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (19 samples, 0.09%)</title><rect x="1174.7" y="675.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.digit (14 samples, 0.06%)</title><rect x="1174.7" y="659.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.digit (14 samples, 0.06%)</title><rect x="1174.7" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.02%)</title><rect x="1175.8" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.10%)</title><rect x="1176.2" y="707.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.10%)</title><rect x="1176.2" y="691.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (160 samples, 0.74%)</title><rect x="1177.4" y="723.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1180.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (155 samples, 0.72%)</title><rect x="1177.7" y="707.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.7" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (21 samples, 0.10%)</title><rect x="1177.8" y="691.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1180.8" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.03%)</title><rect x="1178.5" y="675.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1181.5" y="686.0"></text>
</g>
<g>
<title>__libc_recv (126 samples, 0.58%)</title><rect x="1178.9" y="691.0" width="6.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1181.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (124 samples, 0.58%)</title><rect x="1179.1" y="675.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (124 samples, 0.58%)</title><rect x="1179.1" y="659.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (121 samples, 0.56%)</title><rect x="1179.2" y="643.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1182.2" y="654.0"></text>
</g>
<g>
<title>__sys_recvfrom (121 samples, 0.56%)</title><rect x="1179.2" y="627.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.2" y="638.0"></text>
</g>
<g>
<title>inet6_recvmsg?[ipv6] (107 samples, 0.50%)</title><rect x="1179.5" y="611.0" width="5.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1182.5" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (106 samples, 0.49%)</title><rect x="1179.5" y="595.0" width="5.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.5" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.06%)</title><rect x="1180.9" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1183.9" y="590.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.05%)</title><rect x="1180.9" y="563.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1183.9" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.05%)</title><rect x="1180.9" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.9" y="558.0"></text>
</g>
<g>
<title>dst_release (7 samples, 0.03%)</title><rect x="1181.0" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.0" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (42 samples, 0.19%)</title><rect x="1182.0" y="579.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.0" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (41 samples, 0.19%)</title><rect x="1182.0" y="563.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1185.0" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (15 samples, 0.07%)</title><rect x="1182.9" y="547.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1185.9" y="558.0"></text>
</g>
<g>
<title>copyout (14 samples, 0.06%)</title><rect x="1183.0" y="531.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.0" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_string (14 samples, 0.06%)</title><rect x="1183.0" y="515.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.0" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.04%)</title><rect x="1183.8" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1186.8" y="558.0"></text>
</g>
<g>
<title>__check_object_size (9 samples, 0.04%)</title><rect x="1183.8" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1186.8" y="542.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.04%)</title><rect x="1184.3" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1187.3" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (12 samples, 0.06%)</title><rect x="1184.7" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1187.7" y="590.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.03%)</title><rect x="1185.3" y="611.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1188.3" y="622.0"></text>
</g>
<g>
<title>start_thread (68 samples, 0.32%)</title><rect x="1186.3" y="771.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1189.3" y="782.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (68 samples, 0.32%)</title><rect x="1186.3" y="755.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.3" y="766.0"></text>
</g>
<g>
<title>Thread::call_run() (68 samples, 0.32%)</title><rect x="1186.3" y="739.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>GangWorker::loop() (55 samples, 0.26%)</title><rect x="1186.3" y="723.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.3" y="734.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (49 samples, 0.23%)</title><rect x="1186.4" y="707.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (24 samples, 0.11%)</title><rect x="1186.4" y="691.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>SpinPause (18 samples, 0.08%)</title><rect x="1186.7" y="675.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1189.7" y="686.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (17 samples, 0.08%)</title><rect x="1188.1" y="691.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.1" y="702.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (14 samples, 0.06%)</title><rect x="1188.1" y="675.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.1" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (13 samples, 0.06%)</title><rect x="1188.2" y="659.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.2" y="670.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (13 samples, 0.06%)</title><rect x="1188.2" y="643.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.2" y="654.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (12 samples, 0.06%)</title><rect x="1188.2" y="627.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.2" y="638.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (9 samples, 0.04%)</title><rect x="1188.3" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.3" y="622.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (9 samples, 0.04%)</title><rect x="1188.3" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.3" y="606.0"></text>
</g>
<g>
<title>VMThread::run() (12 samples, 0.06%)</title><rect x="1189.3" y="723.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.3" y="734.0"></text>
</g>
<g>
<title>VMThread::loop() (12 samples, 0.06%)</title><rect x="1189.3" y="707.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.3" y="718.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (9 samples, 0.04%)</title><rect x="1189.4" y="691.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (9 samples, 0.04%)</title><rect x="1189.4" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (9 samples, 0.04%)</title><rect x="1189.4" y="659.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (9 samples, 0.04%)</title><rect x="1189.4" y="643.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (5 samples, 0.02%)</title><rect x="1189.4" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (5 samples, 0.02%)</title><rect x="1189.4" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
</g>
</svg>
